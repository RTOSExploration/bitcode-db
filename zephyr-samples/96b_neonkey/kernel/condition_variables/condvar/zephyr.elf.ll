; ModuleID = 'build/96b_neonkey/condvar/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.k_condvar = type { %struct._wait_q_t }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237816 to i8*), void (i8*)* inttoptr (i32 134236473 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237816 to i8*), void (i8*)* inttoptr (i32 134236453 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237816 to i8*), void (i8*)* inttoptr (i32 134236443 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237816 to i8*), void (i8*)* inttoptr (i32 134236543 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237816 to i8*), void (i8*)* inttoptr (i32 134236533 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237816 to i8*), void (i8*)* inttoptr (i32 134236523 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237816 to i8*), void (i8*)* inttoptr (i32 134236513 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237816 to i8*), void (i8*)* inttoptr (i32 134236503 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237816 to i8*), void (i8*)* inttoptr (i32 134236493 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237816 to i8*), void (i8*)* inttoptr (i32 134236483 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237816 to i8*), void (i8*)* inttoptr (i32 134236463 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.k_mutex* @count_mutex to i8*), i8* bitcast (%struct.k_condvar* @count_threshold_cv to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@count_mutex = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.count_mutex", align 4, !dbg !25
@count_threshold_cv = dso_local global %struct.k_condvar { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) } } } }, section "._k_condvar.static.count_threshold_cv", align 4, !dbg !114
@count = internal unnamed_addr global i32 0, align 4, !dbg !141
@.str = private unnamed_addr constant [47 x i8] c"%s: thread %ld, count = %d  Threshold reached.\00", align 1
@__func__.inc_count = private unnamed_addr constant [10 x i8] c"inc_count\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Just sent signal.\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"%s: thread %ld, count = %d, unlocking mutex\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"Starting %s: thread %ld\0A\00", align 1
@__func__.watch_count = private unnamed_addr constant [12 x i8] c"watch_count\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"%s: thread %ld Count= %d. Going into wait...\0A\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"%s: thread %ld Condition signal received. Count= %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"%s: thread %ld Updating the value of count...\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"%s: thread %ld count now = %d.\0A\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"%s: thread %ld Unlocking mutex.\0A\00", align 1
@t = internal global [3 x %struct.k_thread] zeroinitializer, align 8, !dbg !154
@tstacks = dso_local global [3 x [1088 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !143
@.str.9 = private unnamed_addr constant [77 x i8] c"Main(): Waited and joined with %d threads. Final value of count = %d. Done.\0A\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !269
@.str.1.12 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.13 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.14 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.15 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.16 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.17 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.18 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.19 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.20 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.21 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !295
@.str.26 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !305
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !356
@.str.35 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.37 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.38 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.36 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.40 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.41 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.39 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.42 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.43 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.44 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.45 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.47 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.48 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.49 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.53 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.54 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.55 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.66 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.58 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.59 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.60 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.61 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.62 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.63 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.64 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.65 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26.57 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35.56 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !385
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !519
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.78 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.79 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.80 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.81 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.86 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.87 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !528
@.str.6.88 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.89 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.82 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.83 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !564
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.98, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.99, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !574
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !579
@.str.98 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.99 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.102 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.103 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.104 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !599
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !772
@.str.4.100 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !733
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !716
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.100, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !689
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !705
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !735
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !749
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !751
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !753
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !755
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !757
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !759
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !761
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !763
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !765
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !767
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !777
@.str.105 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !802
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !899
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !888
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !940
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !797
@.str.114 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1006
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1282
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1252
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1238
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1183
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !795
@.str.1.122 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1284
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1256
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1254
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1200
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !793
@.str.2.123 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1297
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1260
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1258
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1206
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !791
@.str.3.124 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1299
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1264
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1262
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1212
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !789
@.str.4.125 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1301
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1268
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1266
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1218
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !787
@.str.5.126 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1303
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1272
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1270
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1224
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !785
@.str.6.127 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1305
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1276
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1274
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1230
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !783
@.str.7.128 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1307
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1280
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1278
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1236
@.str.8.115 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.121 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.117 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.120 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.116 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.118 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.119 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.132 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1309
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !799
@.str.1.135 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1465
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1520
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1463
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1522
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.135, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1454
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1456
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1509
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1512
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1514
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1517
@.str.2.137 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.138 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.139 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.140 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.141 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.144 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.146 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.147 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !872
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1533
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1642
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1644
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1640
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1635
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1609
@.str.151 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.152 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.153 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.154 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.155 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.156 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1646
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1181
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1198
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1204
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1210
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.125, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1216
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.126, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1222
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1228
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1234
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1736
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1778
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1781
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1788
@.str.185 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.189 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.190 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.191 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.195 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.196 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.197 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.198 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.199 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.194 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.193 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.195, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.196, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.197, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.198, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.199, i32 0, i32 0)], align 4
@.str.201 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1795
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2020
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2008
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2015
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2027
@.str.5.207 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2032
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.211 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.217, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.218, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.219, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.221, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.215, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.222, i32 0, i32 0)], align 4, !dbg !2062
@.str.216 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.217 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.218 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.219 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.220 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.221 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.215 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.222 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2177
@.str.8.214 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.225 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.226 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.227 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.228 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.232 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.233 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.236 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.237 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.246 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.247 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.248 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.253 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.254 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.255 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.256 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.257 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2190
@.str.4.265 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.258 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.259 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.260 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.261 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.262 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2301
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2412
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2415
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2417
@.str.266 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.288 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.273 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.295 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.307 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.276 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.302 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.272 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.312 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.313 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.321 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.322 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.323 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.326 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.267 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.268 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.269 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.270 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.271 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.275 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.292 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.303 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.304 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2017
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2025
@.str.23.316 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@lock.331 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2419
@.str.332 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.333 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.334 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.335 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.336 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.337 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.347 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.348 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.349 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.350 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2444
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2474
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2479
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1882
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2477
@.str.4.351 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.352 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.353 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.357 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.358 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.376 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3068 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3072, !srcloc !3073
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3074, !srcloc !3075
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3076, !srcloc !3077
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3078, !srcloc !3079
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3080, !srcloc !3081
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3082, !srcloc !3083
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3084, !srcloc !3085
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3086, !srcloc !3087
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3088, !srcloc !3089
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3090, !srcloc !3091
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3092, !srcloc !3093
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3094, !srcloc !3095
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3096, !srcloc !3097
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3098, !srcloc !3099
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3116, !srcloc !3117
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3118, !srcloc !3119
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3126, !srcloc !3129
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3138, !srcloc !3139
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3176, !srcloc !3177
  ret void, !dbg !3178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @inc_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3181 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3185, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.value(metadata i8* undef, metadata !3186, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.value(metadata i8* undef, metadata !3187, metadata !DIExpression()), !dbg !3190
  %4 = ptrtoint i8* %0 to i32, !dbg !3191
  call void @llvm.dbg.value(metadata i32 %4, metadata !3189, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.value(metadata i32 0, metadata !3188, metadata !DIExpression()), !dbg !3190
  br label %5, !dbg !3192

5:                                                ; preds = %3, %12
  %6 = phi i32 [ 0, %3 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3188, metadata !DIExpression()), !dbg !3190
  tail call fastcc void @k_mutex_lock() #24, !dbg !3194
  %7 = load i32, i32* @count, align 4, !dbg !3197
  %8 = add nsw i32 %7, 1, !dbg !3197
  store i32 %8, i32* @count, align 4, !dbg !3197
  %9 = icmp eq i32 %8, 12, !dbg !3198
  br i1 %9, label %10, label %12, !dbg !3200

10:                                               ; preds = %5
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef 12) #25, !dbg !3201
  tail call fastcc void @k_condvar_signal() #24, !dbg !3203
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3204
  %11 = load i32, i32* @count, align 4, !dbg !3205
  br label %12, !dbg !3206

12:                                               ; preds = %10, %5
  %13 = phi i32 [ %11, %10 ], [ %8, %5 ], !dbg !3205
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef %13) #25, !dbg !3207
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3208
  tail call fastcc void @k_sleep([1 x i64] [i64 5000]) #24, !dbg !3209
  %14 = add nuw nsw i32 %6, 1, !dbg !3210
  call void @llvm.dbg.value(metadata i32 %14, metadata !3188, metadata !DIExpression()), !dbg !3190
  %15 = icmp eq i32 %14, 10, !dbg !3211
  br i1 %15, label %16, label %5, !dbg !3192, !llvm.loop !3212

16:                                               ; preds = %12
  ret void, !dbg !3214
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !3215 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3226, metadata !DIExpression()), !dbg !3227
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3225, metadata !DIExpression()), !dbg !3227
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3228, !srcloc !3230
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3231
  ret void, !dbg !3232
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_signal() unnamed_addr #1 !dbg !3233 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3238, metadata !DIExpression()), !dbg !3239
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3240, !srcloc !3242
  %1 = tail call i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef nonnull @count_threshold_cv) #25, !dbg !3243
  ret void, !dbg !3244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !3245 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3249, metadata !DIExpression()), !dbg !3250
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3251, !srcloc !3253
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @count_mutex) #25, !dbg !3254
  ret void, !dbg !3255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3256 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3260, metadata !DIExpression()), !dbg !3261
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3262, !srcloc !3264
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3265
  ret void, !dbg !3266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @watch_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3267 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3269, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.value(metadata i8* undef, metadata !3270, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.value(metadata i8* undef, metadata !3271, metadata !DIExpression()), !dbg !3273
  %4 = ptrtoint i8* %0 to i32, !dbg !3274
  call void @llvm.dbg.value(metadata i32 %4, metadata !3272, metadata !DIExpression()), !dbg !3273
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3275
  tail call fastcc void @k_mutex_lock() #24, !dbg !3276
  %5 = load i32, i32* @count, align 4, !dbg !3277
  %6 = icmp slt i32 %5, 12, !dbg !3278
  br i1 %6, label %7, label %12, !dbg !3279

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %10, %7 ], [ %5, %3 ]
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %8) #25, !dbg !3280
  tail call fastcc void @k_condvar_wait() #24, !dbg !3282
  %9 = load i32, i32* @count, align 4, !dbg !3283
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %9) #25, !dbg !3284
  %10 = load i32, i32* @count, align 4, !dbg !3277
  %11 = icmp slt i32 %10, 12, !dbg !3278
  br i1 %11, label %7, label %12, !dbg !3279, !llvm.loop !3285

12:                                               ; preds = %7, %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3287
  %13 = load i32, i32* @count, align 4, !dbg !3288
  %14 = add nsw i32 %13, 125, !dbg !3288
  store i32 %14, i32* @count, align 4, !dbg !3288
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %14) #25, !dbg !3289
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3290
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3291
  ret void, !dbg !3292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_wait() unnamed_addr #1 !dbg !3293 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3299, metadata !DIExpression()), !dbg !3300
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3297, metadata !DIExpression()), !dbg !3300
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3298, metadata !DIExpression()), !dbg !3300
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3301, !srcloc !3303
  %1 = tail call i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef nonnull @count_threshold_cv, %struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3304
  ret void, !dbg !3305
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3306 {
  call void @llvm.dbg.value(metadata i32 1, metadata !3308, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.value(metadata i32 2, metadata !3309, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.value(metadata i32 3, metadata !3310, metadata !DIExpression()), !dbg !3312
  store i32 0, i32* @count, align 4, !dbg !3313
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 0), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 0, i32 0), void (i8*, i8*, i8*)* noundef nonnull @watch_count, i8* noundef nonnull inttoptr (i32 1 to i8*)) #24, !dbg !3314
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 1), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 1, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 2 to i8*)) #24, !dbg !3315
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 2), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 2, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 3 to i8*)) #24, !dbg !3316
  call void @llvm.dbg.value(metadata i32 0, metadata !3311, metadata !DIExpression()), !dbg !3312
  br label %1, !dbg !3317

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3311, metadata !DIExpression()), !dbg !3312
  %3 = getelementptr inbounds [3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 %2, !dbg !3319
  tail call fastcc void @k_thread_join(%struct.k_thread* noundef nonnull %3) #24, !dbg !3322
  %4 = add nuw nsw i32 %2, 1, !dbg !3323
  call void @llvm.dbg.value(metadata i32 %4, metadata !3311, metadata !DIExpression()), !dbg !3312
  %5 = icmp eq i32 %4, 3, !dbg !3324
  br i1 %5, label %6, label %1, !dbg !3317, !llvm.loop !3325

6:                                                ; preds = %1
  %7 = load i32, i32* @count, align 4, !dbg !3327
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.9, i32 0, i32 0), i32 noundef 3, i32 noundef %7) #25, !dbg !3328
  ret void, !dbg !3329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3) unnamed_addr #1 !dbg !3330 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3349, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3340, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3341, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata i32 1024, metadata !3342, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !3343, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata i8* %3, metadata !3344, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata i8* null, metadata !3345, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata i8* null, metadata !3346, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata i32 10, metadata !3347, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.value(metadata i32 0, metadata !3348, metadata !DIExpression()), !dbg !3350
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3351, !srcloc !3353
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3, i8* noundef null, i8* noundef null, i32 noundef 10, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3354
  ret void, !dbg !3355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3356 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3361, metadata !DIExpression()), !dbg !3362
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3360, metadata !DIExpression()), !dbg !3362
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3363, !srcloc !3365
  %2 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !3366
  ret void, !dbg !3367
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3368 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3383, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %0, metadata !3379, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %1, metadata !3380, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %2, metadata !3381, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %3, metadata !3382, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %0, metadata !3384, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %0, metadata !3385, metadata !DIExpression()), !dbg !3446
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3447
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3447
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3388, metadata !DIExpression()), !dbg !3448
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3449
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3449
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3390, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 0, metadata !3391, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 0, metadata !3392, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 0, metadata !3393, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 -1, metadata !3394, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 0, metadata !3397, metadata !DIExpression()), !dbg !3446
  %12 = and i32 %2, 4, !dbg !3451
  %13 = icmp eq i32 %12, 0, !dbg !3452
  call void @llvm.dbg.value(metadata i1 %13, metadata !3398, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3446
  %14 = lshr i32 %2, 3, !dbg !3453
  %15 = and i32 %14, 7, !dbg !3453
  %16 = add nuw nsw i32 %15, 1, !dbg !3454
  call void @llvm.dbg.value(metadata i32 %16, metadata !3399, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 0, metadata !3400, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %0, metadata !3401, metadata !DIExpression()), !dbg !3446
  %17 = ptrtoint i8* %0 to i32, !dbg !3455
  %18 = and i32 %17, 3, !dbg !3457
  %19 = icmp eq i32 %18, 0, !dbg !3457
  br i1 %19, label %20, label %320, !dbg !3458

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3459
  call void @llvm.dbg.value(metadata i8* %21, metadata !3385, metadata !DIExpression()), !dbg !3446
  %22 = icmp eq i8* %0, null, !dbg !3460
  %23 = and i32 %1, 7, !dbg !3462
  %24 = sub nuw nsw i32 8, %23, !dbg !3462
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3462
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3462
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3462
  call void @llvm.dbg.value(metadata i32 %27, metadata !3380, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %26, metadata !3385, metadata !DIExpression()), !dbg !3446
  br i1 %22, label %33, label %28, !dbg !3463

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3465
  %30 = sub i32 4, %17, !dbg !3465
  %31 = add i32 %30, %29, !dbg !3466
  %32 = icmp ugt i32 %31, %27, !dbg !3467
  br i1 %32, label %320, label %33, !dbg !3468

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3469
  call void @llvm.dbg.value(metadata i8* %34, metadata !3382, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %3, metadata !3396, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 4, metadata !3387, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 4, metadata !3386, metadata !DIExpression()), !dbg !3446
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3470

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3383, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %42, metadata !3382, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %43, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %44, metadata !3386, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %45, metadata !3387, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %72, metadata !3394, metadata !DIExpression()), !dbg !3446
  br i1 %46, label %73, label %47, !dbg !3471

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3472
  %49 = zext i1 %48 to i32, !dbg !3476
  %50 = add nsw i32 %72, %49, !dbg !3476
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3476
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3476
  call void @llvm.dbg.value(metadata i32 %52, metadata !3386, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %51, metadata !3387, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 poison, metadata !3397, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %50, metadata !3394, metadata !DIExpression()), !dbg !3446
  br label %53, !dbg !3477

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3383, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %40, metadata !3382, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %58, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %57, metadata !3386, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %56, metadata !3387, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 poison, metadata !3397, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %54, metadata !3394, metadata !DIExpression()), !dbg !3446
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3478
  call void @llvm.dbg.value(metadata i8* %60, metadata !3382, metadata !DIExpression()), !dbg !3446
  %61 = load i8, i8* %60, align 1, !dbg !3480
  %62 = icmp eq i8 %61, 0, !dbg !3481
  br i1 %62, label %226, label %63, !dbg !3482, !llvm.loop !3483

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3471

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3486

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3397, metadata !DIExpression()), !dbg !3446
  %75 = add nsw i32 %72, -1, !dbg !3487
  call void @llvm.dbg.value(metadata i32 %75, metadata !3394, metadata !DIExpression()), !dbg !3446
  br label %53, !dbg !3488

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3489

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3387, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 4, metadata !3386, metadata !DIExpression()), !dbg !3446
  br label %53, !dbg !3490

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3387, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 4, metadata !3386, metadata !DIExpression()), !dbg !3446
  br label %53, !dbg !3491

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3492
  %81 = icmp eq i8 %80, 108, !dbg !3494
  br i1 %81, label %82, label %109, !dbg !3495

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3496
  %84 = load i8, i8* %83, align 1, !dbg !3496
  %85 = icmp eq i8 %84, 108, !dbg !3499
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3500
  %89 = add i32 %88, 7, !dbg !3500
  %90 = and i32 %89, -8, !dbg !3500
  %91 = inttoptr i32 %90 to i8*, !dbg !3500
  %92 = inttoptr i32 %90 to double*, !dbg !3500
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3500
  %94 = load double, double* %92, align 8, !dbg !3500
  call void @llvm.dbg.value(metadata i8* %93, metadata !3383, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 8, metadata !3386, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 8, metadata !3387, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata double %94, metadata !3414, metadata !DIExpression()), !dbg !3502
  %95 = ptrtoint i8* %43 to i32, !dbg !3503
  %96 = add i32 %95, 7, !dbg !3503
  %97 = and i32 %96, -8, !dbg !3503
  %98 = inttoptr i32 %97 to i8*, !dbg !3504
  call void @llvm.dbg.value(metadata i8* %98, metadata !3385, metadata !DIExpression()), !dbg !3446
  br i1 %22, label %104, label %99, !dbg !3505

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3506
  %101 = icmp ugt i32 %100, %196, !dbg !3510
  br i1 %101, label %320, label %102, !dbg !3511

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3512
  store double %94, double* %103, align 8, !dbg !3512
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3515
  call void @llvm.dbg.value(metadata i8* %105, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 poison, metadata !3397, metadata !DIExpression()), !dbg !3446
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3397, metadata !DIExpression()), !dbg !3446
  br label %53, !dbg !3516

107:                                              ; preds = %73, %73
  br label %109, !dbg !3517

108:                                              ; preds = %73
  br label %109, !dbg !3517

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3446
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3446
  call void @llvm.dbg.value(metadata i32 %113, metadata !3386, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %112, metadata !3387, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 poison, metadata !3400, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 poison, metadata !3397, metadata !DIExpression()), !dbg !3446
  %114 = ptrtoint i8* %43 to i32, !dbg !3517
  %115 = add i32 %114, -1, !dbg !3517
  %116 = add i32 %115, %112, !dbg !3517
  %117 = sub i32 0, %112, !dbg !3517
  %118 = and i32 %116, %117, !dbg !3517
  %119 = inttoptr i32 %118 to i8*, !dbg !3518
  call void @llvm.dbg.value(metadata i8* %119, metadata !3385, metadata !DIExpression()), !dbg !3446
  br i1 %22, label %124, label %120, !dbg !3519

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3521
  %122 = add i32 %121, %118, !dbg !3522
  %123 = icmp ugt i32 %122, %196, !dbg !3523
  br i1 %123, label %320, label %124, !dbg !3524

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3525

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3518
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3526
  call void @llvm.dbg.value(metadata i8* %127, metadata !3383, metadata !DIExpression()), !dbg !3446
  %128 = bitcast i8* %41 to i8**, !dbg !3526
  %129 = load i8*, i8** %128, align 4, !dbg !3526
  call void @llvm.dbg.value(metadata i8* %129, metadata !3396, metadata !DIExpression()), !dbg !3446
  br label %130, !dbg !3527

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3446
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3528
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3446
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3529
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3446
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3446
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3446
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3446
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3446
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3446
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3530
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3383, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %142, metadata !3380, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %141, metadata !3382, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %140, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %139, metadata !3386, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %138, metadata !3387, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %137, metadata !3391, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %136, metadata !3399, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %135, metadata !3392, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 poison, metadata !3397, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %133, metadata !3396, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %132, metadata !3394, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %131, metadata !3393, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.label(metadata !3445), !dbg !3532
  br i1 %22, label %146, label %144, !dbg !3533

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3534
  store i8* %133, i8** %145, align 4, !dbg !3537
  br label %146, !dbg !3538

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3539
  call void @llvm.dbg.value(metadata i32 %147, metadata !3399, metadata !DIExpression()), !dbg !3446
  %148 = icmp sgt i32 %136, 0, !dbg !3540
  br i1 %148, label %152, label %149, !dbg !3541

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3542
  %151 = zext i1 %150 to i32, !dbg !3542
  br label %152, !dbg !3541

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3541
  %154 = icmp eq i32 %153, 0, !dbg !3541
  call void @llvm.dbg.value(metadata i1 %154, metadata !3423, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3543
  call void @llvm.dbg.value(metadata i1 %36, metadata !3426, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3543
  %155 = or i1 %36, %154, !dbg !3544
  br i1 %155, label %156, label %192, !dbg !3544

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3545
  %158 = sub i32 %157, %17, !dbg !3545
  %159 = lshr i32 %158, 2, !dbg !3546
  call void @llvm.dbg.value(metadata i32 %159, metadata !3427, metadata !DIExpression()), !dbg !3547
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3548
  br i1 %161, label %162, label %163, !dbg !3548

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3550
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.15, i32 0, i32 0)) #25, !dbg !3550
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3550
  unreachable, !dbg !3550

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3555
  br i1 %164, label %165, label %166, !dbg !3557

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3558
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.16, i32 0, i32 0)) #25, !dbg !3558
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3558
  unreachable, !dbg !3558

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3563

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3564
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3567
  store i8 %168, i8* %169, align 1, !dbg !3568
  %170 = trunc i32 %132 to i8, !dbg !3569
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3570
  store i8 %170, i8* %171, align 1, !dbg !3571
  br i1 %154, label %175, label %172, !dbg !3572

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3573
  store i8 %173, i8* %169, align 1, !dbg !3573
  %174 = add i32 %131, 1, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %174, metadata !3393, metadata !DIExpression()), !dbg !3446
  br label %187, !dbg !3577

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3578
  call void @llvm.dbg.value(metadata i32 %176, metadata !3392, metadata !DIExpression()), !dbg !3446
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3580

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3581
  call void @llvm.dbg.value(metadata i32 %179, metadata !3380, metadata !DIExpression()), !dbg !3446
  br label %187, !dbg !3584

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3585

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3586
  call void @llvm.dbg.value(metadata i32 %182, metadata !3380, metadata !DIExpression()), !dbg !3446
  br label %187, !dbg !3589

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3590
  %185 = add i32 %142, 2, !dbg !3592
  %186 = add i32 %185, %184, !dbg !3593
  call void @llvm.dbg.value(metadata i32 %186, metadata !3380, metadata !DIExpression()), !dbg !3446
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3446
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3446
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3446
  call void @llvm.dbg.value(metadata i32 %190, metadata !3380, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %189, metadata !3392, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %188, metadata !3393, metadata !DIExpression()), !dbg !3446
  %191 = add nuw nsw i32 %137, 1, !dbg !3594
  call void @llvm.dbg.value(metadata i32 %191, metadata !3391, metadata !DIExpression()), !dbg !3446
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3446
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3529
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3446
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3530
  call void @llvm.dbg.value(metadata i32 %196, metadata !3380, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %195, metadata !3391, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %194, metadata !3392, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %193, metadata !3393, metadata !DIExpression()), !dbg !3446
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3595
  call void @llvm.dbg.value(metadata i8* %197, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %143, metadata !3383, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %141, metadata !3382, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %139, metadata !3386, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %138, metadata !3387, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 poison, metadata !3400, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 poison, metadata !3397, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %132, metadata !3394, metadata !DIExpression()), !dbg !3446
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3478
  call void @llvm.dbg.value(metadata i8* %198, metadata !3382, metadata !DIExpression()), !dbg !3446
  %199 = load i8, i8* %198, align 1, !dbg !3480
  %200 = icmp eq i8 %199, 0, !dbg !3481
  br i1 %200, label %226, label %63, !dbg !3482

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3596

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3597
  call void @llvm.dbg.value(metadata i8* %203, metadata !3383, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 undef, metadata !3430, metadata !DIExpression()), !dbg !3598
  br i1 %22, label %219, label %204, !dbg !3599

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3597
  %206 = load i32, i32* %205, align 4, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %206, metadata !3430, metadata !DIExpression()), !dbg !3598
  %207 = inttoptr i32 %118 to i32*, !dbg !3600
  store i32 %206, i32* %207, align 4, !dbg !3603
  br label %219, !dbg !3604

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3605
  %210 = add i32 %209, 7, !dbg !3605
  %211 = and i32 %210, -8, !dbg !3605
  %212 = inttoptr i32 %211 to i8*, !dbg !3605
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3605
  call void @llvm.dbg.value(metadata i8* %213, metadata !3383, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i64 undef, metadata !3436, metadata !DIExpression()), !dbg !3606
  br i1 %22, label %219, label %214, !dbg !3607

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3605
  %216 = load i64, i64* %215, align 8, !dbg !3605
  call void @llvm.dbg.value(metadata i64 %216, metadata !3436, metadata !DIExpression()), !dbg !3606
  %217 = inttoptr i32 %118 to i64*, !dbg !3608
  store i64 %216, i64* %217, align 8, !dbg !3613
  br label %219, !dbg !3614

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3615
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.17, i32 0, i32 0), i32 noundef %113) #25, !dbg !3615
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3615
  unreachable, !dbg !3615

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3620
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3620
  call void @llvm.dbg.value(metadata i8* %221, metadata !3383, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %40, metadata !3382, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %222, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %113, metadata !3386, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %112, metadata !3387, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 poison, metadata !3400, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8 poison, metadata !3397, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %72, metadata !3394, metadata !DIExpression()), !dbg !3446
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3478
  call void @llvm.dbg.value(metadata i8* %223, metadata !3382, metadata !DIExpression()), !dbg !3446
  %224 = load i8, i8* %223, align 1, !dbg !3480
  %225 = icmp eq i8 %224, 0, !dbg !3481
  br i1 %225, label %226, label %38, !dbg !3482

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3621
  %228 = ptrtoint i8* %227 to i32, !dbg !3622
  %229 = sub i32 %228, %17, !dbg !3622
  %230 = lshr i32 %229, 2, !dbg !3624
  %231 = icmp ugt i32 %229, 1023, !dbg !3625
  br i1 %231, label %232, label %233, !dbg !3626

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3627
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.18, i32 0, i32 0)) #25, !dbg !3627
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3627
  unreachable, !dbg !3627

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3632

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3633
  %236 = add i32 %235, %229, !dbg !3636
  br label %320, !dbg !3637

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3638
  store i8 %238, i8* %0, align 1, !dbg !3639
  %239 = trunc i32 %194 to i8, !dbg !3640
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3642
  store i8 %240, i8* %242, align 1, !dbg !3644
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3645
  store i8 %241, i8* %243, align 1, !dbg !3646
  %244 = trunc i32 %193 to i8, !dbg !3647
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3648
  store i8 %244, i8* %245, align 1, !dbg !3649
  %246 = icmp eq i32 %193, 0, !dbg !3650
  %247 = xor i1 %246, true, !dbg !3651
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3651
  call void @llvm.dbg.value(metadata i8* %227, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 0, metadata !3395, metadata !DIExpression()), !dbg !3446
  br i1 %249, label %250, label %269, !dbg !3651

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3652

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %254, metadata !3395, metadata !DIExpression()), !dbg !3446
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3653
  %256 = load i8, i8* %255, align 1, !dbg !3653
  %257 = icmp sgt i8 %256, -1, !dbg !3655
  br i1 %257, label %265, label %258, !dbg !3656

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3439, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3657
  %259 = ptrtoint i8* %253 to i32, !dbg !3658
  %260 = add i32 %251, %259, !dbg !3660
  %261 = icmp ugt i32 %260, %196, !dbg !3661
  br i1 %261, label %320, label %262, !dbg !3662

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3663
  call void @llvm.dbg.value(metadata i8 %263, metadata !3439, metadata !DIExpression()), !dbg !3657
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3664
  call void @llvm.dbg.value(metadata i8* %264, metadata !3385, metadata !DIExpression()), !dbg !3446
  store i8 %263, i8* %253, align 1, !dbg !3665
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3595
  call void @llvm.dbg.value(metadata i8* %266, metadata !3385, metadata !DIExpression()), !dbg !3446
  %267 = add nuw i32 %254, 1, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %267, metadata !3395, metadata !DIExpression()), !dbg !3446
  %268 = icmp eq i32 %267, %195, !dbg !3667
  br i1 %268, label %269, label %252, !dbg !3652, !llvm.loop !3668

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3595
  call void @llvm.dbg.value(metadata i8* %270, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 0, metadata !3395, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %133, metadata !3396, metadata !DIExpression()), !dbg !3446
  %271 = icmp eq i32 %195, 0, !dbg !3670
  br i1 %271, label %316, label %272, !dbg !3673

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3673

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %276, metadata !3396, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %277, metadata !3395, metadata !DIExpression()), !dbg !3446
  br i1 %246, label %282, label %278, !dbg !3674

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3677
  %280 = load i8, i8* %279, align 1, !dbg !3677
  %281 = icmp sgt i8 %280, -1, !dbg !3678
  br i1 %281, label %282, label %311, !dbg !3679

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3680

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3386, metadata !DIExpression()), !dbg !3446
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3681
  %285 = load i8, i8* %284, align 1, !dbg !3681
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3684
  call void @llvm.dbg.value(metadata i8* %286, metadata !3385, metadata !DIExpression()), !dbg !3446
  store i8 %285, i8* %275, align 1, !dbg !3685
  br label %297, !dbg !3686

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3687
  %289 = load i8, i8* %288, align 1, !dbg !3687
  %290 = zext i8 %289 to i32, !dbg !3687
  %291 = shl nuw nsw i32 %290, 2, !dbg !3689
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3690
  %293 = bitcast i8* %292 to i8**, !dbg !3691
  %294 = load i8*, i8** %293, align 4, !dbg !3691
  call void @llvm.dbg.value(metadata i8* %294, metadata !3396, metadata !DIExpression()), !dbg !3446
  store i8* null, i8** %293, align 4, !dbg !3692
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3693
  %296 = add i32 %295, 1, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %296, metadata !3386, metadata !DIExpression()), !dbg !3446
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3446
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3695
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3446
  call void @llvm.dbg.value(metadata i8* %300, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i32 %299, metadata !3386, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %298, metadata !3396, metadata !DIExpression()), !dbg !3446
  %301 = ptrtoint i8* %300 to i32, !dbg !3696
  %302 = add i32 %273, %299, !dbg !3698
  %303 = add i32 %302, %301, !dbg !3699
  %304 = icmp ugt i32 %303, %196, !dbg !3700
  br i1 %304, label %320, label %305, !dbg !3701

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3702
  %307 = load i8, i8* %306, align 1, !dbg !3702
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3703
  call void @llvm.dbg.value(metadata i8* %308, metadata !3385, metadata !DIExpression()), !dbg !3446
  store i8 %307, i8* %300, align 1, !dbg !3704
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3705
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3706
  call void @llvm.dbg.value(metadata i8* %310, metadata !3385, metadata !DIExpression()), !dbg !3446
  br label %311, !dbg !3707

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3708
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3446
  call void @llvm.dbg.value(metadata i8* %313, metadata !3385, metadata !DIExpression()), !dbg !3446
  call void @llvm.dbg.value(metadata i8* %312, metadata !3396, metadata !DIExpression()), !dbg !3446
  %314 = add nuw i32 %277, 1, !dbg !3709
  call void @llvm.dbg.value(metadata i32 %314, metadata !3395, metadata !DIExpression()), !dbg !3446
  %315 = icmp eq i32 %314, %195, !dbg !3670
  br i1 %315, label %316, label %274, !dbg !3673, !llvm.loop !3710

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3595
  %318 = ptrtoint i8* %317 to i32, !dbg !3712
  %319 = sub i32 %318, %17, !dbg !3712
  br label %320, !dbg !3713

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3714
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3714
  ret i32 %321, !dbg !3714
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3715 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3719, metadata !DIExpression()), !dbg !3720
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3721
  ret i1 %2, !dbg !3722
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3723 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3728, metadata !DIExpression()), !dbg !3729
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3730
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3731
  %4 = and i1 %2, %3, !dbg !3731
  ret i1 %4, !dbg !3732
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3733 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3737, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata i32 %1, metadata !3738, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata i32 %2, metadata !3739, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata i8* %3, metadata !3740, metadata !DIExpression()), !dbg !3743
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3744
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3744
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3741, metadata !DIExpression()), !dbg !3745
  call void @llvm.va_start(i8* nonnull %6), !dbg !3746
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3747
  %8 = load i32, i32* %7, align 4, !dbg !3747
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3747
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3747
  call void @llvm.dbg.value(metadata i32 %10, metadata !3742, metadata !DIExpression()), !dbg !3743
  call void @llvm.va_end(i8* nonnull %6), !dbg !3748
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3749
  ret i32 %10, !dbg !3750
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3751 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3763, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3764, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata i8* %2, metadata !3765, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata i8* %3, metadata !3766, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata i8* %3, metadata !3767, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata i8* %3, metadata !3768, metadata !DIExpression()), !dbg !3782
  %5 = icmp eq i8* %3, null, !dbg !3783
  br i1 %5, label %45, label %6, !dbg !3785

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3777, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3782
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3786
  %8 = load i8, i8* %7, align 1, !dbg !3786
  %9 = zext i8 %8 to i32, !dbg !3787
  call void @llvm.dbg.value(metadata i32 %9, metadata !3778, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata i8 undef, metadata !3779, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3782
  call void @llvm.dbg.value(metadata i8 undef, metadata !3780, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3782
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3782
  call void @llvm.dbg.value(metadata i32 0, metadata !3776, metadata !DIExpression()), !dbg !3782
  %10 = icmp eq i8 %8, 0, !dbg !3788
  br i1 %10, label %39, label %11, !dbg !3791

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3792
  call void @llvm.dbg.value(metadata i8 %12, metadata !3777, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3782
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3782
  %13 = zext i8 %12 to i32, !dbg !3793
  call void @llvm.dbg.value(metadata i32 %13, metadata !3777, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3782
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3782
  %14 = shl nuw nsw i32 %13, 2, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %14, metadata !3777, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3782
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3795
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3782
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3796
  %17 = load i8, i8* %16, align 1, !dbg !3796
  call void @llvm.dbg.value(metadata i8 %17, metadata !3779, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3782
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3782
  %18 = zext i8 %17 to i32, !dbg !3797
  call void @llvm.dbg.value(metadata i32 %18, metadata !3779, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3782
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3798
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3782
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3799
  %21 = load i8, i8* %20, align 1, !dbg !3799
  call void @llvm.dbg.value(metadata i8 %21, metadata !3780, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3782
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3782
  %22 = zext i8 %21 to i32, !dbg !3800
  call void @llvm.dbg.value(metadata i32 %22, metadata !3780, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3782
  %23 = shl nuw nsw i32 %22, 1, !dbg !3801
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3782
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3802
  call void @llvm.dbg.value(metadata i8* %24, metadata !3774, metadata !DIExpression()), !dbg !3782
  br label %25, !dbg !3791

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3774, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata i32 %27, metadata !3776, metadata !DIExpression()), !dbg !3782
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3803
  call void @llvm.dbg.value(metadata i8* %28, metadata !3774, metadata !DIExpression()), !dbg !3782
  %29 = load i8, i8* %26, align 1, !dbg !3805
  %30 = zext i8 %29 to i32, !dbg !3805
  call void @llvm.dbg.value(metadata i32 %30, metadata !3781, metadata !DIExpression()), !dbg !3782
  %31 = shl nuw nsw i32 %30, 2, !dbg !3806
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3807
  %33 = bitcast i8* %32 to i8**, !dbg !3808
  call void @llvm.dbg.value(metadata i8** %33, metadata !3775, metadata !DIExpression()), !dbg !3782
  store i8* %28, i8** %33, align 4, !dbg !3809
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3810
  %35 = add i32 %34, 1, !dbg !3811
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3812
  call void @llvm.dbg.value(metadata i8* %36, metadata !3774, metadata !DIExpression()), !dbg !3782
  %37 = add nuw nsw i32 %27, 1, !dbg !3813
  call void @llvm.dbg.value(metadata i32 %37, metadata !3776, metadata !DIExpression()), !dbg !3782
  %38 = icmp eq i32 %37, %9, !dbg !3788
  br i1 %38, label %39, label %25, !dbg !3791, !llvm.loop !3814

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3816
  call void @llvm.dbg.value(metadata i8* %40, metadata !3767, metadata !DIExpression()), !dbg !3782
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3817
  %42 = bitcast i8* %41 to i8**, !dbg !3817
  %43 = load i8*, i8** %42, align 1, !dbg !3817
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3818
  br label %45, !dbg !3819

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3782
  ret i32 %46, !dbg !3820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3821 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3825, metadata !DIExpression()), !dbg !3835
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3826, metadata !DIExpression()), !dbg !3835
  call void @llvm.dbg.value(metadata i8* %2, metadata !3827, metadata !DIExpression()), !dbg !3835
  call void @llvm.dbg.value(metadata i8* %3, metadata !3828, metadata !DIExpression()), !dbg !3835
  call void @llvm.dbg.value(metadata i8* %4, metadata !3829, metadata !DIExpression()), !dbg !3835
  call void @llvm.dbg.value(metadata i8* %4, metadata !3830, metadata !DIExpression()), !dbg !3835
  %6 = ptrtoint i8* %4 to i32, !dbg !3836
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3836
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3836
  ret i32 %8, !dbg !3837
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3838 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3842, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i32 %1, metadata !3843, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i8 0, metadata !3845, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i32 0, metadata !3846, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i8 poison, metadata !3845, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i8* %0, metadata !3842, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3847
  %3 = load i8, i8* %0, align 1, !dbg !3848
  call void @llvm.dbg.value(metadata i8 %3, metadata !3844, metadata !DIExpression()), !dbg !3847
  %4 = icmp eq i8 %3, 0, !dbg !3849
  br i1 %4, label %29, label %5, !dbg !3850

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3851
  call void @llvm.dbg.value(metadata i32 %8, metadata !3846, metadata !DIExpression()), !dbg !3847
  br i1 %9, label %11, label %22, !dbg !3852

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3854
  br i1 %12, label %13, label %17, !dbg !3858

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3859
  br i1 %14, label %29, label %15, !dbg !3862

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3863
  br i1 %16, label %29, label %22, !dbg !3865

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3866
  %19 = xor i1 %18, true, !dbg !3868
  %20 = zext i1 %18 to i32, !dbg !3868
  %21 = add nsw i32 %8, %20, !dbg !3868
  br label %22, !dbg !3868

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3847
  call void @llvm.dbg.value(metadata i32 %24, metadata !3846, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i8 poison, metadata !3845, metadata !DIExpression()), !dbg !3847
  %25 = icmp eq i8 %6, 37, !dbg !3869
  %26 = xor i1 %25, %23, !dbg !3871
  call void @llvm.dbg.value(metadata i8* %10, metadata !3842, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i8* %10, metadata !3842, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3847
  %27 = load i8, i8* %10, align 1, !dbg !3848
  call void @llvm.dbg.value(metadata i8 %27, metadata !3844, metadata !DIExpression()), !dbg !3847
  %28 = icmp eq i8 %27, 0, !dbg !3849
  br i1 %28, label %29, label %5, !dbg !3850, !llvm.loop !3872

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3847
  ret i1 %30, !dbg !3874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3875 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3879, metadata !DIExpression()), !dbg !3880
  %2 = add i8 %0, -64, !dbg !3881
  %3 = icmp ult i8 %2, 59, !dbg !3881
  ret i1 %3, !dbg !3882
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3883 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3891, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %1, metadata !3892, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3893, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8* %3, metadata !3894, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %4, metadata !3895, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i16* %5, metadata !3896, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %6, metadata !3897, metadata !DIExpression()), !dbg !3960
  %11 = icmp eq i8* %0, null, !dbg !3961
  br i1 %11, label %12, label %13, !dbg !3964

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !3965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !3965
  unreachable, !dbg !3965

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3898, metadata !DIExpression()), !dbg !3960
  %14 = bitcast i8* %0 to i32*, !dbg !3967
  call void @llvm.dbg.value(metadata i32* %14, metadata !3899, metadata !DIExpression()), !dbg !3960
  %15 = and i32 %4, 8, !dbg !3968
  %16 = icmp eq i32 %15, 0, !dbg !3969
  call void @llvm.dbg.value(metadata i1 %16, metadata !3903, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3960
  call void @llvm.dbg.value(metadata i8* %0, metadata !3906, metadata !DIExpression()), !dbg !3960
  %17 = icmp eq i32 %1, 0, !dbg !3970
  br i1 %17, label %18, label %20, !dbg !3971

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3972
  br label %20, !dbg !3971

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3971
  call void @llvm.dbg.value(metadata i32 %21, metadata !3892, metadata !DIExpression()), !dbg !3960
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3973
  %23 = load i8, i8* %22, align 1, !dbg !3973
  %24 = zext i8 %23 to i32, !dbg !3974
  call void @llvm.dbg.value(metadata i32 %24, metadata !3901, metadata !DIExpression()), !dbg !3960
  %25 = icmp ne i8 %23, 0, !dbg !3975
  %26 = and i32 %4, 1, !dbg !3976
  %27 = icmp ne i32 %26, 0, !dbg !3976
  %28 = and i1 %27, %25, !dbg !3976
  call void @llvm.dbg.value(metadata i1 %28, metadata !3905, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3960
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3977
  %30 = load i8, i8* %29, align 1, !dbg !3977
  %31 = zext i8 %30 to i32, !dbg !3978
  call void @llvm.dbg.value(metadata i32 %31, metadata !3902, metadata !DIExpression()), !dbg !3960
  %32 = icmp ne i8 %30, 0, !dbg !3979
  %33 = and i32 %4, 2, !dbg !3980
  %34 = icmp ne i32 %33, 0, !dbg !3980
  %35 = and i1 %34, %32, !dbg !3980
  call void @llvm.dbg.value(metadata i1 %35, metadata !3904, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3960
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3981
  br i1 %36, label %41, label %37, !dbg !3981

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3983
  br i1 %38, label %287, label %39, !dbg !3986

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3987
  br label %287, !dbg !3989

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3990
  %43 = zext i8 %42 to i32, !dbg !3991
  %44 = shl nuw nsw i32 %43, 2, !dbg !3992
  call void @llvm.dbg.value(metadata i32 %44, metadata !3900, metadata !DIExpression()), !dbg !3960
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3993
  %46 = bitcast i8* %45 to i8**, !dbg !3994
  %47 = load i8*, i8** %46, align 4, !dbg !3994
  call void @llvm.dbg.value(metadata i8* %47, metadata !3909, metadata !DIExpression()), !dbg !3960
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3995
  call void @llvm.dbg.value(metadata i8* %48, metadata !3910, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 0, metadata !3911, metadata !DIExpression()), !dbg !3960
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3996
  br i1 %49, label %50, label %135, !dbg !3997

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3908, metadata !DIExpression()), !dbg !3960
  br i1 %28, label %51, label %76, !dbg !3998

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3908, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8* %48, metadata !3910, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 0, metadata !3911, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 0, metadata !3912, metadata !DIExpression()), !dbg !3999
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4000

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3908, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8* %55, metadata !3910, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %56, metadata !3911, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %57, metadata !3912, metadata !DIExpression()), !dbg !3999
  %58 = load i8, i8* %55, align 1, !dbg !4001
  %59 = zext i8 %58 to i32, !dbg !4002
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4002
  %61 = bitcast i32* %60 to i8**, !dbg !4003
  %62 = load i8*, i8** %61, align 4, !dbg !4003
  call void @llvm.dbg.value(metadata i8* %62, metadata !3918, metadata !DIExpression()), !dbg !4004
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !4005
  call void @llvm.dbg.value(metadata i32 %63, metadata !3921, metadata !DIExpression()), !dbg !4004
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4006
  br i1 %65, label %66, label %70, !dbg !4006

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4008
  %68 = add nuw i32 %56, 1, !dbg !4010
  call void @llvm.dbg.value(metadata i32 %68, metadata !3911, metadata !DIExpression()), !dbg !3960
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4011
  store i16 %67, i16* %69, align 2, !dbg !4012
  br label %70, !dbg !4013

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3960
  call void @llvm.dbg.value(metadata i32 %71, metadata !3911, metadata !DIExpression()), !dbg !3960
  %72 = add nsw i32 %63, %54, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %72, metadata !3908, metadata !DIExpression()), !dbg !3960
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4015
  call void @llvm.dbg.value(metadata i8* %73, metadata !3910, metadata !DIExpression()), !dbg !3960
  %74 = add nuw nsw i32 %57, 1, !dbg !4016
  call void @llvm.dbg.value(metadata i32 %74, metadata !3912, metadata !DIExpression()), !dbg !3999
  %75 = icmp eq i32 %74, %24, !dbg !4017
  br i1 %75, label %82, label %53, !dbg !4000, !llvm.loop !4018

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4020
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4020
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4020
  br label %82, !dbg !4020

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4023
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3960
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4024
  call void @llvm.dbg.value(metadata i1 undef, metadata !3922, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4025
  call void @llvm.dbg.value(metadata i32 0, metadata !3923, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.value(metadata i32 %85, metadata !3908, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8* %84, metadata !3910, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %83, metadata !3911, metadata !DIExpression()), !dbg !3960
  %86 = icmp eq i8 %30, 0, !dbg !4027
  br i1 %86, label %287, label %87, !dbg !4028

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4029
  %89 = icmp eq i32 %88, 0, !dbg !4030
  call void @llvm.dbg.value(metadata i1 %89, metadata !3922, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4025
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4028

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3908, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8* %96, metadata !3910, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %97, metadata !3911, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %98, metadata !3923, metadata !DIExpression()), !dbg !4026
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4031
  call void @llvm.dbg.value(metadata i8* %99, metadata !3910, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8 undef, metadata !3925, metadata !DIExpression()), !dbg !4032
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4033
  call void @llvm.dbg.value(metadata i8* %100, metadata !3910, metadata !DIExpression()), !dbg !3960
  %101 = load i8, i8* %99, align 1, !dbg !4034
  call void @llvm.dbg.value(metadata i8 %101, metadata !3928, metadata !DIExpression()), !dbg !4032
  %102 = zext i8 %101 to i32, !dbg !4035
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4035
  %104 = bitcast i32* %103 to i8**, !dbg !4036
  %105 = load i8*, i8** %104, align 4, !dbg !4036
  call void @llvm.dbg.value(metadata i8* %105, metadata !3929, metadata !DIExpression()), !dbg !4032
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4037
  call void @llvm.dbg.value(metadata i1 %106, metadata !3930, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4032
  br i1 %16, label %113, label %107, !dbg !4038

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4040
  call void @llvm.dbg.value(metadata i8 %108, metadata !3925, metadata !DIExpression()), !dbg !4032
  %109 = zext i8 %108 to i32, !dbg !4041
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4042
  br i1 %110, label %111, label %113, !dbg !4043

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.20, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4044
  %112 = add nsw i32 %95, -2, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %112, metadata !3908, metadata !DIExpression()), !dbg !3960
  br label %130, !dbg !4051

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4052

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4053

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4055
  call void @llvm.dbg.value(metadata i32 %116, metadata !3908, metadata !DIExpression()), !dbg !3960
  br label %130, !dbg !4058

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4059

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3956), !dbg !4060
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %119, metadata !3931, metadata !DIExpression()), !dbg !4032
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4062
  br i1 %121, label %122, label %126, !dbg !4062

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4064
  %124 = add nuw i32 %97, 1, !dbg !4066
  call void @llvm.dbg.value(metadata i32 %124, metadata !3911, metadata !DIExpression()), !dbg !3960
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4067
  store i16 %123, i16* %125, align 2, !dbg !4068
  br label %126, !dbg !4069

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3960
  call void @llvm.dbg.value(metadata i32 %127, metadata !3911, metadata !DIExpression()), !dbg !3960
  %128 = add i32 %95, -1, !dbg !4070
  %129 = add i32 %128, %119, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %129, metadata !3908, metadata !DIExpression()), !dbg !3960
  br label %130, !dbg !4072

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3960
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4032
  call void @llvm.dbg.value(metadata i32 %132, metadata !3908, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %131, metadata !3911, metadata !DIExpression()), !dbg !3960
  %133 = add nuw nsw i32 %98, 1, !dbg !4073
  call void @llvm.dbg.value(metadata i8* %100, metadata !3910, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %133, metadata !3923, metadata !DIExpression()), !dbg !4026
  %134 = icmp eq i32 %133, %31, !dbg !4027
  br i1 %134, label %287, label %94, !dbg !4028, !llvm.loop !4074

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3933, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3934, metadata !DIExpression()), !dbg !4077
  br i1 %28, label %136, label %138, !dbg !4078

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3935, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8 0, metadata !3936, metadata !DIExpression()), !dbg !3960
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4079
  call void @llvm.dbg.value(metadata i8* %137, metadata !3937, metadata !DIExpression()), !dbg !3960
  br label %143, !dbg !4082

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4083
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4083

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3937, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8 undef, metadata !3936, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8 0, metadata !3935, metadata !DIExpression()), !dbg !3960
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4085
  br label %148, !dbg !4088

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4089
  call void @llvm.dbg.value(metadata i8* %151, metadata !3910, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 0, metadata !3939, metadata !DIExpression()), !dbg !4090
  call void @llvm.dbg.value(metadata i8 %149, metadata !3936, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8 %150, metadata !3935, metadata !DIExpression()), !dbg !3960
  %152 = icmp eq i8 %30, 0, !dbg !4091
  br i1 %152, label %153, label %155, !dbg !4092

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4093
  br label %160, !dbg !4092

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4092

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4093
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4094
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4095
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3960
  call void @llvm.dbg.value(metadata i8 undef, metadata !3932, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3960
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4096
  %166 = load i8, i8* %165, align 1, !dbg !4096
  %167 = zext i8 %162 to i32, !dbg !4097
  %168 = add i8 %166, %162, !dbg !4098
  call void @llvm.dbg.value(metadata i8 %168, metadata !3932, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3960
  %169 = icmp eq i32 %33, 0, !dbg !4099
  %170 = lshr i8 %163, 1, !dbg !4100
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4100
  call void @llvm.dbg.value(metadata i8 %171, metadata !3932, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3960
  %172 = icmp eq i32 %26, 0, !dbg !4101
  %173 = icmp eq i32 %161, 0, !dbg !4093
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4093
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4093
  call void @llvm.dbg.value(metadata i8 %175, metadata !3932, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3960
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3947, metadata !DIExpression()), !dbg !4102
  %176 = load i32, i32* %14, align 1, !dbg !4103
  store i8 %168, i8* %165, align 1, !dbg !4104
  store i8 %175, i8* %22, align 1, !dbg !4104
  store i8 %171, i8* %29, align 1, !dbg !4104
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4105
  call void @llvm.dbg.value(metadata i32 %177, metadata !3938, metadata !DIExpression()), !dbg !3960
  %178 = icmp slt i32 %177, 0, !dbg !4106
  br i1 %178, label %287, label %240, !dbg !4108

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3910, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %181, metadata !3939, metadata !DIExpression()), !dbg !4090
  call void @llvm.dbg.value(metadata i8 %182, metadata !3936, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8 %183, metadata !3935, metadata !DIExpression()), !dbg !3960
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4109
  call void @llvm.dbg.value(metadata i8* %184, metadata !3910, metadata !DIExpression()), !dbg !3960
  %185 = load i8, i8* %180, align 1, !dbg !4110
  call void @llvm.dbg.value(metadata i8 %185, metadata !3941, metadata !DIExpression()), !dbg !4111
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4112
  call void @llvm.dbg.value(metadata i8* %186, metadata !3910, metadata !DIExpression()), !dbg !3960
  %187 = load i8, i8* %184, align 1, !dbg !4113
  call void @llvm.dbg.value(metadata i8 %187, metadata !3944, metadata !DIExpression()), !dbg !4111
  %188 = zext i8 %187 to i32, !dbg !4114
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4114
  %190 = bitcast i32* %189 to i8**, !dbg !4115
  %191 = load i8*, i8** %190, align 4, !dbg !4115
  call void @llvm.dbg.value(metadata i8* %191, metadata !3945, metadata !DIExpression()), !dbg !4111
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4116
  call void @llvm.dbg.value(metadata i1 %192, metadata !3946, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4111
  br i1 %16, label %196, label %193, !dbg !4117

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4119
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4120
  br i1 %195, label %235, label %196, !dbg !4121

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4122

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4123

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4126
  br i1 %199, label %201, label %200, !dbg !4131

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4132
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4132
  unreachable, !dbg !4132

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4126
  %203 = add nuw nsw i8 %183, 1, !dbg !4134
  call void @llvm.dbg.value(metadata i8 %203, metadata !3935, metadata !DIExpression()), !dbg !3960
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4135
  br label %231, !dbg !4136

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4137

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4138
  br i1 %207, label %209, label %208, !dbg !4143

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4144
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4144
  unreachable, !dbg !4144

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4138
  %211 = add nuw nsw i8 %182, 1, !dbg !4146
  call void @llvm.dbg.value(metadata i8 %211, metadata !3936, metadata !DIExpression()), !dbg !3960
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4147
  br label %231, !dbg !4148

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4149

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4151
  br i1 %215, label %217, label %216, !dbg !4156

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4157
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4157
  unreachable, !dbg !4157

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4151
  %219 = add nuw nsw i8 %183, 1, !dbg !4159
  call void @llvm.dbg.value(metadata i8 %219, metadata !3935, metadata !DIExpression()), !dbg !3960
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4160
  br label %231, !dbg !4161

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4162
  br i1 %222, label %224, label %223, !dbg !4166

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4167
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4167
  unreachable, !dbg !4167

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4162
  %226 = add nuw nsw i8 %182, 1, !dbg !4169
  call void @llvm.dbg.value(metadata i8 %226, metadata !3936, metadata !DIExpression()), !dbg !3960
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4170
  store i8 %185, i8* %227, align 1, !dbg !4171
  %228 = add nuw nsw i8 %182, 2, !dbg !4172
  call void @llvm.dbg.value(metadata i8 %228, metadata !3936, metadata !DIExpression()), !dbg !3960
  %229 = zext i8 %226 to i32, !dbg !4173
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4173
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4174
  br label %235, !dbg !4175

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3960
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4095
  call void @llvm.dbg.value(metadata i8 %237, metadata !3936, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i8 %236, metadata !3935, metadata !DIExpression()), !dbg !3960
  %238 = add nuw nsw i32 %181, 1, !dbg !4175
  call void @llvm.dbg.value(metadata i8* %186, metadata !3910, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %238, metadata !3939, metadata !DIExpression()), !dbg !4090
  %239 = icmp eq i32 %238, %31, !dbg !4091
  br i1 %239, label %160, label %179, !dbg !4092, !llvm.loop !4176

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4100
  call void @llvm.dbg.value(metadata i32 %177, metadata !3908, metadata !DIExpression()), !dbg !3960
  store i32 %176, i32* %14, align 1, !dbg !4178
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4179
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4180
  call void @llvm.dbg.value(metadata i32 %243, metadata !3938, metadata !DIExpression()), !dbg !3960
  %244 = icmp slt i32 %243, 0, !dbg !4181
  br i1 %244, label %287, label %245, !dbg !4183

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3908, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3960
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4184
  %248 = add nuw nsw i32 %44, %24, !dbg !4184
  %249 = sub i32 %247, %248, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %249, metadata !3948, metadata !DIExpression()), !dbg !3960
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4185
  call void @llvm.dbg.value(metadata i32 %250, metadata !3938, metadata !DIExpression()), !dbg !3960
  %251 = icmp slt i32 %250, 0, !dbg !4186
  br i1 %251, label %287, label %252, !dbg !4188

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %253, metadata !3908, metadata !DIExpression()), !dbg !3960
  %254 = add nuw nsw i32 %253, %250, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %254, metadata !3908, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 0, metadata !3949, metadata !DIExpression()), !dbg !4191
  %255 = icmp eq i8 %162, 0, !dbg !4192
  br i1 %255, label %284, label %256, !dbg !4193

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4193

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3949, metadata !DIExpression()), !dbg !4191
  call void @llvm.dbg.value(metadata i32 %260, metadata !3908, metadata !DIExpression()), !dbg !3960
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4194
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4195
  %262 = load i8, i8* %261, align 1, !dbg !4195
  call void @llvm.dbg.value(metadata i8 %262, metadata !3951, metadata !DIExpression()), !dbg !4196
  store i8 %262, i8* %10, align 1, !dbg !4197
  %263 = zext i8 %262 to i32, !dbg !4198
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4198
  %265 = bitcast i32* %264 to i8**, !dbg !4199
  %266 = load i8*, i8** %265, align 4, !dbg !4199
  call void @llvm.dbg.value(metadata i8* %266, metadata !3954, metadata !DIExpression()), !dbg !4196
  br i1 %257, label %270, label %267, !dbg !4200

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4201
  %269 = load i16, i16* %268, align 2, !dbg !4201
  br label %270, !dbg !4200

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4200
  call void @llvm.dbg.value(metadata i32 undef, metadata !3955, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4196
  call void @llvm.dbg.value(metadata i8* %10, metadata !3951, metadata !DIExpression(DW_OP_deref)), !dbg !4196
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4202
  call void @llvm.dbg.value(metadata i32 %272, metadata !3938, metadata !DIExpression()), !dbg !3960
  %273 = icmp slt i32 %272, 0, !dbg !4203
  br i1 %273, label %277, label %274, !dbg !4205

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3955, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3908, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3960
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %275, metadata !3938, metadata !DIExpression()), !dbg !3960
  %276 = icmp slt i32 %275, 0, !dbg !4207
  br i1 %276, label %277, label %279, !dbg !4209

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3908, metadata !DIExpression()), !dbg !3960
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4210
  call void @llvm.dbg.value(metadata i32 undef, metadata !3908, metadata !DIExpression()), !dbg !3960
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4211
  call void @llvm.dbg.value(metadata i32 %280, metadata !3908, metadata !DIExpression()), !dbg !3960
  %281 = add nsw i32 %280, %275, !dbg !4212
  call void @llvm.dbg.value(metadata i32 %281, metadata !3908, metadata !DIExpression()), !dbg !3960
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4210
  %282 = add nuw nsw i32 %259, 1, !dbg !4213
  call void @llvm.dbg.value(metadata i32 %282, metadata !3949, metadata !DIExpression()), !dbg !4191
  %283 = icmp eq i32 %282, %167, !dbg !4192
  br i1 %283, label %284, label %258, !dbg !4193, !llvm.loop !4214

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4190
  call void @llvm.dbg.value(metadata i32 %285, metadata !3908, metadata !DIExpression()), !dbg !3960
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4216
  br label %287, !dbg !4217

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3960
  ret i32 %288, !dbg !4218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4219 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4223, metadata !DIExpression()), !dbg !4231
  %2 = icmp eq i8* %0, null, !dbg !4232
  br i1 %2, label %3, label %4, !dbg !4235

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4236
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4236
  unreachable, !dbg !4236

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4224, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata i8* %0, metadata !4225, metadata !DIExpression()), !dbg !4231
  %5 = load i8, i8* %0, align 1, !dbg !4238
  %6 = zext i8 %5 to i32, !dbg !4238
  %7 = shl nuw nsw i32 %6, 2, !dbg !4239
  call void @llvm.dbg.value(metadata i32 %7, metadata !4226, metadata !DIExpression()), !dbg !4231
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4240
  %9 = load i8, i8* %8, align 1, !dbg !4240
  %10 = zext i8 %9 to i32, !dbg !4240
  call void @llvm.dbg.value(metadata i32 %10, metadata !4227, metadata !DIExpression()), !dbg !4231
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4241
  %12 = load i8, i8* %11, align 1, !dbg !4241
  %13 = zext i8 %12 to i32, !dbg !4241
  call void @llvm.dbg.value(metadata i32 %13, metadata !4228, metadata !DIExpression()), !dbg !4231
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4242
  call void @llvm.dbg.value(metadata i8* %14, metadata !4224, metadata !DIExpression()), !dbg !4231
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4243
  call void @llvm.dbg.value(metadata i8* %15, metadata !4224, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata i32 0, metadata !4229, metadata !DIExpression()), !dbg !4244
  %16 = icmp eq i8 %9, 0, !dbg !4245
  br i1 %16, label %17, label %22, !dbg !4247

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4231
  %19 = ptrtoint i8* %18 to i32, !dbg !4248
  %20 = ptrtoint i8* %0 to i32, !dbg !4248
  %21 = sub i32 %19, %20, !dbg !4248
  ret i32 %21, !dbg !4249

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4229, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i8* %24, metadata !4224, metadata !DIExpression()), !dbg !4231
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4250
  call void @llvm.dbg.value(metadata i8* %25, metadata !4224, metadata !DIExpression()), !dbg !4231
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4252
  %27 = add i32 %26, 1, !dbg !4253
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4254
  call void @llvm.dbg.value(metadata i8* %28, metadata !4224, metadata !DIExpression()), !dbg !4231
  %29 = add nuw nsw i32 %23, 1, !dbg !4255
  call void @llvm.dbg.value(metadata i32 %29, metadata !4229, metadata !DIExpression()), !dbg !4244
  %30 = icmp eq i32 %29, %10, !dbg !4245
  br i1 %30, label %17, label %22, !dbg !4247, !llvm.loop !4256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4258 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4262, metadata !DIExpression()), !dbg !4266
  call void @llvm.dbg.value(metadata i8* %1, metadata !4263, metadata !DIExpression()), !dbg !4266
  call void @llvm.dbg.value(metadata i8* %2, metadata !4264, metadata !DIExpression()), !dbg !4266
  call void @llvm.dbg.value(metadata i16 %3, metadata !4265, metadata !DIExpression()), !dbg !4266
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4267
  br i1 %5, label %6, label %9, !dbg !4269

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4270
  %8 = add i32 %7, 1, !dbg !4272
  br label %20, !dbg !4273

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4274
  br i1 %10, label %13, label %11, !dbg !4275

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4275
  br label %16, !dbg !4275

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4276
  %15 = add i32 %14, 1, !dbg !4277
  br label %16, !dbg !4275

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4275
  %18 = and i32 %17, 65535, !dbg !4278
  call void @llvm.dbg.value(metadata i32 %17, metadata !4265, metadata !DIExpression()), !dbg !4266
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4279
  br label %20, !dbg !4280

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4266
  ret i32 %21, !dbg !4281
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4284, metadata !DIExpression()), !dbg !4285
  ret i32 0, !dbg !4286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4287 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4291, metadata !DIExpression()), !dbg !4292
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4293
  ret void, !dbg !4294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4295 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4298
  ret i8* %1, !dbg !4299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4300 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4311, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i8* %0, metadata !4310, metadata !DIExpression()), !dbg !4322
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4323
  ret void, !dbg !4325
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4330, metadata !DIExpression()), !dbg !4332
  call void @llvm.dbg.value(metadata i8* %1, metadata !4331, metadata !DIExpression()), !dbg !4332
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4333
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4333
  ret i32 %4, !dbg !4334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4335 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4342, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4339, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i8* %1, metadata !4340, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i8* %2, metadata !4341, metadata !DIExpression()), !dbg !4343
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4344
  ret void, !dbg !4345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4346 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4350, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata i32 %1, metadata !4351, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata i32 0, metadata !4352, metadata !DIExpression()), !dbg !4353
  %3 = icmp eq i32 %1, 0, !dbg !4354
  br i1 %3, label %13, label %4, !dbg !4357

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4352, metadata !DIExpression()), !dbg !4353
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4358
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4360
  %8 = load i8, i8* %7, align 1, !dbg !4360
  %9 = zext i8 %8 to i32, !dbg !4360
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4358
  %11 = add nuw i32 %5, 1, !dbg !4361
  call void @llvm.dbg.value(metadata i32 %11, metadata !4352, metadata !DIExpression()), !dbg !4353
  %12 = icmp eq i32 %11, %1, !dbg !4354
  br i1 %12, label %13, label %4, !dbg !4357, !llvm.loop !4362

13:                                               ; preds = %4, %2
  ret void, !dbg !4364
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4365 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4369, metadata !DIExpression()), !dbg !4371
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4372
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4372
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4370, metadata !DIExpression()), !dbg !4373
  call void @llvm.va_start(i8* nonnull %3), !dbg !4374
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4375
  %5 = load i32, i32* %4, align 4, !dbg !4375
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4375
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4375
  call void @llvm.va_end(i8* nonnull %3), !dbg !4376
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4377
  ret void, !dbg !4377
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4378 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4382, metadata !DIExpression()), !dbg !4387
  call void @llvm.dbg.value(metadata i32 %1, metadata !4383, metadata !DIExpression()), !dbg !4387
  call void @llvm.dbg.value(metadata i8* %2, metadata !4384, metadata !DIExpression()), !dbg !4387
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4388
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4388
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4385, metadata !DIExpression()), !dbg !4389
  call void @llvm.va_start(i8* nonnull %5), !dbg !4390
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4391
  %7 = load i32, i32* %6, align 4, !dbg !4391
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4391
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4391
  call void @llvm.dbg.value(metadata i32 %9, metadata !4386, metadata !DIExpression()), !dbg !4387
  call void @llvm.va_end(i8* nonnull %5), !dbg !4392
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4393
  ret i32 %9, !dbg !4394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4395 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4402, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.value(metadata i8* %0, metadata !4399, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.value(metadata i32 %1, metadata !4400, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.value(metadata i8* %2, metadata !4401, metadata !DIExpression()), !dbg !4409
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4410
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4410
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4403, metadata !DIExpression()), !dbg !4411
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4412
  store i8* %0, i8** %7, align 4, !dbg !4412
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4412
  store i32 %1, i32* %8, align 4, !dbg !4412
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4412
  store i32 0, i32* %9, align 4, !dbg !4412
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4413
  %10 = load i32, i32* %9, align 4, !dbg !4414
  %11 = load i32, i32* %8, align 4, !dbg !4416
  %12 = icmp slt i32 %10, %11, !dbg !4417
  br i1 %12, label %13, label %15, !dbg !4418

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4419
  store i8 0, i8* %14, align 1, !dbg !4421
  br label %15, !dbg !4422

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4423
  ret i32 %10, !dbg !4424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4430, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4431, metadata !DIExpression()), !dbg !4432
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4433
  %4 = load i8*, i8** %3, align 4, !dbg !4433
  %5 = icmp eq i8* %4, null, !dbg !4435
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4436
  br i1 %5, label %12, label %8, !dbg !4437

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4438
  %10 = load i32, i32* %9, align 4, !dbg !4438
  %11 = icmp slt i32 %7, %10, !dbg !4439
  br i1 %11, label %15, label %12, !dbg !4440

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4441
  %14 = add nsw i32 %7, 1, !dbg !4443
  store i32 %14, i32* %13, align 4, !dbg !4443
  br label %25, !dbg !4444

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4445
  %17 = icmp eq i32 %7, %16, !dbg !4447
  br i1 %17, label %18, label %21, !dbg !4448

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4449
  store i32 %19, i32* %6, align 4, !dbg !4449
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4451
  store i8 0, i8* %20, align 1, !dbg !4452
  br label %25, !dbg !4453

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4454
  %23 = add nsw i32 %7, 1, !dbg !4456
  store i32 %23, i32* %6, align 4, !dbg !4456
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4457
  store i8 %22, i8* %24, align 1, !dbg !4458
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4459
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4460 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4465, metadata !DIExpression()), !dbg !4469
  call void @llvm.dbg.value(metadata i8* %1, metadata !4466, metadata !DIExpression()), !dbg !4469
  call void @llvm.dbg.value(metadata i8* %2, metadata !4467, metadata !DIExpression()), !dbg !4469
  call void @llvm.dbg.value(metadata i8* %3, metadata !4468, metadata !DIExpression()), !dbg !4469
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4470
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4471
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4472
  unreachable, !dbg !4473
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4474 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4581
  ret %struct.k_thread* %1, !dbg !4582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4587, metadata !DIExpression()), !dbg !4588
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4589, !srcloc !4591
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4592
  ret void, !dbg !4593
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4594 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4595, !srcloc !4597
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4598
  ret %struct.k_thread* %1, !dbg !4599
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4600 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4613, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4610, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i8* %1, metadata !4611, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i8* %2, metadata !4612, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i32 %4, metadata !4614, metadata !DIExpression()), !dbg !4739
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4740
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4740
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4615, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.value(metadata i32 0, metadata !4619, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i1 undef, metadata !4621, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4739
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4742

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4742

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4743
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4613, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i8* %30, metadata !4612, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i32 %29, metadata !4619, metadata !DIExpression()), !dbg !4739
  %31 = load i8, i8* %30, align 1, !dbg !4744
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4742

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4744
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4745
  call void @llvm.dbg.value(metadata i8* %34, metadata !4612, metadata !DIExpression()), !dbg !4739
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %35, metadata !4623, metadata !DIExpression()), !dbg !4746
  %36 = icmp slt i32 %35, 0, !dbg !4747
  %37 = add i32 %29, 1, !dbg !4745
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression()), !dbg !4739
  br i1 %36, label %365, label %28, !llvm.loop !4749

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4751
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4628, metadata !DIExpression()), !dbg !4752
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4752
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4671, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4674, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i8* %30, metadata !4677, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i32 -1, metadata !4678, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i32 -1, metadata !4679, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i8* null, metadata !4680, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i8* %14, metadata !4681, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i8 0, metadata !4682, metadata !DIExpression()), !dbg !4753
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4754
  call void @llvm.dbg.value(metadata i8* %39, metadata !4612, metadata !DIExpression()), !dbg !4739
  %40 = load i24, i24* %15, align 8, !dbg !4755
  %41 = and i24 %40, 256, !dbg !4755
  %42 = icmp eq i24 %41, 0, !dbg !4755
  br i1 %42, label %51, label %43, !dbg !4757

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %44, metadata !4613, metadata !DIExpression()), !dbg !4739
  %45 = bitcast i8* %27 to i32*, !dbg !4758
  %46 = load i32, i32* %45, align 4, !dbg !4758
  call void @llvm.dbg.value(metadata i32 %46, metadata !4678, metadata !DIExpression()), !dbg !4753
  %47 = icmp slt i32 %46, 0, !dbg !4760
  br i1 %47, label %48, label %56, !dbg !4762

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4763
  store i24 %49, i24* %15, align 8, !dbg !4763
  %50 = sub nsw i32 0, %46, !dbg !4765
  call void @llvm.dbg.value(metadata i32 %50, metadata !4678, metadata !DIExpression()), !dbg !4753
  br label %56, !dbg !4766

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4767
  %53 = icmp eq i24 %52, 0, !dbg !4767
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4769
  br label %56, !dbg !4769

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4770
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4753
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4613, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i32 %58, metadata !4678, metadata !DIExpression()), !dbg !4753
  %60 = and i24 %57, 1024, !dbg !4770
  %61 = icmp eq i24 %60, 0, !dbg !4770
  br i1 %61, label %69, label %62, !dbg !4771

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4772
  call void @llvm.dbg.value(metadata i8* %63, metadata !4613, metadata !DIExpression()), !dbg !4739
  %64 = bitcast i8* %59 to i32*, !dbg !4772
  %65 = load i32, i32* %64, align 4, !dbg !4772
  call void @llvm.dbg.value(metadata i32 %65, metadata !4683, metadata !DIExpression()), !dbg !4773
  %66 = icmp slt i32 %65, 0, !dbg !4774
  br i1 %66, label %67, label %74, !dbg !4776

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4777
  store i24 %68, i24* %15, align 8, !dbg !4777
  br label %74, !dbg !4779

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4780
  %71 = icmp eq i24 %70, 0, !dbg !4780
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4782
  br label %74, !dbg !4782

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4783
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4753
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4753
  call void @llvm.dbg.value(metadata i8* %77, metadata !4613, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i32 %76, metadata !4679, metadata !DIExpression()), !dbg !4753
  store i32 0, i32* %16, align 4, !dbg !4784
  store i32 0, i32* %17, align 8, !dbg !4785
  %78 = lshr i24 %75, 16, !dbg !4783
  call void @llvm.dbg.value(metadata i24 %78, metadata !4686, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4753
  %79 = lshr i24 %75, 11, !dbg !4786
  %80 = and i24 %79, 15, !dbg !4786
  %81 = zext i24 %80 to i32, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %81, metadata !4687, metadata !DIExpression()), !dbg !4753
  %82 = trunc i24 %78 to i3, !dbg !4787
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4787

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4788

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4791
  call void @llvm.dbg.value(metadata i8* %85, metadata !4613, metadata !DIExpression()), !dbg !4739
  %86 = bitcast i8* %77 to i32*, !dbg !4791
  %87 = load i32, i32* %86, align 4, !dbg !4791
  %88 = sext i32 %87 to i64, !dbg !4791
  store i64 %88, i64* %20, align 8, !dbg !4793
  br label %115, !dbg !4794

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4795
  call void @llvm.dbg.value(metadata i8* %90, metadata !4613, metadata !DIExpression()), !dbg !4739
  %91 = bitcast i8* %77 to i32*, !dbg !4795
  %92 = load i32, i32* %91, align 4, !dbg !4795
  %93 = sext i32 %92 to i64, !dbg !4795
  store i64 %93, i64* %20, align 8, !dbg !4798
  br label %115, !dbg !4799

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4800
  %96 = add i32 %95, 7, !dbg !4800
  %97 = and i32 %96, -8, !dbg !4800
  %98 = inttoptr i32 %97 to i8*, !dbg !4800
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4800
  call void @llvm.dbg.value(metadata i8* %99, metadata !4613, metadata !DIExpression()), !dbg !4739
  %100 = inttoptr i32 %97 to i64*, !dbg !4800
  %101 = load i64, i64* %100, align 8, !dbg !4800
  store i64 %101, i64* %20, align 8, !dbg !4801
  br label %115, !dbg !4802

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4803
  %104 = add i32 %103, 7, !dbg !4803
  %105 = and i32 %104, -8, !dbg !4803
  %106 = inttoptr i32 %105 to i8*, !dbg !4803
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4803
  call void @llvm.dbg.value(metadata i8* %107, metadata !4613, metadata !DIExpression()), !dbg !4739
  %108 = inttoptr i32 %105 to i64*, !dbg !4803
  %109 = load i64, i64* %108, align 8, !dbg !4803
  store i64 %109, i64* %20, align 8, !dbg !4804
  br label %115, !dbg !4805

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4806
  call void @llvm.dbg.value(metadata i8* %111, metadata !4613, metadata !DIExpression()), !dbg !4739
  %112 = bitcast i8* %77 to i32*, !dbg !4806
  %113 = load i32, i32* %112, align 4, !dbg !4806
  %114 = sext i32 %113 to i64, !dbg !4807
  store i64 %114, i64* %20, align 8, !dbg !4808
  br label %115, !dbg !4809

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4810
  call void @llvm.dbg.value(metadata i8* %117, metadata !4613, metadata !DIExpression()), !dbg !4739
  %118 = trunc i24 %79 to i4, !dbg !4811
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4811

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4812
  %121 = ashr exact i64 %120, 56, !dbg !4812
  store i64 %121, i64* %20, align 8, !dbg !4815
  br label %177, !dbg !4816

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4817
  %124 = ashr exact i64 %123, 48, !dbg !4817
  store i64 %124, i64* %20, align 8, !dbg !4820
  br label %177, !dbg !4821

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4822

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4825
  call void @llvm.dbg.value(metadata i8* %127, metadata !4613, metadata !DIExpression()), !dbg !4739
  %128 = bitcast i8* %77 to i32*, !dbg !4825
  %129 = load i32, i32* %128, align 4, !dbg !4825
  %130 = zext i32 %129 to i64, !dbg !4825
  store i64 %130, i64* %20, align 8, !dbg !4827
  br label %157, !dbg !4828

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4829
  call void @llvm.dbg.value(metadata i8* %132, metadata !4613, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i8* %132, metadata !4613, metadata !DIExpression()), !dbg !4739
  %133 = bitcast i8* %77 to i32*, !dbg !4829
  %134 = load i32, i32* %133, align 4, !dbg !4829
  %135 = zext i32 %134 to i64, !dbg !4829
  store i64 %135, i64* %20, align 8, !dbg !4829
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4831
  %138 = add i32 %137, 7, !dbg !4831
  %139 = and i32 %138, -8, !dbg !4831
  %140 = inttoptr i32 %139 to i8*, !dbg !4831
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4831
  call void @llvm.dbg.value(metadata i8* %141, metadata !4613, metadata !DIExpression()), !dbg !4739
  %142 = inttoptr i32 %139 to i64*, !dbg !4831
  %143 = load i64, i64* %142, align 8, !dbg !4831
  store i64 %143, i64* %20, align 8, !dbg !4832
  br label %157, !dbg !4833

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4834
  %146 = add i32 %145, 7, !dbg !4834
  %147 = and i32 %146, -8, !dbg !4834
  %148 = inttoptr i32 %147 to i8*, !dbg !4834
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4834
  call void @llvm.dbg.value(metadata i8* %149, metadata !4613, metadata !DIExpression()), !dbg !4739
  %150 = inttoptr i32 %147 to i64*, !dbg !4834
  %151 = load i64, i64* %150, align 8, !dbg !4834
  store i64 %151, i64* %20, align 8, !dbg !4835
  br label %157, !dbg !4836

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %153, metadata !4613, metadata !DIExpression()), !dbg !4739
  %154 = bitcast i8* %77 to i32*, !dbg !4837
  %155 = load i32, i32* %154, align 4, !dbg !4837
  %156 = zext i32 %155 to i64, !dbg !4838
  store i64 %156, i64* %20, align 8, !dbg !4839
  br label %157, !dbg !4840

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4841
  call void @llvm.dbg.value(metadata i8* %159, metadata !4613, metadata !DIExpression()), !dbg !4739
  %160 = trunc i24 %79 to i4, !dbg !4842
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4842

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4843
  store i64 %162, i64* %20, align 8, !dbg !4846
  br label %177, !dbg !4847

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4848
  store i64 %164, i64* %20, align 8, !dbg !4851
  br label %177, !dbg !4852

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4853
  %167 = add i32 %166, 7, !dbg !4853
  %168 = and i32 %167, -8, !dbg !4853
  %169 = inttoptr i32 %168 to i8*, !dbg !4853
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4853
  call void @llvm.dbg.value(metadata i8* %170, metadata !4613, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i8* %170, metadata !4613, metadata !DIExpression()), !dbg !4739
  %171 = inttoptr i32 %168 to double*, !dbg !4853
  %172 = load double, double* %171, align 8, !dbg !4853
  store double %172, double* %19, align 8, !dbg !4853
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4857
  call void @llvm.dbg.value(metadata i8* %174, metadata !4613, metadata !DIExpression()), !dbg !4739
  %175 = bitcast i8* %77 to i8**, !dbg !4857
  %176 = load i8*, i8** %175, align 4, !dbg !4857
  store i8* %176, i8** %18, align 8, !dbg !4860
  br label %177, !dbg !4861

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4753
  call void @llvm.dbg.value(metadata i8* %178, metadata !4613, metadata !DIExpression()), !dbg !4739
  %179 = and i24 %75, 3, !dbg !4862
  %180 = icmp eq i24 %179, 0, !dbg !4862
  br i1 %180, label %185, label %181, !dbg !4862

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4863
  call void @llvm.dbg.value(metadata i32 %182, metadata !4688, metadata !DIExpression()), !dbg !4864
  %183 = icmp slt i32 %182, 0, !dbg !4865
  %184 = add i32 %182, %29, !dbg !4863
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression()), !dbg !4739
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4867
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4868

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %188, metadata !4692, metadata !DIExpression()), !dbg !4870
  %189 = icmp slt i32 %188, 0, !dbg !4871
  %190 = add i32 %29, 1, !dbg !4869
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression()), !dbg !4739
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4873
  call void @llvm.dbg.value(metadata i8* %192, metadata !4680, metadata !DIExpression()), !dbg !4753
  %193 = icmp sgt i32 %76, -1, !dbg !4874
  br i1 %193, label %194, label %196, !dbg !4876

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4877
  call void @llvm.dbg.value(metadata i32 %195, metadata !4695, metadata !DIExpression()), !dbg !4879
  br label %241, !dbg !4880

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4881
  call void @llvm.dbg.value(metadata i32 %197, metadata !4695, metadata !DIExpression()), !dbg !4879
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4680, metadata !DIExpression()), !dbg !4753
  %199 = load i64, i64* %20, align 8, !dbg !4883
  %200 = trunc i64 %199 to i8, !dbg !4884
  store i8 %200, i8* %10, align 1, !dbg !4885
  call void @llvm.dbg.value(metadata i8* %23, metadata !4681, metadata !DIExpression()), !dbg !4753
  br label %245, !dbg !4886

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4887
  %203 = icmp eq i24 %202, 0, !dbg !4887
  %204 = trunc i24 %75 to i8, !dbg !4889
  %205 = shl i8 %204, 1, !dbg !4889
  %206 = and i8 %205, 32, !dbg !4889
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4889
  call void @llvm.dbg.value(metadata i8 %207, metadata !4682, metadata !DIExpression()), !dbg !4753
  %208 = load i64, i64* %20, align 8, !dbg !4890
  call void @llvm.dbg.value(metadata i64 %208, metadata !4620, metadata !DIExpression()), !dbg !4739
  %209 = icmp slt i64 %208, 0, !dbg !4891
  br i1 %209, label %210, label %212, !dbg !4893

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4682, metadata !DIExpression()), !dbg !4753
  %211 = sub nsw i64 0, %208, !dbg !4894
  store i64 %211, i64* %20, align 8, !dbg !4896
  br label %212, !dbg !4897

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4753
  call void @llvm.dbg.value(metadata i8 %213, metadata !4682, metadata !DIExpression()), !dbg !4753
  %214 = load i64, i64* %20, align 8, !dbg !4898
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4899
  call void @llvm.dbg.value(metadata i8* %215, metadata !4680, metadata !DIExpression()), !dbg !4753
  br label %216, !dbg !4900

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4901
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4902
  call void @llvm.dbg.value(metadata i8* %218, metadata !4680, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i8 %217, metadata !4682, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.label(metadata !4738), !dbg !4903
  %219 = icmp sgt i32 %76, -1, !dbg !4904
  br i1 %219, label %222, label %220, !dbg !4905

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4906
  br label %245, !dbg !4905

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4908
  %224 = sub i32 %22, %223, !dbg !4908
  call void @llvm.dbg.value(metadata i32 %224, metadata !4697, metadata !DIExpression()), !dbg !4909
  %225 = load i24, i24* %15, align 8, !dbg !4910
  %226 = and i24 %225, -65, !dbg !4910
  store i24 %226, i24* %15, align 8, !dbg !4910
  %227 = icmp ugt i32 %76, %224, !dbg !4911
  br i1 %227, label %228, label %245, !dbg !4913

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4914
  store i32 %229, i32* %16, align 4, !dbg !4916
  br label %245, !dbg !4917

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4918
  %232 = icmp eq i8* %231, null, !dbg !4920
  br i1 %232, label %245, label %233, !dbg !4921

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4922
  %235 = zext i32 %234 to i64, !dbg !4922
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4924
  call void @llvm.dbg.value(metadata i8* %236, metadata !4680, metadata !DIExpression()), !dbg !4753
  %237 = load i24, i24* %15, align 8, !dbg !4925
  %238 = or i24 %237, 1048576, !dbg !4925
  store i24 %238, i24* %15, align 8, !dbg !4925
  store i8 120, i8* %21, align 1, !dbg !4926
  br label %216, !dbg !4927

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4928
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4931
  br label %363, !dbg !4932

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4933
  call void @llvm.dbg.value(metadata i32 %242, metadata !4695, metadata !DIExpression()), !dbg !4879
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4934
  call void @llvm.dbg.value(metadata i32 -1, metadata !4679, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i32 %29, metadata !4619, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i8* %192, metadata !4680, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i8* %243, metadata !4681, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i8 0, metadata !4682, metadata !DIExpression()), !dbg !4753
  %244 = icmp eq i8* %192, null, !dbg !4935
  br i1 %244, label %363, label %245, !dbg !4937, !llvm.loop !4749

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4906
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4753
  call void @llvm.dbg.value(metadata i32 0, metadata !4701, metadata !DIExpression()), !dbg !4753
  %250 = zext i8 %249 to i32, !dbg !4938
  %251 = icmp eq i8 %249, 0, !dbg !4940
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4753
  call void @llvm.dbg.value(metadata i32 undef, metadata !4700, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4753
  call void @llvm.dbg.value(metadata i32 undef, metadata !4700, metadata !DIExpression()), !dbg !4753
  %252 = icmp sgt i32 %58, 0, !dbg !4941
  br i1 %252, label %253, label %302, !dbg !4942

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4906
  %255 = icmp eq i24 %254, 0, !dbg !4906
  %256 = ptrtoint i8* %248 to i32, !dbg !4943
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4753
  %257 = ptrtoint i8* %247 to i32, !dbg !4943
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4753
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4753
  %258 = xor i1 %251, true, !dbg !4944
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4753
  %259 = sext i1 %258 to i32, !dbg !4944
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4753
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4753
  %260 = lshr i24 %246, 19, !dbg !4945
  %261 = and i24 %260, 1, !dbg !4945
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4945
  %263 = zext i24 %262 to i32, !dbg !4945
  %264 = add i32 %257, %259, !dbg !4945
  %265 = add i32 %256, %263, !dbg !4945
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4753
  %266 = and i24 %246, 4194304, !dbg !4946
  %267 = icmp eq i24 %266, 0, !dbg !4946
  %268 = load i32, i32* %16, align 4, !dbg !4948
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4753
  call void @llvm.dbg.value(metadata i32 undef, metadata !4700, metadata !DIExpression()), !dbg !4753
  %269 = load i32, i32* %17, align 8, !dbg !4949
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4949
  call void @llvm.dbg.value(metadata i32 undef, metadata !4700, metadata !DIExpression()), !dbg !4753
  %271 = add i32 %264, %58, !dbg !4949
  %272 = add i32 %265, %268, !dbg !4949
  %273 = add i32 %272, %270, !dbg !4950
  %274 = sub i32 %271, %273, !dbg !4950
  call void @llvm.dbg.value(metadata i32 %274, metadata !4678, metadata !DIExpression()), !dbg !4753
  %275 = and i24 %246, 4, !dbg !4951
  %276 = icmp eq i24 %275, 0, !dbg !4951
  br i1 %276, label %277, label %302, !dbg !4952

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4702, metadata !DIExpression()), !dbg !4953
  %278 = and i24 %246, 64, !dbg !4954
  %279 = icmp eq i24 %278, 0, !dbg !4954
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4955
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4955
  %282 = select i1 %279, i32 32, i32 48, !dbg !4955
  br i1 %280, label %287, label %283, !dbg !4955

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %284, metadata !4707, metadata !DIExpression()), !dbg !4957
  %285 = icmp slt i32 %284, 0, !dbg !4958
  %286 = add i32 %29, 1, !dbg !4956
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression()), !dbg !4739
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4753
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %290, metadata !4619, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i8 undef, metadata !4702, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i8 %288, metadata !4682, metadata !DIExpression()), !dbg !4753
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4960
  %292 = add i32 %291, -1, !dbg !4960
  br label %293, !dbg !4960

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4961
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %295, metadata !4619, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i32 %294, metadata !4678, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i32 %294, metadata !4678, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4753
  %296 = icmp sgt i32 %294, 0, !dbg !4962
  br i1 %296, label %297, label %302, !dbg !4960

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4963
  call void @llvm.dbg.value(metadata i32 %298, metadata !4678, metadata !DIExpression()), !dbg !4753
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4964
  call void @llvm.dbg.value(metadata i32 %299, metadata !4713, metadata !DIExpression()), !dbg !4965
  %300 = icmp slt i32 %299, 0, !dbg !4966
  %301 = add i32 %295, 1, !dbg !4964
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression()), !dbg !4739
  br i1 %300, label %361, label %293, !llvm.loop !4968

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4753
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4753
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %305, metadata !4619, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i32 %304, metadata !4678, metadata !DIExpression()), !dbg !4753
  call void @llvm.dbg.value(metadata i8 %303, metadata !4682, metadata !DIExpression()), !dbg !4753
  %306 = icmp eq i8 %303, 0, !dbg !4970
  br i1 %306, label %312, label %307, !dbg !4971

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4972
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4973
  call void @llvm.dbg.value(metadata i32 %309, metadata !4716, metadata !DIExpression()), !dbg !4974
  %310 = icmp slt i32 %309, 0, !dbg !4975
  %311 = add i32 %305, 1, !dbg !4973
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression()), !dbg !4739
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %313, metadata !4619, metadata !DIExpression()), !dbg !4739
  %314 = lshr i24 %246, 20, !dbg !4977
  %315 = lshr i24 %246, 19, !dbg !4978
  %316 = or i24 %314, %315, !dbg !4979
  %317 = and i24 %316, 1, !dbg !4979
  %318 = icmp eq i24 %317, 0, !dbg !4979
  br i1 %318, label %323, label %319, !dbg !4980

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %320, metadata !4720, metadata !DIExpression()), !dbg !4982
  %321 = icmp slt i32 %320, 0, !dbg !4983
  %322 = add i32 %313, 1, !dbg !4981
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression()), !dbg !4739
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %324, metadata !4619, metadata !DIExpression()), !dbg !4739
  %325 = and i24 %246, 1048576, !dbg !4985
  %326 = icmp eq i24 %325, 0, !dbg !4985
  br i1 %326, label %333, label %327, !dbg !4986

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4987
  %329 = zext i8 %328 to i32, !dbg !4987
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4987
  call void @llvm.dbg.value(metadata i32 %330, metadata !4726, metadata !DIExpression()), !dbg !4988
  %331 = icmp slt i32 %330, 0, !dbg !4989
  %332 = add i32 %324, 1, !dbg !4987
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression()), !dbg !4739
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %334, metadata !4619, metadata !DIExpression()), !dbg !4739
  %335 = load i32, i32* %16, align 4, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %335, metadata !4701, metadata !DIExpression()), !dbg !4753
  br label %336, !dbg !4992

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4993
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %338, metadata !4619, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i32 %337, metadata !4701, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4753
  %339 = icmp sgt i32 %337, 0, !dbg !4994
  br i1 %339, label %340, label %345, !dbg !4992

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4995
  call void @llvm.dbg.value(metadata i32 %341, metadata !4701, metadata !DIExpression()), !dbg !4753
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4996
  call void @llvm.dbg.value(metadata i32 %342, metadata !4730, metadata !DIExpression()), !dbg !4997
  %343 = icmp slt i32 %342, 0, !dbg !4998
  %344 = add i32 %338, 1, !dbg !4996
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression()), !dbg !4739
  br i1 %343, label %361, label %336, !llvm.loop !5000

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %346, metadata !4733, metadata !DIExpression()), !dbg !5003
  %347 = icmp slt i32 %346, 0, !dbg !5004
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression()), !dbg !4739
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %349, metadata !4619, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i32 %304, metadata !4678, metadata !DIExpression()), !dbg !4753
  %350 = icmp sgt i32 %304, 0, !dbg !5006
  br i1 %350, label %351, label %363, !dbg !5007

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5007
  %353 = add i32 %352, %338, !dbg !5007
  br label %354, !dbg !5007

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i32 %355, metadata !4678, metadata !DIExpression()), !dbg !4753
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5008
  call void @llvm.dbg.value(metadata i32 %356, metadata !4735, metadata !DIExpression()), !dbg !5009
  %357 = icmp slt i32 %356, 0, !dbg !5010
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5012
  call void @llvm.dbg.value(metadata i32 undef, metadata !4619, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4739
  call void @llvm.dbg.value(metadata i32 %359, metadata !4678, metadata !DIExpression()), !dbg !4753
  %360 = icmp sgt i32 %355, 1, !dbg !5006
  br i1 %360, label %354, label %363, !dbg !5007, !llvm.loop !5013

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4619, metadata !DIExpression()), !dbg !4739
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4750
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %364, metadata !4619, metadata !DIExpression()), !dbg !4739
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4750
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4739
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5015
  ret i32 %366, !dbg !5015
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5016 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5020, metadata !DIExpression()), !dbg !5022
  call void @llvm.dbg.value(metadata i8* %1, metadata !5021, metadata !DIExpression()), !dbg !5022
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5023
  store i24 0, i24* %3, align 4, !dbg !5023
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5023
  store i8 0, i8* %4, align 1, !dbg !5023
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5023
  store i32 0, i32* %5, align 4, !dbg !5023
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5023
  store i32 0, i32* %6, align 4, !dbg !5023
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %7, metadata !5021, metadata !DIExpression()), !dbg !5022
  %8 = load i8, i8* %7, align 1, !dbg !5025
  %9 = icmp eq i8 %8, 37, !dbg !5027
  br i1 %9, label %10, label %12, !dbg !5028

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5029
  call void @llvm.dbg.value(metadata i8* %11, metadata !5021, metadata !DIExpression()), !dbg !5022
  store i8 37, i8* %4, align 1, !dbg !5031
  br label %18, !dbg !5032

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5033
  call void @llvm.dbg.value(metadata i8* %13, metadata !5021, metadata !DIExpression()), !dbg !5022
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5034
  call void @llvm.dbg.value(metadata i8* %14, metadata !5021, metadata !DIExpression()), !dbg !5022
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5035
  call void @llvm.dbg.value(metadata i8* %15, metadata !5021, metadata !DIExpression()), !dbg !5022
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5036
  call void @llvm.dbg.value(metadata i8* %16, metadata !5021, metadata !DIExpression()), !dbg !5022
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5037
  call void @llvm.dbg.value(metadata i8* %17, metadata !5021, metadata !DIExpression()), !dbg !5022
  br label %18, !dbg !5038

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5022
  ret i8* %19, !dbg !5039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5040 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5044, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %1, metadata !5045, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %2, metadata !5046, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %3, metadata !5047, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 0, metadata !5048, metadata !DIExpression()), !dbg !5051
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5052

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5053
  call void @llvm.dbg.value(metadata i32 %9, metadata !5048, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i8* %8, metadata !5046, metadata !DIExpression()), !dbg !5051
  %10 = icmp ult i8* %8, %3, !dbg !5054
  br i1 %10, label %11, label %13, !dbg !5055

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5056
  br label %17, !dbg !5055

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5057

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5058
  %16 = icmp eq i8 %15, 0, !dbg !5057
  br i1 %16, label %24, label %17, !dbg !5052

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5056
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5059
  call void @llvm.dbg.value(metadata i8* %19, metadata !5046, metadata !DIExpression()), !dbg !5051
  %20 = zext i8 %18 to i32, !dbg !5060
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5061
  call void @llvm.dbg.value(metadata i32 %21, metadata !5049, metadata !DIExpression()), !dbg !5062
  %22 = icmp slt i32 %21, 0, !dbg !5063
  %23 = add i32 %9, 1, !dbg !5065
  call void @llvm.dbg.value(metadata i32 undef, metadata !5048, metadata !DIExpression()), !dbg !5051
  br i1 %22, label %24, label %7, !llvm.loop !5066

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5051
  ret i32 %25, !dbg !5068
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5069 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5073, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5074, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.value(metadata i8* %2, metadata !5075, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.value(metadata i8* %3, metadata !5076, metadata !DIExpression()), !dbg !5083
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5084
  %6 = load i8, i8* %5, align 1, !dbg !5084
  %7 = zext i8 %6 to i32, !dbg !5085
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5086
  %9 = icmp eq i32 %8, 0, !dbg !5086
  call void @llvm.dbg.value(metadata i1 %9, metadata !5077, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5083
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5087
  call void @llvm.dbg.value(metadata i32 %10, metadata !5078, metadata !DIExpression()), !dbg !5083
  %11 = ptrtoint i8* %3 to i32, !dbg !5088
  %12 = ptrtoint i8* %2 to i32, !dbg !5088
  %13 = sub i32 %11, %12, !dbg !5088
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5089
  call void @llvm.dbg.value(metadata i8* %14, metadata !5080, metadata !DIExpression()), !dbg !5083
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5090

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5083
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5073, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.value(metadata i8* %18, metadata !5080, metadata !DIExpression()), !dbg !5083
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5091
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5092
  call void @llvm.dbg.value(metadata i32 %25, metadata !5081, metadata !DIExpression()), !dbg !5093
  %26 = icmp ult i32 %25, 10, !dbg !5094
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5095
  %28 = add i32 %27, %25, !dbg !5093
  %29 = trunc i32 %28 to i8, !dbg !5095
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5096
  call void @llvm.dbg.value(metadata i8* %30, metadata !5080, metadata !DIExpression()), !dbg !5083
  store i8 %29, i8* %30, align 1, !dbg !5097
  call void @llvm.dbg.value(metadata i64 %22, metadata !5073, metadata !DIExpression()), !dbg !5083
  %31 = icmp uge i64 %19, %15, !dbg !5098
  %32 = icmp ugt i8* %30, %2, !dbg !5099
  %33 = and i1 %31, %32, !dbg !5099
  br i1 %33, label %17, label %34, !dbg !5100, !llvm.loop !5101

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5103
  %36 = load i24, i24* %35, align 4, !dbg !5103
  %37 = and i24 %36, 32, !dbg !5103
  %38 = icmp eq i24 %37, 0, !dbg !5103
  br i1 %38, label %44, label %39, !dbg !5105

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5106

40:                                               ; preds = %39
  br label %41, !dbg !5108

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5112
  store i24 %43, i24* %35, align 4, !dbg !5112
  br label %44, !dbg !5113

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5114 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5120, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i8* %1, metadata !5121, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i32 %2, metadata !5122, metadata !DIExpression()), !dbg !5123
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5124
  %5 = load i24, i24* %4, align 4, !dbg !5124
  %6 = lshr i24 %5, 11, !dbg !5124
  %7 = and i24 %6, 15, !dbg !5124
  %8 = zext i24 %7 to i32, !dbg !5124
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5125

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5126
  store i32 %2, i32* %10, align 4, !dbg !5128
  br label %28, !dbg !5129

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5130
  store i8 %12, i8* %1, align 1, !dbg !5131
  br label %28, !dbg !5132

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5133
  %15 = bitcast i8* %1 to i16*, !dbg !5134
  store i16 %14, i16* %15, align 2, !dbg !5135
  br label %28, !dbg !5136

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5137
  store i32 %2, i32* %17, align 4, !dbg !5138
  br label %28, !dbg !5139

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5140
  %20 = bitcast i8* %1 to i64*, !dbg !5141
  store i64 %19, i64* %20, align 8, !dbg !5142
  br label %28, !dbg !5143

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5144
  %23 = bitcast i8* %1 to i64*, !dbg !5145
  store i64 %22, i64* %23, align 8, !dbg !5146
  br label %28, !dbg !5147

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5148
  store i32 %2, i32* %25, align 4, !dbg !5149
  br label %28, !dbg !5150

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5151
  store i32 %2, i32* %27, align 4, !dbg !5152
  br label %28, !dbg !5153

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5154
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5158, metadata !DIExpression()), !dbg !5159
  %2 = add i32 %0, -65, !dbg !5160
  %3 = icmp ult i32 %2, 26, !dbg !5161
  %4 = zext i1 %3 to i32, !dbg !5161
  ret i32 %4, !dbg !5162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5163 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5167, metadata !DIExpression()), !dbg !5168
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5169

2:                                                ; preds = %1
  br label %4, !dbg !5170

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5172

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5173
  ret i32 %5, !dbg !5174
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5175 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5177, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata i8* %1, metadata !5178, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata i8 1, metadata !5179, metadata !DIExpression()), !dbg !5180
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5181

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5179, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata i8* %5, metadata !5178, metadata !DIExpression()), !dbg !5180
  %6 = load i8, i8* %5, align 1, !dbg !5182
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5184

7:                                                ; preds = %4
  br label %11, !dbg !5185

8:                                                ; preds = %4
  br label %11, !dbg !5187

9:                                                ; preds = %4
  br label %11, !dbg !5188

10:                                               ; preds = %4
  br label %11, !dbg !5189

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5190
  %14 = or i24 %13, %12, !dbg !5190
  store i24 %14, i24* %3, align 4, !dbg !5190
  call void @llvm.dbg.value(metadata i8 poison, metadata !5179, metadata !DIExpression()), !dbg !5180
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5178, metadata !DIExpression()), !dbg !5180
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5179, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.value(metadata i8* %15, metadata !5178, metadata !DIExpression()), !dbg !5180
  %17 = load i24, i24* %3, align 4, !dbg !5191
  %18 = and i24 %17, 68, !dbg !5193
  %19 = icmp eq i24 %18, 68, !dbg !5193
  br i1 %19, label %20, label %22, !dbg !5193

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5194
  store i24 %21, i24* %3, align 4, !dbg !5194
  br label %22, !dbg !5196

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5197
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5198 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5200, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i8* %1, metadata !5201, metadata !DIExpression()), !dbg !5204
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5205
  %5 = load i24, i24* %4, align 4, !dbg !5206
  %6 = or i24 %5, 128, !dbg !5206
  store i24 %6, i24* %4, align 4, !dbg !5206
  call void @llvm.dbg.value(metadata i8* %1, metadata !5201, metadata !DIExpression()), !dbg !5204
  %7 = load i8, i8* %1, align 1, !dbg !5207
  %8 = icmp eq i8 %7, 42, !dbg !5209
  br i1 %8, label %9, label %12, !dbg !5210

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5211
  store i24 %10, i24* %4, align 4, !dbg !5211
  call void @llvm.dbg.value(metadata i8* %1, metadata !5201, metadata !DIExpression()), !dbg !5204
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5213
  call void @llvm.dbg.value(metadata i8* %11, metadata !5201, metadata !DIExpression()), !dbg !5204
  store i8* %11, i8** %3, align 4, !dbg !5213
  br label %29, !dbg !5214

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5202, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i8** %3, metadata !5201, metadata !DIExpression(DW_OP_deref)), !dbg !5204
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5215
  call void @llvm.dbg.value(metadata i32 %13, metadata !5203, metadata !DIExpression()), !dbg !5204
  %14 = load i8*, i8** %3, align 4, !dbg !5216
  call void @llvm.dbg.value(metadata i8* %14, metadata !5201, metadata !DIExpression()), !dbg !5204
  %15 = icmp eq i8* %14, %1, !dbg !5218
  br i1 %15, label %29, label %16, !dbg !5219

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5220
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5222
  store i32 %13, i32* %18, align 4, !dbg !5223
  %19 = lshr i32 %13, 31, !dbg !5224
  %20 = lshr i24 %17, 1, !dbg !5225
  %21 = and i24 %20, 1, !dbg !5225
  %22 = zext i24 %21 to i32, !dbg !5225
  %23 = or i32 %19, %22, !dbg !5225
  %24 = trunc i32 %23 to i24, !dbg !5225
  %25 = shl nuw nsw i24 %24, 1, !dbg !5225
  %26 = and i24 %17, -131, !dbg !5225
  %27 = or i24 %26, 128, !dbg !5225
  %28 = or i24 %25, %27, !dbg !5225
  store i24 %28, i24* %4, align 4, !dbg !5225
  br label %29, !dbg !5226

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5204
  ret i8* %30, !dbg !5227
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5228 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5230, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata i8* %1, metadata !5231, metadata !DIExpression()), !dbg !5233
  %4 = load i8, i8* %1, align 1, !dbg !5234
  %5 = icmp eq i8 %4, 46, !dbg !5235
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5236
  %7 = load i24, i24* %6, align 4, !dbg !5237
  %8 = select i1 %5, i24 512, i24 0, !dbg !5237
  %9 = and i24 %7, -513, !dbg !5237
  %10 = or i24 %9, %8, !dbg !5237
  store i24 %10, i24* %6, align 4, !dbg !5237
  br i1 %5, label %11, label %32, !dbg !5238

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5231, metadata !DIExpression()), !dbg !5233
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5239
  call void @llvm.dbg.value(metadata i8* %12, metadata !5231, metadata !DIExpression()), !dbg !5233
  store i8* %12, i8** %3, align 4, !dbg !5239
  %13 = load i8, i8* %12, align 1, !dbg !5240
  %14 = icmp eq i8 %13, 42, !dbg !5242
  br i1 %14, label %15, label %18, !dbg !5243

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5244
  store i24 %16, i24* %6, align 4, !dbg !5244
  call void @llvm.dbg.value(metadata i8* %12, metadata !5231, metadata !DIExpression()), !dbg !5233
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5246
  call void @llvm.dbg.value(metadata i8* %17, metadata !5231, metadata !DIExpression()), !dbg !5233
  store i8* %17, i8** %3, align 4, !dbg !5246
  br label %32, !dbg !5247

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5231, metadata !DIExpression(DW_OP_deref)), !dbg !5233
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5248
  call void @llvm.dbg.value(metadata i32 %19, metadata !5232, metadata !DIExpression()), !dbg !5233
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5249
  store i32 %19, i32* %20, align 4, !dbg !5250
  %21 = lshr i32 %19, 31, !dbg !5251
  %22 = load i24, i24* %6, align 4, !dbg !5252
  %23 = lshr i24 %22, 1, !dbg !5252
  %24 = and i24 %23, 1, !dbg !5252
  %25 = zext i24 %24 to i32, !dbg !5252
  %26 = or i32 %21, %25, !dbg !5252
  %27 = trunc i32 %26 to i24, !dbg !5252
  %28 = shl nuw nsw i24 %27, 1, !dbg !5252
  %29 = and i24 %22, -3, !dbg !5252
  %30 = or i24 %28, %29, !dbg !5252
  store i24 %30, i24* %6, align 4, !dbg !5252
  %31 = load i8*, i8** %3, align 4, !dbg !5253
  call void @llvm.dbg.value(metadata i8* %31, metadata !5231, metadata !DIExpression()), !dbg !5233
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5233
  ret i8* %33, !dbg !5254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5255 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5257, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.value(metadata i8* %1, metadata !5258, metadata !DIExpression()), !dbg !5259
  %3 = load i8, i8* %1, align 1, !dbg !5260
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5261

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5262
  call void @llvm.dbg.value(metadata i8* %5, metadata !5258, metadata !DIExpression()), !dbg !5259
  %6 = load i8, i8* %5, align 1, !dbg !5265
  %7 = icmp eq i8 %6, 104, !dbg !5266
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5267
  %9 = load i24, i24* %8, align 4, !dbg !5267
  %10 = and i24 %9, -30721, !dbg !5267
  br i1 %7, label %11, label %14, !dbg !5268

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5269
  store i24 %12, i24* %8, align 4, !dbg !5269
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5271
  call void @llvm.dbg.value(metadata i8* %13, metadata !5258, metadata !DIExpression()), !dbg !5259
  br label %56, !dbg !5272

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5273
  store i24 %15, i24* %8, align 4, !dbg !5273
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5275
  call void @llvm.dbg.value(metadata i8* %17, metadata !5258, metadata !DIExpression()), !dbg !5259
  %18 = load i8, i8* %17, align 1, !dbg !5277
  %19 = icmp eq i8 %18, 108, !dbg !5278
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5279
  %21 = load i24, i24* %20, align 4, !dbg !5279
  %22 = and i24 %21, -30721, !dbg !5279
  br i1 %19, label %23, label %26, !dbg !5280

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5281
  store i24 %24, i24* %20, align 4, !dbg !5281
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5283
  call void @llvm.dbg.value(metadata i8* %25, metadata !5258, metadata !DIExpression()), !dbg !5259
  br label %56, !dbg !5284

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5285
  store i24 %27, i24* %20, align 4, !dbg !5285
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5287
  %30 = load i24, i24* %29, align 4, !dbg !5288
  %31 = and i24 %30, -30721, !dbg !5288
  %32 = or i24 %31, 10240, !dbg !5288
  store i24 %32, i24* %29, align 4, !dbg !5288
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5289
  call void @llvm.dbg.value(metadata i8* %33, metadata !5258, metadata !DIExpression()), !dbg !5259
  br label %56, !dbg !5290

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5291
  %36 = load i24, i24* %35, align 4, !dbg !5292
  %37 = and i24 %36, -30721, !dbg !5292
  %38 = or i24 %37, 12288, !dbg !5292
  store i24 %38, i24* %35, align 4, !dbg !5292
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5293
  call void @llvm.dbg.value(metadata i8* %39, metadata !5258, metadata !DIExpression()), !dbg !5259
  br label %56, !dbg !5294

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5295
  %42 = load i24, i24* %41, align 4, !dbg !5296
  %43 = and i24 %42, -30721, !dbg !5296
  %44 = or i24 %43, 14336, !dbg !5296
  store i24 %44, i24* %41, align 4, !dbg !5296
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5297
  call void @llvm.dbg.value(metadata i8* %45, metadata !5258, metadata !DIExpression()), !dbg !5259
  br label %56, !dbg !5298

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5299
  %48 = load i24, i24* %47, align 4, !dbg !5300
  %49 = and i24 %48, -30723, !dbg !5300
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5301
  call void @llvm.dbg.value(metadata i8* %50, metadata !5258, metadata !DIExpression()), !dbg !5259
  %51 = or i24 %49, 16386, !dbg !5302
  store i24 %51, i24* %47, align 4, !dbg !5302
  br label %56, !dbg !5303

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5304
  %54 = load i24, i24* %53, align 4, !dbg !5305
  %55 = and i24 %54, -30721, !dbg !5305
  store i24 %55, i24* %53, align 4, !dbg !5305
  br label %56, !dbg !5306

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5258, metadata !DIExpression()), !dbg !5259
  ret i8* %57, !dbg !5307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5308 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5310, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata i8* %1, metadata !5311, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata i8 0, metadata !5312, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata i8* %1, metadata !5311, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5315
  %3 = load i8, i8* %1, align 1, !dbg !5316
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5317
  store i8 %3, i8* %4, align 1, !dbg !5318
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5319

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5320

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5321
  %9 = load i24, i24* %8, align 4, !dbg !5321
  %10 = and i24 %9, -458753, !dbg !5321
  %11 = or i24 %10, %7, !dbg !5321
  call void @llvm.dbg.label(metadata !5313), !dbg !5322
  %12 = and i24 %9, 30720, !dbg !5323
  %13 = icmp eq i24 %12, 16384, !dbg !5323
  %14 = zext i1 %13 to i24, !dbg !5325
  %15 = or i24 %11, %14, !dbg !5325
  %16 = icmp eq i8 %3, 99, !dbg !5326
  br i1 %16, label %17, label %43, !dbg !5328

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5329
  %19 = icmp ne i24 %18, 0, !dbg !5329
  call void @llvm.dbg.value(metadata i1 %19, metadata !5312, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5315
  br label %43, !dbg !5331

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5332
  %22 = load i24, i24* %21, align 4, !dbg !5333
  %23 = and i24 %22, -458753, !dbg !5333
  %24 = or i24 %23, 262144, !dbg !5333
  call void @llvm.dbg.value(metadata i8 1, metadata !5312, metadata !DIExpression()), !dbg !5315
  br label %43, !dbg !5334

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5337
  %27 = load i24, i24* %26, align 4, !dbg !5338
  %28 = and i24 %27, -458753, !dbg !5338
  %29 = or i24 %28, 196608, !dbg !5338
  %30 = and i24 %27, 30720, !dbg !5339
  %31 = icmp eq i24 %30, 16384, !dbg !5339
  br label %43, !dbg !5341

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5342
  %34 = load i24, i24* %33, align 4, !dbg !5343
  %35 = and i24 %34, -458753, !dbg !5343
  %36 = or i24 %35, 196608, !dbg !5343
  %37 = and i24 %34, 30720, !dbg !5344
  %38 = icmp ne i24 %37, 0, !dbg !5344
  br label %43, !dbg !5346

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5347
  %41 = load i24, i24* %40, align 4, !dbg !5348
  %42 = or i24 %41, 1, !dbg !5348
  br label %43, !dbg !5349

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5350
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5351
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5352
  call void @llvm.dbg.value(metadata i8* %48, metadata !5311, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata i8 poison, metadata !5312, metadata !DIExpression()), !dbg !5315
  %49 = lshr i24 %44, 1, !dbg !5350
  %50 = and i24 %49, 1, !dbg !5350
  %51 = zext i24 %50 to i32, !dbg !5350
  %52 = or i32 %51, %47, !dbg !5350
  %53 = trunc i32 %52 to i24, !dbg !5350
  %54 = shl nuw nsw i24 %53, 1, !dbg !5350
  %55 = and i24 %44, -3, !dbg !5350
  %56 = or i24 %54, %55, !dbg !5350
  store i24 %56, i24* %46, align 4, !dbg !5350
  ret i8* %48, !dbg !5353
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5354 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5358, metadata !DIExpression()), !dbg !5361
  %2 = load i8*, i8** %0, align 4, !dbg !5362
  call void @llvm.dbg.value(metadata i8* %2, metadata !5359, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i32 0, metadata !5360, metadata !DIExpression()), !dbg !5361
  %3 = load i8, i8* %2, align 1, !dbg !5363
  %4 = zext i8 %3 to i32, !dbg !5364
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5365
  %6 = icmp eq i32 %5, 0, !dbg !5366
  br i1 %6, label %19, label %7, !dbg !5366

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5360, metadata !DIExpression()), !dbg !5361
  call void @llvm.dbg.value(metadata i8* %10, metadata !5359, metadata !DIExpression()), !dbg !5361
  %11 = mul i32 %9, 10, !dbg !5367
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5369
  call void @llvm.dbg.value(metadata i8* %12, metadata !5359, metadata !DIExpression()), !dbg !5361
  %13 = add i32 %11, -48, !dbg !5370
  %14 = add i32 %13, %8, !dbg !5371
  call void @llvm.dbg.value(metadata i32 %14, metadata !5360, metadata !DIExpression()), !dbg !5361
  %15 = load i8, i8* %12, align 1, !dbg !5363
  %16 = zext i8 %15 to i32, !dbg !5364
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5365
  %18 = icmp eq i32 %17, 0, !dbg !5366
  br i1 %18, label %19, label %7, !dbg !5366, !llvm.loop !5372

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5361
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5361
  store i8* %20, i8** %0, align 4, !dbg !5374
  ret i32 %21, !dbg !5375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5378, metadata !DIExpression()), !dbg !5379
  %2 = add i32 %0, -48, !dbg !5380
  %3 = icmp ult i32 %2, 10, !dbg !5381
  %4 = zext i1 %3 to i32, !dbg !5381
  ret i32 %4, !dbg !5382
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5383 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5388, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.value(metadata i32 %1, metadata !5389, metadata !DIExpression()), !dbg !5390
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5391, !srcloc !5393
  ret void, !dbg !5394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5395 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5397, metadata !DIExpression()), !dbg !5405
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5406
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5406
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5398, metadata !DIExpression()), !dbg !5407
  call void @llvm.va_start(i8* nonnull %3), !dbg !5408
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5409
  %5 = load i32, i32* %4, align 4, !dbg !5409
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5409
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5409
  call void @llvm.va_end(i8* nonnull %3), !dbg !5410
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5411
  ret void, !dbg !5411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5412 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6050, !srcloc !6051
  ret void, !dbg !6052
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6053 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6055, metadata !DIExpression()), !dbg !6057
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6058
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6059
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6060, !srcloc !6069
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6060
  call void @llvm.dbg.value(metadata i32 %3, metadata !6066, metadata !DIExpression()) #23, !dbg !6070
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()) #23, !dbg !6070
  call void @llvm.dbg.value(metadata i32 %3, metadata !6056, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata i32 %3, metadata !6071, metadata !DIExpression()) #23, !dbg !6076
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6078, !srcloc !6079
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6080
  ret i32 0, !dbg !6081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6082 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6084
  %2 = or i32 %1, 512, !dbg !6084
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6084
  ret void, !dbg !6085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6086 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6087
  %2 = or i32 %1, 1024, !dbg !6087
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6087
  ret void, !dbg !6088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6089 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6091, metadata !DIExpression()), !dbg !6092
  ret i32 0, !dbg !6093
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6094 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6097, metadata !DIExpression()), !dbg !6105
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6106
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6106
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6098, metadata !DIExpression()), !dbg !6107
  call void @llvm.va_start(i8* nonnull %3), !dbg !6108
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6109
  %5 = load i32, i32* %4, align 4, !dbg !6109
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6109
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6109
  call void @llvm.va_end(i8* nonnull %3), !dbg !6110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6111
  ret void, !dbg !6111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6112 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6117, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i8* %0, metadata !6116, metadata !DIExpression()), !dbg !6118
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6119
  ret void, !dbg !6120
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6125, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.value(metadata i8* %1, metadata !6126, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.value(metadata i32 %2, metadata !6127, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.value(metadata i8* %1, metadata !6128, metadata !DIExpression()), !dbg !6129
  %4 = icmp eq i32 %2, 0, !dbg !6130
  br i1 %4, label %14, label %5, !dbg !6131

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6129
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6131

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6128, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.value(metadata i32 %10, metadata !6127, metadata !DIExpression()), !dbg !6129
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i32 noundef %7) #25, !dbg !6132
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6134
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6135
  call void @llvm.dbg.value(metadata i32 %11, metadata !6127, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.value(metadata i8* %12, metadata !6128, metadata !DIExpression()), !dbg !6129
  br i1 %13, label %14, label %8, !dbg !6135, !llvm.loop !6136

14:                                               ; preds = %8, %3
  ret void, !dbg !6138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !6139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6144, metadata !DIExpression()), !dbg !6145
  %2 = add i32 %0, -1, !dbg !6146
  %3 = icmp ult i32 %2, 4, !dbg !6146
  %4 = shl i32 %2, 3, !dbg !6146
  %5 = lshr i32 1145657157, %4, !dbg !6146
  %6 = trunc i32 %5 to i8, !dbg !6146
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6146
  ret i8 %7, !dbg !6147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6148 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6152, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i32 %1, metadata !6153, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i32 0, metadata !6154, metadata !DIExpression()), !dbg !6164
  br label %4, !dbg !6165

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.36, i32 0, i32 0)) #25, !dbg !6166
  call void @llvm.dbg.value(metadata i32 0, metadata !6156, metadata !DIExpression()), !dbg !6167
  br label %16, !dbg !6168

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6154, metadata !DIExpression()), !dbg !6164
  %6 = icmp ult i32 %5, %1, !dbg !6169
  br i1 %6, label %7, label %11, !dbg !6173

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6174
  %9 = load i8, i8* %8, align 1, !dbg !6174
  %10 = zext i8 %9 to i32, !dbg !6176
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.37, i32 0, i32 0), i32 noundef %10) #25, !dbg !6177
  br label %12, !dbg !6178

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.38, i32 0, i32 0)) #25, !dbg !6179
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6181
  call void @llvm.dbg.value(metadata i32 %13, metadata !6154, metadata !DIExpression()), !dbg !6164
  %14 = icmp eq i32 %13, 8, !dbg !6182
  br i1 %14, label %3, label %4, !dbg !6165, !llvm.loop !6183

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.39, i32 0, i32 0)) #25, !dbg !6185
  ret void, !dbg !6186

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6156, metadata !DIExpression()), !dbg !6167
  %18 = icmp ult i32 %17, %1, !dbg !6187
  br i1 %18, label %19, label %26, !dbg !6188

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6189
  %21 = load i8, i8* %20, align 1, !dbg !6189
  call void @llvm.dbg.value(metadata i8 %21, metadata !6158, metadata !DIExpression()), !dbg !6190
  %22 = zext i8 %21 to i32, !dbg !6191
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6192
  %24 = icmp eq i32 %23, 0, !dbg !6193
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6192
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.40, i32 0, i32 0), i32 noundef %25) #25, !dbg !6194
  br label %27, !dbg !6195

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.41, i32 0, i32 0)) #25, !dbg !6196
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6198
  call void @llvm.dbg.value(metadata i32 %28, metadata !6156, metadata !DIExpression()), !dbg !6167
  %29 = icmp eq i32 %28, 8, !dbg !6199
  br i1 %29, label %15, label %16, !dbg !6168, !llvm.loop !6200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6204, metadata !DIExpression()), !dbg !6205
  %2 = add i32 %0, -32, !dbg !6206
  %3 = icmp ult i32 %2, 95, !dbg !6206
  %4 = zext i1 %3 to i32, !dbg !6206
  ret i32 %4, !dbg !6207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6257, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6258, metadata !DIExpression()), !dbg !6259
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6260
  br i1 %3, label %5, label %4, !dbg !6262

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6263
  br label %5, !dbg !6265

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6266
  ret void, !dbg !6267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6268 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6272, metadata !DIExpression()), !dbg !6273
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6274
  %3 = load i32, i32* %2, align 4, !dbg !6274
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6274
  %5 = load i32, i32* %4, align 4, !dbg !6274
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6274
  %7 = load i32, i32* %6, align 4, !dbg !6274
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.42, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6274
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6279
  %9 = load i32, i32* %8, align 4, !dbg !6279
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6279
  %11 = load i32, i32* %10, align 4, !dbg !6279
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6279
  %13 = load i32, i32* %12, align 4, !dbg !6279
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.43, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6279
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6284
  %15 = load i32, i32* %14, align 4, !dbg !6284
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6284
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6289
  %17 = load i32, i32* %16, align 4, !dbg !6289
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.45, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6289
  ret void, !dbg !6294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6295 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6312, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6313, metadata !DIExpression()), !dbg !6315
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6316
  %4 = load i32, i32* %3, align 4, !dbg !6316
  call void @llvm.dbg.value(metadata i32 %4, metadata !6314, metadata !DIExpression()), !dbg !6315
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6317
  ret void, !dbg !6318
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6319 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6323, metadata !DIExpression()), !dbg !6326
  call void @llvm.dbg.value(metadata i8* %0, metadata !6324, metadata !DIExpression()), !dbg !6326
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6327
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6327
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6325, metadata !DIExpression()), !dbg !6328
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6328
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6329
  %5 = bitcast i8* %4 to i32*, !dbg !6329
  %6 = load i32, i32* %5, align 4, !dbg !6329
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6330
  store i32 %6, i32* %7, align 4, !dbg !6331
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6332
  unreachable, !dbg !6333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6337, metadata !DIExpression()), !dbg !6338
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6339
  ret void, !dbg !6340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6345, metadata !DIExpression()), !dbg !6346
  %2 = icmp sgt i32 %0, -1, !dbg !6347
  br i1 %2, label %3, label %8, !dbg !6349

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6350, !srcloc !6352
  %4 = and i32 %0, 31, !dbg !6353
  %5 = shl nuw i32 1, %4, !dbg !6354
  %6 = lshr i32 %0, 5, !dbg !6355
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6356
  store volatile i32 %5, i32* %7, align 4, !dbg !6357
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6358, !srcloc !6359
  br label %8, !dbg !6360

8:                                                ; preds = %3, %1
  ret void, !dbg !6361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6364, metadata !DIExpression()), !dbg !6365
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6366
  ret void, !dbg !6367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6370, metadata !DIExpression()), !dbg !6371
  %2 = icmp sgt i32 %0, -1, !dbg !6372
  br i1 %2, label %3, label %8, !dbg !6374

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6375
  %5 = shl nuw i32 1, %4, !dbg !6377
  %6 = lshr i32 %0, 5, !dbg !6378
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6379
  store volatile i32 %5, i32* %7, align 4, !dbg !6380
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6381, !srcloc !6385
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6386, !srcloc !6389
  br label %8, !dbg !6390

8:                                                ; preds = %3, %1
  ret void, !dbg !6391
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6396, metadata !DIExpression()), !dbg !6397
  %2 = lshr i32 %0, 5, !dbg !6398
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6399
  %4 = load volatile i32, i32* %3, align 4, !dbg !6399
  %5 = and i32 %0, 31, !dbg !6400
  %6 = shl nuw i32 1, %5, !dbg !6400
  %7 = and i32 %4, %6, !dbg !6401
  ret i32 %7, !dbg !6402
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6407, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.value(metadata i32 %1, metadata !6408, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.value(metadata i32 %2, metadata !6409, metadata !DIExpression()), !dbg !6410
  %4 = add i32 %1, 1, !dbg !6411
  call void @llvm.dbg.value(metadata i32 %4, metadata !6408, metadata !DIExpression()), !dbg !6410
  %5 = icmp ult i32 %4, 16, !dbg !6414
  br i1 %5, label %7, label %6, !dbg !6417

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6418
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.49, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6418
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6418
  unreachable, !dbg !6418

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6420
  ret void, !dbg !6421
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6426, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.value(metadata i32 %1, metadata !6427, metadata !DIExpression()), !dbg !6428
  %3 = trunc i32 %1 to i8, !dbg !6429
  %4 = shl i8 %3, 4, !dbg !6429
  %5 = and i32 %0, 15, !dbg !6431
  %6 = add nsw i32 %5, -4, !dbg !6431
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6431
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6431
  %9 = icmp slt i32 %0, 0, !dbg !6431
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6431
  store volatile i8 %4, i8* %10, align 1, !dbg !6429
  ret void, !dbg !6432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6433 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6435, metadata !DIExpression()), !dbg !6436
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6437
  ret void, !dbg !6438
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6439 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6441
  tail call void @z_arm_int_exit() #25, !dbg !6442
  ret void, !dbg !6443
}

; Function Attrs: optsize
declare !dbg !6444 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6445 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6447 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6449
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6450
  tail call void @z_bss_zero() #25, !dbg !6451
  tail call void @z_data_copy() #25, !dbg !6452
  tail call void @z_arm_interrupt_init() #25, !dbg !6453
  tail call void @z_cstart() #27, !dbg !6454
  unreachable, !dbg !6454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6455 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6456
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6457, !srcloc !6460
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6461, !srcloc !6464
  ret void, !dbg !6465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6466 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6467
  %2 = and i32 %1, -15728641, !dbg !6467
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6467
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6468, !srcloc !6475
  call void @llvm.dbg.value(metadata i32 %3, metadata !6473, metadata !DIExpression()) #23, !dbg !6476
  %4 = and i32 %3, -5, !dbg !6477
  call void @llvm.dbg.value(metadata i32 %4, metadata !6478, metadata !DIExpression()) #23, !dbg !6483
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6485, !srcloc !6486
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6487, !srcloc !6464
  ret void, !dbg !6489
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6493, metadata !DIExpression()), !dbg !6494
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6495
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6496
  store i32 %0, i32* %3, align 4, !dbg !6497
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6498
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6499
  store i32 %4, i32* %5, align 4, !dbg !6500
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6501
  %7 = or i32 %6, 268435456, !dbg !6501
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6501
  call void @llvm.dbg.value(metadata i32 0, metadata !6502, metadata !DIExpression()) #23, !dbg !6505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6507, !srcloc !6508
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6509
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6510
  %10 = load i32, i32* %9, align 4, !dbg !6510
  ret i32 %10, !dbg !6511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6512 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6625, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6626, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata i8* %2, metadata !6627, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6628, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata i8* %4, metadata !6629, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata i8* %5, metadata !6630, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata i8* %6, metadata !6631, metadata !DIExpression()), !dbg !6633
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6634
  call void @llvm.dbg.value(metadata i8* %8, metadata !6632, metadata !DIExpression()), !dbg !6633
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6635
  %10 = bitcast i8* %9 to i32*, !dbg !6635
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6636
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6637
  %12 = bitcast i8* %8 to i32*, !dbg !6638
  store i32 %11, i32* %12, align 4, !dbg !6639
  %13 = ptrtoint i8* %4 to i32, !dbg !6640
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6641
  %15 = bitcast i8* %14 to i32*, !dbg !6641
  store i32 %13, i32* %15, align 4, !dbg !6642
  %16 = ptrtoint i8* %5 to i32, !dbg !6643
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6644
  %18 = bitcast i8* %17 to i32*, !dbg !6644
  store i32 %16, i32* %18, align 4, !dbg !6645
  %19 = ptrtoint i8* %6 to i32, !dbg !6646
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6647
  %21 = bitcast i8* %20 to i32*, !dbg !6647
  store i32 %19, i32* %21, align 4, !dbg !6648
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6649
  %23 = bitcast i8* %22 to i32*, !dbg !6649
  store i32 16777216, i32* %23, align 4, !dbg !6650
  %24 = ptrtoint i8* %8 to i32, !dbg !6651
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6652
  store i32 %24, i32* %25, align 8, !dbg !6653
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6654
  store i32 0, i32* %26, align 4, !dbg !6655
  ret void, !dbg !6656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6657 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6662, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i32 %1, metadata !6663, metadata !DIExpression()), !dbg !6668
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6669
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6664, metadata !DIExpression()), !dbg !6668
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6670
  br i1 %4, label %19, label %5, !dbg !6672

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6667, metadata !DIExpression()), !dbg !6668
  %6 = icmp eq i32 %0, -22, !dbg !6673
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6673
  %8 = load i32, i32* %7, align 4, !dbg !6673
  br i1 %6, label %16, label %9, !dbg !6675

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6673
  %11 = icmp ule i32 %10, %0, !dbg !6673
  %12 = icmp ugt i32 %8, %0, !dbg !6673
  %13 = and i1 %12, %11, !dbg !6673
  %14 = icmp ugt i32 %8, %1, !dbg !6673
  %15 = and i1 %14, %13, !dbg !6673
  br i1 %15, label %18, label %19, !dbg !6673

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6673
  br i1 %17, label %18, label %19, !dbg !6675

18:                                               ; preds = %9, %16
  br label %19, !dbg !6676

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6668
  ret i32 %20, !dbg !6678
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6683, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.value(metadata i8* %1, metadata !6684, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6685, metadata !DIExpression()), !dbg !6686
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6687
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6688
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6689, !srcloc !6690
  unreachable, !dbg !6691
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6692 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6710, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i32 %1, metadata !6711, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i32 %2, metadata !6712, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6713, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i32 0, metadata !6714, metadata !DIExpression()), !dbg !6720
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6721
  call void @llvm.dbg.value(metadata i32 %8, metadata !6715, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6720
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6722
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6722
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6723
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6723
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6719, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i32 0, metadata !6725, metadata !DIExpression()) #23, !dbg !6728
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6730, !srcloc !6731
  call void @llvm.dbg.value(metadata i8* %6, metadata !6717, metadata !DIExpression(DW_OP_deref)), !dbg !6720
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6732
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6718, metadata !DIExpression()), !dbg !6720
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6733
  br i1 %11, label %12, label %13, !dbg !6736

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6737
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.55, i32 0, i32 0)) #25, !dbg !6737
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6737
  unreachable, !dbg !6737

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6739
  call void @llvm.dbg.value(metadata i32 %14, metadata !6715, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i8* %5, metadata !6716, metadata !DIExpression(DW_OP_deref)), !dbg !6720
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6740
  call void @llvm.dbg.value(metadata i32 %15, metadata !6714, metadata !DIExpression()), !dbg !6720
  %16 = load i8, i8* %5, align 1, !dbg !6741, !range !6743
  call void @llvm.dbg.value(metadata i8 %16, metadata !6716, metadata !DIExpression()), !dbg !6720
  %17 = icmp eq i8 %16, 0, !dbg !6741
  br i1 %17, label %18, label %35, !dbg !6744

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6745
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6746
  %21 = load i8, i8* %6, align 1, !dbg !6747, !range !6743
  call void @llvm.dbg.value(metadata i8 %21, metadata !6717, metadata !DIExpression()), !dbg !6720
  %22 = icmp eq i8 %21, 0, !dbg !6747
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6749
  %24 = load i32, i32* %23, align 4, !dbg !6749
  br i1 %22, label %30, label %25, !dbg !6750

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6751
  %27 = icmp eq i32 %26, 0, !dbg !6754
  br i1 %27, label %28, label %34, !dbg !6755

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6756
  br label %32, !dbg !6758

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6759
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6749
  br label %34, !dbg !6761

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6761
  br label %35, !dbg !6762

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6762
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6762
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6762
  ret void, !dbg !6762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6768, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata i32 %1, metadata !6769, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata i32 %2, metadata !6770, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata i8* %3, metadata !6771, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata i8 0, metadata !6772, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6773, metadata !DIExpression()), !dbg !6774
  store i8 0, i8* %3, align 1, !dbg !6775
  %5 = icmp ugt i32 %2, -16777217, !dbg !6776
  br i1 %5, label %6, label %17, !dbg !6778

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6779
  %8 = icmp eq i32 %7, 8, !dbg !6779
  br i1 %8, label %9, label %10, !dbg !6779

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.66, i32 0, i32 0), i32 noundef 69) #25, !dbg !6781
  br label %17, !dbg !6787

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6788
  %12 = icmp eq i32 %11, 0, !dbg !6788
  br i1 %12, label %13, label %14, !dbg !6789

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6773, metadata !DIExpression()), !dbg !6774
  store i8 1, i8* %3, align 1, !dbg !6792
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6774
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6773, metadata !DIExpression()), !dbg !6774
  br label %17, !dbg !6795

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6774
  ret %struct.__esf* %18, !dbg !6796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6797 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6801, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i32 %1, metadata !6802, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i8* %2, metadata !6803, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i32 0, metadata !6804, metadata !DIExpression()), !dbg !6805
  store i8 0, i8* %2, align 1, !dbg !6806
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6807

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6808
  call void @llvm.dbg.value(metadata i32 %5, metadata !6804, metadata !DIExpression()), !dbg !6805
  br label %12, !dbg !6810

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6811
  call void @llvm.dbg.value(metadata i32 %7, metadata !6804, metadata !DIExpression()), !dbg !6805
  br label %12, !dbg !6812

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6813
  call void @llvm.dbg.value(metadata i32 0, metadata !6804, metadata !DIExpression()), !dbg !6805
  br label %12, !dbg !6814

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6815
  call void @llvm.dbg.value(metadata i32 0, metadata !6804, metadata !DIExpression()), !dbg !6805
  br label %12, !dbg !6816

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6817
  br label %12, !dbg !6818

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6819
  br label %12, !dbg !6820

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6805
  call void @llvm.dbg.value(metadata i32 %13, metadata !6804, metadata !DIExpression()), !dbg !6805
  ret i32 %13, !dbg !6821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6822 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6826, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata i8* %1, metadata !6827, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata i32 0, metadata !6828, metadata !DIExpression()), !dbg !6829
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !6830
  store i8 0, i8* %1, align 1, !dbg !6835
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6836
  %4 = and i32 %3, 2, !dbg !6838
  %5 = icmp eq i32 %4, 0, !dbg !6839
  br i1 %5, label %7, label %6, !dbg !6840

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.59, i32 0, i32 0), i32 noundef 69) #25, !dbg !6841
  br label %38, !dbg !6847

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6848
  %9 = icmp sgt i32 %8, -1, !dbg !6850
  br i1 %9, label %11, label %10, !dbg !6851

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !6852
  br label %38, !dbg !6858

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6859
  %13 = and i32 %12, 1073741824, !dbg !6861
  %14 = icmp eq i32 %13, 0, !dbg !6862
  br i1 %14, label %37, label %15, !dbg !6863

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.61, i32 0, i32 0), i32 noundef 69) #25, !dbg !6864
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6870
  br i1 %16, label %17, label %21, !dbg !6872

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6873
  %19 = load i32, i32* %18, align 4, !dbg !6873
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.62, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6873
  %20 = load i32, i32* %18, align 4, !dbg !6879
  call void @llvm.dbg.value(metadata i32 %20, metadata !6828, metadata !DIExpression()), !dbg !6829
  br label %38, !dbg !6880

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6881
  %23 = and i32 %22, 255, !dbg !6883
  %24 = icmp eq i32 %23, 0, !dbg !6884
  br i1 %24, label %27, label %25, !dbg !6885

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6886
  call void @llvm.dbg.value(metadata i32 %26, metadata !6828, metadata !DIExpression()), !dbg !6829
  br label %38, !dbg !6888

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6889
  %29 = and i32 %28, 65280, !dbg !6891
  %30 = icmp eq i32 %29, 0, !dbg !6892
  br i1 %30, label %32, label %31, !dbg !6893

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6894
  call void @llvm.dbg.value(metadata i32 0, metadata !6828, metadata !DIExpression()), !dbg !6829
  br label %38, !dbg !6896

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6897
  %34 = icmp ult i32 %33, 65536, !dbg !6899
  br i1 %34, label %36, label %35, !dbg !6900

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6901
  call void @llvm.dbg.value(metadata i32 0, metadata !6828, metadata !DIExpression()), !dbg !6829
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !6903
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.64, i32 0, i32 0)) #25, !dbg !6903
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !6903
  unreachable, !dbg !6903

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !6908
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.65, i32 0, i32 0)) #25, !dbg !6908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !6908
  unreachable, !dbg !6908

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6829
  call void @llvm.dbg.value(metadata i32 %39, metadata !6828, metadata !DIExpression()), !dbg !6829
  ret i32 %39, !dbg !6913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6914 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6916, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i32 %1, metadata !6917, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i8* %2, metadata !6918, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i32 0, metadata !6919, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i32 -22, metadata !6920, metadata !DIExpression()), !dbg !6929
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !6930
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6935
  %5 = and i32 %4, 16, !dbg !6937
  %6 = icmp eq i32 %5, 0, !dbg !6938
  br i1 %6, label %8, label %7, !dbg !6939

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6940
  br label %8, !dbg !6946

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6947
  %10 = and i32 %9, 8, !dbg !6949
  %11 = icmp eq i32 %10, 0, !dbg !6950
  br i1 %11, label %13, label %12, !dbg !6951

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6952
  br label %13, !dbg !6958

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6959
  %15 = and i32 %14, 2, !dbg !6960
  %16 = icmp eq i32 %15, 0, !dbg !6961
  br i1 %16, label %27, label %17, !dbg !6962

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6963
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6968
  call void @llvm.dbg.value(metadata i32 %18, metadata !6921, metadata !DIExpression()), !dbg !6969
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6970
  %20 = and i32 %19, 128, !dbg !6972
  %21 = icmp eq i32 %20, 0, !dbg !6973
  br i1 %21, label %27, label %22, !dbg !6974

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6920, metadata !DIExpression()), !dbg !6929
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6975
  %23 = icmp eq i32 %1, 0, !dbg !6981
  br i1 %23, label %27, label %24, !dbg !6983

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6984
  %26 = and i32 %25, -129, !dbg !6984
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6984
  br label %27, !dbg !6986

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6929
  call void @llvm.dbg.value(metadata i32 %28, metadata !6920, metadata !DIExpression()), !dbg !6929
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6987
  %30 = and i32 %29, 1, !dbg !6989
  %31 = icmp eq i32 %30, 0, !dbg !6990
  br i1 %31, label %33, label %32, !dbg !6991

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6992
  br label %33, !dbg !6998

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6999
  %35 = and i32 %34, 32, !dbg !7001
  %36 = icmp eq i32 %35, 0, !dbg !7002
  br i1 %36, label %38, label %37, !dbg !7003

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7004
  br label %38, !dbg !7010

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7011
  %40 = and i32 %39, 16, !dbg !7012
  %41 = icmp eq i32 %40, 0, !dbg !7012
  br i1 %41, label %42, label %46, !dbg !7013

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7014
  %44 = and i32 %43, 2, !dbg !7015
  %45 = icmp eq i32 %44, 0, !dbg !7015
  br i1 %45, label %60, label %46, !dbg !7016

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7017
  %48 = and i32 %47, 2048, !dbg !7018
  %49 = icmp eq i32 %48, 0, !dbg !7018
  br i1 %49, label %60, label %50, !dbg !7019

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7020
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7021
  call void @llvm.dbg.value(metadata i32 %52, metadata !6924, metadata !DIExpression()), !dbg !7022
  %53 = icmp eq i32 %52, 0, !dbg !7023
  br i1 %53, label %55, label %54, !dbg !7025

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7026, metadata !DIExpression()) #23, !dbg !7029
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7032, !srcloc !7033
  call void @llvm.dbg.value(metadata i32 2, metadata !6919, metadata !DIExpression()), !dbg !6929
  br label %60, !dbg !7034

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7035
  %57 = and i32 %56, 16, !dbg !7035
  %58 = icmp eq i32 %57, 0, !dbg !7035
  br i1 %58, label %60, label %59, !dbg !7039

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7040
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !7040
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7040
  unreachable, !dbg !7040

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6929
  call void @llvm.dbg.value(metadata i32 %61, metadata !6919, metadata !DIExpression()), !dbg !6929
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7042
  %63 = and i32 %62, 32, !dbg !7044
  %64 = icmp eq i32 %63, 0, !dbg !7045
  br i1 %64, label %68, label %65, !dbg !7046

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7047
  %67 = and i32 %66, -8193, !dbg !7047
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7047
  br label %68, !dbg !7049

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7050
  %70 = or i32 %69, 255, !dbg !7050
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7050
  store i8 0, i8* %2, align 1, !dbg !7051
  ret i32 %61, !dbg !7052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7053 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7057, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 %0, metadata !7058, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i8* %1, metadata !7059, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i32 0, metadata !7060, metadata !DIExpression()), !dbg !7064
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7065
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7070
  %4 = and i32 %3, 4096, !dbg !7072
  %5 = icmp eq i32 %4, 0, !dbg !7072
  br i1 %5, label %7, label %6, !dbg !7073

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7074
  br label %7, !dbg !7080

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7081
  %9 = and i32 %8, 2048, !dbg !7083
  %10 = icmp eq i32 %9, 0, !dbg !7083
  br i1 %10, label %12, label %11, !dbg !7084

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7085
  br label %12, !dbg !7091

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7092
  %14 = and i32 %13, 512, !dbg !7093
  %15 = icmp eq i32 %14, 0, !dbg !7093
  br i1 %15, label %26, label %16, !dbg !7094

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7095
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7100
  call void @llvm.dbg.value(metadata i32 %17, metadata !7061, metadata !DIExpression()), !dbg !7101
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7102
  %19 = and i32 %18, 32768, !dbg !7104
  %20 = icmp eq i32 %19, 0, !dbg !7105
  br i1 %20, label %26, label %21, !dbg !7106

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7107
  %22 = icmp eq i32 %0, 0, !dbg !7113
  br i1 %22, label %26, label %23, !dbg !7115

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7116
  %25 = and i32 %24, -32769, !dbg !7116
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7116
  br label %26, !dbg !7118

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7119
  %28 = and i32 %27, 1024, !dbg !7121
  %29 = icmp eq i32 %28, 0, !dbg !7121
  br i1 %29, label %31, label %30, !dbg !7122

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7123
  br label %31, !dbg !7129

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7130
  %33 = and i32 %32, 256, !dbg !7132
  %34 = icmp eq i32 %33, 0, !dbg !7133
  br i1 %34, label %35, label %39, !dbg !7134

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7135
  %37 = and i32 %36, 8192, !dbg !7137
  %38 = icmp eq i32 %37, 0, !dbg !7137
  br i1 %38, label %41, label %39, !dbg !7138

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7139
  br label %41, !dbg !7140

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7140
  %43 = or i32 %42, 65280, !dbg !7140
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7140
  store i8 0, i8* %1, align 1, !dbg !7141
  ret void, !dbg !7142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7143 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7149, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata i32 0, metadata !7150, metadata !DIExpression()), !dbg !7151
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7152
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7157
  %2 = and i32 %1, 33554432, !dbg !7159
  %3 = icmp eq i32 %2, 0, !dbg !7160
  br i1 %3, label %5, label %4, !dbg !7161

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !7162
  br label %5, !dbg !7168

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7169
  %7 = and i32 %6, 16777216, !dbg !7171
  %8 = icmp eq i32 %7, 0, !dbg !7172
  br i1 %8, label %10, label %9, !dbg !7173

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7174
  br label %10, !dbg !7180

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7181
  %12 = and i32 %11, 524288, !dbg !7183
  %13 = icmp eq i32 %12, 0, !dbg !7184
  br i1 %13, label %15, label %14, !dbg !7185

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7186
  br label %15, !dbg !7192

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7193
  %17 = and i32 %16, 262144, !dbg !7195
  %18 = icmp eq i32 %17, 0, !dbg !7196
  br i1 %18, label %20, label %19, !dbg !7197

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7198
  br label %20, !dbg !7204

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7205
  %22 = and i32 %21, 131072, !dbg !7207
  %23 = icmp eq i32 %22, 0, !dbg !7208
  br i1 %23, label %25, label %24, !dbg !7209

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !7210
  br label %25, !dbg !7216

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7217
  %27 = and i32 %26, 65536, !dbg !7219
  %28 = icmp eq i32 %27, 0, !dbg !7220
  br i1 %28, label %30, label %29, !dbg !7221

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7222
  br label %30, !dbg !7228

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7229
  %32 = or i32 %31, -65536, !dbg !7229
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7229
  ret void, !dbg !7230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7231 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7235, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i8* %0, metadata !7236, metadata !DIExpression()), !dbg !7237
  store i8 0, i8* %0, align 1, !dbg !7238
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7239
  ret void, !dbg !7244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7245 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7249, metadata !DIExpression()), !dbg !7251
  call void @llvm.dbg.value(metadata i32 %0, metadata !7250, metadata !DIExpression()), !dbg !7251
  %2 = icmp slt i32 %0, 16, !dbg !7252
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7252
  %4 = add nsw i32 %0, -16, !dbg !7252
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7252
  ret void, !dbg !7257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7258 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7262, metadata !DIExpression()), !dbg !7265
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7266
  %3 = load i32, i32* %2, align 4, !dbg !7266
  %4 = inttoptr i32 %3 to i16*, !dbg !7267
  call void @llvm.dbg.value(metadata i16* %4, metadata !7263, metadata !DIExpression()), !dbg !7265
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7268
  %6 = or i32 %5, 256, !dbg !7268
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7268
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7269, !srcloc !7272
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7273, !srcloc !7276
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7277
  %8 = load i16, i16* %7, align 2, !dbg !7278
  call void @llvm.dbg.value(metadata i16 %8, metadata !7264, metadata !DIExpression()), !dbg !7265
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7279
  %10 = and i32 %9, -257, !dbg !7279
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7279
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7280, !srcloc !7272
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7282, !srcloc !7276
  %11 = icmp eq i16 %8, -8446, !dbg !7284
  ret i1 %11, !dbg !7286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7287 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7288
  %2 = or i32 %1, 16, !dbg !7288
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7288
  ret void, !dbg !7289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7290 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7293, metadata !DIExpression()), !dbg !7294
  br label %1, !dbg !7295

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7293, metadata !DIExpression()), !dbg !7294
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef %2) #24, !dbg !7297
  %3 = add nuw nsw i32 %2, 1, !dbg !7300
  call void @llvm.dbg.value(metadata i32 %3, metadata !7293, metadata !DIExpression()), !dbg !7294
  %4 = icmp eq i32 %3, 86, !dbg !7301
  br i1 %4, label %5, label %1, !dbg !7295, !llvm.loop !7302

5:                                                ; preds = %1
  ret void, !dbg !7304
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.69(i32 noundef %0) unnamed_addr #14 !dbg !7305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7307, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata i32 1, metadata !7308, metadata !DIExpression()), !dbg !7309
  %2 = and i32 %0, 15, !dbg !7310
  %3 = add nsw i32 %2, -4, !dbg !7310
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7310
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7310
  %6 = icmp slt i32 %0, 0, !dbg !7310
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7310
  store volatile i8 16, i8* %7, align 1, !dbg !7311
  ret void, !dbg !7313
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7314 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7423, metadata !DIExpression()), !dbg !7424
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7425
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7427
  br i1 %3, label %4, label %12, !dbg !7428

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7429, !srcloc !7441
  call void @llvm.dbg.value(metadata i32 %5, metadata !7432, metadata !DIExpression()) #23, !dbg !7442
  %6 = icmp eq i32 %5, 0, !dbg !7443
  br i1 %6, label %12, label %7, !dbg !7444

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7445
  %9 = or i32 %8, 268435456, !dbg !7445
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7445
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7447
  %11 = and i32 %10, -32769, !dbg !7447
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7447
  br label %12, !dbg !7448

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7449
  ret void, !dbg !7450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7451 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7452
  ret void, !dbg !7453
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !501, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i8 0, metadata !502, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 64, metadata !504, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 undef, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7454
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7455
  %3 = load i32, i32* %2, align 4, !dbg !7455
  call void @llvm.dbg.value(metadata i32 %3, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7454
  %4 = add i32 %3, -64, !dbg !7457
  call void @llvm.dbg.value(metadata i32 %4, metadata !503, metadata !DIExpression()), !dbg !7454
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7458
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7459
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7460
  call void @llvm.dbg.value(metadata i8 1, metadata !502, metadata !DIExpression()), !dbg !7454
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7461
  ret void, !dbg !7462
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7463 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7464
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7465, !srcloc !7468
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7469, !srcloc !7472
  ret void, !dbg !7473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7474 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7475, !srcloc !7478
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7479
  ret void, !dbg !7480
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7481 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7496, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i8 %1, metadata !7497, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i32 %2, metadata !7498, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i32 %3, metadata !7499, metadata !DIExpression()), !dbg !7500
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7501
  %6 = icmp eq i32 %5, -22, !dbg !7503
  br i1 %6, label %7, label %9, !dbg !7504

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7505
  %8 = zext i8 %1 to i32, !dbg !7505
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.81, i32 0, i32 0), i32 noundef %8) #25, !dbg !7505
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7505
  unreachable, !dbg !7505

9:                                                ; preds = %4
  ret void, !dbg !7510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7511 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7516, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.value(metadata i8 %1, metadata !7517, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.value(metadata i32 undef, metadata !7518, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.value(metadata i32 undef, metadata !7519, metadata !DIExpression()), !dbg !7521
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7522
  call void @llvm.dbg.value(metadata i8 %3, metadata !7520, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7521
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7523
  call void @llvm.dbg.value(metadata i32 %4, metadata !7520, metadata !DIExpression()), !dbg !7521
  %5 = trunc i32 %4 to i8, !dbg !7524
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7525
  ret i32 %4, !dbg !7526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7527 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7531, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i8 %1, metadata !7532, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i8 %2, metadata !7533, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i1 %3, metadata !7534, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7537
  %5 = zext i8 %2 to i32, !dbg !7538
  call void @llvm.dbg.value(metadata i32 %5, metadata !7536, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i32 0, metadata !7535, metadata !DIExpression()), !dbg !7537
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7536, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i32 0, metadata !7535, metadata !DIExpression()), !dbg !7537
  %7 = icmp eq i8 %1, 0, !dbg !7539
  br i1 %7, label %30, label %8, !dbg !7542

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7536, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i32 %10, metadata !7535, metadata !DIExpression()), !dbg !7537
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7543
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7546
  %13 = load i32, i32* %12, align 4, !dbg !7546
  %14 = icmp eq i32 %13, 0, !dbg !7547
  br i1 %14, label %26, label %15, !dbg !7548

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7549

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7551
  %18 = icmp eq i32 %17, 0, !dbg !7551
  br i1 %18, label %19, label %20, !dbg !7552

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.82, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7553
  br label %30, !dbg !7559

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7560
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7561
  call void @llvm.dbg.value(metadata i32 %22, metadata !7536, metadata !DIExpression()), !dbg !7537
  %23 = icmp eq i32 %22, -22, !dbg !7562
  br i1 %23, label %30, label %24, !dbg !7564

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7565
  call void @llvm.dbg.value(metadata i32 %25, metadata !7536, metadata !DIExpression()), !dbg !7537
  br label %26, !dbg !7566

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7537
  call void @llvm.dbg.value(metadata i32 %27, metadata !7536, metadata !DIExpression()), !dbg !7537
  %28 = add nuw nsw i32 %10, 1, !dbg !7567
  call void @llvm.dbg.value(metadata i32 %28, metadata !7535, metadata !DIExpression()), !dbg !7537
  %29 = icmp eq i32 %28, %6, !dbg !7539
  br i1 %29, label %30, label %8, !dbg !7542, !llvm.loop !7568

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7537
  ret i32 %31, !dbg !7570
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7571 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7575, metadata !DIExpression()), !dbg !7577
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7578
  %3 = load i32, i32* %2, align 4, !dbg !7578
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7579, !range !7580
  %5 = icmp ult i32 %4, 2, !dbg !7579
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7581
  br i1 %7, label %8, label %15, !dbg !7581

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7582
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7583
  %11 = load i32, i32* %10, align 4, !dbg !7583
  %12 = and i32 %11, %9, !dbg !7584
  %13 = icmp eq i32 %12, 0, !dbg !7585
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7576, metadata !DIExpression()), !dbg !7577
  ret i32 %16, !dbg !7586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7587 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7591, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7592, metadata !DIExpression()), !dbg !7594
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7595
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7595
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7593, metadata !DIExpression()), !dbg !7596
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7597
  %6 = load i32, i32* %5, align 4, !dbg !7597
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7598
  store i32 %6, i32* %7, align 4, !dbg !7599
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7600
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7601
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7602
  %11 = load i32, i32* %10, align 4, !dbg !7602
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7603
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7604
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7605
  ret i32 %12, !dbg !7606
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7607 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7614, metadata !DIExpression()), !dbg !7618
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7615, metadata !DIExpression()), !dbg !7618
  call void @llvm.dbg.value(metadata i32 undef, metadata !7616, metadata !DIExpression()), !dbg !7618
  call void @llvm.dbg.value(metadata i32 %2, metadata !7617, metadata !DIExpression()), !dbg !7618
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7619
  %5 = load i32, i32* %4, align 4, !dbg !7619
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7620
  %7 = or i32 %6, %5, !dbg !7621
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7622
  store i32 %7, i32* %8, align 4, !dbg !7623
  ret void, !dbg !7624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7625 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7629, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7630, metadata !DIExpression()), !dbg !7631
  %3 = zext i8 %0 to i32, !dbg !7632
  %4 = icmp ugt i8 %0, 7, !dbg !7634
  br i1 %4, label %5, label %6, !dbg !7635

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.83, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7636
  br label %7, !dbg !7642

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7643
  br label %7, !dbg !7644

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7631
  ret i32 %8, !dbg !7645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7650, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7651, metadata !DIExpression()), !dbg !7652
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7653
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7654
  %4 = load i32, i32* %3, align 4, !dbg !7654
  %5 = and i32 %4, -32, !dbg !7655
  %6 = or i32 %5, %0, !dbg !7656
  %7 = or i32 %6, 16, !dbg !7656
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7657
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7658
  %9 = load i32, i32* %8, align 4, !dbg !7658
  %10 = or i32 %9, 1, !dbg !7659
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7660
  ret void, !dbg !7661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7665, metadata !DIExpression()), !dbg !7666
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7667
  ret void, !dbg !7668
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7673, metadata !DIExpression()), !dbg !7674
  %2 = icmp ult i32 %0, 33, !dbg !7675
  br i1 %2, label %11, label %3, !dbg !7677

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7678
  br i1 %4, label %11, label %5, !dbg !7680

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7681
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7682, !range !7580
  %8 = mul nsw i32 %7, -2, !dbg !7683
  %9 = add nsw i32 %8, 62, !dbg !7683
  %10 = and i32 %9, 62, !dbg !7684
  br label %11, !dbg !7685

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7674
  ret i32 %12, !dbg !7686
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7687 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7691, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.value(metadata i8 %1, metadata !7692, metadata !DIExpression()), !dbg !7693
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7694
  %4 = icmp eq i32 %3, -22, !dbg !7696
  br i1 %4, label %5, label %7, !dbg !7697

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7698
  %6 = zext i8 %1 to i32, !dbg !7698
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.86, i32 0, i32 0), i32 noundef %6) #25, !dbg !7698
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7698
  unreachable, !dbg !7698

7:                                                ; preds = %2
  ret void, !dbg !7703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7704 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7708, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i8 %1, metadata !7709, metadata !DIExpression()), !dbg !7715
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7716
  call void @llvm.dbg.value(metadata i8 %3, metadata !7710, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7715
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7717
  call void @llvm.dbg.value(metadata i32 %4, metadata !7710, metadata !DIExpression()), !dbg !7715
  %5 = icmp ne i32 %4, -22, !dbg !7718
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7719
  call void @llvm.dbg.value(metadata i32 %4, metadata !7711, metadata !DIExpression()), !dbg !7720
  br i1 %7, label %8, label %12, !dbg !7719

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7711, metadata !DIExpression()), !dbg !7720
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7721
  %10 = add i32 %9, 1, !dbg !7724
  call void @llvm.dbg.value(metadata i32 %10, metadata !7711, metadata !DIExpression()), !dbg !7720
  %11 = icmp eq i32 %10, 8, !dbg !7725
  br i1 %11, label %12, label %8, !dbg !7726, !llvm.loop !7727

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7733, metadata !DIExpression()), !dbg !7734
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7735
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7736
  ret void, !dbg !7737
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7738 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7743
  %2 = icmp ugt i32 %1, 8, !dbg !7745
  br i1 %2, label %3, label %4, !dbg !7746

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7747
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.87, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7747
  unreachable, !dbg !7747

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7752
  call void @llvm.dbg.value(metadata i32 0, metadata !7742, metadata !DIExpression()), !dbg !7753
  %5 = icmp eq i32 %1, 0, !dbg !7754
  br i1 %5, label %13, label %6, !dbg !7757

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7757

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7742, metadata !DIExpression()), !dbg !7753
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7758
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7760
  %11 = add nuw i32 %9, 1, !dbg !7761
  call void @llvm.dbg.value(metadata i32 %11, metadata !7742, metadata !DIExpression()), !dbg !7753
  %12 = icmp eq i32 %11, %1, !dbg !7754
  br i1 %12, label %13, label %8, !dbg !7757, !llvm.loop !7762

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7764
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7765
  tail call void @arm_core_mpu_enable() #24, !dbg !7766
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7767
  %16 = and i32 %15, 65280, !dbg !7767
  %17 = icmp eq i32 %16, 2048, !dbg !7767
  br i1 %17, label %19, label %18, !dbg !7770

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.88, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7771
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.89, i32 0, i32 0)) #25, !dbg !7771
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7771
  unreachable, !dbg !7771

19:                                               ; preds = %13
  ret i32 0, !dbg !7773
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7774 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7781, metadata !DIExpression()), !dbg !7784
  call void @llvm.dbg.value(metadata i8* %1, metadata !7782, metadata !DIExpression()), !dbg !7784
  call void @llvm.dbg.value(metadata i8* %0, metadata !7783, metadata !DIExpression()), !dbg !7784
  %3 = load i8, i8* %1, align 1, !dbg !7785
  %4 = icmp eq i8 %3, 0, !dbg !7786
  br i1 %4, label %13, label %5, !dbg !7787

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7781, metadata !DIExpression()), !dbg !7784
  call void @llvm.dbg.value(metadata i8* %8, metadata !7782, metadata !DIExpression()), !dbg !7784
  store i8 %6, i8* %7, align 1, !dbg !7788
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7790
  call void @llvm.dbg.value(metadata i8* %9, metadata !7781, metadata !DIExpression()), !dbg !7784
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7791
  call void @llvm.dbg.value(metadata i8* %10, metadata !7782, metadata !DIExpression()), !dbg !7784
  %11 = load i8, i8* %10, align 1, !dbg !7785
  %12 = icmp eq i8 %11, 0, !dbg !7786
  br i1 %12, label %13, label %5, !dbg !7787, !llvm.loop !7792

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7794
  ret i8* %0, !dbg !7795
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7796 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7800, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i8* %1, metadata !7801, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i32 %2, metadata !7802, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i8* %0, metadata !7803, metadata !DIExpression()), !dbg !7804
  %4 = icmp eq i32 %2, 0, !dbg !7805
  br i1 %4, label %22, label %5, !dbg !7806

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7800, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i32 %7, metadata !7802, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i8* %8, metadata !7801, metadata !DIExpression()), !dbg !7804
  %9 = load i8, i8* %8, align 1, !dbg !7807
  %10 = icmp eq i8 %9, 0, !dbg !7808
  br i1 %10, label %16, label %11, !dbg !7809

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7810
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7812
  call void @llvm.dbg.value(metadata i8* %12, metadata !7801, metadata !DIExpression()), !dbg !7804
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7813
  call void @llvm.dbg.value(metadata i8* %13, metadata !7800, metadata !DIExpression()), !dbg !7804
  %14 = add i32 %7, -1, !dbg !7814
  call void @llvm.dbg.value(metadata i32 %14, metadata !7802, metadata !DIExpression()), !dbg !7804
  %15 = icmp eq i32 %14, 0, !dbg !7805
  br i1 %15, label %22, label %5, !dbg !7806, !llvm.loop !7815

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7800, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i32 %18, metadata !7802, metadata !DIExpression()), !dbg !7804
  store i8 0, i8* %17, align 1, !dbg !7817
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7819
  call void @llvm.dbg.value(metadata i8* %19, metadata !7800, metadata !DIExpression()), !dbg !7804
  %20 = add i32 %18, -1, !dbg !7820
  call void @llvm.dbg.value(metadata i32 %20, metadata !7802, metadata !DIExpression()), !dbg !7804
  %21 = icmp eq i32 %20, 0, !dbg !7821
  br i1 %21, label %22, label %16, !dbg !7822, !llvm.loop !7823

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7825
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7826 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7830, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.value(metadata i32 %1, metadata !7831, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.value(metadata i32 %1, metadata !7832, metadata !DIExpression()), !dbg !7833
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7834

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7830, metadata !DIExpression()), !dbg !7833
  %6 = load i8, i8* %5, align 1, !dbg !7835
  %7 = icmp eq i8 %6, %3, !dbg !7836
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7837
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7838
  call void @llvm.dbg.value(metadata i8* %10, metadata !7830, metadata !DIExpression()), !dbg !7833
  br i1 %9, label %11, label %4, !dbg !7837, !llvm.loop !7840

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7842
  ret i8* %12, !dbg !7843
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7844 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7846, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i32 %1, metadata !7847, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i8* null, metadata !7848, metadata !DIExpression()), !dbg !7849
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7850

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7849
  call void @llvm.dbg.value(metadata i8* %6, metadata !7848, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i8* %5, metadata !7846, metadata !DIExpression()), !dbg !7849
  %7 = load i8, i8* %5, align 1, !dbg !7851
  %8 = icmp eq i8 %7, %3, !dbg !7854
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7855
  call void @llvm.dbg.value(metadata i8* %9, metadata !7848, metadata !DIExpression()), !dbg !7849
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7856
  call void @llvm.dbg.value(metadata i8* %10, metadata !7846, metadata !DIExpression()), !dbg !7849
  %11 = icmp eq i8 %7, 0, !dbg !7857
  br i1 %11, label %12, label %4, !dbg !7857, !llvm.loop !7858

12:                                               ; preds = %4
  ret i8* %9, !dbg !7860
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7865, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i32 0, metadata !7866, metadata !DIExpression()), !dbg !7867
  %2 = load i8, i8* %0, align 1, !dbg !7868
  %3 = icmp eq i8 %2, 0, !dbg !7869
  br i1 %3, label %11, label %4, !dbg !7870

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7866, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i8* %6, metadata !7865, metadata !DIExpression()), !dbg !7867
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7871
  call void @llvm.dbg.value(metadata i8* %7, metadata !7865, metadata !DIExpression()), !dbg !7867
  %8 = add i32 %5, 1, !dbg !7873
  call void @llvm.dbg.value(metadata i32 %8, metadata !7866, metadata !DIExpression()), !dbg !7867
  %9 = load i8, i8* %7, align 1, !dbg !7868
  %10 = icmp eq i8 %9, 0, !dbg !7869
  br i1 %10, label %11, label %4, !dbg !7870, !llvm.loop !7874

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7867
  ret i32 %12, !dbg !7876
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7877 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7881, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i32 %1, metadata !7882, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i32 0, metadata !7883, metadata !DIExpression()), !dbg !7884
  %3 = load i8, i8* %0, align 1, !dbg !7885
  %4 = icmp ne i8 %3, 0, !dbg !7886
  %5 = icmp ne i32 %1, 0, !dbg !7887
  %6 = and i1 %4, %5, !dbg !7887
  br i1 %6, label %7, label %16, !dbg !7888

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7883, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i8* %9, metadata !7881, metadata !DIExpression()), !dbg !7884
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7889
  call void @llvm.dbg.value(metadata i8* %10, metadata !7881, metadata !DIExpression()), !dbg !7884
  %11 = add nuw i32 %8, 1, !dbg !7891
  call void @llvm.dbg.value(metadata i32 %11, metadata !7883, metadata !DIExpression()), !dbg !7884
  %12 = load i8, i8* %10, align 1, !dbg !7885
  %13 = icmp ne i8 %12, 0, !dbg !7886
  %14 = icmp ult i32 %11, %1, !dbg !7887
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7887
  br i1 %15, label %7, label %16, !dbg !7888, !llvm.loop !7892

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7884
  ret i32 %17, !dbg !7894
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7895 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7899, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i8* %1, metadata !7900, metadata !DIExpression()), !dbg !7901
  %3 = load i8, i8* %0, align 1, !dbg !7902
  %4 = load i8, i8* %1, align 1, !dbg !7903
  %5 = icmp ne i8 %3, %4, !dbg !7904
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7905
  br i1 %7, label %18, label %8, !dbg !7905

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7900, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i8* %10, metadata !7899, metadata !DIExpression()), !dbg !7901
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7906
  call void @llvm.dbg.value(metadata i8* %11, metadata !7899, metadata !DIExpression()), !dbg !7901
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7908
  call void @llvm.dbg.value(metadata i8* %12, metadata !7900, metadata !DIExpression()), !dbg !7901
  %13 = load i8, i8* %11, align 1, !dbg !7902
  %14 = load i8, i8* %12, align 1, !dbg !7903
  %15 = icmp ne i8 %13, %14, !dbg !7904
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7905
  br i1 %17, label %18, label %8, !dbg !7905, !llvm.loop !7909

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7902
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7903
  %21 = zext i8 %19 to i32, !dbg !7912
  %22 = zext i8 %20 to i32, !dbg !7913
  %23 = sub nsw i32 %21, %22, !dbg !7914
  ret i32 %23, !dbg !7915
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7916 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7920, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i8* %1, metadata !7921, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i32 %2, metadata !7922, metadata !DIExpression()), !dbg !7923
  %4 = icmp eq i32 %2, 0, !dbg !7924
  br i1 %4, label %23, label %5, !dbg !7924

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7922, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i8* %7, metadata !7921, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i8* %8, metadata !7920, metadata !DIExpression()), !dbg !7923
  %9 = load i8, i8* %8, align 1, !dbg !7925
  %10 = load i8, i8* %7, align 1, !dbg !7926
  %11 = icmp ne i8 %9, %10, !dbg !7927
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7928
  br i1 %13, label %19, label %14, !dbg !7928

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7929
  call void @llvm.dbg.value(metadata i8* %15, metadata !7920, metadata !DIExpression()), !dbg !7923
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7931
  call void @llvm.dbg.value(metadata i8* %16, metadata !7921, metadata !DIExpression()), !dbg !7923
  %17 = add i32 %6, -1, !dbg !7932
  call void @llvm.dbg.value(metadata i32 %17, metadata !7922, metadata !DIExpression()), !dbg !7923
  %18 = icmp eq i32 %17, 0, !dbg !7924
  br i1 %18, label %23, label %5, !dbg !7924, !llvm.loop !7933

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7936
  %21 = zext i8 %10 to i32, !dbg !7937
  %22 = sub nsw i32 %20, %21, !dbg !7938
  br label %23, !dbg !7939

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7939
  ret i32 %24, !dbg !7940
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7941 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7945, metadata !DIExpression()), !dbg !7950
  call void @llvm.dbg.value(metadata i8* %1, metadata !7946, metadata !DIExpression()), !dbg !7950
  call void @llvm.dbg.value(metadata i8** %2, metadata !7947, metadata !DIExpression()), !dbg !7950
  %4 = icmp eq i8* %0, null, !dbg !7951
  br i1 %4, label %5, label %7, !dbg !7951

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7952
  br label %7, !dbg !7951

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7951
  call void @llvm.dbg.value(metadata i8* %8, metadata !7948, metadata !DIExpression()), !dbg !7950
  %9 = load i8, i8* %8, align 1, !dbg !7953
  %10 = icmp eq i8 %9, 0, !dbg !7953
  br i1 %10, label %33, label %11, !dbg !7954

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7948, metadata !DIExpression()), !dbg !7950
  %14 = zext i8 %12 to i32, !dbg !7953
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7955
  %16 = icmp eq i8* %15, null, !dbg !7954
  br i1 %16, label %21, label %17, !dbg !7956

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7957
  call void @llvm.dbg.value(metadata i8* %18, metadata !7948, metadata !DIExpression()), !dbg !7950
  %19 = load i8, i8* %18, align 1, !dbg !7953
  %20 = icmp eq i8 %19, 0, !dbg !7953
  br i1 %20, label %33, label %11, !dbg !7954, !llvm.loop !7959

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7949, metadata !DIExpression()), !dbg !7950
  %24 = zext i8 %22 to i32, !dbg !7961
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7962
  %26 = icmp eq i8* %25, null, !dbg !7963
  br i1 %26, label %27, label %31, !dbg !7964

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7965
  call void @llvm.dbg.value(metadata i8* %28, metadata !7949, metadata !DIExpression()), !dbg !7950
  %29 = load i8, i8* %28, align 1, !dbg !7961
  %30 = icmp eq i8 %29, 0, !dbg !7961
  br i1 %30, label %33, label %21, !dbg !7967, !llvm.loop !7968

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7970
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7973
  br label %33, !dbg !7974

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7950
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7950
  store i8* %34, i8** %2, align 4, !dbg !7950
  ret i8* %35, !dbg !7975
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7976 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7978, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.value(metadata i8* %1, metadata !7979, metadata !DIExpression()), !dbg !7980
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7981
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7982
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7983
  ret i8* %0, !dbg !7984
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7985 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7987, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i8* %1, metadata !7988, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32 %2, metadata !7989, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i8* %0, metadata !7990, metadata !DIExpression()), !dbg !7992
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7993
  call void @llvm.dbg.value(metadata i32 %4, metadata !7991, metadata !DIExpression()), !dbg !7992
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7994
  call void @llvm.dbg.value(metadata i8* %5, metadata !7987, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i8* %1, metadata !7988, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32 %2, metadata !7989, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32 %2, metadata !7989, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7992
  %6 = icmp eq i32 %2, 0, !dbg !7995
  br i1 %6, label %18, label %7, !dbg !7996

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7997
  call void @llvm.dbg.value(metadata i8* %9, metadata !7987, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i8* %10, metadata !7988, metadata !DIExpression()), !dbg !7992
  %12 = load i8, i8* %10, align 1, !dbg !7998
  %13 = icmp eq i8 %12, 0, !dbg !7999
  br i1 %13, label %18, label %14, !dbg !8000

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8001
  call void @llvm.dbg.value(metadata i8* %15, metadata !7988, metadata !DIExpression()), !dbg !7992
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8003
  call void @llvm.dbg.value(metadata i8* %16, metadata !7987, metadata !DIExpression()), !dbg !7992
  store i8 %12, i8* %9, align 1, !dbg !8004
  call void @llvm.dbg.value(metadata i32 %11, metadata !7989, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32 %11, metadata !7989, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7992
  %17 = icmp eq i32 %11, 0, !dbg !7995
  br i1 %17, label %18, label %7, !dbg !7996, !llvm.loop !8005

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7992
  store i8 0, i8* %19, align 1, !dbg !8007
  ret i8* %0, !dbg !8008
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8009 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8013, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i8* %1, metadata !8014, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i32 %2, metadata !8015, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i8* %0, metadata !8016, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i8* %1, metadata !8017, metadata !DIExpression()), !dbg !8018
  %4 = icmp eq i32 %2, 0, !dbg !8019
  br i1 %4, label %31, label %5, !dbg !8021

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8017, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i8* %0, metadata !8016, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i32 %2, metadata !8015, metadata !DIExpression()), !dbg !8018
  %6 = add i32 %2, -1, !dbg !8022
  call void @llvm.dbg.value(metadata i32 %6, metadata !8015, metadata !DIExpression()), !dbg !8018
  %7 = icmp eq i32 %6, 0, !dbg !8023
  br i1 %7, label %23, label %8, !dbg !8024

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8025
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8025
  br label %11, !dbg !8025

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8017, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i8* %14, metadata !8016, metadata !DIExpression()), !dbg !8018
  %15 = load i8, i8* %14, align 1, !dbg !8026
  %16 = load i8, i8* %13, align 1, !dbg !8027
  %17 = icmp eq i8 %15, %16, !dbg !8028
  br i1 %17, label %18, label %23, !dbg !8025

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8029
  call void @llvm.dbg.value(metadata i8* %19, metadata !8016, metadata !DIExpression()), !dbg !8018
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8031
  call void @llvm.dbg.value(metadata i8* %20, metadata !8017, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i32 %12, metadata !8015, metadata !DIExpression()), !dbg !8018
  %21 = add i32 %12, -1, !dbg !8022
  call void @llvm.dbg.value(metadata i32 %21, metadata !8015, metadata !DIExpression()), !dbg !8018
  %22 = icmp eq i32 %21, 0, !dbg !8023
  br i1 %22, label %23, label %11, !dbg !8024, !llvm.loop !8032

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8018
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8018
  %26 = load i8, i8* %24, align 1, !dbg !8034
  %27 = zext i8 %26 to i32, !dbg !8034
  %28 = load i8, i8* %25, align 1, !dbg !8035
  %29 = zext i8 %28 to i32, !dbg !8035
  %30 = sub nsw i32 %27, %29, !dbg !8036
  br label %31, !dbg !8037

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8018
  ret i32 %32, !dbg !8038
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8039 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8043, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata i8* %1, metadata !8044, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata i32 %2, metadata !8045, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata i8* %0, metadata !8046, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata i8* %1, metadata !8047, metadata !DIExpression()), !dbg !8048
  %4 = ptrtoint i8* %0 to i32, !dbg !8049
  %5 = ptrtoint i8* %1 to i32, !dbg !8049
  %6 = sub i32 %4, %5, !dbg !8049
  %7 = icmp ult i32 %6, %2, !dbg !8051
  br i1 %7, label %10, label %8, !dbg !8052

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8047, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata i8* %0, metadata !8046, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata i32 %2, metadata !8045, metadata !DIExpression()), !dbg !8048
  %9 = icmp eq i32 %2, 0, !dbg !8053
  br i1 %9, label %26, label %17, !dbg !8055

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8045, metadata !DIExpression()), !dbg !8048
  %12 = add i32 %11, -1, !dbg !8056
  call void @llvm.dbg.value(metadata i32 %12, metadata !8045, metadata !DIExpression()), !dbg !8048
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8059
  %14 = load i8, i8* %13, align 1, !dbg !8059
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8060
  store i8 %14, i8* %15, align 1, !dbg !8061
  %16 = icmp eq i32 %12, 0, !dbg !8062
  br i1 %16, label %26, label %10, !dbg !8063, !llvm.loop !8064

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8047, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata i8* %19, metadata !8046, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.value(metadata i32 %20, metadata !8045, metadata !DIExpression()), !dbg !8048
  %21 = load i8, i8* %18, align 1, !dbg !8066
  store i8 %21, i8* %19, align 1, !dbg !8068
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8069
  call void @llvm.dbg.value(metadata i8* %22, metadata !8046, metadata !DIExpression()), !dbg !8048
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8070
  call void @llvm.dbg.value(metadata i8* %23, metadata !8047, metadata !DIExpression()), !dbg !8048
  %24 = add i32 %20, -1, !dbg !8071
  call void @llvm.dbg.value(metadata i32 %24, metadata !8045, metadata !DIExpression()), !dbg !8048
  %25 = icmp eq i32 %24, 0, !dbg !8053
  br i1 %25, label %26, label %17, !dbg !8055, !llvm.loop !8072

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8074
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8075 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8081, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i8* %1, metadata !8082, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i32 %2, metadata !8083, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i8* %0, metadata !8084, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i8* %1, metadata !8085, metadata !DIExpression()), !dbg !8086
  %4 = icmp eq i32 %2, 0, !dbg !8087
  br i1 %4, label %14, label %5, !dbg !8088

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8085, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i8* %7, metadata !8084, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i32 %8, metadata !8083, metadata !DIExpression()), !dbg !8086
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8089
  call void @llvm.dbg.value(metadata i8* %9, metadata !8085, metadata !DIExpression()), !dbg !8086
  %10 = load i8, i8* %6, align 1, !dbg !8091
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8092
  call void @llvm.dbg.value(metadata i8* %11, metadata !8084, metadata !DIExpression()), !dbg !8086
  store i8 %10, i8* %7, align 1, !dbg !8093
  %12 = add i32 %8, -1, !dbg !8094
  call void @llvm.dbg.value(metadata i32 %12, metadata !8083, metadata !DIExpression()), !dbg !8086
  %13 = icmp eq i32 %12, 0, !dbg !8087
  br i1 %13, label %14, label %5, !dbg !8088, !llvm.loop !8095

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8097
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8098 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8102, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.value(metadata i32 %1, metadata !8103, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.value(metadata i32 %2, metadata !8104, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.value(metadata i8* %0, metadata !8105, metadata !DIExpression()), !dbg !8107
  %4 = trunc i32 %1 to i8, !dbg !8108
  call void @llvm.dbg.value(metadata i8 %4, metadata !8106, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.value(metadata i32 %2, metadata !8104, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.value(metadata i8* %0, metadata !8105, metadata !DIExpression()), !dbg !8107
  %5 = icmp eq i32 %2, 0, !dbg !8109
  br i1 %5, label %12, label %6, !dbg !8110

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8104, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.value(metadata i8* %8, metadata !8105, metadata !DIExpression()), !dbg !8107
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8111
  call void @llvm.dbg.value(metadata i8* %9, metadata !8105, metadata !DIExpression()), !dbg !8107
  store i8 %4, i8* %8, align 1, !dbg !8113
  %10 = add i32 %7, -1, !dbg !8114
  call void @llvm.dbg.value(metadata i32 %10, metadata !8104, metadata !DIExpression()), !dbg !8107
  %11 = icmp eq i32 %10, 0, !dbg !8109
  br i1 %11, label %12, label %6, !dbg !8110, !llvm.loop !8115

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8117
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8118 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8122, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.value(metadata i32 %1, metadata !8123, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.value(metadata i32 %2, metadata !8124, metadata !DIExpression()), !dbg !8128
  %4 = icmp eq i32 %2, 0, !dbg !8129
  br i1 %4, label %17, label %5, !dbg !8130

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8131

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8132
  call void @llvm.dbg.value(metadata i8* %9, metadata !8125, metadata !DIExpression()), !dbg !8132
  call void @llvm.dbg.value(metadata i32 %8, metadata !8124, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.value(metadata i8* %9, metadata !8125, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8132
  %10 = load i8, i8* %9, align 1, !dbg !8133
  %11 = icmp eq i8 %10, %6, !dbg !8136
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8137
  call void @llvm.dbg.value(metadata i8* %12, metadata !8125, metadata !DIExpression()), !dbg !8132
  call void @llvm.dbg.value(metadata i32 %13, metadata !8124, metadata !DIExpression()), !dbg !8128
  br i1 %15, label %16, label %7, !dbg !8137, !llvm.loop !8138

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8140

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8128
  ret i8* %19, !dbg !8141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8142 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8144, metadata !DIExpression()), !dbg !8145
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8146
  ret void, !dbg !8147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8150, metadata !DIExpression()), !dbg !8151
  ret i32 -1, !dbg !8152
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8157, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata i32* %1, metadata !8158, metadata !DIExpression()), !dbg !8159
  %3 = ptrtoint i32* %1 to i32, !dbg !8160
  %4 = and i32 %3, -2, !dbg !8160
  %5 = icmp eq i32 %4, 2, !dbg !8160
  br i1 %5, label %6, label %9, !dbg !8160

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8161
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8161
  br label %9, !dbg !8162

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8162
  ret i32 %10, !dbg !8163
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8166, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.value(metadata i32* %1, metadata !8167, metadata !DIExpression()), !dbg !8168
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8169
  ret i32 %3, !dbg !8170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8174, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i32* %1, metadata !8175, metadata !DIExpression()), !dbg !8176
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8177, !srcloc !8179
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8180
  ret i32 %3, !dbg !8181
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8182 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8187, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata i32* %1, metadata !8188, metadata !DIExpression()), !dbg !8191
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8192
  call void @llvm.dbg.value(metadata i32 %3, metadata !8189, metadata !DIExpression()), !dbg !8191
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8193
  call void @llvm.dbg.value(metadata i32 %4, metadata !8190, metadata !DIExpression()), !dbg !8191
  %5 = icmp ne i32 %3, %4, !dbg !8194
  %6 = sext i1 %5 to i32, !dbg !8195
  ret i32 %6, !dbg !8196
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8197 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8201, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %1, metadata !8202, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %2, metadata !8203, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i32* %3, metadata !8204, metadata !DIExpression()), !dbg !8205
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8206
  ret i32 %5, !dbg !8207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8208 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8210, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i32 %1, metadata !8211, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i32 %2, metadata !8212, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i32* %3, metadata !8213, metadata !DIExpression()), !dbg !8214
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8215, !srcloc !8217
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8218
  ret i32 %5, !dbg !8219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8220 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8222, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 %1, metadata !8223, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 %2, metadata !8224, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32* %3, metadata !8225, metadata !DIExpression()), !dbg !8230
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8231
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8233
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8233
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8233
  br i1 %11, label %33, label %12, !dbg !8233

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8230
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8230
  call void @llvm.dbg.value(metadata i8* %14, metadata !8228, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 %13, metadata !8226, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 %1, metadata !8227, metadata !DIExpression()), !dbg !8230
  br label %15, !dbg !8234

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8236
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8230
  call void @llvm.dbg.value(metadata i8* %17, metadata !8228, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 %16, metadata !8227, metadata !DIExpression()), !dbg !8230
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8237
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8240
  call void @llvm.dbg.value(metadata i8* %19, metadata !8228, metadata !DIExpression()), !dbg !8230
  %20 = load i8, i8* %17, align 1, !dbg !8241
  %21 = zext i8 %20 to i32, !dbg !8242
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8237
  %23 = icmp eq i32 %22, -1, !dbg !8243
  br i1 %23, label %30, label %24, !dbg !8244

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8245
  call void @llvm.dbg.value(metadata i32 %25, metadata !8227, metadata !DIExpression()), !dbg !8230
  %26 = icmp eq i32 %25, 0, !dbg !8246
  br i1 %26, label %27, label %15, !dbg !8247, !llvm.loop !8248

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8250
  call void @llvm.dbg.value(metadata i32 %28, metadata !8226, metadata !DIExpression()), !dbg !8230
  %29 = icmp eq i32 %28, 0, !dbg !8251
  br i1 %29, label %30, label %12, !dbg !8252, !llvm.loop !8253

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8230
  call void @llvm.dbg.value(metadata i32 %31, metadata !8226, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.label(metadata !8229), !dbg !8256
  %32 = sub i32 %2, %31, !dbg !8257
  br label %33, !dbg !8258

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8230
  ret i32 %34, !dbg !8259
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8260 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8264, metadata !DIExpression()), !dbg !8265
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8266
  %3 = icmp eq i32 %2, -1, !dbg !8268
  br i1 %3, label %8, label %4, !dbg !8269

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8270
  %6 = icmp eq i32 %5, -1, !dbg !8271
  %7 = sext i1 %6 to i32, !dbg !8270
  br label %8, !dbg !8272

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8265
  ret i32 %9, !dbg !8273
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8274 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8276, metadata !DIExpression()), !dbg !8277
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !8278
  ret void, !dbg !8279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8284, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i32 %1, metadata !8285, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8286, metadata !DIExpression()), !dbg !8290
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8291
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8291
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8291
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8287, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i32 %0, metadata !8289, metadata !DIExpression()), !dbg !8290
  %7 = icmp slt i32 %0, %1, !dbg !8292
  br i1 %7, label %8, label %22, !dbg !8295

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8289, metadata !DIExpression()), !dbg !8290
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !8296
  %11 = icmp eq i32 %10, 0, !dbg !8296
  br i1 %11, label %19, label %12, !dbg !8299

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !8300
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8302
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8302
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8304
  br i1 %15, label %19, label %16, !dbg !8305

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8306
  %18 = load i8*, i8** %17, align 4, !dbg !8306
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8307
  br label %19, !dbg !8308

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8309
  call void @llvm.dbg.value(metadata i32 %20, metadata !8289, metadata !DIExpression()), !dbg !8290
  %21 = icmp eq i32 %20, %1, !dbg !8292
  br i1 %21, label %22, label %8, !dbg !8295, !llvm.loop !8310

22:                                               ; preds = %19, %3
  ret void, !dbg !8312
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !8313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8315, metadata !DIExpression()), !dbg !8316
  %2 = shl nuw i32 1, %0, !dbg !8317
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !8320
  ret i32 %3, !dbg !8321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !8322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8326, metadata !DIExpression()), !dbg !8327
  %2 = shl nuw i32 1, %0, !dbg !8328
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !8331
  ret void, !dbg !8332
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8336, metadata !DIExpression()), !dbg !8337
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8338
  ret void, !dbg !8339
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8342, metadata !DIExpression()), !dbg !8343
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8344
  %3 = and i32 %2, %0, !dbg !8344
  %4 = icmp eq i32 %3, %0, !dbg !8345
  %5 = zext i1 %4 to i32, !dbg !8345
  ret i32 %5, !dbg !8346
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8347 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8349, metadata !DIExpression()), !dbg !8350
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !8351
  ret void, !dbg !8352
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8355, metadata !DIExpression()), !dbg !8356
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !8357
  ret void, !dbg !8358
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8359 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8361, metadata !DIExpression()), !dbg !8362
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !8363
  ret void, !dbg !8364
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8367, metadata !DIExpression()), !dbg !8368
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !8369
  ret void, !dbg !8370
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8371 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8373, metadata !DIExpression()), !dbg !8374
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !8375
  ret void, !dbg !8376
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8379, metadata !DIExpression()), !dbg !8380
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !8381
  ret void, !dbg !8382
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8383 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8385, metadata !DIExpression()), !dbg !8386
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !8387
  ret void, !dbg !8388
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8391, metadata !DIExpression()), !dbg !8392
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !8393
  ret void, !dbg !8394
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8395 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8397, metadata !DIExpression()), !dbg !8398
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !8399
  ret void, !dbg !8400
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8403, metadata !DIExpression()), !dbg !8404
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !8405
  ret void, !dbg !8406
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8407 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8409, metadata !DIExpression()), !dbg !8410
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !8411
  ret i32 0, !dbg !8412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !737 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !741, metadata !DIExpression()), !dbg !8413
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8414
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8416
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8418
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8420
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8422
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8424
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8426
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8428
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8430
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8432
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8434
  ret void, !dbg !8436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8439, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.value(metadata i32 0, metadata !8440, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.value(metadata i32 undef, metadata !8440, metadata !DIExpression()), !dbg !8441
  %2 = lshr i32 6684671, %0, !dbg !8442
  %3 = and i32 %2, 1, !dbg !8442
  %4 = or i32 %3, %0, !dbg !8444
  %5 = icmp eq i32 %4, 0, !dbg !8444
  br i1 %5, label %6, label %7, !dbg !8444

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 123) #25, !dbg !8445
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 123) #25, !dbg !8445
  unreachable, !dbg !8445

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8450
  %9 = load i32, i32* %8, align 4, !dbg !8450
  call void @llvm.dbg.value(metadata i32 %9, metadata !8440, metadata !DIExpression()), !dbg !8441
  %10 = shl nuw i32 1, %0, !dbg !8451
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !8452
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !8453
  ret void, !dbg !8454
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8457, metadata !DIExpression()), !dbg !8458
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8459
  %3 = or i32 %2, %0, !dbg !8459
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8459
  ret void, !dbg !8460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !8461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8463, metadata !DIExpression()), !dbg !8464
  %2 = icmp slt i32 %0, 32, !dbg !8465
  br i1 %2, label %3, label %5, !dbg !8467

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8468
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !8470
  br label %5, !dbg !8471

5:                                                ; preds = %1, %3
  ret void, !dbg !8472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8475, metadata !DIExpression()), !dbg !8476
  %2 = xor i32 %0, -1, !dbg !8477
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8477
  %4 = and i32 %3, %2, !dbg !8477
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8477
  ret void, !dbg !8478
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !8479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8483, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i32 %1, metadata !8484, metadata !DIExpression()), !dbg !8485
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8486

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8487
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !8489
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !8490
  br label %11, !dbg !8491

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8492
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !8493
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !8494
  br label %11, !dbg !8495

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8496
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !8497
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8498
  br label %11, !dbg !8499

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8500
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8501
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8502
  br label %11, !dbg !8503

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8507, metadata !DIExpression()), !dbg !8508
  %2 = xor i32 %0, -1, !dbg !8509
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8509
  %4 = and i32 %3, %2, !dbg !8509
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8509
  ret void, !dbg !8510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8513, metadata !DIExpression()), !dbg !8514
  %2 = xor i32 %0, -1, !dbg !8515
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8515
  %4 = and i32 %3, %2, !dbg !8515
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8515
  ret void, !dbg !8516
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8519, metadata !DIExpression()), !dbg !8520
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8521
  %3 = or i32 %2, %0, !dbg !8521
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8521
  ret void, !dbg !8522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8525, metadata !DIExpression()), !dbg !8526
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8527
  %3 = or i32 %2, %0, !dbg !8527
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8527
  ret void, !dbg !8528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8533, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8534, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata i8* %2, metadata !8535, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8536, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8538, metadata !DIExpression()), !dbg !8539
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8540
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8540
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8542
  br i1 %6, label %7, label %9, !dbg !8543

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8544
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8545
  store i8* %2, i8** %8, align 4, !dbg !8546
  br label %9, !dbg !8547

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8539
  ret i32 %10, !dbg !8548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8551, metadata !DIExpression()), !dbg !8554
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8552, metadata !DIExpression()), !dbg !8554
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8553, metadata !DIExpression()), !dbg !8554
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8555
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8556
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8557
  store i8* null, i8** %3, align 4, !dbg !8558
  ret void, !dbg !8559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8560 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8562, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata i8* %1, metadata !8563, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata i8* %1, metadata !8564, metadata !DIExpression()), !dbg !8567
  %3 = bitcast i8* %1 to i32*, !dbg !8568
  %4 = load i32, i32* %3, align 4, !dbg !8568
  %5 = add i32 %4, -169, !dbg !8568
  %6 = icmp ult i32 %5, -121, !dbg !8568
  br i1 %6, label %15, label %7, !dbg !8570

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8571
  %9 = inttoptr i32 %8 to i32*, !dbg !8572
  call void @llvm.dbg.value(metadata i32* %9, metadata !8565, metadata !DIExpression()), !dbg !8567
  %10 = load volatile i32, i32* %9, align 4, !dbg !8573
  call void @llvm.dbg.value(metadata i32 %10, metadata !8566, metadata !DIExpression()), !dbg !8567
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8574
  %12 = bitcast i8* %11 to i32*, !dbg !8574
  %13 = load i32, i32* %12, align 4, !dbg !8574
  %14 = or i32 %13, %10, !dbg !8575
  call void @llvm.dbg.value(metadata i32 %14, metadata !8566, metadata !DIExpression()), !dbg !8567
  store volatile i32 %14, i32* %9, align 4, !dbg !8576
  br label %15, !dbg !8577

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8567
  ret i32 %16, !dbg !8578
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8579 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8581, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i8* %1, metadata !8582, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i8* %1, metadata !8583, metadata !DIExpression()), !dbg !8586
  %3 = bitcast i8* %1 to i32*, !dbg !8587
  %4 = load i32, i32* %3, align 4, !dbg !8587
  %5 = add i32 %4, -169, !dbg !8587
  %6 = icmp ult i32 %5, -121, !dbg !8587
  br i1 %6, label %16, label %7, !dbg !8589

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8590
  %9 = inttoptr i32 %8 to i32*, !dbg !8591
  call void @llvm.dbg.value(metadata i32* %9, metadata !8584, metadata !DIExpression()), !dbg !8586
  %10 = load volatile i32, i32* %9, align 4, !dbg !8592
  call void @llvm.dbg.value(metadata i32 %10, metadata !8585, metadata !DIExpression()), !dbg !8586
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8593
  %12 = bitcast i8* %11 to i32*, !dbg !8593
  %13 = load i32, i32* %12, align 4, !dbg !8593
  %14 = xor i32 %13, -1, !dbg !8594
  %15 = and i32 %10, %14, !dbg !8595
  call void @llvm.dbg.value(metadata i32 %15, metadata !8585, metadata !DIExpression()), !dbg !8586
  store volatile i32 %15, i32* %9, align 4, !dbg !8596
  br label %16, !dbg !8597

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8586
  ret i32 %17, !dbg !8598
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8601, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i8* %1, metadata !8602, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i32* %2, metadata !8603, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i8* %1, metadata !8604, metadata !DIExpression()), !dbg !8609
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8610
  call void @llvm.dbg.value(metadata i32 %4, metadata !8605, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i32 undef, metadata !8606, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i32 undef, metadata !8607, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i32 %4, metadata !8608, metadata !DIExpression()), !dbg !8609
  %5 = bitcast i8* %1 to i32*, !dbg !8611
  %6 = load i32, i32* %5, align 4, !dbg !8611
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !8612

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !8613
  call void @llvm.dbg.value(metadata i32 %8, metadata !8606, metadata !DIExpression()), !dbg !8609
  br label %16, !dbg !8614

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !8616
  call void @llvm.dbg.value(metadata i32 %10, metadata !8607, metadata !DIExpression()), !dbg !8609
  br label %16, !dbg !8617

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8618
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #24, !dbg !8619
  br label %16, !dbg !8620

14:                                               ; preds = %3
  br label %16, !dbg !8621

15:                                               ; preds = %3
  br label %16, !dbg !8622

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !8623
  br label %18, !dbg !8624

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !8609
  ret i32 %19, !dbg !8624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8625 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8627, metadata !DIExpression()), !dbg !8635
  call void @llvm.dbg.value(metadata i8* %1, metadata !8628, metadata !DIExpression()), !dbg !8635
  call void @llvm.dbg.value(metadata i8* %2, metadata !8629, metadata !DIExpression()), !dbg !8635
  call void @llvm.dbg.value(metadata i8* %1, metadata !8630, metadata !DIExpression()), !dbg !8635
  %4 = bitcast i8* %1 to i32*, !dbg !8636
  %5 = load i32, i32* %4, align 4, !dbg !8636
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8637
  call void @llvm.dbg.value(metadata i32 %6, metadata !8634, metadata !DIExpression()), !dbg !8635
  %7 = icmp slt i32 %6, 0, !dbg !8638
  br i1 %7, label %22, label %8, !dbg !8640

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8630, metadata !DIExpression()), !dbg !8635
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8641
  %10 = bitcast i8* %9 to i32*, !dbg !8641
  %11 = load i32, i32* %10, align 4, !dbg !8641
  %12 = lshr i32 %11, 16, !dbg !8641
  %13 = and i32 %12, 7, !dbg !8641
  %14 = lshr i32 %11, 8, !dbg !8642
  %15 = and i32 %14, 31, !dbg !8642
  %16 = shl i32 %13, %15, !dbg !8643
  call void @llvm.dbg.value(metadata i32 %16, metadata !8633, metadata !DIExpression()), !dbg !8635
  %17 = and i32 %11, 255, !dbg !8644
  %18 = or i32 %17, 1073887232, !dbg !8645
  %19 = inttoptr i32 %18 to i32*, !dbg !8646
  call void @llvm.dbg.value(metadata i32* %19, metadata !8631, metadata !DIExpression()), !dbg !8635
  %20 = load volatile i32, i32* %19, align 4, !dbg !8647
  call void @llvm.dbg.value(metadata i32 %20, metadata !8632, metadata !DIExpression()), !dbg !8635
  %21 = or i32 %16, %20, !dbg !8648
  call void @llvm.dbg.value(metadata i32 %21, metadata !8632, metadata !DIExpression()), !dbg !8635
  store volatile i32 %21, i32* %19, align 4, !dbg !8649
  br label %22, !dbg !8650

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8635
  ret i32 %23, !dbg !8651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8656, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i32 0, metadata !8657, metadata !DIExpression()), !dbg !8658
  %2 = add i32 %0, -1, !dbg !8659
  %3 = icmp ult i32 %2, 6, !dbg !8659
  br i1 %3, label %4, label %7, !dbg !8659

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8659
  %6 = load i32, i32* %5, align 4, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %6, metadata !8657, metadata !DIExpression()), !dbg !8658
  br label %7, !dbg !8660

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8658
  ret i32 %8, !dbg !8661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8666, metadata !DIExpression()), !dbg !8668
  call void @llvm.dbg.value(metadata i32 %1, metadata !8667, metadata !DIExpression()), !dbg !8668
  %3 = udiv i32 %0, %1, !dbg !8669
  ret i32 %3, !dbg !8670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #4 !dbg !8671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8675, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i32 16, metadata !8676, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i32 336, metadata !8677, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i32 4, metadata !8678, metadata !DIExpression()), !dbg !8679
  %2 = mul i32 %0, 336, !dbg !8680
  %3 = lshr i32 %2, 6, !dbg !8681
  ret i32 %3, !dbg !8682
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8683 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8685, metadata !DIExpression()), !dbg !8688
  tail call void @config_enable_default_clocks() #25, !dbg !8689
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8690
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8690
  %4 = lshr i32 %3, 4, !dbg !8690
  %5 = and i32 %4, 15, !dbg !8690
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8690
  %7 = load i8, i8* %6, align 1, !dbg !8690
  %8 = zext i8 %7 to i32, !dbg !8690
  %9 = lshr i32 %2, %8, !dbg !8690
  call void @llvm.dbg.value(metadata i32 %9, metadata !8686, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8688
  %10 = icmp ult i32 %9, 84000000, !dbg !8691
  br i1 %10, label %11, label %13, !dbg !8693

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8694
  br label %13, !dbg !8696

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8697
  tail call fastcc void @set_up_plls() #24, !dbg !8698
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8699
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8702
  br label %14, !dbg !8703

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8704
  %16 = icmp eq i32 %15, 8, !dbg !8705
  br i1 %16, label %17, label %14, !dbg !8703, !llvm.loop !8706

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8708
  br i1 %18, label %19, label %21, !dbg !8710

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8711
  br label %21, !dbg !8713

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8714
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8715
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8716
  ret i32 0, !dbg !8717
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8718 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8720
  %2 = and i32 %1, 240, !dbg !8720
  ret i32 %2, !dbg !8721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8722 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8723
  %2 = icmp eq i32 %1, 1, !dbg !8727
  br i1 %2, label %7, label %3, !dbg !8728

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8729
  br label %4, !dbg !8731

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8732
  %6 = icmp eq i32 %5, 1, !dbg !8733
  br i1 %6, label %7, label %4, !dbg !8731, !llvm.loop !8734

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8736
  br label %8, !dbg !8739

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8740
  %10 = icmp eq i32 %9, 1, !dbg !8741
  br i1 %10, label %11, label %8, !dbg !8739, !llvm.loop !8742

11:                                               ; preds = %8
  ret void, !dbg !8744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8745 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8746
  %2 = icmp eq i32 %1, 8, !dbg !8748
  br i1 %2, label %3, label %4, !dbg !8749

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8750
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8752
  br label %4, !dbg !8753

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8754
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8755
  %6 = and i32 %5, -196609, !dbg !8755
  %7 = or i32 %6, 65536, !dbg !8755
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8755
  tail call void @config_pll_sysclock() #25, !dbg !8756
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8757
  br label %8, !dbg !8758

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8759
  %10 = icmp eq i32 %9, 1, !dbg !8760
  br i1 %10, label %11, label %8, !dbg !8758, !llvm.loop !8761

11:                                               ; preds = %8
  ret void, !dbg !8763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8764 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8766, metadata !DIExpression()), !dbg !8767
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8768
  %2 = and i32 %1, -241, !dbg !8768
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8768
  ret void, !dbg !8769
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8772, metadata !DIExpression()), !dbg !8773
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8774
  %3 = and i32 %2, -4, !dbg !8774
  %4 = or i32 %3, %0, !dbg !8774
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8774
  ret void, !dbg !8775
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8776 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8777
  %2 = and i32 %1, 12, !dbg !8777
  ret i32 %2, !dbg !8778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8779 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8781, metadata !DIExpression()), !dbg !8782
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8783
  %2 = and i32 %1, -7169, !dbg !8783
  %3 = or i32 %2, 4096, !dbg !8783
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8783
  ret void, !dbg !8784
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8785 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8787, metadata !DIExpression()), !dbg !8788
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8789
  %2 = and i32 %1, -57345, !dbg !8789
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8789
  ret void, !dbg !8790
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8791 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8792
  %2 = icmp eq i32 %1, 1, !dbg !8794
  br i1 %2, label %7, label %3, !dbg !8795

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8796
  br label %4, !dbg !8798

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8799
  %6 = icmp eq i32 %5, 1, !dbg !8800
  br i1 %6, label %7, label %4, !dbg !8798, !llvm.loop !8801

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8803
  br label %8, !dbg !8804

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8805
  %10 = icmp eq i32 %9, 0, !dbg !8806
  br i1 %10, label %11, label %8, !dbg !8804, !llvm.loop !8807

11:                                               ; preds = %8
  ret void, !dbg !8809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8810 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8811
  %2 = and i32 %1, -16777217, !dbg !8811
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8811
  ret void, !dbg !8812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8813 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8814
  %2 = or i32 %1, 16777216, !dbg !8814
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8814
  ret void, !dbg !8815
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8816 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8817
  %2 = lshr i32 %1, 25, !dbg !8818
  %3 = and i32 %2, 1, !dbg !8818
  ret i32 %3, !dbg !8819
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8820 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8821
  %2 = lshr i32 %1, 1, !dbg !8822
  %3 = and i32 %2, 1, !dbg !8822
  ret i32 %3, !dbg !8823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8824 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8825
  %2 = or i32 %1, 1, !dbg !8825
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8825
  ret void, !dbg !8826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8827 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8828
  %2 = or i32 %1, 1, !dbg !8828
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8828
  ret void, !dbg !8829
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8830 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8831
  %2 = lshr i32 %1, 1, !dbg !8832
  %3 = and i32 %2, 1, !dbg !8832
  ret i32 %3, !dbg !8833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8834 {
  ret i32 16000000, !dbg !8836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8839 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8840
  ret void, !dbg !8841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8842 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8846, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i32 16, metadata !8847, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i32 336, metadata !8848, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i32 65536, metadata !8849, metadata !DIExpression()), !dbg !8850
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8851
  %2 = and i32 %1, -4227072, !dbg !8851
  %3 = or i32 %2, 21520, !dbg !8851
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8851
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8852
  %5 = and i32 %4, -196609, !dbg !8852
  %6 = or i32 %5, 65536, !dbg !8852
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8852
  ret void, !dbg !8853
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8854 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8855
  ret void, !dbg !8856
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8857 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8860, metadata !DIExpression()), !dbg !8862
  %2 = bitcast i32* %1 to i8*, !dbg !8863
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8863
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8861, metadata !DIExpression()), !dbg !8864
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8865
  %4 = or i32 %3, 268435456, !dbg !8865
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8865
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8866
  %6 = and i32 %5, 268435456, !dbg !8866
  store volatile i32 %6, i32* %1, align 4, !dbg !8867
  %7 = load volatile i32, i32* %1, align 4, !dbg !8868
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8869
  ret void, !dbg !8869
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8872, metadata !DIExpression()), !dbg !8873
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8874
  br i1 %2, label %3, label %4, !dbg !8876

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8877
  br label %4, !dbg !8878

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8873
  ret i32 %5, !dbg !8879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8880 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8885, metadata !DIExpression()), !dbg !8886
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8887, !srcloc !8889
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !8890
  ret i1 %1, !dbg !8891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8892 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8893
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8894
  ret void, !dbg !8895
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8898, metadata !DIExpression()), !dbg !8899
  %2 = icmp eq i32 %0, 10, !dbg !8900
  br i1 %2, label %3, label %4, !dbg !8902

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8903
  br label %4, !dbg !8905

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8906
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8907
  ret i32 %0, !dbg !8908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8909 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8912, metadata !DIExpression()), !dbg !8914
  call void @llvm.dbg.value(metadata i8 %0, metadata !8913, metadata !DIExpression()), !dbg !8914
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8915, !srcloc !8917
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8918
  ret void, !dbg !8919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8920 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8922, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i8 %0, metadata !8923, metadata !DIExpression()), !dbg !8925
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8926
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8924, metadata !DIExpression()), !dbg !8925
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8927
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8927
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !8928
  ret void, !dbg !8929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8930 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8932, metadata !DIExpression()), !dbg !8933
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !8934
  ret i1 %1, !dbg !8935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8936 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8985, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8986, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8987, metadata !DIExpression()), !dbg !8988
  ret void, !dbg !8989
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8990 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8992, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i8 %1, metadata !8993, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.value(metadata i32 %2, metadata !8994, metadata !DIExpression()), !dbg !8997
  %5 = bitcast i32* %4 to i8*, !dbg !8998
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8998
  call void @llvm.dbg.value(metadata i32* %4, metadata !8996, metadata !DIExpression(DW_OP_deref)), !dbg !8997
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !8999
  call void @llvm.dbg.value(metadata i32 %6, metadata !8995, metadata !DIExpression()), !dbg !8997
  %7 = icmp eq i32 %6, 0, !dbg !9000
  br i1 %7, label %8, label %31, !dbg !9002

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8995, metadata !DIExpression()), !dbg !8997
  %9 = and i32 %2, 131072, !dbg !9003
  %10 = icmp eq i32 %9, 0, !dbg !9005
  br i1 %10, label %28, label %11, !dbg !9006

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9007
  %13 = icmp eq i32 %12, 0, !dbg !9010
  br i1 %13, label %18, label %14, !dbg !9011

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9012
  %16 = shl nuw i32 1, %15, !dbg !9012
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9014
  br label %25, !dbg !9015

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9016
  %20 = icmp eq i32 %19, 0, !dbg !9018
  %21 = zext i8 %1 to i32, !dbg !8997
  br i1 %20, label %25, label %22, !dbg !9019

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9020
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9022
  br label %25, !dbg !9023

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9024
  %27 = load i32, i32* %4, align 4, !dbg !9025
  call void @llvm.dbg.value(metadata i32 %30, metadata !8996, metadata !DIExpression()), !dbg !8997
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9026
  br label %31, !dbg !9027

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9024
  %30 = load i32, i32* %4, align 4, !dbg !9025
  call void @llvm.dbg.value(metadata i32 %30, metadata !8996, metadata !DIExpression()), !dbg !8997
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9026
  call void @llvm.dbg.value(metadata i32 0, metadata !8995, metadata !DIExpression()), !dbg !8997
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9028
  ret i32 %6, !dbg !9028
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9029 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9033, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.value(metadata i32* %1, metadata !9034, metadata !DIExpression()), !dbg !9038
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9039
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9039
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9039
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9035, metadata !DIExpression()), !dbg !9038
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9040
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9040
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9040
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9037, metadata !DIExpression()), !dbg !9038
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9041
  store i32 %9, i32* %1, align 4, !dbg !9042
  ret i32 0, !dbg !9043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9046, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata i32 %1, metadata !9047, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata i32 %2, metadata !9048, metadata !DIExpression()), !dbg !9052
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9053
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9053
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9053
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9049, metadata !DIExpression()), !dbg !9052
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9054
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9054
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9054
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9050, metadata !DIExpression()), !dbg !9052
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9055
  call void @llvm.dbg.value(metadata i32 %10, metadata !9051, metadata !DIExpression()), !dbg !9052
  %11 = xor i32 %1, -1, !dbg !9056
  %12 = and i32 %10, %11, !dbg !9057
  %13 = and i32 %2, %1, !dbg !9058
  %14 = or i32 %12, %13, !dbg !9059
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9060
  ret i32 0, !dbg !9061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9062 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9064, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.value(metadata i32 %1, metadata !9065, metadata !DIExpression()), !dbg !9068
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9069
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9069
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9069
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9066, metadata !DIExpression()), !dbg !9068
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9070
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9070
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9070
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9067, metadata !DIExpression()), !dbg !9068
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9071
  store volatile i32 %1, i32* %9, align 4, !dbg !9071
  ret i32 0, !dbg !9072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9073 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9075, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata i32 %1, metadata !9076, metadata !DIExpression()), !dbg !9079
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9080
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9080
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9080
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9077, metadata !DIExpression()), !dbg !9079
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9081
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9081
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9081
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9078, metadata !DIExpression()), !dbg !9079
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9082
  ret i32 0, !dbg !9083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9084 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9086, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i32 %1, metadata !9087, metadata !DIExpression()), !dbg !9090
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9091
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9091
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9091
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9088, metadata !DIExpression()), !dbg !9090
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9092
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9092
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9092
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9089, metadata !DIExpression()), !dbg !9090
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9093
  %10 = load volatile i32, i32* %9, align 4, !dbg !9093
  %11 = xor i32 %10, %1, !dbg !9093
  store volatile i32 %11, i32* %9, align 4, !dbg !9093
  ret i32 0, !dbg !9094
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9097, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i8 %1, metadata !9098, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i32 %2, metadata !9099, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i32 %3, metadata !9100, metadata !DIExpression()), !dbg !9107
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9108
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9108
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9108
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9101, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i8* undef, metadata !9102, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i32 0, metadata !9104, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i32 0, metadata !9105, metadata !DIExpression()), !dbg !9107
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9109

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9110
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9114
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9115
  %12 = load i32, i32* %11, align 4, !dbg !9115
  %13 = icmp eq i32 %10, %12, !dbg !9116
  br i1 %13, label %14, label %29, !dbg !9117

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9118
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9120
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9121
  br label %29, !dbg !9122

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9123
  %17 = load i8*, i8** %16, align 4, !dbg !9123
  call void @llvm.dbg.value(metadata i8* %17, metadata !9102, metadata !DIExpression()), !dbg !9107
  %18 = zext i8 %1 to i32, !dbg !9124
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9126
  %20 = icmp eq i32 %19, 0, !dbg !9127
  br i1 %20, label %21, label %29, !dbg !9128

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9129
  %23 = load i32, i32* %22, align 4, !dbg !9129
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9130
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9131

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9104, metadata !DIExpression()), !dbg !9107
  br label %27, !dbg !9132

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9104, metadata !DIExpression()), !dbg !9107
  br label %27, !dbg !9134

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9104, metadata !DIExpression()), !dbg !9107
  br label %27, !dbg !9135

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9107
  call void @llvm.dbg.value(metadata i32 %28, metadata !9104, metadata !DIExpression()), !dbg !9107
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9136
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9137
  br label %29, !dbg !9137

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9107
  call void @llvm.dbg.value(metadata i32 %30, metadata !9105, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.label(metadata !9106), !dbg !9138
  ret i32 %30, !dbg !9139
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9140 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9142, metadata !DIExpression()), !dbg !9146
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9143, metadata !DIExpression()), !dbg !9146
  call void @llvm.dbg.value(metadata i1 %2, metadata !9144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9146
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9147
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9147
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9147
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9145, metadata !DIExpression()), !dbg !9146
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9148
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9149
  ret i32 %8, !dbg !9150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9151 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9157, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9158, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.value(metadata i1 %2, metadata !9159, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9160
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9161
  br i1 %4, label %5, label %6, !dbg !9164

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 42) #25, !dbg !9165
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.118, i32 0, i32 0)) #25, !dbg !9165
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 42) #25, !dbg !9165
  unreachable, !dbg !9165

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9167
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9167
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9167
  br i1 %9, label %10, label %11, !dbg !9170

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 43) #25, !dbg !9171
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.120, i32 0, i32 0)) #25, !dbg !9171
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 43) #25, !dbg !9171
  unreachable, !dbg !9171

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9173
  br i1 %12, label %18, label %13, !dbg !9175

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9176
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9179
  %16 = or i1 %15, %2, !dbg !9180
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9180
  br i1 %2, label %19, label %21, !dbg !9180

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9181

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9182
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9185
  br label %21, !dbg !9186

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9160
  ret i32 %22, !dbg !9187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9188 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9192, metadata !DIExpression()), !dbg !9193
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9194
  %3 = icmp eq %struct._snode* %2, null, !dbg !9194
  ret i1 %3, !dbg !9194
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9195 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9199, metadata !DIExpression()), !dbg !9203
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9200, metadata !DIExpression()), !dbg !9203
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9201, metadata !DIExpression()), !dbg !9203
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9204
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9202, metadata !DIExpression()), !dbg !9203
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9201, metadata !DIExpression()), !dbg !9203
  %4 = icmp eq %struct._snode* %3, null, !dbg !9206
  br i1 %4, label %15, label %5, !dbg !9204

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9202, metadata !DIExpression()), !dbg !9203
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9201, metadata !DIExpression()), !dbg !9203
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9208
  br i1 %6, label %9, label %11, !dbg !9211

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9202, metadata !DIExpression()), !dbg !9203
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9201, metadata !DIExpression()), !dbg !9203
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9208
  br i1 %8, label %9, label %11, !dbg !9211, !llvm.loop !9212

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9213
  br label %15, !dbg !9213

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9202, metadata !DIExpression()), !dbg !9203
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9201, metadata !DIExpression()), !dbg !9203
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9206
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9202, metadata !DIExpression()), !dbg !9203
  %14 = icmp eq %struct._snode* %13, null, !dbg !9206
  br i1 %14, label %15, label %7, !dbg !9204, !llvm.loop !9212

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9216 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9220, metadata !DIExpression()), !dbg !9222
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9221, metadata !DIExpression()), !dbg !9222
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9223
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9223
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9223
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9224
  %5 = icmp eq %struct._snode* %4, null, !dbg !9224
  br i1 %5, label %6, label %8, !dbg !9223

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9226
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9226
  br label %8, !dbg !9226

8:                                                ; preds = %6, %2
  ret void, !dbg !9223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9228 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9232, metadata !DIExpression()), !dbg !9233
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9234
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9234
  ret %struct._snode* %3, !dbg !9235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9236 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9240, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9241, metadata !DIExpression()), !dbg !9242
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9243
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9244
  ret void, !dbg !9245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9246 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9248, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9249, metadata !DIExpression()), !dbg !9250
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9251
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9252
  ret void, !dbg !9253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9254 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9256, metadata !DIExpression()), !dbg !9257
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9258
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9258
  ret %struct._snode* %3, !dbg !9259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9260 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9262, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9263, metadata !DIExpression()), !dbg !9264
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9265
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9266
  ret void, !dbg !9267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9268 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9272, metadata !DIExpression()), !dbg !9275
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9273, metadata !DIExpression()), !dbg !9275
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9274, metadata !DIExpression()), !dbg !9275
  %4 = icmp eq %struct._snode* %1, null, !dbg !9276
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9278
  br i1 %4, label %6, label %11, !dbg !9279

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9280
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9282
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9282
  br i1 %8, label %9, label %15, !dbg !9280

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9284
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9284
  br label %15, !dbg !9284

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9286
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9288
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9288
  br i1 %13, label %14, label %15, !dbg !9286

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9290
  br label %15, !dbg !9290

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9279
  ret void, !dbg !9279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !9292 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9296, metadata !DIExpression()), !dbg !9297
  %2 = icmp eq %struct._snode* %0, null, !dbg !9298
  br i1 %2, label %5, label %3, !dbg !9298

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9298
  br label %5, !dbg !9298

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9298
  ret %struct._snode* %6, !dbg !9298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9299 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9301, metadata !DIExpression()), !dbg !9302
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9303
  ret %struct._snode* %2, !dbg !9303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9304 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9306, metadata !DIExpression()), !dbg !9307
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9308
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9308
  ret %struct._snode* %3, !dbg !9309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9312, metadata !DIExpression()), !dbg !9315
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !9316, !range !9317
  call void @llvm.dbg.value(metadata i32 %2, metadata !9313, metadata !DIExpression()), !dbg !9315
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !9318
  call void @llvm.dbg.value(metadata i32 %3, metadata !9314, metadata !DIExpression()), !dbg !9315
  ret i32 %3, !dbg !9319
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9322, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i8* %1, metadata !9323, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i8* %1, metadata !9324, metadata !DIExpression()), !dbg !9325
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9326
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9326
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9327
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9327
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9327
  %8 = shl nuw i32 1, %0, !dbg !9328
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !9329
  ret void, !dbg !9330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9331 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9335, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.value(metadata i32 %1, metadata !9336, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9337, metadata !DIExpression()), !dbg !9341
  %4 = bitcast i64* %3 to i8*, !dbg !9342
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9342
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9339, metadata !DIExpression()), !dbg !9341
  store i64 70368744177732, i64* %3, align 8, !dbg !9343
  call void @llvm.dbg.value(metadata i64* %3, metadata !9339, metadata !DIExpression(DW_OP_deref)), !dbg !9341
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !9344
  call void @llvm.dbg.value(metadata i32 %5, metadata !9340, metadata !DIExpression()), !dbg !9341
  %6 = icmp eq i32 %5, 0, !dbg !9345
  br i1 %6, label %7, label %8, !dbg !9347

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !9348
  br label %8, !dbg !9349

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9350
  ret void, !dbg !9350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9351 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9353, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata i8* %0, metadata !9354, metadata !DIExpression()), !dbg !9356
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9357
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9355, metadata !DIExpression()), !dbg !9356
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9358
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9358
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !9359
  ret i32 %5, !dbg !9360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9363, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata i32 %1, metadata !9364, metadata !DIExpression()), !dbg !9366
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !9367
  call void @llvm.dbg.value(metadata i32 %3, metadata !9365, metadata !DIExpression()), !dbg !9366
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !9368
  ret void, !dbg !9369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !9370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9374, metadata !DIExpression()), !dbg !9375
  %2 = sdiv i32 %0, 4, !dbg !9376
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9377
  %6 = add nsw i32 %5, 16, !dbg !9378
  %7 = shl i32 15, %6, !dbg !9379
  %8 = or i32 %7, %2, !dbg !9380
  ret i32 %8, !dbg !9381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9386, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.value(metadata i32 %1, metadata !9387, metadata !DIExpression()), !dbg !9388
  %3 = and i32 %1, 255, !dbg !9389
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9389
  %5 = load volatile i32, i32* %4, align 4, !dbg !9389
  %6 = lshr i32 %1, 16, !dbg !9389
  %7 = xor i32 %6, -1, !dbg !9389
  %8 = and i32 %5, %7, !dbg !9389
  call void @llvm.dbg.value(metadata i32 %6, metadata !9390, metadata !DIExpression()) #23, !dbg !9394
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9396, !srcloc !9397
  call void @llvm.dbg.value(metadata i32 %9, metadata !9393, metadata !DIExpression()) #23, !dbg !9394
  call void @llvm.dbg.value(metadata i32 %9, metadata !9398, metadata !DIExpression()) #23, !dbg !9403
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9405, !range !7580
  %11 = shl i32 %0, %10, !dbg !9389
  %12 = or i32 %11, %8, !dbg !9389
  store volatile i32 %12, i32* %4, align 4, !dbg !9389
  ret void, !dbg !9406
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9407 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9411, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9412, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.value(metadata i32 %2, metadata !9413, metadata !DIExpression()), !dbg !9416
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9417
  %5 = icmp eq %struct._snode* %4, null, !dbg !9417
  br i1 %5, label %24, label %6, !dbg !9417

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9419
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9415, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9414, metadata !DIExpression()), !dbg !9416
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9420
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9420
  %12 = load i32, i32* %11, align 4, !dbg !9420
  %13 = and i32 %12, %2, !dbg !9424
  %14 = icmp eq i32 %13, 0, !dbg !9424
  br i1 %14, label %22, label %15, !dbg !9425

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9426
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9426
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9426
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9426
  br i1 %19, label %20, label %21, !dbg !9430

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 77) #25, !dbg !9431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.120, i32 0, i32 0)) #25, !dbg !9431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 77) #25, !dbg !9431
  unreachable, !dbg !9431

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9433
  br label %22, !dbg !9434

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9414, metadata !DIExpression()), !dbg !9416
  %23 = icmp eq %struct._snode* %8, null, !dbg !9435
  br i1 %23, label %24, label %6, !dbg !9435

24:                                               ; preds = %22, %3
  ret void, !dbg !9436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9439, metadata !DIExpression()), !dbg !9440
  %2 = and i32 %0, 255, !dbg !9441
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9441
  %4 = load volatile i32, i32* %3, align 4, !dbg !9441
  %5 = lshr i32 %0, 16, !dbg !9441
  %6 = and i32 %4, %5, !dbg !9441
  call void @llvm.dbg.value(metadata i32 %5, metadata !9390, metadata !DIExpression()) #23, !dbg !9442
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9444, !srcloc !9397
  call void @llvm.dbg.value(metadata i32 %7, metadata !9393, metadata !DIExpression()) #23, !dbg !9442
  call void @llvm.dbg.value(metadata i32 %7, metadata !9398, metadata !DIExpression()) #23, !dbg !9445
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9447, !range !7580
  %9 = lshr i32 %6, %8, !dbg !9448
  ret i32 %9, !dbg !9449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9450 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9455, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata i32 %1, metadata !9456, metadata !DIExpression()), !dbg !9457
  %3 = shl i32 %1, 16, !dbg !9458
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9458
  store volatile i32 %3, i32* %4, align 4, !dbg !9458
  ret void, !dbg !9459
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9460 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9464, metadata !DIExpression()), !dbg !9465
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9466
  %3 = load volatile i32, i32* %2, align 4, !dbg !9466
  ret i32 %3, !dbg !9467
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9468 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9470, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.value(metadata i32 %1, metadata !9471, metadata !DIExpression()), !dbg !9472
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9473
  store volatile i32 %1, i32* %3, align 4, !dbg !9473
  ret void, !dbg !9474
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9475 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9477, metadata !DIExpression()), !dbg !9478
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9479
  %3 = load volatile i32, i32* %2, align 4, !dbg !9479
  ret i32 %3, !dbg !9480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9485, metadata !DIExpression()), !dbg !9487
  call void @llvm.dbg.value(metadata i32* %1, metadata !9486, metadata !DIExpression()), !dbg !9487
  %3 = and i32 %0, 131072, !dbg !9488
  %4 = icmp eq i32 %3, 0, !dbg !9490
  br i1 %4, label %22, label %5, !dbg !9491

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9492
  %6 = and i32 %0, 2, !dbg !9494
  %7 = icmp eq i32 %6, 0, !dbg !9496
  br i1 %7, label %11, label %8, !dbg !9497

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9498
  %10 = icmp eq i32 %9, 0, !dbg !9498
  br i1 %10, label %33, label %11, !dbg !9501

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9502
  store i32 %12, i32* %1, align 4, !dbg !9502
  %13 = and i32 %0, 16, !dbg !9503
  %14 = icmp eq i32 %13, 0, !dbg !9505
  br i1 %14, label %17, label %15, !dbg !9506

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9507
  br label %31, !dbg !9509

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9510
  %19 = icmp eq i32 %18, 0, !dbg !9512
  br i1 %19, label %33, label %20, !dbg !9513

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9514
  br label %31, !dbg !9516

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9517
  %24 = icmp eq i32 %23, 0, !dbg !9519
  br i1 %24, label %31, label %25, !dbg !9520

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9521
  %27 = icmp eq i32 %26, 0, !dbg !9524
  br i1 %27, label %28, label %31, !dbg !9525

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9526
  br label %33, !dbg !9527

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9487
  ret i32 %34, !dbg !9527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9528 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9532, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %1, metadata !9533, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %2, metadata !9534, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %3, metadata !9535, metadata !DIExpression()), !dbg !9543
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9544
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9544
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9544
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9536, metadata !DIExpression()), !dbg !9543
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9545
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9545
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9545
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9537, metadata !DIExpression()), !dbg !9543
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9546
  call void @llvm.dbg.value(metadata i32 %11, metadata !9538, metadata !DIExpression()), !dbg !9543
  %12 = and i32 %2, 48, !dbg !9547
  call void @llvm.dbg.value(metadata i32 %12, metadata !9539, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %2, metadata !9540, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %2, metadata !9541, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %2, metadata !9542, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9543
  %13 = lshr i32 %2, 6, !dbg !9548
  %14 = and i32 %13, 1, !dbg !9548
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9549
  %15 = lshr i32 %2, 7, !dbg !9550
  %16 = and i32 %15, 3, !dbg !9550
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9551
  %17 = lshr i32 %2, 9, !dbg !9552
  %18 = and i32 %17, 3, !dbg !9552
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9553
  %19 = icmp eq i32 %12, 32, !dbg !9554
  br i1 %19, label %20, label %24, !dbg !9556

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9557
  br i1 %21, label %22, label %23, !dbg !9560

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9561
  br label %24, !dbg !9563

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9564
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9566
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9567
  ret void, !dbg !9568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9571, metadata !DIExpression()), !dbg !9573
  %2 = shl nuw i32 1, %0, !dbg !9574
  call void @llvm.dbg.value(metadata i32 %2, metadata !9572, metadata !DIExpression()), !dbg !9573
  ret i32 %2, !dbg !9575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9576 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9580, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32 %1, metadata !9581, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32 %2, metadata !9582, metadata !DIExpression()), !dbg !9583
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9584
  %5 = load volatile i32, i32* %4, align 4, !dbg !9584
  %6 = xor i32 %1, -1, !dbg !9584
  %7 = and i32 %5, %6, !dbg !9584
  %8 = mul i32 %2, %1, !dbg !9584
  %9 = or i32 %7, %8, !dbg !9584
  store volatile i32 %9, i32* %4, align 4, !dbg !9584
  ret void, !dbg !9585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9586 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9588, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %1, metadata !9589, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %2, metadata !9590, metadata !DIExpression()), !dbg !9591
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9592
  %5 = load volatile i32, i32* %4, align 4, !dbg !9592
  call void @llvm.dbg.value(metadata i32 %1, metadata !9390, metadata !DIExpression()) #23, !dbg !9593
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9595, !srcloc !9397
  call void @llvm.dbg.value(metadata i32 %6, metadata !9393, metadata !DIExpression()) #23, !dbg !9593
  call void @llvm.dbg.value(metadata i32 %6, metadata !9398, metadata !DIExpression()) #23, !dbg !9596
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9598, !range !7580
  %8 = shl nuw nsw i32 %7, 1, !dbg !9592
  %9 = shl i32 3, %8, !dbg !9592
  %10 = xor i32 %9, -1, !dbg !9592
  %11 = and i32 %5, %10, !dbg !9592
  call void @llvm.dbg.value(metadata i32 %1, metadata !9390, metadata !DIExpression()) #23, !dbg !9599
  call void @llvm.dbg.value(metadata i32 %6, metadata !9393, metadata !DIExpression()) #23, !dbg !9599
  call void @llvm.dbg.value(metadata i32 %6, metadata !9398, metadata !DIExpression()) #23, !dbg !9601
  %12 = shl i32 %2, %8, !dbg !9592
  %13 = or i32 %11, %12, !dbg !9592
  store volatile i32 %13, i32* %4, align 4, !dbg !9592
  ret void, !dbg !9603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9604 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9606, metadata !DIExpression()), !dbg !9609
  call void @llvm.dbg.value(metadata i32 %1, metadata !9607, metadata !DIExpression()), !dbg !9609
  call void @llvm.dbg.value(metadata i32 %2, metadata !9608, metadata !DIExpression()), !dbg !9609
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9610
  %5 = load volatile i32, i32* %4, align 4, !dbg !9610
  call void @llvm.dbg.value(metadata i32 %1, metadata !9390, metadata !DIExpression()) #23, !dbg !9611
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9613, !srcloc !9397
  call void @llvm.dbg.value(metadata i32 %6, metadata !9393, metadata !DIExpression()) #23, !dbg !9611
  call void @llvm.dbg.value(metadata i32 %6, metadata !9398, metadata !DIExpression()) #23, !dbg !9614
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9616, !range !7580
  %8 = shl nuw nsw i32 %7, 1, !dbg !9610
  %9 = shl i32 3, %8, !dbg !9610
  %10 = xor i32 %9, -1, !dbg !9610
  %11 = and i32 %5, %10, !dbg !9610
  call void @llvm.dbg.value(metadata i32 %1, metadata !9390, metadata !DIExpression()) #23, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %6, metadata !9393, metadata !DIExpression()) #23, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %6, metadata !9398, metadata !DIExpression()) #23, !dbg !9619
  %12 = shl i32 %2, %8, !dbg !9610
  %13 = or i32 %11, %12, !dbg !9610
  store volatile i32 %13, i32* %4, align 4, !dbg !9610
  ret void, !dbg !9621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9622 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9624, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.value(metadata i32 %1, metadata !9625, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.value(metadata i32 %2, metadata !9626, metadata !DIExpression()), !dbg !9627
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9628
  %5 = load volatile i32, i32* %4, align 4, !dbg !9628
  call void @llvm.dbg.value(metadata i32 %1, metadata !9390, metadata !DIExpression()) #23, !dbg !9629
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9631, !srcloc !9397
  call void @llvm.dbg.value(metadata i32 %6, metadata !9393, metadata !DIExpression()) #23, !dbg !9629
  call void @llvm.dbg.value(metadata i32 %6, metadata !9398, metadata !DIExpression()) #23, !dbg !9632
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9634, !range !7580
  %8 = shl nuw nsw i32 %7, 2, !dbg !9628
  %9 = shl i32 15, %8, !dbg !9628
  %10 = xor i32 %9, -1, !dbg !9628
  %11 = and i32 %5, %10, !dbg !9628
  call void @llvm.dbg.value(metadata i32 %1, metadata !9390, metadata !DIExpression()) #23, !dbg !9635
  call void @llvm.dbg.value(metadata i32 %6, metadata !9393, metadata !DIExpression()) #23, !dbg !9635
  call void @llvm.dbg.value(metadata i32 %6, metadata !9398, metadata !DIExpression()) #23, !dbg !9637
  %12 = shl i32 %2, %8, !dbg !9628
  %13 = or i32 %11, %12, !dbg !9628
  store volatile i32 %13, i32* %4, align 4, !dbg !9628
  ret void, !dbg !9639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9640 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9642, metadata !DIExpression()), !dbg !9645
  call void @llvm.dbg.value(metadata i32 %1, metadata !9643, metadata !DIExpression()), !dbg !9645
  call void @llvm.dbg.value(metadata i32 %2, metadata !9644, metadata !DIExpression()), !dbg !9645
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9646
  %5 = load volatile i32, i32* %4, align 4, !dbg !9646
  %6 = lshr i32 %1, 8, !dbg !9646
  call void @llvm.dbg.value(metadata i32 %6, metadata !9390, metadata !DIExpression()) #23, !dbg !9647
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9649, !srcloc !9397
  call void @llvm.dbg.value(metadata i32 %7, metadata !9393, metadata !DIExpression()) #23, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %7, metadata !9398, metadata !DIExpression()) #23, !dbg !9650
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9652, !range !7580
  %9 = shl nuw nsw i32 %8, 2, !dbg !9646
  %10 = shl i32 15, %9, !dbg !9646
  %11 = xor i32 %10, -1, !dbg !9646
  %12 = and i32 %5, %11, !dbg !9646
  call void @llvm.dbg.value(metadata i32 %6, metadata !9390, metadata !DIExpression()) #23, !dbg !9653
  call void @llvm.dbg.value(metadata i32 %7, metadata !9393, metadata !DIExpression()) #23, !dbg !9653
  call void @llvm.dbg.value(metadata i32 %7, metadata !9398, metadata !DIExpression()) #23, !dbg !9655
  %13 = shl i32 %2, %9, !dbg !9646
  %14 = or i32 %12, %13, !dbg !9646
  store volatile i32 %14, i32* %4, align 4, !dbg !9646
  ret void, !dbg !9657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9658 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9660, metadata !DIExpression()), !dbg !9663
  call void @llvm.dbg.value(metadata i32 %1, metadata !9661, metadata !DIExpression()), !dbg !9663
  call void @llvm.dbg.value(metadata i32 %2, metadata !9662, metadata !DIExpression()), !dbg !9663
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9664
  %5 = load volatile i32, i32* %4, align 4, !dbg !9664
  call void @llvm.dbg.value(metadata i32 %1, metadata !9390, metadata !DIExpression()) #23, !dbg !9665
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9667, !srcloc !9397
  call void @llvm.dbg.value(metadata i32 %6, metadata !9393, metadata !DIExpression()) #23, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %6, metadata !9398, metadata !DIExpression()) #23, !dbg !9668
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9670, !range !7580
  %8 = shl nuw nsw i32 %7, 1, !dbg !9664
  %9 = shl i32 3, %8, !dbg !9664
  %10 = xor i32 %9, -1, !dbg !9664
  %11 = and i32 %5, %10, !dbg !9664
  call void @llvm.dbg.value(metadata i32 %1, metadata !9390, metadata !DIExpression()) #23, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %6, metadata !9393, metadata !DIExpression()) #23, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %6, metadata !9398, metadata !DIExpression()) #23, !dbg !9673
  %12 = shl i32 %2, %8, !dbg !9664
  %13 = or i32 %11, %12, !dbg !9664
  store volatile i32 %13, i32* %4, align 4, !dbg !9664
  ret void, !dbg !9675
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9676 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9678, metadata !DIExpression()), !dbg !9681
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9682
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9682
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9682
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9679, metadata !DIExpression()), !dbg !9681
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9683
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9684
  %6 = tail call fastcc zeroext i1 @device_is_ready.130() #24, !dbg !9685
  br i1 %6, label %7, label %11, !dbg !9687

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9688
  call void @llvm.dbg.value(metadata i32 %8, metadata !9680, metadata !DIExpression()), !dbg !9681
  %9 = icmp slt i32 %8, 0, !dbg !9689
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9691
  br label %11, !dbg !9691

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9681
  ret i32 %12, !dbg !9692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.130() unnamed_addr #1 !dbg !9693 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9697, metadata !DIExpression()), !dbg !9698
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9699, !srcloc !9701
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.131() #24, !dbg !9702
  ret i1 %1, !dbg !9703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9704 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9708, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.value(metadata i8 1, metadata !9709, metadata !DIExpression()), !dbg !9713
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9714
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9714
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9714
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9710, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.value(metadata i32 0, metadata !9711, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9712, metadata !DIExpression()), !dbg !9713
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9715
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9718
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %7, metadata !9711, metadata !DIExpression()), !dbg !9713
  ret i32 %7, !dbg !9720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.131() unnamed_addr #1 !dbg !9721 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9723, metadata !DIExpression()), !dbg !9724
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !9725
  ret i1 %1, !dbg !9726
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9727 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9731, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata i32 %1, metadata !9732, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata i32 %2, metadata !9733, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata i32 %3, metadata !9734, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata i32 0, metadata !9735, metadata !DIExpression()), !dbg !9739
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9740
  %5 = icmp eq i32 %3, 17, !dbg !9741
  br i1 %5, label %6, label %14, !dbg !9742

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9743
  call void @llvm.dbg.value(metadata i32 %7, metadata !9736, metadata !DIExpression()), !dbg !9744
  %8 = icmp eq i32 %7, 0, !dbg !9745
  %9 = shl nuw i32 1, %1, !dbg !9747
  br i1 %8, label %12, label %10, !dbg !9748

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9749
  br label %14, !dbg !9751

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9752
  br label %14, !dbg !9755

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9756
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9757 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9759, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata i8* %1, metadata !9760, metadata !DIExpression()), !dbg !9763
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9764
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9764
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9764
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9761, metadata !DIExpression()), !dbg !9763
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9765
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9765
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9767
  %9 = icmp eq i32 %8, 0, !dbg !9767
  br i1 %9, label %12, label %10, !dbg !9768

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9769
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9771
  br label %12, !dbg !9772

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9773
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9775
  %15 = icmp eq i32 %14, 0, !dbg !9775
  br i1 %15, label %19, label %16, !dbg !9776

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9777
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9778
  store i8 %18, i8* %1, align 1, !dbg !9779
  br label %19, !dbg !9780

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9763
  ret i32 %20, !dbg !9781
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9782 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9784, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.value(metadata i8 %1, metadata !9785, metadata !DIExpression()), !dbg !9788
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9789
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9789
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9789
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9786, metadata !DIExpression()), !dbg !9788
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9790

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9791
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9794
  %10 = icmp eq i32 %9, 0, !dbg !9794
  br i1 %10, label %18, label %11, !dbg !9795

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9796, !srcloc !9803
  call void @llvm.dbg.value(metadata i32 undef, metadata !9799, metadata !DIExpression()) #23, !dbg !9804
  call void @llvm.dbg.value(metadata i32 undef, metadata !9800, metadata !DIExpression()) #23, !dbg !9804
  call void @llvm.dbg.value(metadata i32 undef, metadata !9787, metadata !DIExpression()), !dbg !9788
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9805
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9807
  %15 = icmp eq i32 %14, 0, !dbg !9807
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9796
  br i1 %15, label %17, label %19, !dbg !9808

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9799, metadata !DIExpression()) #23, !dbg !9804
  call void @llvm.dbg.value(metadata i32 %16, metadata !9787, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.value(metadata i32 undef, metadata !9809, metadata !DIExpression()) #23, !dbg !9812
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9814, !srcloc !9815
  br label %18, !dbg !9816

18:                                               ; preds = %17, %7
  br label %7, !dbg !9791, !llvm.loop !9817

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9796
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9819
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9820
  call void @llvm.dbg.value(metadata i32 %20, metadata !9809, metadata !DIExpression()) #23, !dbg !9821
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9823, !srcloc !9815
  ret void, !dbg !9824
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9825 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9827, metadata !DIExpression()), !dbg !9830
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9831
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9831
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9831
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9828, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i32 0, metadata !9829, metadata !DIExpression()), !dbg !9830
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9832
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9832
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9834
  %8 = icmp ne i32 %7, 0, !dbg !9834
  %9 = zext i1 %8 to i32, !dbg !9835
  call void @llvm.dbg.value(metadata i32 %9, metadata !9829, metadata !DIExpression()), !dbg !9830
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9836
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9838
  %12 = icmp eq i32 %11, 0, !dbg !9838
  %13 = or i32 %9, 2, !dbg !9839
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9839
  call void @llvm.dbg.value(metadata i32 %14, metadata !9829, metadata !DIExpression()), !dbg !9830
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9840
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9842
  %17 = icmp eq i32 %16, 0, !dbg !9842
  %18 = or i32 %14, 4, !dbg !9843
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9843
  call void @llvm.dbg.value(metadata i32 %19, metadata !9829, metadata !DIExpression()), !dbg !9830
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9844
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9846
  %22 = icmp eq i32 %21, 0, !dbg !9846
  %23 = or i32 %19, 8, !dbg !9847
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9847
  call void @llvm.dbg.value(metadata i32 %24, metadata !9829, metadata !DIExpression()), !dbg !9830
  %25 = and i32 %24, 8, !dbg !9848
  %26 = icmp eq i32 %25, 0, !dbg !9848
  br i1 %26, label %29, label %27, !dbg !9850

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9851
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9853
  br label %29, !dbg !9854

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9855
  %31 = icmp eq i32 %30, 0, !dbg !9855
  br i1 %31, label %34, label %32, !dbg !9857

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9858
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9860
  br label %34, !dbg !9861

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9862
  %36 = icmp eq i32 %35, 0, !dbg !9862
  br i1 %36, label %39, label %37, !dbg !9864

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9865
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9867
  br label %39, !dbg !9868

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9869
  %41 = icmp eq i32 %40, 0, !dbg !9869
  br i1 %41, label %44, label %42, !dbg !9871

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9872
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9874
  br label %44, !dbg !9875

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9876
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9877
  ret i32 %24, !dbg !9878
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9879 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9881, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9882, metadata !DIExpression()), !dbg !9890
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9891
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9891
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9891
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9883, metadata !DIExpression()), !dbg !9890
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9892
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9892
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9892
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9884, metadata !DIExpression()), !dbg !9890
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9893
  %10 = load i8, i8* %9, align 4, !dbg !9893
  %11 = zext i8 %10 to i32, !dbg !9894
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9895
  call void @llvm.dbg.value(metadata i32 %12, metadata !9886, metadata !DIExpression()), !dbg !9890
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9896
  %14 = load i8, i8* %13, align 1, !dbg !9896
  %15 = zext i8 %14 to i32, !dbg !9897
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9898
  call void @llvm.dbg.value(metadata i32 %16, metadata !9887, metadata !DIExpression()), !dbg !9890
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9899
  %18 = load i8, i8* %17, align 2, !dbg !9899
  %19 = zext i8 %18 to i32, !dbg !9900
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9901
  call void @llvm.dbg.value(metadata i32 %20, metadata !9888, metadata !DIExpression()), !dbg !9890
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9902
  %22 = load i8, i8* %21, align 1, !dbg !9902
  %23 = zext i8 %22 to i32, !dbg !9903
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9904
  call void @llvm.dbg.value(metadata i32 %24, metadata !9889, metadata !DIExpression()), !dbg !9890
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9905

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9907
  br i1 %26, label %69, label %27, !dbg !9909

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9910

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9911
  br i1 %29, label %65, label %30, !dbg !9911

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9913
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9890
  br i1 %31, label %38, label %34, !dbg !9915

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9916
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9916

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9919
  br i1 %37, label %38, label %69, !dbg !9920

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9921
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9922
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9923
  %41 = icmp eq i32 %12, %40, !dbg !9925
  br i1 %41, label %43, label %42, !dbg !9926

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9927
  br label %43, !dbg !9929

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9930
  %45 = icmp eq i32 %16, %44, !dbg !9932
  br i1 %45, label %47, label %46, !dbg !9933

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9934
  br label %47, !dbg !9936

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9937
  %49 = icmp eq i32 %20, %48, !dbg !9939
  br i1 %49, label %51, label %50, !dbg !9940

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9941
  br label %51, !dbg !9943

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9944
  %53 = icmp eq i32 %24, %52, !dbg !9946
  br i1 %53, label %55, label %54, !dbg !9947

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !9948
  br label %55, !dbg !9950

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9951
  %57 = load i32, i32* %56, align 4, !dbg !9951
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9953
  %59 = load i32, i32* %58, align 4, !dbg !9953
  %60 = icmp eq i32 %57, %59, !dbg !9954
  br i1 %60, label %63, label %61, !dbg !9955

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !9956
  %62 = load i32, i32* %56, align 4, !dbg !9958
  store i32 %62, i32* %58, align 4, !dbg !9959
  br label %63, !dbg !9960

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9961
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !9962
  br label %69, !dbg !9963

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9911
  %67 = and i8 %66, 1, !dbg !9911
  %68 = icmp eq i8 %67, 0, !dbg !9911
  br i1 %68, label %30, label %69, !dbg !9911

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9890
  ret i32 %70, !dbg !9964
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !9965 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9967, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9968, metadata !DIExpression()), !dbg !9970
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9971
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9971
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9971
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9969, metadata !DIExpression()), !dbg !9970
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9972
  %7 = load i32, i32* %6, align 4, !dbg !9972
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9973
  store i32 %7, i32* %8, align 4, !dbg !9974
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9975, !range !9976
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !9977
  %11 = trunc i32 %10 to i8, !dbg !9977
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9978
  store i8 %11, i8* %12, align 4, !dbg !9979
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !9980, !range !9981
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !9982
  %15 = trunc i32 %14 to i8, !dbg !9982
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9983
  store i8 %15, i8* %16, align 1, !dbg !9984
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !9985
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9986, !range !9976
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !9987
  %20 = trunc i32 %19 to i8, !dbg !9987
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9988
  store i8 %20, i8* %21, align 2, !dbg !9989
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !9990, !range !9991
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !9992
  %24 = trunc i32 %23 to i8, !dbg !9992
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9993
  store i8 %24, i8* %25, align 1, !dbg !9994
  ret i32 0, !dbg !9995
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9996 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10000, metadata !DIExpression()), !dbg !10002
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10003
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10003
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10003
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10001, metadata !DIExpression()), !dbg !10002
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10004
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10004
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10005
  ret i32 %7, !dbg !10006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10011, metadata !DIExpression()), !dbg !10012
  %2 = icmp eq i32 %0, 1024, !dbg !10013
  %3 = select i1 %2, i32 2, i32 0, !dbg !10013
  %4 = icmp eq i32 %0, 1536, !dbg !10013
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10013
  ret i32 %5, !dbg !10014
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10015 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10017, metadata !DIExpression()), !dbg !10019
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10020
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10020
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10020
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10018, metadata !DIExpression()), !dbg !10019
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10021
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10021
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10022
  ret i32 %7, !dbg !10023
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10028, metadata !DIExpression()), !dbg !10029
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10030
  %3 = icmp ult i32 %2, 4, !dbg !10030
  br i1 %3, label %4, label %7, !dbg !10030

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10030
  %6 = load i32, i32* %5, align 4, !dbg !10030
  br label %7, !dbg !10030

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10031
  ret i32 %8, !dbg !10033
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10036, metadata !DIExpression()), !dbg !10038
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10039
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10039
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10039
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10037, metadata !DIExpression()), !dbg !10038
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10040
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10040
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10041
  ret i32 %7, !dbg !10042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10047, metadata !DIExpression()), !dbg !10049
  call void @llvm.dbg.value(metadata i32 %1, metadata !10048, metadata !DIExpression()), !dbg !10049
  %3 = icmp eq i32 %0, 4096, !dbg !10050
  %4 = icmp eq i32 %1, 0, !dbg !10050
  %5 = select i1 %4, i32 4, i32 3, !dbg !10050
  %6 = select i1 %4, i32 3, i32 2, !dbg !10050
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10050
  ret i32 %7, !dbg !10051
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10052 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10054, metadata !DIExpression()), !dbg !10056
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10057
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10057
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10057
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10055, metadata !DIExpression()), !dbg !10056
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10058
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10058
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10059
  ret i32 %7, !dbg !10060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10065, metadata !DIExpression()), !dbg !10066
  %2 = icmp eq i32 %0, 768, !dbg !10067
  %3 = zext i1 %2 to i32, !dbg !10066
  ret i32 %3, !dbg !10069
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10070 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10075, metadata !DIExpression()), !dbg !10076
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10077
  %3 = load volatile i32, i32* %2, align 4, !dbg !10077
  %4 = and i32 %3, 768, !dbg !10077
  ret i32 %4, !dbg !10078
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10079 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10081, metadata !DIExpression()), !dbg !10082
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10083
  %3 = load volatile i32, i32* %2, align 4, !dbg !10083
  %4 = and i32 %3, 4096, !dbg !10083
  ret i32 %4, !dbg !10084
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10085 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10087, metadata !DIExpression()), !dbg !10088
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10089
  %3 = load volatile i32, i32* %2, align 4, !dbg !10089
  %4 = and i32 %3, 12288, !dbg !10089
  ret i32 %4, !dbg !10090
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10091 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10093, metadata !DIExpression()), !dbg !10094
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10095
  %3 = load volatile i32, i32* %2, align 4, !dbg !10095
  %4 = and i32 %3, 1536, !dbg !10095
  ret i32 %4, !dbg !10096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !10097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10101, metadata !DIExpression()), !dbg !10102
  %2 = icmp eq i32 %0, 2, !dbg !10103
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10103
  %4 = icmp eq i32 %0, 1, !dbg !10103
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10103
  ret i32 %5, !dbg !10104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !10105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10109, metadata !DIExpression()), !dbg !10110
  %2 = icmp ult i32 %0, 3, !dbg !10111
  br i1 %2, label %3, label %6, !dbg !10111

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10111
  %5 = load i32, i32* %4, align 4, !dbg !10111
  br label %6, !dbg !10111

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10112
  ret i32 %7, !dbg !10114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10119, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.value(metadata i32 %1, metadata !10120, metadata !DIExpression()), !dbg !10121
  %3 = icmp eq i32 %0, 4, !dbg !10122
  %4 = icmp eq i32 %1, 0, !dbg !10122
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10122
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10122
  ret i32 %6, !dbg !10123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10128, metadata !DIExpression()), !dbg !10129
  %2 = icmp eq i32 %0, 1, !dbg !10130
  %3 = select i1 %2, i32 768, i32 0, !dbg !10129
  ret i32 %3, !dbg !10132
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10133 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10137, metadata !DIExpression()), !dbg !10138
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10139
  %3 = load volatile i32, i32* %2, align 4, !dbg !10139
  %4 = and i32 %3, -8193, !dbg !10139
  store volatile i32 %4, i32* %2, align 4, !dbg !10139
  ret void, !dbg !10140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10141 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10145, metadata !DIExpression()), !dbg !10148
  call void @llvm.dbg.value(metadata i32 %1, metadata !10146, metadata !DIExpression()), !dbg !10148
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10149
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10149
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10149
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10147, metadata !DIExpression()), !dbg !10148
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10150
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10150
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10151
  ret void, !dbg !10152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10153 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10155, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %1, metadata !10156, metadata !DIExpression()), !dbg !10158
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10159
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10159
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10159
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10157, metadata !DIExpression()), !dbg !10158
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10160
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10160
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10161
  ret void, !dbg !10162
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10163 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10165, metadata !DIExpression()), !dbg !10168
  call void @llvm.dbg.value(metadata i32 %1, metadata !10166, metadata !DIExpression()), !dbg !10168
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10169
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10169
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10169
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10167, metadata !DIExpression()), !dbg !10168
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10170
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10170
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10171
  ret void, !dbg !10172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10173 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10175, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.value(metadata i32 %1, metadata !10176, metadata !DIExpression()), !dbg !10178
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10179
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10179
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10179
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10177, metadata !DIExpression()), !dbg !10178
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10180
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10180
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10181
  ret void, !dbg !10182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10183 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10185, metadata !DIExpression()), !dbg !10190
  call void @llvm.dbg.value(metadata i32 %1, metadata !10186, metadata !DIExpression()), !dbg !10190
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10191
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10191
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10191
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10187, metadata !DIExpression()), !dbg !10190
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10192
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10192
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10192
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10188, metadata !DIExpression()), !dbg !10190
  %10 = bitcast i32* %3 to i8*, !dbg !10193
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10193
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10194
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10194
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10198
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10198
  %15 = load i8*, i8** %14, align 4, !dbg !10198
  call void @llvm.dbg.value(metadata i32* %3, metadata !10189, metadata !DIExpression(DW_OP_deref)), !dbg !10190
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !10199
  %17 = icmp slt i32 %16, 0, !dbg !10200
  br i1 %17, label %18, label %21, !dbg !10201

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !10202
  %20 = zext i8 %19 to i32, !dbg !10202
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.137, i32 0, i32 0), i32 noundef %20) #25, !dbg !10202
  br label %31, !dbg !10208

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10209
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10209
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !10210
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10211
  %25 = load i32, i32* %3, align 4, !dbg !10212
  call void @llvm.dbg.value(metadata i32 %25, metadata !10189, metadata !DIExpression()), !dbg !10190
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !10213
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10214
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10214
  %28 = load volatile i32, i32* %27, align 4, !dbg !10214
  %29 = icmp ugt i32 %28, 16, !dbg !10214
  br i1 %29, label %31, label %30, !dbg !10217

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.140, i32 0, i32 0), i32 noundef 190) #25, !dbg !10218
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.141, i32 0, i32 0)) #25, !dbg !10218
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.140, i32 0, i32 0), i32 noundef 190) #25, !dbg !10218
  unreachable, !dbg !10218

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10220
  ret void, !dbg !10220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10221 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10223, metadata !DIExpression()), !dbg !10224
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10225
  %3 = load volatile i32, i32* %2, align 4, !dbg !10225
  %4 = or i32 %3, 8192, !dbg !10225
  store volatile i32 %4, i32* %2, align 4, !dbg !10225
  ret void, !dbg !10226
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10227 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10229, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.value(metadata i8* %1, metadata !10230, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.value(metadata i32* %2, metadata !10231, metadata !DIExpression()), !dbg !10233
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10234
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10234
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10234
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10232, metadata !DIExpression()), !dbg !10233
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10235
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10235
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10237
  br i1 %9, label %12, label %10, !dbg !10238

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !10239
  br label %12, !dbg !10240

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10233
  ret i32 %13, !dbg !10241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef %0) unnamed_addr #4 !dbg !10242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10244, metadata !DIExpression()), !dbg !10245
  %2 = icmp eq i32 %0, 2, !dbg !10246
  %3 = select i1 %2, i8 87, i8 63, !dbg !10246
  %4 = icmp eq i32 %0, 1, !dbg !10246
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10246
  ret i8 %5, !dbg !10247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10248 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10252, metadata !DIExpression()), !dbg !10254
  call void @llvm.dbg.value(metadata i32 0, metadata !10253, metadata !DIExpression()), !dbg !10254
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10255
  %3 = load volatile i32, i32* %2, align 4, !dbg !10255
  %4 = and i32 %3, -32769, !dbg !10255
  store volatile i32 %4, i32* %2, align 4, !dbg !10255
  ret void, !dbg !10256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10257 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10261, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata i32 %1, metadata !10262, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata i32 0, metadata !10263, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata i32 %2, metadata !10264, metadata !DIExpression()), !dbg !10265
  %4 = zext i32 %1 to i64, !dbg !10266
  %5 = mul nuw nsw i64 %4, 25, !dbg !10266
  %6 = zext i32 %2 to i64, !dbg !10266
  %7 = shl nuw nsw i64 %6, 2, !dbg !10266
  %8 = udiv i64 %5, %7, !dbg !10266
  %9 = trunc i64 %8 to i32, !dbg !10266
  %10 = udiv i32 %9, 100, !dbg !10266
  %11 = shl nuw nsw i32 %10, 4, !dbg !10266
  %12 = mul i32 %10, -100, !dbg !10266
  %13 = add i32 %12, %9, !dbg !10266
  %14 = shl i32 %13, 4, !dbg !10266
  %15 = add i32 %14, 50, !dbg !10266
  %16 = udiv i32 %15, 100, !dbg !10266
  %17 = and i32 %16, 240, !dbg !10266
  %18 = add nuw nsw i32 %17, %11, !dbg !10266
  %19 = and i32 %16, 15, !dbg !10266
  %20 = and i32 %18, 65520, !dbg !10269
  %21 = or i32 %20, %19, !dbg !10269
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10270
  store volatile i32 %21, i32* %22, align 4, !dbg !10271
  ret void, !dbg !10272
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10273 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10275, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata i32 %1, metadata !10276, metadata !DIExpression()), !dbg !10277
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10278
  %4 = load volatile i32, i32* %3, align 4, !dbg !10278
  %5 = and i32 %4, -769, !dbg !10278
  %6 = or i32 %5, %1, !dbg !10278
  store volatile i32 %6, i32* %3, align 4, !dbg !10278
  ret void, !dbg !10279
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10280 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10282, metadata !DIExpression()), !dbg !10284
  call void @llvm.dbg.value(metadata i32 %1, metadata !10283, metadata !DIExpression()), !dbg !10284
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10285
  %4 = load volatile i32, i32* %3, align 4, !dbg !10285
  %5 = and i32 %4, -4097, !dbg !10285
  %6 = or i32 %5, %1, !dbg !10285
  store volatile i32 %6, i32* %3, align 4, !dbg !10285
  ret void, !dbg !10286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10287 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10289, metadata !DIExpression()), !dbg !10291
  call void @llvm.dbg.value(metadata i32 %1, metadata !10290, metadata !DIExpression()), !dbg !10291
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10292
  %4 = load volatile i32, i32* %3, align 4, !dbg !10292
  %5 = and i32 %4, -12289, !dbg !10292
  %6 = or i32 %5, %1, !dbg !10292
  store volatile i32 %6, i32* %3, align 4, !dbg !10292
  ret void, !dbg !10293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10294 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10296, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i32 %1, metadata !10297, metadata !DIExpression()), !dbg !10298
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10299
  %4 = load volatile i32, i32* %3, align 4, !dbg !10299
  %5 = and i32 %4, -1537, !dbg !10299
  %6 = or i32 %5, %1, !dbg !10299
  store volatile i32 %6, i32* %3, align 4, !dbg !10299
  ret void, !dbg !10300
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10301 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10303, metadata !DIExpression()), !dbg !10304
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10305
  %3 = load volatile i32, i32* %2, align 4, !dbg !10305
  %4 = lshr i32 %3, 3, !dbg !10306
  %5 = and i32 %4, 1, !dbg !10306
  ret i32 %5, !dbg !10307
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10308 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10310, metadata !DIExpression()), !dbg !10311
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10312
  %3 = load volatile i32, i32* %2, align 4, !dbg !10312
  %4 = and i32 %3, 1, !dbg !10312
  ret i32 %4, !dbg !10313
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10314 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10316, metadata !DIExpression()), !dbg !10317
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10318
  %3 = load volatile i32, i32* %2, align 4, !dbg !10318
  %4 = lshr i32 %3, 1, !dbg !10319
  %5 = and i32 %4, 1, !dbg !10319
  ret i32 %5, !dbg !10320
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10321 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10323, metadata !DIExpression()), !dbg !10324
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10325
  %3 = load volatile i32, i32* %2, align 4, !dbg !10325
  %4 = lshr i32 %3, 8, !dbg !10326
  %5 = and i32 %4, 1, !dbg !10326
  ret i32 %5, !dbg !10327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10328 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10330, metadata !DIExpression()), !dbg !10331
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10332
  store volatile i32 -257, i32* %2, align 4, !dbg !10332
  ret void, !dbg !10333
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10334 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10336, metadata !DIExpression()), !dbg !10338
  %3 = bitcast i32* %2 to i8*, !dbg !10339
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10339
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10337, metadata !DIExpression()), !dbg !10340
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10341
  %5 = load volatile i32, i32* %4, align 4, !dbg !10341
  store volatile i32 %5, i32* %2, align 4, !dbg !10342
  %6 = load volatile i32, i32* %2, align 4, !dbg !10343
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10344
  %8 = load volatile i32, i32* %7, align 4, !dbg !10344
  store volatile i32 %8, i32* %2, align 4, !dbg !10345
  %9 = load volatile i32, i32* %2, align 4, !dbg !10346
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10347
  ret void, !dbg !10347
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10348 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10350, metadata !DIExpression()), !dbg !10352
  %3 = bitcast i32* %2 to i8*, !dbg !10353
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10353
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10351, metadata !DIExpression()), !dbg !10354
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10355
  %5 = load volatile i32, i32* %4, align 4, !dbg !10355
  store volatile i32 %5, i32* %2, align 4, !dbg !10356
  %6 = load volatile i32, i32* %2, align 4, !dbg !10357
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10358
  %8 = load volatile i32, i32* %7, align 4, !dbg !10358
  store volatile i32 %8, i32* %2, align 4, !dbg !10359
  %9 = load volatile i32, i32* %2, align 4, !dbg !10360
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10361
  ret void, !dbg !10361
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10362 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10364, metadata !DIExpression()), !dbg !10366
  %3 = bitcast i32* %2 to i8*, !dbg !10367
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10367
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10365, metadata !DIExpression()), !dbg !10368
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10369
  %5 = load volatile i32, i32* %4, align 4, !dbg !10369
  store volatile i32 %5, i32* %2, align 4, !dbg !10370
  %6 = load volatile i32, i32* %2, align 4, !dbg !10371
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10372
  %8 = load volatile i32, i32* %7, align 4, !dbg !10372
  store volatile i32 %8, i32* %2, align 4, !dbg !10373
  %9 = load volatile i32, i32* %2, align 4, !dbg !10374
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10375
  ret void, !dbg !10375
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10376 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10378, metadata !DIExpression()), !dbg !10380
  %3 = bitcast i32* %2 to i8*, !dbg !10381
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10381
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10379, metadata !DIExpression()), !dbg !10382
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10383
  %5 = load volatile i32, i32* %4, align 4, !dbg !10383
  store volatile i32 %5, i32* %2, align 4, !dbg !10384
  %6 = load volatile i32, i32* %2, align 4, !dbg !10385
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10386
  %8 = load volatile i32, i32* %7, align 4, !dbg !10386
  store volatile i32 %8, i32* %2, align 4, !dbg !10387
  %9 = load volatile i32, i32* %2, align 4, !dbg !10388
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10389
  ret void, !dbg !10389
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10390 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10392, metadata !DIExpression()), !dbg !10393
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10394
  %3 = load volatile i32, i32* %2, align 4, !dbg !10394
  %4 = lshr i32 %3, 7, !dbg !10395
  %5 = and i32 %4, 1, !dbg !10395
  ret i32 %5, !dbg !10396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !10397 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10401, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata i8 %1, metadata !10402, metadata !DIExpression()), !dbg !10403
  %3 = zext i8 %1 to i32, !dbg !10404
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10405
  store volatile i32 %3, i32* %4, align 4, !dbg !10406
  ret void, !dbg !10407
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10408 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10410, metadata !DIExpression()), !dbg !10411
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10412
  %3 = load volatile i32, i32* %2, align 4, !dbg !10412
  %4 = lshr i32 %3, 5, !dbg !10413
  %5 = and i32 %4, 1, !dbg !10413
  ret i32 %5, !dbg !10414
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10415 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10419, metadata !DIExpression()), !dbg !10420
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10421
  %3 = load volatile i32, i32* %2, align 4, !dbg !10421
  %4 = trunc i32 %3 to i8, !dbg !10422
  ret i8 %4, !dbg !10423
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10426, metadata !DIExpression()), !dbg !10432
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10433
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10433
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10433
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10427, metadata !DIExpression()), !dbg !10432
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10434
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10434
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10434
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10428, metadata !DIExpression()), !dbg !10432
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !10435
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10436
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10436
  %10 = tail call fastcc zeroext i1 @device_is_ready.143(%struct.device* noundef %9) #24, !dbg !10438
  br i1 %10, label %14, label %11, !dbg !10439

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !10440
  %13 = zext i8 %12 to i32, !dbg !10440
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.144, i32 0, i32 0), i32 noundef %13) #25, !dbg !10440
  br label %62, !dbg !10446

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10447
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10448
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10448
  %18 = load i8*, i8** %17, align 4, !dbg !10448
  %19 = tail call fastcc i32 @clock_control_on.145(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !10449
  call void @llvm.dbg.value(metadata i32 %19, metadata !10431, metadata !DIExpression()), !dbg !10432
  %20 = icmp eq i32 %19, 0, !dbg !10450
  br i1 %20, label %24, label %21, !dbg !10452

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !10453
  %23 = zext i8 %22 to i32, !dbg !10453
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.146, i32 0, i32 0), i32 noundef %23) #25, !dbg !10453
  br label %62, !dbg !10459

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10460
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10460
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !10461
  call void @llvm.dbg.value(metadata i32 %27, metadata !10431, metadata !DIExpression()), !dbg !10432
  %28 = icmp slt i32 %27, 0, !dbg !10462
  br i1 %28, label %62, label %29, !dbg !10464

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10465
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10465
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !10466
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10467
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !10468
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10469
  %34 = load i32, i32* %33, align 4, !dbg !10469
  %35 = icmp ult i32 %34, 3, !dbg !10471
  br i1 %35, label %39, label %36, !dbg !10471

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 2) #24, !dbg !10472
  %38 = zext i8 %37 to i32, !dbg !10472
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.147, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !10472
  call void @llvm.dbg.value(metadata i32 0, metadata !10429, metadata !DIExpression()), !dbg !10432
  call void @llvm.dbg.value(metadata i32 0, metadata !10430, metadata !DIExpression()), !dbg !10432
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10471
  %41 = load i32, i32* %40, align 4, !dbg !10471
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !10471
  %43 = load i32, i32* %42, align 4, !dbg !10471
  br label %44, !dbg !10471

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10481
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10481
  call void @llvm.dbg.value(metadata i32 %46, metadata !10430, metadata !DIExpression()), !dbg !10432
  call void @llvm.dbg.value(metadata i32 %45, metadata !10429, metadata !DIExpression()), !dbg !10432
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10482
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !10483
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10484
  %49 = load i8, i8* %48, align 4, !dbg !10484, !range !6743
  %50 = icmp eq i8 %49, 0, !dbg !10484
  br i1 %50, label %52, label %51, !dbg !10486

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !10487
  br label %52, !dbg !10489

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10490
  %54 = load i32, i32* %53, align 4, !dbg !10490
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !10491
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10492
  %56 = load i8, i8* %55, align 4, !dbg !10492, !range !6743
  %57 = icmp eq i8 %56, 0, !dbg !10492
  br i1 %57, label %60, label %58, !dbg !10494

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10495
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !10497
  br label %60, !dbg !10498

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10499
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !10500
  br label %62, !dbg !10501

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10432
  ret i32 %63, !dbg !10502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10503 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10507, metadata !DIExpression()), !dbg !10511
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10512
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10512
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10512
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10508, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10509, metadata !DIExpression()), !dbg !10511
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10513
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10514
  ret void, !dbg !10515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.143(%struct.device* noundef %0) unnamed_addr #1 !dbg !10516 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10520, metadata !DIExpression()), !dbg !10521
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10522, !srcloc !10524
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.148(%struct.device* noundef %0) #24, !dbg !10525
  ret i1 %2, !dbg !10526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.145(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10527 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10529, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i8* %1, metadata !10530, metadata !DIExpression()), !dbg !10532
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10533
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10533
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10533
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10531, metadata !DIExpression()), !dbg !10532
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10534
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10534
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10535
  ret i32 %8, !dbg !10536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10537 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10541, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i8 0, metadata !10542, metadata !DIExpression()), !dbg !10545
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10546
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10546
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10544, metadata !DIExpression(DW_OP_deref)), !dbg !10545
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10547
  call void @llvm.dbg.value(metadata i32 %4, metadata !10543, metadata !DIExpression()), !dbg !10545
  %5 = icmp slt i32 %4, 0, !dbg !10548
  br i1 %5, label %9, label %6, !dbg !10550

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10551
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10544, metadata !DIExpression()), !dbg !10545
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10552
  br label %9, !dbg !10553

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10545
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10554
  ret i32 %10, !dbg !10554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10555 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10557, metadata !DIExpression()), !dbg !10561
  call void @llvm.dbg.value(metadata i32 12, metadata !10558, metadata !DIExpression()), !dbg !10561
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10562

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10563, metadata !DIExpression()) #23, !dbg !10569
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10572, !srcloc !10573
  call void @llvm.dbg.value(metadata i32 %4, metadata !10568, metadata !DIExpression()) #23, !dbg !10569
  %5 = or i32 %4, 12, !dbg !10574
  call void @llvm.dbg.value(metadata i32 %5, metadata !10559, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.value(metadata i32 %5, metadata !10576, metadata !DIExpression()) #23, !dbg !10583
  call void @llvm.dbg.value(metadata i32* %2, metadata !10581, metadata !DIExpression()) #23, !dbg !10583
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10585, !srcloc !10586
  call void @llvm.dbg.value(metadata i32 %6, metadata !10582, metadata !DIExpression()) #23, !dbg !10583
  %7 = icmp eq i32 %6, 0, !dbg !10562
  br i1 %7, label %8, label %3, !dbg !10574, !llvm.loop !10587

8:                                                ; preds = %3
  ret void, !dbg !10588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10589 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10591, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i32 %1, metadata !10592, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i32 %2, metadata !10593, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i32 0, metadata !10594, metadata !DIExpression()), !dbg !10595
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10596
  %5 = load volatile i32, i32* %4, align 4, !dbg !10596
  %6 = and i32 %5, -5633, !dbg !10596
  %7 = or i32 %2, %1, !dbg !10596
  %8 = or i32 %7, %6, !dbg !10596
  store volatile i32 %8, i32* %4, align 4, !dbg !10596
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10597
  %10 = load volatile i32, i32* %9, align 4, !dbg !10597
  %11 = and i32 %10, -12289, !dbg !10597
  store volatile i32 %11, i32* %9, align 4, !dbg !10597
  ret void, !dbg !10598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10599 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10601, metadata !DIExpression()), !dbg !10602
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10603
  %3 = load volatile i32, i32* %2, align 4, !dbg !10603
  %4 = or i32 %3, 8, !dbg !10603
  store volatile i32 %4, i32* %2, align 4, !dbg !10603
  ret void, !dbg !10604
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10605 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10609, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10610, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata i32 0, metadata !10611, metadata !DIExpression()), !dbg !10612
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10613
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10613
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10614
  %5 = load i8, i8* %4, align 4, !dbg !10614
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10615
  ret i32 %6, !dbg !10616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.148(%struct.device* noundef %0) unnamed_addr #1 !dbg !10617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10619, metadata !DIExpression()), !dbg !10620
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10621
  ret i1 %2, !dbg !10622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !10623 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10625, metadata !DIExpression()), !dbg !10626
  tail call fastcc void @__NVIC_SetPriority.150() #24, !dbg !10627
  store i32 8399, i32* @last_load, align 4, !dbg !10628
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10629
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10630
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10631
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10632
  %3 = or i32 %2, 7, !dbg !10632
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10632
  ret i32 0, !dbg !10633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.150() unnamed_addr #14 !dbg !10634 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10636, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata i32 1, metadata !10637, metadata !DIExpression()), !dbg !10638
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10639
  ret void, !dbg !10642
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10643 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10645, metadata !DIExpression()), !dbg !10647
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10648
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10649
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10650
  %5 = add i32 %4, %3, !dbg !10650
  store i32 %5, i32* @cycle_count, align 4, !dbg !10650
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10651
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10652
  %7 = sub i32 %5, %6, !dbg !10655
  %8 = udiv i32 %7, 8400, !dbg !10656
  call void @llvm.dbg.value(metadata i32 %8, metadata !10646, metadata !DIExpression()), !dbg !10647
  %9 = mul nuw i32 %8, 8400, !dbg !10657
  %10 = add i32 %9, %6, !dbg !10658
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10658
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10659
  tail call void @z_arm_int_exit() #25, !dbg !10660
  ret void, !dbg !10661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10662 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10667
  call void @llvm.dbg.value(metadata i32 %1, metadata !10664, metadata !DIExpression()), !dbg !10668
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10669
  call void @llvm.dbg.value(metadata i32 %2, metadata !10665, metadata !DIExpression()), !dbg !10668
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10670
  call void @llvm.dbg.value(metadata i32 %3, metadata !10666, metadata !DIExpression()), !dbg !10668
  %4 = and i32 %2, 65536, !dbg !10671
  %5 = icmp ne i32 %4, 0, !dbg !10671
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10673
  %8 = load i32, i32* @last_load, align 4, !dbg !10668
  br i1 %7, label %9, label %13, !dbg !10673

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10674
  %11 = add i32 %10, %8, !dbg !10674
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10674
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10676
  br label %13, !dbg !10677

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10678
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10679
  %16 = add i32 %14, %15, !dbg !10680
  ret i32 %16, !dbg !10681
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10686, metadata !DIExpression()), !dbg !10699
  call void @llvm.dbg.value(metadata i1 %1, metadata !10687, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10699
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10700
  br i1 %4, label %5, label %8, !dbg !10700

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10702
  %7 = and i32 %6, -2, !dbg !10702
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10702
  store i32 -16777216, i32* @last_load, align 4, !dbg !10704
  br label %60, !dbg !10705

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10706
  call void @llvm.dbg.value(metadata i32 %9, metadata !10691, metadata !DIExpression()), !dbg !10699
  br i1 %3, label %18, label %10, !dbg !10707

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10707
  call void @llvm.dbg.value(metadata i32 undef, metadata !10686, metadata !DIExpression()), !dbg !10699
  %12 = icmp slt i32 %11, 1, !dbg !10708
  br i1 %12, label %18, label %13, !dbg !10708

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10708
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10708
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10708
  %17 = add nuw nsw i32 %16, 8399, !dbg !10708
  br label %18, !dbg !10708

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10686, metadata !DIExpression()), !dbg !10699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10709, metadata !DIExpression()) #23, !dbg !10716
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10718, !srcloc !10724
  call void @llvm.dbg.value(metadata i32 undef, metadata !10721, metadata !DIExpression()) #23, !dbg !10725
  call void @llvm.dbg.value(metadata i32 undef, metadata !10722, metadata !DIExpression()) #23, !dbg !10725
  call void @llvm.dbg.value(metadata i32 undef, metadata !10715, metadata !DIExpression()) #23, !dbg !10716
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10726
  br i1 %21, label %23, label %22, !dbg !10729

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10730
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.154, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10730
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10730
  unreachable, !dbg !10730

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10718
  call void @llvm.dbg.value(metadata i32 %24, metadata !10721, metadata !DIExpression()) #23, !dbg !10725
  call void @llvm.dbg.value(metadata i32 %24, metadata !10715, metadata !DIExpression()) #23, !dbg !10716
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10732
  call void @llvm.dbg.value(metadata i32 %24, metadata !10692, metadata !DIExpression()), !dbg !10699
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10733
  call void @llvm.dbg.value(metadata i32 %25, metadata !10697, metadata !DIExpression()), !dbg !10699
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10734
  call void @llvm.dbg.value(metadata i32 %26, metadata !10689, metadata !DIExpression()), !dbg !10699
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10735
  %28 = add i32 %27, %25, !dbg !10735
  store i32 %28, i32* @cycle_count, align 4, !dbg !10735
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10736
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10737
  %30 = sub i32 %28, %29, !dbg !10738
  call void @llvm.dbg.value(metadata i32 %30, metadata !10698, metadata !DIExpression()), !dbg !10699
  %31 = icmp slt i32 %30, 0, !dbg !10739
  br i1 %31, label %41, label %32, !dbg !10741

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10688, metadata !DIExpression()), !dbg !10699
  call void @llvm.dbg.value(metadata i32 undef, metadata !10688, metadata !DIExpression()), !dbg !10699
  %33 = add nuw i32 %19, %30, !dbg !10742
  %34 = urem i32 %33, 8400, !dbg !10744
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10699
  %35 = sub nuw nsw i32 %19, %34, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %35, metadata !10688, metadata !DIExpression()), !dbg !10699
  %36 = icmp ugt i32 %35, 1024, !dbg !10746
  br i1 %36, label %37, label %39, !dbg !10746

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10688, metadata !DIExpression()), !dbg !10699
  %38 = icmp ugt i32 %35, 16766400, !dbg !10747
  br i1 %38, label %41, label %39, !dbg !10749

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10750
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10751
  call void @llvm.dbg.value(metadata i32 %43, metadata !10690, metadata !DIExpression()), !dbg !10699
  %44 = add nsw i32 %42, -1, !dbg !10752
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10753
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10754
  %45 = icmp ult i32 %26, %43, !dbg !10755
  br i1 %45, label %46, label %51, !dbg !10757

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10758
  %48 = add i32 %26, %9, !dbg !10760
  %49 = sub i32 %48, %43, !dbg !10761
  %50 = add i32 %49, %47, !dbg !10758
  br label %55, !dbg !10762

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10763
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10765
  %54 = add i32 %52, %53, !dbg !10765
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10766
  store i32 %56, i32* @cycle_count, align 4, !dbg !10766
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10773
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10772, metadata !DIExpression()) #23, !dbg !10773
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10775
  br i1 %57, label %59, label %58, !dbg !10778

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10779
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10779
  unreachable, !dbg !10779

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10767, metadata !DIExpression()) #23, !dbg !10773
  call void @llvm.dbg.value(metadata i32 %24, metadata !10781, metadata !DIExpression()) #23, !dbg !10784
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10786, !srcloc !10787
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10789 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10709, metadata !DIExpression()) #23, !dbg !10793
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10795, !srcloc !10724
  call void @llvm.dbg.value(metadata i32 undef, metadata !10721, metadata !DIExpression()) #23, !dbg !10797
  call void @llvm.dbg.value(metadata i32 undef, metadata !10722, metadata !DIExpression()) #23, !dbg !10797
  call void @llvm.dbg.value(metadata i32 undef, metadata !10715, metadata !DIExpression()) #23, !dbg !10793
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10798
  br i1 %2, label %4, label %3, !dbg !10799

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.154, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10800
  unreachable, !dbg !10800

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10721, metadata !DIExpression()) #23, !dbg !10797
  call void @llvm.dbg.value(metadata i32 undef, metadata !10715, metadata !DIExpression()) #23, !dbg !10793
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10801
  call void @llvm.dbg.value(metadata i32 undef, metadata !10791, metadata !DIExpression()), !dbg !10802
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10803
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10804
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10805
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10792, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10802
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10772, metadata !DIExpression()) #23, !dbg !10806
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10808
  br i1 %8, label %10, label %9, !dbg !10809

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10810
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10810
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10810
  unreachable, !dbg !10810

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10811
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10792, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10802
  %12 = sub i32 %11, %7, !dbg !10812
  call void @llvm.dbg.value(metadata i32 %12, metadata !10792, metadata !DIExpression()), !dbg !10802
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10795
  call void @llvm.dbg.value(metadata i32 %13, metadata !10721, metadata !DIExpression()) #23, !dbg !10797
  call void @llvm.dbg.value(metadata i32 %13, metadata !10715, metadata !DIExpression()) #23, !dbg !10793
  call void @llvm.dbg.value(metadata i32 %13, metadata !10791, metadata !DIExpression()), !dbg !10802
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10806
  call void @llvm.dbg.value(metadata i32 undef, metadata !10781, metadata !DIExpression()) #23, !dbg !10813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10815, !srcloc !10787
  %14 = udiv i32 %12, 8400, !dbg !10816
  ret i32 %14, !dbg !10817
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10818 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10709, metadata !DIExpression()) #23, !dbg !10822
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10824, !srcloc !10724
  call void @llvm.dbg.value(metadata i32 undef, metadata !10721, metadata !DIExpression()) #23, !dbg !10826
  call void @llvm.dbg.value(metadata i32 undef, metadata !10722, metadata !DIExpression()) #23, !dbg !10826
  call void @llvm.dbg.value(metadata i32 undef, metadata !10715, metadata !DIExpression()) #23, !dbg !10822
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10827
  br i1 %2, label %4, label %3, !dbg !10828

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10829
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.154, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10829
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10829
  unreachable, !dbg !10829

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10721, metadata !DIExpression()) #23, !dbg !10826
  call void @llvm.dbg.value(metadata i32 undef, metadata !10715, metadata !DIExpression()) #23, !dbg !10822
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10830
  call void @llvm.dbg.value(metadata i32 undef, metadata !10820, metadata !DIExpression()), !dbg !10831
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10832
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10833
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10821, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10831
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10772, metadata !DIExpression()) #23, !dbg !10834
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10836
  br i1 %7, label %9, label %8, !dbg !10837

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10838
  unreachable, !dbg !10838

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10839
  call void @llvm.dbg.value(metadata i32 %10, metadata !10821, metadata !DIExpression()), !dbg !10831
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10824
  call void @llvm.dbg.value(metadata i32 %11, metadata !10721, metadata !DIExpression()) #23, !dbg !10826
  call void @llvm.dbg.value(metadata i32 %11, metadata !10715, metadata !DIExpression()) #23, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %11, metadata !10820, metadata !DIExpression()), !dbg !10831
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10834
  call void @llvm.dbg.value(metadata i32 undef, metadata !10781, metadata !DIExpression()) #23, !dbg !10840
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10842, !srcloc !10787
  ret i32 %10, !dbg !10843
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10844 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10845
  %2 = icmp eq i32 %1, -16777216, !dbg !10847
  br i1 %2, label %3, label %6, !dbg !10848

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10849
  %5 = or i32 %4, 1, !dbg !10849
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10849
  br label %6, !dbg !10851

6:                                                ; preds = %3, %0
  ret void, !dbg !10852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10853 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10854
  %2 = and i32 %1, -2, !dbg !10854
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10854
  ret void, !dbg !10855
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10856 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10882, metadata !DIExpression()), !dbg !10885
  call void @llvm.dbg.value(metadata i8 %1, metadata !10883, metadata !DIExpression()), !dbg !10885
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10884, metadata !DIExpression()), !dbg !10885
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10886
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10886
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10885
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10887
  %8 = load i8, i8* %6, align 4, !dbg !10888
  %9 = zext i8 %8 to i32, !dbg !10889
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10889
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10890
  br i1 %11, label %18, label %24, !dbg !10891

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10885
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10887
  %14 = load i8, i8* %6, align 4, !dbg !10888
  %15 = zext i8 %14 to i32, !dbg !10889
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10889
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10890
  br i1 %17, label %18, label %24, !dbg !10891, !llvm.loop !10892

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10894
  %21 = load i8, i8* %20, align 1, !dbg !10894
  %22 = icmp eq i8 %21, %1, !dbg !10897
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10898
  br i1 %22, label %24, label %12, !dbg !10899

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10885
  ret i32 %25, !dbg !10900
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10901 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10912, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i8 %1, metadata !10913, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i32 %2, metadata !10914, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i32 0, metadata !10917, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i32 0, metadata !10918, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i8 0, metadata !10919, metadata !DIExpression()), !dbg !10929
  %4 = icmp eq i8 %1, 0, !dbg !10930
  br i1 %4, label %35, label %5, !dbg !10931

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10930
  br label %9, !dbg !10931

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10919, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata i32 %29, metadata !10917, metadata !DIExpression()), !dbg !10928
  %8 = icmp eq i32 %34, %6, !dbg !10930
  br i1 %8, label %35, label %9, !dbg !10931, !llvm.loop !10932

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10919, metadata !DIExpression()), !dbg !10929
  call void @llvm.dbg.value(metadata i32 %11, metadata !10917, metadata !DIExpression()), !dbg !10928
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10934
  %13 = load i32, i32* %12, align 4, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %13, metadata !10916, metadata !DIExpression()), !dbg !10928
  %14 = and i32 %13, 31, !dbg !10935
  %15 = icmp ult i32 %14, 16, !dbg !10936
  br i1 %15, label %16, label %20, !dbg !10937

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10938
  %18 = load i32, i32* %17, align 4, !dbg !10938
  %19 = or i32 %18, 32, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %19, metadata !10917, metadata !DIExpression()), !dbg !10928
  br label %28, !dbg !10941

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10942

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10943
  %23 = load i32, i32* %22, align 4, !dbg !10943
  call void @llvm.dbg.value(metadata i32 %23, metadata !10921, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10944
  %24 = lshr i32 %23, 7, !dbg !10945
  %25 = and i32 %24, 16, !dbg !10945
  %26 = or i32 %25, %23, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %26, metadata !10917, metadata !DIExpression()), !dbg !10928
  br label %28, !dbg !10946

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10928
  call void @llvm.dbg.value(metadata i32 %29, metadata !10917, metadata !DIExpression()), !dbg !10928
  %30 = lshr i32 %13, 5, !dbg !10947
  %31 = and i32 %30, 255, !dbg !10947
  call void @llvm.dbg.value(metadata i32 %31, metadata !10915, metadata !DIExpression()), !dbg !10928
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !10948
  call void @llvm.dbg.value(metadata i32 %32, metadata !10918, metadata !DIExpression()), !dbg !10928
  %33 = icmp slt i32 %32, 0, !dbg !10949
  %34 = add nuw nsw i32 %10, 1, !dbg !10951
  call void @llvm.dbg.value(metadata i32 %34, metadata !10919, metadata !DIExpression()), !dbg !10929
  br i1 %33, label %35, label %7, !dbg !10952

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10958, metadata !DIExpression()), !dbg !10962
  call void @llvm.dbg.value(metadata i32 %1, metadata !10959, metadata !DIExpression()), !dbg !10962
  call void @llvm.dbg.value(metadata i32 %2, metadata !10960, metadata !DIExpression()), !dbg !10962
  %4 = icmp ugt i32 %0, 175, !dbg !10963
  br i1 %4, label %16, label %5, !dbg !10965

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10966
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10967
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10967
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10961, metadata !DIExpression()), !dbg !10962
  %9 = add nsw i32 %6, -8, !dbg !10968
  %10 = icmp ult i32 %9, 3, !dbg !10968
  br i1 %10, label %16, label %11, !dbg !10970

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.161(%struct.device* noundef %8) #24, !dbg !10971
  br i1 %12, label %13, label %16, !dbg !10972

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10973
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !10974
  br label %16, !dbg !10975

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10962
  ret i32 %17, !dbg !10976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.161(%struct.device* noundef %0) unnamed_addr #1 !dbg !10977 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10981, metadata !DIExpression()), !dbg !10982
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10983, !srcloc !10985
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.162(%struct.device* noundef %0) #24, !dbg !10986
  ret i1 %2, !dbg !10987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.162(%struct.device* noundef %0) unnamed_addr #1 !dbg !10988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10990, metadata !DIExpression()), !dbg !10991
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10992
  ret i1 %2, !dbg !10993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !10994 {
  ret void, !dbg !10995
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !10996 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10998, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 0, metadata !10999, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 2, metadata !11000, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 0, metadata !11001, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 2, metadata !11002, metadata !DIExpression()), !dbg !11003
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11004
  %2 = and i32 %1, 12, !dbg !11005
  call void @llvm.dbg.value(metadata i32 %2, metadata !10998, metadata !DIExpression()), !dbg !11003
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11006

3:                                                ; preds = %0
  br label %21, !dbg !11007

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %5, metadata !11001, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11003
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11010
  %7 = and i32 %6, 63, !dbg !11011
  call void @llvm.dbg.value(metadata i32 %7, metadata !11002, metadata !DIExpression()), !dbg !11003
  %8 = and i32 %5, 4194304, !dbg !11012
  %9 = icmp eq i32 %8, 0, !dbg !11012
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !11014
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11014
  %13 = lshr i32 %12, 6, !dbg !11014
  %14 = and i32 %13, 511, !dbg !11014
  %15 = mul i32 %14, %11, !dbg !11014
  call void @llvm.dbg.value(metadata i32 %15, metadata !10999, metadata !DIExpression()), !dbg !11003
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11015
  %17 = lshr i32 %16, 15, !dbg !11016
  %18 = and i32 %17, 6, !dbg !11016
  %19 = add nuw nsw i32 %18, 2, !dbg !11016
  call void @llvm.dbg.value(metadata i32 %19, metadata !11000, metadata !DIExpression()), !dbg !11003
  %20 = udiv i32 %15, %19, !dbg !11017
  br label %21, !dbg !11018

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11019
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11020
  %24 = lshr i32 %23, 4, !dbg !11021
  %25 = and i32 %24, 15, !dbg !11021
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11022
  %27 = load i8, i8* %26, align 1, !dbg !11022
  %28 = zext i8 %27 to i32, !dbg !11022
  call void @llvm.dbg.value(metadata i32 %28, metadata !10998, metadata !DIExpression()), !dbg !11003
  %29 = lshr i32 %22, %28, !dbg !11023
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11023
  ret void, !dbg !11024
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11025 {
  ret i32 0, !dbg !11030
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11031 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11057, metadata !DIExpression()), !dbg !11068
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11069
  br i1 %3, label %311, label %4, !dbg !11071

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11072
  %6 = load i32, i32* %5, align 4, !dbg !11072
  %7 = and i32 %6, 1, !dbg !11074
  %8 = icmp eq i32 %7, 0, !dbg !11075
  br i1 %8, label %66, label %9, !dbg !11076

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11077
  %11 = and i32 %10, 12, !dbg !11077
  %12 = icmp eq i32 %11, 4, !dbg !11080
  br i1 %12, label %21, label %13, !dbg !11081

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11082
  %15 = and i32 %14, 12, !dbg !11082
  %16 = icmp eq i32 %15, 8, !dbg !11083
  br i1 %16, label %17, label %29, !dbg !11084

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11085
  %19 = and i32 %18, 4194304, !dbg !11086
  %20 = icmp eq i32 %19, 0, !dbg !11087
  br i1 %20, label %29, label %21, !dbg !11088

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11089
  %23 = and i32 %22, 131072, !dbg !11089
  %24 = icmp eq i32 %23, 0, !dbg !11089
  br i1 %24, label %66, label %25, !dbg !11092

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11093
  %27 = load i32, i32* %26, align 4, !dbg !11093
  %28 = icmp eq i32 %27, 0, !dbg !11094
  br i1 %28, label %311, label %66, !dbg !11095

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11096
  %31 = load i32, i32* %30, align 4, !dbg !11096
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11100

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11101
  %34 = or i32 %33, 65536, !dbg !11101
  br label %45, !dbg !11101

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11103
  %37 = or i32 %36, 262144, !dbg !11103
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11103
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11103
  %39 = or i32 %38, 65536, !dbg !11103
  br label %45, !dbg !11103

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11106
  %42 = and i32 %41, -65537, !dbg !11106
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11106
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11106
  %44 = and i32 %43, -262145, !dbg !11106
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11108
  %47 = load i32, i32* %30, align 4, !dbg !11109
  %48 = icmp eq i32 %47, 0, !dbg !11111
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11112
  call void @llvm.dbg.value(metadata i32 %49, metadata !11058, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i32 %49, metadata !11058, metadata !DIExpression()), !dbg !11068
  br i1 %48, label %58, label %50, !dbg !11113

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11114
  %52 = and i32 %51, 131072, !dbg !11116
  %53 = icmp eq i32 %52, 0, !dbg !11116
  br i1 %53, label %54, label %66, !dbg !11117

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11118
  %56 = sub i32 %55, %49, !dbg !11121
  %57 = icmp ugt i32 %56, 100, !dbg !11122
  br i1 %57, label %311, label %50, !dbg !11123, !llvm.loop !11124

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11126
  %60 = and i32 %59, 131072, !dbg !11126
  %61 = icmp eq i32 %60, 0, !dbg !11126
  br i1 %61, label %66, label %62, !dbg !11128

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11129
  %64 = sub i32 %63, %49, !dbg !11132
  %65 = icmp ugt i32 %64, 100, !dbg !11133
  br i1 %65, label %311, label %58, !dbg !11134, !llvm.loop !11135

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11137
  %68 = and i32 %67, 2, !dbg !11139
  %69 = icmp eq i32 %68, 0, !dbg !11140
  br i1 %69, label %121, label %70, !dbg !11141

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11142
  %72 = and i32 %71, 12, !dbg !11142
  %73 = icmp eq i32 %72, 0, !dbg !11145
  br i1 %73, label %82, label %74, !dbg !11146

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11147
  %76 = and i32 %75, 12, !dbg !11147
  %77 = icmp eq i32 %76, 8, !dbg !11148
  br i1 %77, label %78, label %90, !dbg !11149

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11150
  %80 = and i32 %79, 4194304, !dbg !11151
  %81 = icmp eq i32 %80, 0, !dbg !11152
  br i1 %81, label %82, label %90, !dbg !11153

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11154
  %84 = and i32 %83, 2, !dbg !11154
  %85 = icmp eq i32 %84, 0, !dbg !11154
  br i1 %85, label %114, label %86, !dbg !11157

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11158
  %88 = load i32, i32* %87, align 4, !dbg !11158
  %89 = icmp eq i32 %88, 1, !dbg !11159
  br i1 %89, label %114, label %311, !dbg !11160

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11161
  %92 = load i32, i32* %91, align 4, !dbg !11161
  %93 = icmp eq i32 %92, 0, !dbg !11164
  br i1 %93, label %104, label %94, !dbg !11165

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11166
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !11168
  call void @llvm.dbg.value(metadata i32 %95, metadata !11058, metadata !DIExpression()), !dbg !11068
  br label %96, !dbg !11169

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11170
  %98 = and i32 %97, 2, !dbg !11171
  %99 = icmp eq i32 %98, 0, !dbg !11171
  br i1 %99, label %100, label %114, !dbg !11169

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !11172
  %102 = sub i32 %101, %95, !dbg !11175
  %103 = icmp ugt i32 %102, 2, !dbg !11176
  br i1 %103, label %311, label %96, !dbg !11177, !llvm.loop !11178

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11180
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !11182
  call void @llvm.dbg.value(metadata i32 %105, metadata !11058, metadata !DIExpression()), !dbg !11068
  br label %106, !dbg !11183

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11184
  %108 = and i32 %107, 2, !dbg !11184
  %109 = icmp eq i32 %108, 0, !dbg !11184
  br i1 %109, label %121, label %110, !dbg !11183

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !11185
  %112 = sub i32 %111, %105, !dbg !11188
  %113 = icmp ugt i32 %112, 2, !dbg !11189
  br i1 %113, label %311, label %106, !dbg !11190, !llvm.loop !11191

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11193
  %116 = and i32 %115, -249, !dbg !11193
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11193
  %118 = load i32, i32* %117, align 4, !dbg !11193
  %119 = shl i32 %118, 3, !dbg !11193
  %120 = or i32 %119, %116, !dbg !11193
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11193
  br label %121, !dbg !11194

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11194
  %123 = and i32 %122, 8, !dbg !11196
  %124 = icmp eq i32 %123, 0, !dbg !11197
  br i1 %124, label %149, label %125, !dbg !11198

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11199
  %127 = load i32, i32* %126, align 4, !dbg !11199
  %128 = icmp eq i32 %127, 0, !dbg !11202
  br i1 %128, label %139, label %129, !dbg !11203

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11204
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !11206
  call void @llvm.dbg.value(metadata i32 %130, metadata !11058, metadata !DIExpression()), !dbg !11068
  br label %131, !dbg !11207

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11208
  %133 = and i32 %132, 2, !dbg !11209
  %134 = icmp eq i32 %133, 0, !dbg !11209
  br i1 %134, label %135, label %149, !dbg !11207

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !11210
  %137 = sub i32 %136, %130, !dbg !11213
  %138 = icmp ugt i32 %137, 2, !dbg !11214
  br i1 %138, label %311, label %131, !dbg !11215, !llvm.loop !11216

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11218
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !11220
  call void @llvm.dbg.value(metadata i32 %140, metadata !11058, metadata !DIExpression()), !dbg !11068
  br label %141, !dbg !11221

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11222
  %143 = and i32 %142, 2, !dbg !11222
  %144 = icmp eq i32 %143, 0, !dbg !11222
  br i1 %144, label %149, label %145, !dbg !11221

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !11223
  %147 = sub i32 %146, %140, !dbg !11226
  %148 = icmp ugt i32 %147, 2, !dbg !11227
  br i1 %148, label %311, label %141, !dbg !11228, !llvm.loop !11229

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11231
  %151 = and i32 %150, 4, !dbg !11232
  %152 = icmp eq i32 %151, 0, !dbg !11233
  br i1 %152, label %221, label %153, !dbg !11234

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11060, metadata !DIExpression()), !dbg !11235
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11236
  %155 = and i32 %154, 268435456, !dbg !11236
  %156 = icmp eq i32 %155, 0, !dbg !11236
  br i1 %156, label %157, label %164, !dbg !11237

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11238
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11238
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11064, metadata !DIExpression()), !dbg !11238
  store volatile i32 0, i32* %2, align 4, !dbg !11238
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11238
  %160 = or i32 %159, 268435456, !dbg !11238
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11238
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11238
  %162 = and i32 %161, 268435456, !dbg !11238
  store volatile i32 %162, i32* %2, align 4, !dbg !11238
  %163 = load volatile i32, i32* %2, align 4, !dbg !11238
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11239
  call void @llvm.dbg.value(metadata i32 1, metadata !11060, metadata !DIExpression()), !dbg !11235
  br label %164, !dbg !11240

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11060, metadata !DIExpression()), !dbg !11235
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11241
  %166 = and i32 %165, 256, !dbg !11241
  %167 = icmp eq i32 %166, 0, !dbg !11241
  br i1 %167, label %168, label %180, !dbg !11243

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11244
  %170 = or i32 %169, 256, !dbg !11244
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11244
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !11246
  call void @llvm.dbg.value(metadata i32 %171, metadata !11058, metadata !DIExpression()), !dbg !11068
  br label %172, !dbg !11247

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11248
  %174 = and i32 %173, 256, !dbg !11248
  %175 = icmp eq i32 %174, 0, !dbg !11248
  br i1 %175, label %176, label %180, !dbg !11247

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !11249
  %178 = sub i32 %177, %171, !dbg !11252
  %179 = icmp ugt i32 %178, 2, !dbg !11253
  br i1 %179, label %311, label %172, !dbg !11254, !llvm.loop !11255

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11257
  %182 = load i32, i32* %181, align 4, !dbg !11257
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11260

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11261
  %185 = or i32 %184, 1, !dbg !11261
  br label %196, !dbg !11261

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11263
  %188 = or i32 %187, 4, !dbg !11263
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11263
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11263
  %190 = or i32 %189, 1, !dbg !11263
  br label %196, !dbg !11263

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11266
  %193 = and i32 %192, -2, !dbg !11266
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11266
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11266
  %195 = and i32 %194, -5, !dbg !11266
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11268
  %198 = load i32, i32* %181, align 4, !dbg !11269
  %199 = icmp eq i32 %198, 0, !dbg !11271
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !11272
  call void @llvm.dbg.value(metadata i32 %200, metadata !11058, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i32 %200, metadata !11058, metadata !DIExpression()), !dbg !11068
  br i1 %199, label %209, label %201, !dbg !11273

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11274
  %203 = and i32 %202, 2, !dbg !11276
  %204 = icmp eq i32 %203, 0, !dbg !11276
  br i1 %204, label %205, label %217, !dbg !11277

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !11278
  %207 = sub i32 %206, %200, !dbg !11281
  %208 = icmp ugt i32 %207, 5000, !dbg !11282
  br i1 %208, label %311, label %201, !dbg !11283, !llvm.loop !11284

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11286
  %211 = and i32 %210, 2, !dbg !11286
  %212 = icmp eq i32 %211, 0, !dbg !11286
  br i1 %212, label %217, label %213, !dbg !11288

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !11289
  %215 = sub i32 %214, %200, !dbg !11292
  %216 = icmp ugt i32 %215, 5000, !dbg !11293
  br i1 %216, label %311, label %209, !dbg !11294, !llvm.loop !11295

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11297

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11298
  %220 = and i32 %219, -268435457, !dbg !11298
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11298
  br label %221, !dbg !11301

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11302
  %223 = load i32, i32* %222, align 4, !dbg !11302
  %224 = icmp eq i32 %223, 0, !dbg !11304
  br i1 %224, label %310, label %225, !dbg !11305

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11306
  %227 = and i32 %226, 12, !dbg !11306
  %228 = icmp eq i32 %227, 8, !dbg !11309
  br i1 %228, label %277, label %229, !dbg !11310

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11311
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11314
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !11314
  call void @llvm.dbg.value(metadata i32 %231, metadata !11058, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.value(metadata i32 %231, metadata !11058, metadata !DIExpression()), !dbg !11068
  br i1 %230, label %232, label %269, !dbg !11315

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11316
  %234 = and i32 %233, 33554432, !dbg !11316
  %235 = icmp eq i32 %234, 0, !dbg !11316
  br i1 %235, label %240, label %236, !dbg !11318

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !11319
  %238 = sub i32 %237, %231, !dbg !11322
  %239 = icmp ugt i32 %238, 2, !dbg !11323
  br i1 %239, label %311, label %232, !dbg !11324, !llvm.loop !11325

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11327
  %242 = load i32, i32* %241, align 4, !dbg !11327
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11327
  %244 = load i32, i32* %243, align 4, !dbg !11327
  %245 = or i32 %244, %242, !dbg !11327
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11327
  %247 = load i32, i32* %246, align 4, !dbg !11327
  %248 = shl i32 %247, 6, !dbg !11327
  %249 = or i32 %245, %248, !dbg !11327
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11327
  %251 = load i32, i32* %250, align 4, !dbg !11327
  %252 = shl i32 %251, 15, !dbg !11327
  %253 = add i32 %252, -65536, !dbg !11327
  %254 = and i32 %253, -65536, !dbg !11327
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11327
  %256 = load i32, i32* %255, align 4, !dbg !11327
  %257 = shl i32 %256, 24, !dbg !11327
  %258 = or i32 %249, %257, !dbg !11327
  %259 = or i32 %258, %254, !dbg !11327
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11327
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11328
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !11329
  call void @llvm.dbg.value(metadata i32 %260, metadata !11058, metadata !DIExpression()), !dbg !11068
  br label %261, !dbg !11330

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11331
  %263 = and i32 %262, 33554432, !dbg !11332
  %264 = icmp eq i32 %263, 0, !dbg !11332
  br i1 %264, label %265, label %310, !dbg !11330

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !11333
  %267 = sub i32 %266, %260, !dbg !11336
  %268 = icmp ugt i32 %267, 2, !dbg !11337
  br i1 %268, label %311, label %261, !dbg !11338, !llvm.loop !11339

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11341
  %271 = and i32 %270, 33554432, !dbg !11341
  %272 = icmp eq i32 %271, 0, !dbg !11341
  br i1 %272, label %310, label %273, !dbg !11343

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !11344
  %275 = sub i32 %274, %231, !dbg !11347
  %276 = icmp ugt i32 %275, 2, !dbg !11348
  br i1 %276, label %311, label %269, !dbg !11349, !llvm.loop !11350

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11352
  br i1 %278, label %311, label %279, !dbg !11355

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11356
  call void @llvm.dbg.value(metadata i32 %280, metadata !11059, metadata !DIExpression()), !dbg !11068
  %281 = and i32 %280, 4194304, !dbg !11358
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11360
  %283 = load i32, i32* %282, align 4, !dbg !11360
  %284 = icmp eq i32 %281, %283, !dbg !11361
  br i1 %284, label %285, label %311, !dbg !11362

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11363
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11364
  %288 = load i32, i32* %287, align 4, !dbg !11364
  %289 = icmp eq i32 %286, %288, !dbg !11365
  br i1 %289, label %290, label %311, !dbg !11366

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11367
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11368
  %293 = load i32, i32* %292, align 4, !dbg !11368
  %294 = shl i32 %293, 6, !dbg !11369
  %295 = icmp eq i32 %291, %294, !dbg !11370
  br i1 %295, label %296, label %311, !dbg !11371

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11372
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11373
  %299 = load i32, i32* %298, align 4, !dbg !11373
  %300 = shl i32 %299, 15, !dbg !11374
  %301 = add i32 %300, -65536, !dbg !11374
  %302 = and i32 %301, -65536, !dbg !11374
  %303 = icmp eq i32 %297, %302, !dbg !11375
  br i1 %303, label %304, label %311, !dbg !11376

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11377
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11378
  %307 = load i32, i32* %306, align 4, !dbg !11378
  %308 = shl i32 %307, 24, !dbg !11379
  %309 = icmp eq i32 %305, %308, !dbg !11380
  br i1 %309, label %310, label %311, !dbg !11381

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11382

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11068
  ret i32 %312, !dbg !11383
}

; Function Attrs: optsize
declare !dbg !11384 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11386 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11399, metadata !DIExpression()), !dbg !11402
  call void @llvm.dbg.value(metadata i32 %1, metadata !11400, metadata !DIExpression()), !dbg !11402
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11403
  br i1 %3, label %115, label %4, !dbg !11405

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11406
  %6 = and i32 %5, 7, !dbg !11406
  %7 = icmp ult i32 %6, %1, !dbg !11408
  br i1 %7, label %8, label %13, !dbg !11409

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11410
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11410
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11412
  %11 = and i32 %10, 7, !dbg !11412
  %12 = icmp eq i32 %11, %1, !dbg !11414
  br i1 %12, label %13, label %115, !dbg !11415

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11416
  %15 = load i32, i32* %14, align 4, !dbg !11416
  %16 = and i32 %15, 2, !dbg !11418
  %17 = icmp eq i32 %16, 0, !dbg !11419
  br i1 %17, label %39, label %18, !dbg !11420

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11421
  %20 = icmp eq i32 %19, 0, !dbg !11424
  br i1 %20, label %25, label %21, !dbg !11425

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11426
  %23 = or i32 %22, 7168, !dbg !11426
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11426
  %24 = load i32, i32* %14, align 4, !dbg !11428
  br label %25, !dbg !11430

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11428
  %27 = and i32 %26, 8, !dbg !11431
  %28 = icmp eq i32 %27, 0, !dbg !11432
  br i1 %28, label %32, label %29, !dbg !11433

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11434
  %31 = or i32 %30, 57344, !dbg !11434
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11434
  br label %32, !dbg !11436

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11437
  %34 = and i32 %33, -241, !dbg !11437
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11437
  %36 = load i32, i32* %35, align 4, !dbg !11437
  %37 = or i32 %34, %36, !dbg !11437
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11437
  %38 = load i32, i32* %14, align 4, !dbg !11438
  br label %39, !dbg !11440

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11438
  %41 = and i32 %40, 1, !dbg !11441
  %42 = icmp eq i32 %41, 0, !dbg !11442
  br i1 %42, label %73, label %43, !dbg !11443

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11444
  %45 = load i32, i32* %44, align 4, !dbg !11444
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11447

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11448
  %48 = and i32 %47, 131072, !dbg !11451
  %49 = icmp eq i32 %48, 0, !dbg !11451
  br i1 %49, label %115, label %58, !dbg !11452

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11453
  %52 = and i32 %51, 33554432, !dbg !11457
  %53 = icmp eq i32 %52, 0, !dbg !11457
  br i1 %53, label %115, label %58, !dbg !11458

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11459
  %56 = and i32 %55, 2, !dbg !11462
  %57 = icmp eq i32 %56, 0, !dbg !11462
  br i1 %57, label %115, label %58, !dbg !11463

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11464
  %60 = and i32 %59, -4, !dbg !11464
  %61 = or i32 %60, %45, !dbg !11464
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11464
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !11465
  call void @llvm.dbg.value(metadata i32 %62, metadata !11401, metadata !DIExpression()), !dbg !11402
  br label %63, !dbg !11466

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11467
  %65 = and i32 %64, 12, !dbg !11467
  %66 = load i32, i32* %44, align 4, !dbg !11468
  %67 = shl i32 %66, 2, !dbg !11469
  %68 = icmp eq i32 %65, %67, !dbg !11470
  br i1 %68, label %73, label %69, !dbg !11466

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !11471
  %71 = sub i32 %70, %62, !dbg !11474
  %72 = icmp ugt i32 %71, 5000, !dbg !11475
  br i1 %72, label %115, label %63, !dbg !11476, !llvm.loop !11477

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11479
  %75 = and i32 %74, 7, !dbg !11479
  %76 = icmp ugt i32 %75, %1, !dbg !11481
  br i1 %76, label %77, label %82, !dbg !11482

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11483
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11483
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11485
  %80 = and i32 %79, 7, !dbg !11485
  %81 = icmp eq i32 %80, %1, !dbg !11487
  br i1 %81, label %82, label %115, !dbg !11488

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11489
  %84 = and i32 %83, 4, !dbg !11491
  %85 = icmp eq i32 %84, 0, !dbg !11492
  br i1 %85, label %93, label %86, !dbg !11493

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11494
  %88 = and i32 %87, -7169, !dbg !11494
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11494
  %90 = load i32, i32* %89, align 4, !dbg !11494
  %91 = or i32 %88, %90, !dbg !11494
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11494
  %92 = load i32, i32* %14, align 4, !dbg !11496
  br label %93, !dbg !11498

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11496
  %95 = and i32 %94, 8, !dbg !11499
  %96 = icmp eq i32 %95, 0, !dbg !11500
  br i1 %96, label %104, label %97, !dbg !11501

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11502
  %99 = and i32 %98, -57345, !dbg !11502
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11502
  %101 = load i32, i32* %100, align 4, !dbg !11502
  %102 = shl i32 %101, 3, !dbg !11502
  %103 = or i32 %102, %99, !dbg !11502
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11502
  br label %104, !dbg !11504

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !11505
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11506
  %107 = lshr i32 %106, 4, !dbg !11507
  %108 = and i32 %107, 15, !dbg !11507
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11508
  %110 = load i8, i8* %109, align 1, !dbg !11508
  %111 = zext i8 %110 to i32, !dbg !11508
  %112 = lshr i32 %105, %111, !dbg !11509
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11510
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11511
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11512
  br label %115, !dbg !11513

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11402
  ret i32 %116, !dbg !11514
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11515 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11517, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i32 0, metadata !11518, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i32 0, metadata !11519, metadata !DIExpression()), !dbg !11521
  call void @llvm.dbg.value(metadata i32 0, metadata !11520, metadata !DIExpression()), !dbg !11521
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11522
  %2 = and i32 %1, 12, !dbg !11523
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11524

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11520, metadata !DIExpression()), !dbg !11521
  br label %29, !dbg !11525

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11528
  %6 = and i32 %5, 63, !dbg !11530
  call void @llvm.dbg.value(metadata i32 %6, metadata !11517, metadata !DIExpression()), !dbg !11521
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11531
  %8 = and i32 %7, 4194304, !dbg !11531
  %9 = icmp eq i32 %8, 0, !dbg !11533
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11534
  %11 = lshr i32 %10, 6, !dbg !11534
  %12 = and i32 %11, 511, !dbg !11534
  br i1 %9, label %16, label %13, !dbg !11535

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !11536
  %15 = udiv i32 %14, %6, !dbg !11538
  call void @llvm.dbg.value(metadata i32 %15, metadata !11518, metadata !DIExpression()), !dbg !11521
  br label %22, !dbg !11539

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !11540
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !11542
  %19 = zext i32 %6 to i64, !dbg !11543
  %20 = udiv i64 %18, %19, !dbg !11544
  %21 = trunc i64 %20 to i32, !dbg !11545
  call void @llvm.dbg.value(metadata i32 %21, metadata !11518, metadata !DIExpression()), !dbg !11521
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !11534
  call void @llvm.dbg.value(metadata i32 %23, metadata !11518, metadata !DIExpression()), !dbg !11521
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11546
  %25 = lshr i32 %24, 15, !dbg !11547
  %26 = and i32 %25, 6, !dbg !11547
  %27 = add nuw nsw i32 %26, 2, !dbg !11547
  call void @llvm.dbg.value(metadata i32 %27, metadata !11519, metadata !DIExpression()), !dbg !11521
  %28 = udiv i32 %23, %27, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %28, metadata !11520, metadata !DIExpression()), !dbg !11521
  br label %29, !dbg !11549

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !11550
  call void @llvm.dbg.value(metadata i32 %30, metadata !11520, metadata !DIExpression()), !dbg !11521
  ret i32 %30, !dbg !11551
}

; Function Attrs: optsize
declare !dbg !11552 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11555 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11559, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.value(metadata i32 %1, metadata !11560, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.value(metadata i32 %2, metadata !11561, metadata !DIExpression()), !dbg !11579
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11580
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11580
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11562, metadata !DIExpression()), !dbg !11581
  %8 = icmp eq i32 %0, 0, !dbg !11582
  br i1 %8, label %9, label %23, !dbg !11583

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11584
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11584
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11572, metadata !DIExpression()), !dbg !11584
  store volatile i32 0, i32* %5, align 4, !dbg !11584
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11584
  %12 = or i32 %11, 1, !dbg !11584
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11584
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11584
  %14 = and i32 %13, 1, !dbg !11584
  store volatile i32 %14, i32* %5, align 4, !dbg !11584
  %15 = load volatile i32, i32* %5, align 4, !dbg !11584
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11585
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11586
  store i32 256, i32* %16, align 4, !dbg !11587
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11588
  store i32 2, i32* %17, align 4, !dbg !11589
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11590
  store i32 3, i32* %18, align 4, !dbg !11591
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11592
  store i32 0, i32* %19, align 4, !dbg !11593
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11594
  store i32 0, i32* %20, align 4, !dbg !11595
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11596
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11597
  %22 = and i32 %21, -123731969, !dbg !11597
  br label %38, !dbg !11598

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11599
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11599
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11576, metadata !DIExpression()), !dbg !11599
  store volatile i32 0, i32* %6, align 4, !dbg !11599
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11599
  %26 = or i32 %25, 4, !dbg !11599
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11599
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11599
  %28 = and i32 %27, 4, !dbg !11599
  store volatile i32 %28, i32* %6, align 4, !dbg !11599
  %29 = load volatile i32, i32* %6, align 4, !dbg !11599
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11600
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11601
  store i32 512, i32* %30, align 4, !dbg !11602
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11603
  store i32 2, i32* %31, align 4, !dbg !11604
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11605
  store i32 3, i32* %32, align 4, !dbg !11606
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11607
  store i32 0, i32* %33, align 4, !dbg !11608
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11609
  store i32 0, i32* %34, align 4, !dbg !11610
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11611
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11612
  %36 = and i32 %35, 134217727, !dbg !11612
  %37 = shl i32 %2, 3, !dbg !11612
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11613
  %42 = or i32 %41, %40, !dbg !11613
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11613
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11614
  ret void, !dbg !11614
}

; Function Attrs: optsize
declare !dbg !11615 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !11619 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11620
  ret void, !dbg !11621
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !11622 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11623
  ret void, !dbg !11624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !11625 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11626
  ret i32 %1, !dbg !11627
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !11628 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11629
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11630
  %3 = lshr i32 %2, 10, !dbg !11631
  %4 = and i32 %3, 7, !dbg !11631
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11632
  %6 = load i8, i8* %5, align 1, !dbg !11632
  %7 = zext i8 %6 to i32, !dbg !11632
  %8 = lshr i32 %1, %7, !dbg !11633
  ret i32 %8, !dbg !11634
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !11635 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11636
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11637
  %3 = lshr i32 %2, 13, !dbg !11638
  %4 = and i32 %3, 7, !dbg !11638
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11639
  %6 = load i8, i8* %5, align 1, !dbg !11639
  %7 = zext i8 %6 to i32, !dbg !11639
  %8 = lshr i32 %1, %7, !dbg !11640
  ret i32 %8, !dbg !11641
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11642 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11646, metadata !DIExpression()), !dbg !11647
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11648
  store i32 15, i32* %2, align 4, !dbg !11649
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11650
  %4 = and i32 %3, 262144, !dbg !11652
  %5 = icmp eq i32 %4, 0, !dbg !11653
  br i1 %5, label %8, label %6, !dbg !11654

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11655
  store i32 327680, i32* %7, align 4, !dbg !11657
  br label %15, !dbg !11658

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11659
  %10 = and i32 %9, 65536, !dbg !11661
  %11 = icmp eq i32 %10, 0, !dbg !11662
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11663
  br i1 %11, label %14, label %13, !dbg !11664

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11665
  br label %15, !dbg !11667

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11668
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11670
  %17 = and i32 %16, 1, !dbg !11672
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11673
  store i32 %17, i32* %18, align 4, !dbg !11675
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11676
  %20 = lshr i32 %19, 3, !dbg !11677
  %21 = and i32 %20, 31, !dbg !11677
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11678
  store i32 %21, i32* %22, align 4, !dbg !11679
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11680
  %24 = and i32 %23, 4, !dbg !11682
  %25 = icmp eq i32 %24, 0, !dbg !11683
  br i1 %25, label %28, label %26, !dbg !11684

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11685
  store i32 5, i32* %27, align 4, !dbg !11687
  br label %35, !dbg !11688

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11689
  %30 = and i32 %29, 1, !dbg !11691
  %31 = icmp eq i32 %30, 0, !dbg !11692
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11693
  br i1 %31, label %34, label %33, !dbg !11694

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11695
  br label %35, !dbg !11697

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11698
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11700
  %37 = and i32 %36, 1, !dbg !11702
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11703
  store i32 %37, i32* %38, align 4, !dbg !11705
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11706
  %40 = and i32 %39, 16777216, !dbg !11708
  %41 = icmp eq i32 %40, 0, !dbg !11709
  %42 = select i1 %41, i32 1, i32 2, !dbg !11710
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11711
  store i32 %42, i32* %43, align 4, !dbg !11713
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11714
  %45 = and i32 %44, 4194304, !dbg !11715
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11716
  store i32 %45, i32* %46, align 4, !dbg !11717
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11718
  %48 = and i32 %47, 63, !dbg !11719
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11720
  store i32 %48, i32* %49, align 4, !dbg !11721
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11722
  %51 = lshr i32 %50, 6, !dbg !11723
  %52 = and i32 %51, 511, !dbg !11723
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11724
  store i32 %52, i32* %53, align 4, !dbg !11725
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11726
  %55 = shl i32 %54, 1, !dbg !11727
  %56 = and i32 %55, 393216, !dbg !11727
  %57 = add nuw nsw i32 %56, 131072, !dbg !11727
  %58 = lshr exact i32 %57, 16, !dbg !11728
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11729
  store i32 %58, i32* %59, align 4, !dbg !11730
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11731
  %61 = lshr i32 %60, 24, !dbg !11732
  %62 = and i32 %61, 15, !dbg !11732
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11733
  store i32 %62, i32* %63, align 4, !dbg !11734
  ret void, !dbg !11735
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !11736 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11740, metadata !DIExpression()), !dbg !11742
  call void @llvm.dbg.value(metadata i32* %1, metadata !11741, metadata !DIExpression()), !dbg !11742
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11743
  store i32 15, i32* %3, align 4, !dbg !11744
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11745
  %5 = and i32 %4, 3, !dbg !11746
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11747
  store i32 %5, i32* %6, align 4, !dbg !11748
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11749
  %8 = and i32 %7, 240, !dbg !11750
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11751
  store i32 %8, i32* %9, align 4, !dbg !11752
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11753
  %11 = and i32 %10, 7168, !dbg !11754
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11755
  store i32 %11, i32* %12, align 4, !dbg !11756
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11757
  %14 = lshr i32 %13, 3, !dbg !11758
  %15 = and i32 %14, 7168, !dbg !11758
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11759
  store i32 %15, i32* %16, align 4, !dbg !11760
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11761
  %18 = and i32 %17, 7, !dbg !11762
  store i32 %18, i32* %1, align 4, !dbg !11763
  ret void, !dbg !11764
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11765 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11766
  %2 = and i32 %1, 128, !dbg !11766
  %3 = icmp eq i32 %2, 0, !dbg !11766
  br i1 %3, label %5, label %4, !dbg !11768

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11769
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11771
  br label %5, !dbg !11772

5:                                                ; preds = %4, %0
  ret void, !dbg !11773
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11774 {
  ret void, !dbg !11775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !11776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11779, metadata !DIExpression()), !dbg !11780
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11781
  ret void, !dbg !11782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !11783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11786, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 1000, metadata !11787, metadata !DIExpression()), !dbg !11788
  %2 = udiv i32 %0, 1000, !dbg !11789
  %3 = add nsw i32 %2, -1, !dbg !11790
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11791
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11792
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11793
  ret void, !dbg !11794
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11795 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11797, metadata !DIExpression()), !dbg !11799
  %3 = bitcast i32* %2 to i8*, !dbg !11800
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11800
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11798, metadata !DIExpression()), !dbg !11801
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11802
  store volatile i32 %4, i32* %2, align 4, !dbg !11801
  %5 = load volatile i32, i32* %2, align 4, !dbg !11803
  %6 = icmp eq i32 %0, -1, !dbg !11804
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11797, metadata !DIExpression()), !dbg !11799
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11799
  call void @llvm.dbg.value(metadata i32 %8, metadata !11797, metadata !DIExpression()), !dbg !11799
  br label %9, !dbg !11806

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11797, metadata !DIExpression()), !dbg !11799
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11807
  call void @llvm.dbg.value(metadata i32 undef, metadata !11797, metadata !DIExpression()), !dbg !11799
  %12 = shl i32 %11, 15, !dbg !11799
  %13 = ashr i32 %12, 31, !dbg !11799
  %14 = add i32 %13, %10, !dbg !11799
  call void @llvm.dbg.value(metadata i32 %14, metadata !11797, metadata !DIExpression()), !dbg !11799
  %15 = icmp eq i32 %14, 0, !dbg !11806
  br i1 %15, label %16, label %9, !dbg !11806

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11810
  ret void, !dbg !11810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !11811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11813, metadata !DIExpression()), !dbg !11814
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11815
  ret void, !dbg !11816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !11817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11822, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.value(metadata i32 0, metadata !11825, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.value(metadata i32 0, metadata !11826, metadata !DIExpression()), !dbg !11827
  %2 = icmp eq i32 %0, 0, !dbg !11828
  br i1 %2, label %50, label %3, !dbg !11830

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11831
  %5 = icmp eq i32 %4, 49152, !dbg !11834
  br i1 %5, label %6, label %15, !dbg !11835

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11825, metadata !DIExpression()), !dbg !11827
  %7 = add i32 %0, -64000001, !dbg !11836
  %8 = icmp ult i32 %7, 26000000, !dbg !11836
  br i1 %8, label %15, label %9, !dbg !11836

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11839
  %11 = select i1 %10, i32 0, i32 3, !dbg !11841
  call void @llvm.dbg.value(metadata i32 %11, metadata !11825, metadata !DIExpression()), !dbg !11827
  %12 = add i32 %0, -30000001, !dbg !11842
  %13 = icmp ult i32 %12, 60000000, !dbg !11842
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11842
  call void @llvm.dbg.value(metadata i32 %14, metadata !11825, metadata !DIExpression()), !dbg !11827
  br label %15, !dbg !11842

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11827
  call void @llvm.dbg.value(metadata i32 %16, metadata !11825, metadata !DIExpression()), !dbg !11827
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11845
  %18 = icmp eq i32 %17, 32768, !dbg !11847
  br i1 %18, label %19, label %27, !dbg !11848

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11849
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11852
  br i1 %22, label %27, label %23, !dbg !11852

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11853
  %25 = and i1 %24, %21, !dbg !11856
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11856
  call void @llvm.dbg.value(metadata i32 %26, metadata !11825, metadata !DIExpression()), !dbg !11827
  br label %27, !dbg !11856

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11857
  call void @llvm.dbg.value(metadata i32 %28, metadata !11825, metadata !DIExpression()), !dbg !11827
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11858
  %30 = icmp eq i32 %29, 16384, !dbg !11860
  br i1 %30, label %31, label %39, !dbg !11861

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11862
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11865
  br i1 %34, label %39, label %35, !dbg !11865

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11866
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11869
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %38, metadata !11825, metadata !DIExpression()), !dbg !11827
  br label %39, !dbg !11869

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11857
  call void @llvm.dbg.value(metadata i32 %40, metadata !11825, metadata !DIExpression()), !dbg !11827
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !11870
  call void @llvm.dbg.value(metadata i32 2, metadata !11823, metadata !DIExpression()), !dbg !11827
  br label %41, !dbg !11871

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11857
  call void @llvm.dbg.value(metadata i32 %42, metadata !11823, metadata !DIExpression()), !dbg !11827
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11872
  call void @llvm.dbg.value(metadata i32 %43, metadata !11824, metadata !DIExpression()), !dbg !11827
  %44 = add nsw i32 %42, -1, !dbg !11874
  call void @llvm.dbg.value(metadata i32 %44, metadata !11823, metadata !DIExpression()), !dbg !11827
  %45 = icmp ne i32 %43, %40, !dbg !11875
  %46 = icmp ne i32 %44, 0, !dbg !11876
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11876
  br i1 %47, label %41, label %48, !dbg !11877, !llvm.loop !11878

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11880
  call void @llvm.dbg.value(metadata i32 %51, metadata !11826, metadata !DIExpression()), !dbg !11827
  ret i32 %51, !dbg !11881
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !11882 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11884
  %2 = and i32 %1, 49152, !dbg !11884
  ret i32 %2, !dbg !11885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !11886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11888, metadata !DIExpression()), !dbg !11889
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11890
  %3 = and i32 %2, -8, !dbg !11890
  %4 = or i32 %3, %0, !dbg !11890
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11890
  ret void, !dbg !11891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !11892 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11893
  %2 = and i32 %1, 7, !dbg !11893
  ret i32 %2, !dbg !11894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !11895 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11913, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11914, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.value(metadata i32 0, metadata !11915, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.value(metadata i32 0, metadata !11916, metadata !DIExpression()), !dbg !11917
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11918
  %4 = icmp eq i32 %3, 0, !dbg !11920
  br i1 %4, label %5, label %21, !dbg !11921

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !11922
  call void @llvm.dbg.value(metadata i32 %6, metadata !11916, metadata !DIExpression()), !dbg !11917
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.171() #24, !dbg !11924
  %8 = icmp eq i32 %7, 1, !dbg !11926
  br i1 %8, label %13, label %9, !dbg !11927

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.172() #24, !dbg !11928
  br label %10, !dbg !11930

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.171() #24, !dbg !11931
  %12 = icmp eq i32 %11, 1, !dbg !11932
  br i1 %12, label %13, label %10, !dbg !11930, !llvm.loop !11933

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11935
  %15 = load i32, i32* %14, align 4, !dbg !11935
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11936
  %17 = load i32, i32* %16, align 4, !dbg !11936
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11937
  %19 = load i32, i32* %18, align 4, !dbg !11937
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.173(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !11938
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11939
  call void @llvm.dbg.value(metadata i32 %20, metadata !11915, metadata !DIExpression()), !dbg !11917
  br label %21, !dbg !11940

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11941
  call void @llvm.dbg.value(metadata i32 %22, metadata !11915, metadata !DIExpression()), !dbg !11917
  ret i32 %22, !dbg !11942
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !11943 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11947, metadata !DIExpression()), !dbg !11948
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.175() #24, !dbg !11949
  %2 = icmp ne i32 %1, 0, !dbg !11951
  call void @llvm.dbg.value(metadata i1 %2, metadata !11947, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11948
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !11952
  %4 = icmp ne i32 %3, 0, !dbg !11954
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11955
  %6 = zext i1 %5 to i32, !dbg !11955
  call void @llvm.dbg.value(metadata i32 %6, metadata !11947, metadata !DIExpression()), !dbg !11948
  ret i32 %6, !dbg !11956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !11957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11961, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11962, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i32 0, metadata !11963, metadata !DIExpression()), !dbg !11964
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11965
  %4 = load i32, i32* %3, align 4, !dbg !11965
  %5 = and i32 %4, 63, !dbg !11966
  %6 = udiv i32 %0, %5, !dbg !11967
  call void @llvm.dbg.value(metadata i32 %6, metadata !11963, metadata !DIExpression()), !dbg !11964
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11968
  %8 = load i32, i32* %7, align 4, !dbg !11968
  %9 = and i32 %8, 511, !dbg !11969
  %10 = mul i32 %9, %6, !dbg !11970
  call void @llvm.dbg.value(metadata i32 %10, metadata !11963, metadata !DIExpression()), !dbg !11964
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11971
  %12 = load i32, i32* %11, align 4, !dbg !11971
  %13 = lshr i32 %12, 15, !dbg !11972
  %14 = and i32 %13, 131070, !dbg !11972
  %15 = add nuw nsw i32 %14, 2, !dbg !11972
  %16 = udiv i32 %10, %15, !dbg !11973
  call void @llvm.dbg.value(metadata i32 %16, metadata !11963, metadata !DIExpression()), !dbg !11964
  ret i32 %16, !dbg !11974
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.171() unnamed_addr #15 !dbg !11975 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11976
  %2 = lshr i32 %1, 1, !dbg !11977
  %3 = and i32 %2, 1, !dbg !11977
  ret i32 %3, !dbg !11978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.172() unnamed_addr #14 !dbg !11979 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11980
  %2 = or i32 %1, 1, !dbg !11980
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11980
  ret void, !dbg !11981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.173(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !11982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11984, metadata !DIExpression()), !dbg !11988
  call void @llvm.dbg.value(metadata i32 %1, metadata !11985, metadata !DIExpression()), !dbg !11988
  call void @llvm.dbg.value(metadata i32 %2, metadata !11986, metadata !DIExpression()), !dbg !11988
  call void @llvm.dbg.value(metadata i32 %3, metadata !11987, metadata !DIExpression()), !dbg !11988
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11989
  %6 = and i32 %5, -4227072, !dbg !11989
  %7 = or i32 %1, %0, !dbg !11989
  %8 = shl i32 %2, 6, !dbg !11989
  %9 = or i32 %7, %8, !dbg !11989
  %10 = or i32 %9, %6, !dbg !11989
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11989
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11990
  %12 = and i32 %11, -196609, !dbg !11990
  %13 = or i32 %12, %3, !dbg !11990
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11990
  ret void, !dbg !11991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !11992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11996, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11997, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i32 0, metadata !11998, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i32 0, metadata !11999, metadata !DIExpression()), !dbg !12000
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12001
  %4 = load i32, i32* %3, align 4, !dbg !12001
  %5 = lshr i32 %4, 4, !dbg !12001
  %6 = and i32 %5, 15, !dbg !12001
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12001
  %8 = load i8, i8* %7, align 1, !dbg !12001
  %9 = zext i8 %8 to i32, !dbg !12001
  %10 = lshr i32 %0, %9, !dbg !12001
  call void @llvm.dbg.value(metadata i32 %10, metadata !11999, metadata !DIExpression()), !dbg !12000
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12002
  %12 = icmp ult i32 %11, %10, !dbg !12004
  br i1 %12, label %13, label %16, !dbg !12005

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12006
  call void @llvm.dbg.value(metadata i32 %14, metadata !11998, metadata !DIExpression()), !dbg !12000
  %15 = icmp eq i32 %14, 0, !dbg !12008
  br i1 %15, label %16, label %30, !dbg !12010

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.174() #24, !dbg !12011
  br label %17, !dbg !12013

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.175() #24, !dbg !12014
  %19 = icmp eq i32 %18, 1, !dbg !12015
  br i1 %19, label %20, label %17, !dbg !12013, !llvm.loop !12016

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12018
  tail call fastcc void @LL_RCC_SetAHBPrescaler.176(i32 noundef %21) #24, !dbg !12019
  tail call fastcc void @LL_RCC_SetSysClkSource.177() #24, !dbg !12020
  br label %22, !dbg !12021

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.178() #24, !dbg !12022
  %24 = icmp eq i32 %23, 8, !dbg !12023
  br i1 %24, label %25, label %22, !dbg !12021, !llvm.loop !12024

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12026
  %27 = load i32, i32* %26, align 4, !dbg !12026
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.179(i32 noundef %27) #24, !dbg !12027
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12028
  %29 = load i32, i32* %28, align 4, !dbg !12028
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.180(i32 noundef %29) #24, !dbg !12029
  br label %30, !dbg !12030

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12031
  %33 = icmp ugt i32 %32, %10, !dbg !12033
  br i1 %33, label %34, label %36, !dbg !12034

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12035
  call void @llvm.dbg.value(metadata i32 %35, metadata !11998, metadata !DIExpression()), !dbg !12000
  br label %36, !dbg !12037

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12000
  call void @llvm.dbg.value(metadata i32 %37, metadata !11998, metadata !DIExpression()), !dbg !12000
  %38 = icmp eq i32 %37, 0, !dbg !12038
  br i1 %38, label %39, label %40, !dbg !12040

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12041
  br label %40, !dbg !12043

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12044
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.174() unnamed_addr #14 !dbg !12045 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12046
  %2 = or i32 %1, 16777216, !dbg !12046
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12046
  ret void, !dbg !12047
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.175() unnamed_addr #15 !dbg !12048 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12049
  %2 = lshr i32 %1, 25, !dbg !12050
  %3 = and i32 %2, 1, !dbg !12050
  ret i32 %3, !dbg !12051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.176(i32 noundef %0) unnamed_addr #14 !dbg !12052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12054, metadata !DIExpression()), !dbg !12055
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12056
  %3 = and i32 %2, -241, !dbg !12056
  %4 = or i32 %3, %0, !dbg !12056
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12056
  ret void, !dbg !12057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.177() unnamed_addr #14 !dbg !12058 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12060, metadata !DIExpression()), !dbg !12061
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12062
  %2 = and i32 %1, -4, !dbg !12062
  %3 = or i32 %2, 2, !dbg !12062
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12062
  ret void, !dbg !12063
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.178() unnamed_addr #15 !dbg !12064 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12065
  %2 = and i32 %1, 12, !dbg !12065
  ret i32 %2, !dbg !12066
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.179(i32 noundef %0) unnamed_addr #14 !dbg !12067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12069, metadata !DIExpression()), !dbg !12070
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12071
  %3 = and i32 %2, -7169, !dbg !12071
  %4 = or i32 %3, %0, !dbg !12071
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12071
  ret void, !dbg !12072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.180(i32 noundef %0) unnamed_addr #14 !dbg !12073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12075, metadata !DIExpression()), !dbg !12076
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12077
  %3 = and i32 %2, -57345, !dbg !12077
  %4 = or i32 %3, %0, !dbg !12077
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12077
  ret void, !dbg !12078
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12079 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12080
  %2 = lshr i32 %1, 27, !dbg !12081
  %3 = and i32 %2, 1, !dbg !12081
  ret i32 %3, !dbg !12082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12087, metadata !DIExpression()), !dbg !12093
  call void @llvm.dbg.value(metadata i32 %1, metadata !12088, metadata !DIExpression()), !dbg !12093
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12089, metadata !DIExpression()), !dbg !12093
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12090, metadata !DIExpression()), !dbg !12093
  call void @llvm.dbg.value(metadata i32 0, metadata !12091, metadata !DIExpression()), !dbg !12093
  call void @llvm.dbg.value(metadata i32 0, metadata !12092, metadata !DIExpression()), !dbg !12093
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12094
  %6 = icmp eq i32 %5, 0, !dbg !12096
  br i1 %6, label %7, label %27, !dbg !12097

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !12098
  call void @llvm.dbg.value(metadata i32 %8, metadata !12092, metadata !DIExpression()), !dbg !12093
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12100
  %10 = icmp eq i32 %9, 1, !dbg !12102
  br i1 %10, label %19, label %11, !dbg !12103

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12104
  br i1 %12, label %13, label %14, !dbg !12107

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12108
  br label %15, !dbg !12110

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !12111
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !12113
  br label %16, !dbg !12114

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12115
  %18 = icmp eq i32 %17, 1, !dbg !12116
  br i1 %18, label %19, label %16, !dbg !12114, !llvm.loop !12117

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12119
  %21 = load i32, i32* %20, align 4, !dbg !12119
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12120
  %23 = load i32, i32* %22, align 4, !dbg !12120
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12121
  %25 = load i32, i32* %24, align 4, !dbg !12121
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.173(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12122
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12123
  call void @llvm.dbg.value(metadata i32 %26, metadata !12091, metadata !DIExpression()), !dbg !12093
  br label %27, !dbg !12124

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12125
  call void @llvm.dbg.value(metadata i32 %28, metadata !12091, metadata !DIExpression()), !dbg !12093
  ret i32 %28, !dbg !12126
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !12127 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12128
  %2 = lshr i32 %1, 17, !dbg !12129
  %3 = and i32 %2, 1, !dbg !12129
  ret i32 %3, !dbg !12130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12131 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12132
  %2 = or i32 %1, 262144, !dbg !12132
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12132
  ret void, !dbg !12133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !12134 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12135
  %2 = and i32 %1, -262145, !dbg !12135
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12135
  ret void, !dbg !12136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !12137 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12138
  %2 = or i32 %1, 65536, !dbg !12138
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12138
  ret void, !dbg !12139
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12140 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12143, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12159
  ret void, !dbg !12160
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12161 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12165, metadata !DIExpression()), !dbg !12167
  %2 = icmp eq i8* %0, null, !dbg !12168
  br i1 %2, label %29, label %3, !dbg !12170

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12171
  %5 = icmp eq i8 %4, 0, !dbg !12172
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12173
  br i1 %6, label %29, label %8, !dbg !12173

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12166, metadata !DIExpression()), !dbg !12167
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12174

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12166, metadata !DIExpression()), !dbg !12167
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12176
  br i1 %10, label %11, label %15, !dbg !12181

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12182
  %13 = load i8*, i8** %12, align 4, !dbg !12182
  %14 = icmp eq i8* %13, %0, !dbg !12183
  br i1 %14, label %29, label %15, !dbg !12184

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12185
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12166, metadata !DIExpression()), !dbg !12167
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12186
  br i1 %17, label %7, label %8, !dbg !12187, !llvm.loop !12188

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12166, metadata !DIExpression()), !dbg !12167
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12190
  br i1 %20, label %21, label %26, !dbg !12194

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12195
  %23 = load i8*, i8** %22, align 4, !dbg !12195
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12196
  %25 = icmp eq i32 %24, 0, !dbg !12197
  br i1 %25, label %29, label %26, !dbg !12198

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12199
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12166, metadata !DIExpression()), !dbg !12167
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12200
  br i1 %28, label %29, label %18, !dbg !12174, !llvm.loop !12201

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12167
  ret %struct.device* %30, !dbg !12203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12204 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12208, metadata !DIExpression()), !dbg !12209
  %2 = icmp eq %struct.device* %0, null, !dbg !12210
  br i1 %2, label %14, label %3, !dbg !12212

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12213
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12213
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12214
  %7 = load i8, i8* %6, align 1, !dbg !12214
  %8 = and i8 %7, 1, !dbg !12214
  %9 = icmp eq i8 %8, 0, !dbg !12214
  br i1 %9, label %14, label %10, !dbg !12215

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12216
  %12 = load i8, i8* %11, align 1, !dbg !12216
  %13 = icmp eq i8 %12, 0, !dbg !12217
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12209
  ret i1 %15, !dbg !12218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12219 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12224, metadata !DIExpression()), !dbg !12225
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12226
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12228 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12236, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12237, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.value(metadata i8* %2, metadata !12238, metadata !DIExpression()), !dbg !12241
  %5 = bitcast i32* %4 to i8*, !dbg !12242
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12242
  call void @llvm.dbg.value(metadata i32 0, metadata !12239, metadata !DIExpression()), !dbg !12241
  store i32 0, i32* %4, align 4, !dbg !12243
  call void @llvm.dbg.value(metadata i32* %4, metadata !12239, metadata !DIExpression(DW_OP_deref)), !dbg !12241
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12244
  call void @llvm.dbg.value(metadata i16* %6, metadata !12240, metadata !DIExpression()), !dbg !12241
  %7 = load i32, i32* %4, align 4, !dbg !12245
  call void @llvm.dbg.value(metadata i32 %7, metadata !12239, metadata !DIExpression()), !dbg !12241
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12246
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12247
  ret i32 %8, !dbg !12248
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12249 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12253, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.value(metadata i32* %1, metadata !12254, metadata !DIExpression()), !dbg !12259
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12260
  %4 = load i16*, i16** %3, align 4, !dbg !12260
  call void @llvm.dbg.value(metadata i16* %4, metadata !12255, metadata !DIExpression()), !dbg !12259
  %5 = icmp eq i16* %4, null, !dbg !12261
  br i1 %5, label %14, label %6, !dbg !12262

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12263
  call void @llvm.dbg.value(metadata i32 %7, metadata !12256, metadata !DIExpression()), !dbg !12263
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12264
  %9 = load i16, i16* %8, align 2, !dbg !12264
  %10 = add i16 %9, -32767, !dbg !12265
  %11 = icmp ult i16 %10, 2, !dbg !12265
  %12 = add i32 %7, 1, !dbg !12266
  call void @llvm.dbg.value(metadata i32 %12, metadata !12256, metadata !DIExpression()), !dbg !12263
  br i1 %11, label %13, label %6, !dbg !12265, !llvm.loop !12268

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12271
  br label %14, !dbg !12272

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12274 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12278, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata i32 %1, metadata !12279, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12280, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata i8* %3, metadata !12281, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata i32 0, metadata !12282, metadata !DIExpression()), !dbg !12290
  %5 = icmp eq i32 %1, 0, !dbg !12291
  br i1 %5, label %16, label %8, !dbg !12292

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12282, metadata !DIExpression()), !dbg !12290
  %7 = icmp eq i32 %15, %1, !dbg !12291
  br i1 %7, label %16, label %8, !dbg !12292, !llvm.loop !12293

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12282, metadata !DIExpression()), !dbg !12290
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12295
  %11 = load i16, i16* %10, align 2, !dbg !12295
  call void @llvm.dbg.value(metadata i16 %11, metadata !12284, metadata !DIExpression()), !dbg !12296
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12297
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12287, metadata !DIExpression()), !dbg !12296
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12298
  call void @llvm.dbg.value(metadata i32 %13, metadata !12288, metadata !DIExpression()), !dbg !12296
  %14 = icmp slt i32 %13, 0, !dbg !12299
  %15 = add nuw i32 %9, 1, !dbg !12301
  call void @llvm.dbg.value(metadata i32 %15, metadata !12282, metadata !DIExpression()), !dbg !12290
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !12303 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12307, metadata !DIExpression()), !dbg !12310
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12308, metadata !DIExpression()), !dbg !12310
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12309, metadata !DIExpression()), !dbg !12310
  %2 = sext i16 %0 to i32, !dbg !12311
  %3 = icmp slt i16 %0, 1, !dbg !12313
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12314
  %6 = add nsw i32 %2, -1, !dbg !12314
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12314
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12314
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12308, metadata !DIExpression()), !dbg !12310
  ret %struct.device* %8, !dbg !12315
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12316 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12318, metadata !DIExpression()), !dbg !12323
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12319, metadata !DIExpression()), !dbg !12323
  call void @llvm.dbg.value(metadata i8* %2, metadata !12320, metadata !DIExpression()), !dbg !12323
  %5 = bitcast i32* %4 to i8*, !dbg !12324
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12324
  call void @llvm.dbg.value(metadata i32 0, metadata !12321, metadata !DIExpression()), !dbg !12323
  store i32 0, i32* %4, align 4, !dbg !12325
  call void @llvm.dbg.value(metadata i32* %4, metadata !12321, metadata !DIExpression(DW_OP_deref)), !dbg !12323
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12326
  call void @llvm.dbg.value(metadata i16* %6, metadata !12322, metadata !DIExpression()), !dbg !12323
  %7 = load i32, i32* %4, align 4, !dbg !12327
  call void @llvm.dbg.value(metadata i32 %7, metadata !12321, metadata !DIExpression()), !dbg !12323
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12328
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12329
  ret i32 %8, !dbg !12330
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12331 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12333, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32* %1, metadata !12334, metadata !DIExpression()), !dbg !12338
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12339
  %4 = load i16*, i16** %3, align 4, !dbg !12339
  call void @llvm.dbg.value(metadata i16* %4, metadata !12335, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 0, metadata !12336, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 0, metadata !12337, metadata !DIExpression()), !dbg !12338
  %5 = icmp eq i16* %4, null, !dbg !12340
  br i1 %5, label %22, label %6, !dbg !12342

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12336, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i16* %8, metadata !12335, metadata !DIExpression()), !dbg !12338
  %9 = load i16, i16* %8, align 2, !dbg !12343
  %10 = icmp eq i16 %9, -32768, !dbg !12347
  call void @llvm.dbg.value(metadata i32 undef, metadata !12336, metadata !DIExpression()), !dbg !12338
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12348
  call void @llvm.dbg.value(metadata i16* %11, metadata !12335, metadata !DIExpression()), !dbg !12338
  %12 = zext i1 %10 to i32, !dbg !12349
  %13 = add i32 %7, %12, !dbg !12349
  call void @llvm.dbg.value(metadata i32 %13, metadata !12336, metadata !DIExpression()), !dbg !12338
  %14 = icmp eq i32 %13, 2, !dbg !12350
  br i1 %14, label %15, label %6, !dbg !12351

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12338
  call void @llvm.dbg.value(metadata i32 %16, metadata !12337, metadata !DIExpression()), !dbg !12338
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12352
  %18 = load i16, i16* %17, align 2, !dbg !12352
  %19 = icmp eq i16 %18, 32767, !dbg !12353
  %20 = add i32 %16, 1, !dbg !12354
  call void @llvm.dbg.value(metadata i32 %20, metadata !12337, metadata !DIExpression()), !dbg !12338
  br i1 %19, label %21, label %15, !dbg !12356, !llvm.loop !12357

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12359
  br label %22, !dbg !12360

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12361
  call void @llvm.dbg.value(metadata i16* %23, metadata !12335, metadata !DIExpression()), !dbg !12338
  ret i16* %23, !dbg !12362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !12363 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12366
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12367
  ret i32* %2, !dbg !12368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !12369 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12520, metadata !DIExpression()), !dbg !12523
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12521, metadata !DIExpression()), !dbg !12523
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12522, metadata !DIExpression()), !dbg !12523
  ret void, !dbg !12524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12529, metadata !DIExpression()), !dbg !12531
  call void @llvm.dbg.value(metadata i32 %1, metadata !12530, metadata !DIExpression()), !dbg !12531
  ret void, !dbg !12532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12533 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12537, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.value(metadata i32 %1, metadata !12538, metadata !DIExpression()), !dbg !12539
  ret void, !dbg !12540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12545, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.value(metadata i8* %1, metadata !12546, metadata !DIExpression()), !dbg !12547
  ret i32 -134, !dbg !12548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12553, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i8* %1, metadata !12554, metadata !DIExpression()), !dbg !12555
  ret i32 -134, !dbg !12556
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12560, metadata !DIExpression()), !dbg !12561
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12562, !srcloc !12568
  call void @llvm.dbg.value(metadata i32 undef, metadata !12565, metadata !DIExpression()) #23, !dbg !12569
  call void @llvm.dbg.value(metadata i32 undef, metadata !12566, metadata !DIExpression()) #23, !dbg !12569
  br label %3, !dbg !12570

3:                                                ; preds = %3, %1
  br label %3, !dbg !12571, !llvm.loop !12574
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12581, metadata !DIExpression()), !dbg !12583
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12582, metadata !DIExpression()), !dbg !12583
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.185, i32 0, i32 0), i32 noundef 69) #25, !dbg !12584
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12589
  unreachable, !dbg !12589
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12592, metadata !DIExpression()), !dbg !12593
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12594
  unreachable, !dbg !12594
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12597, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12598, metadata !DIExpression()), !dbg !12601
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12602, !srcloc !12568
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12602
  call void @llvm.dbg.value(metadata i32 %4, metadata !12565, metadata !DIExpression()) #23, !dbg !12604
  call void @llvm.dbg.value(metadata i32 undef, metadata !12566, metadata !DIExpression()) #23, !dbg !12604
  call void @llvm.dbg.value(metadata i32 %4, metadata !12599, metadata !DIExpression()), !dbg !12601
  %5 = tail call fastcc %struct.k_thread* @k_current_get.188() #26, !dbg !12605
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12600, metadata !DIExpression()), !dbg !12601
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !12606
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.189, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !12606
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12611
  br i1 %7, label %20, label %8, !dbg !12613

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12614, metadata !DIExpression()), !dbg !12619
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12621
  %10 = load i32, i32* %9, align 4, !dbg !12621
  %11 = and i32 %10, 511, !dbg !12622
  %12 = icmp eq i32 %11, 0, !dbg !12623
  br i1 %12, label %14, label %13, !dbg !12624

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 69) #25, !dbg !12625
  br label %14, !dbg !12631

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12632
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.191, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !12632
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !12637
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12614, metadata !DIExpression()), !dbg !12638
  %16 = load i32, i32* %9, align 4, !dbg !12643
  %17 = and i32 %16, 511, !dbg !12644
  %18 = icmp eq i32 %17, 0, !dbg !12645
  br i1 %18, label %22, label %19, !dbg !12646

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12647, metadata !DIExpression()) #23, !dbg !12650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12653, !srcloc !12654
  br label %25, !dbg !12655

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12632
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.191, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !12632
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !12637
  br label %22, !dbg !12656

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12657
  call void @llvm.dbg.value(metadata i32 %4, metadata !12647, metadata !DIExpression()) #23, !dbg !12660
  call void @llvm.dbg.value(metadata i32 %4, metadata !12647, metadata !DIExpression()) #23, !dbg !12663
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12601
  br i1 %23, label %25, label %24, !dbg !12665

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.192(%struct.k_thread* noundef %5) #24, !dbg !12666
  br label %25, !dbg !12669

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12669
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.188() unnamed_addr #11 !dbg !12670 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.200() #26, !dbg !12674
  ret %struct.k_thread* %1, !dbg !12675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !12676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12680, metadata !DIExpression()), !dbg !12681
  %2 = icmp ult i32 %0, 5, !dbg !12682
  br i1 %2, label %3, label %6, !dbg !12682

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12682
  %5 = load i8*, i8** %4, align 4, !dbg !12682
  br label %6, !dbg !12682

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.194, i32 0, i32 0), %1 ], !dbg !12683
  ret i8* %7, !dbg !12685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12686 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12690, metadata !DIExpression()), !dbg !12692
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12693
  br i1 %2, label %9, label %3, !dbg !12694

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !12695
  call void @llvm.dbg.value(metadata i8* %4, metadata !12691, metadata !DIExpression()), !dbg !12692
  %5 = icmp eq i8* %4, null, !dbg !12696
  br i1 %5, label %9, label %6, !dbg !12698

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12699
  %8 = icmp eq i8 %7, 0, !dbg !12700
  br i1 %8, label %9, label %10, !dbg !12701

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.193, i32 0, i32 0), metadata !12691, metadata !DIExpression()), !dbg !12692
  br label %10, !dbg !12702

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.193, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12692
  call void @llvm.dbg.value(metadata i8* %11, metadata !12691, metadata !DIExpression()), !dbg !12692
  ret i8* %11, !dbg !12704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.192(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12705 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12709, metadata !DIExpression()), !dbg !12710
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12711, !srcloc !12713
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12714
  ret void, !dbg !12715
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.200() unnamed_addr #11 !dbg !12716 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12717, !srcloc !12719
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12720
  ret %struct.k_thread* %1, !dbg !12721
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12722 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12726, metadata !DIExpression()), !dbg !12729
  call void @llvm.dbg.value(metadata i32 %1, metadata !12727, metadata !DIExpression()), !dbg !12729
  call void @llvm.dbg.value(metadata i32 %2, metadata !12728, metadata !DIExpression()), !dbg !12729
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12730
  ret void, !dbg !12731
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12736, metadata !DIExpression()), !dbg !12739
  call void @llvm.dbg.value(metadata i8* %1, metadata !12737, metadata !DIExpression()), !dbg !12739
  call void @llvm.dbg.value(metadata i32 %2, metadata !12738, metadata !DIExpression()), !dbg !12739
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12740
  ret void, !dbg !12741
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12742 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12743
  ret void, !dbg !12744
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12747, metadata !DIExpression()), !dbg !12748
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12749
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12750
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12751
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12752
  %4 = trunc i32 %0 to i8, !dbg !12753
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12754
  store i8 %4, i8* %5, align 4, !dbg !12755
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12756
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12757
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12758
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12759
  store i8* %8, i8** %9, align 4, !dbg !12760
  ret void, !dbg !12761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12764, metadata !DIExpression()), !dbg !12770
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12771
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12765, metadata !DIExpression()), !dbg !12770
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12772
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12766, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.207, i32 0, i32 0), metadata !12769, metadata !DIExpression()), !dbg !12770
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12773
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12774
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.207, i32 0, i32 0)) #25, !dbg !12775
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12776
  ret void, !dbg !12777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12778 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12782, metadata !DIExpression()), !dbg !12783
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12784
  ret i8* %2, !dbg !12785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12786 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12791, metadata !DIExpression()), !dbg !12792
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12793
  %3 = load i8, i8* %2, align 1, !dbg !12794
  %4 = and i8 %3, -5, !dbg !12794
  store i8 %4, i8* %2, align 1, !dbg !12794
  ret void, !dbg !12795
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !12796 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12799
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12800
  %3 = ptrtoint i8* %2 to i32, !dbg !12809
  %4 = add i32 %3, 2048, !dbg !12810
  call void @llvm.dbg.value(metadata i32 %4, metadata !12804, metadata !DIExpression()) #23, !dbg !12811
  call void @llvm.dbg.value(metadata i32 %4, metadata !12812, metadata !DIExpression()) #23, !dbg !12815
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12817, !srcloc !12818
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12819
  %6 = or i32 %5, 512, !dbg !12819
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12819
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -2, i32 noundef 255) #25, !dbg !12820
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -5, i32 noundef 0) #25, !dbg !12823
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -12, i32 noundef 0) #25, !dbg !12824
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -11, i32 noundef 0) #25, !dbg !12825
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -10, i32 noundef 0) #25, !dbg !12826
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -4, i32 noundef 0) #25, !dbg !12827
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12828
  %8 = or i32 %7, 458752, !dbg !12828
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12828
  tail call void @z_arm_fault_init() #25, !dbg !12829
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12830
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12831
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12834
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12835
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12836
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12837
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !12837
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12798, metadata !DIExpression()), !dbg !12838
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12839
  call void @z_device_state_init() #25, !dbg !12840
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12841
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12842
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12843
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12844
  unreachable, !dbg !12844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2038, metadata !DIExpression()), !dbg !12845
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12846
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12846
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2039, metadata !DIExpression()), !dbg !12845
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2039, metadata !DIExpression()), !dbg !12845
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12847
  br i1 %7, label %8, label %35, !dbg !12848

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2039, metadata !DIExpression()), !dbg !12845
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12849
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12849
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2049, metadata !DIExpression()), !dbg !12850
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12851
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12851
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12852
  call void @llvm.dbg.value(metadata i32 %14, metadata !2053, metadata !DIExpression()), !dbg !12850
  %15 = icmp eq %struct.device* %11, null, !dbg !12853
  br i1 %15, label %32, label %16, !dbg !12855

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12856
  br i1 %17, label %26, label %18, !dbg !12859

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12860
  call void @llvm.dbg.value(metadata i32 %19, metadata !2053, metadata !DIExpression()), !dbg !12850
  %20 = icmp ult i32 %19, 255, !dbg !12862
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12862
  call void @llvm.dbg.value(metadata i32 %21, metadata !2053, metadata !DIExpression()), !dbg !12850
  %22 = trunc i32 %21 to i8, !dbg !12863
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12864
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12864
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12865
  store i8 %22, i8* %25, align 1, !dbg !12866
  br label %26, !dbg !12867

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12868
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12868
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12869
  %30 = load i8, i8* %29, align 1, !dbg !12870
  %31 = or i8 %30, 1, !dbg !12870
  store i8 %31, i8* %29, align 1, !dbg !12870
  br label %32, !dbg !12871

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12872
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2039, metadata !DIExpression()), !dbg !12845
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12847
  br i1 %34, label %8, label %35, !dbg !12848, !llvm.loop !12873

35:                                               ; preds = %32, %1
  ret void, !dbg !12875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.210(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !12876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12878, metadata !DIExpression()), !dbg !12880
  call void @llvm.dbg.value(metadata i32 %1, metadata !12879, metadata !DIExpression()), !dbg !12880
  %3 = trunc i32 %1 to i8, !dbg !12881
  %4 = shl i8 %3, 4, !dbg !12881
  %5 = and i32 %0, 15, !dbg !12884
  %6 = add nsw i32 %5, -4, !dbg !12885
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12886
  store volatile i8 %4, i8* %7, align 1, !dbg !12887
  ret void, !dbg !12888
}

; Function Attrs: optsize
declare !dbg !12889 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12890 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12893, metadata !DIExpression()), !dbg !12894
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12895
  store i8 1, i8* %2, align 1, !dbg !12896
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12897
  store i8 1, i8* %3, align 4, !dbg !12898
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12899
  store i32 0, i32* %4, align 4, !dbg !12900
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12901
  store i32 0, i32* %5, align 4, !dbg !12902
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12903
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12904
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12905
  ret void, !dbg !12906
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12907 {
  tail call void @z_sched_init() #25, !dbg !12912
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12913
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.211, i32 0, i32 0)) #25, !dbg !12914
  call void @llvm.dbg.value(metadata i8* %1, metadata !12911, metadata !DIExpression()), !dbg !12915
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12916
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12917
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12918
  ret i8* %1, !dbg !12919
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !12920 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12924, metadata !DIExpression()), !dbg !12925
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12926
  unreachable, !dbg !12927
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12928 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12930, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i8* %1, metadata !12931, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i8* %2, metadata !12932, metadata !DIExpression()), !dbg !12933
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12934
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12935
  tail call void @boot_banner() #25, !dbg !12936
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12937
  tail call void @z_init_static_threads() #25, !dbg !12938
  tail call void @main() #25, !dbg !12939
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12940
  %5 = and i8 %4, -2, !dbg !12940
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12940
  ret void, !dbg !12941
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12942 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12952, metadata !DIExpression()), !dbg !12954
  call void @llvm.dbg.value(metadata i8* %1, metadata !12953, metadata !DIExpression()), !dbg !12954
  ret void, !dbg !12955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12956 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12958, metadata !DIExpression()), !dbg !12960
  call void @llvm.dbg.value(metadata i8* %1, metadata !12959, metadata !DIExpression()), !dbg !12960
  ret void, !dbg !12961
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12962 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12963, !srcloc !12970
  call void @llvm.dbg.value(metadata i32 %1, metadata !12966, metadata !DIExpression()) #23, !dbg !12971
  %2 = icmp ne i32 %1, 0, !dbg !12972
  ret i1 %2, !dbg !12973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !12974 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12975
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12976
  %3 = load i8, i8* %2, align 4, !dbg !12977
  %4 = or i8 %3, 1, !dbg !12977
  store i8 %4, i8* %2, align 4, !dbg !12977
  ret void, !dbg !12978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !12979 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12980
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12981
  %3 = load i8, i8* %2, align 4, !dbg !12982
  %4 = and i8 %3, -2, !dbg !12982
  store i8 %4, i8* %2, align 4, !dbg !12982
  ret void, !dbg !12983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !12984 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12985
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12986
  %3 = load i8, i8* %2, align 4, !dbg !12986
  %4 = and i8 %3, 1, !dbg !12987
  %5 = icmp ne i8 %4, 0, !dbg !12988
  ret i1 %5, !dbg !12989
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12990 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12994, metadata !DIExpression()), !dbg !12996
  call void @llvm.dbg.value(metadata i8* %1, metadata !12995, metadata !DIExpression()), !dbg !12996
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12997
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !12999
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12994, metadata !DIExpression()), !dbg !12996
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13000
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13001
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13002
  store i8 0, i8* %8, align 1, !dbg !13003
  ret i32 0, !dbg !13004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13005 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13009, metadata !DIExpression()), !dbg !13010
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13011
  ret i8* %2, !dbg !13012
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13013 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13017, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata i8* %1, metadata !13018, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata i32 %2, metadata !13019, metadata !DIExpression()), !dbg !13020
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13021
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13022
  ret i32 0, !dbg !13023
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2064 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2181, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i8* %1, metadata !2182, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i32 %2, metadata !2183, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i32 0, metadata !2184, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i8 undef, metadata !2186, metadata !DIExpression()), !dbg !13024
  %4 = icmp eq i8* %1, null, !dbg !13025
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13027
  br i1 %6, label %46, label %7, !dbg !13027

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13028
  %9 = load i8, i8* %8, align 1, !dbg !13028
  call void @llvm.dbg.value(metadata i8 %9, metadata !2186, metadata !DIExpression()), !dbg !13024
  %10 = add i32 %2, -1, !dbg !13029
  call void @llvm.dbg.value(metadata i32 %10, metadata !2183, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i8 0, metadata !2187, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i8 %9, metadata !2186, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i32 0, metadata !2184, metadata !DIExpression()), !dbg !13024
  %11 = icmp eq i8 %9, 0, !dbg !13031
  br i1 %11, label %12, label %15, !dbg !13033

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13034
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13035
  store i8 0, i8* %14, align 1, !dbg !13036
  br label %46, !dbg !13037

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2187, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i8 %17, metadata !2186, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i32 %18, metadata !2184, metadata !DIExpression()), !dbg !13024
  %19 = zext i8 %17 to i32, !dbg !13038
  %20 = zext i8 %16 to i32, !dbg !13039
  %21 = shl nuw i32 1, %20, !dbg !13039
  call void @llvm.dbg.value(metadata i32 %21, metadata !2185, metadata !DIExpression()), !dbg !13024
  %22 = and i32 %21, %19, !dbg !13041
  %23 = icmp eq i32 %22, 0, !dbg !13043
  br i1 %23, label %42, label %24, !dbg !13044

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13045
  %26 = sub i32 %10, %18, !dbg !13046
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13047
  %28 = load i8*, i8** %27, align 4, !dbg !13047
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13048
  %30 = load i32, i32* %29, align 4, !dbg !13048
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13049
  %32 = add i32 %31, %18, !dbg !13050
  call void @llvm.dbg.value(metadata i32 %32, metadata !2184, metadata !DIExpression()), !dbg !13024
  %33 = trunc i32 %21 to i8, !dbg !13051
  %34 = xor i8 %33, -1, !dbg !13051
  %35 = and i8 %17, %34, !dbg !13051
  call void @llvm.dbg.value(metadata i8 %35, metadata !2186, metadata !DIExpression()), !dbg !13024
  %36 = icmp eq i8 %35, 0, !dbg !13052
  br i1 %36, label %12, label %37, !dbg !13054

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13055
  %39 = sub i32 %10, %32, !dbg !13057
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.214, i32 0, i32 0), i32 noundef 1) #24, !dbg !13058
  %41 = add i32 %40, %32, !dbg !13059
  call void @llvm.dbg.value(metadata i32 %41, metadata !2184, metadata !DIExpression()), !dbg !13024
  br label %42, !dbg !13060

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13024
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13024
  call void @llvm.dbg.value(metadata i8 %44, metadata !2186, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i32 %43, metadata !2184, metadata !DIExpression()), !dbg !13024
  %45 = add i8 %16, 1, !dbg !13061
  call void @llvm.dbg.value(metadata i8 %45, metadata !2187, metadata !DIExpression()), !dbg !13030
  br label %15, !dbg !13033

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.215, i32 0, i32 0), %3 ], !dbg !13024
  ret i8* %47, !dbg !13062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13063 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13067, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata i32 %1, metadata !13068, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata i8* %2, metadata !13069, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata i32 %3, metadata !13070, metadata !DIExpression()), !dbg !13072
  %5 = icmp ult i32 %1, %3, !dbg !13073
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13073
  call void @llvm.dbg.value(metadata i32 %6, metadata !13071, metadata !DIExpression()), !dbg !13072
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13074
  ret i32 %6, !dbg !13075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13076 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13080, metadata !DIExpression()), !dbg !13081
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13082
  ret void, !dbg !13083
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13093, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13094, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i32 %2, metadata !13095, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13096, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i8* %4, metadata !13097, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i8* %5, metadata !13098, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i8* %6, metadata !13099, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i32 %7, metadata !13100, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i32 %8, metadata !13101, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i8* %9, metadata !13102, metadata !DIExpression()), !dbg !13104
  %11 = icmp eq i32 %7, 15, !dbg !13105
  br i1 %11, label %12, label %15, !dbg !13105

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13105
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13105
  br i1 %14, label %19, label %18, !dbg !13105

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13105
  %17 = icmp ult i32 %16, 31, !dbg !13105
  br i1 %17, label %19, label %18, !dbg !13105

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 536) #25, !dbg !13109
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.228, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13109
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 536) #25, !dbg !13109
  unreachable, !dbg !13109

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13111
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13112
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13113
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13114
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13115
  call void @llvm.dbg.value(metadata i8* %22, metadata !13103, metadata !DIExpression()), !dbg !13104
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13116
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13117
  store i8* null, i8** %23, align 4, !dbg !13118
  %24 = icmp eq i8* %9, null, !dbg !13119
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13121
  br i1 %24, label %29, label %26, !dbg !13122

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13123
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13125
  store i8 0, i8* %28, align 1, !dbg !13126
  br label %30, !dbg !13127

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13128
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13130
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13130
  br i1 %32, label %36, label %33, !dbg !13132

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13133
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13133
  br label %36, !dbg !13134

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13104
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13135
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13137
  ret i8* %22, !dbg !13138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13139 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13143, metadata !DIExpression()), !dbg !13144
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13145
  ret i1 %2, !dbg !13146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13147 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13152, metadata !DIExpression()), !dbg !13153
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13154
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13155
  ret void, !dbg !13156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13157 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13162, metadata !DIExpression()), !dbg !13166
  call void @llvm.dbg.value(metadata i32 %1, metadata !13163, metadata !DIExpression()), !dbg !13166
  call void @llvm.dbg.value(metadata i32 %2, metadata !13164, metadata !DIExpression()), !dbg !13166
  call void @llvm.dbg.value(metadata i32 %3, metadata !13165, metadata !DIExpression()), !dbg !13166
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13167
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13168
  %6 = trunc i32 %3 to i8, !dbg !13169
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13170
  store i8 %6, i8* %7, align 4, !dbg !13171
  %8 = trunc i32 %2 to i8, !dbg !13172
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13173
  store i8 %8, i8* %9, align 1, !dbg !13174
  %10 = trunc i32 %1 to i8, !dbg !13175
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13176
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13176
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13176
  store i8 %10, i8* %13, align 2, !dbg !13177
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13178
  store i8 0, i8* %14, align 1, !dbg !13179
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13180
  ret void, !dbg !13181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13182 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13186, metadata !DIExpression()), !dbg !13194
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13187, metadata !DIExpression()), !dbg !13194
  call void @llvm.dbg.value(metadata i32 %2, metadata !13188, metadata !DIExpression()), !dbg !13194
  call void @llvm.dbg.value(metadata i32 0, metadata !13193, metadata !DIExpression()), !dbg !13194
  %4 = add i32 %2, 7, !dbg !13195
  %5 = and i32 %4, -8, !dbg !13195
  %6 = add i32 %5, 64, !dbg !13195
  call void @llvm.dbg.value(metadata i32 %6, metadata !13189, metadata !DIExpression()), !dbg !13194
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.229(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13197
  call void @llvm.dbg.value(metadata i8* %7, metadata !13192, metadata !DIExpression()), !dbg !13194
  call void @llvm.dbg.value(metadata i32 %5, metadata !13190, metadata !DIExpression()), !dbg !13194
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13198
  call void @llvm.dbg.value(metadata i8* %8, metadata !13191, metadata !DIExpression()), !dbg !13194
  call void @llvm.dbg.value(metadata i32 0, metadata !13193, metadata !DIExpression()), !dbg !13194
  %9 = ptrtoint i8* %7 to i32, !dbg !13199
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13200
  store i32 %9, i32* %10, align 4, !dbg !13201
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13202
  store i32 %5, i32* %11, align 4, !dbg !13203
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13204
  store i32 0, i32* %12, align 4, !dbg !13205
  call void @llvm.dbg.value(metadata i8* %8, metadata !13191, metadata !DIExpression()), !dbg !13194
  ret i8* %8, !dbg !13206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.229(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13207 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13211, metadata !DIExpression()), !dbg !13212
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13213
  ret i8* %2, !dbg !13214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13215 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13220, metadata !DIExpression()), !dbg !13221
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13222
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13223
  ret void, !dbg !13224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13225 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13227, metadata !DIExpression()), !dbg !13228
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13229
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13230
  ret void, !dbg !13231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13232 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13236, metadata !DIExpression()), !dbg !13237
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13238
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13239
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13240
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13241
  ret void, !dbg !13242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13243 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13248, metadata !DIExpression()), !dbg !13249
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13250
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13251
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13252
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13253
  ret void, !dbg !13254
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13255 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13272, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13263, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13264, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i32 %2, metadata !13265, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13266, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i8* %4, metadata !13267, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i8* %5, metadata !13268, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i8* %6, metadata !13269, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i32 %7, metadata !13270, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.value(metadata i32 %8, metadata !13271, metadata !DIExpression()), !dbg !13273
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13274, !srcloc !12970
  call void @llvm.dbg.value(metadata i32 %11, metadata !12966, metadata !DIExpression()) #23, !dbg !13279
  %12 = icmp eq i32 %11, 0, !dbg !13280
  br i1 %12, label %14, label %13, !dbg !13281

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 647) #25, !dbg !13282
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.233, i32 0, i32 0)) #25, !dbg !13282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 647) #25, !dbg !13282
  unreachable, !dbg !13282

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13272, metadata !DIExpression()), !dbg !13273
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13284
  %17 = icmp eq i64 %15, -1, !dbg !13285
  br i1 %17, label %19, label %18, !dbg !13287

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13288
  br label %19, !dbg !13290

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13292 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13297, metadata !DIExpression()), !dbg !13298
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13296, metadata !DIExpression()), !dbg !13298
  %4 = icmp eq i64 %3, 0, !dbg !13299
  br i1 %4, label %5, label %6, !dbg !13301

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13302
  br label %7, !dbg !13304

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13305
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13307
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13308 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13312, metadata !DIExpression()), !dbg !13313
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13314, !srcloc !13316
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13317
  ret void, !dbg !13318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13319 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13322, metadata !DIExpression()), !dbg !13323
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13321, metadata !DIExpression()), !dbg !13323
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13324
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13325
  ret void, !dbg !13326
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13327 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13329, metadata !DIExpression()), !dbg !13349
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13350

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 750) #25, !dbg !13354
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.237, i32 0, i32 0)) #25, !dbg !13354
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 750) #25, !dbg !13354
  unreachable, !dbg !13354

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13329, metadata !DIExpression()), !dbg !13349
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13357
  br i1 %4, label %6, label %5, !dbg !13358

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !13359
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13347, metadata !DIExpression()), !dbg !13360
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13361

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13365
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13365
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13367
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13367
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13368
  %12 = load i32, i32* %11, align 4, !dbg !13368
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13369
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13369
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13370
  %16 = load i8*, i8** %15, align 4, !dbg !13370
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13371
  %18 = load i8*, i8** %17, align 4, !dbg !13371
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13372
  %20 = load i8*, i8** %19, align 4, !dbg !13372
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13373
  %22 = load i32, i32* %21, align 4, !dbg !13373
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13374
  %24 = load i32, i32* %23, align 4, !dbg !13374
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13375
  %26 = load i8*, i8** %25, align 4, !dbg !13375
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !13376
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13377
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13378
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13379
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13379
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13380
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13329, metadata !DIExpression()), !dbg !13349
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13381
  br i1 %32, label %1, label %2, !dbg !13350, !llvm.loop !13382

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 781) #25, !dbg !13384
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.237, i32 0, i32 0)) #25, !dbg !13384
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 781) #25, !dbg !13384
  unreachable, !dbg !13384

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13347, metadata !DIExpression()), !dbg !13360
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13387
  br i1 %36, label %38, label %37, !dbg !13388

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !13389
  ret void, !dbg !13390

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13391
  %40 = load i32, i32* %39, align 4, !dbg !13391
  %41 = icmp eq i32 %40, -1, !dbg !13394
  br i1 %41, label %50, label %42, !dbg !13395

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13396
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13396
  %45 = icmp sgt i32 %40, 0, !dbg !13398
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13398
  %47 = zext i32 %46 to i64, !dbg !13398
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !13398
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13399
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !13399
  br label %50, !dbg !13400

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13401
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13347, metadata !DIExpression()), !dbg !13360
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13402
  br i1 %52, label %33, label %34, !dbg !13361, !llvm.loop !13403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !13405 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13410, metadata !DIExpression()), !dbg !13411
  call void @llvm.dbg.value(metadata i64 %0, metadata !13412, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 1000, metadata !13417, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 10000, metadata !13418, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i8 1, metadata !13419, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i8 0, metadata !13420, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i8 1, metadata !13421, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i8 0, metadata !13422, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i8 1, metadata !13423, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i8 0, metadata !13424, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i64 0, metadata !13425, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i64 0, metadata !13425, metadata !DIExpression()), !dbg !13429
  %2 = mul i64 %0, 10, !dbg !13431
  ret i64 %2, !dbg !13437
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !13438 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13440, metadata !DIExpression()), !dbg !13444
  call void @llvm.dbg.value(metadata i8* %1, metadata !13441, metadata !DIExpression()), !dbg !13444
  call void @llvm.dbg.value(metadata i8* %2, metadata !13442, metadata !DIExpression()), !dbg !13444
  call void @llvm.dbg.value(metadata i8* %3, metadata !13443, metadata !DIExpression()), !dbg !13444
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13445
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13446
  %7 = load i8, i8* %6, align 4, !dbg !13447
  %8 = or i8 %7, 4, !dbg !13447
  store i8 %8, i8* %6, align 4, !dbg !13447
  tail call void @z_thread_essential_clear() #24, !dbg !13448
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13449
  unreachable, !dbg !13449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13450 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13455, metadata !DIExpression()), !dbg !13457
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13458
  %3 = load i32, i32* %2, align 4, !dbg !13458
  call void @llvm.dbg.value(metadata i32 %3, metadata !13456, metadata !DIExpression()), !dbg !13457
  %4 = icmp eq i32 %3, 0, !dbg !13459
  br i1 %4, label %10, label %5, !dbg !13461

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13462
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13465
  %8 = zext i8 %7 to i32, !dbg !13466
  %9 = icmp eq i32 %6, %8, !dbg !13467
  br i1 %9, label %11, label %10, !dbg !13468

10:                                               ; preds = %5, %1
  br label %11, !dbg !13469

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13457
  ret i1 %12, !dbg !13470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !13471 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13473, metadata !DIExpression()), !dbg !13474
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13475
  %3 = load i32, i32* %2, align 4, !dbg !13475
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13477
  %5 = zext i8 %4 to i32, !dbg !13478
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13479
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13480
  %8 = or i32 %7, %5, !dbg !13481
  %9 = icmp eq i32 %3, %8, !dbg !13482
  br i1 %9, label %10, label %11, !dbg !13483

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13484
  br label %11, !dbg !13485

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13487 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13491, metadata !DIExpression()), !dbg !13492
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13493
  %3 = zext i8 %2 to i32, !dbg !13494
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13495
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13496
  %6 = or i32 %5, %3, !dbg !13497
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13498
  store i32 %6, i32* %7, align 4, !dbg !13499
  ret void, !dbg !13500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13501 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13505, metadata !DIExpression()), !dbg !13506
  ret i32 -134, !dbg !13507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13508 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13512, metadata !DIExpression()), !dbg !13514
  call void @llvm.dbg.value(metadata i32 %1, metadata !13513, metadata !DIExpression()), !dbg !13514
  ret i32 -134, !dbg !13515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13516 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13523, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13524, metadata !DIExpression()), !dbg !13525
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13526
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13528
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13525
  ret i32 %6, !dbg !13529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13530 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13534, metadata !DIExpression()), !dbg !13535
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13536
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13535
  ret i32 %3, !dbg !13538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13539 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13541
  ret void, !dbg !13542
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !13543 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13545, metadata !DIExpression()), !dbg !13548
  call void @llvm.dbg.value(metadata i8* %1, metadata !13546, metadata !DIExpression()), !dbg !13548
  call void @llvm.dbg.value(metadata i8* %2, metadata !13547, metadata !DIExpression()), !dbg !13548
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13549
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13549
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13549
  %7 = load i8, i8* %6, align 2, !dbg !13549
  %8 = icmp sgt i8 %7, -1, !dbg !13549
  br i1 %8, label %10, label %9, !dbg !13552

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 39) #25, !dbg !13553
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 39) #25, !dbg !13553
  unreachable, !dbg !13553

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13555, !srcloc !13562
  call void @llvm.dbg.value(metadata i32 undef, metadata !13558, metadata !DIExpression()) #23, !dbg !13563
  call void @llvm.dbg.value(metadata i32 undef, metadata !13559, metadata !DIExpression()) #23, !dbg !13563
  tail call fastcc void @k_cpu_idle() #24, !dbg !13564
  br label %10, !dbg !13565, !llvm.loop !13566
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13568 {
  tail call void @arch_cpu_idle() #25, !dbg !13569
  ret void, !dbg !13570
}

; Function Attrs: optsize
declare !dbg !13571 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13572 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13583, metadata !DIExpression()), !dbg !13584
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13585
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13586
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13587
  store i32 0, i32* %3, align 4, !dbg !13588
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13589
  tail call fastcc void @z_waitq_init.249(%struct._wait_q_t* noundef %4) #24, !dbg !13590
  ret i32 0, !dbg !13591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.249(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13592 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13596, metadata !DIExpression()), !dbg !13597
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13598
  tail call fastcc void @sys_dlist_init.250(%struct._dnode* noundef %2) #24, !dbg !13599
  ret void, !dbg !13600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.250(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13601 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13606, metadata !DIExpression()), !dbg !13607
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13608
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13609
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13610
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13611
  ret void, !dbg !13612
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13613 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13622, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13621, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.value(metadata i8 0, metadata !13629, metadata !DIExpression()), !dbg !13634
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13635, !srcloc !13644
  call void @llvm.dbg.value(metadata i32 %4, metadata !13638, metadata !DIExpression()) #23, !dbg !13645
  %5 = icmp eq i32 %4, 0, !dbg !13646
  br i1 %5, label %7, label %6, !dbg !13647

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 101) #25, !dbg !13648
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.256, i32 0, i32 0)) #25, !dbg !13648
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 101) #25, !dbg !13648
  unreachable, !dbg !13648

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.257, metadata !13650, metadata !DIExpression()) #23, !dbg !13657
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13659, !srcloc !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13662, metadata !DIExpression()) #23, !dbg !13666
  call void @llvm.dbg.value(metadata i32 undef, metadata !13663, metadata !DIExpression()) #23, !dbg !13666
  call void @llvm.dbg.value(metadata i32 undef, metadata !13656, metadata !DIExpression()) #23, !dbg !13657
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13667
  br i1 %9, label %11, label %10, !dbg !13670

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 148) #25, !dbg !13671
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.260, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13671
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 148) #25, !dbg !13671
  unreachable, !dbg !13671

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13659
  call void @llvm.dbg.value(metadata i32 %12, metadata !13662, metadata !DIExpression()) #23, !dbg !13666
  call void @llvm.dbg.value(metadata i32 %12, metadata !13656, metadata !DIExpression()) #23, !dbg !13657
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13673
  call void @llvm.dbg.value(metadata i32 %12, metadata !13624, metadata !DIExpression()), !dbg !13634
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13674
  %14 = load i32, i32* %13, align 4, !dbg !13674
  %15 = icmp eq i32 %14, 0, !dbg !13674
  br i1 %15, label %21, label %16, !dbg !13674

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13674
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13674
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13674
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13674
  br i1 %20, label %27, label %39, !dbg !13676, !prof !13677

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13678
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13680
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13680
  %25 = load i8, i8* %24, align 2, !dbg !13680
  %26 = sext i8 %25 to i32, !dbg !13678
  br label %30, !dbg !13681

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13682
  %29 = load i32, i32* %28, align 4, !dbg !13682
  br label %30, !dbg !13681

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13683
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13681
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13684
  store i32 %32, i32* %33, align 4, !dbg !13685
  %34 = add i32 %14, 1, !dbg !13686
  store i32 %34, i32* %13, align 4, !dbg !13686
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13687
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13688
  call void @llvm.dbg.value(metadata i32 undef, metadata !13689, metadata !DIExpression()) #23, !dbg !13695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.257, metadata !13694, metadata !DIExpression()) #23, !dbg !13695
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13697
  br i1 %36, label %38, label %37, !dbg !13700

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 194) #25, !dbg !13701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 194) #25, !dbg !13701
  unreachable, !dbg !13701

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13689, metadata !DIExpression()) #23, !dbg !13695
  call void @llvm.dbg.value(metadata i32 %12, metadata !13703, metadata !DIExpression()) #23, !dbg !13706
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13708, !srcloc !13709
  br label %97, !dbg !13710

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13711
  br i1 %40, label %41, label %45, !dbg !13713, !prof !13714

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13689, metadata !DIExpression()) #23, !dbg !13715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.257, metadata !13694, metadata !DIExpression()) #23, !dbg !13715
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13718
  br i1 %42, label %44, label %43, !dbg !13719

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 194) #25, !dbg !13720
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13720
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 194) #25, !dbg !13720
  unreachable, !dbg !13720

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13689, metadata !DIExpression()) #23, !dbg !13715
  call void @llvm.dbg.value(metadata i32 %12, metadata !13703, metadata !DIExpression()) #23, !dbg !13721
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13723, !srcloc !13709
  br label %97, !dbg !13724

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13725
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13725
  %48 = load i8, i8* %47, align 2, !dbg !13725
  %49 = sext i8 %48 to i32, !dbg !13726
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13727
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13727
  %52 = load i8, i8* %51, align 2, !dbg !13727
  %53 = sext i8 %52 to i32, !dbg !13728
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13729
  call void @llvm.dbg.value(metadata i32 %54, metadata !13623, metadata !DIExpression()), !dbg !13634
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13730
  br i1 %55, label %56, label %58, !dbg !13732

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13733
  call void @llvm.dbg.value(metadata i1 %57, metadata !13629, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13634
  br label %58, !dbg !13735

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13629, metadata !DIExpression()), !dbg !13634
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13736
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13737
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.257, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #25, !dbg !13737
  call void @llvm.dbg.value(metadata i32 %62, metadata !13630, metadata !DIExpression()), !dbg !13634
  %63 = icmp eq i32 %62, 0, !dbg !13738
  br i1 %63, label %97, label %64, !dbg !13740

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.257, metadata !13650, metadata !DIExpression()) #23, !dbg !13741
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13743, !srcloc !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13662, metadata !DIExpression()) #23, !dbg !13745
  call void @llvm.dbg.value(metadata i32 undef, metadata !13663, metadata !DIExpression()) #23, !dbg !13745
  call void @llvm.dbg.value(metadata i32 undef, metadata !13656, metadata !DIExpression()) #23, !dbg !13741
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13746
  br i1 %66, label %68, label %67, !dbg !13747

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 148) #25, !dbg !13748
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.260, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13748
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 148) #25, !dbg !13748
  unreachable, !dbg !13748

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13743
  call void @llvm.dbg.value(metadata i32 %69, metadata !13662, metadata !DIExpression()) #23, !dbg !13745
  call void @llvm.dbg.value(metadata i32 %69, metadata !13656, metadata !DIExpression()) #23, !dbg !13741
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13749
  call void @llvm.dbg.value(metadata i32 %69, metadata !13624, metadata !DIExpression()), !dbg !13634
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13750
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13750
  br i1 %71, label %90, label %72, !dbg !13751, !prof !13714

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13752
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13631, metadata !DIExpression()), !dbg !13753
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13754
  br i1 %74, label %83, label %75, !dbg !13755

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13756
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13756
  %78 = load i8, i8* %77, align 2, !dbg !13756
  %79 = sext i8 %78 to i32, !dbg !13757
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13758
  %81 = load i32, i32* %80, align 4, !dbg !13758
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13759
  br label %86, !dbg !13755

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13760
  %85 = load i32, i32* %84, align 4, !dbg !13760
  br label %86, !dbg !13755

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13755
  call void @llvm.dbg.value(metadata i32 %87, metadata !13623, metadata !DIExpression()), !dbg !13634
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13761
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13762
  call void @llvm.dbg.value(metadata i1 %89, metadata !13629, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13634
  call void @llvm.dbg.value(metadata i8 poison, metadata !13629, metadata !DIExpression()), !dbg !13634
  br i1 %89, label %91, label %93, !dbg !13763

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13629, metadata !DIExpression()), !dbg !13634
  br i1 %59, label %91, label %93, !dbg !13763

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13764
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.257, [1 x i32] %92) #25, !dbg !13764
  br label %97, !dbg !13767

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13689, metadata !DIExpression()) #23, !dbg !13768
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.257, metadata !13694, metadata !DIExpression()) #23, !dbg !13768
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13771
  br i1 %94, label %96, label %95, !dbg !13772

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 194) #25, !dbg !13773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 194) #25, !dbg !13773
  unreachable, !dbg !13773

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13689, metadata !DIExpression()) #23, !dbg !13768
  call void @llvm.dbg.value(metadata i32 %69, metadata !13703, metadata !DIExpression()) #23, !dbg !13774
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13776, !srcloc !13709
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13634
  ret i32 %98, !dbg !13777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13782, metadata !DIExpression()), !dbg !13785
  call void @llvm.dbg.value(metadata i32 %1, metadata !13783, metadata !DIExpression()), !dbg !13785
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13786
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13786
  call void @llvm.dbg.value(metadata i32 %4, metadata !13784, metadata !DIExpression()), !dbg !13785
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13787
  call void @llvm.dbg.value(metadata i32 %5, metadata !13784, metadata !DIExpression()), !dbg !13785
  ret i32 %5, !dbg !13788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13793, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i32 %1, metadata !13794, metadata !DIExpression()), !dbg !13795
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13796
  ret i1 %3, !dbg !13797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13798 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13802, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i32 %1, metadata !13803, metadata !DIExpression()), !dbg !13804
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13805
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13805
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13807
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13807
  %7 = load i8, i8* %6, align 2, !dbg !13807
  %8 = sext i8 %7 to i32, !dbg !13808
  %9 = icmp eq i32 %8, %1, !dbg !13809
  br i1 %9, label %12, label %10, !dbg !13810

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !13811
  br label %12, !dbg !13813

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13804
  ret i1 %13, !dbg !13814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13815 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13819, metadata !DIExpression()), !dbg !13820
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13821
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13822
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13823
  ret %struct.k_thread* %4, !dbg !13824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13825 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13829, metadata !DIExpression()), !dbg !13830
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !13831
  br i1 %2, label %6, label %3, !dbg !13831

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13832
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13832
  br label %6, !dbg !13831

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13831
  ret %struct._dnode* %7, !dbg !13833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !13834 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13838, metadata !DIExpression()), !dbg !13839
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13840
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13840
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13841
  ret i1 %4, !dbg !13842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13845, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i32 %1, metadata !13846, metadata !DIExpression()), !dbg !13847
  %3 = icmp slt i32 %0, %1, !dbg !13848
  ret i1 %3, !dbg !13849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13852, metadata !DIExpression()), !dbg !13853
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13854
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13854
  ret i32 %3, !dbg !13855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13860, metadata !DIExpression()), !dbg !13861
  %2 = icmp sgt i32 %0, -128, !dbg !13862
  ret i1 %2, !dbg !13863
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13864 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13866, metadata !DIExpression()), !dbg !13870
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13871, !srcloc !13644
  call void @llvm.dbg.value(metadata i32 %2, metadata !13638, metadata !DIExpression()) #23, !dbg !13876
  %3 = icmp eq i32 %2, 0, !dbg !13877
  br i1 %3, label %5, label %4, !dbg !13878

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 205) #25, !dbg !13879
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.256, i32 0, i32 0)) #25, !dbg !13879
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 205) #25, !dbg !13879
  unreachable, !dbg !13879

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13881
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !13881
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13881
  br i1 %8, label %41, label %9, !dbg !13883

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13884
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !13884
  br i1 %11, label %12, label %41, !dbg !13886

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13887
  %14 = load i32, i32* %13, align 4, !dbg !13887
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !13890

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 229) #25, !dbg !13891
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.255, i32 0, i32 0), i32 noundef 229) #25, !dbg !13891
  unreachable, !dbg !13891

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !13893
  store i32 %17, i32* %13, align 4, !dbg !13893
  br label %41, !dbg !13896

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.257, metadata !13650, metadata !DIExpression()) #23, !dbg !13897
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13899, !srcloc !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13662, metadata !DIExpression()) #23, !dbg !13901
  call void @llvm.dbg.value(metadata i32 undef, metadata !13663, metadata !DIExpression()) #23, !dbg !13901
  call void @llvm.dbg.value(metadata i32 undef, metadata !13656, metadata !DIExpression()) #23, !dbg !13897
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13902
  br i1 %20, label %22, label %21, !dbg !13903

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 148) #25, !dbg !13904
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.260, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13904
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 148) #25, !dbg !13904
  unreachable, !dbg !13904

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !13899
  call void @llvm.dbg.value(metadata i32 %23, metadata !13662, metadata !DIExpression()) #23, !dbg !13901
  call void @llvm.dbg.value(metadata i32 %23, metadata !13656, metadata !DIExpression()) #23, !dbg !13897
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13905
  call void @llvm.dbg.value(metadata i32 %23, metadata !13868, metadata !DIExpression()), !dbg !13870
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13906
  %25 = load i32, i32* %24, align 4, !dbg !13906
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !13907
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13908
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #25, !dbg !13909
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13867, metadata !DIExpression()), !dbg !13870
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !13910
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !13911
  br i1 %29, label %37, label %30, !dbg !13913

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !13914
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !13914
  %33 = load i8, i8* %32, align 2, !dbg !13914
  %34 = sext i8 %33 to i32, !dbg !13916
  store i32 %34, i32* %24, align 4, !dbg !13917
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13918, metadata !DIExpression()), !dbg !13924
  call void @llvm.dbg.value(metadata i32 0, metadata !13923, metadata !DIExpression()), !dbg !13924
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 8, i32 1, !dbg !13926
  store i32 0, i32* %35, align 4, !dbg !13927
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #25, !dbg !13928
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !13929
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.257, [1 x i32] %36) #25, !dbg !13929
  br label %41, !dbg !13930

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !13931
  call void @llvm.dbg.value(metadata i32 undef, metadata !13689, metadata !DIExpression()) #23, !dbg !13933
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.257, metadata !13694, metadata !DIExpression()) #23, !dbg !13933
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13935
  br i1 %38, label %40, label %39, !dbg !13936

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 194) #25, !dbg !13937
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.257) #25, !dbg !13937
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.259, i32 0, i32 0), i32 noundef 194) #25, !dbg !13937
  unreachable, !dbg !13937

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13689, metadata !DIExpression()) #23, !dbg !13933
  call void @llvm.dbg.value(metadata i32 %23, metadata !13703, metadata !DIExpression()) #23, !dbg !13938
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13940, !srcloc !13709
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !13870
  ret i32 %42, !dbg !13941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13942 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13946, metadata !DIExpression()), !dbg !13950
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13947, metadata !DIExpression()), !dbg !13950
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13951
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13951
  %5 = load i8, i8* %4, align 2, !dbg !13951
  call void @llvm.dbg.value(metadata i8 %5, metadata !13948, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13950
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13952
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13952
  %8 = load i8, i8* %7, align 2, !dbg !13952
  call void @llvm.dbg.value(metadata i8 %8, metadata !13949, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13950
  %9 = icmp eq i8 %8, %5, !dbg !13953
  %10 = sext i8 %5 to i32, !dbg !13955
  %11 = sext i8 %8 to i32, !dbg !13955
  %12 = sub nsw i32 %11, %10, !dbg !13955
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13955
  ret i32 %13, !dbg !13956
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13957 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13961, metadata !DIExpression()), !dbg !13962
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !13963
  %3 = icmp eq i32 %2, 0, !dbg !13965
  br i1 %3, label %8, label %4, !dbg !13966

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !13967
  %6 = add i32 %5, %2, !dbg !13969
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13970
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !13971
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !13972
  br label %8, !dbg !13973

8:                                                ; preds = %4, %1
  ret void, !dbg !13974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !13975 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13979, metadata !DIExpression()), !dbg !13981
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13982
  call void @llvm.dbg.value(metadata i32 %1, metadata !13980, metadata !DIExpression()), !dbg !13981
  ret i32 %1, !dbg !13983
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13988, metadata !DIExpression()), !dbg !13997
  call void @llvm.dbg.value(metadata i32 %1, metadata !13989, metadata !DIExpression()), !dbg !13997
  call void @llvm.dbg.value(metadata i32 0, metadata !13990, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !14006
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14008, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14015
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !14015
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14006
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14016
  br i1 %4, label %6, label %5, !dbg !14019

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14020
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14020
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14020
  unreachable, !dbg !14020

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14015
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14006
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14022
  call void @llvm.dbg.value(metadata i32 undef, metadata !13996, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata i32 undef, metadata !13990, metadata !DIExpression()), !dbg !13998
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14023
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14026
  %8 = icmp sgt i32 %0, 0, !dbg !14027
  %9 = icmp sgt i32 %7, 2, !dbg !14029
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14029
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14029
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14030
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14031
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14032
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14039
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !14039
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14041
  br i1 %12, label %14, label %13, !dbg !14044

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14045
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14045
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14045
  unreachable, !dbg !14045

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14008
  call void @llvm.dbg.value(metadata i32 %15, metadata !14011, metadata !DIExpression()) #23, !dbg !14015
  call void @llvm.dbg.value(metadata i32 %15, metadata !14005, metadata !DIExpression()) #23, !dbg !14006
  call void @llvm.dbg.value(metadata i32 %15, metadata !13996, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14039
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !14050
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14052, !srcloc !14053
  call void @llvm.dbg.value(metadata i32 1, metadata !13990, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata i32 undef, metadata !13990, metadata !DIExpression()), !dbg !13998
  ret void, !dbg !14054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14057, metadata !DIExpression()), !dbg !14058
  call void @llvm.dbg.value(metadata i32 %0, metadata !14059, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14074
  call void @llvm.dbg.value(metadata i32 1000, metadata !14062, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.value(metadata i32 10000, metadata !14063, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.value(metadata i8 1, metadata !14064, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.value(metadata i1 true, metadata !14065, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14074
  call void @llvm.dbg.value(metadata i1 true, metadata !14066, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14074
  call void @llvm.dbg.value(metadata i8 0, metadata !14067, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.value(metadata i1 true, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14074
  call void @llvm.dbg.value(metadata i1 false, metadata !14069, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14074
  call void @llvm.dbg.value(metadata i64 0, metadata !14070, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.value(metadata i64 0, metadata !14070, metadata !DIExpression()), !dbg !14074
  %2 = mul i32 %0, 10, !dbg !14076
  ret i32 %2, !dbg !14082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14085, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !14088
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14090, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14092
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !14092
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14088
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14093
  br i1 %3, label %5, label %4, !dbg !14094

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14095
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14095
  unreachable, !dbg !14095

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14090
  call void @llvm.dbg.value(metadata i32 %6, metadata !14011, metadata !DIExpression()) #23, !dbg !14092
  call void @llvm.dbg.value(metadata i32 %6, metadata !14005, metadata !DIExpression()) #23, !dbg !14088
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14096
  call void @llvm.dbg.value(metadata i32 %6, metadata !14086, metadata !DIExpression()), !dbg !14087
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14097
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14099
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14100
  br i1 %9, label %10, label %14, !dbg !14101

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14102
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !14104
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14106
  br i1 %11, label %13, label %12, !dbg !14107

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14108
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14108
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14108
  unreachable, !dbg !14108

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14033, metadata !DIExpression()) #23, !dbg !14104
  call void @llvm.dbg.value(metadata i32 %6, metadata !14047, metadata !DIExpression()) #23, !dbg !14109
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14111, !srcloc !14053
  br label %33, !dbg !14112

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14113
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14114
  %16 = icmp eq i32 %15, 0, !dbg !14114
  br i1 %16, label %27, label %17, !dbg !14116

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14117
  br i1 %18, label %19, label %27, !dbg !14118

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14119
  %21 = icmp sgt i32 %20, %0, !dbg !14122
  br i1 %21, label %25, label %22, !dbg !14123

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14124
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14124
  call void @llvm.dbg.value(metadata i32 %24, metadata !14086, metadata !DIExpression()), !dbg !14087
  br label %28, !dbg !14126

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14127
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14127
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14129
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14087
  call void @llvm.dbg.value(metadata i32 %29, metadata !14086, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !14131
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14133
  br i1 %30, label %32, label %31, !dbg !14134

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14135
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14135
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14135
  unreachable, !dbg !14135

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14033, metadata !DIExpression()) #23, !dbg !14131
  call void @llvm.dbg.value(metadata i32 %29, metadata !14047, metadata !DIExpression()) #23, !dbg !14136
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14138, !srcloc !14053
  br label %33, !dbg !14139

33:                                               ; preds = %32, %13
  ret void, !dbg !14139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14144, metadata !DIExpression()), !dbg !14146
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14147
  %3 = icmp eq i32 %2, 0, !dbg !14147
  br i1 %3, label %16, label %4, !dbg !14148

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14149
  br i1 %5, label %16, label %6, !dbg !14150

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14151
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14151
  %9 = load i8, i8* %8, align 2, !dbg !14151
  %10 = sext i8 %9 to i32, !dbg !14152
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14153
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.279(i32 noundef %10, i32 noundef %11) #24, !dbg !14154
  br i1 %12, label %16, label %13, !dbg !14155

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14156
  %15 = xor i1 %14, true, !dbg !14157
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14146
  call void @llvm.dbg.value(metadata i1 %17, metadata !14145, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14146
  ret i1 %17, !dbg !14158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14159 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14163, metadata !DIExpression()), !dbg !14165
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14166
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14164, metadata !DIExpression()), !dbg !14165
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14167
  br i1 %3, label %5, label %4, !dbg !14169

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14170
  br label %5, !dbg !14172

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14163, metadata !DIExpression()), !dbg !14165
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14173
  ret i32 %6, !dbg !14174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14175 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14177, metadata !DIExpression()), !dbg !14179
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14180
  %3 = load i8, i8* %2, align 1, !dbg !14180
  call void @llvm.dbg.value(metadata i8 %3, metadata !14178, metadata !DIExpression()), !dbg !14179
  %4 = and i8 %3, 31, !dbg !14181
  %5 = icmp ne i8 %4, 0, !dbg !14182
  ret i1 %5, !dbg !14183
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14184 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14186, metadata !DIExpression()), !dbg !14187
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14188
  br i1 %2, label %3, label %7, !dbg !14190

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14191, metadata !DIExpression()) #23, !dbg !14194
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14197
  %5 = load i8, i8* %4, align 1, !dbg !14198
  %6 = and i8 %5, 127, !dbg !14198
  store i8 %6, i8* %4, align 1, !dbg !14198
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14199, metadata !DIExpression()) #23, !dbg !14202
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14206
  br label %7, !dbg !14207

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14208, metadata !DIExpression()) #23, !dbg !14211
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14213
  %9 = load i8, i8* %8, align 1, !dbg !14214
  %10 = or i8 %9, -128, !dbg !14214
  store i8 %10, i8* %8, align 1, !dbg !14214
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14215, metadata !DIExpression()) #23, !dbg !14218
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14222, metadata !DIExpression()) #23, !dbg !14230
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !14230
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14232
  br i1 %11, label %12, label %13, !dbg !14235

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 186) #25, !dbg !14236
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 186) #25, !dbg !14236
  unreachable, !dbg !14236

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.274(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14238
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14229, metadata !DIExpression()) #23, !dbg !14230
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14240
  br i1 %15, label %26, label %16, !dbg !14238

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14229, metadata !DIExpression()) #23, !dbg !14230
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14242
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14229, metadata !DIExpression()) #23, !dbg !14230
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14243
  %20 = icmp sgt i32 %19, 0, !dbg !14246
  br i1 %20, label %21, label %23, !dbg !14247

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14248
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14250
  br label %28, !dbg !14251

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14240
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14229, metadata !DIExpression()) #23, !dbg !14230
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14240
  br i1 %25, label %26, label %16, !dbg !14238, !llvm.loop !14252

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14254
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14255
  br label %28, !dbg !14256

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14257
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14258
  %31 = zext i1 %30 to i32, !dbg !14258
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14259
  ret void, !dbg !14260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14261 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14263, metadata !DIExpression()), !dbg !14264
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14265
  ret i1 %2, !dbg !14266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14267 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14269, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14270, metadata !DIExpression()), !dbg !14271
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14272
  br i1 %3, label %4, label %5, !dbg !14275

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14276
  unreachable, !dbg !14276

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14278
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14279
  ret void, !dbg !14280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14281 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14283, metadata !DIExpression()), !dbg !14284
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14285
  ret i1 %2, !dbg !14286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.274(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14287 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14291, metadata !DIExpression()), !dbg !14292
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.277(%struct._dnode* noundef %0) #24, !dbg !14293
  br i1 %2, label %6, label %3, !dbg !14293

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14294
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14294
  br label %6, !dbg !14293

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14293
  ret %struct._dnode* %7, !dbg !14295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14296 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14300, metadata !DIExpression()), !dbg !14304
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14301, metadata !DIExpression()), !dbg !14304
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14305
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14305
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14302, metadata !DIExpression()), !dbg !14304
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14306
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14307
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14308
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14309
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14310
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14311
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14312
  ret void, !dbg !14313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14314 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14318, metadata !DIExpression()), !dbg !14320
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14319, metadata !DIExpression()), !dbg !14320
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14321
  br i1 %3, label %6, label %4, !dbg !14322

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14323
  br label %6, !dbg !14322

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14322
  ret %struct._dnode* %7, !dbg !14324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14325 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14329, metadata !DIExpression()), !dbg !14332
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14330, metadata !DIExpression()), !dbg !14332
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14333
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14333
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14331, metadata !DIExpression()), !dbg !14332
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14334
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14335
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14336
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14337
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14338
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14339
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14340
  ret void, !dbg !14341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14344, metadata !DIExpression()), !dbg !14346
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14347
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14354, metadata !DIExpression()) #23, !dbg !14356
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14357
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14358
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14358
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14345, metadata !DIExpression()), !dbg !14346
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14359, metadata !DIExpression()) #23, !dbg !14365
  call void @llvm.dbg.value(metadata i32 %0, metadata !14364, metadata !DIExpression()) #23, !dbg !14365
  %6 = icmp eq i32 %0, 0, !dbg !14368
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14370
  br i1 %6, label %8, label %18, !dbg !14371

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14372
  br i1 %9, label %10, label %11, !dbg !14375

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 137) #25, !dbg !14376
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0)) #25, !dbg !14376
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 137) #25, !dbg !14376
  unreachable, !dbg !14376

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14378
  br i1 %12, label %18, label %13, !dbg !14380

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14381
  br i1 %14, label %18, label %15, !dbg !14383

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14384
  %17 = icmp eq i32 %16, 0, !dbg !14384
  br i1 %17, label %21, label %18, !dbg !14386

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14387
  br i1 %19, label %21, label %20, !dbg !14390

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14391
  br label %21, !dbg !14393

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14370
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14370
  ret void, !dbg !14394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14395 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14399, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14400, metadata !DIExpression()), !dbg !14402
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.274(%struct._dnode* noundef %0) #24, !dbg !14403
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14401, metadata !DIExpression()), !dbg !14402
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14400, metadata !DIExpression()), !dbg !14402
  ret %struct.k_thread* %3, !dbg !14404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14405 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14407, metadata !DIExpression()), !dbg !14408
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14409
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14410
  %4 = xor i1 %3, true, !dbg !14411
  ret i1 %4, !dbg !14412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14413 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14415, metadata !DIExpression()), !dbg !14416
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14417
  %3 = load i16, i16* %2, align 2, !dbg !14417
  %4 = icmp ult i16 %3, 128, !dbg !14418
  %5 = zext i1 %4 to i32, !dbg !14418
  ret i32 %5, !dbg !14419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14420 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14426, metadata !DIExpression()), !dbg !14427
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14428
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14429
  %4 = xor i1 %3, true, !dbg !14430
  ret i1 %4, !dbg !14431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14432 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14438, metadata !DIExpression()), !dbg !14439
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14440
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14440
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14441
  ret i1 %4, !dbg !14442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14443 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14445, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14446, metadata !DIExpression()), !dbg !14447
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14448
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14448
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14449
  br i1 %5, label %9, label %6, !dbg !14450

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14451
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14451
  br label %9, !dbg !14450

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14450
  ret %struct._dnode* %10, !dbg !14452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.277(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14453 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14457, metadata !DIExpression()), !dbg !14458
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14459
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14459
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14460
  ret i1 %4, !dbg !14461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14462 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14466, metadata !DIExpression()), !dbg !14469
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14470
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14470
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14467, metadata !DIExpression()), !dbg !14469
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14471
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14471
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14468, metadata !DIExpression()), !dbg !14469
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14472
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14473
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14474
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14475
  tail call fastcc void @sys_dnode_init.278(%struct._dnode* noundef %0) #24, !dbg !14476
  ret void, !dbg !14477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.278(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14478 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14480, metadata !DIExpression()), !dbg !14481
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14482
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14483
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14484
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14485
  ret void, !dbg !14486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14487 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14491, metadata !DIExpression()), !dbg !14493
  call void @llvm.dbg.value(metadata i32 %1, metadata !14492, metadata !DIExpression()), !dbg !14493
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14494
  %4 = load i8, i8* %3, align 1, !dbg !14494
  %5 = zext i8 %4 to i32, !dbg !14495
  %6 = and i32 %5, %1, !dbg !14496
  %7 = icmp ne i32 %6, 0, !dbg !14497
  ret i1 %7, !dbg !14498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.279(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14501, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i32 %1, metadata !14502, metadata !DIExpression()), !dbg !14503
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.280(i32 noundef %0, i32 noundef %1) #24, !dbg !14504
  ret i1 %3, !dbg !14505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.280(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14506 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14508, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata i32 %1, metadata !14509, metadata !DIExpression()), !dbg !14510
  %3 = icmp slt i32 %0, %1, !dbg !14511
  ret i1 %3, !dbg !14512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14513 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14515, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i32 0, metadata !14516, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !14521
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14523, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14525
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !14525
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14521
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14526
  br i1 %3, label %5, label %4, !dbg !14527

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14528
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14528
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14528
  unreachable, !dbg !14528

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14525
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14521
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14529
  call void @llvm.dbg.value(metadata i32 undef, metadata !14518, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata i32 undef, metadata !14516, metadata !DIExpression()), !dbg !14520
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14530
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14535
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !14535
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14537
  br i1 %6, label %8, label %7, !dbg !14538

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14539
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14539
  unreachable, !dbg !14539

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14523
  call void @llvm.dbg.value(metadata i32 %9, metadata !14011, metadata !DIExpression()) #23, !dbg !14525
  call void @llvm.dbg.value(metadata i32 %9, metadata !14005, metadata !DIExpression()) #23, !dbg !14521
  call void @llvm.dbg.value(metadata i32 %9, metadata !14518, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !14540
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14542, !srcloc !14053
  call void @llvm.dbg.value(metadata i32 1, metadata !14516, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata i32 undef, metadata !14516, metadata !DIExpression()), !dbg !14520
  ret void, !dbg !14543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14546, metadata !DIExpression()), !dbg !14547
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14548
  br i1 %2, label %27, label %3, !dbg !14550

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14551
  br i1 %4, label %5, label %27, !dbg !14552

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14208, metadata !DIExpression()) #23, !dbg !14553
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14556
  %7 = load i8, i8* %6, align 1, !dbg !14557
  %8 = or i8 %7, -128, !dbg !14557
  store i8 %8, i8* %6, align 1, !dbg !14557
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14215, metadata !DIExpression()) #23, !dbg !14558
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14222, metadata !DIExpression()) #23, !dbg !14560
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !14560
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14562
  br i1 %9, label %10, label %11, !dbg !14563

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 186) #25, !dbg !14564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 186) #25, !dbg !14564
  unreachable, !dbg !14564

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.274(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14565
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14229, metadata !DIExpression()) #23, !dbg !14560
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14566
  br i1 %13, label %24, label %14, !dbg !14565

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14229, metadata !DIExpression()) #23, !dbg !14560
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14567
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14229, metadata !DIExpression()) #23, !dbg !14560
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !14568
  %18 = icmp sgt i32 %17, 0, !dbg !14569
  br i1 %18, label %19, label %21, !dbg !14570

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14571
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !14572
  br label %26, !dbg !14573

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !14566
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14229, metadata !DIExpression()) #23, !dbg !14560
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14566
  br i1 %23, label %24, label %14, !dbg !14565, !llvm.loop !14574

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14576
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !14577
  br label %26, !dbg !14578

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14579
  br label %27, !dbg !14580

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14582 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14584, metadata !DIExpression()), !dbg !14585
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14586
  br i1 %2, label %6, label %3, !dbg !14587

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14588
  %5 = xor i1 %4, true, !dbg !14587
  br label %6, !dbg !14587

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14589
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14590 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14592, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i32 0, metadata !14593, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !14598
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14600, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14602
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !14602
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14598
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14603
  br i1 %3, label %5, label %4, !dbg !14604

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14605
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14605
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14605
  unreachable, !dbg !14605

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14602
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14598
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14606
  call void @llvm.dbg.value(metadata i32 undef, metadata !14595, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i32 undef, metadata !14593, metadata !DIExpression()), !dbg !14597
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14610
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !14610
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14612
  br i1 %6, label %8, label %7, !dbg !14613

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14614
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14614
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14614
  unreachable, !dbg !14614

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14600
  call void @llvm.dbg.value(metadata i32 %9, metadata !14011, metadata !DIExpression()) #23, !dbg !14602
  call void @llvm.dbg.value(metadata i32 %9, metadata !14005, metadata !DIExpression()) #23, !dbg !14598
  call void @llvm.dbg.value(metadata i32 %9, metadata !14595, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !14615
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14617, !srcloc !14053
  call void @llvm.dbg.value(metadata i32 1, metadata !14593, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata i32 undef, metadata !14593, metadata !DIExpression()), !dbg !14597
  ret void, !dbg !14618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14621, metadata !DIExpression()), !dbg !14623
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !14624
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14626, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14628
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !14628
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14624
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14629
  br i1 %3, label %5, label %4, !dbg !14630

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14631
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14631
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14631
  unreachable, !dbg !14631

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14626
  call void @llvm.dbg.value(metadata i32 %6, metadata !14011, metadata !DIExpression()) #23, !dbg !14628
  call void @llvm.dbg.value(metadata i32 %6, metadata !14005, metadata !DIExpression()) #23, !dbg !14624
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14632
  call void @llvm.dbg.value(metadata i32 %6, metadata !14622, metadata !DIExpression()), !dbg !14623
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14633
  br i1 %7, label %8, label %12, !dbg !14635

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !14636
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14639
  br i1 %9, label %11, label %10, !dbg !14640

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14641
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14641
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14641
  unreachable, !dbg !14641

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14033, metadata !DIExpression()) #23, !dbg !14636
  call void @llvm.dbg.value(metadata i32 %6, metadata !14047, metadata !DIExpression()) #23, !dbg !14642
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14644, !srcloc !14053
  br label %14, !dbg !14645

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.285(%struct.k_thread* noundef %0) #24, !dbg !14646
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14647
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14648
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14648
  br label %14, !dbg !14649

14:                                               ; preds = %12, %11
  ret void, !dbg !14649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14652, metadata !DIExpression()), !dbg !14653
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14654
  %3 = load i8, i8* %2, align 1, !dbg !14654
  %4 = and i8 %3, 4, !dbg !14655
  %5 = icmp eq i8 %4, 0, !dbg !14656
  ret i1 %5, !dbg !14657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.285(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14658 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14660, metadata !DIExpression()), !dbg !14661
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14662
  %3 = load i8, i8* %2, align 1, !dbg !14663
  %4 = and i8 %3, -5, !dbg !14663
  store i8 %4, i8* %2, align 1, !dbg !14663
  ret void, !dbg !14664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14665 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14668, metadata !DIExpression()), !dbg !14669
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14667, metadata !DIExpression()), !dbg !14669
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14670
  br i1 %4, label %5, label %12, !dbg !14672

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14673
  br i1 %6, label %7, label %12, !dbg !14674

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()) #23, !dbg !14681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14680, metadata !DIExpression()) #23, !dbg !14681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14684, metadata !DIExpression()) #23, !dbg !14689
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14691
  br i1 %8, label %10, label %9, !dbg !14694

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !14695
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14695
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !14695
  unreachable, !dbg !14695

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14675, metadata !DIExpression()) #23, !dbg !14681
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14697
  br label %16, !dbg !14698

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14038, metadata !DIExpression()) #23, !dbg !14699
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14702
  br i1 %13, label %15, label %14, !dbg !14703

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14704
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14704
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14704
  unreachable, !dbg !14704

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14033, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata i32 %3, metadata !14047, metadata !DIExpression()) #23, !dbg !14705
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14707, !srcloc !14053
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14708
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14713, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.value(metadata i32 %0, metadata !14715, metadata !DIExpression()), !dbg !14720
  %2 = icmp eq i32 %0, 0, !dbg !14722
  br i1 %2, label %3, label %6, !dbg !14723

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14724, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 %4, metadata !14727, metadata !DIExpression()) #23, !dbg !14732
  %5 = icmp eq i32 %4, 0, !dbg !14733
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14714
  ret i1 %7, !dbg !14734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14735 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14738
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14737, metadata !DIExpression()), !dbg !14739
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14740
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14741
  ret i1 %3, !dbg !14742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14745, metadata !DIExpression()), !dbg !14747
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14748
  call void @llvm.dbg.value(metadata i32 %2, metadata !14746, metadata !DIExpression()), !dbg !14747
  ret i32 %2, !dbg !14749
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14750 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14752, metadata !DIExpression()), !dbg !14756
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14757
  call void @llvm.dbg.value(metadata i32 0, metadata !14753, metadata !DIExpression()), !dbg !14758
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !14759
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14761, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14763
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !14763
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14759
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14764
  br i1 %4, label %6, label %5, !dbg !14765

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14766
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14766
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14766
  unreachable, !dbg !14766

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14761
  call void @llvm.dbg.value(metadata i32 %7, metadata !14011, metadata !DIExpression()) #23, !dbg !14763
  call void @llvm.dbg.value(metadata i32 %7, metadata !14005, metadata !DIExpression()) #23, !dbg !14759
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14767
  call void @llvm.dbg.value(metadata i32 %7, metadata !14755, metadata !DIExpression()), !dbg !14758
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()), !dbg !14758
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14768
  br i1 %8, label %9, label %13, !dbg !14772

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14191, metadata !DIExpression()) #23, !dbg !14773
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14776
  %11 = load i8, i8* %10, align 1, !dbg !14777
  %12 = and i8 %11, 127, !dbg !14777
  store i8 %12, i8* %10, align 1, !dbg !14777
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14199, metadata !DIExpression()) #23, !dbg !14778
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14780
  br label %13, !dbg !14781

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14782
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14783
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14784
  %16 = zext i1 %15 to i32, !dbg !14784
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14785
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !14786
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14788
  br i1 %17, label %19, label %18, !dbg !14789

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14790
  unreachable, !dbg !14790

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14033, metadata !DIExpression()) #23, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %7, metadata !14047, metadata !DIExpression()) #23, !dbg !14791
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14793, !srcloc !14053
  call void @llvm.dbg.value(metadata i32 1, metadata !14753, metadata !DIExpression()), !dbg !14758
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()), !dbg !14758
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14794
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14796
  br i1 %21, label %22, label %23, !dbg !14797

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14798
  br label %23, !dbg !14800

23:                                               ; preds = %22, %19
  ret void, !dbg !14801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14802 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14804, metadata !DIExpression()), !dbg !14805
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14806
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14807
  ret i32 %3, !dbg !14808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14809 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14811, metadata !DIExpression()), !dbg !14812
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14813
  %3 = load i8, i8* %2, align 1, !dbg !14814
  %4 = or i8 %3, 16, !dbg !14814
  store i8 %4, i8* %2, align 1, !dbg !14814
  ret void, !dbg !14815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14816 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14817, !srcloc !14014
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14817
  call void @llvm.dbg.value(metadata i32 %2, metadata !14011, metadata !DIExpression()) #23, !dbg !14819
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !14819
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14820
  ret void, !dbg !14821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14824, metadata !DIExpression()), !dbg !14825
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14826
  br i1 %2, label %3, label %5, !dbg !14828

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14829
  br label %6, !dbg !14831

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14047, metadata !DIExpression()) #23, !dbg !14832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14835, !srcloc !14053
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14836
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14837 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14839, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !14842
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14844, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14846
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !14846
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14842
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14847
  br i1 %3, label %5, label %4, !dbg !14848

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14849
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14849
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14849
  unreachable, !dbg !14849

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14844
  call void @llvm.dbg.value(metadata i32 %6, metadata !14011, metadata !DIExpression()) #23, !dbg !14846
  call void @llvm.dbg.value(metadata i32 %6, metadata !14005, metadata !DIExpression()) #23, !dbg !14842
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14850
  call void @llvm.dbg.value(metadata i32 %6, metadata !14840, metadata !DIExpression()), !dbg !14841
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14851
  br i1 %7, label %12, label %8, !dbg !14853

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !14854
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14857
  br i1 %9, label %11, label %10, !dbg !14858

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14859
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14859
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14859
  unreachable, !dbg !14859

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14033, metadata !DIExpression()) #23, !dbg !14854
  call void @llvm.dbg.value(metadata i32 %6, metadata !14047, metadata !DIExpression()) #23, !dbg !14860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14862, !srcloc !14053
  br label %14, !dbg !14863

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14864
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14865
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14866
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14866
  br label %14, !dbg !14867

14:                                               ; preds = %12, %11
  ret void, !dbg !14867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14868 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14870, metadata !DIExpression()), !dbg !14871
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14872
  %3 = load i8, i8* %2, align 1, !dbg !14872
  %4 = and i8 %3, 16, !dbg !14873
  %5 = icmp ne i8 %4, 0, !dbg !14874
  ret i1 %5, !dbg !14875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14876 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14878, metadata !DIExpression()), !dbg !14879
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14880
  %3 = load i8, i8* %2, align 1, !dbg !14881
  %4 = and i8 %3, -17, !dbg !14881
  store i8 %4, i8* %2, align 1, !dbg !14881
  ret void, !dbg !14882
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14883 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14893, metadata !DIExpression()), !dbg !14897
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14891, metadata !DIExpression()), !dbg !14897
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14892, metadata !DIExpression()), !dbg !14897
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14898
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14898
  br i1 %5, label %9, label %6, !dbg !14898

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !14898
  br i1 %7, label %9, label %8, !dbg !14901

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 773) #25, !dbg !14902
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 773) #25, !dbg !14902
  unreachable, !dbg !14902

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14894, metadata !DIExpression()), !dbg !14904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !14905
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14907, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !14909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14905
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14910
  br i1 %11, label %13, label %12, !dbg !14911

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14912
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14912
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !14912
  unreachable, !dbg !14912

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !14905
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14913
  call void @llvm.dbg.value(metadata i32 undef, metadata !14896, metadata !DIExpression()), !dbg !14904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14894, metadata !DIExpression()), !dbg !14904
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14914
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14917
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !14917
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14919
  br i1 %14, label %16, label %15, !dbg !14920

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14921
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14921
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !14921
  unreachable, !dbg !14921

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14907
  call void @llvm.dbg.value(metadata i32 %17, metadata !14011, metadata !DIExpression()) #23, !dbg !14909
  call void @llvm.dbg.value(metadata i32 %17, metadata !14005, metadata !DIExpression()) #23, !dbg !14905
  call void @llvm.dbg.value(metadata i32 %17, metadata !14896, metadata !DIExpression()), !dbg !14904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !14917
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !14922
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14924, !srcloc !14053
  call void @llvm.dbg.value(metadata i32 1, metadata !14894, metadata !DIExpression()), !dbg !14904
  call void @llvm.dbg.value(metadata i32 undef, metadata !14894, metadata !DIExpression()), !dbg !14904
  ret void, !dbg !14925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14926 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14928, metadata !DIExpression()), !dbg !14929
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14930
  %3 = load i8, i8* %2, align 1, !dbg !14930
  %4 = and i8 %3, 1, !dbg !14931
  %5 = icmp ne i8 %4, 0, !dbg !14932
  ret i1 %5, !dbg !14933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14934 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14938, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14936, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14937, metadata !DIExpression()), !dbg !14939
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !14940
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14941
  ret void, !dbg !14942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14943 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14947, metadata !DIExpression()), !dbg !14949
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14948, metadata !DIExpression()), !dbg !14949
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14950
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14951
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14952
  br i1 %3, label %24, label %4, !dbg !14954

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14955
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14957
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14958
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14222, metadata !DIExpression()) #23, !dbg !14959
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !14959
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14961
  br i1 %7, label %8, label %9, !dbg !14962

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 186) #25, !dbg !14963
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 186) #25, !dbg !14963
  unreachable, !dbg !14963

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.274(%struct._dnode* noundef nonnull %6) #25, !dbg !14964
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14229, metadata !DIExpression()) #23, !dbg !14959
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14965
  br i1 %11, label %22, label %12, !dbg !14964

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14229, metadata !DIExpression()) #23, !dbg !14959
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14966
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14229, metadata !DIExpression()) #23, !dbg !14959
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !14967
  %16 = icmp sgt i32 %15, 0, !dbg !14968
  br i1 %16, label %17, label %19, !dbg !14969

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14970
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14971
  br label %24, !dbg !14972

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !14965
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14229, metadata !DIExpression()) #23, !dbg !14959
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14965
  br i1 %21, label %22, label %12, !dbg !14964, !llvm.loop !14973

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14975
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !14976
  br label %24, !dbg !14977

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14979 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14984, metadata !DIExpression()), !dbg !14985
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14983, metadata !DIExpression()), !dbg !14985
  %4 = icmp eq i64 %3, -1, !dbg !14986
  br i1 %4, label %6, label %5, !dbg !14988

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.289(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14989
  br label %6, !dbg !14991

6:                                                ; preds = %5, %2
  ret void, !dbg !14992
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.289(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14993 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14996, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14995, metadata !DIExpression()), !dbg !14997
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14998
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14999
  ret void, !dbg !15000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15001 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15003, metadata !DIExpression()), !dbg !15011
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15012
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15012
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15004, metadata !DIExpression()), !dbg !15011
  call void @llvm.dbg.value(metadata i32 0, metadata !15005, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15014
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15016, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15018
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15018
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15014
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15019
  br i1 %5, label %7, label %6, !dbg !15020

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15021
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15021
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15021
  unreachable, !dbg !15021

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15018
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15014
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15007, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.value(metadata i32 undef, metadata !15005, metadata !DIExpression()), !dbg !15013
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15023
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15024
  %10 = load i8, i8* %9, align 1, !dbg !15024
  %11 = and i8 %10, 40, !dbg !15025
  %12 = icmp eq i8 %11, 0, !dbg !15025
  call void @llvm.dbg.value(metadata i1 %12, metadata !15008, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15026
  br i1 %12, label %13, label %20, !dbg !15027

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15028
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15028
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15028
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15032
  br i1 %17, label %19, label %18, !dbg !15033

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15034
  br label %19, !dbg !15036

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.285(%struct.k_thread* noundef nonnull %3) #24, !dbg !15037
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15038
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15039
  br label %20, !dbg !15040

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !15041
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15043
  br i1 %21, label %23, label %22, !dbg !15044

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15045
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15045
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15045
  unreachable, !dbg !15045

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15016
  call void @llvm.dbg.value(metadata i32 %24, metadata !14011, metadata !DIExpression()) #23, !dbg !15018
  call void @llvm.dbg.value(metadata i32 %24, metadata !14005, metadata !DIExpression()) #23, !dbg !15014
  call void @llvm.dbg.value(metadata i32 %24, metadata !15007, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15041
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !15046
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15048, !srcloc !14053
  call void @llvm.dbg.value(metadata i32 1, metadata !15005, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.value(metadata i32 undef, metadata !15005, metadata !DIExpression()), !dbg !15013
  ret void, !dbg !15049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15050 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15052, metadata !DIExpression()), !dbg !15053
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15054
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15055
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15056
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15057
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15058
  ret void, !dbg !15059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15064, metadata !DIExpression()), !dbg !15065
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15066
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15066
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15066
  br i1 %4, label %5, label %6, !dbg !15069

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 726) #25, !dbg !15070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 726) #25, !dbg !15070
  unreachable, !dbg !15070

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15073 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15075, metadata !DIExpression()), !dbg !15076
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15077
  %3 = load i8, i8* %2, align 1, !dbg !15078
  %4 = and i8 %3, -3, !dbg !15078
  store i8 %4, i8* %2, align 1, !dbg !15078
  ret void, !dbg !15079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15082, metadata !DIExpression()), !dbg !15083
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15084
  br i1 %2, label %3, label %7, !dbg !15086

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14191, metadata !DIExpression()) #23, !dbg !15087
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15090
  %5 = load i8, i8* %4, align 1, !dbg !15091
  %6 = and i8 %5, 127, !dbg !15091
  store i8 %6, i8* %4, align 1, !dbg !15091
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14199, metadata !DIExpression()) #23, !dbg !15092
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15094
  br label %7, !dbg !15095

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15096
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15097
  %10 = zext i1 %9 to i32, !dbg !15097
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15098
  ret void, !dbg !15099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15102, metadata !DIExpression()), !dbg !15103
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15104
  %3 = load i8, i8* %2, align 1, !dbg !15105
  %4 = or i8 %3, 2, !dbg !15105
  store i8 %4, i8* %2, align 1, !dbg !15105
  ret void, !dbg !15106
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15107 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15109, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata i32 0, metadata !15110, metadata !DIExpression()), !dbg !15114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15115
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15117, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15119
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15119
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15115
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15120
  br i1 %3, label %5, label %4, !dbg !15121

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15122
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15122
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15122
  unreachable, !dbg !15122

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15119
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15115
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15123
  call void @llvm.dbg.value(metadata i32 undef, metadata !15112, metadata !DIExpression()), !dbg !15114
  call void @llvm.dbg.value(metadata i32 undef, metadata !15110, metadata !DIExpression()), !dbg !15114
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15124
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !15127
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15129
  br i1 %6, label %8, label %7, !dbg !15130

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15131
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15131
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15131
  unreachable, !dbg !15131

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15117
  call void @llvm.dbg.value(metadata i32 %9, metadata !14011, metadata !DIExpression()) #23, !dbg !15119
  call void @llvm.dbg.value(metadata i32 %9, metadata !14005, metadata !DIExpression()) #23, !dbg !15115
  call void @llvm.dbg.value(metadata i32 %9, metadata !15112, metadata !DIExpression()), !dbg !15114
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15127
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !15132
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15134, !srcloc !14053
  call void @llvm.dbg.value(metadata i32 1, metadata !15110, metadata !DIExpression()), !dbg !15114
  call void @llvm.dbg.value(metadata i32 undef, metadata !15110, metadata !DIExpression()), !dbg !15114
  ret void, !dbg !15135
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15136 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15142, metadata !DIExpression()), !dbg !15147
  call void @llvm.dbg.value(metadata i32 %0, metadata !15140, metadata !DIExpression()), !dbg !15147
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15141, metadata !DIExpression()), !dbg !15147
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15148
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15149
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15150
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15151
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15152
  call void @llvm.dbg.value(metadata i32 %6, metadata !15143, metadata !DIExpression()), !dbg !15147
  call void @llvm.dbg.value(metadata i32 0, metadata !15144, metadata !DIExpression()), !dbg !15153
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15154
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15156, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15158
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15158
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15154
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15159
  br i1 %8, label %10, label %9, !dbg !15160

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15161
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15161
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15161
  unreachable, !dbg !15161

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15158
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15154
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !15146, metadata !DIExpression()), !dbg !15153
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()), !dbg !15153
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15163
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15167
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15168
  br i1 %13, label %14, label %15, !dbg !15169

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15170
  br label %15, !dbg !15172

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15173
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !15173
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15175
  br i1 %16, label %18, label %17, !dbg !15176

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15177
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15177
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15177
  unreachable, !dbg !15177

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15156
  call void @llvm.dbg.value(metadata i32 %19, metadata !14011, metadata !DIExpression()) #23, !dbg !15158
  call void @llvm.dbg.value(metadata i32 %19, metadata !14005, metadata !DIExpression()) #23, !dbg !15154
  call void @llvm.dbg.value(metadata i32 %19, metadata !15146, metadata !DIExpression()), !dbg !15153
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15173
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !15178
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15180, !srcloc !14053
  call void @llvm.dbg.value(metadata i32 1, metadata !15144, metadata !DIExpression()), !dbg !15153
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()), !dbg !15153
  ret i32 %6, !dbg !15181
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15182 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15187, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i64 undef, metadata !15189, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15186, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15188, metadata !DIExpression()), !dbg !15190
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15191
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15192
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15193
  br i1 %6, label %7, label %8, !dbg !15196

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 846) #25, !dbg !15197
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 846) #25, !dbg !15197
  unreachable, !dbg !15197

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15199
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15201, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15199
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15204
  br i1 %10, label %12, label %11, !dbg !15205

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15206
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15206
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15206
  unreachable, !dbg !15206

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15203
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15199
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15207
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15208
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14684, metadata !DIExpression()) #23, !dbg !15210
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15212
  br i1 %14, label %16, label %15, !dbg !15213

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !15214
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15214
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !15214
  unreachable, !dbg !15214

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()) #23, !dbg !15215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14680, metadata !DIExpression()) #23, !dbg !15215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14684, metadata !DIExpression()) #23, !dbg !15217
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15219
  br i1 %17, label %19, label %18, !dbg !15220

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !15221
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15221
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !15221
  unreachable, !dbg !15221

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14675, metadata !DIExpression()) #23, !dbg !15215
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15222
  ret i32 %21, !dbg !15223
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15224 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15228, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15229, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata i32 0, metadata !15230, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15235
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15237, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15239
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15239
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15235
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15240
  br i1 %3, label %5, label %4, !dbg !15241

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15242
  unreachable, !dbg !15242

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15239
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15235
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15243
  call void @llvm.dbg.value(metadata i32 undef, metadata !15232, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15229, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata i32 undef, metadata !15230, metadata !DIExpression()), !dbg !15234
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15244
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15229, metadata !DIExpression()), !dbg !15233
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15247
  br i1 %8, label %10, label %9, !dbg !15249

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15250
  br label %10, !dbg !15252

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !15253
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15255
  br i1 %11, label %13, label %12, !dbg !15256

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15257
  unreachable, !dbg !15257

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15237
  call void @llvm.dbg.value(metadata i32 %14, metadata !14011, metadata !DIExpression()) #23, !dbg !15239
  call void @llvm.dbg.value(metadata i32 %14, metadata !14005, metadata !DIExpression()) #23, !dbg !15235
  call void @llvm.dbg.value(metadata i32 %14, metadata !15232, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15253
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !15258
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15260, !srcloc !14053
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15229, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata i32 undef, metadata !15230, metadata !DIExpression()), !dbg !15234
  ret %struct.k_thread* %7, !dbg !15261
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15262 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15264, metadata !DIExpression()), !dbg !15269
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15265, metadata !DIExpression()), !dbg !15269
  call void @llvm.dbg.value(metadata i32 0, metadata !15266, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15271
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15273, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15271
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15276
  br i1 %3, label %5, label %4, !dbg !15277

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15278
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15278
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15278
  unreachable, !dbg !15278

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15271
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15279
  call void @llvm.dbg.value(metadata i32 undef, metadata !15268, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15265, metadata !DIExpression()), !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !15266, metadata !DIExpression()), !dbg !15270
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15280
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15265, metadata !DIExpression()), !dbg !15269
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15283
  br i1 %8, label %11, label %9, !dbg !15285

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15286
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15288
  br label %11, !dbg !15289

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15290
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !15290
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15292
  br i1 %12, label %14, label %13, !dbg !15293

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15294
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15294
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15294
  unreachable, !dbg !15294

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15273
  call void @llvm.dbg.value(metadata i32 %15, metadata !14011, metadata !DIExpression()) #23, !dbg !15275
  call void @llvm.dbg.value(metadata i32 %15, metadata !14005, metadata !DIExpression()) #23, !dbg !15271
  call void @llvm.dbg.value(metadata i32 %15, metadata !15268, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !15295
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15297, !srcloc !14053
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15265, metadata !DIExpression()), !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !15266, metadata !DIExpression()), !dbg !15270
  ret %struct.k_thread* %7, !dbg !15298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15301, metadata !DIExpression()), !dbg !15302
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15109, metadata !DIExpression()) #23, !dbg !15303
  call void @llvm.dbg.value(metadata i32 0, metadata !15110, metadata !DIExpression()) #23, !dbg !15305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15306
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15308, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15310
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15310
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15306
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15311
  br i1 %3, label %5, label %4, !dbg !15312

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15313
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15313
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15313
  unreachable, !dbg !15313

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15310
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15306
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15314
  call void @llvm.dbg.value(metadata i32 undef, metadata !15112, metadata !DIExpression()) #23, !dbg !15305
  call void @llvm.dbg.value(metadata i32 undef, metadata !15110, metadata !DIExpression()) #23, !dbg !15305
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !15316
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15318
  br i1 %6, label %8, label %7, !dbg !15319

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15320
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15320
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15320
  unreachable, !dbg !15320

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %9, metadata !14011, metadata !DIExpression()) #23, !dbg !15310
  call void @llvm.dbg.value(metadata i32 %9, metadata !14005, metadata !DIExpression()) #23, !dbg !15306
  call void @llvm.dbg.value(metadata i32 %9, metadata !15112, metadata !DIExpression()) #23, !dbg !15305
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15316
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !15321
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15323, !srcloc !14053
  call void @llvm.dbg.value(metadata i32 1, metadata !15110, metadata !DIExpression()) #23, !dbg !15305
  call void @llvm.dbg.value(metadata i32 undef, metadata !15110, metadata !DIExpression()) #23, !dbg !15305
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15324
  ret void, !dbg !15325
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15326 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15328, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 %1, metadata !15329, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i8 0, metadata !15330, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 0, metadata !15331, metadata !DIExpression()), !dbg !15335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15336
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15338, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15340
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15340
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15336
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15341
  br i1 %4, label %6, label %5, !dbg !15342

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15343
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15343
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15343
  unreachable, !dbg !15343

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15340
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15336
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15344
  call void @llvm.dbg.value(metadata i32 undef, metadata !15333, metadata !DIExpression()), !dbg !15335
  call void @llvm.dbg.value(metadata i8 poison, metadata !15330, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 undef, metadata !15331, metadata !DIExpression()), !dbg !15335
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15345
  call void @llvm.dbg.value(metadata i1 %9, metadata !15330, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15334
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15348

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14191, metadata !DIExpression()) #23, !dbg !15349
  %14 = load i8, i8* %7, align 1, !dbg !15355
  %15 = and i8 %14, 127, !dbg !15355
  store i8 %15, i8* %7, align 1, !dbg !15355
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14199, metadata !DIExpression()) #23, !dbg !15356
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15358
  store i8 %12, i8* %11, align 2, !dbg !15359
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14208, metadata !DIExpression()) #23, !dbg !15360
  %16 = load i8, i8* %7, align 1, !dbg !15362
  %17 = or i8 %16, -128, !dbg !15362
  store i8 %17, i8* %7, align 1, !dbg !15362
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14215, metadata !DIExpression()) #23, !dbg !15363
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14222, metadata !DIExpression()) #23, !dbg !15365
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !15365
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15367
  br i1 %18, label %19, label %20, !dbg !15368

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 186) #25, !dbg !15369
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 186) #25, !dbg !15369
  unreachable, !dbg !15369

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.274(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15370
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14229, metadata !DIExpression()) #23, !dbg !15365
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15371
  br i1 %22, label %32, label %23, !dbg !15370

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14229, metadata !DIExpression()) #23, !dbg !15365
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15372
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14229, metadata !DIExpression()) #23, !dbg !15365
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15373
  %27 = icmp sgt i32 %26, 0, !dbg !15374
  br i1 %27, label %28, label %29, !dbg !15375

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15376
  br label %33, !dbg !15377

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15371
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14229, metadata !DIExpression()) #23, !dbg !15365
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15371
  br i1 %31, label %32, label %23, !dbg !15370, !llvm.loop !15378

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15380
  br label %33, !dbg !15381

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15382
  br label %35, !dbg !15383

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15384
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15386
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !15386
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15388
  br i1 %36, label %38, label %37, !dbg !15389

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15390
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15390
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15390
  unreachable, !dbg !15390

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15338
  call void @llvm.dbg.value(metadata i32 %39, metadata !14011, metadata !DIExpression()) #23, !dbg !15340
  call void @llvm.dbg.value(metadata i32 %39, metadata !14005, metadata !DIExpression()) #23, !dbg !15336
  call void @llvm.dbg.value(metadata i32 %39, metadata !15333, metadata !DIExpression()), !dbg !15335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15386
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !15391
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15393, !srcloc !14053
  call void @llvm.dbg.value(metadata i8 poison, metadata !15330, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 undef, metadata !15331, metadata !DIExpression()), !dbg !15335
  ret i1 %9, !dbg !15394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15395 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15399, metadata !DIExpression()), !dbg !15402
  call void @llvm.dbg.value(metadata i32 %1, metadata !15400, metadata !DIExpression()), !dbg !15402
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15403
  call void @llvm.dbg.value(metadata i1 %3, metadata !15401, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15402
  br i1 %3, label %4, label %12, !dbg !15404

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15406
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15407
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15407
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15407
  %9 = load i8, i8* %8, align 1, !dbg !15407
  %10 = icmp eq i8 %9, 0, !dbg !15408
  br i1 %10, label %11, label %12, !dbg !15409

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15410
  br label %12, !dbg !15412

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15414 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15416, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15420
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15422, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15424
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15424
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15420
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15425
  br i1 %2, label %4, label %3, !dbg !15426

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15427
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15427
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15427
  unreachable, !dbg !15427

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15424
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15420
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15428
  call void @llvm.dbg.value(metadata i32 undef, metadata !15418, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata i32 undef, metadata !15416, metadata !DIExpression()), !dbg !15419
  tail call fastcc void @z_sched_lock() #24, !dbg !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !15432
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15434
  br i1 %5, label %7, label %6, !dbg !15435

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15436
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15436
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15436
  unreachable, !dbg !15436

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15422
  call void @llvm.dbg.value(metadata i32 %8, metadata !14011, metadata !DIExpression()) #23, !dbg !15424
  call void @llvm.dbg.value(metadata i32 %8, metadata !14005, metadata !DIExpression()) #23, !dbg !15420
  call void @llvm.dbg.value(metadata i32 %8, metadata !15418, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15432
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !15437
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15439, !srcloc !14053
  call void @llvm.dbg.value(metadata i32 1, metadata !15416, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata i32 undef, metadata !15416, metadata !DIExpression()), !dbg !15419
  ret void, !dbg !15440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15441 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15442, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 %1, metadata !14727, metadata !DIExpression()) #23, !dbg !15447
  %2 = icmp eq i32 %1, 0, !dbg !15448
  br i1 %2, label %4, label %3, !dbg !15449

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.303, i32 0, i32 0), i32 noundef 253) #25, !dbg !15450
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0)) #25, !dbg !15450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.303, i32 0, i32 0), i32 noundef 253) #25, !dbg !15450
  unreachable, !dbg !15450

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15452
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15452
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15452
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15452
  %9 = load i8, i8* %8, align 1, !dbg !15452
  %10 = icmp eq i8 %9, 1, !dbg !15452
  br i1 %10, label %11, label %12, !dbg !15455

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.303, i32 0, i32 0), i32 noundef 254) #25, !dbg !15456
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0)) #25, !dbg !15456
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.303, i32 0, i32 0), i32 noundef 254) #25, !dbg !15456
  unreachable, !dbg !15456

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15458
  store i8 %13, i8* %8, align 1, !dbg !15458
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15459, !srcloc !15461
  ret void, !dbg !15462
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15463 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15465, metadata !DIExpression()), !dbg !15468
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15469
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15471, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15473
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15473
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15469
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15474
  br i1 %2, label %4, label %3, !dbg !15475

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15476
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15476
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15476
  unreachable, !dbg !15476

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15473
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15469
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !15467, metadata !DIExpression()), !dbg !15468
  call void @llvm.dbg.value(metadata i32 undef, metadata !15465, metadata !DIExpression()), !dbg !15468
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15478
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15478
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15478
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15478
  %9 = load i8, i8* %8, align 1, !dbg !15478
  %10 = icmp eq i8 %9, 0, !dbg !15478
  br i1 %10, label %11, label %12, !dbg !15483

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 999) #25, !dbg !15484
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0)) #25, !dbg !15484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 999) #25, !dbg !15484
  unreachable, !dbg !15484

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15486, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 %13, metadata !14727, metadata !DIExpression()) #23, !dbg !15491
  %14 = icmp eq i32 %13, 0, !dbg !15492
  br i1 %14, label %16, label %15, !dbg !15493

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0)) #25, !dbg !15494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15494
  unreachable, !dbg !15494

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15496
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15497
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15497
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15497
  %21 = load i8, i8* %20, align 1, !dbg !15498
  %22 = add i8 %21, 1, !dbg !15498
  store i8 %22, i8* %20, align 1, !dbg !15498
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15499
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !15500
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15502
  br i1 %23, label %25, label %24, !dbg !15503

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !15504
  unreachable, !dbg !15504

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15471
  call void @llvm.dbg.value(metadata i32 %26, metadata !14011, metadata !DIExpression()) #23, !dbg !15473
  call void @llvm.dbg.value(metadata i32 %26, metadata !14005, metadata !DIExpression()) #23, !dbg !15469
  call void @llvm.dbg.value(metadata i32 %26, metadata !15467, metadata !DIExpression()), !dbg !15468
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !15500
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !15505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15507, !srcloc !14053
  call void @llvm.dbg.value(metadata i32 1, metadata !15465, metadata !DIExpression()), !dbg !15468
  call void @llvm.dbg.value(metadata i32 undef, metadata !15465, metadata !DIExpression()), !dbg !15468
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15508
  ret void, !dbg !15509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15510 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15511
  ret %struct.k_thread* %1, !dbg !15512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15513 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15517, metadata !DIExpression()), !dbg !15522
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15518, metadata !DIExpression()), !dbg !15522
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15523
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15519, metadata !DIExpression()), !dbg !15522
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15524
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15520, metadata !DIExpression()), !dbg !15522
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15525
  call void @llvm.dbg.value(metadata i32 %5, metadata !15521, metadata !DIExpression()), !dbg !15522
  %6 = icmp sgt i32 %5, 0, !dbg !15526
  br i1 %6, label %17, label %7, !dbg !15528

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15529
  br i1 %8, label %17, label %9, !dbg !15531

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15532
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15532
  %12 = load i32, i32* %11, align 8, !dbg !15532
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15534
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15534
  %15 = load i32, i32* %14, align 8, !dbg !15534
  %16 = icmp ult i32 %12, %15, !dbg !15535
  br label %17, !dbg !15536

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15537
  ret i1 %18, !dbg !15538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15539 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15556, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15557, metadata !DIExpression()), !dbg !15571
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15572
  br i1 %4, label %5, label %6, !dbg !15575

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15576
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15576
  unreachable, !dbg !15576

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15578
  %8 = load i32, i32* %7, align 4, !dbg !15579
  %9 = add nsw i32 %8, 1, !dbg !15579
  store i32 %9, i32* %7, align 4, !dbg !15579
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15580
  store i32 %8, i32* %10, align 8, !dbg !15581
  %11 = load i32, i32* %7, align 4, !dbg !15582
  %12 = icmp eq i32 %11, 0, !dbg !15583
  br i1 %12, label %13, label %35, !dbg !15584

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15585
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15585
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15559, metadata !DIExpression()), !dbg !15585
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15585
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15585
  %17 = load i32, i32* %16, align 4, !dbg !15585
  %18 = shl i32 %17, 2, !dbg !15585
  %19 = alloca i8, i32 %18, align 8, !dbg !15585
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15585
  store i8* %19, i8** %20, align 4, !dbg !15585
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15585
  %22 = alloca i8, i32 %17, align 8, !dbg !15585
  store i8* %22, i8** %21, align 4, !dbg !15585
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15585
  store i32 -1, i32* %23, align 4, !dbg !15585
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15586
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15568, metadata !DIExpression()), !dbg !15587
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15558, metadata !DIExpression()), !dbg !15571
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15588
  br i1 %25, label %26, label %27, !dbg !15585

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15588
  br label %35, !dbg !15589

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15558, metadata !DIExpression()), !dbg !15571
  %29 = load i32, i32* %7, align 4, !dbg !15590
  %30 = add nsw i32 %29, 1, !dbg !15590
  store i32 %30, i32* %7, align 4, !dbg !15590
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15592
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15592
  store i32 %29, i32* %32, align 8, !dbg !15593
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15586
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15568, metadata !DIExpression()), !dbg !15587
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15558, metadata !DIExpression()), !dbg !15571
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15588
  br i1 %34, label %26, label %27, !dbg !15585, !llvm.loop !15594

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15596
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15597
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !15598
  ret void, !dbg !15599
}

; Function Attrs: optsize
declare !dbg !15600 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15605 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15608 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15610, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15611, metadata !DIExpression()), !dbg !15612
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15613
  br i1 %3, label %4, label %5, !dbg !15616

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15617
  unreachable, !dbg !15617

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15619
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15620
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !15621
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15622
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15622
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15624
  br i1 %10, label %11, label %13, !dbg !15625

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15626
  store i32 0, i32* %12, align 4, !dbg !15628
  br label %13, !dbg !15629

13:                                               ; preds = %11, %5
  ret void, !dbg !15630
}

; Function Attrs: optsize
declare !dbg !15631 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15632 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15636, metadata !DIExpression()), !dbg !15639
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15637, metadata !DIExpression()), !dbg !15639
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15640
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !15641
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15638, metadata !DIExpression()), !dbg !15639
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15637, metadata !DIExpression()), !dbg !15639
  ret %struct.k_thread* %4, !dbg !15642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15643 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15647, metadata !DIExpression()), !dbg !15648
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !15649
  ret %struct.rbnode* %2, !dbg !15650
}

; Function Attrs: optsize
declare !dbg !15651 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15654 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15664, metadata !DIExpression()), !dbg !15668
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15669
  %3 = load i32, i32* %2, align 4, !dbg !15669
  %4 = icmp eq i32 %3, 0, !dbg !15671
  br i1 %4, label %10, label %5, !dbg !15672

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15665, metadata !DIExpression()), !dbg !15668
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15673, !range !7580
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15674
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15666, metadata !DIExpression()), !dbg !15668
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.274(%struct._dnode* noundef %7) #24, !dbg !15675
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15667, metadata !DIExpression()), !dbg !15668
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15665, metadata !DIExpression()), !dbg !15668
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15668
  ret %struct.k_thread* %11, !dbg !15676
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15677 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15681, metadata !DIExpression()), !dbg !15684
  call void @llvm.dbg.value(metadata i32 0, metadata !15682, metadata !DIExpression()), !dbg !15684
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.308(%struct._wait_q_t* noundef %0) #24, !dbg !15685
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15683, metadata !DIExpression()), !dbg !15684
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15686
  br i1 %3, label %8, label %4, !dbg !15687

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15688
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15690
  call void @llvm.dbg.value(metadata i32 1, metadata !15682, metadata !DIExpression()), !dbg !15684
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.308(%struct._wait_q_t* noundef %0) #24, !dbg !15685
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15683, metadata !DIExpression()), !dbg !15684
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15686
  br i1 %7, label %8, label %4, !dbg !15687, !llvm.loop !15691

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15684
  ret i32 %9, !dbg !15693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.308(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15694 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15696, metadata !DIExpression()), !dbg !15697
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15698
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.274(%struct._dnode* noundef %2) #24, !dbg !15699
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15700
  ret %struct.k_thread* %4, !dbg !15701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !15702 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15711, metadata !DIExpression()), !dbg !15712
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15713
  tail call fastcc void @sys_dlist_init.309(%struct._dnode* noundef nonnull %2) #24, !dbg !15714
  ret void, !dbg !15715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.309(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15716 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15720, metadata !DIExpression()), !dbg !15721
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15722
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15723
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15724
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15725
  ret void, !dbg !15726
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15727 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15728
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15729
  ret void, !dbg !15730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15731 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15736, metadata !DIExpression()), !dbg !15737
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15738
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15738
  %4 = load i8, i8* %3, align 2, !dbg !15738
  %5 = sext i8 %4 to i32, !dbg !15739
  ret i32 %5, !dbg !15740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15741 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15745, metadata !DIExpression()), !dbg !15748
  call void @llvm.dbg.value(metadata i32 %1, metadata !15746, metadata !DIExpression()), !dbg !15748
  %3 = add i32 %1, 16, !dbg !15749
  %4 = icmp ult i32 %3, 31, !dbg !15749
  br i1 %4, label %6, label %5, !dbg !15749

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15753
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.313, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !15753
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15753
  unreachable, !dbg !15753

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15755, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 %7, metadata !14727, metadata !DIExpression()) #23, !dbg !15760
  %8 = icmp eq i32 %7, 0, !dbg !15761
  br i1 %8, label %10, label %9, !dbg !15762

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15763
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0)) #25, !dbg !15763
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15763
  unreachable, !dbg !15763

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15747, metadata !DIExpression()), !dbg !15748
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15765
  ret void, !dbg !15766
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15767 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15768
  br i1 %1, label %8, label %2, !dbg !15769

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15770
  br i1 %3, label %8, label %4, !dbg !15771

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15772
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15773
  %7 = xor i1 %6, true, !dbg !15771
  br label %8, !dbg !15771

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15775 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15776, !range !6743
  %2 = icmp eq i8 %1, 0, !dbg !15776
  ret i1 %2, !dbg !15777
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15778 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15781, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 %1, metadata !14727, metadata !DIExpression()) #23, !dbg !15786
  %2 = icmp eq i32 %1, 0, !dbg !15787
  br i1 %2, label %4, label %3, !dbg !15788

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15789
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0)) #25, !dbg !15789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15789
  unreachable, !dbg !15789

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15791
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15793, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15791
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15796
  br i1 %6, label %8, label %7, !dbg !15797

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15798
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15798
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15798
  unreachable, !dbg !15798

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15791
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !15780, metadata !DIExpression()), !dbg !15800
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15801
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14191, metadata !DIExpression()) #23, !dbg !15804
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15806
  %11 = load i8, i8* %10, align 1, !dbg !15807
  %12 = and i8 %11, 127, !dbg !15807
  store i8 %12, i8* %10, align 1, !dbg !15807
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14199, metadata !DIExpression()) #23, !dbg !15808
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !15810
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15811
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14208, metadata !DIExpression()) #23, !dbg !15812
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15814
  %15 = load i8, i8* %14, align 1, !dbg !15815
  %16 = or i8 %15, -128, !dbg !15815
  store i8 %16, i8* %14, align 1, !dbg !15815
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14215, metadata !DIExpression()) #23, !dbg !15816
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14222, metadata !DIExpression()) #23, !dbg !15818
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14228, metadata !DIExpression()) #23, !dbg !15818
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !15820
  br i1 %17, label %18, label %19, !dbg !15821

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 186) #25, !dbg !15822
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 186) #25, !dbg !15822
  unreachable, !dbg !15822

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.274(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15823
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14229, metadata !DIExpression()) #23, !dbg !15818
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15824
  br i1 %21, label %32, label %22, !dbg !15823

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14229, metadata !DIExpression()) #23, !dbg !15818
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15825
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14229, metadata !DIExpression()) #23, !dbg !15818
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !15826
  %26 = icmp sgt i32 %25, 0, !dbg !15827
  br i1 %26, label %27, label %29, !dbg !15828

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15829
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !15830
  br label %34, !dbg !15831

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !15824
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14229, metadata !DIExpression()) #23, !dbg !15818
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15824
  br i1 %31, label %32, label %22, !dbg !15823, !llvm.loop !15832

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15834
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !15835
  br label %34, !dbg !15836

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15837
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()) #23, !dbg !15838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14680, metadata !DIExpression()) #23, !dbg !15838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14684, metadata !DIExpression()) #23, !dbg !15840
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15842
  br i1 %35, label %37, label %36, !dbg !15843

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !15844
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15844
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !15844
  unreachable, !dbg !15844

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15793
  call void @llvm.dbg.value(metadata i32 %38, metadata !14011, metadata !DIExpression()) #23, !dbg !15795
  call void @llvm.dbg.value(metadata i32 %38, metadata !14005, metadata !DIExpression()) #23, !dbg !15791
  call void @llvm.dbg.value(metadata i32 %38, metadata !15780, metadata !DIExpression()), !dbg !15800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()) #23, !dbg !15838
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !15845
  ret void, !dbg !15846
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15847 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15851, metadata !DIExpression()), !dbg !15854
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15855, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 %3, metadata !14727, metadata !DIExpression()) #23, !dbg !15860
  %4 = icmp eq i32 %3, 0, !dbg !15861
  br i1 %4, label %6, label %5, !dbg !15862

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15863
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0)) #25, !dbg !15863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15863
  unreachable, !dbg !15863

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15865
  br i1 %7, label %8, label %10, !dbg !15867

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15868
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !15870
  br label %15, !dbg !15871

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15852, metadata !DIExpression()), !dbg !15854
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15872
  %12 = sext i32 %11 to i64, !dbg !15872
  call void @llvm.dbg.value(metadata i64 %12, metadata !15852, metadata !DIExpression()), !dbg !15854
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !15873
  %14 = trunc i64 %13 to i32, !dbg !15873
  call void @llvm.dbg.value(metadata i32 %14, metadata !15853, metadata !DIExpression()), !dbg !15854
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15854
  ret i32 %16, !dbg !15874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15879, metadata !DIExpression()), !dbg !15880
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15881, !srcloc !15883
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15884
  ret void, !dbg !15885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15886 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15890, metadata !DIExpression()), !dbg !15894
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15895, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 %2, metadata !14727, metadata !DIExpression()) #23, !dbg !15900
  %3 = icmp eq i32 %2, 0, !dbg !15901
  br i1 %3, label %5, label %4, !dbg !15902

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15903
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0)) #25, !dbg !15903
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15903
  unreachable, !dbg !15903

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15905
  br i1 %6, label %7, label %8, !dbg !15907

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !15908
  br label %43, !dbg !15910

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15892, metadata !DIExpression()), !dbg !15894
  %9 = icmp sgt i64 %0, -3, !dbg !15911
  br i1 %9, label %10, label %14, !dbg !15913

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15914
  %12 = trunc i64 %0 to i32, !dbg !15916
  %13 = add i32 %11, %12, !dbg !15916
  call void @llvm.dbg.value(metadata i32 %13, metadata !15891, metadata !DIExpression()), !dbg !15894
  br label %17, !dbg !15917

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15918
  %16 = sub i32 -2, %15, !dbg !15918
  call void @llvm.dbg.value(metadata i32 %16, metadata !15891, metadata !DIExpression()), !dbg !15894
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15920
  call void @llvm.dbg.value(metadata i32 %18, metadata !15891, metadata !DIExpression()), !dbg !15894
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !15921
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15923, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15925
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !15925
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15921
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15926
  br i1 %20, label %22, label %21, !dbg !15927

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15928
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15928
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !15928
  unreachable, !dbg !15928

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15925
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !15921
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15929
  call void @llvm.dbg.value(metadata i32 undef, metadata !15893, metadata !DIExpression()), !dbg !15894
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15930
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15931
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !15932
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15933
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15934
  tail call fastcc void @z_add_thread_timeout.289(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !15934
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15935
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !15936
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()) #23, !dbg !15937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14680, metadata !DIExpression()) #23, !dbg !15937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14684, metadata !DIExpression()) #23, !dbg !15939
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15941
  br i1 %27, label %29, label %28, !dbg !15942

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !15943
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15943
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !15943
  unreachable, !dbg !15943

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15923
  call void @llvm.dbg.value(metadata i32 %30, metadata !14011, metadata !DIExpression()) #23, !dbg !15925
  call void @llvm.dbg.value(metadata i32 %30, metadata !14005, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %30, metadata !15893, metadata !DIExpression()), !dbg !15894
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()) #23, !dbg !15937
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !15944
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15945
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !15945
  br i1 %33, label %34, label %35, !dbg !15948

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15949
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.276, i32 0, i32 0)) #25, !dbg !15949
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15949
  unreachable, !dbg !15949

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15951
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15952
  %38 = zext i32 %37 to i64, !dbg !15952
  %39 = sub nsw i64 %36, %38, !dbg !15953
  call void @llvm.dbg.value(metadata i64 %39, metadata !15890, metadata !DIExpression()), !dbg !15894
  %40 = icmp sgt i64 %39, 0, !dbg !15954
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15954
  %42 = trunc i64 %41 to i32, !dbg !15954
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15894
  ret i32 %44, !dbg !15955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15956 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15958, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i64 %0, metadata !14059, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 10000, metadata !14062, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 1000, metadata !14063, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i8 1, metadata !14064, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i1 false, metadata !14065, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15960
  call void @llvm.dbg.value(metadata i1 false, metadata !14066, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15960
  call void @llvm.dbg.value(metadata i8 0, metadata !14067, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i1 false, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15960
  call void @llvm.dbg.value(metadata i1 true, metadata !14069, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15960
  call void @llvm.dbg.value(metadata i64 0, metadata !14070, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i64 0, metadata !14070, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i64 %0, metadata !14059, metadata !DIExpression()), !dbg !15960
  %2 = udiv i64 %0, 10, !dbg !15962
  ret i64 %2, !dbg !15966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15967 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15968, !srcloc !15970
  tail call void @z_impl_k_yield() #24, !dbg !15971
  ret void, !dbg !15972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15977, metadata !DIExpression()), !dbg !15979
  %2 = sext i32 %0 to i64, !dbg !15980
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !15981
  call void @llvm.dbg.value(metadata i64 %3, metadata !15978, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15979
  %4 = shl i64 %3, 32, !dbg !15982
  %5 = ashr exact i64 %4, 32, !dbg !15982
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !15983
  call void @llvm.dbg.value(metadata i32 %6, metadata !15978, metadata !DIExpression()), !dbg !15979
  %7 = sext i32 %6 to i64, !dbg !15984
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !15985
  %9 = trunc i64 %8 to i32, !dbg !15985
  ret i32 %9, !dbg !15986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !15987 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15989, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i64 %0, metadata !14059, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14062, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i32 10000, metadata !14063, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i8 1, metadata !14064, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i1 false, metadata !14065, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15991
  call void @llvm.dbg.value(metadata i1 true, metadata !14066, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15991
  call void @llvm.dbg.value(metadata i8 0, metadata !14067, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i1 false, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15991
  call void @llvm.dbg.value(metadata i1 true, metadata !14069, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15991
  call void @llvm.dbg.value(metadata i64 0, metadata !14070, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i64 0, metadata !14070, metadata !DIExpression()), !dbg !15991
  %2 = add i64 %0, 99, !dbg !15993
  call void @llvm.dbg.value(metadata i64 %2, metadata !14059, metadata !DIExpression()), !dbg !15991
  %3 = udiv i64 %2, 100, !dbg !15994
  ret i64 %3, !dbg !15995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15996 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15998, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata i64 %0, metadata !14059, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.value(metadata i32 10000, metadata !14062, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14063, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.value(metadata i8 1, metadata !14064, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.value(metadata i1 false, metadata !14065, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16000
  call void @llvm.dbg.value(metadata i1 false, metadata !14066, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16000
  call void @llvm.dbg.value(metadata i8 0, metadata !14067, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.value(metadata i1 true, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16000
  call void @llvm.dbg.value(metadata i1 false, metadata !14069, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16000
  call void @llvm.dbg.value(metadata i64 0, metadata !14070, metadata !DIExpression()), !dbg !16000
  call void @llvm.dbg.value(metadata i64 0, metadata !14070, metadata !DIExpression()), !dbg !16000
  %2 = mul i64 %0, 100, !dbg !16002
  ret i64 %2, !dbg !16004
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16005 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16007, metadata !DIExpression()), !dbg !16008
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16009
  br i1 %2, label %14, label %3, !dbg !16011

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16012
  %5 = icmp slt i32 %4, 0, !dbg !16014
  br i1 %5, label %6, label %10, !dbg !16015

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16016
  %8 = load i8, i8* %7, align 1, !dbg !16016
  %9 = icmp eq i8 %8, 16, !dbg !16019
  br i1 %9, label %10, label %14, !dbg !16020

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16021
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16022
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16023, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 %11, metadata !14727, metadata !DIExpression()) #23, !dbg !16027
  %12 = icmp eq i32 %11, 0, !dbg !16028
  br i1 %12, label %13, label %14, !dbg !16029

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16030
  br label %14, !dbg !16032

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16036, metadata !DIExpression()), !dbg !16037
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16038
  %3 = load i8, i8* %2, align 1, !dbg !16038
  %4 = and i8 %3, 2, !dbg !16039
  %5 = icmp ne i8 %4, 0, !dbg !16040
  ret i1 %5, !dbg !16041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16042 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16047
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16046, metadata !DIExpression()), !dbg !16048
  ret %struct.k_thread* %1, !dbg !16049
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16050 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16051, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 %1, metadata !14727, metadata !DIExpression()) #23, !dbg !16054
  %2 = icmp eq i32 %1, 0, !dbg !16055
  br i1 %2, label %3, label %8, !dbg !16056

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16057
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16058
  %6 = icmp ne i32 %5, 0, !dbg !16056
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16059
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16062, metadata !DIExpression()), !dbg !16064
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !16065
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16067, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !16069
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !16069
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !16065
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16070
  br i1 %3, label %5, label %4, !dbg !16071

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !16072
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16072
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !16072
  unreachable, !dbg !16072

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16067
  call void @llvm.dbg.value(metadata i32 %6, metadata !14011, metadata !DIExpression()) #23, !dbg !16069
  call void @llvm.dbg.value(metadata i32 %6, metadata !14005, metadata !DIExpression()) #23, !dbg !16065
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16073
  call void @llvm.dbg.value(metadata i32 %6, metadata !16063, metadata !DIExpression()), !dbg !16064
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16074
  %8 = load i8, i8* %7, align 4, !dbg !16074
  %9 = and i8 %8, 1, !dbg !16076
  %10 = icmp eq i8 %9, 0, !dbg !16077
  br i1 %10, label %15, label %11, !dbg !16078

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !16079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !16079
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16082
  br i1 %12, label %14, label %13, !dbg !16083

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !16084
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16084
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !16084
  unreachable, !dbg !16084

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14033, metadata !DIExpression()) #23, !dbg !16079
  call void @llvm.dbg.value(metadata i32 %6, metadata !14047, metadata !DIExpression()) #23, !dbg !16085
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16087, !srcloc !14053
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16088
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.322, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16088
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16088
  unreachable, !dbg !16088

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16092
  %17 = load i8, i8* %16, align 1, !dbg !16092
  %18 = and i8 %17, 8, !dbg !16094
  %19 = icmp eq i8 %18, 0, !dbg !16095
  br i1 %19, label %24, label %20, !dbg !16096

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !16097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !16097
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16100
  br i1 %21, label %23, label %22, !dbg !16101

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !16102
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16102
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !16102
  unreachable, !dbg !16102

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14033, metadata !DIExpression()) #23, !dbg !16097
  call void @llvm.dbg.value(metadata i32 %6, metadata !14047, metadata !DIExpression()) #23, !dbg !16103
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16105, !srcloc !14053
  br label %39, !dbg !16106

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16107
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16108
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16110
  br i1 %26, label %27, label %35, !dbg !16111

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16112, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 %28, metadata !14727, metadata !DIExpression()) #23, !dbg !16115
  %29 = icmp eq i32 %28, 0, !dbg !16116
  br i1 %29, label %30, label %35, !dbg !16117

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()) #23, !dbg !16118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14680, metadata !DIExpression()) #23, !dbg !16118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14684, metadata !DIExpression()) #23, !dbg !16121
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16123
  br i1 %31, label %33, label %32, !dbg !16124

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !16125
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16125
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !16125
  unreachable, !dbg !16125

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14675, metadata !DIExpression()) #23, !dbg !16118
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16126
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16127
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.323, i32 0, i32 0)) #25, !dbg !16127
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16127
  unreachable, !dbg !16127

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !16131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !16131
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16133
  br i1 %36, label %38, label %37, !dbg !16134

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !16135
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16135
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !16135
  unreachable, !dbg !16135

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14033, metadata !DIExpression()) #23, !dbg !16131
  call void @llvm.dbg.value(metadata i32 %6, metadata !14047, metadata !DIExpression()) #23, !dbg !16136
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16138, !srcloc !14053
  br label %39, !dbg !16139

39:                                               ; preds = %38, %23
  ret void, !dbg !16139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16142, metadata !DIExpression()), !dbg !16143
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16144
  %3 = load i8, i8* %2, align 1, !dbg !16144
  %4 = and i8 %3, 8, !dbg !16146
  %5 = icmp eq i8 %4, 0, !dbg !16147
  br i1 %5, label %6, label %20, !dbg !16148

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16149
  %8 = or i8 %7, 8, !dbg !16149
  store i8 %8, i8* %2, align 1, !dbg !16149
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16151
  br i1 %9, label %10, label %12, !dbg !16153

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14191, metadata !DIExpression()) #23, !dbg !16154
  %11 = and i8 %8, 95, !dbg !16157
  store i8 %11, i8* %2, align 1, !dbg !16157
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14199, metadata !DIExpression()) #23, !dbg !16158
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16160
  br label %12, !dbg !16161

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16162
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16162
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16164
  br i1 %15, label %17, label %16, !dbg !16165

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16166
  br label %17, !dbg !16168

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16169
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16170
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16171
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16172
  br label %20, !dbg !16173

20:                                               ; preds = %17, %1
  ret void, !dbg !16174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16175 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16179, metadata !DIExpression()), !dbg !16181
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.308(%struct._wait_q_t* noundef %0) #24, !dbg !16182
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16180, metadata !DIExpression()), !dbg !16181
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16183
  br i1 %3, label %10, label %4, !dbg !16184

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16185
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16187
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16188, metadata !DIExpression()), !dbg !16194
  call void @llvm.dbg.value(metadata i32 0, metadata !16193, metadata !DIExpression()), !dbg !16194
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16196
  store i32 0, i32* %7, align 4, !dbg !16197
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16198
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.308(%struct._wait_q_t* noundef %0) #24, !dbg !16182
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16180, metadata !DIExpression()), !dbg !16181
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16183
  br i1 %9, label %10, label %4, !dbg !16184, !llvm.loop !16199

10:                                               ; preds = %4, %1
  ret void, !dbg !16201
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16202 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16207, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16206, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !16211
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16213, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !16215
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !16215
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !16211
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16216
  br i1 %4, label %6, label %5, !dbg !16217

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !16218
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16218
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !16218
  unreachable, !dbg !16218

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16213
  call void @llvm.dbg.value(metadata i32 %7, metadata !14011, metadata !DIExpression()) #23, !dbg !16215
  call void @llvm.dbg.value(metadata i32 %7, metadata !14005, metadata !DIExpression()) #23, !dbg !16211
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16219
  call void @llvm.dbg.value(metadata i32 %7, metadata !16208, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata i32 0, metadata !16209, metadata !DIExpression()), !dbg !16210
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16220
  %9 = load i8, i8* %8, align 1, !dbg !16220
  %10 = and i8 %9, 8, !dbg !16222
  %11 = icmp eq i8 %10, 0, !dbg !16223
  br i1 %11, label %12, label %35, !dbg !16224

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16207, metadata !DIExpression()), !dbg !16210
  %14 = icmp eq i64 %13, 0, !dbg !16225
  br i1 %14, label %35, label %15, !dbg !16227

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16228
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16230
  br i1 %17, label %35, label %18, !dbg !16231

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16232
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16232
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16233
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16234
  br i1 %22, label %35, label %23, !dbg !16235

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16236, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 %24, metadata !14727, metadata !DIExpression()) #23, !dbg !16242
  %25 = icmp eq i32 %24, 0, !dbg !16243
  br i1 %25, label %27, label %26, !dbg !16244

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.326, i32 0, i32 0)) #25, !dbg !16245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16245
  unreachable, !dbg !16245

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16247
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16248
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16249
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16250
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16251
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()) #23, !dbg !16252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14680, metadata !DIExpression()) #23, !dbg !16252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14684, metadata !DIExpression()) #23, !dbg !16254
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16256
  br i1 %31, label %33, label %32, !dbg !16257

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !16258
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 225) #25, !dbg !16258
  unreachable, !dbg !16258

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14675, metadata !DIExpression()) #23, !dbg !16252
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16259
  call void @llvm.dbg.value(metadata i32 %34, metadata !16209, metadata !DIExpression()), !dbg !16210
  br label %40, !dbg !16260

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16261
  call void @llvm.dbg.value(metadata i32 %36, metadata !16209, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !16262
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !16262
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16264
  br i1 %37, label %39, label %38, !dbg !16265

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !16266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !16266
  unreachable, !dbg !16266

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14033, metadata !DIExpression()) #23, !dbg !16262
  call void @llvm.dbg.value(metadata i32 %7, metadata !14047, metadata !DIExpression()) #23, !dbg !16267
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16269, !srcloc !14053
  br label %40, !dbg !16270

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16210
  ret i32 %41, !dbg !16271
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16272 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16276, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i32 %1, metadata !16277, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i8* %2, metadata !16278, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i8 0, metadata !16280, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i32 0, metadata !16281, metadata !DIExpression()), !dbg !16285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13999, metadata !DIExpression()) #23, !dbg !16286
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16288, !srcloc !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !16290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14012, metadata !DIExpression()) #23, !dbg !16290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !16286
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16291
  br i1 %5, label %7, label %6, !dbg !16292

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !16293
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.269, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16293
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 148) #25, !dbg !16293
  unreachable, !dbg !16293

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !16290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14005, metadata !DIExpression()) #23, !dbg !16286
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16294
  call void @llvm.dbg.value(metadata i32 undef, metadata !16283, metadata !DIExpression()), !dbg !16285
  call void @llvm.dbg.value(metadata i8 poison, metadata !16280, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i32 undef, metadata !16281, metadata !DIExpression()), !dbg !16285
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16295
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16279, metadata !DIExpression()), !dbg !16284
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16298
  br i1 %10, label %15, label %11, !dbg !16300

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16301, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata i32 %1, metadata !16307, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata i8* %2, metadata !16308, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16188, metadata !DIExpression()), !dbg !16312
  call void @llvm.dbg.value(metadata i32 %1, metadata !16193, metadata !DIExpression()), !dbg !16312
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16314
  store i32 %1, i32* %12, align 4, !dbg !16315
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16316
  store i8* %2, i8** %13, align 4, !dbg !16317
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16318
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16319
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16320
  call void @llvm.dbg.value(metadata i8 1, metadata !16280, metadata !DIExpression()), !dbg !16284
  br label %15, !dbg !16321

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16280, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !16322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14038, metadata !DIExpression()) #23, !dbg !16322
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16324
  br i1 %16, label %18, label %17, !dbg !16325

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !16326
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.271, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16326
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.268, i32 0, i32 0), i32 noundef 194) #25, !dbg !16326
  unreachable, !dbg !16326

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16284
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16288
  call void @llvm.dbg.value(metadata i32 %20, metadata !14011, metadata !DIExpression()) #23, !dbg !16290
  call void @llvm.dbg.value(metadata i32 %20, metadata !14005, metadata !DIExpression()) #23, !dbg !16286
  call void @llvm.dbg.value(metadata i32 %20, metadata !16283, metadata !DIExpression()), !dbg !16285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()) #23, !dbg !16322
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #23, !dbg !16327
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16329, !srcloc !14053
  call void @llvm.dbg.value(metadata i8 poison, metadata !16280, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i32 undef, metadata !16281, metadata !DIExpression()), !dbg !16285
  ret i1 %19, !dbg !16330
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16331 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16337, metadata !DIExpression()), !dbg !16342
  call void @llvm.dbg.value(metadata i64 undef, metadata !16339, metadata !DIExpression()), !dbg !16342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16336, metadata !DIExpression()), !dbg !16342
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16338, metadata !DIExpression()), !dbg !16342
  call void @llvm.dbg.value(metadata i8** %4, metadata !16340, metadata !DIExpression()), !dbg !16342
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16343
  call void @llvm.dbg.value(metadata i32 %6, metadata !16341, metadata !DIExpression()), !dbg !16342
  %7 = icmp eq i8** %4, null, !dbg !16344
  br i1 %7, label %12, label %8, !dbg !16346

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16347
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16349
  %11 = load i8*, i8** %10, align 4, !dbg !16349
  store i8* %11, i8** %4, align 4, !dbg !16350
  br label %12, !dbg !16351

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_condvar_init(%struct.k_condvar* noundef %0) local_unnamed_addr #7 !dbg !16353 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16366, metadata !DIExpression()), !dbg !16367
  %2 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16368
  tail call fastcc void @z_waitq_init.327(%struct._wait_q_t* noundef %2) #24, !dbg !16369
  ret i32 0, !dbg !16370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.327(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16371 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16376, metadata !DIExpression()), !dbg !16377
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16378
  tail call fastcc void @sys_dlist_init.328(%struct._dnode* noundef %2) #24, !dbg !16379
  ret void, !dbg !16380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.328(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16381 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16386, metadata !DIExpression()), !dbg !16387
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16388
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16389
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16390
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16391
  ret void, !dbg !16392
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16393 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16395, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.331, metadata !16483, metadata !DIExpression()) #23, !dbg !16490
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16492, !srcloc !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16495, metadata !DIExpression()) #23, !dbg !16499
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #23, !dbg !16499
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()) #23, !dbg !16490
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.331) #25, !dbg !16500
  br i1 %3, label %5, label %4, !dbg !16503

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 148) #25, !dbg !16504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.331) #25, !dbg !16504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 148) #25, !dbg !16504
  unreachable, !dbg !16504

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16492
  call void @llvm.dbg.value(metadata i32 %6, metadata !16495, metadata !DIExpression()) #23, !dbg !16499
  call void @llvm.dbg.value(metadata i32 %6, metadata !16489, metadata !DIExpression()) #23, !dbg !16490
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.331) #25, !dbg !16506
  call void @llvm.dbg.value(metadata i32 %6, metadata !16396, metadata !DIExpression()), !dbg !16482
  %7 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16507
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #25, !dbg !16508
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16401, metadata !DIExpression()), !dbg !16482
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16509
  br i1 %9, label %13, label %10, !dbg !16511

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16512, metadata !DIExpression()), !dbg !16518
  call void @llvm.dbg.value(metadata i32 0, metadata !16517, metadata !DIExpression()), !dbg !16518
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !16521
  store i32 0, i32* %11, align 4, !dbg !16522
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %8) #25, !dbg !16523
  %12 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16524
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.331, [1 x i32] %12) #25, !dbg !16524
  br label %17, !dbg !16525

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()) #23, !dbg !16532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.331, metadata !16531, metadata !DIExpression()) #23, !dbg !16532
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.331) #25, !dbg !16535
  br i1 %14, label %16, label %15, !dbg !16538

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 194) #25, !dbg !16539
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.337, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.331) #25, !dbg !16539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 194) #25, !dbg !16539
  unreachable, !dbg !16539

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %6, metadata !16526, metadata !DIExpression()) #23, !dbg !16532
  call void @llvm.dbg.value(metadata i32 %6, metadata !16541, metadata !DIExpression()) #23, !dbg !16544
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16546, !srcloc !16547
  br label %17

17:                                               ; preds = %10, %16
  ret i32 0, !dbg !16548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_broadcast(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16549 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16551, metadata !DIExpression()), !dbg !16555
  call void @llvm.dbg.value(metadata i32 0, metadata !16554, metadata !DIExpression()), !dbg !16555
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.331, metadata !16483, metadata !DIExpression()) #23, !dbg !16556
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16558, !srcloc !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16495, metadata !DIExpression()) #23, !dbg !16560
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #23, !dbg !16560
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()) #23, !dbg !16556
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.331) #25, !dbg !16561
  br i1 %3, label %5, label %4, !dbg !16562

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 148) #25, !dbg !16563
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.331) #25, !dbg !16563
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 148) #25, !dbg !16563
  unreachable, !dbg !16563

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16495, metadata !DIExpression()) #23, !dbg !16560
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()) #23, !dbg !16556
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.331) #25, !dbg !16564
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()), !dbg !16555
  %6 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !16554, metadata !DIExpression()), !dbg !16555
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16565
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16552, metadata !DIExpression()), !dbg !16555
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16566
  br i1 %8, label %16, label %9, !dbg !16567

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %14, %9 ], [ %7, %5 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !16554, metadata !DIExpression()), !dbg !16555
  %12 = add nuw nsw i32 %11, 1, !dbg !16568
  call void @llvm.dbg.value(metadata i32 %12, metadata !16554, metadata !DIExpression()), !dbg !16555
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !16512, metadata !DIExpression()), !dbg !16570
  call void @llvm.dbg.value(metadata i32 0, metadata !16517, metadata !DIExpression()), !dbg !16570
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 8, i32 1, !dbg !16572
  store i32 0, i32* %13, align 4, !dbg !16573
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !16574
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16565
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16552, metadata !DIExpression()), !dbg !16555
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16566
  br i1 %15, label %16, label %9, !dbg !16567, !llvm.loop !16575

16:                                               ; preds = %9, %5
  %17 = phi i32 [ 0, %5 ], [ %12, %9 ], !dbg !16555
  %18 = extractvalue { i32, i32 } %2, 0, !dbg !16558
  call void @llvm.dbg.value(metadata i32 %18, metadata !16495, metadata !DIExpression()) #23, !dbg !16560
  call void @llvm.dbg.value(metadata i32 %18, metadata !16489, metadata !DIExpression()) #23, !dbg !16556
  call void @llvm.dbg.value(metadata i32 %18, metadata !16553, metadata !DIExpression()), !dbg !16555
  %19 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !16577
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.331, [1 x i32] %19) #25, !dbg !16577
  ret i32 %17, !dbg !16578
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef %0, %struct.k_mutex* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16579 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16596, metadata !DIExpression()), !dbg !16599
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16594, metadata !DIExpression()), !dbg !16599
  call void @llvm.dbg.value(metadata %struct.k_mutex* %1, metadata !16595, metadata !DIExpression()), !dbg !16599
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.331, metadata !16483, metadata !DIExpression()) #23, !dbg !16600
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16602, !srcloc !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16495, metadata !DIExpression()) #23, !dbg !16604
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()) #23, !dbg !16604
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()) #23, !dbg !16600
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.331) #25, !dbg !16605
  br i1 %5, label %7, label %6, !dbg !16606

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 148) #25, !dbg !16607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.331) #25, !dbg !16607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 148) #25, !dbg !16607
  unreachable, !dbg !16607

7:                                                ; preds = %3
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !16602
  call void @llvm.dbg.value(metadata i32 %8, metadata !16495, metadata !DIExpression()) #23, !dbg !16604
  call void @llvm.dbg.value(metadata i32 %8, metadata !16489, metadata !DIExpression()) #23, !dbg !16600
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.331) #25, !dbg !16608
  call void @llvm.dbg.value(metadata i32 %8, metadata !16597, metadata !DIExpression()), !dbg !16599
  tail call fastcc void @k_mutex_unlock.340(%struct.k_mutex* noundef %1) #24, !dbg !16609
  %9 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16610
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !16611
  %11 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.331, [1 x i32] %10, %struct._wait_q_t* noundef %9, [1 x i64] %2) #25, !dbg !16611
  call void @llvm.dbg.value(metadata i32 %11, metadata !16598, metadata !DIExpression()), !dbg !16599
  tail call fastcc void @k_mutex_lock.341(%struct.k_mutex* noundef %1) #24, !dbg !16612
  ret i32 %11, !dbg !16613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.340(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16614 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16618, metadata !DIExpression()), !dbg !16619
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16620, !srcloc !16622
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !16623
  ret void, !dbg !16624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock.341(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16625 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16630, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16629, metadata !DIExpression()), !dbg !16631
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16632, !srcloc !16634
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !16635
  ret void, !dbg !16636
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16637 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16639
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16640
  ret void, !dbg !16641
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16642 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16652, metadata !DIExpression()), !dbg !16669
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16650, metadata !DIExpression()), !dbg !16669
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16651, metadata !DIExpression()), !dbg !16669
  %5 = icmp eq i64 %4, -1, !dbg !16670
  br i1 %5, label %63, label %6, !dbg !16672

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16673
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.346(%struct._dnode* noundef %7) #24, !dbg !16673
  br i1 %8, label %9, label %10, !dbg !16676

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.349, i32 0, i32 0), i32 noundef 99) #25, !dbg !16677
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.350, i32 0, i32 0)) #25, !dbg !16677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.349, i32 0, i32 0), i32 noundef 99) #25, !dbg !16677
  unreachable, !dbg !16677

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16679
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16680
  call void @llvm.dbg.value(metadata i32 0, metadata !16653, metadata !DIExpression()), !dbg !16681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16682, metadata !DIExpression()) #23, !dbg !16689
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16691, !srcloc !16697
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !16698
  call void @llvm.dbg.value(metadata i32 undef, metadata !16695, metadata !DIExpression()) #23, !dbg !16698
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !16689
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16699
  br i1 %13, label %15, label %14, !dbg !16702

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !16703
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16703
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !16703
  unreachable, !dbg !16703

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16691
  call void @llvm.dbg.value(metadata i32 %16, metadata !16694, metadata !DIExpression()) #23, !dbg !16698
  call void @llvm.dbg.value(metadata i32 %16, metadata !16688, metadata !DIExpression()) #23, !dbg !16689
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16705
  call void @llvm.dbg.value(metadata i32 %16, metadata !16659, metadata !DIExpression()), !dbg !16681
  call void @llvm.dbg.value(metadata i32 undef, metadata !16653, metadata !DIExpression()), !dbg !16681
  %17 = icmp slt i64 %4, -1, !dbg !16706
  br i1 %17, label %18, label %24, !dbg !16707

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16708
  %20 = add i64 %4, %19, !dbg !16709
  %21 = sub i64 -2, %20, !dbg !16709
  call void @llvm.dbg.value(metadata i64 %21, metadata !16663, metadata !DIExpression()), !dbg !16710
  %22 = icmp sgt i64 %21, 1, !dbg !16711
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16711
  br label %29, !dbg !16712

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16713
  %26 = tail call fastcc i32 @elapsed.354() #24, !dbg !16715
  %27 = sext i32 %26 to i64, !dbg !16715
  %28 = add nsw i64 %25, %27, !dbg !16716
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16717
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16718
  store i64 %30, i64* %31, align 8, !dbg !16719
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16720
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16660, metadata !DIExpression()), !dbg !16722
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16723
  br i1 %33, label %48, label %34, !dbg !16723

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16724
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16660, metadata !DIExpression()), !dbg !16722
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16728
  %38 = load i64, i64* %37, align 8, !dbg !16728
  %39 = icmp slt i64 %35, %38, !dbg !16729
  br i1 %39, label %40, label %44, !dbg !16730

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16728
  %42 = sub nsw i64 %38, %35, !dbg !16731
  store i64 %42, i64* %41, align 8, !dbg !16731
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16733
  tail call fastcc void @sys_dlist_insert.355(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16734
  br label %49, !dbg !16735

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16736
  store i64 %45, i64* %31, align 8, !dbg !16736
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16737
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16660, metadata !DIExpression()), !dbg !16722
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16723
  br i1 %47, label %48, label %34, !dbg !16723, !llvm.loop !16738

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.356(%struct._dnode* noundef nonnull %7) #24, !dbg !16740
  br label %49, !dbg !16743

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16744
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16745
  br i1 %51, label %52, label %59, !dbg !16746

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16747
  call void @llvm.dbg.value(metadata i32 %53, metadata !16666, metadata !DIExpression()), !dbg !16748
  %54 = icmp ne i32 %53, 0, !dbg !16749
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16751
  br i1 %57, label %59, label %58, !dbg !16751

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16752
  br label %59, !dbg !16754

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !16761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16760, metadata !DIExpression()) #23, !dbg !16761
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16763
  br i1 %60, label %62, label %61, !dbg !16766

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !16767
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16767
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !16767
  unreachable, !dbg !16767

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16755, metadata !DIExpression()) #23, !dbg !16761
  call void @llvm.dbg.value(metadata i32 %16, metadata !16769, metadata !DIExpression()) #23, !dbg !16772
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16774, !srcloc !16775
  call void @llvm.dbg.value(metadata i32 undef, metadata !16653, metadata !DIExpression()), !dbg !16681
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.346(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16777 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16783, metadata !DIExpression()), !dbg !16784
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16785
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16785
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16786
  ret i1 %4, !dbg !16787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.354() unnamed_addr #1 !dbg !16788 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16791
  %2 = icmp eq i32 %1, 0, !dbg !16792
  br i1 %2, label %3, label %5, !dbg !16791

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16793
  br label %5, !dbg !16791

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16791
  ret i32 %6, !dbg !16794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16795 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.361() #24, !dbg !16801
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16799, metadata !DIExpression()), !dbg !16802
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16803
  ret %struct._timeout* %2, !dbg !16804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.355(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16805 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16809, metadata !DIExpression()), !dbg !16813
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16810, metadata !DIExpression()), !dbg !16813
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16814
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16814
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16811, metadata !DIExpression()), !dbg !16813
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16815
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16816
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16817
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16818
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16819
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16820
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16821
  ret void, !dbg !16822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16823 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16827, metadata !DIExpression()), !dbg !16829
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16830
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.359(%struct._dnode* noundef %2) #24, !dbg !16831
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16828, metadata !DIExpression()), !dbg !16829
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16832
  ret %struct._timeout* %4, !dbg !16833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.356(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16834 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16839, metadata !DIExpression()), !dbg !16842
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16840, metadata !DIExpression()), !dbg !16842
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16843
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16841, metadata !DIExpression()), !dbg !16842
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16844
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16845
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16846
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16847
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16848
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16849
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16850
  ret void, !dbg !16851
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16852 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16857
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16854, metadata !DIExpression()), !dbg !16858
  %2 = tail call fastcc i32 @elapsed.354() #24, !dbg !16859
  call void @llvm.dbg.value(metadata i32 %2, metadata !16855, metadata !DIExpression()), !dbg !16858
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16860
  br i1 %3, label %14, label %4, !dbg !16862

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16863
  %6 = load i64, i64* %5, align 8, !dbg !16863
  %7 = sext i32 %2 to i64, !dbg !16864
  %8 = sub nsw i64 %6, %7, !dbg !16865
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16866
  br i1 %9, label %14, label %10, !dbg !16867

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16868
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16868
  %13 = trunc i64 %12 to i32, !dbg !16868
  call void @llvm.dbg.value(metadata i32 %13, metadata !16856, metadata !DIExpression()), !dbg !16858
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16870
  call void @llvm.dbg.value(metadata i32 %15, metadata !16856, metadata !DIExpression()), !dbg !16858
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16871
  %17 = icmp ne i32 %16, 0, !dbg !16873
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16874
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16874
  call void @llvm.dbg.value(metadata i32 %20, metadata !16856, metadata !DIExpression()), !dbg !16858
  ret i32 %20, !dbg !16875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.359(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16876 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16880, metadata !DIExpression()), !dbg !16882
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16881, metadata !DIExpression()), !dbg !16882
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16883
  br i1 %2, label %5, label %3, !dbg !16884

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.360(%struct._dnode* noundef nonnull %0) #24, !dbg !16885
  br label %5, !dbg !16884

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16884
  ret %struct._dnode* %6, !dbg !16886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.360(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16887 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16889, metadata !DIExpression()), !dbg !16891
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16890, metadata !DIExpression()), !dbg !16891
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16892
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16893
  br i1 %3, label %7, label %4, !dbg !16894

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16895
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16895
  br label %7, !dbg !16894

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16894
  ret %struct._dnode* %8, !dbg !16896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.361() unnamed_addr #8 !dbg !16897 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16901, metadata !DIExpression()), !dbg !16902
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.362() #24, !dbg !16903
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16903
  ret %struct._dnode* %3, !dbg !16904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.362() unnamed_addr #8 !dbg !16905 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16909, metadata !DIExpression()), !dbg !16910
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16911
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16912
  ret i1 %2, !dbg !16913
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16914 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16918, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata i32 -22, metadata !16919, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata i32 0, metadata !16920, metadata !DIExpression()), !dbg !16924
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16682, metadata !DIExpression()) #23, !dbg !16925
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16927, !srcloc !16697
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !16929
  call void @llvm.dbg.value(metadata i32 undef, metadata !16695, metadata !DIExpression()) #23, !dbg !16929
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !16925
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16930
  br i1 %3, label %5, label %4, !dbg !16931

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !16932
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16932
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !16932
  unreachable, !dbg !16932

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !16929
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !16925
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !16922, metadata !DIExpression()), !dbg !16924
  call void @llvm.dbg.value(metadata i32 -22, metadata !16919, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata i32 undef, metadata !16920, metadata !DIExpression()), !dbg !16924
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16919, metadata !DIExpression()), !dbg !16923
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.346(%struct._dnode* noundef %6) #24, !dbg !16934
  br i1 %7, label %8, label %9, !dbg !16938

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16939
  call void @llvm.dbg.value(metadata i32 0, metadata !16919, metadata !DIExpression()), !dbg !16923
  br label %9, !dbg !16941

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16923
  call void @llvm.dbg.value(metadata i32 %10, metadata !16919, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !16942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16760, metadata !DIExpression()) #23, !dbg !16942
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16944
  br i1 %11, label %13, label %12, !dbg !16945

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !16946
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16946
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !16946
  unreachable, !dbg !16946

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16927
  call void @llvm.dbg.value(metadata i32 %14, metadata !16694, metadata !DIExpression()) #23, !dbg !16929
  call void @llvm.dbg.value(metadata i32 %14, metadata !16688, metadata !DIExpression()) #23, !dbg !16925
  call void @llvm.dbg.value(metadata i32 %14, metadata !16922, metadata !DIExpression()), !dbg !16924
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !16942
  call void @llvm.dbg.value(metadata i32 undef, metadata !16769, metadata !DIExpression()) #23, !dbg !16947
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16949, !srcloc !16775
  call void @llvm.dbg.value(metadata i32 %10, metadata !16919, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata i32 undef, metadata !16920, metadata !DIExpression()), !dbg !16924
  ret i32 %10, !dbg !16950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !16951 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16953, metadata !DIExpression()), !dbg !16954
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16955
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16957
  br i1 %3, label %10, label %4, !dbg !16958

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16959
  %6 = load i64, i64* %5, align 8, !dbg !16959
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16961
  %8 = load i64, i64* %7, align 8, !dbg !16962
  %9 = add nsw i64 %8, %6, !dbg !16962
  store i64 %9, i64* %7, align 8, !dbg !16962
  br label %10, !dbg !16963

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16964
  tail call fastcc void @sys_dlist_remove.365(%struct._dnode* noundef %11) #24, !dbg !16965
  ret void, !dbg !16966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.365(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !16967 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16971, metadata !DIExpression()), !dbg !16974
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16975
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16975
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16972, metadata !DIExpression()), !dbg !16974
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16976
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16976
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16973, metadata !DIExpression()), !dbg !16974
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16977
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16978
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16979
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16980
  tail call fastcc void @sys_dnode_init.366(%struct._dnode* noundef %0) #24, !dbg !16981
  ret void, !dbg !16982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.366(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !16983 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16985, metadata !DIExpression()), !dbg !16986
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16987
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16988
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16989
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16990
  ret void, !dbg !16991
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16992 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16998, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i64 0, metadata !16999, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 0, metadata !17000, metadata !DIExpression()), !dbg !17004
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16682, metadata !DIExpression()) #23, !dbg !17005
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17007, !srcloc !16697
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17009
  call void @llvm.dbg.value(metadata i32 undef, metadata !16695, metadata !DIExpression()) #23, !dbg !17009
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17005
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17010
  br i1 %3, label %5, label %4, !dbg !17011

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17012
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17012
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17012
  unreachable, !dbg !17012

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17009
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17005
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17013
  call void @llvm.dbg.value(metadata i32 undef, metadata !17002, metadata !DIExpression()), !dbg !17004
  call void @llvm.dbg.value(metadata i64 0, metadata !16999, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !17000, metadata !DIExpression()), !dbg !17004
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17014
  call void @llvm.dbg.value(metadata i64 %6, metadata !16999, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16760, metadata !DIExpression()) #23, !dbg !17017
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17019
  br i1 %7, label %9, label %8, !dbg !17020

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17021
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17021
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17021
  unreachable, !dbg !17021

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17007
  call void @llvm.dbg.value(metadata i32 %10, metadata !16694, metadata !DIExpression()) #23, !dbg !17009
  call void @llvm.dbg.value(metadata i32 %10, metadata !16688, metadata !DIExpression()) #23, !dbg !17005
  call void @llvm.dbg.value(metadata i32 %10, metadata !17002, metadata !DIExpression()), !dbg !17004
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17017
  call void @llvm.dbg.value(metadata i32 undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17022
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17024, !srcloc !16775
  call void @llvm.dbg.value(metadata i64 %6, metadata !16999, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !17000, metadata !DIExpression()), !dbg !17004
  ret i64 %6, !dbg !17025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17026 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17028, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata i64 0, metadata !17029, metadata !DIExpression()), !dbg !17032
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.367(%struct._timeout* noundef %0) #24, !dbg !17033
  br i1 %2, label %21, label %3, !dbg !17035

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17036
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17030, metadata !DIExpression()), !dbg !17037
  call void @llvm.dbg.value(metadata i64 0, metadata !17029, metadata !DIExpression()), !dbg !17032
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17038
  br i1 %5, label %16, label %6, !dbg !17040

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17030, metadata !DIExpression()), !dbg !17037
  call void @llvm.dbg.value(metadata i64 %8, metadata !17029, metadata !DIExpression()), !dbg !17032
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17041
  %10 = load i64, i64* %9, align 8, !dbg !17041
  %11 = add nsw i64 %10, %8, !dbg !17043
  call void @llvm.dbg.value(metadata i64 %11, metadata !17029, metadata !DIExpression()), !dbg !17032
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17044
  br i1 %12, label %16, label %13, !dbg !17046

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17047
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17030, metadata !DIExpression()), !dbg !17037
  call void @llvm.dbg.value(metadata i64 %11, metadata !17029, metadata !DIExpression()), !dbg !17032
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17038
  br i1 %15, label %16, label %6, !dbg !17040, !llvm.loop !17048

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17032
  call void @llvm.dbg.value(metadata i64 %17, metadata !17029, metadata !DIExpression()), !dbg !17032
  %18 = tail call fastcc i32 @elapsed.354() #24, !dbg !17050
  %19 = sext i32 %18 to i64, !dbg !17050
  %20 = sub nsw i64 %17, %19, !dbg !17051
  br label %21, !dbg !17052

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17032
  ret i64 %22, !dbg !17053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.367(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17054 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17058, metadata !DIExpression()), !dbg !17059
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17060
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.346(%struct._dnode* noundef %2) #24, !dbg !17061
  %4 = xor i1 %3, true, !dbg !17062
  ret i1 %4, !dbg !17063
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17064 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17066, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i64 0, metadata !17067, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i32 0, metadata !17068, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16682, metadata !DIExpression()) #23, !dbg !17073
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17075, !srcloc !16697
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17077
  call void @llvm.dbg.value(metadata i32 undef, metadata !16695, metadata !DIExpression()) #23, !dbg !17077
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17073
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17078
  br i1 %3, label %5, label %4, !dbg !17079

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17080
  unreachable, !dbg !17080

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17077
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17073
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17081
  call void @llvm.dbg.value(metadata i32 undef, metadata !17070, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i64 0, metadata !17067, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i32 undef, metadata !17068, metadata !DIExpression()), !dbg !17072
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17082
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17085
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17067, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17071
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16760, metadata !DIExpression()) #23, !dbg !17086
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17088
  br i1 %8, label %10, label %9, !dbg !17089

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17090
  unreachable, !dbg !17090

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17075
  call void @llvm.dbg.value(metadata i32 %11, metadata !16694, metadata !DIExpression()) #23, !dbg !17077
  call void @llvm.dbg.value(metadata i32 %11, metadata !16688, metadata !DIExpression()) #23, !dbg !17073
  call void @llvm.dbg.value(metadata i32 %11, metadata !17070, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17067, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17071
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17086
  call void @llvm.dbg.value(metadata i32 undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17091
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17093, !srcloc !16775
  call void @llvm.dbg.value(metadata i32 undef, metadata !17068, metadata !DIExpression()), !dbg !17072
  %12 = add i64 %7, %6, !dbg !17094
  ret i64 %12, !dbg !17095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17096 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17098, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata i32 0, metadata !17099, metadata !DIExpression()), !dbg !17103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16682, metadata !DIExpression()) #23, !dbg !17104
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17106, !srcloc !16697
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17108
  call void @llvm.dbg.value(metadata i32 undef, metadata !16695, metadata !DIExpression()) #23, !dbg !17108
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17104
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17109
  br i1 %2, label %4, label %3, !dbg !17110

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17111
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17111
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17111
  unreachable, !dbg !17111

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17108
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17104
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17112
  call void @llvm.dbg.value(metadata i32 undef, metadata !17101, metadata !DIExpression()), !dbg !17103
  call void @llvm.dbg.value(metadata i32 -1, metadata !17098, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata i32 undef, metadata !17099, metadata !DIExpression()), !dbg !17103
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17113
  call void @llvm.dbg.value(metadata i32 %5, metadata !17098, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16760, metadata !DIExpression()) #23, !dbg !17116
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17118
  br i1 %6, label %8, label %7, !dbg !17119

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17120
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17120
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17120
  unreachable, !dbg !17120

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17106
  call void @llvm.dbg.value(metadata i32 %9, metadata !16694, metadata !DIExpression()) #23, !dbg !17108
  call void @llvm.dbg.value(metadata i32 %9, metadata !16688, metadata !DIExpression()) #23, !dbg !17104
  call void @llvm.dbg.value(metadata i32 %9, metadata !17101, metadata !DIExpression()), !dbg !17103
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17116
  call void @llvm.dbg.value(metadata i32 undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17121
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17123, !srcloc !16775
  call void @llvm.dbg.value(metadata i32 %5, metadata !17098, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata i32 undef, metadata !17099, metadata !DIExpression()), !dbg !17103
  ret i32 %5, !dbg !17124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17127, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.value(metadata i1 %1, metadata !17128, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17137
  call void @llvm.dbg.value(metadata i32 0, metadata !17129, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16682, metadata !DIExpression()) #23, !dbg !17139
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17141, !srcloc !16697
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17143
  call void @llvm.dbg.value(metadata i32 undef, metadata !16695, metadata !DIExpression()) #23, !dbg !17143
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17139
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17144
  br i1 %4, label %6, label %5, !dbg !17145

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17146
  unreachable, !dbg !17146

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17143
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17139
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17147
  call void @llvm.dbg.value(metadata i32 undef, metadata !17131, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !17129, metadata !DIExpression()), !dbg !17138
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17148
  call void @llvm.dbg.value(metadata i32 %7, metadata !17132, metadata !DIExpression()), !dbg !17149
  call void @llvm.dbg.value(metadata i1 undef, metadata !17135, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17149
  %8 = icmp slt i32 %7, 2, !dbg !17150
  call void @llvm.dbg.value(metadata i1 %8, metadata !17136, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17149
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17151
  call void @llvm.dbg.value(metadata i1 %9, metadata !17135, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17149
  br i1 %10, label %14, label %11, !dbg !17151

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17153
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17153
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17155
  br label %14, !dbg !17156

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16760, metadata !DIExpression()) #23, !dbg !17157
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17159
  br i1 %15, label %17, label %16, !dbg !17160

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17161
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17161
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17161
  unreachable, !dbg !17161

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17141
  call void @llvm.dbg.value(metadata i32 %18, metadata !16694, metadata !DIExpression()) #23, !dbg !17143
  call void @llvm.dbg.value(metadata i32 %18, metadata !16688, metadata !DIExpression()) #23, !dbg !17139
  call void @llvm.dbg.value(metadata i32 %18, metadata !17131, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17157
  call void @llvm.dbg.value(metadata i32 undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17162
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17164, !srcloc !16775
  call void @llvm.dbg.value(metadata i32 1, metadata !17129, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !17129, metadata !DIExpression()), !dbg !17138
  ret void, !dbg !17165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17170, metadata !DIExpression()), !dbg !17175
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16682, metadata !DIExpression()) #23, !dbg !17177
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17179, !srcloc !16697
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16695, metadata !DIExpression()) #23, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17177
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17182
  br i1 %3, label %5, label %4, !dbg !17183

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17184
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17184
  unreachable, !dbg !17184

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17177
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17186
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17187
  br i1 %7, label %37, label %8, !dbg !17188

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17175
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17189
  %14 = load i64, i64* %13, align 8, !dbg !17189
  %15 = sext i32 %11 to i64, !dbg !17190
  %16 = icmp sgt i64 %14, %15, !dbg !17191
  br i1 %16, label %35, label %17, !dbg !17192

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17172, metadata !DIExpression()), !dbg !17193
  %18 = trunc i64 %14 to i32, !dbg !17194
  call void @llvm.dbg.value(metadata i32 %18, metadata !17174, metadata !DIExpression()), !dbg !17193
  %19 = sext i32 %18 to i64, !dbg !17195
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17196
  %21 = add i64 %20, %19, !dbg !17196
  store i64 %21, i64* @curr_tick, align 8, !dbg !17196
  store i64 0, i64* %13, align 8, !dbg !17197
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17198
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17199
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16760, metadata !DIExpression()) #23, !dbg !17199
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17201
  br i1 %22, label %24, label %23, !dbg !17202

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17203
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17203
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17203
  unreachable, !dbg !17203

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16755, metadata !DIExpression()) #23, !dbg !17199
  call void @llvm.dbg.value(metadata i32 %12, metadata !16769, metadata !DIExpression()) #23, !dbg !17204
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17206, !srcloc !16775
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17207
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17207
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17208
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16682, metadata !DIExpression()) #23, !dbg !17209
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17211, !srcloc !16697
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17213
  call void @llvm.dbg.value(metadata i32 undef, metadata !16695, metadata !DIExpression()) #23, !dbg !17213
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17209
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17214
  br i1 %28, label %30, label %29, !dbg !17215

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17216
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17216
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17216
  unreachable, !dbg !17216

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17213
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17209
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17217
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17218
  %32 = sub nsw i32 %31, %18, !dbg !17218
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()), !dbg !17175
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17186
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17187
  br i1 %34, label %37, label %8, !dbg !17188, !llvm.loop !17219

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17221
  store i64 %36, i64* %13, align 8, !dbg !17221
  br label %41, !dbg !17224

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17175
  %40 = sext i32 %39 to i64, !dbg !17225
  br label %41, !dbg !17225

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17225
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17226
  %45 = add i64 %44, %42, !dbg !17226
  store i64 %45, i64* @curr_tick, align 8, !dbg !17226
  store i32 0, i32* @announce_remaining, align 4, !dbg !17227
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17228
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17229
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17230
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16760, metadata !DIExpression()) #23, !dbg !17230
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17232
  br i1 %47, label %49, label %48, !dbg !17233

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17234
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17234
  unreachable, !dbg !17234

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17175
  call void @llvm.dbg.value(metadata i32 %50, metadata !16755, metadata !DIExpression()) #23, !dbg !17230
  call void @llvm.dbg.value(metadata i32 %50, metadata !16769, metadata !DIExpression()) #23, !dbg !17235
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17237, !srcloc !16775
  ret void, !dbg !17238
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17239 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17243, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata i32 0, metadata !17244, metadata !DIExpression()), !dbg !17248
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16682, metadata !DIExpression()) #23, !dbg !17249
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17251, !srcloc !16697
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17253
  call void @llvm.dbg.value(metadata i32 undef, metadata !16695, metadata !DIExpression()) #23, !dbg !17253
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17249
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17254
  br i1 %2, label %4, label %3, !dbg !17255

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17256
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17256
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !17256
  unreachable, !dbg !17256

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17253
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()) #23, !dbg !17249
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17257
  call void @llvm.dbg.value(metadata i32 undef, metadata !17246, metadata !DIExpression()), !dbg !17248
  call void @llvm.dbg.value(metadata i64 0, metadata !17243, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata i32 undef, metadata !17244, metadata !DIExpression()), !dbg !17248
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17258
  %6 = tail call fastcc i32 @elapsed.354() #24, !dbg !17261
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17243, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17247
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17262
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16760, metadata !DIExpression()) #23, !dbg !17262
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17264
  br i1 %7, label %9, label %8, !dbg !17265

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.358, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !17266
  unreachable, !dbg !17266

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17251
  call void @llvm.dbg.value(metadata i32 %10, metadata !16694, metadata !DIExpression()) #23, !dbg !17253
  call void @llvm.dbg.value(metadata i32 %10, metadata !16688, metadata !DIExpression()) #23, !dbg !17249
  call void @llvm.dbg.value(metadata i32 %10, metadata !17246, metadata !DIExpression()), !dbg !17248
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17243, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17247
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17243, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17247
  call void @llvm.dbg.value(metadata i32 undef, metadata !16755, metadata !DIExpression()) #23, !dbg !17262
  call void @llvm.dbg.value(metadata i32 undef, metadata !16769, metadata !DIExpression()) #23, !dbg !17267
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17269, !srcloc !16775
  call void @llvm.dbg.value(metadata i32 undef, metadata !17244, metadata !DIExpression()), !dbg !17248
  %11 = sext i32 %6 to i64, !dbg !17261
  %12 = add i64 %5, %11, !dbg !17270
  ret i64 %12, !dbg !17271
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17272 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17273
  %2 = trunc i64 %1 to i32, !dbg !17274
  ret i32 %2, !dbg !17275
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17276 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17277
  ret i64 %1, !dbg !17278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17279 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17281, metadata !DIExpression()), !dbg !17288
  %2 = icmp eq i32 %0, 0, !dbg !17289
  br i1 %2, label %10, label %3, !dbg !17291

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17292
  call void @llvm.dbg.value(metadata i32 %4, metadata !17282, metadata !DIExpression()), !dbg !17288
  %5 = mul i32 %0, 84, !dbg !17293
  call void @llvm.dbg.value(metadata i32 %5, metadata !17283, metadata !DIExpression()), !dbg !17288
  br label %6, !dbg !17294

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17295
  call void @llvm.dbg.value(metadata i32 %7, metadata !17284, metadata !DIExpression()), !dbg !17296
  %8 = sub i32 %7, %4, !dbg !17297
  %9 = icmp ult i32 %8, %5, !dbg !17299
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17301 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17302
  ret i32 %1, !dbg !17303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17304 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17306
  ret i32 %1, !dbg !17307
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17308 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17312, metadata !DIExpression()), !dbg !17314
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17315

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17316
  br label %14, !dbg !17320

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17313, metadata !DIExpression()), !dbg !17314
  %6 = icmp slt i64 %2, -1, !dbg !17321
  br i1 %6, label %7, label %9, !dbg !17324

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17325
  br label %14, !dbg !17326

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17328
  %11 = icmp ugt i64 %2, 1, !dbg !17329
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17329
  %13 = add nsw i64 %10, %12, !dbg !17330
  br label %14, !dbg !17331

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17332
  ret i64 %15, !dbg !17333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17334 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.376, i32 0, i32 0)) #25, !dbg !17336
  ret void, !dbg !17337
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!774, !2, !2485, !27, !271, !297, !2487, !2489, !2523, !2525, !307, !358, !2527, !2530, !2541, !2587, !2589, !2617, !2645, !2688, !2760, !2805, !387, !530, !2833, !566, !576, !601, !804, !2838, !942, !1008, !1311, !1535, !2877, !1648, !1738, !2879, !2965, !3030, !1790, !3033, !1797, !2172, !3051, !2192, !2303, !2421, !3053, !2446, !3056}
!llvm.ident = !{!3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058, !3058}
!llvm.module.flags = !{!3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "count_mutex", scope: !27, file: !116, line: 16, type: !262, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108, !109, !110, !111}
!102 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !102)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !141, !143, !154}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "count_threshold_cv", scope: !27, file: !116, line: 17, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2829, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !116, line: 14, type: !109, isLocal: true, isDefinition: true)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "tstacks", scope: !27, file: !116, line: 21, type: !145, isLocal: false, isDefinition: true, align: 512)
!145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 26112, elements: !151)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !148)
!147 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!148 = !{!149}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !146, file: !147, line: 48, baseType: !150, size: 8)
!150 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!151 = !{!152, !153}
!152 = !DISubrange(count: 3)
!153 = !DISubrange(count: 1088)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(name: "t", scope: !27, file: !116, line: 23, type: !156, isLocal: true, isDefinition: true)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 3840, elements: !261)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !159)
!158 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!159 = !{!160, !209, !222, !223, !224, !228, !229, !237, !256}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !157, file: !158, line: 247, baseType: !161, size: 384)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !162)
!162 = !{!163, !177, !179, !182, !183, !196, !197, !198}
!163 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 60, baseType: !164, size: 64)
!164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 60, size: 64, elements: !165)
!165 = !{!166, !168}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !164, file: !158, line: 61, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !164, file: !158, line: 62, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !171)
!170 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!171 = !{!172}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !169, file: !170, line: 50, baseType: !173, size: 64)
!173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !175)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!175 = !{!176}
!176 = !DISubrange(count: 2)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !161, file: !158, line: 68, baseType: !178, size: 32, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !161, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !181)
!181 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !161, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!183 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 90, baseType: !184, size: 16, offset: 112)
!184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 90, size: 16, elements: !185)
!185 = !{!186, !193}
!186 = !DIDerivedType(tag: DW_TAG_member, scope: !184, file: !158, line: 91, baseType: !187, size: 16)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !158, line: 91, size: 16, elements: !188)
!188 = !{!189, !192}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !187, file: !158, line: 96, baseType: !190, size: 8)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !191)
!191 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !187, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !184, file: !158, line: 100, baseType: !194, size: 16)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !195)
!195 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !161, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !161, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !161, file: !158, line: 131, baseType: !199, size: 192, offset: 192)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !200)
!200 = !{!201, !202, !208}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !199, file: !122, line: 245, baseType: !167, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !199, file: !122, line: 246, baseType: !203, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = !DISubroutineType(types: !206)
!206 = !{null, !207}
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !199, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !157, file: !158, line: 250, baseType: !210, size: 288, offset: 384)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !214, !215, !216, !217, !218, !219, !220, !221}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !210, file: !211, line: 26, baseType: !110, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !210, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !210, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !210, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !210, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !210, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !210, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !210, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !210, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !157, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !157, file: !158, line: 256, baseType: !121, size: 64, offset: 704)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !226)
!226 = !{!227}
!227 = !DISubrange(count: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !157, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !157, file: !158, line: 300, baseType: !230, size: 96, offset: 1056)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !231)
!231 = !{!232, !233, !236}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !230, file: !158, line: 153, baseType: !22, size: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !230, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !235, line: 214, baseType: !32)
!235 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !230, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !157, file: !158, line: 325, baseType: !238, size: 32, offset: 1152)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !240)
!240 = !{!241, !250, !251}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !118, line: 5074, baseType: !242, size: 96)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !244)
!243 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!244 = !{!245, !248, !249}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !242, file: !243, line: 57, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !243, line: 57, flags: DIFlagFwdDecl)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !242, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !242, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !239, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !239, file: !118, line: 5076, baseType: !252, size: 32, offset: 160)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !254)
!253 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !{!255}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !252, file: !253, line: 52, baseType: !22, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !157, file: !158, line: 343, baseType: !257, size: 64, offset: 1184)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !258)
!258 = !{!259, !260}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !257, file: !211, line: 63, baseType: !110, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !257, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!261 = !{!152}
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !263)
!263 = !{!264, !265, !267, !268}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !262, file: !118, line: 2722, baseType: !121, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !262, file: !118, line: 2724, baseType: !266, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !262, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !262, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !271, file: !288, line: 18, type: !289, isLocal: false, isDefinition: true)
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !273, globals: !287, splitDebugInlining: false, nameTableKind: None)
!272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!273 = !{!22, !107, !24, !274, !276, !278, !234, !109, !281, !282, !283, !284, !285, !286, !194, !279}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!287 = !{!269}
!288 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !292)
!291 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !{!293, !294}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 17, baseType: !279, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !290, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_char_out", scope: !297, file: !301, line: 54, type: !302, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!299 = !{!107, !109}
!300 = !{!295}
!301 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = !DISubroutineType(types: !304)
!304 = !{!109, !109}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !307, file: !324, line: 56, type: !325, isLocal: true, isDefinition: true, align: 32)
!307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !309, globals: !323, splitDebugInlining: false, nameTableKind: None)
!308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 259, baseType: !313)
!312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 250, size: 224, elements: !314)
!314 = !{!315, !317, !318, !319, !320, !321, !322}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !313, file: !312, line: 252, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !313, file: !312, line: 253, baseType: !316, size: 32, offset: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !313, file: !312, line: 254, baseType: !316, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !313, file: !312, line: 255, baseType: !316, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !313, file: !312, line: 256, baseType: !316, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !313, file: !312, line: 257, baseType: !316, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !313, file: !312, line: 258, baseType: !316, size: 32, offset: 192)
!323 = !{!305}
!324 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !328)
!327 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!328 = !{!329, !355}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !326, file: !327, line: 60, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DISubroutineType(types: !332)
!332 = !{!109, !333}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !337)
!336 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!337 = !{!338, !339, !340, !341, !348, !349}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !335, file: !336, line: 380, baseType: !279, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !335, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !335, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !335, file: !336, line: 386, baseType: !342, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !344)
!344 = !{!345, !346}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !343, file: !336, line: 359, baseType: !180, size: 8)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !343, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!347 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !335, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !335, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !336, line: 43, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !354)
!354 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !326, file: !327, line: 65, baseType: !333, size: 32, offset: 32)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !358, file: !361, line: 71, type: !362, isLocal: true, isDefinition: true, align: 32)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !360, splitDebugInlining: false, nameTableKind: None)
!359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!360 = !{!356}
!361 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !364)
!364 = !{!365, !384}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !363, file: !327, line: 60, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = !DISubroutineType(types: !368)
!368 = !{!109, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !372)
!372 = !{!373, !374, !375, !376, !382, !383}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !371, file: !336, line: 380, baseType: !279, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !371, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !371, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !371, file: !336, line: 386, baseType: !377, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !378, file: !336, line: 359, baseType: !180, size: 8)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !378, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !371, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !371, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !363, file: !327, line: 65, baseType: !369, size: 32, offset: 32)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !387, file: !394, line: 17, type: !523, isLocal: false, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!389 = !{!234, !109, !110, !107}
!390 = !{!385, !391, !519}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !505, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !500)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !473, !474, !480, !495}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !158, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !158, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !158, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !158, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !127, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !127, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !127, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !127, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !158, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !170, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !175)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !158, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !122, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !158, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !158, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !158, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !158, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !158, line: 96, baseType: !190, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !158, line: 100, baseType: !194, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !158, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !122, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !122, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !158, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !211, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !158, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !158, line: 300, baseType: !475, size: 96, offset: 1056)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !476)
!476 = !{!477, !478, !479}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !158, line: 153, baseType: !22, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !475, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !158, line: 325, baseType: !481, size: 32, offset: 1152)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !483)
!483 = !{!484, !490, !491}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !482, file: !118, line: 5074, baseType: !485, size: 96)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !486)
!486 = !{!487, !488, !489}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !485, file: !243, line: 57, baseType: !246, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !485, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !485, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !482, file: !118, line: 5075, baseType: !429, size: 64, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !482, file: !118, line: 5076, baseType: !492, size: 32, offset: 160)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !492, file: !253, line: 52, baseType: !22, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !158, line: 343, baseType: !496, size: 64, offset: 1184)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !497)
!497 = !{!498, !499}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !496, file: !211, line: 63, baseType: !110, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !496, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!500 = !{!501, !502, !503, !504}
!501 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!502 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !180)
!503 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!504 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !234)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 96, elements: !517)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !508)
!507 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !506, file: !507, line: 53, baseType: !22, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !506, file: !507, line: 54, baseType: !234, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !506, file: !507, line: 55, baseType: !512, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !514, file: !513, line: 150, baseType: !110, size: 32)
!517 = !{!518}
!518 = !DISubrange(count: 1)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 96, elements: !517)
!522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !291, line: 17, baseType: !279, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !524, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !530, file: !563, line: 39, type: !180, isLocal: true, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !532, globals: !562, splitDebugInlining: false, nameTableKind: None)
!531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!532 = !{!533, !107, !109, !550, !180}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !535, line: 1226, baseType: !536)
!535 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 1213, size: 352, elements: !537)
!537 = !{!538, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !536, file: !535, line: 1215, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !536, file: !535, line: 1216, baseType: !316, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !536, file: !535, line: 1217, baseType: !316, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !536, file: !535, line: 1218, baseType: !316, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !536, file: !535, line: 1219, baseType: !316, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !536, file: !535, line: 1220, baseType: !316, size: 32, offset: 160)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !536, file: !535, line: 1221, baseType: !316, size: 32, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !536, file: !535, line: 1222, baseType: !316, size: 32, offset: 224)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !536, file: !535, line: 1223, baseType: !316, size: 32, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !536, file: !535, line: 1224, baseType: !316, size: 32, offset: 288)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !536, file: !535, line: 1225, baseType: !316, size: 32, offset: 320)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !554)
!553 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !{!555, !556, !557}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !552, file: !553, line: 29, baseType: !110, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !552, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !552, file: !553, line: 37, baseType: !558, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !559, file: !513, line: 143, baseType: !110, size: 32)
!562 = !{!528}
!563 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !566, file: !573, line: 21, type: !302, isLocal: true, isDefinition: true)
!566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !568, globals: !572, splitDebugInlining: false, nameTableKind: None)
!567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!568 = !{!569, !109, !107}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !571, line: 22, baseType: !109)
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !{!564}
!573 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !576, file: !581, line: 13, type: !598, isLocal: true, isDefinition: true)
!576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !578, splitDebugInlining: false, nameTableKind: None)
!577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!578 = !{!579, !574}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "mpu_config", scope: !576, file: !581, line: 37, type: !582, isLocal: false, isDefinition: true)
!581 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !553, line: 41, size: 64, elements: !584)
!584 = !{!585, !586}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !583, file: !553, line: 43, baseType: !110, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !583, file: !553, line: 45, baseType: !587, size: 32, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !589, file: !553, line: 29, baseType: !110, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !589, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !589, file: !553, line: 37, baseType: !594, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !595)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !596)
!596 = !{!597}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !595, file: !513, line: 143, baseType: !110, size: 32)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 192, elements: !175)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !601, file: !685, line: 72, type: !769, isLocal: true, isDefinition: true)
!601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !603, retainedTypes: !671, globals: !682, splitDebugInlining: false, nameTableKind: None)
!602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!603 = !{!30, !604}
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !312, line: 65, baseType: !109, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670}
!606 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!607 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!608 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!609 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!610 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!611 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!612 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!613 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!614 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!615 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!616 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!617 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!618 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!619 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!620 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!621 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!622 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!623 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!624 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!625 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!626 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!627 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!628 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!629 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!630 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!631 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!632 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!633 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!634 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!635 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!636 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!637 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!638 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!639 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!640 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!641 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!642 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!643 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!644 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!645 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!646 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!647 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!648 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!649 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!650 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!651 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!652 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!653 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!654 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!655 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!656 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!657 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!658 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!659 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!660 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!661 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!662 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!663 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!664 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!665 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!666 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!667 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!668 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!669 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!670 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!671 = !{!234, !109, !107, !672}
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !312, line: 244, baseType: !674)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 236, size: 192, elements: !675)
!675 = !{!676, !677, !678, !679, !680, !681}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !674, file: !312, line: 238, baseType: !316, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !674, file: !312, line: 239, baseType: !316, size: 32, offset: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !674, file: !312, line: 240, baseType: !316, size: 32, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !674, file: !312, line: 241, baseType: !316, size: 32, offset: 96)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !674, file: !312, line: 242, baseType: !316, size: 32, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !674, file: !312, line: 243, baseType: !316, size: 32, offset: 160)
!682 = !{!683, !689, !705, !716, !733, !599, !735, !749, !751, !753, !755, !757, !759, !761, !763, !765, !767}
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !601, file: !685, line: 424, type: !686, isLocal: false, isDefinition: true, align: 16)
!685 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 64, elements: !687)
!687 = !{!688}
!688 = !DISubrange(count: 4)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !601, file: !685, line: 424, type: !691, isLocal: false, isDefinition: true, align: 32)
!691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !693)
!693 = !{!694, !695, !696, !697, !703, !704}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !692, file: !336, line: 380, baseType: !279, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !692, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !692, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !692, file: !336, line: 386, baseType: !698, size: 32, offset: 96)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 32)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !700)
!700 = !{!701, !702}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !699, file: !336, line: 359, baseType: !180, size: 8)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !699, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !692, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !692, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !601, file: !685, line: 424, type: !707, isLocal: true, isDefinition: true, align: 32)
!707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !708)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !709)
!709 = !{!710, !715}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !708, file: !327, line: 60, baseType: !711, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 32)
!712 = !DISubroutineType(types: !713)
!713 = !{!109, !714}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !708, file: !327, line: 65, baseType: !714, size: 32, offset: 32)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "exti_data", scope: !601, file: !685, line: 423, type: !718, isLocal: true, isDefinition: true)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !685, line: 107, size: 1472, elements: !719)
!719 = !{!720}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !718, file: !685, line: 109, baseType: !721, size: 1472)
!721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !722, size: 1472, elements: !731)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !685, line: 101, size: 64, elements: !723)
!723 = !{!724, !730}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !722, file: !685, line: 102, baseType: !725, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !726, line: 63, baseType: !727)
!726 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 32)
!728 = !DISubroutineType(types: !729)
!729 = !{null, !109, !107}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !722, file: !685, line: 103, baseType: !107, size: 32, offset: 32)
!731 = !{!732}
!732 = !DISubrange(count: 23)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !601, file: !685, line: 424, type: !699, isLocal: true, isDefinition: true, align: 8)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !737, file: !685, line: 493, type: !742, isLocal: true, isDefinition: true, align: 32)
!737 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !685, file: !685, line: 460, type: !738, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !740)
!738 = !DISubroutineType(types: !739)
!739 = !{null, !714}
!740 = !{!741}
!741 = !DILocalVariable(name: "dev", arg: 1, scope: !737, file: !685, line: 460, type: !714)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !743)
!743 = !{!744, !746, !747, !748}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !742, file: !10, line: 55, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !742, file: !10, line: 57, baseType: !745, size: 32, offset: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !742, file: !10, line: 59, baseType: !107, size: 32, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !742, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !737, file: !685, line: 497, type: !742, isLocal: true, isDefinition: true, align: 32)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !737, file: !685, line: 507, type: !742, isLocal: true, isDefinition: true, align: 32)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !737, file: !685, line: 512, type: !742, isLocal: true, isDefinition: true, align: 32)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !737, file: !685, line: 516, type: !742, isLocal: true, isDefinition: true, align: 32)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !737, file: !685, line: 523, type: !742, isLocal: true, isDefinition: true, align: 32)
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !737, file: !685, line: 527, type: !742, isLocal: true, isDefinition: true, align: 32)
!761 = !DIGlobalVariableExpression(var: !762, expr: !DIExpression())
!762 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !737, file: !685, line: 581, type: !742, isLocal: true, isDefinition: true, align: 32)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !737, file: !685, line: 586, type: !742, isLocal: true, isDefinition: true, align: 32)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !737, file: !685, line: 591, type: !742, isLocal: true, isDefinition: true, align: 32)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !737, file: !685, line: 595, type: !742, isLocal: true, isDefinition: true, align: 32)
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !770, size: 736, elements: !731)
!770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !312, line: 134, baseType: !604)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !774, file: !779, line: 22, type: !801, isLocal: false, isDefinition: true, align: 16)
!774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !775, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !776, splitDebugInlining: false, nameTableKind: None)
!775 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!776 = !{!777, !772, !783, !785, !787, !789, !791, !793, !795, !797, !799}
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !774, file: !779, line: 17, type: !780, isLocal: false, isDefinition: true, align: 16)
!779 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 192, elements: !781)
!781 = !{!782}
!782 = !DISubrange(count: 12)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !774, file: !779, line: 29, type: !686, isLocal: false, isDefinition: true, align: 16)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !774, file: !779, line: 36, type: !686, isLocal: false, isDefinition: true, align: 16)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !774, file: !779, line: 43, type: !686, isLocal: false, isDefinition: true, align: 16)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !774, file: !779, line: 50, type: !686, isLocal: false, isDefinition: true, align: 16)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !774, file: !779, line: 57, type: !686, isLocal: false, isDefinition: true, align: 16)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !774, file: !779, line: 64, type: !686, isLocal: false, isDefinition: true, align: 16)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !774, file: !779, line: 71, type: !686, isLocal: false, isDefinition: true, align: 16)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !774, file: !779, line: 78, type: !686, isLocal: false, isDefinition: true, align: 16)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !774, file: !779, line: 85, type: !686, isLocal: false, isDefinition: true, align: 16)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 48, elements: !261)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !804, file: !868, line: 398, type: !901, isLocal: true, isDefinition: true)
!804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !805, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !806, retainedTypes: !819, globals: !865, splitDebugInlining: false, nameTableKind: None)
!805 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!806 = !{!807, !30, !812}
!807 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !808, line: 197, baseType: !32, size: 32, elements: !809)
!808 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!809 = !{!810, !811}
!810 = !DIEnumerator(name: "SUCCESS", value: 0)
!811 = !DIEnumerator(name: "ERROR", value: 1)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !813, line: 44, baseType: !32, size: 32, elements: !814)
!813 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!814 = !{!815, !816, !817, !818}
!815 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!816 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!817 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!818 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!819 = !{!107, !109, !110, !820, !858, !864}
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 370, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 336, size: 1152, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !857}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !822, file: !312, line: 338, baseType: !316, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !822, file: !312, line: 339, baseType: !316, size: 32, offset: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !822, file: !312, line: 340, baseType: !316, size: 32, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !822, file: !312, line: 341, baseType: !316, size: 32, offset: 96)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !822, file: !312, line: 342, baseType: !316, size: 32, offset: 128)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !822, file: !312, line: 343, baseType: !316, size: 32, offset: 160)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !822, file: !312, line: 344, baseType: !316, size: 32, offset: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !822, file: !312, line: 345, baseType: !110, size: 32, offset: 224)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !822, file: !312, line: 346, baseType: !316, size: 32, offset: 256)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !822, file: !312, line: 347, baseType: !316, size: 32, offset: 288)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !822, file: !312, line: 348, baseType: !835, size: 64, offset: 320)
!835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !175)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !822, file: !312, line: 349, baseType: !316, size: 32, offset: 384)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !822, file: !312, line: 350, baseType: !316, size: 32, offset: 416)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !822, file: !312, line: 351, baseType: !316, size: 32, offset: 448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !822, file: !312, line: 352, baseType: !110, size: 32, offset: 480)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !822, file: !312, line: 353, baseType: !316, size: 32, offset: 512)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !822, file: !312, line: 354, baseType: !316, size: 32, offset: 544)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !822, file: !312, line: 355, baseType: !835, size: 64, offset: 576)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !822, file: !312, line: 356, baseType: !316, size: 32, offset: 640)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !822, file: !312, line: 357, baseType: !316, size: 32, offset: 672)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !822, file: !312, line: 358, baseType: !316, size: 32, offset: 704)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !822, file: !312, line: 359, baseType: !110, size: 32, offset: 736)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !822, file: !312, line: 360, baseType: !316, size: 32, offset: 768)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !822, file: !312, line: 361, baseType: !316, size: 32, offset: 800)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !822, file: !312, line: 362, baseType: !835, size: 64, offset: 832)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !822, file: !312, line: 363, baseType: !316, size: 32, offset: 896)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !822, file: !312, line: 364, baseType: !316, size: 32, offset: 928)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !822, file: !312, line: 365, baseType: !835, size: 64, offset: 960)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !822, file: !312, line: 366, baseType: !316, size: 32, offset: 1024)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !822, file: !312, line: 367, baseType: !316, size: 32, offset: 1056)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !822, file: !312, line: 368, baseType: !856, size: 32, offset: 1088)
!856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 32, elements: !517)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !822, file: !312, line: 369, baseType: !316, size: 32, offset: 1120)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !861)
!860 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!861 = !{!862, !863}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !859, file: !860, line: 344, baseType: !110, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !859, file: !860, line: 345, baseType: !110, size: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!865 = !{!866, !872, !888, !899, !802}
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !804, file: !868, line: 752, type: !869, isLocal: false, isDefinition: true, align: 16)
!868 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 704, elements: !870)
!870 = !{!871}
!871 = !DISubrange(count: 44)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !804, file: !868, line: 752, type: !874, isLocal: false, isDefinition: true, align: 32)
!874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !876)
!876 = !{!877, !878, !879, !880, !886, !887}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !875, file: !336, line: 380, baseType: !279, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !875, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !875, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !875, file: !336, line: 386, baseType: !881, size: 32, offset: 96)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !883)
!883 = !{!884, !885}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !882, file: !336, line: 359, baseType: !180, size: 8)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !882, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !875, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !875, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !804, file: !868, line: 752, type: !890, isLocal: true, isDefinition: true, align: 32)
!890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !891)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !892)
!892 = !{!893, !898}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !891, file: !327, line: 60, baseType: !894, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = !DISubroutineType(types: !896)
!896 = !{!109, !897}
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !891, file: !327, line: 65, baseType: !897, size: 32, offset: 32)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !804, file: !868, line: 752, type: !882, isLocal: true, isDefinition: true, align: 8)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !813, line: 100, size: 224, elements: !902)
!902 = !{!903, !909, !910, !919, !924, !929, !935}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !901, file: !813, line: 101, baseType: !904, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !813, line: 76, baseType: !905)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{!109, !897, !908}
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !813, line: 56, baseType: !107)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !901, file: !813, line: 102, baseType: !904, size: 32, offset: 32)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !901, file: !813, line: 103, baseType: !911, size: 32, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !813, line: 83, baseType: !912)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!109, !897, !908, !915, !107}
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !813, line: 72, baseType: !916)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = !DISubroutineType(types: !918)
!918 = !{null, !897, !908, !107}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !901, file: !813, line: 104, baseType: !920, size: 32, offset: 96)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !813, line: 79, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DISubroutineType(types: !923)
!923 = !{!109, !897, !908, !864}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !901, file: !813, line: 105, baseType: !925, size: 32, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !813, line: 88, baseType: !926)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DISubroutineType(types: !928)
!928 = !{!812, !897, !908}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !901, file: !813, line: 106, baseType: !930, size: 32, offset: 160)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !813, line: 92, baseType: !931)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = !DISubroutineType(types: !933)
!933 = !{!109, !897, !908, !934}
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !813, line: 64, baseType: !107)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !901, file: !813, line: 107, baseType: !936, size: 32, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !813, line: 96, baseType: !937)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{!109, !897, !908, !107}
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !942, file: !999, line: 603, type: !1001, isLocal: true, isDefinition: true, align: 32)
!942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !943, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !944, globals: !996, splitDebugInlining: false, nameTableKind: None)
!943 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!944 = !{!107, !109, !945}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !948, line: 336, size: 160, elements: !949)
!948 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!949 = !{!950, !970, !974, !978, !991}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !947, file: !948, line: 365, baseType: !951, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DISubroutineType(types: !953)
!953 = !{!109, !954, !969}
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !957)
!957 = !{!958, !959, !960, !961, !967, !968}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !956, file: !336, line: 380, baseType: !279, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !956, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !956, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !956, file: !336, line: 386, baseType: !962, size: 32, offset: 96)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !964)
!964 = !{!965, !966}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !963, file: !336, line: 359, baseType: !180, size: 8)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !963, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !956, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !956, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !947, file: !948, line: 366, baseType: !971, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !954, !181}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !947, file: !948, line: 374, baseType: !975, size: 32, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{!109, !954}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !947, file: !948, line: 377, baseType: !979, size: 32, offset: 96)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 32)
!980 = !DISubroutineType(types: !981)
!981 = !{!109, !954, !982}
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !948, line: 122, size: 64, elements: !985)
!985 = !{!986, !987, !988, !989, !990}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !984, file: !948, line: 123, baseType: !110, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !984, file: !948, line: 124, baseType: !180, size: 8, offset: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !984, file: !948, line: 125, baseType: !180, size: 8, offset: 40)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !984, file: !948, line: 126, baseType: !180, size: 8, offset: 48)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !984, file: !948, line: 127, baseType: !180, size: 8, offset: 56)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !947, file: !948, line: 379, baseType: !992, size: 32, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!993 = !DISubroutineType(types: !994)
!994 = !{!109, !954, !995}
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!996 = !{!940, !997}
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !942, file: !999, line: 38, type: !1000, isLocal: true, isDefinition: true)
!999 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1002, file: !327, line: 60, baseType: !975, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1002, file: !327, line: 65, baseType: !954, size: 32, offset: 32)
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1008, file: !1177, line: 762, type: !1286, isLocal: true, isDefinition: true)
!1008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1010, retainedTypes: !1028, globals: !1174, splitDebugInlining: false, nameTableKind: None)
!1009 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!1010 = !{!30, !1011, !1017, !1022, !812}
!1011 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1012, line: 506, baseType: !32, size: 32, elements: !1013)
!1012 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1013 = !{!1014, !1015, !1016}
!1014 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1015 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1016 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1017 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1012, line: 512, baseType: !32, size: 32, elements: !1018)
!1018 = !{!1019, !1020, !1021}
!1019 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1020 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1021 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1022 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !726, line: 43, baseType: !32, size: 32, elements: !1023)
!1023 = !{!1024, !1025, !1026, !1027}
!1024 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1025 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1026 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1027 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1028 = !{!107, !109, !1029, !1099, !1104, !1064, !1017, !1011, !1109, !1110, !110, !1124, !1079, !285, !1134, !1135}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1012, line: 523, size: 288, elements: !1032)
!1032 = !{!1033, !1054, !1060, !1065, !1069, !1070, !1071, !1075, !1095}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1031, file: !1012, line: 524, baseType: !1034, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!109, !1037, !1052, !1053}
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1040)
!1040 = !{!1041, !1042, !1043, !1044, !1050, !1051}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1039, file: !336, line: 380, baseType: !279, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1039, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1039, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1039, file: !336, line: 386, baseType: !1045, size: 32, offset: 96)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1047)
!1047 = !{!1048, !1049}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1046, file: !336, line: 359, baseType: !180, size: 8)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1046, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1039, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1039, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1012, line: 237, baseType: !180)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1012, line: 257, baseType: !110)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1031, file: !1012, line: 530, baseType: !1055, size: 32, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!109, !1037, !1058}
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1012, line: 229, baseType: !110)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1031, file: !1012, line: 532, baseType: !1061, size: 32, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!109, !1037, !1064, !1059}
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1012, line: 216, baseType: !110)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1031, file: !1012, line: 535, baseType: !1066, size: 32, offset: 96)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!109, !1037, !1064}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1031, file: !1012, line: 537, baseType: !1066, size: 32, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1031, file: !1012, line: 539, baseType: !1066, size: 32, offset: 160)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1031, file: !1012, line: 541, baseType: !1072, size: 32, offset: 192)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!109, !1037, !1052, !1011, !1017}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1031, file: !1012, line: 544, baseType: !1076, size: 32, offset: 224)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!109, !1037, !1079, !347}
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1012, line: 478, size: 96, elements: !1081)
!1081 = !{!1082, !1089, !1094}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1080, file: !1012, line: 482, baseType: !1083, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1084, line: 33, baseType: !1085)
!1084 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1084, line: 29, size: 32, elements: !1086)
!1086 = !{!1087}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1085, file: !1084, line: 30, baseType: !1088, size: 32)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1080, file: !1012, line: 485, baseType: !1090, size: 32, offset: 32)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1012, line: 464, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{null, !1037, !1079, !1064}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1080, file: !1012, line: 493, baseType: !1064, size: 32, offset: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1031, file: !1012, line: 547, baseType: !1096, size: 32, offset: 256)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!110, !1037}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1012, line: 428, size: 32, elements: !1102)
!1102 = !{!1103}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1101, file: !1012, line: 434, baseType: !1064, size: 32)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1012, line: 441, size: 32, elements: !1107)
!1107 = !{!1108}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1106, file: !1012, line: 447, baseType: !1064, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 276, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 265, size: 320, elements: !1113)
!1113 = !{!1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1112, file: !312, line: 267, baseType: !316, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1112, file: !312, line: 268, baseType: !316, size: 32, offset: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1112, file: !312, line: 269, baseType: !316, size: 32, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1112, file: !312, line: 270, baseType: !316, size: 32, offset: 96)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1112, file: !312, line: 271, baseType: !316, size: 32, offset: 128)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1112, file: !312, line: 272, baseType: !316, size: 32, offset: 160)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1112, file: !312, line: 273, baseType: !316, size: 32, offset: 192)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1112, file: !312, line: 274, baseType: !316, size: 32, offset: 224)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1112, file: !312, line: 275, baseType: !1123, size: 64, offset: 256)
!1123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !175)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !312, line: 289, baseType: !1126)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 282, size: 288, elements: !1127)
!1127 = !{!1128, !1129, !1130, !1132, !1133}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1126, file: !312, line: 284, baseType: !316, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1126, file: !312, line: 285, baseType: !316, size: 32, offset: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1126, file: !312, line: 286, baseType: !1131, size: 128, offset: 64)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !687)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1126, file: !312, line: 287, baseType: !835, size: 64, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1126, file: !312, line: 288, baseType: !316, size: 32, offset: 256)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !813, line: 100, size: 224, elements: !1138)
!1138 = !{!1139, !1144, !1145, !1154, !1159, !1164, !1169}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1137, file: !813, line: 101, baseType: !1140, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !813, line: 76, baseType: !1141)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!109, !1037, !908}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1137, file: !813, line: 102, baseType: !1140, size: 32, offset: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1137, file: !813, line: 103, baseType: !1146, size: 32, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !813, line: 83, baseType: !1147)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!109, !1037, !908, !1150, !107}
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !813, line: 72, baseType: !1151)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{null, !1037, !908, !107}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1137, file: !813, line: 104, baseType: !1155, size: 32, offset: 96)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !813, line: 79, baseType: !1156)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 32)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!109, !1037, !908, !864}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1137, file: !813, line: 105, baseType: !1160, size: 32, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !813, line: 88, baseType: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!812, !1037, !908}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1137, file: !813, line: 106, baseType: !1165, size: 32, offset: 160)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !813, line: 92, baseType: !1166)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!109, !1037, !908, !934}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1137, file: !813, line: 107, baseType: !1170, size: 32, offset: 192)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !813, line: 96, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!109, !1037, !908, !107}
!1174 = !{!1175, !1181, !1183, !1193, !1198, !1200, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1278, !1280, !1006, !1282, !1284, !1297, !1299, !1301, !1303, !1305, !1307}
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1008, file: !1177, line: 762, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1177 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 80, elements: !1179)
!1179 = !{!1180}
!1180 = !DISubrange(count: 5)
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1008, file: !1177, line: 762, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1008, file: !1177, line: 762, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1187)
!1187 = !{!1188, !1192}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1186, file: !327, line: 60, baseType: !1189, size: 32)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 32)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{!109, !1037}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1186, file: !327, line: 65, baseType: !1037, size: 32, offset: 32)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1008, file: !1177, line: 766, type: !1195, isLocal: false, isDefinition: true, align: 16)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 160, elements: !1196)
!1196 = !{!1197}
!1197 = !DISubrange(count: 10)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1008, file: !1177, line: 766, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1008, file: !1177, line: 766, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1008, file: !1177, line: 770, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1008, file: !1177, line: 770, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1008, file: !1177, line: 770, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1008, file: !1177, line: 774, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1008, file: !1177, line: 774, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1008, file: !1177, line: 774, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1008, file: !1177, line: 778, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1008, file: !1177, line: 778, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1008, file: !1177, line: 778, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1008, file: !1177, line: 782, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1008, file: !1177, line: 782, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1008, file: !1177, line: 782, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1008, file: !1177, line: 786, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1008, file: !1177, line: 786, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1008, file: !1177, line: 786, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1008, file: !1177, line: 790, type: !1178, isLocal: false, isDefinition: true, align: 16)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1008, file: !1177, line: 790, type: !1038, isLocal: false, isDefinition: true, align: 32)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1008, file: !1177, line: 790, type: !1185, isLocal: true, isDefinition: true, align: 32)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1008, file: !1177, line: 762, type: !1240, isLocal: true, isDefinition: true)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1241, line: 237, size: 128, elements: !1242)
!1241 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1242 = !{!1243, !1244, !1245}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1240, file: !1241, line: 239, baseType: !1106, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1240, file: !1241, line: 241, baseType: !1037, size: 32, offset: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1240, file: !1241, line: 243, baseType: !1246, size: 64, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1084, line: 40, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1084, line: 35, size: 64, elements: !1248)
!1248 = !{!1249, !1251}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1247, file: !1084, line: 36, baseType: !1250, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1247, file: !1084, line: 37, baseType: !1250, size: 32, offset: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1008, file: !1177, line: 762, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1008, file: !1177, line: 766, type: !1240, isLocal: true, isDefinition: true)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1008, file: !1177, line: 766, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1008, file: !1177, line: 770, type: !1240, isLocal: true, isDefinition: true)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1008, file: !1177, line: 770, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1008, file: !1177, line: 774, type: !1240, isLocal: true, isDefinition: true)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1008, file: !1177, line: 774, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1008, file: !1177, line: 778, type: !1240, isLocal: true, isDefinition: true)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1008, file: !1177, line: 778, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1008, file: !1177, line: 782, type: !1240, isLocal: true, isDefinition: true)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1008, file: !1177, line: 782, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1008, file: !1177, line: 786, type: !1240, isLocal: true, isDefinition: true)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1008, file: !1177, line: 786, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1008, file: !1177, line: 790, type: !1240, isLocal: true, isDefinition: true)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1008, file: !1177, line: 790, type: !1046, isLocal: true, isDefinition: true, align: 8)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1008, file: !1177, line: 656, type: !1030, isLocal: true, isDefinition: true)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1008, file: !1177, line: 766, type: !1286, isLocal: true, isDefinition: true)
!1286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1241, line: 224, size: 160, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1292}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1287, file: !1241, line: 226, baseType: !1101, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1287, file: !1241, line: 228, baseType: !864, size: 32, offset: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1287, file: !1241, line: 230, baseType: !109, size: 32, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1287, file: !1241, line: 231, baseType: !1293, size: 64, offset: 96)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !1294)
!1294 = !{!1295, !1296}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1293, file: !860, line: 344, baseType: !110, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1293, file: !860, line: 345, baseType: !110, size: 32, offset: 32)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1008, file: !1177, line: 770, type: !1286, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1008, file: !1177, line: 774, type: !1286, isLocal: true, isDefinition: true)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1008, file: !1177, line: 778, type: !1286, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1008, file: !1177, line: 782, type: !1286, isLocal: true, isDefinition: true)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1008, file: !1177, line: 786, type: !1286, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1008, file: !1177, line: 790, type: !1286, isLocal: true, isDefinition: true)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1311, file: !1450, line: 44, type: !1528, isLocal: false, isDefinition: true)
!1311 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1312, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1313, retainedTypes: !1346, globals: !1447, splitDebugInlining: false, nameTableKind: None)
!1312 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!1313 = !{!30, !1314, !1321, !1328, !1335, !1341, !812}
!1314 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !948, line: 47, baseType: !32, size: 32, elements: !1315)
!1315 = !{!1316, !1317, !1318, !1319, !1320}
!1316 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1317 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1318 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1319 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1320 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1321 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !948, line: 75, baseType: !32, size: 32, elements: !1322)
!1322 = !{!1323, !1324, !1325, !1326, !1327}
!1323 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1324 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1325 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1326 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1327 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1328 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !948, line: 92, baseType: !32, size: 32, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1333, !1334}
!1330 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1331 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1332 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1333 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1334 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !948, line: 84, baseType: !32, size: 32, elements: !1336)
!1336 = !{!1337, !1338, !1339, !1340}
!1337 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1338 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1339 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1340 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1341 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !948, line: 107, baseType: !32, size: 32, elements: !1342)
!1342 = !{!1343, !1344, !1345}
!1343 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1344 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1345 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1346 = !{!107, !109, !1347, !181, !180, !1396, !110, !908, !1407, !194, !111, !1446}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !948, line: 336, size: 160, elements: !1350)
!1350 = !{!1351, !1370, !1374, !1378, !1391}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1349, file: !948, line: 365, baseType: !1352, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!109, !1355, !969}
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1358)
!1358 = !{!1359, !1360, !1361, !1362, !1368, !1369}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1357, file: !336, line: 380, baseType: !279, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1357, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1357, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1357, file: !336, line: 386, baseType: !1363, size: 32, offset: 96)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 32)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1365)
!1365 = !{!1366, !1367}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1364, file: !336, line: 359, baseType: !180, size: 8)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1364, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1357, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1357, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1349, file: !948, line: 366, baseType: !1371, size: 32, offset: 32)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 32)
!1372 = !DISubroutineType(types: !1373)
!1373 = !{null, !1355, !181}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1349, file: !948, line: 374, baseType: !1375, size: 32, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 32)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!109, !1355}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1349, file: !948, line: 377, baseType: !1379, size: 32, offset: 96)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{!109, !1355, !1382}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !948, line: 122, size: 64, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1389, !1390}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1384, file: !948, line: 123, baseType: !110, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1384, file: !948, line: 124, baseType: !180, size: 8, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1384, file: !948, line: 125, baseType: !180, size: 8, offset: 40)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1384, file: !948, line: 126, baseType: !180, size: 8, offset: 48)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1384, file: !948, line: 127, baseType: !180, size: 8, offset: 56)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1349, file: !948, line: 379, baseType: !1392, size: 32, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!109, !1355, !1395}
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !312, line: 508, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 499, size: 224, elements: !1399)
!1399 = !{!1400, !1401, !1402, !1403, !1404, !1405, !1406}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1398, file: !312, line: 501, baseType: !316, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1398, file: !312, line: 502, baseType: !316, size: 32, offset: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1398, file: !312, line: 503, baseType: !316, size: 32, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1398, file: !312, line: 504, baseType: !316, size: 32, offset: 96)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1398, file: !312, line: 505, baseType: !316, size: 32, offset: 128)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1398, file: !312, line: 506, baseType: !316, size: 32, offset: 160)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1398, file: !312, line: 507, baseType: !316, size: 32, offset: 192)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1409)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !813, line: 100, size: 224, elements: !1410)
!1410 = !{!1411, !1416, !1417, !1426, !1431, !1436, !1441}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1409, file: !813, line: 101, baseType: !1412, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !813, line: 76, baseType: !1413)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{!109, !1355, !908}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1409, file: !813, line: 102, baseType: !1412, size: 32, offset: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1409, file: !813, line: 103, baseType: !1418, size: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !813, line: 83, baseType: !1419)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!109, !1355, !908, !1422, !107}
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !813, line: 72, baseType: !1423)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{null, !1355, !908, !107}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1409, file: !813, line: 104, baseType: !1427, size: 32, offset: 96)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !813, line: 79, baseType: !1428)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!109, !1355, !908, !864}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1409, file: !813, line: 105, baseType: !1432, size: 32, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !813, line: 88, baseType: !1433)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 32)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{!812, !1355, !908}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1409, file: !813, line: 106, baseType: !1437, size: 32, offset: 160)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !813, line: 92, baseType: !1438)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 32)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!109, !1355, !908, !934}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1409, file: !813, line: 107, baseType: !1442, size: 32, offset: 192)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !813, line: 96, baseType: !1443)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!109, !1355, !908, !107}
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!1447 = !{!1309, !1448, !1454, !1456, !1463, !1465, !1509, !1512, !1514, !1517, !1520, !1522}
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1451, isLocal: false, isDefinition: true, align: 16)
!1450 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 128, elements: !1452)
!1452 = !{!1453}
!1453 = !DISubrange(count: 8)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1356, isLocal: false, isDefinition: true, align: 32)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1458, isLocal: true, isDefinition: true, align: 32)
!1458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1459)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1460)
!1460 = !{!1461, !1462}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1459, file: !327, line: 60, baseType: !1375, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1459, file: !327, line: 65, baseType: !1355, size: 32, offset: 32)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1364, isLocal: true, isDefinition: true, align: 8)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1311, file: !1450, line: 1914, type: !1467, isLocal: true, isDefinition: true)
!1467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1469, line: 22, size: 224, elements: !1470)
!1469 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1470 = !{!1471, !1472, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1468, file: !1469, line: 24, baseType: !1396, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1468, file: !1469, line: 26, baseType: !1473, size: 32, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1475)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !1476)
!1476 = !{!1477, !1478}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1475, file: !860, line: 344, baseType: !110, size: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1475, file: !860, line: 345, baseType: !110, size: 32, offset: 32)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1468, file: !1469, line: 28, baseType: !234, size: 32, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1468, file: !1469, line: 30, baseType: !347, size: 8, offset: 96)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1468, file: !1469, line: 32, baseType: !109, size: 32, offset: 128)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1468, file: !1469, line: 34, baseType: !347, size: 8, offset: 160)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1468, file: !1469, line: 36, baseType: !347, size: 8, offset: 168)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1468, file: !1469, line: 38, baseType: !347, size: 8, offset: 176)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1468, file: !1469, line: 40, baseType: !347, size: 8, offset: 184)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1468, file: !1469, line: 41, baseType: !1487, size: 32, offset: 192)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1490, line: 60, size: 64, elements: !1491)
!1490 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1491 = !{!1492, !1508}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1489, file: !1490, line: 69, baseType: !1493, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1495)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1490, line: 50, size: 64, elements: !1496)
!1496 = !{!1497, !1506, !1507}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1495, file: !1490, line: 52, baseType: !1498, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1501, line: 37, baseType: !1502)
!1501 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1501, line: 32, size: 64, elements: !1503)
!1503 = !{!1504, !1505}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1502, file: !1501, line: 34, baseType: !110, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1502, file: !1501, line: 36, baseType: !110, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1495, file: !1490, line: 54, baseType: !180, size: 8, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1495, file: !1490, line: 56, baseType: !180, size: 8, offset: 40)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1489, file: !1490, line: 71, baseType: !180, size: 8, offset: 32)
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1311, file: !1450, line: 1914, type: !1511, isLocal: true, isDefinition: true)
!1511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 64, elements: !517)
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1488, isLocal: true, isDefinition: true)
!1514 = !DIGlobalVariableExpression(var: !1515, expr: !DIExpression())
!1515 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1516, isLocal: true, isDefinition: true)
!1516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1494, size: 64, elements: !517)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1311, file: !1450, line: 1914, type: !1519, isLocal: true, isDefinition: true)
!1519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1499, size: 128, elements: !175)
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1311, file: !1450, line: 1539, type: !1348, isLocal: true, isDefinition: true)
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1311, file: !1450, line: 1914, type: !1524, isLocal: true, isDefinition: true)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1469, line: 74, size: 64, elements: !1525)
!1525 = !{!1526, !1527}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1524, file: !1469, line: 76, baseType: !110, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1524, file: !1469, line: 78, baseType: !1355, size: 32, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !1530)
!1530 = !{!1531, !1532}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1529, file: !291, line: 17, baseType: !279, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1529, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!1533 = !DIGlobalVariableExpression(var: !1534, expr: !DIExpression())
!1534 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1535, file: !1611, line: 65, type: !316, isLocal: true, isDefinition: true)
!1535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1536, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1537, retainedTypes: !1538, globals: !1608, splitDebugInlining: false, nameTableKind: None)
!1536 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!1537 = !{!604}
!1538 = !{!103, !1539, !745, !180, !110, !1547, !1578}
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !1542)
!1542 = !{!1543, !1544, !1545, !1546}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1541, file: !535, line: 766, baseType: !316, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1541, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1541, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1541, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1549)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1550)
!1550 = !{!1551, !1553, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1568, !1573, !1577}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1549, file: !535, line: 413, baseType: !1552, size: 256)
!1552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1452)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1549, file: !535, line: 414, baseType: !1554, size: 768, offset: 256)
!1554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1555)
!1555 = !{!1556}
!1556 = !DISubrange(count: 24)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1549, file: !535, line: 415, baseType: !1552, size: 256, offset: 1024)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1549, file: !535, line: 416, baseType: !1554, size: 768, offset: 1280)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1549, file: !535, line: 417, baseType: !1552, size: 256, offset: 2048)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1549, file: !535, line: 418, baseType: !1554, size: 768, offset: 2304)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1549, file: !535, line: 419, baseType: !1552, size: 256, offset: 3072)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1549, file: !535, line: 420, baseType: !1554, size: 768, offset: 3328)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1549, file: !535, line: 421, baseType: !1552, size: 256, offset: 4096)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1549, file: !535, line: 422, baseType: !1565, size: 1792, offset: 4352)
!1565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1566)
!1566 = !{!1567}
!1567 = !DISubrange(count: 56)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1549, file: !535, line: 423, baseType: !1569, size: 1920, offset: 6144)
!1569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1570, size: 1920, elements: !1571)
!1570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !180)
!1571 = !{!1572}
!1572 = !DISubrange(count: 240)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1549, file: !535, line: 424, baseType: !1574, size: 20608, offset: 8064)
!1574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1575)
!1575 = !{!1576}
!1576 = !DISubrange(count: 644)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1549, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1581)
!1581 = !{!1582, !1583, !1584, !1585, !1586, !1587, !1588, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1599, !1600, !1601, !1603, !1605, !1607}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1580, file: !535, line: 447, baseType: !539, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1580, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1580, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1580, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1580, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1580, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1580, file: !535, line: 453, baseType: !1589, size: 96, offset: 192)
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1570, size: 96, elements: !781)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1580, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1580, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1580, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1580, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1580, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1580, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1580, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1580, file: !535, line: 461, baseType: !1598, size: 64, offset: 512)
!1598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 64, elements: !175)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1580, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1580, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1580, file: !535, line: 464, baseType: !1602, size: 128, offset: 640)
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 128, elements: !687)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1580, file: !535, line: 465, baseType: !1604, size: 160, offset: 768)
!1604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 160, elements: !1179)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1580, file: !535, line: 466, baseType: !1606, size: 160, offset: 928)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1179)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1580, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1608 = !{!1609, !1635, !1640, !1642, !1644, !1533}
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1535, file: !1611, line: 285, type: !1612, isLocal: true, isDefinition: true, align: 32)
!1611 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1614)
!1614 = !{!1615, !1634}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1613, file: !327, line: 60, baseType: !1616, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!109, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1622)
!1622 = !{!1623, !1624, !1625, !1626, !1632, !1633}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1621, file: !336, line: 380, baseType: !279, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1621, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1621, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1621, file: !336, line: 386, baseType: !1627, size: 32, offset: 96)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1629)
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1628, file: !336, line: 359, baseType: !180, size: 8)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1628, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1621, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1621, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1613, file: !327, line: 65, baseType: !1619, size: 32, offset: 32)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "lock", scope: !1535, file: !1611, line: 34, type: !1637, isLocal: true, isDefinition: true)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !1638)
!1638 = !{!1639}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1637, file: !253, line: 52, baseType: !22, size: 32)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "last_load", scope: !1535, file: !1611, line: 36, type: !110, isLocal: true, isDefinition: true)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1535, file: !1611, line: 48, type: !110, isLocal: true, isDefinition: true)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1535, file: !1611, line: 54, type: !110, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1648, file: !1730, line: 22, type: !1732, isLocal: true, isDefinition: true)
!1648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1649, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1650, retainedTypes: !1651, globals: !1727, splitDebugInlining: false, nameTableKind: None)
!1649 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!1650 = !{!1011, !1017}
!1651 = !{!1652, !1716, !1721, !1064, !1017, !1011, !1726, !107}
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1012, line: 523, size: 288, elements: !1655)
!1655 = !{!1656, !1675, !1679, !1683, !1687, !1688, !1689, !1693, !1712}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1654, file: !1012, line: 524, baseType: !1657, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!109, !1660, !1052, !1053}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1673, !1674}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1662, file: !336, line: 380, baseType: !279, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1662, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1662, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1662, file: !336, line: 386, baseType: !1668, size: 32, offset: 96)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1669, file: !336, line: 359, baseType: !180, size: 8)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1669, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1662, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1662, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1654, file: !1012, line: 530, baseType: !1676, size: 32, offset: 32)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!109, !1660, !1058}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1654, file: !1012, line: 532, baseType: !1680, size: 32, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{!109, !1660, !1064, !1059}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1654, file: !1012, line: 535, baseType: !1684, size: 32, offset: 96)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!109, !1660, !1064}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1654, file: !1012, line: 537, baseType: !1684, size: 32, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1654, file: !1012, line: 539, baseType: !1684, size: 32, offset: 160)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1654, file: !1012, line: 541, baseType: !1690, size: 32, offset: 192)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 32)
!1691 = !DISubroutineType(types: !1692)
!1692 = !{!109, !1660, !1052, !1011, !1017}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1654, file: !1012, line: 544, baseType: !1694, size: 32, offset: 224)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{!109, !1660, !1697, !347}
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 32)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1012, line: 478, size: 96, elements: !1699)
!1699 = !{!1700, !1706, !1711}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1698, file: !1012, line: 482, baseType: !1701, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1084, line: 33, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1084, line: 29, size: 32, elements: !1703)
!1703 = !{!1704}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1702, file: !1084, line: 30, baseType: !1705, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1698, file: !1012, line: 485, baseType: !1707, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1012, line: 464, baseType: !1708)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{null, !1660, !1697, !1064}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1698, file: !1012, line: 493, baseType: !1064, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1654, file: !1012, line: 547, baseType: !1713, size: 32, offset: 256)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = !DISubroutineType(types: !1715)
!1715 = !{!110, !1660}
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1012, line: 428, size: 32, elements: !1719)
!1719 = !{!1720}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1718, file: !1012, line: 434, baseType: !1064, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1012, line: 441, size: 32, elements: !1724)
!1724 = !{!1725}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1723, file: !1012, line: 447, baseType: !1064, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1727 = !{!1728, !1646}
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1729 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1648, file: !1730, line: 37, type: !1731, isLocal: true, isDefinition: true)
!1730 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !234)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1733, size: 352, elements: !1734)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1660)
!1734 = !{!1735}
!1735 = !DISubrange(count: 11)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1738, file: !1780, line: 139, type: !1787, isLocal: false, isDefinition: true)
!1738 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1739, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1740, globals: !1777, splitDebugInlining: false, nameTableKind: None)
!1739 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!1740 = !{!1741}
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 370, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 336, size: 1152, elements: !1744)
!1744 = !{!1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1743, file: !312, line: 338, baseType: !316, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1743, file: !312, line: 339, baseType: !316, size: 32, offset: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1743, file: !312, line: 340, baseType: !316, size: 32, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1743, file: !312, line: 341, baseType: !316, size: 32, offset: 96)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1743, file: !312, line: 342, baseType: !316, size: 32, offset: 128)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1743, file: !312, line: 343, baseType: !316, size: 32, offset: 160)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1743, file: !312, line: 344, baseType: !316, size: 32, offset: 192)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1743, file: !312, line: 345, baseType: !110, size: 32, offset: 224)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1743, file: !312, line: 346, baseType: !316, size: 32, offset: 256)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1743, file: !312, line: 347, baseType: !316, size: 32, offset: 288)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1743, file: !312, line: 348, baseType: !835, size: 64, offset: 320)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1743, file: !312, line: 349, baseType: !316, size: 32, offset: 384)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1743, file: !312, line: 350, baseType: !316, size: 32, offset: 416)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1743, file: !312, line: 351, baseType: !316, size: 32, offset: 448)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1743, file: !312, line: 352, baseType: !110, size: 32, offset: 480)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1743, file: !312, line: 353, baseType: !316, size: 32, offset: 512)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1743, file: !312, line: 354, baseType: !316, size: 32, offset: 544)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1743, file: !312, line: 355, baseType: !835, size: 64, offset: 576)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1743, file: !312, line: 356, baseType: !316, size: 32, offset: 640)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1743, file: !312, line: 357, baseType: !316, size: 32, offset: 672)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1743, file: !312, line: 358, baseType: !316, size: 32, offset: 704)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1743, file: !312, line: 359, baseType: !110, size: 32, offset: 736)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1743, file: !312, line: 360, baseType: !316, size: 32, offset: 768)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1743, file: !312, line: 361, baseType: !316, size: 32, offset: 800)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1743, file: !312, line: 362, baseType: !835, size: 64, offset: 832)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1743, file: !312, line: 363, baseType: !316, size: 32, offset: 896)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1743, file: !312, line: 364, baseType: !316, size: 32, offset: 928)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1743, file: !312, line: 365, baseType: !835, size: 64, offset: 960)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1743, file: !312, line: 366, baseType: !316, size: 32, offset: 1024)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1743, file: !312, line: 367, baseType: !316, size: 32, offset: 1056)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1743, file: !312, line: 368, baseType: !856, size: 32, offset: 1088)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1743, file: !312, line: 369, baseType: !316, size: 32, offset: 1120)
!1777 = !{!1778, !1781, !1736}
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1738, file: !1780, line: 137, type: !110, isLocal: false, isDefinition: true)
!1780 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1781 = !DIGlobalVariableExpression(var: !1782, expr: !DIExpression())
!1782 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1738, file: !1780, line: 138, type: !1783, isLocal: false, isDefinition: true)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1784, size: 128, elements: !1785)
!1784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!1785 = !{!1786}
!1786 = !DISubrange(count: 16)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1784, size: 64, elements: !1452)
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1790, file: !1793, line: 23, type: !1794, isLocal: false, isDefinition: true)
!1790 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1791, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !1792, splitDebugInlining: false, nameTableKind: None)
!1791 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!1792 = !{!1788}
!1793 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1795 = !DIGlobalVariableExpression(var: !1796, expr: !DIExpression())
!1796 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1797, file: !1801, line: 37, type: !2057, isLocal: false, isDefinition: true)
!1797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1798, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1799, retainedTypes: !1808, globals: !1881, splitDebugInlining: false, nameTableKind: None)
!1798 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!1799 = !{!1800, !30, !604}
!1800 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1801, line: 63, baseType: !32, size: 32, elements: !1802)
!1801 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1802 = !{!1803, !1804, !1805, !1806, !1807}
!1803 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1804 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1805 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1806 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1807 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1808 = !{!234, !107, !109, !1809, !285, !110, !1839, !745, !180, !1864}
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1812, line: 51, size: 64, elements: !1813)
!1812 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1813 = !{!1814, !1834}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1811, file: !1812, line: 52, baseType: !1815, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1812, line: 38, baseType: !1816)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!109, !1819, !286, !194}
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1821)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1822)
!1822 = !{!1823, !1824, !1825, !1826, !1832, !1833}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1821, file: !336, line: 380, baseType: !279, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1821, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1821, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1821, file: !336, line: 386, baseType: !1827, size: 32, offset: 96)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 32)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1829)
!1829 = !{!1830, !1831}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1828, file: !336, line: 359, baseType: !180, size: 8)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1828, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1821, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1821, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1811, file: !1812, line: 53, baseType: !1835, size: 32, offset: 32)
!1835 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1812, line: 47, baseType: !1836)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!109, !1819, !286, !194, !110}
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1841)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1841, file: !535, line: 447, baseType: !539, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1841, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1841, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1841, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1841, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1841, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1841, file: !535, line: 453, baseType: !1589, size: 96, offset: 192)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1841, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1841, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1841, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1841, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1841, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1841, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1841, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1841, file: !535, line: 461, baseType: !1598, size: 64, offset: 512)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1841, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1841, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1841, file: !535, line: 464, baseType: !1602, size: 128, offset: 640)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1841, file: !535, line: 465, baseType: !1604, size: 160, offset: 768)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1841, file: !535, line: 466, baseType: !1606, size: 160, offset: 928)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1841, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1867)
!1867 = !{!1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1866, file: !535, line: 413, baseType: !1552, size: 256)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1866, file: !535, line: 414, baseType: !1554, size: 768, offset: 256)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1866, file: !535, line: 415, baseType: !1552, size: 256, offset: 1024)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1866, file: !535, line: 416, baseType: !1554, size: 768, offset: 1280)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1866, file: !535, line: 417, baseType: !1552, size: 256, offset: 2048)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1866, file: !535, line: 418, baseType: !1554, size: 768, offset: 2304)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1866, file: !535, line: 419, baseType: !1552, size: 256, offset: 3072)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1866, file: !535, line: 420, baseType: !1554, size: 768, offset: 3328)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1866, file: !535, line: 421, baseType: !1552, size: 256, offset: 4096)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1866, file: !535, line: 422, baseType: !1565, size: 1792, offset: 4352)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1866, file: !535, line: 423, baseType: !1569, size: 1920, offset: 6144)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1866, file: !535, line: 424, baseType: !1574, size: 20608, offset: 8064)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1866, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1881 = !{!1795, !1882, !2008, !2015, !2017, !2020, !2025, !2027, !2032}
!1882 = !DIGlobalVariableExpression(var: !1883, expr: !DIExpression())
!1883 = distinct !DIGlobalVariable(name: "_kernel", scope: !1797, file: !1801, line: 40, type: !1884, isLocal: false, isDefinition: true)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1885)
!1885 = !{!1886, !2003}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1884, file: !122, line: 159, baseType: !1887, size: 192)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1888, size: 192, elements: !517)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1996, !1997, !1998, !1999}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1888, file: !122, line: 102, baseType: !110, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1888, file: !122, line: 105, baseType: !285, size: 32, offset: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1888, file: !122, line: 108, baseType: !1893, size: 32, offset: 64)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !1895)
!1895 = !{!1896, !1954, !1966, !1967, !1968, !1969, !1970, !1976, !1991}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1894, file: !158, line: 247, baseType: !1897, size: 384)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !1898)
!1898 = !{!1899, !1923, !1930, !1931, !1932, !1941, !1942, !1943}
!1899 = !DIDerivedType(tag: DW_TAG_member, scope: !1897, file: !158, line: 60, baseType: !1900, size: 64)
!1900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1897, file: !158, line: 60, size: 64, elements: !1901)
!1901 = !{!1902, !1917}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1900, file: !158, line: 61, baseType: !1903, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !1904)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !1905)
!1905 = !{!1906, !1912}
!1906 = !DIDerivedType(tag: DW_TAG_member, scope: !1904, file: !127, line: 38, baseType: !1907, size: 32)
!1907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1904, file: !127, line: 38, size: 32, elements: !1908)
!1908 = !{!1909, !1911}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1907, file: !127, line: 39, baseType: !1910, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1907, file: !127, line: 40, baseType: !1910, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, scope: !1904, file: !127, line: 42, baseType: !1913, size: 32, offset: 32)
!1913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1904, file: !127, line: 42, size: 32, elements: !1914)
!1914 = !{!1915, !1916}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1913, file: !127, line: 43, baseType: !1910, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1913, file: !127, line: 44, baseType: !1910, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1900, file: !158, line: 62, baseType: !1918, size: 64)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !1919)
!1919 = !{!1920}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1918, file: !170, line: 50, baseType: !1921, size: 64)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1922, size: 64, elements: !175)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1897, file: !158, line: 68, baseType: !1924, size: 32, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !1926)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !1927)
!1927 = !{!1928}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1926, file: !122, line: 232, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !1904)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1897, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1897, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!1932 = !DIDerivedType(tag: DW_TAG_member, scope: !1897, file: !158, line: 90, baseType: !1933, size: 16, offset: 112)
!1933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1897, file: !158, line: 90, size: 16, elements: !1934)
!1934 = !{!1935, !1940}
!1935 = !DIDerivedType(tag: DW_TAG_member, scope: !1933, file: !158, line: 91, baseType: !1936, size: 16)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1933, file: !158, line: 91, size: 16, elements: !1937)
!1937 = !{!1938, !1939}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1936, file: !158, line: 96, baseType: !190, size: 8)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1936, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1933, file: !158, line: 100, baseType: !194, size: 16)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1897, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1897, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1897, file: !158, line: 131, baseType: !1944, size: 192, offset: 192)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !1945)
!1945 = !{!1946, !1947, !1953}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1944, file: !122, line: 245, baseType: !1903, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1944, file: !122, line: 246, baseType: !1948, size: 32, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !1949)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 32)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{null, !1952}
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1944, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1894, file: !158, line: 250, baseType: !1955, size: 288, offset: 384)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !1956)
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1955, file: !211, line: 26, baseType: !110, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1955, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1955, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1955, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1955, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1955, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1955, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1955, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1955, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1894, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1894, file: !158, line: 256, baseType: !1925, size: 64, offset: 704)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1894, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1894, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1894, file: !158, line: 300, baseType: !1971, size: 96, offset: 1056)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !1972)
!1972 = !{!1973, !1974, !1975}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1971, file: !158, line: 153, baseType: !22, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1971, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1971, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1894, file: !158, line: 325, baseType: !1977, size: 32, offset: 1152)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !1979)
!1979 = !{!1980, !1986, !1987}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1978, file: !118, line: 5074, baseType: !1981, size: 96)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !1982)
!1982 = !{!1983, !1984, !1985}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1981, file: !243, line: 57, baseType: !246, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1981, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1981, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1978, file: !118, line: 5075, baseType: !1925, size: 64, offset: 96)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1978, file: !118, line: 5076, baseType: !1988, size: 32, offset: 160)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !1989)
!1989 = !{!1990}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1988, file: !253, line: 52, baseType: !22, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1894, file: !158, line: 343, baseType: !1992, size: 64, offset: 1184)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !1993)
!1993 = !{!1994, !1995}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1992, file: !211, line: 63, baseType: !110, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1992, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1888, file: !122, line: 111, baseType: !1893, size: 32, offset: 96)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1888, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1888, file: !122, line: 127, baseType: !180, size: 8, offset: 160)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1888, file: !122, line: 153, baseType: !2000, offset: 168)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2001, line: 33, elements: !2002)
!2001 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2002 = !{}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1884, file: !122, line: 170, baseType: !2004, size: 96, offset: 192)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2005)
!2005 = !{!2006, !2007}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2004, file: !122, line: 86, baseType: !1893, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2004, file: !122, line: 90, baseType: !1929, size: 64, offset: 32)
!2008 = !DIGlobalVariableExpression(var: !2009, expr: !DIExpression())
!2009 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1797, file: !1801, line: 43, type: !2010, isLocal: false, isDefinition: true, align: 512)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2011, size: 8704, elements: !2014)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !2012)
!2012 = !{!2013}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2011, file: !147, line: 48, baseType: !150, size: 8)
!2014 = !{!153}
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1797, file: !1801, line: 44, type: !1894, isLocal: false, isDefinition: true)
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1797, file: !1801, line: 48, type: !2019, isLocal: false, isDefinition: true)
!2019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 1280, elements: !517)
!2020 = !DIGlobalVariableExpression(var: !2021, expr: !DIExpression())
!2021 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1797, file: !1801, line: 86, type: !2022, isLocal: false, isDefinition: true, align: 512)
!2022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2011, size: 16896, elements: !2023)
!2023 = !{!518, !2024}
!2024 = !DISubrange(count: 2112)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1797, file: !1801, line: 217, type: !347, isLocal: false, isDefinition: true)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1797, file: !1801, line: 50, type: !2029, isLocal: true, isDefinition: true, align: 512)
!2029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2011, size: 3072, elements: !2030)
!2030 = !{!518, !2031}
!2031 = !DISubrange(count: 384)
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(name: "levels", scope: !2034, file: !1801, line: 232, type: !2054, isLocal: true, isDefinition: true)
!2034 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1801, file: !1801, line: 230, type: !2035, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !2037)
!2035 = !DISubroutineType(types: !2036)
!2036 = !{null, !1800}
!2037 = !{!2038, !2039, !2049, !2053}
!2038 = !DILocalVariable(name: "level", arg: 1, scope: !2034, file: !1801, line: 230, type: !1800)
!2039 = !DILocalVariable(name: "entry", scope: !2034, file: !1801, line: 244, type: !2040)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !2043)
!2043 = !{!2044, !2048}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2042, file: !327, line: 60, baseType: !2045, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 32)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{!109, !1819}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2042, file: !327, line: 65, baseType: !1819, size: 32, offset: 32)
!2049 = !DILocalVariable(name: "dev", scope: !2050, file: !1801, line: 247, type: !1819)
!2050 = distinct !DILexicalBlock(scope: !2051, file: !1801, line: 246, column: 64)
!2051 = distinct !DILexicalBlock(scope: !2052, file: !1801, line: 246, column: 2)
!2052 = distinct !DILexicalBlock(scope: !2034, file: !1801, line: 246, column: 2)
!2053 = !DILocalVariable(name: "rc", scope: !2050, file: !1801, line: 248, type: !109)
!2054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2040, size: 192, elements: !2055)
!2055 = !{!2056}
!2056 = !DISubrange(count: 6)
!2057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !2059)
!2059 = !{!2060, !2061}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2058, file: !291, line: 17, baseType: !279, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2058, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "states_str", scope: !2064, file: !2065, line: 276, type: !2189, isLocal: true, isDefinition: true)
!2064 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2065, file: !2065, line: 271, type: !2066, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !2180)
!2065 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2066 = !DISubroutineType(types: !2067)
!2067 = !{!279, !2068, !285, !234}
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2069)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2071)
!2071 = !{!2072, !2130, !2142, !2143, !2144, !2145, !2146, !2152, !2167}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2070, file: !158, line: 247, baseType: !2073, size: 384)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2074)
!2074 = !{!2075, !2099, !2106, !2107, !2108, !2117, !2118, !2119}
!2075 = !DIDerivedType(tag: DW_TAG_member, scope: !2073, file: !158, line: 60, baseType: !2076, size: 64)
!2076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2073, file: !158, line: 60, size: 64, elements: !2077)
!2077 = !{!2078, !2093}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2076, file: !158, line: 61, baseType: !2079, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2080)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2081)
!2081 = !{!2082, !2088}
!2082 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !127, line: 38, baseType: !2083, size: 32)
!2083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2080, file: !127, line: 38, size: 32, elements: !2084)
!2084 = !{!2085, !2087}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2083, file: !127, line: 39, baseType: !2086, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2083, file: !127, line: 40, baseType: !2086, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !127, line: 42, baseType: !2089, size: 32, offset: 32)
!2089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2080, file: !127, line: 42, size: 32, elements: !2090)
!2090 = !{!2091, !2092}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2089, file: !127, line: 43, baseType: !2086, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2089, file: !127, line: 44, baseType: !2086, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2076, file: !158, line: 62, baseType: !2094, size: 64)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2095)
!2095 = !{!2096}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2094, file: !170, line: 50, baseType: !2097, size: 64)
!2097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2098, size: 64, elements: !175)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2073, file: !158, line: 68, baseType: !2100, size: 32, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2102)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2103)
!2103 = !{!2104}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2102, file: !122, line: 232, baseType: !2105, size: 64)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2080)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2073, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2073, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2108 = !DIDerivedType(tag: DW_TAG_member, scope: !2073, file: !158, line: 90, baseType: !2109, size: 16, offset: 112)
!2109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2073, file: !158, line: 90, size: 16, elements: !2110)
!2110 = !{!2111, !2116}
!2111 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !158, line: 91, baseType: !2112, size: 16)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2109, file: !158, line: 91, size: 16, elements: !2113)
!2113 = !{!2114, !2115}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2112, file: !158, line: 96, baseType: !190, size: 8)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2112, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2109, file: !158, line: 100, baseType: !194, size: 16)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2073, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2073, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2073, file: !158, line: 131, baseType: !2120, size: 192, offset: 192)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2121)
!2121 = !{!2122, !2123, !2129}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2120, file: !122, line: 245, baseType: !2079, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2120, file: !122, line: 246, baseType: !2124, size: 32, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2125)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 32)
!2126 = !DISubroutineType(types: !2127)
!2127 = !{null, !2128}
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2120, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2070, file: !158, line: 250, baseType: !2131, size: 288, offset: 384)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2132)
!2132 = !{!2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2131, file: !211, line: 26, baseType: !110, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2131, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2131, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2131, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2131, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2131, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2131, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2131, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2131, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2070, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2070, file: !158, line: 256, baseType: !2101, size: 64, offset: 704)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2070, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2070, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2070, file: !158, line: 300, baseType: !2147, size: 96, offset: 1056)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2148)
!2148 = !{!2149, !2150, !2151}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2147, file: !158, line: 153, baseType: !22, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2147, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2147, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2070, file: !158, line: 325, baseType: !2153, size: 32, offset: 1152)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 32)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2155)
!2155 = !{!2156, !2162, !2163}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2154, file: !118, line: 5074, baseType: !2157, size: 96)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2158)
!2158 = !{!2159, !2160, !2161}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2157, file: !243, line: 57, baseType: !246, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2157, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2157, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2154, file: !118, line: 5075, baseType: !2101, size: 64, offset: 96)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2154, file: !118, line: 5076, baseType: !2164, size: 32, offset: 160)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2165)
!2165 = !{!2166}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2164, file: !253, line: 52, baseType: !22, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2070, file: !158, line: 343, baseType: !2168, size: 64, offset: 1184)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2169)
!2169 = !{!2170, !2171}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2168, file: !211, line: 63, baseType: !110, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2168, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2172 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2173, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2174, globals: !2176, splitDebugInlining: false, nameTableKind: None)
!2173 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2174 = !{!107, !279, !103, !180, !22, !109, !2175, !24, !234, !285, !110, !111}
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 32)
!2176 = !{!2062, !2177}
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "states_sz", scope: !2064, file: !2065, line: 279, type: !2179, isLocal: true, isDefinition: true)
!2179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1731, size: 256, elements: !1452)
!2180 = !{!2181, !2182, !2183, !2184, !2185, !2186, !2187}
!2181 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2064, file: !2065, line: 271, type: !2068)
!2182 = !DILocalVariable(name: "buf", arg: 2, scope: !2064, file: !2065, line: 271, type: !285)
!2183 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2064, file: !2065, line: 271, type: !234)
!2184 = !DILocalVariable(name: "off", scope: !2064, file: !2065, line: 273, type: !234)
!2185 = !DILocalVariable(name: "bit", scope: !2064, file: !2065, line: 274, type: !180)
!2186 = !DILocalVariable(name: "thread_state", scope: !2064, file: !2065, line: 275, type: !180)
!2187 = !DILocalVariable(name: "index", scope: !2188, file: !2065, line: 293, type: !180)
!2188 = distinct !DILexicalBlock(scope: !2064, file: !2065, line: 293, column: 2)
!2189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1452)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(name: "lock", scope: !2192, file: !2300, line: 47, type: !2291, isLocal: true, isDefinition: true)
!2192 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2193, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2194, globals: !2299, splitDebugInlining: false, nameTableKind: None)
!2193 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2194 = !{!347, !107, !109, !2195, !2210}
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2197)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2198)
!2198 = !{!2199, !2205}
!2199 = !DIDerivedType(tag: DW_TAG_member, scope: !2197, file: !127, line: 38, baseType: !2200, size: 32)
!2200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2197, file: !127, line: 38, size: 32, elements: !2201)
!2201 = !{!2202, !2204}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2200, file: !127, line: 39, baseType: !2203, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2200, file: !127, line: 40, baseType: !2203, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, scope: !2197, file: !127, line: 42, baseType: !2206, size: 32, offset: 32)
!2206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2197, file: !127, line: 42, size: 32, elements: !2207)
!2207 = !{!2208, !2209}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2206, file: !127, line: 43, baseType: !2203, size: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2206, file: !127, line: 44, baseType: !2203, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 32)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2212)
!2212 = !{!2213, !2257, !2269, !2270, !2271, !2272, !2273, !2279, !2294}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2211, file: !158, line: 247, baseType: !2214, size: 384)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2215)
!2215 = !{!2216, !2226, !2233, !2234, !2235, !2244, !2245, !2246}
!2216 = !DIDerivedType(tag: DW_TAG_member, scope: !2214, file: !158, line: 60, baseType: !2217, size: 64)
!2217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !158, line: 60, size: 64, elements: !2218)
!2218 = !{!2219, !2220}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2217, file: !158, line: 61, baseType: !2196, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2217, file: !158, line: 62, baseType: !2221, size: 64)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2222)
!2222 = !{!2223}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2221, file: !170, line: 50, baseType: !2224, size: 64)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2225, size: 64, elements: !175)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2214, file: !158, line: 68, baseType: !2227, size: 32, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2229)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2230)
!2230 = !{!2231}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2229, file: !122, line: 232, baseType: !2232, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2197)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2214, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2214, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2235 = !DIDerivedType(tag: DW_TAG_member, scope: !2214, file: !158, line: 90, baseType: !2236, size: 16, offset: 112)
!2236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !158, line: 90, size: 16, elements: !2237)
!2237 = !{!2238, !2243}
!2238 = !DIDerivedType(tag: DW_TAG_member, scope: !2236, file: !158, line: 91, baseType: !2239, size: 16)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2236, file: !158, line: 91, size: 16, elements: !2240)
!2240 = !{!2241, !2242}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2239, file: !158, line: 96, baseType: !190, size: 8)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2239, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2236, file: !158, line: 100, baseType: !194, size: 16)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2214, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2214, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2214, file: !158, line: 131, baseType: !2247, size: 192, offset: 192)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2248)
!2248 = !{!2249, !2250, !2256}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2247, file: !122, line: 245, baseType: !2196, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2247, file: !122, line: 246, baseType: !2251, size: 32, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2252)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{null, !2255}
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2247, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2211, file: !158, line: 250, baseType: !2258, size: 288, offset: 384)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2259)
!2259 = !{!2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2258, file: !211, line: 26, baseType: !110, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2258, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2258, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2258, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2258, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2258, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2258, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2258, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2258, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2211, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2211, file: !158, line: 256, baseType: !2228, size: 64, offset: 704)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2211, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2211, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2211, file: !158, line: 300, baseType: !2274, size: 96, offset: 1056)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2275)
!2275 = !{!2276, !2277, !2278}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2274, file: !158, line: 153, baseType: !22, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2274, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2274, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2211, file: !158, line: 325, baseType: !2280, size: 32, offset: 1152)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 32)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2282)
!2282 = !{!2283, !2289, !2290}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2281, file: !118, line: 5074, baseType: !2284, size: 96)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2285)
!2285 = !{!2286, !2287, !2288}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2284, file: !243, line: 57, baseType: !246, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2284, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2284, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2281, file: !118, line: 5075, baseType: !2228, size: 64, offset: 96)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2281, file: !118, line: 5076, baseType: !2291, size: 32, offset: 160)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2292)
!2292 = !{!2293}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2291, file: !253, line: 52, baseType: !22, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2211, file: !158, line: 343, baseType: !2295, size: 64, offset: 1184)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2296)
!2296 = !{!2297, !2298}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2295, file: !211, line: 63, baseType: !110, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2295, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2299 = !{!2190}
!2300 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2301 = !DIGlobalVariableExpression(var: !2302, expr: !DIExpression())
!2302 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2303, file: !2414, line: 56, type: !2401, isLocal: false, isDefinition: true)
!2303 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2304, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2305, globals: !2411, splitDebugInlining: false, nameTableKind: None)
!2304 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2305 = !{!2306, !285, !107, !2409, !286, !103, !745, !109, !110, !111, !2410}
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 32)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2308)
!2308 = !{!2309, !2367, !2379, !2380, !2381, !2382, !2383, !2389, !2404}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2307, file: !158, line: 247, baseType: !2310, size: 384)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2311)
!2311 = !{!2312, !2336, !2343, !2344, !2345, !2354, !2355, !2356}
!2312 = !DIDerivedType(tag: DW_TAG_member, scope: !2310, file: !158, line: 60, baseType: !2313, size: 64)
!2313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2310, file: !158, line: 60, size: 64, elements: !2314)
!2314 = !{!2315, !2330}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2313, file: !158, line: 61, baseType: !2316, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2318)
!2318 = !{!2319, !2325}
!2319 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !127, line: 38, baseType: !2320, size: 32)
!2320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !127, line: 38, size: 32, elements: !2321)
!2321 = !{!2322, !2324}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2320, file: !127, line: 39, baseType: !2323, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2320, file: !127, line: 40, baseType: !2323, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !127, line: 42, baseType: !2326, size: 32, offset: 32)
!2326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !127, line: 42, size: 32, elements: !2327)
!2327 = !{!2328, !2329}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2326, file: !127, line: 43, baseType: !2323, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2326, file: !127, line: 44, baseType: !2323, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2313, file: !158, line: 62, baseType: !2331, size: 64)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2332)
!2332 = !{!2333}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2331, file: !170, line: 50, baseType: !2334, size: 64)
!2334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2335, size: 64, elements: !175)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2310, file: !158, line: 68, baseType: !2337, size: 32, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2339)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2340)
!2340 = !{!2341}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2339, file: !122, line: 232, baseType: !2342, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2317)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2310, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2310, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !2310, file: !158, line: 90, baseType: !2346, size: 16, offset: 112)
!2346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2310, file: !158, line: 90, size: 16, elements: !2347)
!2347 = !{!2348, !2353}
!2348 = !DIDerivedType(tag: DW_TAG_member, scope: !2346, file: !158, line: 91, baseType: !2349, size: 16)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2346, file: !158, line: 91, size: 16, elements: !2350)
!2350 = !{!2351, !2352}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2349, file: !158, line: 96, baseType: !190, size: 8)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2349, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2346, file: !158, line: 100, baseType: !194, size: 16)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2310, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2310, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2310, file: !158, line: 131, baseType: !2357, size: 192, offset: 192)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2358)
!2358 = !{!2359, !2360, !2366}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2357, file: !122, line: 245, baseType: !2316, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2357, file: !122, line: 246, baseType: !2361, size: 32, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2362)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{null, !2365}
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2357, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2307, file: !158, line: 250, baseType: !2368, size: 288, offset: 384)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2369)
!2369 = !{!2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2368, file: !211, line: 26, baseType: !110, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2368, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2368, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2368, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2368, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2368, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2368, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2368, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2368, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2307, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2307, file: !158, line: 256, baseType: !2338, size: 64, offset: 704)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2307, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2307, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2307, file: !158, line: 300, baseType: !2384, size: 96, offset: 1056)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2385)
!2385 = !{!2386, !2387, !2388}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2384, file: !158, line: 153, baseType: !22, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2384, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2384, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2307, file: !158, line: 325, baseType: !2390, size: 32, offset: 1152)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2392)
!2392 = !{!2393, !2399, !2400}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2391, file: !118, line: 5074, baseType: !2394, size: 96)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2395)
!2395 = !{!2396, !2397, !2398}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2394, file: !243, line: 57, baseType: !246, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2394, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2394, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2391, file: !118, line: 5075, baseType: !2338, size: 64, offset: 96)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2391, file: !118, line: 5076, baseType: !2401, size: 32, offset: 160)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2402)
!2402 = !{!2403}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2401, file: !253, line: 52, baseType: !22, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2307, file: !158, line: 343, baseType: !2405, size: 64, offset: 1184)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2406)
!2406 = !{!2407, !2408}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2405, file: !211, line: 63, baseType: !110, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2405, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2411 = !{!2301, !2412, !2415, !2417}
!2412 = !DIGlobalVariableExpression(var: !2413, expr: !DIExpression())
!2413 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2303, file: !2414, line: 404, type: !109, isLocal: true, isDefinition: true)
!2414 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2415 = !DIGlobalVariableExpression(var: !2416, expr: !DIExpression())
!2416 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2303, file: !2414, line: 405, type: !109, isLocal: true, isDefinition: true)
!2417 = !DIGlobalVariableExpression(var: !2418, expr: !DIExpression())
!2418 = distinct !DIGlobalVariable(name: "pending_current", scope: !2303, file: !2414, line: 425, type: !2306, isLocal: true, isDefinition: true)
!2419 = !DIGlobalVariableExpression(var: !2420, expr: !DIExpression())
!2420 = distinct !DIGlobalVariable(name: "lock", scope: !2421, file: !2440, line: 14, type: !2441, isLocal: true, isDefinition: true)
!2421 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2422, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2423, globals: !2439, splitDebugInlining: false, nameTableKind: None)
!2422 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2423 = !{!107, !103, !109, !2424}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2427)
!2427 = !{!2428, !2434}
!2428 = !DIDerivedType(tag: DW_TAG_member, scope: !2426, file: !127, line: 38, baseType: !2429, size: 32)
!2429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2426, file: !127, line: 38, size: 32, elements: !2430)
!2430 = !{!2431, !2433}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2429, file: !127, line: 39, baseType: !2432, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2429, file: !127, line: 40, baseType: !2432, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, scope: !2426, file: !127, line: 42, baseType: !2435, size: 32, offset: 32)
!2435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2426, file: !127, line: 42, size: 32, elements: !2436)
!2436 = !{!2437, !2438}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2435, file: !127, line: 43, baseType: !2432, size: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2435, file: !127, line: 44, baseType: !2432, size: 32)
!2439 = !{!2419}
!2440 = !DIFile(filename: "zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2441, file: !253, line: 52, baseType: !22, size: 32)
!2444 = !DIGlobalVariableExpression(var: !2445, expr: !DIExpression())
!2445 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2446, file: !2476, line: 19, type: !2482, isLocal: true, isDefinition: true)
!2446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2447, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2448, globals: !2473, splitDebugInlining: false, nameTableKind: None)
!2447 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2448 = !{!103, !107, !745, !110, !111, !109, !2449, !285, !105}
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 32)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2451)
!2451 = !{!2452, !2467, !2472}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2450, file: !122, line: 245, baseType: !2453, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2454)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2455)
!2455 = !{!2456, !2462}
!2456 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !127, line: 38, baseType: !2457, size: 32)
!2457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !127, line: 38, size: 32, elements: !2458)
!2458 = !{!2459, !2461}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2457, file: !127, line: 39, baseType: !2460, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2457, file: !127, line: 40, baseType: !2460, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, scope: !2454, file: !127, line: 42, baseType: !2463, size: 32, offset: 32)
!2463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2454, file: !127, line: 42, size: 32, elements: !2464)
!2464 = !{!2465, !2466}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2463, file: !127, line: 43, baseType: !2460, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2463, file: !127, line: 44, baseType: !2460, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2450, file: !122, line: 246, baseType: !2468, size: 32, offset: 64)
!2468 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2469)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{null, !2449}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2450, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2473 = !{!2474, !2444, !2477, !2479}
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2446, file: !2476, line: 15, type: !111, isLocal: true, isDefinition: true)
!2476 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2477 = !DIGlobalVariableExpression(var: !2478, expr: !DIExpression())
!2478 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2446, file: !2476, line: 25, type: !109, isLocal: true, isDefinition: true)
!2479 = !DIGlobalVariableExpression(var: !2480, expr: !DIExpression())
!2480 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2446, file: !2476, line: 17, type: !2481, isLocal: true, isDefinition: true)
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2454)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2483)
!2483 = !{!2484}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2482, file: !253, line: 52, baseType: !22, size: 32)
!2485 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2486, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2486 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2489 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2490, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2491, retainedTypes: !2511, splitDebugInlining: false, nameTableKind: None)
!2490 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2491 = !{!2492, !2500}
!2492 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2493, line: 69, baseType: !32, size: 32, elements: !2494)
!2493 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2494 = !{!2495, !2496, !2497, !2498, !2499}
!2495 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2496 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2497 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2498 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2499 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2500 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2493, line: 56, baseType: !32, size: 32, elements: !2501)
!2501 = !{!2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510}
!2502 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2503 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2504 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2505 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2506 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2507 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2508 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2509 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2510 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2511 = !{!109, !2492, !2500, !2512, !191, !354, !2514, !2515, !181, !195, !279, !234, !107, !22, !32, !281, !2517, !2518, !102, !282, !106, !283, !2513, !2519, !2520, !2521, !2522}
!2512 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2493, line: 31, baseType: !2513)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !235, line: 329, baseType: !32)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2493, line: 32, baseType: !2516)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !235, line: 145, baseType: !109)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!2523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2525 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2526, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2526 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2528, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2529, splitDebugInlining: false, nameTableKind: None)
!2528 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2529 = !{!279, !181, !109, !32}
!2530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2532, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2532 = !{!2533, !30}
!2533 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2534, line: 27, baseType: !32, size: 32, elements: !2535)
!2534 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2535 = !{!2536, !2537, !2538, !2539, !2540}
!2536 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2537 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2538 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2539 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2540 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2541 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2542, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2543, retainedTypes: !2544, splitDebugInlining: false, nameTableKind: None)
!2542 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2543 = !{!604, !2533, !30}
!2544 = !{!771, !2545, !107, !109, !745, !110, !180, !2562}
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2547)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2548)
!2548 = !{!2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2547, file: !535, line: 413, baseType: !1552, size: 256)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2547, file: !535, line: 414, baseType: !1554, size: 768, offset: 256)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2547, file: !535, line: 415, baseType: !1552, size: 256, offset: 1024)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2547, file: !535, line: 416, baseType: !1554, size: 768, offset: 1280)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2547, file: !535, line: 417, baseType: !1552, size: 256, offset: 2048)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2547, file: !535, line: 418, baseType: !1554, size: 768, offset: 2304)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2547, file: !535, line: 419, baseType: !1552, size: 256, offset: 3072)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2547, file: !535, line: 420, baseType: !1554, size: 768, offset: 3328)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2547, file: !535, line: 421, baseType: !1552, size: 256, offset: 4096)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2547, file: !535, line: 422, baseType: !1565, size: 1792, offset: 4352)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2547, file: !535, line: 423, baseType: !1569, size: 1920, offset: 6144)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2547, file: !535, line: 424, baseType: !1574, size: 20608, offset: 8064)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2547, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2564)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2565)
!2565 = !{!2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2564, file: !535, line: 447, baseType: !539, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2564, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2564, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2564, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2564, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2564, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2564, file: !535, line: 453, baseType: !1589, size: 96, offset: 192)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2564, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2564, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2564, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2564, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2564, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2564, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2564, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2564, file: !535, line: 461, baseType: !1598, size: 64, offset: 512)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2564, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2564, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2564, file: !535, line: 464, baseType: !1602, size: 128, offset: 640)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2564, file: !535, line: 465, baseType: !1604, size: 160, offset: 768)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2564, file: !535, line: 466, baseType: !1606, size: 160, offset: 928)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2564, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2587 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2588, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2588 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2591, splitDebugInlining: false, nameTableKind: None)
!2590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2591 = !{!107, !109, !22, !2592}
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2594)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2595)
!2595 = !{!2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2594, file: !535, line: 447, baseType: !539, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2594, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2594, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2594, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2594, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2594, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2594, file: !535, line: 453, baseType: !1589, size: 96, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2594, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2594, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2594, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2594, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2594, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2594, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2594, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2594, file: !535, line: 461, baseType: !1598, size: 64, offset: 512)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2594, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2594, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2594, file: !535, line: 464, baseType: !1602, size: 128, offset: 640)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2594, file: !535, line: 465, baseType: !1604, size: 160, offset: 768)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2594, file: !535, line: 466, baseType: !1606, size: 160, offset: 928)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2594, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2618, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2619, splitDebugInlining: false, nameTableKind: None)
!2618 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2619 = !{!2620, !107, !109}
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2622)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2623)
!2623 = !{!2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2622, file: !535, line: 447, baseType: !539, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2622, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2622, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2622, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2622, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2622, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2622, file: !535, line: 453, baseType: !1589, size: 96, offset: 192)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2622, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2622, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2622, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2622, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2622, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2622, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2622, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2622, file: !535, line: 461, baseType: !1598, size: 64, offset: 512)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2622, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2622, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2622, file: !535, line: 464, baseType: !1602, size: 128, offset: 640)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2622, file: !535, line: 465, baseType: !1604, size: 160, offset: 768)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2622, file: !535, line: 466, baseType: !1606, size: 160, offset: 928)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2622, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2645 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2646, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2647, splitDebugInlining: false, nameTableKind: None)
!2646 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2647 = !{!2648, !110, !107, !109}
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 32)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2650, line: 98, size: 256, elements: !2651)
!2650 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2651 = !{!2652, !2657, !2662, !2667, !2672, !2677, !2682, !2687}
!2652 = !DIDerivedType(tag: DW_TAG_member, scope: !2649, file: !2650, line: 99, baseType: !2653, size: 32)
!2653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2649, file: !2650, line: 99, size: 32, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2653, file: !2650, line: 99, baseType: !110, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2653, file: !2650, line: 99, baseType: !110, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, scope: !2649, file: !2650, line: 100, baseType: !2658, size: 32, offset: 32)
!2658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2649, file: !2650, line: 100, size: 32, elements: !2659)
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2658, file: !2650, line: 100, baseType: !110, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2658, file: !2650, line: 100, baseType: !110, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, scope: !2649, file: !2650, line: 101, baseType: !2663, size: 32, offset: 64)
!2663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2649, file: !2650, line: 101, size: 32, elements: !2664)
!2664 = !{!2665, !2666}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2663, file: !2650, line: 101, baseType: !110, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2663, file: !2650, line: 101, baseType: !110, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, scope: !2649, file: !2650, line: 102, baseType: !2668, size: 32, offset: 96)
!2668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2649, file: !2650, line: 102, size: 32, elements: !2669)
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2668, file: !2650, line: 102, baseType: !110, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2668, file: !2650, line: 102, baseType: !110, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, scope: !2649, file: !2650, line: 103, baseType: !2673, size: 32, offset: 128)
!2673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2649, file: !2650, line: 103, size: 32, elements: !2674)
!2674 = !{!2675, !2676}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2673, file: !2650, line: 103, baseType: !110, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2673, file: !2650, line: 103, baseType: !110, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, scope: !2649, file: !2650, line: 104, baseType: !2678, size: 32, offset: 160)
!2678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2649, file: !2650, line: 104, size: 32, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2678, file: !2650, line: 104, baseType: !110, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2678, file: !2650, line: 104, baseType: !110, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2649, file: !2650, line: 105, baseType: !2683, size: 32, offset: 192)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2649, file: !2650, line: 105, size: 32, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2683, file: !2650, line: 105, baseType: !110, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2683, file: !2650, line: 105, baseType: !110, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2649, file: !2650, line: 106, baseType: !110, size: 32, offset: 224)
!2688 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2689, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2532, retainedTypes: !2690, splitDebugInlining: false, nameTableKind: None)
!2689 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2690 = !{!2691, !107, !109, !2716, !2759, !110}
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2693)
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2694)
!2694 = !{!2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2693, file: !535, line: 447, baseType: !539, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2693, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2693, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2693, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2693, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2693, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2693, file: !535, line: 453, baseType: !1589, size: 96, offset: 192)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2693, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2693, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2693, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2693, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2693, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2693, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2693, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2693, file: !535, line: 461, baseType: !1598, size: 64, offset: 512)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2693, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2693, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2693, file: !535, line: 464, baseType: !1602, size: 128, offset: 640)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2693, file: !535, line: 465, baseType: !1604, size: 160, offset: 768)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2693, file: !535, line: 466, baseType: !1606, size: 160, offset: 928)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2693, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2650, line: 141, baseType: !2718)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2650, line: 97, size: 256, elements: !2719)
!2719 = !{!2720}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2718, file: !2650, line: 107, baseType: !2721, size: 256)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2650, line: 98, size: 256, elements: !2722)
!2722 = !{!2723, !2728, !2733, !2738, !2743, !2748, !2753, !2758}
!2723 = !DIDerivedType(tag: DW_TAG_member, scope: !2721, file: !2650, line: 99, baseType: !2724, size: 32)
!2724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2721, file: !2650, line: 99, size: 32, elements: !2725)
!2725 = !{!2726, !2727}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2724, file: !2650, line: 99, baseType: !110, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2724, file: !2650, line: 99, baseType: !110, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, scope: !2721, file: !2650, line: 100, baseType: !2729, size: 32, offset: 32)
!2729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2721, file: !2650, line: 100, size: 32, elements: !2730)
!2730 = !{!2731, !2732}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2729, file: !2650, line: 100, baseType: !110, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2729, file: !2650, line: 100, baseType: !110, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, scope: !2721, file: !2650, line: 101, baseType: !2734, size: 32, offset: 64)
!2734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2721, file: !2650, line: 101, size: 32, elements: !2735)
!2735 = !{!2736, !2737}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2734, file: !2650, line: 101, baseType: !110, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2734, file: !2650, line: 101, baseType: !110, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, scope: !2721, file: !2650, line: 102, baseType: !2739, size: 32, offset: 96)
!2739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2721, file: !2650, line: 102, size: 32, elements: !2740)
!2740 = !{!2741, !2742}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2739, file: !2650, line: 102, baseType: !110, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2739, file: !2650, line: 102, baseType: !110, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, scope: !2721, file: !2650, line: 103, baseType: !2744, size: 32, offset: 128)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2721, file: !2650, line: 103, size: 32, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2744, file: !2650, line: 103, baseType: !110, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2744, file: !2650, line: 103, baseType: !110, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2721, file: !2650, line: 104, baseType: !2749, size: 32, offset: 160)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2721, file: !2650, line: 104, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2749, file: !2650, line: 104, baseType: !110, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2749, file: !2650, line: 104, baseType: !110, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, scope: !2721, file: !2650, line: 105, baseType: !2754, size: 32, offset: 192)
!2754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2721, file: !2650, line: 105, size: 32, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2754, file: !2650, line: 105, baseType: !110, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2754, file: !2650, line: 105, baseType: !110, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2721, file: !2650, line: 106, baseType: !110, size: 32, offset: 224)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!2760 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2761, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1537, retainedTypes: !2762, splitDebugInlining: false, nameTableKind: None)
!2761 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2762 = !{!771, !745, !180, !110, !2763, !2780}
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2765)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2766)
!2766 = !{!2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2765, file: !535, line: 413, baseType: !1552, size: 256)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2765, file: !535, line: 414, baseType: !1554, size: 768, offset: 256)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2765, file: !535, line: 415, baseType: !1552, size: 256, offset: 1024)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2765, file: !535, line: 416, baseType: !1554, size: 768, offset: 1280)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2765, file: !535, line: 417, baseType: !1552, size: 256, offset: 2048)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2765, file: !535, line: 418, baseType: !1554, size: 768, offset: 2304)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2765, file: !535, line: 419, baseType: !1552, size: 256, offset: 3072)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2765, file: !535, line: 420, baseType: !1554, size: 768, offset: 3328)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2765, file: !535, line: 421, baseType: !1552, size: 256, offset: 4096)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2765, file: !535, line: 422, baseType: !1565, size: 1792, offset: 4352)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2765, file: !535, line: 423, baseType: !1569, size: 1920, offset: 6144)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2765, file: !535, line: 424, baseType: !1574, size: 20608, offset: 8064)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2765, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2782)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2783)
!2783 = !{!2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2782, file: !535, line: 447, baseType: !539, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2782, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2782, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2782, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2782, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2782, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2782, file: !535, line: 453, baseType: !1589, size: 96, offset: 192)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2782, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2782, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2782, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2782, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2782, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2782, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2782, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2782, file: !535, line: 461, baseType: !1598, size: 64, offset: 512)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2782, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2782, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2782, file: !535, line: 464, baseType: !1602, size: 128, offset: 640)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2782, file: !535, line: 465, baseType: !1604, size: 160, offset: 768)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2782, file: !535, line: 466, baseType: !1606, size: 160, offset: 928)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2782, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2805 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2806, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2807, splitDebugInlining: false, nameTableKind: None)
!2806 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2807 = !{!2808, !107, !109}
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2810)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2811)
!2811 = !{!2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2810, file: !535, line: 447, baseType: !539, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2810, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2810, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2810, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2810, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2810, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2810, file: !535, line: 453, baseType: !1589, size: 96, offset: 192)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2810, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2810, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2810, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2810, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2810, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2810, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2810, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2810, file: !535, line: 461, baseType: !1598, size: 64, offset: 512)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2810, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2810, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2810, file: !535, line: 464, baseType: !1602, size: 128, offset: 640)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2810, file: !535, line: 465, baseType: !1604, size: 160, offset: 768)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2810, file: !535, line: 466, baseType: !1606, size: 160, offset: 928)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2810, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2834, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2835, splitDebugInlining: false, nameTableKind: None)
!2834 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2835 = !{!150, !285, !234, !969, !2836, !181, !107}
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!2838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2840, splitDebugInlining: false, nameTableKind: None)
!2839 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2840 = !{!2841}
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 370, baseType: !2843)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 336, size: 1152, elements: !2844)
!2844 = !{!2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2843, file: !312, line: 338, baseType: !316, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2843, file: !312, line: 339, baseType: !316, size: 32, offset: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2843, file: !312, line: 340, baseType: !316, size: 32, offset: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2843, file: !312, line: 341, baseType: !316, size: 32, offset: 96)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2843, file: !312, line: 342, baseType: !316, size: 32, offset: 128)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2843, file: !312, line: 343, baseType: !316, size: 32, offset: 160)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2843, file: !312, line: 344, baseType: !316, size: 32, offset: 192)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2843, file: !312, line: 345, baseType: !110, size: 32, offset: 224)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2843, file: !312, line: 346, baseType: !316, size: 32, offset: 256)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2843, file: !312, line: 347, baseType: !316, size: 32, offset: 288)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2843, file: !312, line: 348, baseType: !835, size: 64, offset: 320)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2843, file: !312, line: 349, baseType: !316, size: 32, offset: 384)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2843, file: !312, line: 350, baseType: !316, size: 32, offset: 416)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2843, file: !312, line: 351, baseType: !316, size: 32, offset: 448)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2843, file: !312, line: 352, baseType: !110, size: 32, offset: 480)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2843, file: !312, line: 353, baseType: !316, size: 32, offset: 512)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2843, file: !312, line: 354, baseType: !316, size: 32, offset: 544)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2843, file: !312, line: 355, baseType: !835, size: 64, offset: 576)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2843, file: !312, line: 356, baseType: !316, size: 32, offset: 640)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2843, file: !312, line: 357, baseType: !316, size: 32, offset: 672)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2843, file: !312, line: 358, baseType: !316, size: 32, offset: 704)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2843, file: !312, line: 359, baseType: !110, size: 32, offset: 736)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2843, file: !312, line: 360, baseType: !316, size: 32, offset: 768)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2843, file: !312, line: 361, baseType: !316, size: 32, offset: 800)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2843, file: !312, line: 362, baseType: !835, size: 64, offset: 832)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2843, file: !312, line: 363, baseType: !316, size: 32, offset: 896)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2843, file: !312, line: 364, baseType: !316, size: 32, offset: 928)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2843, file: !312, line: 365, baseType: !835, size: 64, offset: 960)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2843, file: !312, line: 366, baseType: !316, size: 32, offset: 1024)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2843, file: !312, line: 367, baseType: !316, size: 32, offset: 1056)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2843, file: !312, line: 368, baseType: !856, size: 32, offset: 1088)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2843, file: !312, line: 369, baseType: !316, size: 32, offset: 1120)
!2877 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2878, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2878 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2881, retainedTypes: !2897, splitDebugInlining: false, nameTableKind: None)
!2880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2881 = !{!2882, !2889, !2893}
!2882 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2883, line: 38, baseType: !32, size: 32, elements: !2884)
!2883 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2884 = !{!2885, !2886, !2887, !2888}
!2885 = !DIEnumerator(name: "HAL_OK", value: 0)
!2886 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2887 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2888 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2889 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !808, line: 184, baseType: !32, size: 32, elements: !2890)
!2890 = !{!2891, !2892}
!2891 = !DIEnumerator(name: "RESET", value: 0)
!2892 = !DIEnumerator(name: "SET", value: 1)
!2893 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !808, line: 190, baseType: !32, size: 32, elements: !2894)
!2894 = !{!2895, !2896}
!2895 = !DIEnumerator(name: "DISABLE", value: 0)
!2896 = !DIEnumerator(name: "ENABLE", value: 1)
!2897 = !{!107, !2898, !180, !110, !1446, !2934, !2940, !2951, !194, !2952, !111}
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 370, baseType: !2900)
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 336, size: 1152, elements: !2901)
!2901 = !{!2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2900, file: !312, line: 338, baseType: !316, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2900, file: !312, line: 339, baseType: !316, size: 32, offset: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2900, file: !312, line: 340, baseType: !316, size: 32, offset: 64)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2900, file: !312, line: 341, baseType: !316, size: 32, offset: 96)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2900, file: !312, line: 342, baseType: !316, size: 32, offset: 128)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2900, file: !312, line: 343, baseType: !316, size: 32, offset: 160)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2900, file: !312, line: 344, baseType: !316, size: 32, offset: 192)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2900, file: !312, line: 345, baseType: !110, size: 32, offset: 224)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2900, file: !312, line: 346, baseType: !316, size: 32, offset: 256)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2900, file: !312, line: 347, baseType: !316, size: 32, offset: 288)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2900, file: !312, line: 348, baseType: !835, size: 64, offset: 320)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2900, file: !312, line: 349, baseType: !316, size: 32, offset: 384)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2900, file: !312, line: 350, baseType: !316, size: 32, offset: 416)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2900, file: !312, line: 351, baseType: !316, size: 32, offset: 448)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2900, file: !312, line: 352, baseType: !110, size: 32, offset: 480)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2900, file: !312, line: 353, baseType: !316, size: 32, offset: 512)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2900, file: !312, line: 354, baseType: !316, size: 32, offset: 544)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2900, file: !312, line: 355, baseType: !835, size: 64, offset: 576)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2900, file: !312, line: 356, baseType: !316, size: 32, offset: 640)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2900, file: !312, line: 357, baseType: !316, size: 32, offset: 672)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2900, file: !312, line: 358, baseType: !316, size: 32, offset: 704)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2900, file: !312, line: 359, baseType: !110, size: 32, offset: 736)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2900, file: !312, line: 360, baseType: !316, size: 32, offset: 768)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2900, file: !312, line: 361, baseType: !316, size: 32, offset: 800)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2900, file: !312, line: 362, baseType: !835, size: 64, offset: 832)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2900, file: !312, line: 363, baseType: !316, size: 32, offset: 896)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2900, file: !312, line: 364, baseType: !316, size: 32, offset: 928)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2900, file: !312, line: 365, baseType: !835, size: 64, offset: 960)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2900, file: !312, line: 366, baseType: !316, size: 32, offset: 1024)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2900, file: !312, line: 367, baseType: !316, size: 32, offset: 1056)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2900, file: !312, line: 368, baseType: !856, size: 32, offset: 1088)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2900, file: !312, line: 369, baseType: !316, size: 32, offset: 1120)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 330, baseType: !2936)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 326, size: 64, elements: !2937)
!2937 = !{!2938, !2939}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2936, file: !312, line: 328, baseType: !316, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2936, file: !312, line: 329, baseType: !316, size: 32, offset: 32)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 259, baseType: !2942)
!2942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 250, size: 224, elements: !2943)
!2943 = !{!2944, !2945, !2946, !2947, !2948, !2949, !2950}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2942, file: !312, line: 252, baseType: !316, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2942, file: !312, line: 253, baseType: !316, size: 32, offset: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2942, file: !312, line: 254, baseType: !316, size: 32, offset: 64)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2942, file: !312, line: 255, baseType: !316, size: 32, offset: 96)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2942, file: !312, line: 256, baseType: !316, size: 32, offset: 128)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2942, file: !312, line: 257, baseType: !316, size: 32, offset: 160)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2942, file: !312, line: 258, baseType: !316, size: 32, offset: 192)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 32)
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 276, baseType: !2954)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 265, size: 320, elements: !2955)
!2955 = !{!2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2954, file: !312, line: 267, baseType: !316, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2954, file: !312, line: 268, baseType: !316, size: 32, offset: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2954, file: !312, line: 269, baseType: !316, size: 32, offset: 64)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2954, file: !312, line: 270, baseType: !316, size: 32, offset: 96)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2954, file: !312, line: 271, baseType: !316, size: 32, offset: 128)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2954, file: !312, line: 272, baseType: !316, size: 32, offset: 160)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2954, file: !312, line: 273, baseType: !316, size: 32, offset: 192)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2954, file: !312, line: 274, baseType: !316, size: 32, offset: 224)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2954, file: !312, line: 275, baseType: !1123, size: 64, offset: 256)
!2965 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2966, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2967, retainedTypes: !2968, splitDebugInlining: false, nameTableKind: None)
!2966 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!2967 = !{!807}
!2968 = !{!2969, !110, !2977, !2983, !2994}
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !2971)
!2971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !2972)
!2972 = !{!2973, !2974, !2975, !2976}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2971, file: !535, line: 766, baseType: !316, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2971, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2971, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2971, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 330, baseType: !2979)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 326, size: 64, elements: !2980)
!2980 = !{!2981, !2982}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2979, file: !312, line: 328, baseType: !316, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2979, file: !312, line: 329, baseType: !316, size: 32, offset: 32)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 259, baseType: !2985)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 250, size: 224, elements: !2986)
!2986 = !{!2987, !2988, !2989, !2990, !2991, !2992, !2993}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2985, file: !312, line: 252, baseType: !316, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2985, file: !312, line: 253, baseType: !316, size: 32, offset: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2985, file: !312, line: 254, baseType: !316, size: 32, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2985, file: !312, line: 255, baseType: !316, size: 32, offset: 96)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2985, file: !312, line: 256, baseType: !316, size: 32, offset: 128)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2985, file: !312, line: 257, baseType: !316, size: 32, offset: 160)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2985, file: !312, line: 258, baseType: !316, size: 32, offset: 192)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 370, baseType: !2996)
!2996 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 336, size: 1152, elements: !2997)
!2997 = !{!2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2996, file: !312, line: 338, baseType: !316, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2996, file: !312, line: 339, baseType: !316, size: 32, offset: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2996, file: !312, line: 340, baseType: !316, size: 32, offset: 64)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2996, file: !312, line: 341, baseType: !316, size: 32, offset: 96)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2996, file: !312, line: 342, baseType: !316, size: 32, offset: 128)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2996, file: !312, line: 343, baseType: !316, size: 32, offset: 160)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2996, file: !312, line: 344, baseType: !316, size: 32, offset: 192)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2996, file: !312, line: 345, baseType: !110, size: 32, offset: 224)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2996, file: !312, line: 346, baseType: !316, size: 32, offset: 256)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2996, file: !312, line: 347, baseType: !316, size: 32, offset: 288)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2996, file: !312, line: 348, baseType: !835, size: 64, offset: 320)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2996, file: !312, line: 349, baseType: !316, size: 32, offset: 384)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2996, file: !312, line: 350, baseType: !316, size: 32, offset: 416)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2996, file: !312, line: 351, baseType: !316, size: 32, offset: 448)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2996, file: !312, line: 352, baseType: !110, size: 32, offset: 480)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2996, file: !312, line: 353, baseType: !316, size: 32, offset: 512)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2996, file: !312, line: 354, baseType: !316, size: 32, offset: 544)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2996, file: !312, line: 355, baseType: !835, size: 64, offset: 576)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2996, file: !312, line: 356, baseType: !316, size: 32, offset: 640)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2996, file: !312, line: 357, baseType: !316, size: 32, offset: 672)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2996, file: !312, line: 358, baseType: !316, size: 32, offset: 704)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2996, file: !312, line: 359, baseType: !110, size: 32, offset: 736)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2996, file: !312, line: 360, baseType: !316, size: 32, offset: 768)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2996, file: !312, line: 361, baseType: !316, size: 32, offset: 800)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2996, file: !312, line: 362, baseType: !835, size: 64, offset: 832)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2996, file: !312, line: 363, baseType: !316, size: 32, offset: 896)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2996, file: !312, line: 364, baseType: !316, size: 32, offset: 928)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2996, file: !312, line: 365, baseType: !835, size: 64, offset: 960)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2996, file: !312, line: 366, baseType: !316, size: 32, offset: 1024)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2996, file: !312, line: 367, baseType: !316, size: 32, offset: 1056)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2996, file: !312, line: 368, baseType: !856, size: 32, offset: 1088)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2996, file: !312, line: 369, baseType: !316, size: 32, offset: 1120)
!3030 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3031, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3032, splitDebugInlining: false, nameTableKind: None)
!3031 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!3032 = !{!107, !234}
!3033 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3034, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3035, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3034 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!3035 = !{!3036, !3043, !2533, !30}
!3036 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3037, line: 14, baseType: !32, size: 32, elements: !3038)
!3037 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3038 = !{!3039, !3040, !3041, !3042}
!3039 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3040 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3041 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3042 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3043 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3037, line: 42, baseType: !32, size: 32, elements: !3044)
!3044 = !{!3045, !3046, !3047, !3048, !3049, !3050}
!3045 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3046 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3047 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3048 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3049 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3050 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3051 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3052, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3052 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!3053 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3054, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3055, splitDebugInlining: false, nameTableKind: None)
!3054 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!3055 = !{!22, !107, !109}
!3056 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3057, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3057 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!3058 = !{!"Ubuntu clang version 14.0.6"}
!3059 = !{i32 7, !"Dwarf Version", i32 4}
!3060 = !{i32 2, !"Debug Info Version", i32 3}
!3061 = !{i32 1, !"wchar_size", i32 4}
!3062 = !{i32 1, !"min_enum_size", i32 4}
!3063 = !{i32 1, !"branch-target-enforcement", i32 0}
!3064 = !{i32 1, !"sign-return-address", i32 0}
!3065 = !{i32 1, !"sign-return-address-all", i32 0}
!3066 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3067 = !{i32 7, !"frame-pointer", i32 2}
!3068 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3069, file: !3069, line: 26, type: !3070, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2002)
!3069 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3070 = !DISubroutineType(types: !3071)
!3071 = !{null}
!3072 = !DILocation(line: 28, column: 1, scope: !3068)
!3073 = !{i64 2154351569, i64 2154351589, i64 2154351652}
!3074 = !DILocation(line: 29, column: 1, scope: !3068)
!3075 = !{i64 2154351984, i64 2154352004, i64 2154352067}
!3076 = !DILocation(line: 30, column: 1, scope: !3068)
!3077 = !{i64 2154352403, i64 2154352423, i64 2154352486}
!3078 = !DILocation(line: 31, column: 1, scope: !3068)
!3079 = !{i64 2154352822, i64 2154352842, i64 2154352905}
!3080 = !DILocation(line: 33, column: 1, scope: !3068)
!3081 = !{i64 2154353114, i64 2154353134, i64 2154353197}
!3082 = !DILocation(line: 35, column: 1, scope: !3068)
!3083 = !{i64 2154353439, i64 2154353459, i64 2154353522}
!3084 = !DILocation(line: 50, column: 1, scope: !3068)
!3085 = !{i64 2154353866, i64 2154353886, i64 2154353949}
!3086 = !DILocation(line: 54, column: 1, scope: !3068)
!3087 = !{i64 2154354305, i64 2154354325, i64 2154354388}
!3088 = !DILocation(line: 61, column: 1, scope: !3068)
!3089 = !{i64 2154354622, i64 2154354642, i64 2154354705}
!3090 = !DILocation(line: 63, column: 1, scope: !3068)
!3091 = !{i64 2154355002, i64 2154355022, i64 2154355085}
!3092 = !DILocation(line: 64, column: 1, scope: !3068)
!3093 = !{i64 2154355524, i64 2154355544, i64 2154355607}
!3094 = !DILocation(line: 65, column: 1, scope: !3068)
!3095 = !{i64 2154356022, i64 2154356042, i64 2154356105}
!3096 = !DILocation(line: 66, column: 1, scope: !3068)
!3097 = !{i64 2154356504, i64 2154356524, i64 2154356587}
!3098 = !DILocation(line: 67, column: 1, scope: !3068)
!3099 = !{i64 2154357011, i64 2154357031, i64 2154357094}
!3100 = !DILocation(line: 68, column: 1, scope: !3068)
!3101 = !{i64 2154357499, i64 2154357519, i64 2154357582}
!3102 = !DILocation(line: 70, column: 1, scope: !3068)
!3103 = !{i64 2154362028, i64 2154362048, i64 2154362111}
!3104 = !DILocation(line: 71, column: 1, scope: !3068)
!3105 = !{i64 2154362470, i64 2154362490, i64 2154362553}
!3106 = !DILocation(line: 72, column: 1, scope: !3068)
!3107 = !{i64 2154362928, i64 2154362948, i64 2154363011}
!3108 = !DILocation(line: 79, column: 1, scope: !3068)
!3109 = !{i64 2154363382, i64 2154363402, i64 2154363465}
!3110 = !DILocation(line: 80, column: 1, scope: !3068)
!3111 = !{i64 2154363893, i64 2154363913, i64 2154363976}
!3112 = !DILocation(line: 82, column: 1, scope: !3068)
!3113 = !{i64 2154364384, i64 2154364404, i64 2154364467}
!3114 = !DILocation(line: 97, column: 1, scope: !3068)
!3115 = !{i64 2154364721, i64 2154364741, i64 2154364804}
!3116 = !DILocation(line: 99, column: 1, scope: !3068)
!3117 = !{i64 2154364939, i64 2154364959, i64 2154365022}
!3118 = !DILocation(line: 102, column: 1, scope: !3068)
!3119 = !{i64 2154365196, i64 2154365216, i64 2154365279}
!3120 = !DILocation(line: 105, column: 1, scope: !3068)
!3121 = !{i64 2154365436, i64 2154365456, i64 2154365519}
!3122 = !DILocation(line: 115, column: 1, scope: !3068)
!3123 = !{i64 2154365775, i64 2154365795, i64 2154365858}
!3124 = !DILocation(line: 118, column: 1, scope: !3068)
!3125 = !{i64 2154366119, i64 2154366139, i64 2154366202}
!3126 = !DILocation(line: 32, column: 1, scope: !3127)
!3127 = !DILexicalBlockFile(scope: !3068, file: !3128, discriminator: 0)
!3128 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3129 = !{i64 2154366475, i64 2154366495, i64 2154366558}
!3130 = !DILocation(line: 33, column: 1, scope: !3127)
!3131 = !{i64 2154366987, i64 2154367007, i64 2154367070}
!3132 = !DILocation(line: 53, column: 1, scope: !3127)
!3133 = !{i64 2154367495, i64 2154367515, i64 2154367578}
!3134 = !DILocation(line: 54, column: 1, scope: !3127)
!3135 = !{i64 2154367913, i64 2154367933, i64 2154367996}
!3136 = !DILocation(line: 55, column: 1, scope: !3127)
!3137 = !{i64 2154368331, i64 2154368351, i64 2154368414}
!3138 = !DILocation(line: 56, column: 1, scope: !3127)
!3139 = !{i64 2154368749, i64 2154368769, i64 2154368832}
!3140 = !DILocation(line: 57, column: 1, scope: !3127)
!3141 = !{i64 2154369167, i64 2154369187, i64 2154369250}
!3142 = !DILocation(line: 58, column: 1, scope: !3127)
!3143 = !{i64 2154369585, i64 2154369605, i64 2154369668}
!3144 = !DILocation(line: 59, column: 1, scope: !3127)
!3145 = !{i64 2154370003, i64 2154370023, i64 2154370086}
!3146 = !DILocation(line: 60, column: 1, scope: !3127)
!3147 = !{i64 2154370427, i64 2154370447, i64 2154370510}
!3148 = !DILocation(line: 61, column: 1, scope: !3127)
!3149 = !{i64 2154370744, i64 2154370764, i64 2154370827}
!3150 = !DILocation(line: 70, column: 1, scope: !3127)
!3151 = !{i64 2154370973, i64 2154370993, i64 2154371056}
!3152 = !DILocation(line: 72, column: 1, scope: !3127)
!3153 = !{i64 2154371305, i64 2154371325, i64 2154371388}
!3154 = !DILocation(line: 73, column: 1, scope: !3127)
!3155 = !{i64 2154375816, i64 2154375836, i64 2154375899}
!3156 = !DILocation(line: 74, column: 1, scope: !3127)
!3157 = !{i64 2154376266, i64 2154376286, i64 2154376349}
!3158 = !DILocation(line: 75, column: 1, scope: !3127)
!3159 = !{i64 2154376716, i64 2154376736, i64 2154376799}
!3160 = !DILocation(line: 76, column: 1, scope: !3127)
!3161 = !{i64 2154377166, i64 2154377186, i64 2154377249}
!3162 = !DILocation(line: 77, column: 1, scope: !3127)
!3163 = !{i64 2154377616, i64 2154377636, i64 2154377699}
!3164 = !DILocation(line: 78, column: 1, scope: !3127)
!3165 = !{i64 2154378066, i64 2154378086, i64 2154378149}
!3166 = !DILocation(line: 79, column: 1, scope: !3127)
!3167 = !{i64 2154378516, i64 2154378536, i64 2154378599}
!3168 = !DILocation(line: 80, column: 1, scope: !3127)
!3169 = !{i64 2154378969, i64 2154378989, i64 2154379052}
!3170 = !DILocation(line: 84, column: 1, scope: !3127)
!3171 = !{i64 2154379301, i64 2154379321, i64 2154379384}
!3172 = !DILocation(line: 91, column: 1, scope: !3127)
!3173 = !{i64 2154379698, i64 2154379718, i64 2154379781}
!3174 = !DILocation(line: 93, column: 1, scope: !3127)
!3175 = !{i64 2154380065, i64 2154380085, i64 2154380148}
!3176 = !DILocation(line: 106, column: 1, scope: !3127)
!3177 = !{i64 2154380335, i64 2154380355, i64 2154380418}
!3178 = !DILocation(line: 11, column: 1, scope: !3179)
!3179 = !DILexicalBlockFile(scope: !3068, file: !3180, discriminator: 0)
!3180 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3181 = distinct !DISubprogram(name: "inc_count", scope: !116, file: !116, line: 25, type: !3182, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3184)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{null, !107, !107, !107}
!3184 = !{!3185, !3186, !3187, !3188, !3189}
!3185 = !DILocalVariable(name: "p1", arg: 1, scope: !3181, file: !116, line: 25, type: !107)
!3186 = !DILocalVariable(name: "p2", arg: 2, scope: !3181, file: !116, line: 25, type: !107)
!3187 = !DILocalVariable(name: "p3", arg: 3, scope: !3181, file: !116, line: 25, type: !107)
!3188 = !DILocalVariable(name: "i", scope: !3181, file: !116, line: 27, type: !109)
!3189 = !DILocalVariable(name: "my_id", scope: !3181, file: !116, line: 28, type: !102)
!3190 = !DILocation(line: 0, scope: !3181)
!3191 = !DILocation(line: 28, column: 15, scope: !3181)
!3192 = !DILocation(line: 30, column: 2, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3181, file: !116, line: 30, column: 2)
!3194 = !DILocation(line: 31, column: 3, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3196, file: !116, line: 30, column: 31)
!3196 = distinct !DILexicalBlock(scope: !3193, file: !116, line: 30, column: 2)
!3197 = !DILocation(line: 32, column: 8, scope: !3195)
!3198 = !DILocation(line: 40, column: 13, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3195, file: !116, line: 40, column: 7)
!3200 = !DILocation(line: 40, column: 7, scope: !3195)
!3201 = !DILocation(line: 41, column: 4, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3199, file: !116, line: 40, column: 29)
!3203 = !DILocation(line: 43, column: 4, scope: !3202)
!3204 = !DILocation(line: 44, column: 4, scope: !3202)
!3205 = !DILocation(line: 47, column: 27, scope: !3195)
!3206 = !DILocation(line: 45, column: 3, scope: !3202)
!3207 = !DILocation(line: 46, column: 3, scope: !3195)
!3208 = !DILocation(line: 48, column: 3, scope: !3195)
!3209 = !DILocation(line: 51, column: 3, scope: !3195)
!3210 = !DILocation(line: 30, column: 27, scope: !3196)
!3211 = !DILocation(line: 30, column: 16, scope: !3196)
!3212 = distinct !{!3212, !3192, !3213}
!3213 = !DILocation(line: 52, column: 2, scope: !3193)
!3214 = !DILocation(line: 53, column: 1, scope: !3181)
!3215 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3216, file: !3216, line: 927, type: !3217, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3224)
!3216 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!3217 = !DISubroutineType(types: !3218)
!3218 = !{!109, !3219, !3220}
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!3220 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3221)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3222)
!3222 = !{!3223}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3221, file: !104, line: 66, baseType: !103, size: 64)
!3224 = !{!3225, !3226}
!3225 = !DILocalVariable(name: "mutex", arg: 1, scope: !3215, file: !3216, line: 927, type: !3219)
!3226 = !DILocalVariable(name: "timeout", arg: 2, scope: !3215, file: !3216, line: 927, type: !3220)
!3227 = !DILocation(line: 0, scope: !3215)
!3228 = !DILocation(line: 936, column: 2, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3215, file: !3216, line: 936, column: 2)
!3230 = !{i64 2154074033}
!3231 = !DILocation(line: 937, column: 9, scope: !3215)
!3232 = !DILocation(line: 937, column: 2, scope: !3215)
!3233 = distinct !DISubprogram(name: "k_condvar_signal", scope: !3216, file: !3216, line: 976, type: !3234, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3237)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{!109, !3236}
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3237 = !{!3238}
!3238 = !DILocalVariable(name: "condvar", arg: 1, scope: !3233, file: !3216, line: 976, type: !3236)
!3239 = !DILocation(line: 0, scope: !3233)
!3240 = !DILocation(line: 984, column: 2, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3233, file: !3216, line: 984, column: 2)
!3242 = !{i64 2154074237}
!3243 = !DILocation(line: 985, column: 9, scope: !3233)
!3244 = !DILocation(line: 985, column: 2, scope: !3233)
!3245 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3216, file: !3216, line: 944, type: !3246, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3248)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{!109, !3219}
!3248 = !{!3249}
!3249 = !DILocalVariable(name: "mutex", arg: 1, scope: !3245, file: !3216, line: 944, type: !3219)
!3250 = !DILocation(line: 0, scope: !3245)
!3251 = !DILocation(line: 952, column: 2, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3245, file: !3216, line: 952, column: 2)
!3253 = !{i64 2154074101}
!3254 = !DILocation(line: 953, column: 9, scope: !3245)
!3255 = !DILocation(line: 953, column: 2, scope: !3245)
!3256 = distinct !DISubprogram(name: "k_sleep", scope: !3216, file: !3216, line: 91, type: !3257, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3259)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{!745, !3220}
!3259 = !{!3260}
!3260 = !DILocalVariable(name: "timeout", arg: 1, scope: !3256, file: !3216, line: 91, type: !3220)
!3261 = !DILocation(line: 0, scope: !3256)
!3262 = !DILocation(line: 99, column: 2, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3256, file: !3216, line: 99, column: 2)
!3264 = !{i64 2154070665}
!3265 = !DILocation(line: 100, column: 9, scope: !3256)
!3266 = !DILocation(line: 100, column: 2, scope: !3256)
!3267 = distinct !DISubprogram(name: "watch_count", scope: !116, file: !116, line: 55, type: !3182, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3268)
!3268 = !{!3269, !3270, !3271, !3272}
!3269 = !DILocalVariable(name: "p1", arg: 1, scope: !3267, file: !116, line: 55, type: !107)
!3270 = !DILocalVariable(name: "p2", arg: 2, scope: !3267, file: !116, line: 55, type: !107)
!3271 = !DILocalVariable(name: "p3", arg: 3, scope: !3267, file: !116, line: 55, type: !107)
!3272 = !DILocalVariable(name: "my_id", scope: !3267, file: !116, line: 57, type: !102)
!3273 = !DILocation(line: 0, scope: !3267)
!3274 = !DILocation(line: 57, column: 15, scope: !3267)
!3275 = !DILocation(line: 59, column: 2, scope: !3267)
!3276 = !DILocation(line: 61, column: 2, scope: !3267)
!3277 = !DILocation(line: 62, column: 9, scope: !3267)
!3278 = !DILocation(line: 62, column: 15, scope: !3267)
!3279 = !DILocation(line: 62, column: 2, scope: !3267)
!3280 = !DILocation(line: 63, column: 3, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3267, file: !116, line: 62, column: 30)
!3282 = !DILocation(line: 65, column: 3, scope: !3281)
!3283 = !DILocation(line: 68, column: 27, scope: !3281)
!3284 = !DILocation(line: 67, column: 3, scope: !3281)
!3285 = distinct !{!3285, !3279, !3286}
!3286 = !DILocation(line: 69, column: 2, scope: !3267)
!3287 = !DILocation(line: 70, column: 2, scope: !3267)
!3288 = !DILocation(line: 72, column: 8, scope: !3267)
!3289 = !DILocation(line: 73, column: 2, scope: !3267)
!3290 = !DILocation(line: 74, column: 2, scope: !3267)
!3291 = !DILocation(line: 75, column: 2, scope: !3267)
!3292 = !DILocation(line: 76, column: 1, scope: !3267)
!3293 = distinct !DISubprogram(name: "k_condvar_wait", scope: !3216, file: !3216, line: 1008, type: !3294, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3296)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!109, !3236, !3219, !3220}
!3296 = !{!3297, !3298, !3299}
!3297 = !DILocalVariable(name: "condvar", arg: 1, scope: !3293, file: !3216, line: 1008, type: !3236)
!3298 = !DILocalVariable(name: "mutex", arg: 2, scope: !3293, file: !3216, line: 1008, type: !3219)
!3299 = !DILocalVariable(name: "timeout", arg: 3, scope: !3293, file: !3216, line: 1008, type: !3220)
!3300 = !DILocation(line: 0, scope: !3293)
!3301 = !DILocation(line: 1018, column: 2, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3293, file: !3216, line: 1018, column: 2)
!3303 = !{i64 2154074373}
!3304 = !DILocation(line: 1019, column: 9, scope: !3293)
!3305 = !DILocation(line: 1019, column: 2, scope: !3293)
!3306 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 78, type: !3070, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3307)
!3307 = !{!3308, !3309, !3310, !3311}
!3308 = !DILocalVariable(name: "t1", scope: !3306, file: !116, line: 80, type: !102)
!3309 = !DILocalVariable(name: "t2", scope: !3306, file: !116, line: 80, type: !102)
!3310 = !DILocalVariable(name: "t3", scope: !3306, file: !116, line: 80, type: !102)
!3311 = !DILocalVariable(name: "i", scope: !3306, file: !116, line: 81, type: !109)
!3312 = !DILocation(line: 0, scope: !3306)
!3313 = !DILocation(line: 83, column: 8, scope: !3306)
!3314 = !DILocation(line: 85, column: 2, scope: !3306)
!3315 = !DILocation(line: 89, column: 2, scope: !3306)
!3316 = !DILocation(line: 93, column: 2, scope: !3306)
!3317 = !DILocation(line: 98, column: 2, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3306, file: !116, line: 98, column: 2)
!3319 = !DILocation(line: 99, column: 18, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !116, line: 98, column: 36)
!3321 = distinct !DILexicalBlock(scope: !3318, file: !116, line: 98, column: 2)
!3322 = !DILocation(line: 99, column: 3, scope: !3320)
!3323 = !DILocation(line: 98, column: 32, scope: !3321)
!3324 = !DILocation(line: 98, column: 16, scope: !3321)
!3325 = distinct !{!3325, !3317, !3326}
!3326 = !DILocation(line: 100, column: 2, scope: !3318)
!3327 = !DILocation(line: 103, column: 22, scope: !3306)
!3328 = !DILocation(line: 102, column: 2, scope: !3306)
!3329 = !DILocation(line: 104, column: 1, scope: !3306)
!3330 = distinct !DISubprogram(name: "k_thread_create", scope: !3216, file: !3216, line: 24, type: !3331, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3339)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{!3333, !266, !3334, !234, !3337, !107, !107, !107, !109, !110, !3220}
!3333 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !266)
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 32)
!3335 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3336, line: 44, baseType: !146)
!3336 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3337 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3336, line: 46, baseType: !3338)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 32)
!3339 = !{!3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349}
!3340 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3330, file: !3216, line: 24, type: !266)
!3341 = !DILocalVariable(name: "stack", arg: 2, scope: !3330, file: !3216, line: 24, type: !3334)
!3342 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3330, file: !3216, line: 24, type: !234)
!3343 = !DILocalVariable(name: "entry", arg: 4, scope: !3330, file: !3216, line: 24, type: !3337)
!3344 = !DILocalVariable(name: "p1", arg: 5, scope: !3330, file: !3216, line: 24, type: !107)
!3345 = !DILocalVariable(name: "p2", arg: 6, scope: !3330, file: !3216, line: 24, type: !107)
!3346 = !DILocalVariable(name: "p3", arg: 7, scope: !3330, file: !3216, line: 24, type: !107)
!3347 = !DILocalVariable(name: "prio", arg: 8, scope: !3330, file: !3216, line: 24, type: !109)
!3348 = !DILocalVariable(name: "options", arg: 9, scope: !3330, file: !3216, line: 24, type: !110)
!3349 = !DILocalVariable(name: "delay", arg: 10, scope: !3330, file: !3216, line: 24, type: !3220)
!3350 = !DILocation(line: 0, scope: !3330)
!3351 = !DILocation(line: 49, column: 2, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3330, file: !3216, line: 49, column: 2)
!3353 = !{i64 2154070461}
!3354 = !DILocation(line: 50, column: 9, scope: !3330)
!3355 = !DILocation(line: 50, column: 2, scope: !3330)
!3356 = distinct !DISubprogram(name: "k_thread_join", scope: !3216, file: !3216, line: 74, type: !3357, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3359)
!3357 = !DISubroutineType(types: !3358)
!3358 = !{!109, !266, !3220}
!3359 = !{!3360, !3361}
!3360 = !DILocalVariable(name: "thread", arg: 1, scope: !3356, file: !3216, line: 74, type: !266)
!3361 = !DILocalVariable(name: "timeout", arg: 2, scope: !3356, file: !3216, line: 74, type: !3220)
!3362 = !DILocation(line: 0, scope: !3356)
!3363 = !DILocation(line: 83, column: 2, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3356, file: !3216, line: 83, column: 2)
!3365 = !{i64 2154070597}
!3366 = !DILocation(line: 84, column: 9, scope: !3356)
!3367 = !DILocation(line: 84, column: 2, scope: !3356)
!3368 = distinct !DISubprogram(name: "cbvprintf_package", scope: !288, file: !288, line: 233, type: !3369, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3378)
!3369 = !DISubroutineType(types: !3370)
!3370 = !{!109, !107, !234, !110, !279, !3371}
!3371 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3372, line: 99, baseType: !3373)
!3372 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3373 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3372, line: 40, baseType: !3374)
!3374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !288, baseType: !3375)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3376)
!3376 = !{!3377}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3375, file: !288, line: 18, baseType: !107, size: 32)
!3378 = !{!3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3414, !3423, !3426, !3427, !3430, !3433, !3436, !3439, !3445}
!3379 = !DILocalVariable(name: "packaged", arg: 1, scope: !3368, file: !288, line: 233, type: !107)
!3380 = !DILocalVariable(name: "len", arg: 2, scope: !3368, file: !288, line: 233, type: !234)
!3381 = !DILocalVariable(name: "flags", arg: 3, scope: !3368, file: !288, line: 233, type: !110)
!3382 = !DILocalVariable(name: "fmt", arg: 4, scope: !3368, file: !288, line: 234, type: !279)
!3383 = !DILocalVariable(name: "ap", arg: 5, scope: !3368, file: !288, line: 234, type: !3371)
!3384 = !DILocalVariable(name: "buf0", scope: !3368, file: !288, line: 247, type: !286)
!3385 = !DILocalVariable(name: "buf", scope: !3368, file: !288, line: 248, type: !286)
!3386 = !DILocalVariable(name: "size", scope: !3368, file: !288, line: 249, type: !32)
!3387 = !DILocalVariable(name: "align", scope: !3368, file: !288, line: 250, type: !32)
!3388 = !DILocalVariable(name: "str_ptr_pos", scope: !3368, file: !288, line: 251, type: !3389)
!3389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 128, elements: !1785)
!3390 = !DILocalVariable(name: "str_ptr_arg", scope: !3368, file: !288, line: 252, type: !3389)
!3391 = !DILocalVariable(name: "s_idx", scope: !3368, file: !288, line: 253, type: !32)
!3392 = !DILocalVariable(name: "s_rw_cnt", scope: !3368, file: !288, line: 254, type: !32)
!3393 = !DILocalVariable(name: "s_ro_cnt", scope: !3368, file: !288, line: 255, type: !32)
!3394 = !DILocalVariable(name: "arg_idx", scope: !3368, file: !288, line: 256, type: !109)
!3395 = !DILocalVariable(name: "i", scope: !3368, file: !288, line: 257, type: !32)
!3396 = !DILocalVariable(name: "s", scope: !3368, file: !288, line: 258, type: !279)
!3397 = !DILocalVariable(name: "parsing", scope: !3368, file: !288, line: 259, type: !347)
!3398 = !DILocalVariable(name: "rws_pos_en", scope: !3368, file: !288, line: 263, type: !347)
!3399 = !DILocalVariable(name: "fros_cnt", scope: !3368, file: !288, line: 268, type: !109)
!3400 = !DILocalVariable(name: "is_str_arg", scope: !3368, file: !288, line: 269, type: !347)
!3401 = !DILocalVariable(name: "pkg_hdr", scope: !3368, file: !288, line: 270, type: !3402)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 32)
!3403 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3404, line: 78, size: 32, elements: !3405)
!3404 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3405 = !{!3406, !3413}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3403, file: !3404, line: 80, baseType: !3407, size: 32)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3404, line: 45, size: 32, elements: !3408)
!3408 = !{!3409, !3410, !3411, !3412}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3407, file: !3404, line: 47, baseType: !180, size: 8)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3407, file: !3404, line: 50, baseType: !180, size: 8, offset: 8)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3407, file: !3404, line: 53, baseType: !180, size: 8, offset: 16)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3407, file: !3404, line: 56, baseType: !180, size: 8, offset: 24)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3403, file: !3404, line: 82, baseType: !107, size: 32)
!3414 = !DILocalVariable(name: "v", scope: !3415, file: !288, line: 567, type: !3419)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !288, line: 562, column: 14)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !288, line: 481, column: 18)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !288, line: 466, column: 3)
!3418 = distinct !DILexicalBlock(scope: !3368, file: !288, line: 343, column: 15)
!3419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3368, file: !288, line: 567, size: 64, elements: !3420)
!3420 = !{!3421, !3422}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3419, file: !288, line: 567, baseType: !277, size: 64)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3419, file: !288, line: 567, baseType: !275, size: 64)
!3423 = !DILocalVariable(name: "is_ro", scope: !3424, file: !288, line: 620, type: !347)
!3424 = distinct !DILexicalBlock(scope: !3425, file: !288, line: 613, column: 19)
!3425 = distinct !DILexicalBlock(scope: !3418, file: !288, line: 613, column: 7)
!3426 = !DILocalVariable(name: "do_ro", scope: !3424, file: !288, line: 621, type: !347)
!3427 = !DILocalVariable(name: "s_ptr_idx", scope: !3428, file: !288, line: 626, type: !110)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !288, line: 625, column: 11)
!3429 = distinct !DILexicalBlock(scope: !3424, file: !288, line: 623, column: 8)
!3430 = !DILocalVariable(name: "v", scope: !3431, file: !288, line: 684, type: !109)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !288, line: 683, column: 35)
!3432 = distinct !DILexicalBlock(scope: !3425, file: !288, line: 683, column: 14)
!3433 = !DILocalVariable(name: "v", scope: !3434, file: !288, line: 691, type: !102)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !288, line: 690, column: 36)
!3435 = distinct !DILexicalBlock(scope: !3432, file: !288, line: 690, column: 14)
!3436 = !DILocalVariable(name: "v", scope: !3437, file: !288, line: 698, type: !106)
!3437 = distinct !DILexicalBlock(scope: !3438, file: !288, line: 697, column: 41)
!3438 = distinct !DILexicalBlock(scope: !3435, file: !288, line: 697, column: 14)
!3439 = !DILocalVariable(name: "pos", scope: !3440, file: !288, line: 762, type: !180)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !288, line: 757, column: 31)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !288, line: 757, column: 3)
!3442 = distinct !DILexicalBlock(scope: !3443, file: !288, line: 757, column: 3)
!3443 = distinct !DILexicalBlock(scope: !3444, file: !288, line: 756, column: 16)
!3444 = distinct !DILexicalBlock(scope: !3368, file: !288, line: 756, column: 6)
!3445 = !DILabel(scope: !3424, name: "process_string", file: !288, line: 615)
!3446 = !DILocation(line: 0, scope: !3368)
!3447 = !DILocation(line: 251, column: 2, scope: !3368)
!3448 = !DILocation(line: 251, column: 10, scope: !3368)
!3449 = !DILocation(line: 252, column: 2, scope: !3368)
!3450 = !DILocation(line: 252, column: 10, scope: !3368)
!3451 = !DILocation(line: 263, column: 29, scope: !3368)
!3452 = !DILocation(line: 263, column: 21, scope: !3368)
!3453 = !DILocation(line: 268, column: 21, scope: !3368)
!3454 = !DILocation(line: 268, column: 19, scope: !3368)
!3455 = !DILocation(line: 273, column: 6, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3368, file: !288, line: 273, column: 6)
!3457 = !DILocation(line: 273, column: 26, scope: !3456)
!3458 = !DILocation(line: 273, column: 6, scope: !3368)
!3459 = !DILocation(line: 297, column: 6, scope: !3368)
!3460 = !DILocation(line: 305, column: 11, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3368, file: !288, line: 305, column: 6)
!3462 = !DILocation(line: 305, column: 6, scope: !3368)
!3463 = !DILocation(line: 327, column: 19, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3368, file: !288, line: 327, column: 6)
!3465 = !DILocation(line: 327, column: 22, scope: !3464)
!3466 = !DILocation(line: 327, column: 33, scope: !3464)
!3467 = !DILocation(line: 327, column: 50, scope: !3464)
!3468 = !DILocation(line: 327, column: 6, scope: !3368)
!3469 = !DILocation(line: 338, column: 9, scope: !3368)
!3470 = !DILocation(line: 341, column: 2, scope: !3368)
!3471 = !DILocation(line: 472, column: 8, scope: !3417)
!3472 = !DILocation(line: 473, column: 14, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !288, line: 473, column: 9)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !288, line: 472, column: 18)
!3475 = distinct !DILexicalBlock(scope: !3417, file: !288, line: 472, column: 8)
!3476 = !DILocation(line: 473, column: 9, scope: !3474)
!3477 = !DILocation(line: 479, column: 5, scope: !3474)
!3478 = !DILocation(line: 468, column: 9, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3417, file: !288, line: 468, column: 8)
!3480 = !DILocation(line: 468, column: 8, scope: !3479)
!3481 = !DILocation(line: 468, column: 15, scope: !3479)
!3482 = !DILocation(line: 468, column: 8, scope: !3417)
!3483 = distinct !{!3483, !3484, !3485}
!3484 = !DILocation(line: 343, column: 2, scope: !3368)
!3485 = !DILocation(line: 712, column: 2, scope: !3368)
!3486 = !DILocation(line: 481, column: 4, scope: !3417)
!3487 = !DILocation(line: 484, column: 12, scope: !3416)
!3488 = !DILocation(line: 485, column: 5, scope: !3416)
!3489 = !DILocation(line: 505, column: 5, scope: !3416)
!3490 = !DILocation(line: 518, column: 5, scope: !3416)
!3491 = !DILocation(line: 523, column: 5, scope: !3416)
!3492 = !DILocation(line: 532, column: 9, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3416, file: !288, line: 532, column: 9)
!3494 = !DILocation(line: 532, column: 17, scope: !3493)
!3495 = !DILocation(line: 532, column: 9, scope: !3416)
!3496 = !DILocation(line: 533, column: 10, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !288, line: 533, column: 10)
!3498 = distinct !DILexicalBlock(scope: !3493, file: !288, line: 532, column: 25)
!3499 = !DILocation(line: 533, column: 18, scope: !3497)
!3500 = !DILocation(line: 0, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3415, file: !288, line: 569, column: 9)
!3502 = !DILocation(line: 0, scope: !3415)
!3503 = !DILocation(line: 579, column: 20, scope: !3415)
!3504 = !DILocation(line: 579, column: 11, scope: !3415)
!3505 = !DILocation(line: 580, column: 9, scope: !3415)
!3506 = !DILocation(line: 582, column: 21, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !288, line: 582, column: 10)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !288, line: 580, column: 23)
!3509 = distinct !DILexicalBlock(scope: !3415, file: !288, line: 580, column: 9)
!3510 = !DILocation(line: 582, column: 28, scope: !3507)
!3511 = !DILocation(line: 582, column: 10, scope: !3508)
!3512 = !DILocation(line: 0, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !288, line: 587, column: 17)
!3514 = distinct !DILexicalBlock(scope: !3508, file: !288, line: 585, column: 10)
!3515 = !DILocation(line: 593, column: 9, scope: !3415)
!3516 = !DILocation(line: 600, column: 5, scope: !3416)
!3517 = !DILocation(line: 605, column: 18, scope: !3418)
!3518 = !DILocation(line: 605, column: 9, scope: !3418)
!3519 = !DILocation(line: 608, column: 20, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3418, file: !288, line: 608, column: 7)
!3521 = !DILocation(line: 608, column: 23, scope: !3520)
!3522 = !DILocation(line: 608, column: 34, scope: !3520)
!3523 = !DILocation(line: 608, column: 41, scope: !3520)
!3524 = !DILocation(line: 608, column: 7, scope: !3418)
!3525 = !DILocation(line: 613, column: 7, scope: !3418)
!3526 = !DILocation(line: 614, column: 8, scope: !3424)
!3527 = !DILocation(line: 614, column: 4, scope: !3424)
!3528 = !DILocation(line: 256, column: 6, scope: !3368)
!3529 = !DILocation(line: 254, column: 15, scope: !3368)
!3530 = !DILocation(line: 320, column: 7, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3461, file: !288, line: 305, column: 20)
!3532 = !DILocation(line: 615, column: 1, scope: !3424)
!3533 = !DILocation(line: 616, column: 8, scope: !3424)
!3534 = !DILocation(line: 617, column: 5, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !288, line: 616, column: 22)
!3536 = distinct !DILexicalBlock(scope: !3424, file: !288, line: 616, column: 8)
!3537 = !DILocation(line: 617, column: 25, scope: !3535)
!3538 = !DILocation(line: 618, column: 4, scope: !3535)
!3539 = !DILocation(line: 620, column: 26, scope: !3424)
!3540 = !DILocation(line: 620, column: 29, scope: !3424)
!3541 = !DILocation(line: 620, column: 17, scope: !3424)
!3542 = !DILocation(line: 620, column: 43, scope: !3424)
!3543 = !DILocation(line: 0, scope: !3424)
!3544 = !DILocation(line: 623, column: 14, scope: !3429)
!3545 = !DILocation(line: 626, column: 26, scope: !3428)
!3546 = !DILocation(line: 626, column: 37, scope: !3428)
!3547 = !DILocation(line: 0, scope: !3428)
!3548 = !DILocation(line: 634, column: 15, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3428, file: !288, line: 634, column: 9)
!3550 = !DILocation(line: 635, column: 6, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !288, line: 635, column: 6)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !288, line: 635, column: 6)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !288, line: 635, column: 6)
!3554 = distinct !DILexicalBlock(scope: !3549, file: !288, line: 634, column: 44)
!3555 = !DILocation(line: 639, column: 15, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3428, file: !288, line: 639, column: 9)
!3557 = !DILocation(line: 639, column: 9, scope: !3428)
!3558 = !DILocation(line: 640, column: 6, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !288, line: 640, column: 6)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !288, line: 640, column: 6)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !288, line: 640, column: 6)
!3562 = distinct !DILexicalBlock(scope: !3556, file: !288, line: 639, column: 43)
!3563 = !DILocation(line: 644, column: 9, scope: !3428)
!3564 = !DILocation(line: 649, column: 27, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !288, line: 644, column: 23)
!3566 = distinct !DILexicalBlock(scope: !3428, file: !288, line: 644, column: 9)
!3567 = !DILocation(line: 649, column: 6, scope: !3565)
!3568 = !DILocation(line: 649, column: 25, scope: !3565)
!3569 = !DILocation(line: 650, column: 27, scope: !3565)
!3570 = !DILocation(line: 650, column: 6, scope: !3565)
!3571 = !DILocation(line: 650, column: 25, scope: !3565)
!3572 = !DILocation(line: 651, column: 10, scope: !3565)
!3573 = !DILocation(line: 653, column: 26, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !288, line: 651, column: 17)
!3575 = distinct !DILexicalBlock(scope: !3565, file: !288, line: 651, column: 10)
!3576 = !DILocation(line: 654, column: 15, scope: !3574)
!3577 = !DILocation(line: 655, column: 6, scope: !3574)
!3578 = !DILocation(line: 656, column: 15, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3575, file: !288, line: 655, column: 13)
!3580 = !DILocation(line: 658, column: 16, scope: !3566)
!3581 = !DILocation(line: 663, column: 10, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !288, line: 658, column: 23)
!3583 = distinct !DILexicalBlock(scope: !3566, file: !288, line: 658, column: 16)
!3584 = !DILocation(line: 664, column: 5, scope: !3582)
!3585 = !DILocation(line: 664, column: 16, scope: !3583)
!3586 = !DILocation(line: 669, column: 10, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !288, line: 664, column: 28)
!3588 = distinct !DILexicalBlock(scope: !3583, file: !288, line: 664, column: 16)
!3589 = !DILocation(line: 670, column: 5, scope: !3587)
!3590 = !DILocation(line: 675, column: 13, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3588, file: !288, line: 670, column: 12)
!3592 = !DILocation(line: 675, column: 27, scope: !3591)
!3593 = !DILocation(line: 675, column: 10, scope: !3591)
!3594 = !DILocation(line: 678, column: 10, scope: !3428)
!3595 = !DILocation(line: 680, column: 8, scope: !3424)
!3596 = !DILocation(line: 683, column: 14, scope: !3425)
!3597 = !DILocation(line: 684, column: 12, scope: !3431)
!3598 = !DILocation(line: 0, scope: !3431)
!3599 = !DILocation(line: 686, column: 8, scope: !3431)
!3600 = !DILocation(line: 687, column: 5, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !288, line: 686, column: 22)
!3602 = distinct !DILexicalBlock(scope: !3431, file: !288, line: 686, column: 8)
!3603 = !DILocation(line: 687, column: 17, scope: !3601)
!3604 = !DILocation(line: 688, column: 4, scope: !3601)
!3605 = !DILocation(line: 698, column: 18, scope: !3437)
!3606 = !DILocation(line: 0, scope: !3437)
!3607 = !DILocation(line: 700, column: 8, scope: !3437)
!3608 = !DILocation(line: 704, column: 6, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !288, line: 703, column: 12)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !288, line: 701, column: 9)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !288, line: 700, column: 22)
!3612 = distinct !DILexicalBlock(scope: !3437, file: !288, line: 700, column: 8)
!3613 = !DILocation(line: 704, column: 24, scope: !3609)
!3614 = !DILocation(line: 706, column: 4, scope: !3611)
!3615 = !DILocation(line: 709, column: 4, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !288, line: 709, column: 4)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !288, line: 709, column: 4)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !288, line: 709, column: 4)
!3619 = distinct !DILexicalBlock(scope: !3438, file: !288, line: 708, column: 10)
!3620 = !DILocation(line: 0, scope: !3432)
!3621 = !DILocation(line: 0, scope: !3418)
!3622 = !DILocation(line: 720, column: 6, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3368, file: !288, line: 720, column: 6)
!3624 = !DILocation(line: 720, column: 17, scope: !3623)
!3625 = !DILocation(line: 720, column: 31, scope: !3623)
!3626 = !DILocation(line: 720, column: 6, scope: !3368)
!3627 = !DILocation(line: 721, column: 3, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !288, line: 721, column: 3)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !288, line: 721, column: 3)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !288, line: 721, column: 3)
!3631 = distinct !DILexicalBlock(scope: !3623, file: !288, line: 720, column: 38)
!3632 = !DILocation(line: 729, column: 6, scope: !3368)
!3633 = !DILocation(line: 730, column: 21, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !288, line: 729, column: 20)
!3635 = distinct !DILexicalBlock(scope: !3368, file: !288, line: 729, column: 6)
!3636 = !DILocation(line: 730, column: 27, scope: !3634)
!3637 = !DILocation(line: 730, column: 3, scope: !3634)
!3638 = !DILocation(line: 737, column: 22, scope: !3368)
!3639 = !DILocation(line: 737, column: 20, scope: !3368)
!3640 = !DILocation(line: 0, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3368, file: !288, line: 739, column: 6)
!3642 = !DILocation(line: 745, column: 17, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3641, file: !288, line: 743, column: 9)
!3644 = !DILocation(line: 745, column: 25, scope: !3643)
!3645 = !DILocation(line: 746, column: 17, scope: !3643)
!3646 = !DILocation(line: 746, column: 28, scope: !3643)
!3647 = !DILocation(line: 749, column: 29, scope: !3368)
!3648 = !DILocation(line: 749, column: 16, scope: !3368)
!3649 = !DILocation(line: 749, column: 27, scope: !3368)
!3650 = !DILocation(line: 756, column: 6, scope: !3444)
!3651 = !DILocation(line: 756, column: 6, scope: !3368)
!3652 = !DILocation(line: 757, column: 3, scope: !3442)
!3653 = !DILocation(line: 758, column: 10, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3440, file: !288, line: 758, column: 8)
!3655 = !DILocation(line: 758, column: 25, scope: !3654)
!3656 = !DILocation(line: 758, column: 8, scope: !3440)
!3657 = !DILocation(line: 0, scope: !3440)
!3658 = !DILocation(line: 765, column: 8, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3440, file: !288, line: 765, column: 8)
!3660 = !DILocation(line: 765, column: 19, scope: !3659)
!3661 = !DILocation(line: 765, column: 23, scope: !3659)
!3662 = !DILocation(line: 765, column: 8, scope: !3440)
!3663 = !DILocation(line: 762, column: 33, scope: !3440)
!3664 = !DILocation(line: 769, column: 8, scope: !3440)
!3665 = !DILocation(line: 769, column: 11, scope: !3440)
!3666 = !DILocation(line: 757, column: 27, scope: !3441)
!3667 = !DILocation(line: 757, column: 17, scope: !3441)
!3668 = distinct !{!3668, !3652, !3669}
!3669 = !DILocation(line: 770, column: 3, scope: !3442)
!3670 = !DILocation(line: 774, column: 16, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3672, file: !288, line: 774, column: 2)
!3672 = distinct !DILexicalBlock(scope: !3368, file: !288, line: 774, column: 2)
!3673 = !DILocation(line: 774, column: 2, scope: !3672)
!3674 = !DILocation(line: 776, column: 16, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !288, line: 776, column: 7)
!3676 = distinct !DILexicalBlock(scope: !3671, file: !288, line: 774, column: 30)
!3677 = !DILocation(line: 776, column: 19, scope: !3675)
!3678 = !DILocation(line: 776, column: 34, scope: !3675)
!3679 = !DILocation(line: 776, column: 7, scope: !3676)
!3680 = !DILocation(line: 780, column: 7, scope: !3676)
!3681 = !DILocation(line: 782, column: 13, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3683, file: !288, line: 780, column: 19)
!3683 = distinct !DILexicalBlock(scope: !3676, file: !288, line: 780, column: 7)
!3684 = !DILocation(line: 782, column: 8, scope: !3682)
!3685 = !DILocation(line: 782, column: 11, scope: !3682)
!3686 = !DILocation(line: 783, column: 3, scope: !3682)
!3687 = !DILocation(line: 785, column: 26, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3683, file: !288, line: 783, column: 10)
!3689 = !DILocation(line: 785, column: 41, scope: !3688)
!3690 = !DILocation(line: 785, column: 24, scope: !3688)
!3691 = !DILocation(line: 785, column: 8, scope: !3688)
!3692 = !DILocation(line: 787, column: 52, scope: !3688)
!3693 = !DILocation(line: 789, column: 11, scope: !3688)
!3694 = !DILocation(line: 789, column: 21, scope: !3688)
!3695 = !DILocation(line: 0, scope: !3683)
!3696 = !DILocation(line: 793, column: 7, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3676, file: !288, line: 793, column: 7)
!3698 = !DILocation(line: 793, column: 18, scope: !3697)
!3699 = !DILocation(line: 793, column: 22, scope: !3697)
!3700 = !DILocation(line: 793, column: 29, scope: !3697)
!3701 = !DILocation(line: 793, column: 7, scope: !3676)
!3702 = !DILocation(line: 797, column: 12, scope: !3676)
!3703 = !DILocation(line: 797, column: 7, scope: !3676)
!3704 = !DILocation(line: 797, column: 10, scope: !3676)
!3705 = !DILocation(line: 799, column: 3, scope: !3676)
!3706 = !DILocation(line: 800, column: 7, scope: !3676)
!3707 = !DILocation(line: 801, column: 2, scope: !3676)
!3708 = !DILocation(line: 338, column: 4, scope: !3368)
!3709 = !DILocation(line: 774, column: 26, scope: !3671)
!3710 = distinct !{!3710, !3673, !3711}
!3711 = !DILocation(line: 801, column: 2, scope: !3672)
!3712 = !DILocation(line: 808, column: 9, scope: !3368)
!3713 = !DILocation(line: 808, column: 2, scope: !3368)
!3714 = !DILocation(line: 813, column: 1, scope: !3368)
!3715 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !288, file: !288, line: 33, type: !3716, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3718)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!347, !279}
!3718 = !{!3719}
!3719 = !DILocalVariable(name: "addr", arg: 1, scope: !3715, file: !288, line: 33, type: !279)
!3720 = !DILocation(line: 0, scope: !3715)
!3721 = !DILocation(line: 41, column: 9, scope: !3715)
!3722 = !DILocation(line: 41, column: 2, scope: !3715)
!3723 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3724, file: !3724, line: 24, type: !3725, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3727)
!3724 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3725 = !DISubroutineType(types: !3726)
!3726 = !{!347, !13}
!3727 = !{!3728}
!3728 = !DILocalVariable(name: "addr", arg: 1, scope: !3723, file: !3724, line: 24, type: !13)
!3729 = !DILocation(line: 0, scope: !3723)
!3730 = !DILocation(line: 49, column: 30, scope: !3723)
!3731 = !DILocation(line: 49, column: 57, scope: !3723)
!3732 = !DILocation(line: 49, column: 2, scope: !3723)
!3733 = distinct !DISubprogram(name: "cbprintf_package", scope: !288, file: !288, line: 815, type: !3734, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3736)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{!109, !107, !234, !110, !279, null}
!3736 = !{!3737, !3738, !3739, !3740, !3741, !3742}
!3737 = !DILocalVariable(name: "packaged", arg: 1, scope: !3733, file: !288, line: 815, type: !107)
!3738 = !DILocalVariable(name: "len", arg: 2, scope: !3733, file: !288, line: 815, type: !234)
!3739 = !DILocalVariable(name: "flags", arg: 3, scope: !3733, file: !288, line: 815, type: !110)
!3740 = !DILocalVariable(name: "format", arg: 4, scope: !3733, file: !288, line: 816, type: !279)
!3741 = !DILocalVariable(name: "ap", scope: !3733, file: !288, line: 818, type: !3371)
!3742 = !DILocalVariable(name: "ret", scope: !3733, file: !288, line: 819, type: !109)
!3743 = !DILocation(line: 0, scope: !3733)
!3744 = !DILocation(line: 818, column: 2, scope: !3733)
!3745 = !DILocation(line: 818, column: 10, scope: !3733)
!3746 = !DILocation(line: 821, column: 2, scope: !3733)
!3747 = !DILocation(line: 822, column: 8, scope: !3733)
!3748 = !DILocation(line: 823, column: 2, scope: !3733)
!3749 = !DILocation(line: 825, column: 1, scope: !3733)
!3750 = !DILocation(line: 824, column: 2, scope: !3733)
!3751 = distinct !DISubprogram(name: "cbpprintf_external", scope: !288, file: !288, line: 827, type: !3752, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3762)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!109, !3754, !3758, !107, !107}
!3754 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3404, line: 297, baseType: !3755)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 32)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!109, null}
!3758 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3404, line: 328, baseType: !3759)
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 32)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!109, !3754, !107, !279, !3371}
!3762 = !{!3763, !3764, !3765, !3766, !3767, !3768, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781}
!3763 = !DILocalVariable(name: "out", arg: 1, scope: !3751, file: !288, line: 827, type: !3754)
!3764 = !DILocalVariable(name: "formatter", arg: 2, scope: !3751, file: !288, line: 828, type: !3758)
!3765 = !DILocalVariable(name: "ctx", arg: 3, scope: !3751, file: !288, line: 829, type: !107)
!3766 = !DILocalVariable(name: "packaged", arg: 4, scope: !3751, file: !288, line: 829, type: !107)
!3767 = !DILocalVariable(name: "buf", scope: !3751, file: !288, line: 831, type: !286)
!3768 = !DILocalVariable(name: "hdr", scope: !3751, file: !288, line: 832, type: !3769)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 32)
!3770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3404, line: 96, size: 64, elements: !3771)
!3771 = !{!3772, !3773}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3770, file: !3404, line: 98, baseType: !3403, size: 32)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3770, file: !3404, line: 101, baseType: !285, size: 32, offset: 32)
!3774 = !DILocalVariable(name: "s", scope: !3751, file: !288, line: 833, type: !285)
!3775 = !DILocalVariable(name: "ps", scope: !3751, file: !288, line: 833, type: !284)
!3776 = !DILocalVariable(name: "i", scope: !3751, file: !288, line: 834, type: !32)
!3777 = !DILocalVariable(name: "args_size", scope: !3751, file: !288, line: 834, type: !32)
!3778 = !DILocalVariable(name: "s_nbr", scope: !3751, file: !288, line: 834, type: !32)
!3779 = !DILocalVariable(name: "ros_nbr", scope: !3751, file: !288, line: 834, type: !32)
!3780 = !DILocalVariable(name: "rws_nbr", scope: !3751, file: !288, line: 834, type: !32)
!3781 = !DILocalVariable(name: "s_idx", scope: !3751, file: !288, line: 834, type: !32)
!3782 = !DILocation(line: 0, scope: !3751)
!3783 = !DILocation(line: 836, column: 10, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3751, file: !288, line: 836, column: 6)
!3785 = !DILocation(line: 836, column: 6, scope: !3751)
!3786 = !DILocation(line: 842, column: 28, scope: !3751)
!3787 = !DILocation(line: 842, column: 14, scope: !3751)
!3788 = !DILocation(line: 852, column: 16, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3790, file: !288, line: 852, column: 2)
!3790 = distinct !DILexicalBlock(scope: !3751, file: !288, line: 852, column: 2)
!3791 = !DILocation(line: 852, column: 2, scope: !3790)
!3792 = !DILocation(line: 841, column: 28, scope: !3751)
!3793 = !DILocation(line: 841, column: 14, scope: !3751)
!3794 = !DILocation(line: 841, column: 32, scope: !3751)
!3795 = !DILocation(line: 847, column: 19, scope: !3751)
!3796 = !DILocation(line: 843, column: 28, scope: !3751)
!3797 = !DILocation(line: 843, column: 14, scope: !3751)
!3798 = !DILocation(line: 847, column: 31, scope: !3751)
!3799 = !DILocation(line: 844, column: 28, scope: !3751)
!3800 = !DILocation(line: 844, column: 14, scope: !3751)
!3801 = !DILocation(line: 847, column: 45, scope: !3751)
!3802 = !DILocation(line: 847, column: 41, scope: !3751)
!3803 = !DILocation(line: 854, column: 24, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3789, file: !288, line: 852, column: 30)
!3805 = !DILocation(line: 854, column: 11, scope: !3804)
!3806 = !DILocation(line: 855, column: 30, scope: !3804)
!3807 = !DILocation(line: 855, column: 22, scope: !3804)
!3808 = !DILocation(line: 855, column: 8, scope: !3804)
!3809 = !DILocation(line: 857, column: 7, scope: !3804)
!3810 = !DILocation(line: 859, column: 8, scope: !3804)
!3811 = !DILocation(line: 859, column: 18, scope: !3804)
!3812 = !DILocation(line: 859, column: 5, scope: !3804)
!3813 = !DILocation(line: 852, column: 26, scope: !3789)
!3814 = distinct !{!3814, !3791, !3815}
!3815 = !DILocation(line: 860, column: 2, scope: !3790)
!3816 = !DILocation(line: 863, column: 6, scope: !3751)
!3817 = !DILocation(line: 866, column: 56, scope: !3751)
!3818 = !DILocation(line: 866, column: 9, scope: !3751)
!3819 = !DILocation(line: 866, column: 2, scope: !3751)
!3820 = !DILocation(line: 867, column: 1, scope: !3751)
!3821 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !288, file: !288, line: 179, type: !3822, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3824)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{!109, !3754, !3758, !107, !279, !107}
!3824 = !{!3825, !3826, !3827, !3828, !3829, !3830}
!3825 = !DILocalVariable(name: "out", arg: 1, scope: !3821, file: !288, line: 179, type: !3754)
!3826 = !DILocalVariable(name: "formatter", arg: 2, scope: !3821, file: !288, line: 180, type: !3758)
!3827 = !DILocalVariable(name: "ctx", arg: 3, scope: !3821, file: !288, line: 181, type: !107)
!3828 = !DILocalVariable(name: "fmt", arg: 4, scope: !3821, file: !288, line: 182, type: !279)
!3829 = !DILocalVariable(name: "buf", arg: 5, scope: !3821, file: !288, line: 182, type: !107)
!3830 = !DILocalVariable(name: "u", scope: !3821, file: !288, line: 187, type: !3831)
!3831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3821, file: !288, line: 184, size: 32, elements: !3832)
!3832 = !{!3833, !3834}
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3831, file: !288, line: 185, baseType: !3371, size: 32)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3831, file: !288, line: 186, baseType: !107, size: 32)
!3835 = !DILocation(line: 0, scope: !3821)
!3836 = !DILocation(line: 191, column: 9, scope: !3821)
!3837 = !DILocation(line: 191, column: 2, scope: !3821)
!3838 = distinct !DISubprogram(name: "is_ptr", scope: !288, file: !288, line: 881, type: !3839, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3841)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!347, !279, !109}
!3841 = !{!3842, !3843, !3844, !3845, !3846}
!3842 = !DILocalVariable(name: "fmt", arg: 1, scope: !3838, file: !288, line: 881, type: !279)
!3843 = !DILocalVariable(name: "n", arg: 2, scope: !3838, file: !288, line: 881, type: !109)
!3844 = !DILocalVariable(name: "c", scope: !3838, file: !288, line: 883, type: !150)
!3845 = !DILocalVariable(name: "mod", scope: !3838, file: !288, line: 884, type: !347)
!3846 = !DILocalVariable(name: "cnt", scope: !3838, file: !288, line: 885, type: !109)
!3847 = !DILocation(line: 0, scope: !3838)
!3848 = !DILocation(line: 887, column: 14, scope: !3838)
!3849 = !DILocation(line: 887, column: 22, scope: !3838)
!3850 = !DILocation(line: 887, column: 2, scope: !3838)
!3851 = !DILocation(line: 887, column: 18, scope: !3838)
!3852 = !DILocation(line: 888, column: 7, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3838, file: !288, line: 887, column: 31)
!3854 = !DILocation(line: 889, column: 12, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !288, line: 889, column: 8)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !288, line: 888, column: 12)
!3857 = distinct !DILexicalBlock(scope: !3853, file: !288, line: 888, column: 7)
!3858 = !DILocation(line: 889, column: 8, scope: !3856)
!3859 = !DILocation(line: 890, column: 11, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !288, line: 890, column: 9)
!3861 = distinct !DILexicalBlock(scope: !3855, file: !288, line: 889, column: 18)
!3862 = !DILocation(line: 890, column: 9, scope: !3861)
!3863 = !DILocation(line: 892, column: 16, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3860, file: !288, line: 892, column: 16)
!3865 = !DILocation(line: 892, column: 16, scope: !3860)
!3866 = !DILocation(line: 895, column: 15, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3855, file: !288, line: 895, column: 15)
!3868 = !DILocation(line: 895, column: 15, scope: !3855)
!3869 = !DILocation(line: 900, column: 9, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3853, file: !288, line: 900, column: 7)
!3871 = !DILocation(line: 900, column: 7, scope: !3853)
!3872 = distinct !{!3872, !3850, !3873}
!3873 = !DILocation(line: 903, column: 2, scope: !3838)
!3874 = !DILocation(line: 906, column: 1, scope: !3838)
!3875 = distinct !DISubprogram(name: "is_fmt_spec", scope: !288, file: !288, line: 873, type: !3876, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3878)
!3876 = !DISubroutineType(types: !3877)
!3877 = !{!347, !150}
!3878 = !{!3879}
!3879 = !DILocalVariable(name: "c", arg: 1, scope: !3875, file: !288, line: 873, type: !150)
!3880 = !DILocation(line: 0, scope: !3875)
!3881 = !DILocation(line: 875, column: 19, scope: !3875)
!3882 = !DILocation(line: 875, column: 2, scope: !3875)
!3883 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !288, file: !288, line: 908, type: !3884, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3890)
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!109, !107, !234, !3886, !107, !110, !2759, !234}
!3886 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3404, line: 308, baseType: !3887)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 32)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{!109, !13, !234, !107}
!3890 = !{!3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3908, !3909, !3910, !3911, !3912, !3918, !3921, !3922, !3923, !3925, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3941, !3944, !3945, !3946, !3947, !3948, !3949, !3951, !3954, !3955, !3956}
!3891 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3883, file: !288, line: 908, type: !107)
!3892 = !DILocalVariable(name: "in_len", arg: 2, scope: !3883, file: !288, line: 909, type: !234)
!3893 = !DILocalVariable(name: "cb", arg: 3, scope: !3883, file: !288, line: 910, type: !3886)
!3894 = !DILocalVariable(name: "ctx", arg: 4, scope: !3883, file: !288, line: 911, type: !107)
!3895 = !DILocalVariable(name: "flags", arg: 5, scope: !3883, file: !288, line: 912, type: !110)
!3896 = !DILocalVariable(name: "strl", arg: 6, scope: !3883, file: !288, line: 913, type: !2759)
!3897 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3883, file: !288, line: 914, type: !234)
!3898 = !DILocalVariable(name: "buf", scope: !3883, file: !288, line: 918, type: !286)
!3899 = !DILocalVariable(name: "buf32", scope: !3883, file: !288, line: 919, type: !864)
!3900 = !DILocalVariable(name: "args_size", scope: !3883, file: !288, line: 920, type: !32)
!3901 = !DILocalVariable(name: "ros_nbr", scope: !3883, file: !288, line: 920, type: !32)
!3902 = !DILocalVariable(name: "rws_nbr", scope: !3883, file: !288, line: 920, type: !32)
!3903 = !DILocalVariable(name: "fmt_present", scope: !3883, file: !288, line: 921, type: !347)
!3904 = !DILocalVariable(name: "rw_cpy", scope: !3883, file: !288, line: 922, type: !347)
!3905 = !DILocalVariable(name: "ro_cpy", scope: !3883, file: !288, line: 923, type: !347)
!3906 = !DILocalVariable(name: "in_desc", scope: !3883, file: !288, line: 924, type: !3907)
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 32)
!3908 = !DILocalVariable(name: "out_len", scope: !3883, file: !288, line: 960, type: !109)
!3909 = !DILocalVariable(name: "fmt", scope: !3883, file: !288, line: 965, type: !279)
!3910 = !DILocalVariable(name: "str_pos", scope: !3883, file: !288, line: 966, type: !286)
!3911 = !DILocalVariable(name: "strl_cnt", scope: !3883, file: !288, line: 967, type: !234)
!3912 = !DILocalVariable(name: "i", scope: !3913, file: !288, line: 973, type: !109)
!3913 = distinct !DILexicalBlock(scope: !3914, file: !288, line: 973, column: 4)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !288, line: 972, column: 15)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !288, line: 972, column: 7)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !288, line: 970, column: 18)
!3917 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 970, column: 6)
!3918 = !DILocalVariable(name: "str", scope: !3919, file: !288, line: 974, type: !279)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !288, line: 973, column: 38)
!3920 = distinct !DILexicalBlock(scope: !3913, file: !288, line: 973, column: 4)
!3921 = !DILocalVariable(name: "len", scope: !3919, file: !288, line: 975, type: !109)
!3922 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3916, file: !288, line: 990, type: !347)
!3923 = !DILocalVariable(name: "i", scope: !3924, file: !288, line: 995, type: !109)
!3924 = distinct !DILexicalBlock(scope: !3916, file: !288, line: 995, column: 3)
!3925 = !DILocalVariable(name: "arg_idx", scope: !3926, file: !288, line: 996, type: !180)
!3926 = distinct !DILexicalBlock(scope: !3927, file: !288, line: 995, column: 37)
!3927 = distinct !DILexicalBlock(scope: !3924, file: !288, line: 995, column: 3)
!3928 = !DILocalVariable(name: "arg_pos", scope: !3926, file: !288, line: 997, type: !180)
!3929 = !DILocalVariable(name: "str", scope: !3926, file: !288, line: 998, type: !279)
!3930 = !DILocalVariable(name: "is_ro", scope: !3926, file: !288, line: 999, type: !347)
!3931 = !DILocalVariable(name: "len", scope: !3926, file: !288, line: 1000, type: !109)
!3932 = !DILocalVariable(name: "out_desc", scope: !3883, file: !288, line: 1038, type: !3407)
!3933 = !DILocalVariable(name: "cpy_str_pos", scope: !3883, file: !288, line: 1040, type: !3389)
!3934 = !DILocalVariable(name: "keep_str_pos", scope: !3883, file: !288, line: 1042, type: !3389)
!3935 = !DILocalVariable(name: "scpy_cnt", scope: !3883, file: !288, line: 1043, type: !180)
!3936 = !DILocalVariable(name: "keep_cnt", scope: !3883, file: !288, line: 1044, type: !180)
!3937 = !DILocalVariable(name: "dst", scope: !3883, file: !288, line: 1045, type: !286)
!3938 = !DILocalVariable(name: "rv", scope: !3883, file: !288, line: 1046, type: !109)
!3939 = !DILocalVariable(name: "i", scope: !3940, file: !288, line: 1074, type: !109)
!3940 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 1074, column: 2)
!3941 = !DILocalVariable(name: "arg_idx", scope: !3942, file: !288, line: 1075, type: !180)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !288, line: 1074, column: 36)
!3943 = distinct !DILexicalBlock(scope: !3940, file: !288, line: 1074, column: 2)
!3944 = !DILocalVariable(name: "arg_pos", scope: !3942, file: !288, line: 1076, type: !180)
!3945 = !DILocalVariable(name: "str", scope: !3942, file: !288, line: 1077, type: !279)
!3946 = !DILocalVariable(name: "is_ro", scope: !3942, file: !288, line: 1078, type: !347)
!3947 = !DILocalVariable(name: "in_desc_backup", scope: !3883, file: !288, line: 1114, type: !3407)
!3948 = !DILocalVariable(name: "strs_len", scope: !3883, file: !288, line: 1134, type: !234)
!3949 = !DILocalVariable(name: "i", scope: !3950, file: !288, line: 1143, type: !109)
!3950 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 1143, column: 2)
!3951 = !DILocalVariable(name: "loc", scope: !3952, file: !288, line: 1144, type: !180)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !288, line: 1143, column: 37)
!3953 = distinct !DILexicalBlock(scope: !3950, file: !288, line: 1143, column: 2)
!3954 = !DILocalVariable(name: "str", scope: !3952, file: !288, line: 1145, type: !279)
!3955 = !DILocalVariable(name: "str_len", scope: !3952, file: !288, line: 1146, type: !194)
!3956 = !DILabel(scope: !3957, name: "calculate_string_length", file: !288, line: 1021)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !288, line: 1020, column: 56)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !288, line: 1020, column: 15)
!3959 = distinct !DILexicalBlock(scope: !3926, file: !288, line: 1014, column: 8)
!3960 = !DILocation(line: 0, scope: !3883)
!3961 = !DILocation(line: 916, column: 2, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !288, line: 916, column: 2)
!3963 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 916, column: 2)
!3964 = !DILocation(line: 916, column: 2, scope: !3963)
!3965 = !DILocation(line: 916, column: 2, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3962, file: !288, line: 916, column: 2)
!3967 = !DILocation(line: 919, column: 20, scope: !3883)
!3968 = !DILocation(line: 921, column: 27, scope: !3883)
!3969 = !DILocation(line: 921, column: 21, scope: !3883)
!3970 = !DILocation(line: 926, column: 18, scope: !3883)
!3971 = !DILocation(line: 926, column: 11, scope: !3883)
!3972 = !DILocation(line: 926, column: 34, scope: !3883)
!3973 = !DILocation(line: 931, column: 21, scope: !3883)
!3974 = !DILocation(line: 931, column: 12, scope: !3883)
!3975 = !DILocation(line: 932, column: 11, scope: !3883)
!3976 = !DILocation(line: 932, column: 19, scope: !3883)
!3977 = !DILocation(line: 938, column: 21, scope: !3883)
!3978 = !DILocation(line: 938, column: 12, scope: !3883)
!3979 = !DILocation(line: 939, column: 19, scope: !3883)
!3980 = !DILocation(line: 939, column: 23, scope: !3883)
!3981 = !DILocation(line: 946, column: 14, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 946, column: 6)
!3983 = !DILocation(line: 947, column: 7, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !288, line: 947, column: 7)
!3985 = distinct !DILexicalBlock(scope: !3982, file: !288, line: 946, column: 26)
!3986 = !DILocation(line: 947, column: 7, scope: !3985)
!3987 = !DILocation(line: 948, column: 4, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3984, file: !288, line: 947, column: 11)
!3989 = !DILocation(line: 949, column: 3, scope: !3988)
!3990 = !DILocation(line: 958, column: 23, scope: !3883)
!3991 = !DILocation(line: 958, column: 14, scope: !3883)
!3992 = !DILocation(line: 958, column: 27, scope: !3883)
!3993 = !DILocation(line: 965, column: 41, scope: !3883)
!3994 = !DILocation(line: 965, column: 20, scope: !3883)
!3995 = !DILocation(line: 966, column: 22, scope: !3883)
!3996 = !DILocation(line: 970, column: 9, scope: !3917)
!3997 = !DILocation(line: 970, column: 6, scope: !3883)
!3998 = !DILocation(line: 972, column: 7, scope: !3916)
!3999 = !DILocation(line: 0, scope: !3913)
!4000 = !DILocation(line: 973, column: 4, scope: !3913)
!4001 = !DILocation(line: 974, column: 46, scope: !3919)
!4002 = !DILocation(line: 974, column: 40, scope: !3919)
!4003 = !DILocation(line: 974, column: 23, scope: !3919)
!4004 = !DILocation(line: 0, scope: !3919)
!4005 = !DILocation(line: 975, column: 15, scope: !3919)
!4006 = !DILocation(line: 978, column: 14, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3919, file: !288, line: 978, column: 9)
!4008 = !DILocation(line: 979, column: 25, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4007, file: !288, line: 978, column: 38)
!4010 = !DILocation(line: 979, column: 19, scope: !4009)
!4011 = !DILocation(line: 979, column: 6, scope: !4009)
!4012 = !DILocation(line: 979, column: 23, scope: !4009)
!4013 = !DILocation(line: 980, column: 5, scope: !4009)
!4014 = !DILocation(line: 981, column: 13, scope: !3919)
!4015 = !DILocation(line: 982, column: 12, scope: !3919)
!4016 = !DILocation(line: 973, column: 34, scope: !3920)
!4017 = !DILocation(line: 973, column: 22, scope: !3920)
!4018 = distinct !{!4018, !4000, !4019}
!4019 = !DILocation(line: 983, column: 4, scope: !3913)
!4020 = !DILocation(line: 985, column: 16, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !288, line: 985, column: 8)
!4022 = distinct !DILexicalBlock(scope: !3915, file: !288, line: 984, column: 10)
!4023 = !DILocation(line: 967, column: 9, scope: !3883)
!4024 = !DILocation(line: 971, column: 11, scope: !3916)
!4025 = !DILocation(line: 0, scope: !3916)
!4026 = !DILocation(line: 0, scope: !3924)
!4027 = !DILocation(line: 995, column: 21, scope: !3927)
!4028 = !DILocation(line: 995, column: 3, scope: !3924)
!4029 = !DILocation(line: 990, column: 34, scope: !3916)
!4030 = !DILocation(line: 990, column: 26, scope: !3916)
!4031 = !DILocation(line: 996, column: 30, scope: !3926)
!4032 = !DILocation(line: 0, scope: !3926)
!4033 = !DILocation(line: 997, column: 30, scope: !3926)
!4034 = !DILocation(line: 997, column: 22, scope: !3926)
!4035 = !DILocation(line: 998, column: 39, scope: !3926)
!4036 = !DILocation(line: 998, column: 22, scope: !3926)
!4037 = !DILocation(line: 999, column: 17, scope: !3926)
!4038 = !DILocation(line: 1002, column: 20, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !3926, file: !288, line: 1002, column: 8)
!4040 = !DILocation(line: 996, column: 22, scope: !3926)
!4041 = !DILocation(line: 1002, column: 35, scope: !4039)
!4042 = !DILocation(line: 1002, column: 23, scope: !4039)
!4043 = !DILocation(line: 1002, column: 8, scope: !3926)
!4044 = !DILocation(line: 1003, column: 5, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !288, line: 1003, column: 5)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !288, line: 1003, column: 5)
!4047 = distinct !DILexicalBlock(scope: !4048, file: !288, line: 1003, column: 5)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !288, line: 1003, column: 5)
!4049 = distinct !DILexicalBlock(scope: !4039, file: !288, line: 1002, column: 45)
!4050 = !DILocation(line: 1010, column: 13, scope: !4049)
!4051 = !DILocation(line: 1011, column: 5, scope: !4049)
!4052 = !DILocation(line: 1014, column: 8, scope: !3926)
!4053 = !DILocation(line: 1015, column: 9, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !3959, file: !288, line: 1014, column: 15)
!4055 = !DILocation(line: 1018, column: 14, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !288, line: 1017, column: 12)
!4057 = distinct !DILexicalBlock(scope: !4054, file: !288, line: 1015, column: 9)
!4058 = !DILocation(line: 1020, column: 4, scope: !4054)
!4059 = !DILocation(line: 1020, column: 15, scope: !3959)
!4060 = !DILocation(line: 1021, column: 1, scope: !3957)
!4061 = !DILocation(line: 1022, column: 11, scope: !3957)
!4062 = !DILocation(line: 1025, column: 14, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !3957, file: !288, line: 1025, column: 9)
!4064 = !DILocation(line: 1026, column: 25, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4063, file: !288, line: 1025, column: 38)
!4066 = !DILocation(line: 1026, column: 19, scope: !4065)
!4067 = !DILocation(line: 1026, column: 6, scope: !4065)
!4068 = !DILocation(line: 1026, column: 23, scope: !4065)
!4069 = !DILocation(line: 1027, column: 5, scope: !4065)
!4070 = !DILocation(line: 1031, column: 21, scope: !3957)
!4071 = !DILocation(line: 1031, column: 13, scope: !3957)
!4072 = !DILocation(line: 1032, column: 4, scope: !3957)
!4073 = !DILocation(line: 995, column: 33, scope: !3927)
!4074 = distinct !{!4074, !4028, !4075}
!4075 = !DILocation(line: 1033, column: 3, scope: !3924)
!4076 = !DILocation(line: 1040, column: 10, scope: !3883)
!4077 = !DILocation(line: 1042, column: 10, scope: !3883)
!4078 = !DILocation(line: 1052, column: 6, scope: !3883)
!4079 = !DILocation(line: 1055, column: 9, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !288, line: 1052, column: 14)
!4081 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 1052, column: 6)
!4082 = !DILocation(line: 1056, column: 2, scope: !4080)
!4083 = !DILocation(line: 1056, column: 21, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4081, file: !288, line: 1056, column: 13)
!4085 = !DILocation(line: 1066, column: 3, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !288, line: 1065, column: 11)
!4087 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 1065, column: 6)
!4088 = !DILocation(line: 1067, column: 2, scope: !4086)
!4089 = !DILocation(line: 1068, column: 10, scope: !3883)
!4090 = !DILocation(line: 0, scope: !3940)
!4091 = !DILocation(line: 1074, column: 20, scope: !3943)
!4092 = !DILocation(line: 1074, column: 2, scope: !3940)
!4093 = !DILocation(line: 1110, column: 24, scope: !3883)
!4094 = !DILocation(line: 1053, column: 12, scope: !4080)
!4095 = !DILocation(line: 1054, column: 12, scope: !4080)
!4096 = !DILocation(line: 1108, column: 30, scope: !3883)
!4097 = !DILocation(line: 1108, column: 40, scope: !3883)
!4098 = !DILocation(line: 1108, column: 38, scope: !3883)
!4099 = !DILocation(line: 1109, column: 31, scope: !3883)
!4100 = !DILocation(line: 1109, column: 24, scope: !3883)
!4101 = !DILocation(line: 1110, column: 31, scope: !3883)
!4102 = !DILocation(line: 1114, column: 31, scope: !3883)
!4103 = !DILocation(line: 1114, column: 48, scope: !3883)
!4104 = !DILocation(line: 1115, column: 13, scope: !3883)
!4105 = !DILocation(line: 1118, column: 7, scope: !3883)
!4106 = !DILocation(line: 1119, column: 9, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 1119, column: 6)
!4108 = !DILocation(line: 1119, column: 6, scope: !3883)
!4109 = !DILocation(line: 1075, column: 29, scope: !3942)
!4110 = !DILocation(line: 1075, column: 21, scope: !3942)
!4111 = !DILocation(line: 0, scope: !3942)
!4112 = !DILocation(line: 1076, column: 29, scope: !3942)
!4113 = !DILocation(line: 1076, column: 21, scope: !3942)
!4114 = !DILocation(line: 1077, column: 38, scope: !3942)
!4115 = !DILocation(line: 1077, column: 21, scope: !3942)
!4116 = !DILocation(line: 1078, column: 16, scope: !3942)
!4117 = !DILocation(line: 1080, column: 19, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !3942, file: !288, line: 1080, column: 7)
!4119 = !DILocation(line: 1080, column: 34, scope: !4118)
!4120 = !DILocation(line: 1080, column: 22, scope: !4118)
!4121 = !DILocation(line: 1080, column: 7, scope: !3942)
!4122 = !DILocation(line: 1084, column: 7, scope: !3942)
!4123 = !DILocation(line: 1085, column: 8, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !288, line: 1084, column: 14)
!4125 = distinct !DILexicalBlock(scope: !3942, file: !288, line: 1084, column: 7)
!4126 = !DILocation(line: 1086, column: 5, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !288, line: 1086, column: 5)
!4128 = distinct !DILexicalBlock(scope: !4129, file: !288, line: 1086, column: 5)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !288, line: 1085, column: 49)
!4130 = distinct !DILexicalBlock(scope: !4124, file: !288, line: 1085, column: 8)
!4131 = !DILocation(line: 1086, column: 5, scope: !4128)
!4132 = !DILocation(line: 1086, column: 5, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4127, file: !288, line: 1086, column: 5)
!4134 = !DILocation(line: 1087, column: 25, scope: !4129)
!4135 = !DILocation(line: 1087, column: 5, scope: !4129)
!4136 = !DILocation(line: 1088, column: 4, scope: !4129)
!4137 = !DILocation(line: 1088, column: 15, scope: !4130)
!4138 = !DILocation(line: 1089, column: 5, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !288, line: 1089, column: 5)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !288, line: 1089, column: 5)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !288, line: 1088, column: 61)
!4142 = distinct !DILexicalBlock(scope: !4130, file: !288, line: 1088, column: 15)
!4143 = !DILocation(line: 1089, column: 5, scope: !4140)
!4144 = !DILocation(line: 1089, column: 5, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4139, file: !288, line: 1089, column: 5)
!4146 = !DILocation(line: 1090, column: 26, scope: !4141)
!4147 = !DILocation(line: 1090, column: 5, scope: !4141)
!4148 = !DILocation(line: 1091, column: 4, scope: !4141)
!4149 = !DILocation(line: 1095, column: 8, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4125, file: !288, line: 1094, column: 10)
!4151 = !DILocation(line: 1096, column: 5, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !288, line: 1096, column: 5)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !288, line: 1096, column: 5)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !288, line: 1095, column: 49)
!4155 = distinct !DILexicalBlock(scope: !4150, file: !288, line: 1095, column: 8)
!4156 = !DILocation(line: 1096, column: 5, scope: !4153)
!4157 = !DILocation(line: 1096, column: 5, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4152, file: !288, line: 1096, column: 5)
!4159 = !DILocation(line: 1097, column: 25, scope: !4154)
!4160 = !DILocation(line: 1097, column: 5, scope: !4154)
!4161 = !DILocation(line: 1098, column: 4, scope: !4154)
!4162 = !DILocation(line: 1099, column: 5, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !288, line: 1099, column: 5)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !288, line: 1099, column: 5)
!4165 = distinct !DILexicalBlock(scope: !4155, file: !288, line: 1098, column: 11)
!4166 = !DILocation(line: 1099, column: 5, scope: !4164)
!4167 = !DILocation(line: 1099, column: 5, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4163, file: !288, line: 1099, column: 5)
!4169 = !DILocation(line: 1100, column: 26, scope: !4165)
!4170 = !DILocation(line: 1100, column: 5, scope: !4165)
!4171 = !DILocation(line: 1100, column: 30, scope: !4165)
!4172 = !DILocation(line: 1101, column: 26, scope: !4165)
!4173 = !DILocation(line: 1101, column: 5, scope: !4165)
!4174 = !DILocation(line: 0, scope: !4125)
!4175 = !DILocation(line: 1074, column: 32, scope: !3943)
!4176 = distinct !{!4176, !4092, !4177}
!4177 = !DILocation(line: 1104, column: 2, scope: !3940)
!4178 = !DILocation(line: 1124, column: 13, scope: !3883)
!4179 = !DILocation(line: 1127, column: 10, scope: !3883)
!4180 = !DILocation(line: 1127, column: 7, scope: !3883)
!4181 = !DILocation(line: 1128, column: 9, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 1128, column: 6)
!4183 = !DILocation(line: 1128, column: 6, scope: !3883)
!4184 = !DILocation(line: 1134, column: 27, scope: !3883)
!4185 = !DILocation(line: 1136, column: 7, scope: !3883)
!4186 = !DILocation(line: 1137, column: 9, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 1137, column: 6)
!4188 = !DILocation(line: 1137, column: 6, scope: !3883)
!4189 = !DILocation(line: 1131, column: 10, scope: !3883)
!4190 = !DILocation(line: 1140, column: 10, scope: !3883)
!4191 = !DILocation(line: 0, scope: !3950)
!4192 = !DILocation(line: 1143, column: 20, scope: !3953)
!4193 = !DILocation(line: 1143, column: 2, scope: !3950)
!4194 = !DILocation(line: 1144, column: 3, scope: !3952)
!4195 = !DILocation(line: 1144, column: 17, scope: !3952)
!4196 = !DILocation(line: 0, scope: !3952)
!4197 = !DILocation(line: 1144, column: 11, scope: !3952)
!4198 = !DILocation(line: 1145, column: 38, scope: !3952)
!4199 = !DILocation(line: 1145, column: 21, scope: !3952)
!4200 = !DILocation(line: 1146, column: 22, scope: !3952)
!4201 = !DILocation(line: 1146, column: 29, scope: !3952)
!4202 = !DILocation(line: 1148, column: 8, scope: !3952)
!4203 = !DILocation(line: 1149, column: 10, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !3952, file: !288, line: 1149, column: 7)
!4205 = !DILocation(line: 1149, column: 7, scope: !3952)
!4206 = !DILocation(line: 1154, column: 8, scope: !3952)
!4207 = !DILocation(line: 1155, column: 10, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !3952, file: !288, line: 1155, column: 7)
!4209 = !DILocation(line: 1155, column: 7, scope: !3952)
!4210 = !DILocation(line: 1159, column: 2, scope: !3953)
!4211 = !DILocation(line: 1152, column: 11, scope: !3952)
!4212 = !DILocation(line: 1158, column: 11, scope: !3952)
!4213 = !DILocation(line: 1143, column: 33, scope: !3953)
!4214 = distinct !{!4214, !4193, !4215}
!4215 = !DILocation(line: 1159, column: 2, scope: !3950)
!4216 = !DILocation(line: 1162, column: 8, scope: !3883)
!4217 = !DILocation(line: 1164, column: 2, scope: !3883)
!4218 = !DILocation(line: 1165, column: 1, scope: !3883)
!4219 = distinct !DISubprogram(name: "get_package_len", scope: !288, file: !288, line: 196, type: !4220, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4222)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!234, !107}
!4222 = !{!4223, !4224, !4225, !4226, !4227, !4228, !4229}
!4223 = !DILocalVariable(name: "packaged", arg: 1, scope: !4219, file: !288, line: 196, type: !107)
!4224 = !DILocalVariable(name: "buf", scope: !4219, file: !288, line: 200, type: !286)
!4225 = !DILocalVariable(name: "start", scope: !4219, file: !288, line: 201, type: !286)
!4226 = !DILocalVariable(name: "args_size", scope: !4219, file: !288, line: 202, type: !32)
!4227 = !DILocalVariable(name: "s_nbr", scope: !4219, file: !288, line: 202, type: !32)
!4228 = !DILocalVariable(name: "ros_nbr", scope: !4219, file: !288, line: 202, type: !32)
!4229 = !DILocalVariable(name: "i", scope: !4230, file: !288, line: 215, type: !109)
!4230 = distinct !DILexicalBlock(scope: !4219, file: !288, line: 215, column: 2)
!4231 = !DILocation(line: 0, scope: !4219)
!4232 = !DILocation(line: 198, column: 2, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !288, line: 198, column: 2)
!4234 = distinct !DILexicalBlock(scope: !4219, file: !288, line: 198, column: 2)
!4235 = !DILocation(line: 198, column: 2, scope: !4234)
!4236 = !DILocation(line: 198, column: 2, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4233, file: !288, line: 198, column: 2)
!4238 = !DILocation(line: 204, column: 14, scope: !4219)
!4239 = !DILocation(line: 204, column: 21, scope: !4219)
!4240 = !DILocation(line: 205, column: 14, scope: !4219)
!4241 = !DILocation(line: 206, column: 14, scope: !4219)
!4242 = !DILocation(line: 209, column: 6, scope: !4219)
!4243 = !DILocation(line: 212, column: 6, scope: !4219)
!4244 = !DILocation(line: 0, scope: !4230)
!4245 = !DILocation(line: 215, column: 20, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4230, file: !288, line: 215, column: 2)
!4247 = !DILocation(line: 215, column: 2, scope: !4230)
!4248 = !DILocation(line: 220, column: 33, scope: !4219)
!4249 = !DILocation(line: 220, column: 2, scope: !4219)
!4250 = !DILocation(line: 216, column: 6, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4246, file: !288, line: 215, column: 34)
!4252 = !DILocation(line: 217, column: 10, scope: !4251)
!4253 = !DILocation(line: 217, column: 36, scope: !4251)
!4254 = !DILocation(line: 217, column: 7, scope: !4251)
!4255 = !DILocation(line: 215, column: 30, scope: !4246)
!4256 = distinct !{!4256, !4247, !4257}
!4257 = !DILocation(line: 218, column: 2, scope: !4230)
!4258 = distinct !DISubprogram(name: "append_string", scope: !288, file: !288, line: 223, type: !4259, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4261)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{!109, !3886, !107, !279, !194}
!4261 = !{!4262, !4263, !4264, !4265}
!4262 = !DILocalVariable(name: "cb", arg: 1, scope: !4258, file: !288, line: 223, type: !3886)
!4263 = !DILocalVariable(name: "ctx", arg: 2, scope: !4258, file: !288, line: 223, type: !107)
!4264 = !DILocalVariable(name: "str", arg: 3, scope: !4258, file: !288, line: 223, type: !279)
!4265 = !DILocalVariable(name: "strl", arg: 4, scope: !4258, file: !288, line: 223, type: !194)
!4266 = !DILocation(line: 0, scope: !4258)
!4267 = !DILocation(line: 225, column: 9, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4258, file: !288, line: 225, column: 6)
!4269 = !DILocation(line: 225, column: 6, scope: !4258)
!4270 = !DILocation(line: 226, column: 14, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4268, file: !288, line: 225, column: 18)
!4272 = !DILocation(line: 226, column: 12, scope: !4271)
!4273 = !DILocation(line: 226, column: 3, scope: !4271)
!4274 = !DILocation(line: 229, column: 14, scope: !4258)
!4275 = !DILocation(line: 229, column: 9, scope: !4258)
!4276 = !DILocation(line: 229, column: 27, scope: !4258)
!4277 = !DILocation(line: 229, column: 39, scope: !4258)
!4278 = !DILocation(line: 230, column: 17, scope: !4258)
!4279 = !DILocation(line: 230, column: 9, scope: !4258)
!4280 = !DILocation(line: 230, column: 2, scope: !4258)
!4281 = !DILocation(line: 231, column: 1, scope: !4258)
!4282 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !301, file: !301, line: 45, type: !303, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4283)
!4283 = !{!4284}
!4284 = !DILocalVariable(name: "c", arg: 1, scope: !4282, file: !301, line: 45, type: !109)
!4285 = !DILocation(line: 0, scope: !4282)
!4286 = !DILocation(line: 50, column: 2, scope: !4282)
!4287 = distinct !DISubprogram(name: "__printk_hook_install", scope: !301, file: !301, line: 63, type: !4288, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4290)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{null, !302}
!4290 = !{!4291}
!4291 = !DILocalVariable(name: "fn", arg: 1, scope: !4287, file: !301, line: 63, type: !302)
!4292 = !DILocation(line: 0, scope: !4287)
!4293 = !DILocation(line: 65, column: 12, scope: !4287)
!4294 = !DILocation(line: 66, column: 1, scope: !4287)
!4295 = distinct !DISubprogram(name: "__printk_get_hook", scope: !301, file: !301, line: 76, type: !4296, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2002)
!4296 = !DISubroutineType(types: !4297)
!4297 = !{!107}
!4298 = !DILocation(line: 78, column: 9, scope: !4295)
!4299 = !DILocation(line: 78, column: 2, scope: !4295)
!4300 = distinct !DISubprogram(name: "vprintk", scope: !301, file: !301, line: 113, type: !4301, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4309)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{null, !279, !4303}
!4303 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3372, line: 99, baseType: !4304)
!4304 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3372, line: 40, baseType: !4305)
!4305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !301, baseType: !4306)
!4306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4307)
!4307 = !{!4308}
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4306, file: !301, line: 79, baseType: !107, size: 32)
!4309 = !{!4310, !4311, !4312}
!4310 = !DILocalVariable(name: "fmt", arg: 1, scope: !4300, file: !301, line: 113, type: !279)
!4311 = !DILocalVariable(name: "ap", arg: 2, scope: !4300, file: !301, line: 113, type: !4303)
!4312 = !DILocalVariable(name: "ctx", scope: !4313, file: !301, line: 121, type: !4315)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !301, line: 120, column: 27)
!4314 = distinct !DILexicalBlock(scope: !4300, file: !301, line: 120, column: 6)
!4315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !301, line: 81, size: 32, elements: !4316)
!4316 = !{!4317, !4318}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4315, file: !301, line: 85, baseType: !32, size: 32)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4315, file: !301, line: 86, baseType: !4319, offset: 32)
!4319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, elements: !4320)
!4320 = !{!4321}
!4321 = !DISubrange(count: 0)
!4322 = !DILocation(line: 0, scope: !4300)
!4323 = !DILocation(line: 148, column: 3, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4314, file: !301, line: 138, column: 9)
!4325 = !DILocation(line: 155, column: 1, scope: !4300)
!4326 = distinct !DISubprogram(name: "char_out", scope: !301, file: !301, line: 107, type: !4327, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4329)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!109, !109, !107}
!4329 = !{!4330, !4331}
!4330 = !DILocalVariable(name: "c", arg: 1, scope: !4326, file: !301, line: 107, type: !109)
!4331 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4326, file: !301, line: 107, type: !107)
!4332 = !DILocation(line: 0, scope: !4326)
!4333 = !DILocation(line: 110, column: 9, scope: !4326)
!4334 = !DILocation(line: 110, column: 2, scope: !4326)
!4335 = distinct !DISubprogram(name: "cbvprintf", scope: !3404, file: !3404, line: 739, type: !4336, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4338)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!109, !3754, !107, !279, !4303}
!4338 = !{!4339, !4340, !4341, !4342}
!4339 = !DILocalVariable(name: "out", arg: 1, scope: !4335, file: !3404, line: 739, type: !3754)
!4340 = !DILocalVariable(name: "ctx", arg: 2, scope: !4335, file: !3404, line: 739, type: !107)
!4341 = !DILocalVariable(name: "format", arg: 3, scope: !4335, file: !3404, line: 739, type: !279)
!4342 = !DILocalVariable(name: "ap", arg: 4, scope: !4335, file: !3404, line: 739, type: !4303)
!4343 = !DILocation(line: 0, scope: !4335)
!4344 = !DILocation(line: 741, column: 9, scope: !4335)
!4345 = !DILocation(line: 741, column: 2, scope: !4335)
!4346 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !301, file: !301, line: 157, type: !4347, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4349)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{null, !285, !234}
!4349 = !{!4350, !4351, !4352}
!4350 = !DILocalVariable(name: "c", arg: 1, scope: !4346, file: !301, line: 157, type: !285)
!4351 = !DILocalVariable(name: "n", arg: 2, scope: !4346, file: !301, line: 157, type: !234)
!4352 = !DILocalVariable(name: "i", scope: !4346, file: !301, line: 159, type: !234)
!4353 = !DILocation(line: 0, scope: !4346)
!4354 = !DILocation(line: 164, column: 16, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !301, line: 164, column: 2)
!4356 = distinct !DILexicalBlock(scope: !4346, file: !301, line: 164, column: 2)
!4357 = !DILocation(line: 164, column: 2, scope: !4356)
!4358 = !DILocation(line: 165, column: 3, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4355, file: !301, line: 164, column: 26)
!4360 = !DILocation(line: 165, column: 13, scope: !4359)
!4361 = !DILocation(line: 164, column: 22, scope: !4355)
!4362 = distinct !{!4362, !4357, !4363}
!4363 = !DILocation(line: 166, column: 2, scope: !4356)
!4364 = !DILocation(line: 171, column: 1, scope: !4346)
!4365 = distinct !DISubprogram(name: "printk", scope: !301, file: !301, line: 203, type: !4366, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4368)
!4366 = !DISubroutineType(types: !4367)
!4367 = !{null, !279, null}
!4368 = !{!4369, !4370}
!4369 = !DILocalVariable(name: "fmt", arg: 1, scope: !4365, file: !301, line: 203, type: !279)
!4370 = !DILocalVariable(name: "ap", scope: !4365, file: !301, line: 205, type: !4303)
!4371 = !DILocation(line: 0, scope: !4365)
!4372 = !DILocation(line: 205, column: 2, scope: !4365)
!4373 = !DILocation(line: 205, column: 10, scope: !4365)
!4374 = !DILocation(line: 207, column: 2, scope: !4365)
!4375 = !DILocation(line: 209, column: 2, scope: !4365)
!4376 = !DILocation(line: 211, column: 2, scope: !4365)
!4377 = !DILocation(line: 212, column: 1, scope: !4365)
!4378 = distinct !DISubprogram(name: "snprintk", scope: !301, file: !301, line: 239, type: !4379, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4381)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{!109, !285, !234, !279, null}
!4381 = !{!4382, !4383, !4384, !4385, !4386}
!4382 = !DILocalVariable(name: "str", arg: 1, scope: !4378, file: !301, line: 239, type: !285)
!4383 = !DILocalVariable(name: "size", arg: 2, scope: !4378, file: !301, line: 239, type: !234)
!4384 = !DILocalVariable(name: "fmt", arg: 3, scope: !4378, file: !301, line: 239, type: !279)
!4385 = !DILocalVariable(name: "ap", scope: !4378, file: !301, line: 241, type: !4303)
!4386 = !DILocalVariable(name: "ret", scope: !4378, file: !301, line: 242, type: !109)
!4387 = !DILocation(line: 0, scope: !4378)
!4388 = !DILocation(line: 241, column: 2, scope: !4378)
!4389 = !DILocation(line: 241, column: 10, scope: !4378)
!4390 = !DILocation(line: 244, column: 2, scope: !4378)
!4391 = !DILocation(line: 245, column: 8, scope: !4378)
!4392 = !DILocation(line: 246, column: 2, scope: !4378)
!4393 = !DILocation(line: 249, column: 1, scope: !4378)
!4394 = !DILocation(line: 248, column: 2, scope: !4378)
!4395 = distinct !DISubprogram(name: "vsnprintk", scope: !301, file: !301, line: 251, type: !4396, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4398)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!109, !285, !234, !279, !4303}
!4398 = !{!4399, !4400, !4401, !4402, !4403}
!4399 = !DILocalVariable(name: "str", arg: 1, scope: !4395, file: !301, line: 251, type: !285)
!4400 = !DILocalVariable(name: "size", arg: 2, scope: !4395, file: !301, line: 251, type: !234)
!4401 = !DILocalVariable(name: "fmt", arg: 3, scope: !4395, file: !301, line: 251, type: !279)
!4402 = !DILocalVariable(name: "ap", arg: 4, scope: !4395, file: !301, line: 251, type: !4303)
!4403 = !DILocalVariable(name: "ctx", scope: !4395, file: !301, line: 253, type: !4404)
!4404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !301, line: 217, size: 96, elements: !4405)
!4405 = !{!4406, !4407, !4408}
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4404, file: !301, line: 218, baseType: !285, size: 32)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4404, file: !301, line: 219, baseType: !109, size: 32, offset: 32)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4404, file: !301, line: 220, baseType: !109, size: 32, offset: 64)
!4409 = !DILocation(line: 0, scope: !4395)
!4410 = !DILocation(line: 253, column: 2, scope: !4395)
!4411 = !DILocation(line: 253, column: 21, scope: !4395)
!4412 = !DILocation(line: 253, column: 27, scope: !4395)
!4413 = !DILocation(line: 255, column: 2, scope: !4395)
!4414 = !DILocation(line: 257, column: 10, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4395, file: !301, line: 257, column: 6)
!4416 = !DILocation(line: 257, column: 22, scope: !4415)
!4417 = !DILocation(line: 257, column: 16, scope: !4415)
!4418 = !DILocation(line: 257, column: 6, scope: !4395)
!4419 = !DILocation(line: 258, column: 3, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4415, file: !301, line: 257, column: 27)
!4421 = !DILocation(line: 258, column: 18, scope: !4420)
!4422 = !DILocation(line: 259, column: 2, scope: !4420)
!4423 = !DILocation(line: 262, column: 1, scope: !4395)
!4424 = !DILocation(line: 261, column: 2, scope: !4395)
!4425 = distinct !DISubprogram(name: "str_out", scope: !301, file: !301, line: 223, type: !4426, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4429)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!109, !109, !4428}
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4404, size: 32)
!4429 = !{!4430, !4431}
!4430 = !DILocalVariable(name: "c", arg: 1, scope: !4425, file: !301, line: 223, type: !109)
!4431 = !DILocalVariable(name: "ctx", arg: 2, scope: !4425, file: !301, line: 223, type: !4428)
!4432 = !DILocation(line: 0, scope: !4425)
!4433 = !DILocation(line: 225, column: 11, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4425, file: !301, line: 225, column: 6)
!4435 = !DILocation(line: 225, column: 15, scope: !4434)
!4436 = !DILocation(line: 0, scope: !4434)
!4437 = !DILocation(line: 225, column: 23, scope: !4434)
!4438 = !DILocation(line: 225, column: 45, scope: !4434)
!4439 = !DILocation(line: 225, column: 37, scope: !4434)
!4440 = !DILocation(line: 225, column: 6, scope: !4425)
!4441 = !DILocation(line: 226, column: 8, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4434, file: !301, line: 225, column: 50)
!4443 = !DILocation(line: 226, column: 13, scope: !4442)
!4444 = !DILocation(line: 227, column: 3, scope: !4442)
!4445 = !DILocation(line: 230, column: 29, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4425, file: !301, line: 230, column: 6)
!4447 = !DILocation(line: 230, column: 17, scope: !4446)
!4448 = !DILocation(line: 230, column: 6, scope: !4425)
!4449 = !DILocation(line: 231, column: 22, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4446, file: !301, line: 230, column: 34)
!4451 = !DILocation(line: 231, column: 3, scope: !4450)
!4452 = !DILocation(line: 231, column: 26, scope: !4450)
!4453 = !DILocation(line: 232, column: 2, scope: !4450)
!4454 = !DILocation(line: 233, column: 28, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4446, file: !301, line: 232, column: 9)
!4456 = !DILocation(line: 233, column: 22, scope: !4455)
!4457 = !DILocation(line: 233, column: 3, scope: !4455)
!4458 = !DILocation(line: 233, column: 26, scope: !4455)
!4459 = !DILocation(line: 237, column: 1, scope: !4425)
!4460 = distinct !DISubprogram(name: "z_thread_entry", scope: !4461, file: !4461, line: 30, type: !4462, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !4464)
!4461 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4462 = !DISubroutineType(types: !4463)
!4463 = !{null, !3337, !107, !107, !107}
!4464 = !{!4465, !4466, !4467, !4468}
!4465 = !DILocalVariable(name: "entry", arg: 1, scope: !4460, file: !4461, line: 30, type: !3337)
!4466 = !DILocalVariable(name: "p1", arg: 2, scope: !4460, file: !4461, line: 31, type: !107)
!4467 = !DILocalVariable(name: "p2", arg: 3, scope: !4460, file: !4461, line: 31, type: !107)
!4468 = !DILocalVariable(name: "p3", arg: 4, scope: !4460, file: !4461, line: 31, type: !107)
!4469 = !DILocation(line: 0, scope: !4460)
!4470 = !DILocation(line: 36, column: 2, scope: !4460)
!4471 = !DILocation(line: 38, column: 17, scope: !4460)
!4472 = !DILocation(line: 38, column: 2, scope: !4460)
!4473 = !DILocation(line: 45, column: 2, scope: !4460)
!4474 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !4475, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2002)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{!4477}
!4477 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !4478)
!4478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4479, size: 32)
!4479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !4480)
!4480 = !{!4481, !4539, !4551, !4552, !4553, !4554, !4555, !4561, !4576}
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4479, file: !158, line: 247, baseType: !4482, size: 384)
!4482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !4483)
!4483 = !{!4484, !4508, !4515, !4516, !4517, !4526, !4527, !4528}
!4484 = !DIDerivedType(tag: DW_TAG_member, scope: !4482, file: !158, line: 60, baseType: !4485, size: 64)
!4485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4482, file: !158, line: 60, size: 64, elements: !4486)
!4486 = !{!4487, !4502}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4485, file: !158, line: 61, baseType: !4488, size: 64)
!4488 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !4489)
!4489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !4490)
!4490 = !{!4491, !4497}
!4491 = !DIDerivedType(tag: DW_TAG_member, scope: !4489, file: !127, line: 38, baseType: !4492, size: 32)
!4492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4489, file: !127, line: 38, size: 32, elements: !4493)
!4493 = !{!4494, !4496}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4492, file: !127, line: 39, baseType: !4495, size: 32)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4492, file: !127, line: 40, baseType: !4495, size: 32)
!4497 = !DIDerivedType(tag: DW_TAG_member, scope: !4489, file: !127, line: 42, baseType: !4498, size: 32, offset: 32)
!4498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4489, file: !127, line: 42, size: 32, elements: !4499)
!4499 = !{!4500, !4501}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4498, file: !127, line: 43, baseType: !4495, size: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4498, file: !127, line: 44, baseType: !4495, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4485, file: !158, line: 62, baseType: !4503, size: 64)
!4503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !4504)
!4504 = !{!4505}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4503, file: !170, line: 50, baseType: !4506, size: 64)
!4506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4507, size: 64, elements: !175)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 32)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4482, file: !158, line: 68, baseType: !4509, size: 32, offset: 64)
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4510, size: 32)
!4510 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !4511)
!4511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !4512)
!4512 = !{!4513}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4511, file: !122, line: 232, baseType: !4514, size: 64)
!4514 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !4489)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4482, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4482, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!4517 = !DIDerivedType(tag: DW_TAG_member, scope: !4482, file: !158, line: 90, baseType: !4518, size: 16, offset: 112)
!4518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4482, file: !158, line: 90, size: 16, elements: !4519)
!4519 = !{!4520, !4525}
!4520 = !DIDerivedType(tag: DW_TAG_member, scope: !4518, file: !158, line: 91, baseType: !4521, size: 16)
!4521 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4518, file: !158, line: 91, size: 16, elements: !4522)
!4522 = !{!4523, !4524}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4521, file: !158, line: 96, baseType: !190, size: 8)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4521, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4518, file: !158, line: 100, baseType: !194, size: 16)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4482, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4482, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4482, file: !158, line: 131, baseType: !4529, size: 192, offset: 192)
!4529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !4530)
!4530 = !{!4531, !4532, !4538}
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4529, file: !122, line: 245, baseType: !4488, size: 64)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4529, file: !122, line: 246, baseType: !4533, size: 32, offset: 64)
!4533 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !4534)
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4535, size: 32)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{null, !4537}
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 32)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4529, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4479, file: !158, line: 250, baseType: !4540, size: 288, offset: 384)
!4540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !4541)
!4541 = !{!4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550}
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4540, file: !211, line: 26, baseType: !110, size: 32)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4540, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4540, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4540, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4540, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4540, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4540, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4540, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4540, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4479, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4479, file: !158, line: 256, baseType: !4510, size: 64, offset: 704)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4479, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4479, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4479, file: !158, line: 300, baseType: !4556, size: 96, offset: 1056)
!4556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !4557)
!4557 = !{!4558, !4559, !4560}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4556, file: !158, line: 153, baseType: !22, size: 32)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4556, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4556, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4479, file: !158, line: 325, baseType: !4562, size: 32, offset: 1152)
!4562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4563, size: 32)
!4563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !4564)
!4564 = !{!4565, !4571, !4572}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4563, file: !118, line: 5074, baseType: !4566, size: 96)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !4567)
!4567 = !{!4568, !4569, !4570}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4566, file: !243, line: 57, baseType: !246, size: 32)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4566, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4566, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4563, file: !118, line: 5075, baseType: !4510, size: 64, offset: 96)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4563, file: !118, line: 5076, baseType: !4573, size: 32, offset: 160)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !4574)
!4574 = !{!4575}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4573, file: !253, line: 52, baseType: !22, size: 32)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4479, file: !158, line: 343, baseType: !4577, size: 64, offset: 1184)
!4577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !4578)
!4578 = !{!4579, !4580}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4577, file: !211, line: 63, baseType: !110, size: 32)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4577, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!4581 = !DILocation(line: 535, column: 9, scope: !4474)
!4582 = !DILocation(line: 535, column: 2, scope: !4474)
!4583 = distinct !DISubprogram(name: "k_thread_abort", scope: !3216, file: !3216, line: 188, type: !4584, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !4586)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{null, !4477}
!4586 = !{!4587}
!4587 = !DILocalVariable(name: "thread", arg: 1, scope: !4583, file: !3216, line: 188, type: !4477)
!4588 = !DILocation(line: 0, scope: !4583)
!4589 = !DILocation(line: 197, column: 2, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4583, file: !3216, line: 197, column: 2)
!4591 = !{i64 2154069540}
!4592 = !DILocation(line: 198, column: 2, scope: !4583)
!4593 = !DILocation(line: 199, column: 1, scope: !4583)
!4594 = distinct !DISubprogram(name: "z_current_get", scope: !3216, file: !3216, line: 173, type: !4475, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2002)
!4595 = !DILocation(line: 180, column: 2, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4594, file: !3216, line: 180, column: 2)
!4597 = !{i64 2154069472}
!4598 = !DILocation(line: 181, column: 9, scope: !4594)
!4599 = !DILocation(line: 181, column: 2, scope: !4594)
!4600 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2493, file: !2493, line: 1338, type: !4601, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4609)
!4601 = !DISubroutineType(types: !4602)
!4602 = !{!109, !3754, !107, !279, !4603, !110}
!4603 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3372, line: 99, baseType: !4604)
!4604 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3372, line: 40, baseType: !4605)
!4605 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2493, baseType: !4606)
!4606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4607)
!4607 = !{!4608}
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4606, file: !2493, baseType: !107, size: 32)
!4609 = !{!4610, !4611, !4612, !4613, !4614, !4615, !4619, !4620, !4621, !4623, !4628, !4671, !4674, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4686, !4687, !4688, !4692, !4695, !4697, !4700, !4701, !4702, !4707, !4713, !4716, !4720, !4726, !4730, !4733, !4735, !4738}
!4610 = !DILocalVariable(name: "out", arg: 1, scope: !4600, file: !2493, line: 1338, type: !3754)
!4611 = !DILocalVariable(name: "ctx", arg: 2, scope: !4600, file: !2493, line: 1338, type: !107)
!4612 = !DILocalVariable(name: "fp", arg: 3, scope: !4600, file: !2493, line: 1338, type: !279)
!4613 = !DILocalVariable(name: "ap", arg: 4, scope: !4600, file: !2493, line: 1339, type: !4603)
!4614 = !DILocalVariable(name: "flags", arg: 5, scope: !4600, file: !2493, line: 1339, type: !110)
!4615 = !DILocalVariable(name: "buf", scope: !4600, file: !2493, line: 1341, type: !4616)
!4616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 176, elements: !4617)
!4617 = !{!4618}
!4618 = !DISubrange(count: 22)
!4619 = !DILocalVariable(name: "count", scope: !4600, file: !2493, line: 1342, type: !234)
!4620 = !DILocalVariable(name: "sint", scope: !4600, file: !2493, line: 1343, type: !2512)
!4621 = !DILocalVariable(name: "tagged_ap", scope: !4600, file: !2493, line: 1345, type: !4622)
!4622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!4623 = !DILocalVariable(name: "rc", scope: !4624, file: !2493, line: 1377, type: !109)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !2493, line: 1377, column: 4)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !2493, line: 1376, column: 19)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1376, column: 7)
!4627 = distinct !DILexicalBlock(scope: !4600, file: !2493, line: 1375, column: 19)
!4628 = !DILocalVariable(name: "state", scope: !4627, file: !2493, line: 1395, type: !4629)
!4629 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4600, file: !2493, line: 1392, size: 192, elements: !4630)
!4630 = !{!4631, !4639}
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4629, file: !2493, line: 1393, baseType: !4632, size: 64)
!4632 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2493, line: 166, size: 64, elements: !4633)
!4633 = !{!4634, !4635, !4636, !4637, !4638}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4632, file: !2493, line: 168, baseType: !2512, size: 64)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4632, file: !2493, line: 171, baseType: !2515, size: 64)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4632, file: !2493, line: 174, baseType: !277, size: 64)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4632, file: !2493, line: 177, baseType: !275, size: 64)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4632, file: !2493, line: 180, baseType: !107, size: 32)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4629, file: !2493, line: 1394, baseType: !4640, size: 96, offset: 64)
!4640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2493, line: 189, size: 96, elements: !4641)
!4641 = !{!4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4666}
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4640, file: !2493, line: 191, baseType: !347, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4640, file: !2493, line: 194, baseType: !347, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4640, file: !2493, line: 197, baseType: !347, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4640, file: !2493, line: 200, baseType: !347, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4640, file: !2493, line: 203, baseType: !347, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4640, file: !2493, line: 206, baseType: !347, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4640, file: !2493, line: 209, baseType: !347, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4640, file: !2493, line: 212, baseType: !347, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4640, file: !2493, line: 219, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4640, file: !2493, line: 222, baseType: !347, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4640, file: !2493, line: 229, baseType: !347, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4640, file: !2493, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4640, file: !2493, line: 238, baseType: !347, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4640, file: !2493, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4640, file: !2493, line: 244, baseType: !347, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4640, file: !2493, line: 247, baseType: !347, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4640, file: !2493, line: 252, baseType: !347, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4640, file: !2493, line: 257, baseType: !347, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4640, file: !2493, line: 260, baseType: !181, size: 8, offset: 24)
!4661 = !DIDerivedType(tag: DW_TAG_member, scope: !4640, file: !2493, line: 262, baseType: !4662, size: 32, offset: 32)
!4662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4640, file: !2493, line: 262, size: 32, elements: !4663)
!4663 = !{!4664, !4665}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4662, file: !2493, line: 267, baseType: !109, size: 32)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4662, file: !2493, line: 289, baseType: !109, size: 32)
!4666 = !DIDerivedType(tag: DW_TAG_member, scope: !4640, file: !2493, line: 292, baseType: !4667, size: 32, offset: 64)
!4667 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4640, file: !2493, line: 292, size: 32, elements: !4668)
!4668 = !{!4669, !4670}
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4667, file: !2493, line: 297, baseType: !109, size: 32)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4667, file: !2493, line: 306, baseType: !109, size: 32)
!4671 = !DILocalVariable(name: "conv", scope: !4627, file: !2493, line: 1400, type: !4672)
!4672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4673)
!4673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4640, size: 32)
!4674 = !DILocalVariable(name: "value", scope: !4627, file: !2493, line: 1401, type: !4675)
!4675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4676)
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4632, size: 32)
!4677 = !DILocalVariable(name: "sp", scope: !4627, file: !2493, line: 1402, type: !279)
!4678 = !DILocalVariable(name: "width", scope: !4627, file: !2493, line: 1403, type: !109)
!4679 = !DILocalVariable(name: "precision", scope: !4627, file: !2493, line: 1404, type: !109)
!4680 = !DILocalVariable(name: "bps", scope: !4627, file: !2493, line: 1405, type: !279)
!4681 = !DILocalVariable(name: "bpe", scope: !4627, file: !2493, line: 1406, type: !279)
!4682 = !DILocalVariable(name: "sign", scope: !4627, file: !2493, line: 1407, type: !150)
!4683 = !DILocalVariable(name: "arg", scope: !4684, file: !2493, line: 1432, type: !109)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !2493, line: 1431, column: 24)
!4685 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1431, column: 7)
!4686 = !DILocalVariable(name: "specifier_cat", scope: !4627, file: !2493, line: 1468, type: !2492)
!4687 = !DILocalVariable(name: "length_mod", scope: !4627, file: !2493, line: 1470, type: !2500)
!4688 = !DILocalVariable(name: "rc", scope: !4689, file: !2493, line: 1575, type: !109)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !2493, line: 1575, column: 4)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !2493, line: 1574, column: 43)
!4691 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1574, column: 7)
!4692 = !DILocalVariable(name: "rc", scope: !4693, file: !2493, line: 1584, type: !109)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !2493, line: 1584, column: 4)
!4694 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1582, column: 28)
!4695 = !DILocalVariable(name: "len", scope: !4696, file: !2493, line: 1589, type: !234)
!4696 = distinct !DILexicalBlock(scope: !4694, file: !2493, line: 1586, column: 13)
!4697 = !DILocalVariable(name: "len", scope: !4698, file: !2493, line: 1641, type: !234)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !2493, line: 1640, column: 24)
!4699 = distinct !DILexicalBlock(scope: !4694, file: !2493, line: 1640, column: 8)
!4700 = !DILocalVariable(name: "nj_len", scope: !4627, file: !2493, line: 1722, type: !234)
!4701 = !DILocalVariable(name: "pad_len", scope: !4627, file: !2493, line: 1723, type: !109)
!4702 = !DILocalVariable(name: "pad", scope: !4703, file: !2493, line: 1751, type: !150)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !2493, line: 1750, column: 26)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !2493, line: 1750, column: 8)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !2493, line: 1747, column: 18)
!4706 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1747, column: 7)
!4707 = !DILocalVariable(name: "rc", scope: !4708, file: !2493, line: 1758, type: !109)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2493, line: 1758, column: 7)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !2493, line: 1757, column: 21)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !2493, line: 1757, column: 10)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2493, line: 1756, column: 26)
!4712 = distinct !DILexicalBlock(scope: !4703, file: !2493, line: 1756, column: 9)
!4713 = !DILocalVariable(name: "rc", scope: !4714, file: !2493, line: 1765, type: !109)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2493, line: 1765, column: 6)
!4715 = distinct !DILexicalBlock(scope: !4703, file: !2493, line: 1764, column: 25)
!4716 = !DILocalVariable(name: "rc", scope: !4717, file: !2493, line: 1774, type: !109)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !2493, line: 1774, column: 4)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !2493, line: 1773, column: 18)
!4719 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1773, column: 7)
!4720 = !DILocalVariable(name: "rc", scope: !4721, file: !2493, line: 1819, type: !109)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !2493, line: 1819, column: 5)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !2493, line: 1818, column: 44)
!4723 = distinct !DILexicalBlock(scope: !4724, file: !2493, line: 1818, column: 8)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !2493, line: 1817, column: 10)
!4725 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1777, column: 7)
!4726 = !DILocalVariable(name: "rc", scope: !4727, file: !2493, line: 1823, type: !109)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !2493, line: 1823, column: 5)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !2493, line: 1822, column: 26)
!4729 = distinct !DILexicalBlock(scope: !4724, file: !2493, line: 1822, column: 8)
!4730 = !DILocalVariable(name: "rc", scope: !4731, file: !2493, line: 1828, type: !109)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !2493, line: 1828, column: 5)
!4732 = distinct !DILexicalBlock(scope: !4724, file: !2493, line: 1827, column: 26)
!4733 = !DILocalVariable(name: "rc", scope: !4734, file: !2493, line: 1831, type: !109)
!4734 = distinct !DILexicalBlock(scope: !4724, file: !2493, line: 1831, column: 4)
!4735 = !DILocalVariable(name: "rc", scope: !4736, file: !2493, line: 1836, type: !109)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !2493, line: 1836, column: 4)
!4737 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1835, column: 21)
!4738 = !DILabel(scope: !4694, name: "prec_int_pad0", file: !2493, line: 1634)
!4739 = !DILocation(line: 0, scope: !4600)
!4740 = !DILocation(line: 1341, column: 2, scope: !4600)
!4741 = !DILocation(line: 1341, column: 7, scope: !4600)
!4742 = !DILocation(line: 1375, column: 2, scope: !4600)
!4743 = !DILocation(line: 1342, column: 9, scope: !4600)
!4744 = !DILocation(line: 1375, column: 9, scope: !4600)
!4745 = !DILocation(line: 1377, column: 4, scope: !4624)
!4746 = !DILocation(line: 0, scope: !4624)
!4747 = !DILocation(line: 1377, column: 4, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4624, file: !2493, line: 1377, column: 4)
!4749 = distinct !{!4749, !4742, !4750}
!4750 = !DILocation(line: 1839, column: 2, scope: !4600)
!4751 = !DILocation(line: 1392, column: 3, scope: !4627)
!4752 = !DILocation(line: 1395, column: 5, scope: !4627)
!4753 = !DILocation(line: 0, scope: !4627)
!4754 = !DILocation(line: 1409, column: 8, scope: !4627)
!4755 = !DILocation(line: 1414, column: 13, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1414, column: 7)
!4757 = !DILocation(line: 1414, column: 7, scope: !4627)
!4758 = !DILocation(line: 1415, column: 12, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4756, file: !2493, line: 1414, column: 25)
!4760 = !DILocation(line: 1417, column: 14, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4759, file: !2493, line: 1417, column: 8)
!4762 = !DILocation(line: 1417, column: 8, scope: !4759)
!4763 = !DILocation(line: 1418, column: 21, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4761, file: !2493, line: 1417, column: 19)
!4765 = !DILocation(line: 1419, column: 13, scope: !4764)
!4766 = !DILocation(line: 1420, column: 4, scope: !4764)
!4767 = !DILocation(line: 1421, column: 20, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4756, file: !2493, line: 1421, column: 14)
!4769 = !DILocation(line: 1421, column: 14, scope: !4756)
!4770 = !DILocation(line: 1431, column: 13, scope: !4685)
!4771 = !DILocation(line: 1431, column: 7, scope: !4627)
!4772 = !DILocation(line: 1432, column: 14, scope: !4684)
!4773 = !DILocation(line: 0, scope: !4684)
!4774 = !DILocation(line: 1434, column: 12, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4684, file: !2493, line: 1434, column: 8)
!4776 = !DILocation(line: 1434, column: 8, scope: !4684)
!4777 = !DILocation(line: 1435, column: 24, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4775, file: !2493, line: 1434, column: 17)
!4779 = !DILocation(line: 1436, column: 4, scope: !4778)
!4780 = !DILocation(line: 1439, column: 20, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4685, file: !2493, line: 1439, column: 14)
!4782 = !DILocation(line: 1439, column: 14, scope: !4685)
!4783 = !DILocation(line: 1469, column: 37, scope: !4627)
!4784 = !DILocation(line: 1448, column: 20, scope: !4627)
!4785 = !DILocation(line: 1449, column: 22, scope: !4627)
!4786 = !DILocation(line: 1471, column: 34, scope: !4627)
!4787 = !DILocation(line: 1478, column: 7, scope: !4627)
!4788 = !DILocation(line: 1479, column: 4, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4790, file: !2493, line: 1478, column: 40)
!4790 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1478, column: 7)
!4791 = !DILocation(line: 1484, column: 19, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4789, file: !2493, line: 1479, column: 24)
!4793 = !DILocation(line: 1484, column: 17, scope: !4792)
!4794 = !DILocation(line: 1485, column: 5, scope: !4792)
!4795 = !DILocation(line: 1492, column: 20, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !2493, line: 1491, column: 12)
!4797 = distinct !DILexicalBlock(scope: !4792, file: !2493, line: 1487, column: 9)
!4798 = !DILocation(line: 1492, column: 18, scope: !4796)
!4799 = !DILocation(line: 1494, column: 5, scope: !4792)
!4800 = !DILocation(line: 1497, column: 23, scope: !4792)
!4801 = !DILocation(line: 1496, column: 17, scope: !4792)
!4802 = !DILocation(line: 1498, column: 5, scope: !4792)
!4803 = !DILocation(line: 1501, column: 23, scope: !4792)
!4804 = !DILocation(line: 1500, column: 17, scope: !4792)
!4805 = !DILocation(line: 1502, column: 5, scope: !4792)
!4806 = !DILocation(line: 1513, column: 23, scope: !4792)
!4807 = !DILocation(line: 1513, column: 6, scope: !4792)
!4808 = !DILocation(line: 1512, column: 17, scope: !4792)
!4809 = !DILocation(line: 1514, column: 5, scope: !4792)
!4810 = !DILocation(line: 0, scope: !4792)
!4811 = !DILocation(line: 1516, column: 8, scope: !4789)
!4812 = !DILocation(line: 1517, column: 19, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !2493, line: 1516, column: 33)
!4814 = distinct !DILexicalBlock(scope: !4789, file: !2493, line: 1516, column: 8)
!4815 = !DILocation(line: 1517, column: 17, scope: !4813)
!4816 = !DILocation(line: 1518, column: 4, scope: !4813)
!4817 = !DILocation(line: 1519, column: 19, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4819, file: !2493, line: 1518, column: 39)
!4819 = distinct !DILexicalBlock(scope: !4814, file: !2493, line: 1518, column: 15)
!4820 = !DILocation(line: 1519, column: 17, scope: !4818)
!4821 = !DILocation(line: 1520, column: 4, scope: !4818)
!4822 = !DILocation(line: 1522, column: 4, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4824, file: !2493, line: 1521, column: 47)
!4824 = distinct !DILexicalBlock(scope: !4790, file: !2493, line: 1521, column: 14)
!4825 = !DILocation(line: 1527, column: 19, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4823, file: !2493, line: 1522, column: 24)
!4827 = !DILocation(line: 1527, column: 17, scope: !4826)
!4828 = !DILocation(line: 1528, column: 5, scope: !4826)
!4829 = !DILocation(line: 0, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4826, file: !2493, line: 1530, column: 9)
!4831 = !DILocation(line: 1540, column: 23, scope: !4826)
!4832 = !DILocation(line: 1539, column: 17, scope: !4826)
!4833 = !DILocation(line: 1542, column: 5, scope: !4826)
!4834 = !DILocation(line: 1545, column: 23, scope: !4826)
!4835 = !DILocation(line: 1544, column: 17, scope: !4826)
!4836 = !DILocation(line: 1547, column: 5, scope: !4826)
!4837 = !DILocation(line: 1551, column: 23, scope: !4826)
!4838 = !DILocation(line: 1551, column: 6, scope: !4826)
!4839 = !DILocation(line: 1550, column: 17, scope: !4826)
!4840 = !DILocation(line: 1552, column: 5, scope: !4826)
!4841 = !DILocation(line: 0, scope: !4826)
!4842 = !DILocation(line: 1554, column: 8, scope: !4823)
!4843 = !DILocation(line: 1555, column: 19, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !2493, line: 1554, column: 33)
!4845 = distinct !DILexicalBlock(scope: !4823, file: !2493, line: 1554, column: 8)
!4846 = !DILocation(line: 1555, column: 17, scope: !4844)
!4847 = !DILocation(line: 1556, column: 4, scope: !4844)
!4848 = !DILocation(line: 1557, column: 19, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !2493, line: 1556, column: 39)
!4850 = distinct !DILexicalBlock(scope: !4845, file: !2493, line: 1556, column: 15)
!4851 = !DILocation(line: 1557, column: 17, scope: !4849)
!4852 = !DILocation(line: 1558, column: 4, scope: !4849)
!4853 = !DILocation(line: 0, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !2493, line: 1560, column: 8)
!4855 = distinct !DILexicalBlock(scope: !4856, file: !2493, line: 1559, column: 45)
!4856 = distinct !DILexicalBlock(scope: !4824, file: !2493, line: 1559, column: 14)
!4857 = !DILocation(line: 1566, column: 17, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !2493, line: 1565, column: 46)
!4859 = distinct !DILexicalBlock(scope: !4856, file: !2493, line: 1565, column: 14)
!4860 = !DILocation(line: 1566, column: 15, scope: !4858)
!4861 = !DILocation(line: 1567, column: 3, scope: !4858)
!4862 = !DILocation(line: 1574, column: 21, scope: !4691)
!4863 = !DILocation(line: 1575, column: 4, scope: !4689)
!4864 = !DILocation(line: 0, scope: !4689)
!4865 = !DILocation(line: 1575, column: 4, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4689, file: !2493, line: 1575, column: 4)
!4867 = !DILocation(line: 1582, column: 17, scope: !4627)
!4868 = !DILocation(line: 1582, column: 3, scope: !4627)
!4869 = !DILocation(line: 1584, column: 4, scope: !4693)
!4870 = !DILocation(line: 0, scope: !4693)
!4871 = !DILocation(line: 1584, column: 4, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4693, file: !2493, line: 1584, column: 4)
!4873 = !DILocation(line: 1587, column: 31, scope: !4696)
!4874 = !DILocation(line: 1591, column: 18, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4696, file: !2493, line: 1591, column: 8)
!4876 = !DILocation(line: 1591, column: 8, scope: !4696)
!4877 = !DILocation(line: 1592, column: 11, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4875, file: !2493, line: 1591, column: 24)
!4879 = !DILocation(line: 0, scope: !4696)
!4880 = !DILocation(line: 1593, column: 4, scope: !4878)
!4881 = !DILocation(line: 1594, column: 11, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4875, file: !2493, line: 1593, column: 11)
!4883 = !DILocation(line: 1604, column: 51, scope: !4694)
!4884 = !DILocation(line: 1604, column: 13, scope: !4694)
!4885 = !DILocation(line: 1604, column: 11, scope: !4694)
!4886 = !DILocation(line: 1606, column: 4, scope: !4694)
!4887 = !DILocation(line: 1609, column: 14, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4694, file: !2493, line: 1609, column: 8)
!4889 = !DILocation(line: 1609, column: 8, scope: !4694)
!4890 = !DILocation(line: 1619, column: 18, scope: !4694)
!4891 = !DILocation(line: 1620, column: 13, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4694, file: !2493, line: 1620, column: 8)
!4893 = !DILocation(line: 1620, column: 8, scope: !4694)
!4894 = !DILocation(line: 1622, column: 36, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4892, file: !2493, line: 1620, column: 18)
!4896 = !DILocation(line: 1622, column: 17, scope: !4895)
!4897 = !DILocation(line: 1623, column: 4, scope: !4895)
!4898 = !DILocation(line: 1632, column: 29, scope: !4694)
!4899 = !DILocation(line: 1632, column: 10, scope: !4694)
!4900 = !DILocation(line: 1632, column: 4, scope: !4694)
!4901 = !DILocation(line: 1407, column: 8, scope: !4627)
!4902 = !DILocation(line: 0, scope: !4694)
!4903 = !DILocation(line: 1634, column: 3, scope: !4694)
!4904 = !DILocation(line: 1640, column: 18, scope: !4699)
!4905 = !DILocation(line: 1640, column: 8, scope: !4694)
!4906 = !DILocation(line: 1729, column: 13, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1729, column: 7)
!4908 = !DILocation(line: 1641, column: 22, scope: !4698)
!4909 = !DILocation(line: 0, scope: !4698)
!4910 = !DILocation(line: 1646, column: 21, scope: !4698)
!4911 = !DILocation(line: 1649, column: 13, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4698, file: !2493, line: 1649, column: 9)
!4913 = !DILocation(line: 1649, column: 9, scope: !4698)
!4914 = !DILocation(line: 1650, column: 35, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4912, file: !2493, line: 1649, column: 34)
!4916 = !DILocation(line: 1650, column: 23, scope: !4915)
!4917 = !DILocation(line: 1651, column: 5, scope: !4915)
!4918 = !DILocation(line: 1660, column: 15, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4694, file: !2493, line: 1660, column: 8)
!4920 = !DILocation(line: 1660, column: 19, scope: !4919)
!4921 = !DILocation(line: 1660, column: 8, scope: !4694)
!4922 = !DILocation(line: 1661, column: 23, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4919, file: !2493, line: 1660, column: 28)
!4924 = !DILocation(line: 1661, column: 11, scope: !4923)
!4925 = !DILocation(line: 1665, column: 22, scope: !4923)
!4926 = !DILocation(line: 1666, column: 21, scope: !4923)
!4927 = !DILocation(line: 1668, column: 5, scope: !4923)
!4928 = !DILocation(line: 1677, column: 30, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4930, file: !2493, line: 1676, column: 49)
!4930 = distinct !DILexicalBlock(scope: !4694, file: !2493, line: 1676, column: 8)
!4931 = !DILocation(line: 1677, column: 5, scope: !4929)
!4932 = !DILocation(line: 1680, column: 4, scope: !4694)
!4933 = !DILocation(line: 0, scope: !4875)
!4934 = !DILocation(line: 1597, column: 14, scope: !4696)
!4935 = !DILocation(line: 1699, column: 11, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1699, column: 7)
!4937 = !DILocation(line: 1699, column: 7, scope: !4627)
!4938 = !DILocation(line: 1725, column: 7, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1725, column: 7)
!4940 = !DILocation(line: 1725, column: 12, scope: !4939)
!4941 = !DILocation(line: 1747, column: 13, scope: !4706)
!4942 = !DILocation(line: 1747, column: 7, scope: !4627)
!4943 = !DILocation(line: 1722, column: 24, scope: !4627)
!4944 = !DILocation(line: 1725, column: 7, scope: !4627)
!4945 = !DILocation(line: 1729, column: 7, scope: !4627)
!4946 = !DILocation(line: 1736, column: 13, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4627, file: !2493, line: 1736, column: 7)
!4948 = !DILocation(line: 1735, column: 19, scope: !4627)
!4949 = !DILocation(line: 1736, column: 7, scope: !4627)
!4950 = !DILocation(line: 1748, column: 10, scope: !4705)
!4951 = !DILocation(line: 1750, column: 15, scope: !4704)
!4952 = !DILocation(line: 1750, column: 8, scope: !4705)
!4953 = !DILocation(line: 0, scope: !4703)
!4954 = !DILocation(line: 1756, column: 15, scope: !4712)
!4955 = !DILocation(line: 1756, column: 9, scope: !4703)
!4956 = !DILocation(line: 1758, column: 7, scope: !4708)
!4957 = !DILocation(line: 0, scope: !4708)
!4958 = !DILocation(line: 1758, column: 7, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4708, file: !2493, line: 1758, column: 7)
!4960 = !DILocation(line: 1764, column: 5, scope: !4703)
!4961 = !DILocation(line: 0, scope: !4705)
!4962 = !DILocation(line: 1764, column: 20, scope: !4703)
!4963 = !DILocation(line: 1764, column: 17, scope: !4703)
!4964 = !DILocation(line: 1765, column: 6, scope: !4714)
!4965 = !DILocation(line: 0, scope: !4714)
!4966 = !DILocation(line: 1765, column: 6, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4714, file: !2493, line: 1765, column: 6)
!4968 = distinct !{!4968, !4960, !4969}
!4969 = !DILocation(line: 1766, column: 5, scope: !4703)
!4970 = !DILocation(line: 1773, column: 12, scope: !4719)
!4971 = !DILocation(line: 1773, column: 7, scope: !4627)
!4972 = !DILocation(line: 1773, column: 7, scope: !4719)
!4973 = !DILocation(line: 1774, column: 4, scope: !4717)
!4974 = !DILocation(line: 0, scope: !4717)
!4975 = !DILocation(line: 1774, column: 4, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4717, file: !2493, line: 1774, column: 4)
!4977 = !DILocation(line: 1818, column: 8, scope: !4723)
!4978 = !DILocation(line: 1818, column: 27, scope: !4723)
!4979 = !DILocation(line: 1818, column: 25, scope: !4723)
!4980 = !DILocation(line: 1818, column: 8, scope: !4724)
!4981 = !DILocation(line: 1819, column: 5, scope: !4721)
!4982 = !DILocation(line: 0, scope: !4721)
!4983 = !DILocation(line: 1819, column: 5, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4721, file: !2493, line: 1819, column: 5)
!4985 = !DILocation(line: 1822, column: 14, scope: !4729)
!4986 = !DILocation(line: 1822, column: 8, scope: !4724)
!4987 = !DILocation(line: 1823, column: 5, scope: !4727)
!4988 = !DILocation(line: 0, scope: !4727)
!4989 = !DILocation(line: 1823, column: 5, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4727, file: !2493, line: 1823, column: 5)
!4991 = !DILocation(line: 1826, column: 20, scope: !4724)
!4992 = !DILocation(line: 1827, column: 4, scope: !4724)
!4993 = !DILocation(line: 0, scope: !4724)
!4994 = !DILocation(line: 1827, column: 21, scope: !4724)
!4995 = !DILocation(line: 1827, column: 18, scope: !4724)
!4996 = !DILocation(line: 1828, column: 5, scope: !4731)
!4997 = !DILocation(line: 0, scope: !4731)
!4998 = !DILocation(line: 1828, column: 5, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4731, file: !2493, line: 1828, column: 5)
!5000 = distinct !{!5000, !4992, !5001}
!5001 = !DILocation(line: 1829, column: 4, scope: !4724)
!5002 = !DILocation(line: 1831, column: 4, scope: !4734)
!5003 = !DILocation(line: 0, scope: !4734)
!5004 = !DILocation(line: 1831, column: 4, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4734, file: !2493, line: 1831, column: 4)
!5006 = !DILocation(line: 1835, column: 16, scope: !4627)
!5007 = !DILocation(line: 1835, column: 3, scope: !4627)
!5008 = !DILocation(line: 1836, column: 4, scope: !4736)
!5009 = !DILocation(line: 0, scope: !4736)
!5010 = !DILocation(line: 1836, column: 4, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4736, file: !2493, line: 1836, column: 4)
!5012 = !DILocation(line: 1837, column: 4, scope: !4737)
!5013 = distinct !{!5013, !5007, !5014}
!5014 = !DILocation(line: 1838, column: 3, scope: !4627)
!5015 = !DILocation(line: 1844, column: 1, scope: !4600)
!5016 = distinct !DISubprogram(name: "extract_conversion", scope: !2493, file: !2493, line: 642, type: !5017, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5019)
!5017 = !DISubroutineType(types: !5018)
!5018 = !{!279, !4673, !279}
!5019 = !{!5020, !5021}
!5020 = !DILocalVariable(name: "conv", arg: 1, scope: !5016, file: !2493, line: 642, type: !4673)
!5021 = !DILocalVariable(name: "sp", arg: 2, scope: !5016, file: !2493, line: 643, type: !279)
!5022 = !DILocation(line: 0, scope: !5016)
!5023 = !DILocation(line: 645, column: 10, scope: !5016)
!5024 = !DILocation(line: 653, column: 2, scope: !5016)
!5025 = !DILocation(line: 654, column: 6, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5016, file: !2493, line: 654, column: 6)
!5027 = !DILocation(line: 654, column: 10, scope: !5026)
!5028 = !DILocation(line: 654, column: 6, scope: !5016)
!5029 = !DILocation(line: 655, column: 24, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5026, file: !2493, line: 654, column: 18)
!5031 = !DILocation(line: 655, column: 19, scope: !5030)
!5032 = !DILocation(line: 656, column: 3, scope: !5030)
!5033 = !DILocation(line: 659, column: 7, scope: !5016)
!5034 = !DILocation(line: 660, column: 7, scope: !5016)
!5035 = !DILocation(line: 661, column: 7, scope: !5016)
!5036 = !DILocation(line: 662, column: 7, scope: !5016)
!5037 = !DILocation(line: 663, column: 7, scope: !5016)
!5038 = !DILocation(line: 665, column: 2, scope: !5016)
!5039 = !DILocation(line: 666, column: 1, scope: !5016)
!5040 = distinct !DISubprogram(name: "outs", scope: !2493, file: !2493, line: 1319, type: !5041, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5043)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!109, !3754, !107, !279, !279}
!5043 = !{!5044, !5045, !5046, !5047, !5048, !5049}
!5044 = !DILocalVariable(name: "out", arg: 1, scope: !5040, file: !2493, line: 1319, type: !3754)
!5045 = !DILocalVariable(name: "ctx", arg: 2, scope: !5040, file: !2493, line: 1320, type: !107)
!5046 = !DILocalVariable(name: "sp", arg: 3, scope: !5040, file: !2493, line: 1321, type: !279)
!5047 = !DILocalVariable(name: "ep", arg: 4, scope: !5040, file: !2493, line: 1322, type: !279)
!5048 = !DILocalVariable(name: "count", scope: !5040, file: !2493, line: 1324, type: !234)
!5049 = !DILocalVariable(name: "rc", scope: !5050, file: !2493, line: 1327, type: !109)
!5050 = distinct !DILexicalBlock(scope: !5040, file: !2493, line: 1326, column: 45)
!5051 = !DILocation(line: 0, scope: !5040)
!5052 = !DILocation(line: 1326, column: 2, scope: !5040)
!5053 = !DILocation(line: 1324, column: 9, scope: !5040)
!5054 = !DILocation(line: 1326, column: 13, scope: !5040)
!5055 = !DILocation(line: 1326, column: 19, scope: !5040)
!5056 = !DILocation(line: 1327, column: 21, scope: !5050)
!5057 = !DILocation(line: 1326, column: 36, scope: !5040)
!5058 = !DILocation(line: 1326, column: 39, scope: !5040)
!5059 = !DILocation(line: 1327, column: 24, scope: !5050)
!5060 = !DILocation(line: 1327, column: 16, scope: !5050)
!5061 = !DILocation(line: 1327, column: 12, scope: !5050)
!5062 = !DILocation(line: 0, scope: !5050)
!5063 = !DILocation(line: 1329, column: 10, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5050, file: !2493, line: 1329, column: 7)
!5065 = !DILocation(line: 1329, column: 7, scope: !5050)
!5066 = distinct !{!5066, !5052, !5067}
!5067 = !DILocation(line: 1333, column: 2, scope: !5040)
!5068 = !DILocation(line: 1336, column: 1, scope: !5040)
!5069 = distinct !DISubprogram(name: "encode_uint", scope: !2493, file: !2493, line: 788, type: !5070, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5072)
!5070 = !DISubroutineType(types: !5071)
!5071 = !{!285, !2515, !4673, !285, !279}
!5072 = !{!5073, !5074, !5075, !5076, !5077, !5078, !5080, !5081}
!5073 = !DILocalVariable(name: "value", arg: 1, scope: !5069, file: !2493, line: 788, type: !2515)
!5074 = !DILocalVariable(name: "conv", arg: 2, scope: !5069, file: !2493, line: 789, type: !4673)
!5075 = !DILocalVariable(name: "bps", arg: 3, scope: !5069, file: !2493, line: 790, type: !285)
!5076 = !DILocalVariable(name: "bpe", arg: 4, scope: !5069, file: !2493, line: 791, type: !279)
!5077 = !DILocalVariable(name: "upcase", scope: !5069, file: !2493, line: 793, type: !347)
!5078 = !DILocalVariable(name: "radix", scope: !5069, file: !2493, line: 794, type: !5079)
!5079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5080 = !DILocalVariable(name: "bp", scope: !5069, file: !2493, line: 795, type: !285)
!5081 = !DILocalVariable(name: "lsv", scope: !5082, file: !2493, line: 798, type: !32)
!5082 = distinct !DILexicalBlock(scope: !5069, file: !2493, line: 797, column: 5)
!5083 = !DILocation(line: 0, scope: !5069)
!5084 = !DILocation(line: 793, column: 35, scope: !5069)
!5085 = !DILocation(line: 793, column: 24, scope: !5069)
!5086 = !DILocation(line: 793, column: 16, scope: !5069)
!5087 = !DILocation(line: 794, column: 29, scope: !5069)
!5088 = !DILocation(line: 795, column: 24, scope: !5069)
!5089 = !DILocation(line: 795, column: 17, scope: !5069)
!5090 = !DILocation(line: 797, column: 2, scope: !5069)
!5091 = !DILocation(line: 802, column: 9, scope: !5082)
!5092 = !DILocation(line: 798, column: 22, scope: !5082)
!5093 = !DILocation(line: 0, scope: !5082)
!5094 = !DILocation(line: 800, column: 16, scope: !5082)
!5095 = !DILocation(line: 800, column: 11, scope: !5082)
!5096 = !DILocation(line: 800, column: 4, scope: !5082)
!5097 = !DILocation(line: 800, column: 9, scope: !5082)
!5098 = !DILocation(line: 803, column: 18, scope: !5069)
!5099 = !DILocation(line: 803, column: 24, scope: !5069)
!5100 = !DILocation(line: 803, column: 2, scope: !5082)
!5101 = distinct !{!5101, !5090, !5102}
!5102 = !DILocation(line: 803, column: 37, scope: !5069)
!5103 = !DILocation(line: 808, column: 12, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5069, file: !2493, line: 808, column: 6)
!5105 = !DILocation(line: 808, column: 6, scope: !5069)
!5106 = !DILocation(line: 809, column: 7, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5104, file: !2493, line: 808, column: 23)
!5108 = !DILocation(line: 813, column: 3, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5110, file: !2493, line: 811, column: 27)
!5110 = distinct !DILexicalBlock(scope: !5111, file: !2493, line: 811, column: 14)
!5111 = distinct !DILexicalBlock(scope: !5107, file: !2493, line: 809, column: 7)
!5112 = !DILocation(line: 0, scope: !5111)
!5113 = !DILocation(line: 818, column: 2, scope: !5069)
!5114 = distinct !DISubprogram(name: "store_count", scope: !2493, file: !2493, line: 1280, type: !5115, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5119)
!5115 = !DISubroutineType(types: !5116)
!5116 = !{null, !5117, !107, !109}
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 32)
!5118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4640)
!5119 = !{!5120, !5121, !5122}
!5120 = !DILocalVariable(name: "conv", arg: 1, scope: !5114, file: !2493, line: 1280, type: !5117)
!5121 = !DILocalVariable(name: "dp", arg: 2, scope: !5114, file: !2493, line: 1281, type: !107)
!5122 = !DILocalVariable(name: "count", arg: 3, scope: !5114, file: !2493, line: 1282, type: !109)
!5123 = !DILocation(line: 0, scope: !5114)
!5124 = !DILocation(line: 1284, column: 38, scope: !5114)
!5125 = !DILocation(line: 1284, column: 2, scope: !5114)
!5126 = !DILocation(line: 1286, column: 4, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5114, file: !2493, line: 1284, column: 50)
!5128 = !DILocation(line: 1286, column: 14, scope: !5127)
!5129 = !DILocation(line: 1287, column: 3, scope: !5127)
!5130 = !DILocation(line: 1289, column: 24, scope: !5127)
!5131 = !DILocation(line: 1289, column: 22, scope: !5127)
!5132 = !DILocation(line: 1290, column: 3, scope: !5127)
!5133 = !DILocation(line: 1292, column: 18, scope: !5127)
!5134 = !DILocation(line: 1292, column: 4, scope: !5127)
!5135 = !DILocation(line: 1292, column: 16, scope: !5127)
!5136 = !DILocation(line: 1293, column: 3, scope: !5127)
!5137 = !DILocation(line: 1295, column: 4, scope: !5127)
!5138 = !DILocation(line: 1295, column: 15, scope: !5127)
!5139 = !DILocation(line: 1296, column: 3, scope: !5127)
!5140 = !DILocation(line: 1298, column: 22, scope: !5127)
!5141 = !DILocation(line: 1298, column: 4, scope: !5127)
!5142 = !DILocation(line: 1298, column: 20, scope: !5127)
!5143 = !DILocation(line: 1299, column: 3, scope: !5127)
!5144 = !DILocation(line: 1301, column: 21, scope: !5127)
!5145 = !DILocation(line: 1301, column: 4, scope: !5127)
!5146 = !DILocation(line: 1301, column: 19, scope: !5127)
!5147 = !DILocation(line: 1302, column: 3, scope: !5127)
!5148 = !DILocation(line: 1304, column: 4, scope: !5127)
!5149 = !DILocation(line: 1304, column: 17, scope: !5127)
!5150 = !DILocation(line: 1305, column: 3, scope: !5127)
!5151 = !DILocation(line: 1307, column: 4, scope: !5127)
!5152 = !DILocation(line: 1307, column: 20, scope: !5127)
!5153 = !DILocation(line: 1308, column: 3, scope: !5127)
!5154 = !DILocation(line: 1316, column: 1, scope: !5114)
!5155 = distinct !DISubprogram(name: "isupper", scope: !5156, file: !5156, line: 16, type: !303, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5157)
!5156 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5157 = !{!5158}
!5158 = !DILocalVariable(name: "a", arg: 1, scope: !5155, file: !5156, line: 16, type: !109)
!5159 = !DILocation(line: 0, scope: !5155)
!5160 = !DILocation(line: 18, column: 29, scope: !5155)
!5161 = !DILocation(line: 18, column: 45, scope: !5155)
!5162 = !DILocation(line: 18, column: 2, scope: !5155)
!5163 = distinct !DISubprogram(name: "conversion_radix", scope: !2493, file: !2493, line: 761, type: !5164, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5166)
!5164 = !DISubroutineType(types: !5165)
!5165 = !{!234, !150}
!5166 = !{!5167}
!5167 = !DILocalVariable(name: "specifier", arg: 1, scope: !5163, file: !2493, line: 761, type: !150)
!5168 = !DILocation(line: 0, scope: !5163)
!5169 = !DILocation(line: 763, column: 2, scope: !5163)
!5170 = !DILocation(line: 770, column: 3, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5163, file: !2493, line: 763, column: 21)
!5172 = !DILocation(line: 774, column: 3, scope: !5171)
!5173 = !DILocation(line: 0, scope: !5171)
!5174 = !DILocation(line: 776, column: 1, scope: !5163)
!5175 = distinct !DISubprogram(name: "extract_flags", scope: !2493, file: !2493, line: 339, type: !5017, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5176)
!5176 = !{!5177, !5178, !5179}
!5177 = !DILocalVariable(name: "conv", arg: 1, scope: !5175, file: !2493, line: 339, type: !4673)
!5178 = !DILocalVariable(name: "sp", arg: 2, scope: !5175, file: !2493, line: 340, type: !279)
!5179 = !DILocalVariable(name: "loop", scope: !5175, file: !2493, line: 342, type: !347)
!5180 = !DILocation(line: 0, scope: !5175)
!5181 = !DILocation(line: 344, column: 2, scope: !5175)
!5182 = !DILocation(line: 345, column: 11, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5175, file: !2493, line: 344, column: 5)
!5184 = !DILocation(line: 345, column: 3, scope: !5183)
!5185 = !DILocation(line: 351, column: 4, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5183, file: !2493, line: 345, column: 16)
!5187 = !DILocation(line: 354, column: 4, scope: !5186)
!5188 = !DILocation(line: 357, column: 4, scope: !5186)
!5189 = !DILocation(line: 360, column: 4, scope: !5186)
!5190 = !DILocation(line: 0, scope: !5186)
!5191 = !DILocation(line: 370, column: 12, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5175, file: !2493, line: 370, column: 6)
!5193 = !DILocation(line: 370, column: 22, scope: !5192)
!5194 = !DILocation(line: 371, column: 19, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5192, file: !2493, line: 370, column: 42)
!5196 = !DILocation(line: 372, column: 2, scope: !5195)
!5197 = !DILocation(line: 376, column: 2, scope: !5175)
!5198 = distinct !DISubprogram(name: "extract_width", scope: !2493, file: !2493, line: 388, type: !5017, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5199)
!5199 = !{!5200, !5201, !5202, !5203}
!5200 = !DILocalVariable(name: "conv", arg: 1, scope: !5198, file: !2493, line: 388, type: !4673)
!5201 = !DILocalVariable(name: "sp", arg: 2, scope: !5198, file: !2493, line: 389, type: !279)
!5202 = !DILocalVariable(name: "wp", scope: !5198, file: !2493, line: 398, type: !279)
!5203 = !DILocalVariable(name: "width", scope: !5198, file: !2493, line: 399, type: !234)
!5204 = !DILocation(line: 0, scope: !5198)
!5205 = !DILocation(line: 391, column: 8, scope: !5198)
!5206 = !DILocation(line: 391, column: 22, scope: !5198)
!5207 = !DILocation(line: 393, column: 6, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5198, file: !2493, line: 393, column: 6)
!5209 = !DILocation(line: 393, column: 10, scope: !5208)
!5210 = !DILocation(line: 393, column: 6, scope: !5198)
!5211 = !DILocation(line: 394, column: 20, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5208, file: !2493, line: 393, column: 18)
!5213 = !DILocation(line: 395, column: 10, scope: !5212)
!5214 = !DILocation(line: 395, column: 3, scope: !5212)
!5215 = !DILocation(line: 399, column: 17, scope: !5198)
!5216 = !DILocation(line: 401, column: 6, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5198, file: !2493, line: 401, column: 6)
!5218 = !DILocation(line: 401, column: 9, scope: !5217)
!5219 = !DILocation(line: 401, column: 6, scope: !5198)
!5220 = !DILocation(line: 402, column: 23, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5217, file: !2493, line: 401, column: 16)
!5222 = !DILocation(line: 403, column: 9, scope: !5221)
!5223 = !DILocation(line: 403, column: 21, scope: !5221)
!5224 = !DILocation(line: 405, column: 11, scope: !5221)
!5225 = !DILocation(line: 404, column: 21, scope: !5221)
!5226 = !DILocation(line: 406, column: 2, scope: !5221)
!5227 = !DILocation(line: 409, column: 1, scope: !5198)
!5228 = distinct !DISubprogram(name: "extract_prec", scope: !2493, file: !2493, line: 420, type: !5017, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5229)
!5229 = !{!5230, !5231, !5232}
!5230 = !DILocalVariable(name: "conv", arg: 1, scope: !5228, file: !2493, line: 420, type: !4673)
!5231 = !DILocalVariable(name: "sp", arg: 2, scope: !5228, file: !2493, line: 421, type: !279)
!5232 = !DILocalVariable(name: "prec", scope: !5228, file: !2493, line: 435, type: !234)
!5233 = !DILocation(line: 0, scope: !5228)
!5234 = !DILocation(line: 423, column: 24, scope: !5228)
!5235 = !DILocation(line: 423, column: 28, scope: !5228)
!5236 = !DILocation(line: 423, column: 8, scope: !5228)
!5237 = !DILocation(line: 423, column: 21, scope: !5228)
!5238 = !DILocation(line: 425, column: 6, scope: !5228)
!5239 = !DILocation(line: 428, column: 2, scope: !5228)
!5240 = !DILocation(line: 430, column: 6, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5228, file: !2493, line: 430, column: 6)
!5242 = !DILocation(line: 430, column: 10, scope: !5241)
!5243 = !DILocation(line: 430, column: 6, scope: !5228)
!5244 = !DILocation(line: 431, column: 19, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5241, file: !2493, line: 430, column: 18)
!5246 = !DILocation(line: 432, column: 10, scope: !5245)
!5247 = !DILocation(line: 432, column: 3, scope: !5245)
!5248 = !DILocation(line: 435, column: 16, scope: !5228)
!5249 = !DILocation(line: 437, column: 8, scope: !5228)
!5250 = !DILocation(line: 437, column: 19, scope: !5228)
!5251 = !DILocation(line: 439, column: 10, scope: !5228)
!5252 = !DILocation(line: 438, column: 20, scope: !5228)
!5253 = !DILocation(line: 441, column: 9, scope: !5228)
!5254 = !DILocation(line: 442, column: 1, scope: !5228)
!5255 = distinct !DISubprogram(name: "extract_length", scope: !2493, file: !2493, line: 453, type: !5017, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5256)
!5256 = !{!5257, !5258}
!5257 = !DILocalVariable(name: "conv", arg: 1, scope: !5255, file: !2493, line: 453, type: !4673)
!5258 = !DILocalVariable(name: "sp", arg: 2, scope: !5255, file: !2493, line: 454, type: !279)
!5259 = !DILocation(line: 0, scope: !5255)
!5260 = !DILocation(line: 456, column: 10, scope: !5255)
!5261 = !DILocation(line: 456, column: 2, scope: !5255)
!5262 = !DILocation(line: 458, column: 8, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5264, file: !2493, line: 458, column: 7)
!5264 = distinct !DILexicalBlock(scope: !5255, file: !2493, line: 456, column: 15)
!5265 = !DILocation(line: 458, column: 7, scope: !5263)
!5266 = !DILocation(line: 458, column: 13, scope: !5263)
!5267 = !DILocation(line: 0, scope: !5263)
!5268 = !DILocation(line: 458, column: 7, scope: !5264)
!5269 = !DILocation(line: 459, column: 21, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5263, file: !2493, line: 458, column: 21)
!5271 = !DILocation(line: 460, column: 4, scope: !5270)
!5272 = !DILocation(line: 461, column: 3, scope: !5270)
!5273 = !DILocation(line: 462, column: 21, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5263, file: !2493, line: 461, column: 10)
!5275 = !DILocation(line: 466, column: 8, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5264, file: !2493, line: 466, column: 7)
!5277 = !DILocation(line: 466, column: 7, scope: !5276)
!5278 = !DILocation(line: 466, column: 13, scope: !5276)
!5279 = !DILocation(line: 0, scope: !5276)
!5280 = !DILocation(line: 466, column: 7, scope: !5264)
!5281 = !DILocation(line: 467, column: 21, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5276, file: !2493, line: 466, column: 21)
!5283 = !DILocation(line: 468, column: 4, scope: !5282)
!5284 = !DILocation(line: 469, column: 3, scope: !5282)
!5285 = !DILocation(line: 470, column: 21, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5276, file: !2493, line: 469, column: 10)
!5287 = !DILocation(line: 474, column: 9, scope: !5264)
!5288 = !DILocation(line: 474, column: 20, scope: !5264)
!5289 = !DILocation(line: 475, column: 3, scope: !5264)
!5290 = !DILocation(line: 476, column: 3, scope: !5264)
!5291 = !DILocation(line: 478, column: 9, scope: !5264)
!5292 = !DILocation(line: 478, column: 20, scope: !5264)
!5293 = !DILocation(line: 479, column: 3, scope: !5264)
!5294 = !DILocation(line: 480, column: 3, scope: !5264)
!5295 = !DILocation(line: 482, column: 9, scope: !5264)
!5296 = !DILocation(line: 482, column: 20, scope: !5264)
!5297 = !DILocation(line: 483, column: 3, scope: !5264)
!5298 = !DILocation(line: 484, column: 3, scope: !5264)
!5299 = !DILocation(line: 486, column: 9, scope: !5264)
!5300 = !DILocation(line: 486, column: 20, scope: !5264)
!5301 = !DILocation(line: 487, column: 3, scope: !5264)
!5302 = !DILocation(line: 492, column: 21, scope: !5264)
!5303 = !DILocation(line: 493, column: 3, scope: !5264)
!5304 = !DILocation(line: 495, column: 9, scope: !5264)
!5305 = !DILocation(line: 495, column: 20, scope: !5264)
!5306 = !DILocation(line: 496, column: 3, scope: !5264)
!5307 = !DILocation(line: 498, column: 2, scope: !5255)
!5308 = distinct !DISubprogram(name: "extract_specifier", scope: !2493, file: !2493, line: 513, type: !5017, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5309)
!5309 = !{!5310, !5311, !5312, !5313}
!5310 = !DILocalVariable(name: "conv", arg: 1, scope: !5308, file: !2493, line: 513, type: !4673)
!5311 = !DILocalVariable(name: "sp", arg: 2, scope: !5308, file: !2493, line: 514, type: !279)
!5312 = !DILocalVariable(name: "unsupported", scope: !5308, file: !2493, line: 516, type: !347)
!5313 = !DILabel(scope: !5314, name: "int_conv", file: !2493, line: 526)
!5314 = distinct !DILexicalBlock(scope: !5308, file: !2493, line: 520, column: 27)
!5315 = !DILocation(line: 0, scope: !5308)
!5316 = !DILocation(line: 518, column: 20, scope: !5308)
!5317 = !DILocation(line: 518, column: 8, scope: !5308)
!5318 = !DILocation(line: 518, column: 18, scope: !5308)
!5319 = !DILocation(line: 520, column: 2, scope: !5308)
!5320 = !DILocation(line: 525, column: 3, scope: !5314)
!5321 = !DILocation(line: 0, scope: !5314)
!5322 = !DILocation(line: 526, column: 1, scope: !5314)
!5323 = !DILocation(line: 528, column: 24, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5314, file: !2493, line: 528, column: 7)
!5325 = !DILocation(line: 528, column: 7, scope: !5314)
!5326 = !DILocation(line: 535, column: 23, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5314, file: !2493, line: 535, column: 7)
!5328 = !DILocation(line: 535, column: 7, scope: !5314)
!5329 = !DILocation(line: 536, column: 36, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5327, file: !2493, line: 535, column: 31)
!5331 = !DILocation(line: 537, column: 3, scope: !5330)
!5332 = !DILocation(line: 570, column: 9, scope: !5314)
!5333 = !DILocation(line: 570, column: 23, scope: !5314)
!5334 = !DILocation(line: 575, column: 4, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5336, file: !2493, line: 573, column: 48)
!5336 = distinct !DILexicalBlock(scope: !5314, file: !2493, line: 573, column: 7)
!5337 = !DILocation(line: 603, column: 9, scope: !5314)
!5338 = !DILocation(line: 603, column: 23, scope: !5314)
!5339 = !DILocation(line: 605, column: 24, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5314, file: !2493, line: 605, column: 7)
!5341 = !DILocation(line: 605, column: 7, scope: !5314)
!5342 = !DILocation(line: 612, column: 9, scope: !5314)
!5343 = !DILocation(line: 612, column: 23, scope: !5314)
!5344 = !DILocation(line: 619, column: 24, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5314, file: !2493, line: 619, column: 7)
!5346 = !DILocation(line: 619, column: 7, scope: !5314)
!5347 = !DILocation(line: 625, column: 9, scope: !5314)
!5348 = !DILocation(line: 625, column: 17, scope: !5314)
!5349 = !DILocation(line: 626, column: 3, scope: !5314)
!5350 = !DILocation(line: 629, column: 20, scope: !5308)
!5351 = !DILocation(line: 629, column: 8, scope: !5308)
!5352 = !DILocation(line: 518, column: 23, scope: !5308)
!5353 = !DILocation(line: 631, column: 2, scope: !5308)
!5354 = distinct !DISubprogram(name: "extract_decimal", scope: !2493, file: !2493, line: 318, type: !5355, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5357)
!5355 = !DISubroutineType(types: !5356)
!5356 = !{!234, !278}
!5357 = !{!5358, !5359, !5360}
!5358 = !DILocalVariable(name: "str", arg: 1, scope: !5354, file: !2493, line: 318, type: !278)
!5359 = !DILocalVariable(name: "sp", scope: !5354, file: !2493, line: 320, type: !279)
!5360 = !DILocalVariable(name: "val", scope: !5354, file: !2493, line: 321, type: !234)
!5361 = !DILocation(line: 0, scope: !5354)
!5362 = !DILocation(line: 320, column: 19, scope: !5354)
!5363 = !DILocation(line: 323, column: 37, scope: !5354)
!5364 = !DILocation(line: 323, column: 17, scope: !5354)
!5365 = !DILocation(line: 323, column: 9, scope: !5354)
!5366 = !DILocation(line: 323, column: 2, scope: !5354)
!5367 = !DILocation(line: 324, column: 13, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5354, file: !2493, line: 323, column: 43)
!5369 = !DILocation(line: 324, column: 24, scope: !5368)
!5370 = !DILocation(line: 324, column: 19, scope: !5368)
!5371 = !DILocation(line: 324, column: 27, scope: !5368)
!5372 = distinct !{!5372, !5366, !5373}
!5373 = !DILocation(line: 325, column: 2, scope: !5354)
!5374 = !DILocation(line: 326, column: 7, scope: !5354)
!5375 = !DILocation(line: 327, column: 2, scope: !5354)
!5376 = distinct !DISubprogram(name: "isdigit", scope: !5156, file: !5156, line: 43, type: !303, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !5377)
!5377 = !{!5378}
!5378 = !DILocalVariable(name: "a", arg: 1, scope: !5376, file: !5156, line: 43, type: !109)
!5379 = !DILocation(line: 0, scope: !5376)
!5380 = !DILocation(line: 45, column: 29, scope: !5376)
!5381 = !DILocation(line: 45, column: 45, scope: !5376)
!5382 = !DILocation(line: 45, column: 2, scope: !5376)
!5383 = distinct !DISubprogram(name: "assert_post_action", scope: !5384, file: !5384, line: 26, type: !5385, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5387)
!5384 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5385 = !DISubroutineType(types: !5386)
!5386 = !{null, !279, !32}
!5387 = !{!5388, !5389}
!5388 = !DILocalVariable(name: "file", arg: 1, scope: !5383, file: !5384, line: 26, type: !279)
!5389 = !DILocalVariable(name: "line", arg: 2, scope: !5383, file: !5384, line: 26, type: !32)
!5390 = !DILocation(line: 0, scope: !5383)
!5391 = !DILocation(line: 43, column: 2, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5383, file: !5384, line: 43, column: 2)
!5393 = !{i64 2154074884, i64 2154074900, i64 2154074926, i64 2154074954, i64 2154074974}
!5394 = !DILocation(line: 44, column: 1, scope: !5383)
!5395 = distinct !DISubprogram(name: "assert_print", scope: !5384, file: !5384, line: 46, type: !4366, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5396)
!5396 = !{!5397, !5398}
!5397 = !DILocalVariable(name: "fmt", arg: 1, scope: !5395, file: !5384, line: 46, type: !279)
!5398 = !DILocalVariable(name: "ap", scope: !5395, file: !5384, line: 48, type: !5399)
!5399 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3372, line: 99, baseType: !5400)
!5400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3372, line: 40, baseType: !5401)
!5401 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5384, baseType: !5402)
!5402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5403)
!5403 = !{!5404}
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5402, file: !5384, line: 48, baseType: !107, size: 32)
!5405 = !DILocation(line: 0, scope: !5395)
!5406 = !DILocation(line: 48, column: 2, scope: !5395)
!5407 = !DILocation(line: 48, column: 10, scope: !5395)
!5408 = !DILocation(line: 50, column: 2, scope: !5395)
!5409 = !DILocation(line: 52, column: 2, scope: !5395)
!5410 = !DILocation(line: 54, column: 2, scope: !5395)
!5411 = !DILocation(line: 55, column: 1, scope: !5395)
!5412 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5413, file: !5413, line: 9, type: !3070, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !2002)
!5413 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!5414 = !DILocation(line: 11, column: 1, scope: !5412)
!5415 = !{i64 2147564786, i64 2147564829, i64 2147564869}
!5416 = !DILocation(line: 12, column: 1, scope: !5412)
!5417 = !{i64 2147569013, i64 2147569056, i64 2147569096}
!5418 = !DILocation(line: 13, column: 1, scope: !5412)
!5419 = !{i64 2147569222, i64 2147569265, i64 2147569305}
!5420 = !DILocation(line: 14, column: 1, scope: !5412)
!5421 = !{i64 2147569391, i64 2147569434, i64 2147569474}
!5422 = !DILocation(line: 15, column: 1, scope: !5412)
!5423 = !{i64 2147569554, i64 2147569597, i64 2147569637}
!5424 = !DILocation(line: 16, column: 1, scope: !5412)
!5425 = !{i64 2147569738, i64 2147569781, i64 2147569821}
!5426 = !DILocation(line: 17, column: 1, scope: !5412)
!5427 = !{i64 2147569917, i64 2147569960, i64 2147570000}
!5428 = !DILocation(line: 18, column: 1, scope: !5412)
!5429 = !{i64 2147570159, i64 2147570202, i64 2147570242}
!5430 = !DILocation(line: 19, column: 1, scope: !5412)
!5431 = !{i64 2147570394, i64 2147570437, i64 2147570477}
!5432 = !DILocation(line: 20, column: 1, scope: !5412)
!5433 = !{i64 2147570580, i64 2147570623, i64 2147570663}
!5434 = !DILocation(line: 21, column: 1, scope: !5412)
!5435 = !{i64 2147570796, i64 2147570839, i64 2147570879}
!5436 = !DILocation(line: 22, column: 1, scope: !5412)
!5437 = !{i64 2147570999, i64 2147571042, i64 2147571082}
!5438 = !DILocation(line: 23, column: 1, scope: !5412)
!5439 = !{i64 2147571202, i64 2147571245, i64 2147571285}
!5440 = !DILocation(line: 24, column: 1, scope: !5412)
!5441 = !{i64 2147571377, i64 2147571420, i64 2147571460}
!5442 = !DILocation(line: 25, column: 1, scope: !5412)
!5443 = !{i64 2147571585, i64 2147571628, i64 2147571668}
!5444 = !DILocation(line: 26, column: 1, scope: !5412)
!5445 = !{i64 2147571789, i64 2147571832, i64 2147571872}
!5446 = !DILocation(line: 27, column: 1, scope: !5412)
!5447 = !{i64 2147571982, i64 2147572025, i64 2147572065}
!5448 = !DILocation(line: 28, column: 1, scope: !5412)
!5449 = !{i64 2147572184, i64 2147572227, i64 2147572267}
!5450 = !DILocation(line: 29, column: 1, scope: !5412)
!5451 = !{i64 2147572383, i64 2147572426, i64 2147572466}
!5452 = !DILocation(line: 30, column: 1, scope: !5412)
!5453 = !{i64 2147572610, i64 2147572653, i64 2147572693}
!5454 = !DILocation(line: 31, column: 1, scope: !5412)
!5455 = !{i64 2147572812, i64 2147572855, i64 2147572895}
!5456 = !DILocation(line: 32, column: 1, scope: !5412)
!5457 = !{i64 2147573027, i64 2147573070, i64 2147573110}
!5458 = !DILocation(line: 33, column: 1, scope: !5412)
!5459 = !{i64 2147573244, i64 2147573287, i64 2147573327}
!5460 = !DILocation(line: 34, column: 1, scope: !5412)
!5461 = !{i64 2147573416, i64 2147573459, i64 2147573499}
!5462 = !DILocation(line: 35, column: 1, scope: !5412)
!5463 = !{i64 2147573618, i64 2147573661, i64 2147573701}
!5464 = !DILocation(line: 36, column: 1, scope: !5412)
!5465 = !{i64 2147573844, i64 2147573887, i64 2147573927}
!5466 = !DILocation(line: 37, column: 1, scope: !5412)
!5467 = !{i64 2147574043, i64 2147574086, i64 2147574126}
!5468 = !DILocation(line: 38, column: 1, scope: !5412)
!5469 = !{i64 2147574218, i64 2147574261, i64 2147574301}
!5470 = !DILocation(line: 39, column: 1, scope: !5412)
!5471 = !{i64 2147574471, i64 2147574514, i64 2147574554}
!5472 = !DILocation(line: 40, column: 1, scope: !5412)
!5473 = !{i64 2147574712, i64 2147574755, i64 2147574795}
!5474 = !DILocation(line: 41, column: 1, scope: !5412)
!5475 = !{i64 2147574947, i64 2147574990, i64 2147575030}
!5476 = !DILocation(line: 42, column: 1, scope: !5412)
!5477 = !{i64 2147575179, i64 2147575222, i64 2147575262}
!5478 = !DILocation(line: 43, column: 1, scope: !5412)
!5479 = !{i64 2147575405, i64 2147575448, i64 2147575488}
!5480 = !DILocation(line: 44, column: 1, scope: !5412)
!5481 = !{i64 2147575631, i64 2147575674, i64 2147575714}
!5482 = !DILocation(line: 45, column: 1, scope: !5412)
!5483 = !{i64 2147575857, i64 2147575900, i64 2147575940}
!5484 = !DILocation(line: 46, column: 1, scope: !5412)
!5485 = !{i64 2147576092, i64 2147576135, i64 2147576175}
!5486 = !DILocation(line: 47, column: 1, scope: !5412)
!5487 = !{i64 2147576330, i64 2147576373, i64 2147576413}
!5488 = !DILocation(line: 48, column: 1, scope: !5412)
!5489 = !{i64 2147576604, i64 2147576647, i64 2147576687}
!5490 = !DILocation(line: 49, column: 1, scope: !5412)
!5491 = !{i64 2147576842, i64 2147576885, i64 2147576925}
!5492 = !DILocation(line: 50, column: 1, scope: !5412)
!5493 = !{i64 2147577086, i64 2147577129, i64 2147577169}
!5494 = !DILocation(line: 51, column: 1, scope: !5412)
!5495 = !{i64 2147577336, i64 2147577379, i64 2147577419}
!5496 = !DILocation(line: 52, column: 1, scope: !5412)
!5497 = !{i64 2147577583, i64 2147577626, i64 2147577666}
!5498 = !DILocation(line: 53, column: 1, scope: !5412)
!5499 = !{i64 2147581879, i64 2147581922, i64 2147581962}
!5500 = !DILocation(line: 54, column: 1, scope: !5412)
!5501 = !{i64 2147582114, i64 2147582157, i64 2147582197}
!5502 = !DILocation(line: 55, column: 1, scope: !5412)
!5503 = !{i64 2147582349, i64 2147582392, i64 2147582432}
!5504 = !DILocation(line: 56, column: 1, scope: !5412)
!5505 = !{i64 2147582587, i64 2147582630, i64 2147582670}
!5506 = !DILocation(line: 57, column: 1, scope: !5412)
!5507 = !{i64 2147582828, i64 2147582871, i64 2147582911}
!5508 = !DILocation(line: 58, column: 1, scope: !5412)
!5509 = !{i64 2147583108, i64 2147583151, i64 2147583191}
!5510 = !DILocation(line: 59, column: 1, scope: !5412)
!5511 = !{i64 2147583367, i64 2147583410, i64 2147583450}
!5512 = !DILocation(line: 60, column: 1, scope: !5412)
!5513 = !{i64 2147583593, i64 2147583636, i64 2147583676}
!5514 = !DILocation(line: 61, column: 1, scope: !5412)
!5515 = !{i64 2147583831, i64 2147583874, i64 2147583914}
!5516 = !DILocation(line: 62, column: 1, scope: !5412)
!5517 = !{i64 2147584060, i64 2147584103, i64 2147584143}
!5518 = !DILocation(line: 63, column: 1, scope: !5412)
!5519 = !{i64 2147584268, i64 2147584311, i64 2147584351}
!5520 = !DILocation(line: 64, column: 1, scope: !5412)
!5521 = !{i64 2147584479, i64 2147584522, i64 2147584562}
!5522 = !DILocation(line: 65, column: 1, scope: !5412)
!5523 = !{i64 2147584714, i64 2147584757, i64 2147584797}
!5524 = !DILocation(line: 66, column: 1, scope: !5412)
!5525 = !{i64 2147584943, i64 2147584986, i64 2147585026}
!5526 = !DILocation(line: 67, column: 1, scope: !5412)
!5527 = !{i64 2147585160, i64 2147585203, i64 2147585243}
!5528 = !DILocation(line: 68, column: 1, scope: !5412)
!5529 = !{i64 2147585389, i64 2147585432, i64 2147585472}
!5530 = !DILocation(line: 69, column: 1, scope: !5412)
!5531 = !{i64 2147585627, i64 2147585670, i64 2147585710}
!5532 = !DILocation(line: 70, column: 1, scope: !5412)
!5533 = !{i64 2147585859, i64 2147585902, i64 2147585942}
!5534 = !DILocation(line: 71, column: 1, scope: !5412)
!5535 = !{i64 2147586085, i64 2147586128, i64 2147586168}
!5536 = !DILocation(line: 72, column: 1, scope: !5412)
!5537 = !{i64 2147586302, i64 2147586345, i64 2147586385}
!5538 = !DILocation(line: 73, column: 1, scope: !5412)
!5539 = !{i64 2147586534, i64 2147586577, i64 2147586617}
!5540 = !DILocation(line: 74, column: 1, scope: !5412)
!5541 = !{i64 2147586760, i64 2147586803, i64 2147586843}
!5542 = !DILocation(line: 75, column: 1, scope: !5412)
!5543 = !{i64 2147586974, i64 2147587017, i64 2147587057}
!5544 = !DILocation(line: 76, column: 1, scope: !5412)
!5545 = !{i64 2147587194, i64 2147587237, i64 2147587277}
!5546 = !DILocation(line: 77, column: 1, scope: !5412)
!5547 = !{i64 2147587426, i64 2147587469, i64 2147587509}
!5548 = !DILocation(line: 78, column: 1, scope: !5412)
!5549 = !{i64 2147587634, i64 2147587677, i64 2147587717}
!5550 = !DILocation(line: 79, column: 1, scope: !5412)
!5551 = !{i64 2147587839, i64 2147587882, i64 2147587922}
!5552 = !DILocation(line: 80, column: 1, scope: !5412)
!5553 = !{i64 2147588056, i64 2147588099, i64 2147588139}
!5554 = !DILocation(line: 81, column: 1, scope: !5412)
!5555 = !{i64 2147588270, i64 2147588313, i64 2147588353}
!5556 = !DILocation(line: 82, column: 1, scope: !5412)
!5557 = !{i64 2147588496, i64 2147588539, i64 2147588579}
!5558 = !DILocation(line: 83, column: 1, scope: !5412)
!5559 = !{i64 2147588716, i64 2147588759, i64 2147588799}
!5560 = !DILocation(line: 84, column: 1, scope: !5412)
!5561 = !{i64 2147588921, i64 2147588964, i64 2147589004}
!5562 = !DILocation(line: 85, column: 1, scope: !5412)
!5563 = !{i64 2147589153, i64 2147589196, i64 2147589236}
!5564 = !DILocation(line: 86, column: 1, scope: !5412)
!5565 = !{i64 2147589388, i64 2147589431, i64 2147589471}
!5566 = !DILocation(line: 87, column: 1, scope: !5412)
!5567 = !{i64 2147589638, i64 2147589681, i64 2147589721}
!5568 = !DILocation(line: 88, column: 1, scope: !5412)
!5569 = !{i64 2147589888, i64 2147589931, i64 2147589971}
!5570 = !DILocation(line: 89, column: 1, scope: !5412)
!5571 = !{i64 2147594187, i64 2147594230, i64 2147594270}
!5572 = !DILocation(line: 90, column: 1, scope: !5412)
!5573 = !{i64 2147594398, i64 2147594441, i64 2147594481}
!5574 = !DILocation(line: 91, column: 1, scope: !5412)
!5575 = !{i64 2147594615, i64 2147594658, i64 2147594698}
!5576 = !DILocation(line: 92, column: 1, scope: !5412)
!5577 = !{i64 2147594811, i64 2147594854, i64 2147594894}
!5578 = !DILocation(line: 93, column: 1, scope: !5412)
!5579 = !{i64 2147595013, i64 2147595056, i64 2147595096}
!5580 = !DILocation(line: 94, column: 1, scope: !5412)
!5581 = !{i64 2147595206, i64 2147595249, i64 2147595289}
!5582 = !DILocation(line: 95, column: 1, scope: !5412)
!5583 = !{i64 2147595414, i64 2147595457, i64 2147595497}
!5584 = !DILocation(line: 96, column: 1, scope: !5412)
!5585 = !{i64 2147595610, i64 2147595653, i64 2147595693}
!5586 = !DILocation(line: 97, column: 1, scope: !5412)
!5587 = !{i64 2147595815, i64 2147595858, i64 2147595898}
!5588 = !DILocation(line: 98, column: 1, scope: !5412)
!5589 = !{i64 2147596026, i64 2147596069, i64 2147596109}
!5590 = !DILocation(line: 99, column: 1, scope: !5412)
!5591 = !{i64 2147596225, i64 2147596268, i64 2147596308}
!5592 = !DILocation(line: 100, column: 1, scope: !5412)
!5593 = !{i64 2147596400, i64 2147596443, i64 2147596483}
!5594 = !DILocation(line: 101, column: 1, scope: !5412)
!5595 = !{i64 2147596584, i64 2147596627, i64 2147596667}
!5596 = !DILocation(line: 102, column: 1, scope: !5412)
!5597 = !{i64 2147596786, i64 2147596829, i64 2147596869}
!5598 = !DILocation(line: 103, column: 1, scope: !5412)
!5599 = !{i64 2147596985, i64 2147597028, i64 2147597068}
!5600 = !DILocation(line: 104, column: 1, scope: !5412)
!5601 = !{i64 2147597190, i64 2147597233, i64 2147597273}
!5602 = !DILocation(line: 105, column: 1, scope: !5412)
!5603 = !{i64 2147597383, i64 2147597426, i64 2147597466}
!5604 = !DILocation(line: 106, column: 1, scope: !5412)
!5605 = !{i64 2147597549, i64 2147597592, i64 2147597632}
!5606 = !DILocation(line: 107, column: 1, scope: !5412)
!5607 = !{i64 2147597733, i64 2147597776, i64 2147597816}
!5608 = !DILocation(line: 108, column: 1, scope: !5412)
!5609 = !{i64 2147597923, i64 2147597966, i64 2147598006}
!5610 = !DILocation(line: 109, column: 1, scope: !5412)
!5611 = !{i64 2147598107, i64 2147598150, i64 2147598190}
!5612 = !DILocation(line: 110, column: 1, scope: !5412)
!5613 = !{i64 2147598321, i64 2147598364, i64 2147598404}
!5614 = !DILocation(line: 111, column: 1, scope: !5412)
!5615 = !{i64 2147598532, i64 2147598575, i64 2147598615}
!5616 = !DILocation(line: 112, column: 1, scope: !5412)
!5617 = !{i64 2147598755, i64 2147598798, i64 2147598838}
!5618 = !DILocation(line: 113, column: 1, scope: !5412)
!5619 = !{i64 2147598939, i64 2147598982, i64 2147599022}
!5620 = !DILocation(line: 114, column: 1, scope: !5412)
!5621 = !{i64 2147599153, i64 2147599196, i64 2147599236}
!5622 = !DILocation(line: 115, column: 1, scope: !5412)
!5623 = !{i64 2147599319, i64 2147599362, i64 2147599402}
!5624 = !DILocation(line: 116, column: 1, scope: !5412)
!5625 = !{i64 2147599500, i64 2147599543, i64 2147599583}
!5626 = !DILocation(line: 117, column: 1, scope: !5412)
!5627 = !{i64 2147599693, i64 2147599736, i64 2147599776}
!5628 = !DILocation(line: 118, column: 1, scope: !5412)
!5629 = !{i64 2147599919, i64 2147599962, i64 2147600002}
!5630 = !DILocation(line: 119, column: 1, scope: !5412)
!5631 = !{i64 2147600133, i64 2147600176, i64 2147600216}
!5632 = !DILocation(line: 120, column: 1, scope: !5412)
!5633 = !{i64 2147600359, i64 2147600402, i64 2147600442}
!5634 = !DILocation(line: 121, column: 1, scope: !5412)
!5635 = !{i64 2147600576, i64 2147600619, i64 2147600659}
!5636 = !DILocation(line: 122, column: 1, scope: !5412)
!5637 = !{i64 2147600853, i64 2147600896, i64 2147600936}
!5638 = !DILocation(line: 123, column: 1, scope: !5412)
!5639 = !{i64 2147601079, i64 2147601122, i64 2147601162}
!5640 = !DILocation(line: 124, column: 1, scope: !5412)
!5641 = !{i64 2147601287, i64 2147601330, i64 2147601370}
!5642 = !DILocation(line: 125, column: 1, scope: !5412)
!5643 = !{i64 2147601483, i64 2147601526, i64 2147601566}
!5644 = !DILocation(line: 126, column: 1, scope: !5412)
!5645 = !{i64 2147601748, i64 2147601791, i64 2147601831}
!5646 = !DILocation(line: 127, column: 1, scope: !5412)
!5647 = !{i64 2147601962, i64 2147602005, i64 2147602045}
!5648 = !DILocation(line: 128, column: 1, scope: !5412)
!5649 = !{i64 2147602137, i64 2147602180, i64 2147602220}
!5650 = !DILocation(line: 129, column: 1, scope: !5412)
!5651 = !{i64 2147602391, i64 2147602434, i64 2147602474}
!5652 = !DILocation(line: 130, column: 1, scope: !5412)
!5653 = !{i64 2147602590, i64 2147602633, i64 2147602673}
!5654 = !DILocation(line: 131, column: 1, scope: !5412)
!5655 = !{i64 2147602832, i64 2147602875, i64 2147602915}
!5656 = !DILocation(line: 132, column: 1, scope: !5412)
!5657 = !{i64 2147602995, i64 2147603038, i64 2147603078}
!5658 = !DILocation(line: 133, column: 1, scope: !5412)
!5659 = !{i64 2147603182, i64 2147603225, i64 2147603265}
!5660 = !DILocation(line: 134, column: 1, scope: !5412)
!5661 = !{i64 2147607451, i64 2147607494, i64 2147607534}
!5662 = !DILocation(line: 135, column: 1, scope: !5412)
!5663 = !{i64 2147607647, i64 2147607690, i64 2147607730}
!5664 = !DILocation(line: 136, column: 1, scope: !5412)
!5665 = !{i64 2147607840, i64 2147607883, i64 2147607923}
!5666 = !DILocation(line: 137, column: 1, scope: !5412)
!5667 = !{i64 2147608023, i64 2147608066, i64 2147608106}
!5668 = !DILocation(line: 138, column: 1, scope: !5412)
!5669 = !{i64 2147608237, i64 2147608280, i64 2147608320}
!5670 = !DILocation(line: 139, column: 1, scope: !5412)
!5671 = !{i64 2147608448, i64 2147608491, i64 2147608531}
!5672 = !DILocation(line: 140, column: 1, scope: !5412)
!5673 = !{i64 2147608668, i64 2147608711, i64 2147608751}
!5674 = !DILocation(line: 141, column: 1, scope: !5412)
!5675 = !{i64 2147608875, i64 2147608918, i64 2147608958}
!5676 = !DILocation(line: 142, column: 1, scope: !5412)
!5677 = !{i64 2147609148, i64 2147609191, i64 2147609231}
!5678 = !DILocation(line: 143, column: 1, scope: !5412)
!5679 = !{i64 2147609396, i64 2147609439, i64 2147609479}
!5680 = !DILocation(line: 144, column: 1, scope: !5412)
!5681 = !{i64 2147609595, i64 2147609638, i64 2147609678}
!5682 = !DILocation(line: 145, column: 1, scope: !5412)
!5683 = !{i64 2147609830, i64 2147609873, i64 2147609913}
!5684 = !DILocation(line: 146, column: 1, scope: !5412)
!5685 = !{i64 2147610080, i64 2147610123, i64 2147610163}
!5686 = !DILocation(line: 147, column: 1, scope: !5412)
!5687 = !{i64 2147610282, i64 2147610325, i64 2147610365}
!5688 = !DILocation(line: 148, column: 1, scope: !5412)
!5689 = !{i64 2147610505, i64 2147610548, i64 2147610588}
!5690 = !DILocation(line: 149, column: 1, scope: !5412)
!5691 = !{i64 2147610719, i64 2147610762, i64 2147610802}
!5692 = !DILocation(line: 150, column: 1, scope: !5412)
!5693 = !{i64 2147610963, i64 2147611006, i64 2147611046}
!5694 = !DILocation(line: 151, column: 1, scope: !5412)
!5695 = !{i64 2147611192, i64 2147611235, i64 2147611275}
!5696 = !DILocation(line: 152, column: 1, scope: !5412)
!5697 = !{i64 2147611421, i64 2147611464, i64 2147611504}
!5698 = !DILocation(line: 153, column: 1, scope: !5412)
!5699 = !{i64 2147611629, i64 2147611672, i64 2147611712}
!5700 = !DILocation(line: 154, column: 1, scope: !5412)
!5701 = !{i64 2147611867, i64 2147611910, i64 2147611950}
!5702 = !DILocation(line: 155, column: 1, scope: !5412)
!5703 = !{i64 2147612093, i64 2147612136, i64 2147612176}
!5704 = !DILocation(line: 156, column: 1, scope: !5412)
!5705 = !{i64 2147612352, i64 2147612395, i64 2147612435}
!5706 = !DILocation(line: 157, column: 1, scope: !5412)
!5707 = !{i64 2147612572, i64 2147612615, i64 2147612655}
!5708 = !DILocation(line: 158, column: 1, scope: !5412)
!5709 = !{i64 2147612804, i64 2147612847, i64 2147612887}
!5710 = !DILocation(line: 159, column: 1, scope: !5412)
!5711 = !{i64 2147613045, i64 2147613088, i64 2147613128}
!5712 = !DILocation(line: 160, column: 1, scope: !5412)
!5713 = !{i64 2147613286, i64 2147613329, i64 2147613369}
!5714 = !DILocation(line: 161, column: 1, scope: !5412)
!5715 = !{i64 2147613509, i64 2147613552, i64 2147613592}
!5716 = !DILocation(line: 162, column: 1, scope: !5412)
!5717 = !{i64 2147613726, i64 2147613769, i64 2147613809}
!5718 = !DILocation(line: 163, column: 1, scope: !5412)
!5719 = !{i64 2147613967, i64 2147614010, i64 2147614050}
!5720 = !DILocation(line: 164, column: 1, scope: !5412)
!5721 = !{i64 2147614154, i64 2147614197, i64 2147614237}
!5722 = !DILocation(line: 165, column: 1, scope: !5412)
!5723 = !{i64 2147614341, i64 2147614384, i64 2147614424}
!5724 = !DILocation(line: 166, column: 1, scope: !5412)
!5725 = !{i64 2147614504, i64 2147614547, i64 2147614587}
!5726 = !DILocation(line: 167, column: 1, scope: !5412)
!5727 = !{i64 2147614709, i64 2147614752, i64 2147614792}
!5728 = !DILocation(line: 168, column: 1, scope: !5412)
!5729 = !{i64 2147614902, i64 2147614945, i64 2147614985}
!5730 = !DILocation(line: 169, column: 1, scope: !5412)
!5731 = !{i64 2147615161, i64 2147615204, i64 2147615244}
!5732 = !DILocation(line: 170, column: 1, scope: !5412)
!5733 = !{i64 2147615384, i64 2147615427, i64 2147615467}
!5734 = !DILocation(line: 171, column: 1, scope: !5412)
!5735 = !{i64 2147615613, i64 2147615656, i64 2147615696}
!5736 = !DILocation(line: 172, column: 1, scope: !5412)
!5737 = !{i64 2147615827, i64 2147615870, i64 2147615910}
!5738 = !DILocation(line: 173, column: 1, scope: !5412)
!5739 = !{i64 2147620090, i64 2147620133, i64 2147620173}
!5740 = !DILocation(line: 174, column: 1, scope: !5412)
!5741 = !{i64 2147620286, i64 2147620329, i64 2147620369}
!5742 = !DILocation(line: 175, column: 1, scope: !5412)
!5743 = !{i64 2147620498, i64 2147620541, i64 2147620581}
!5744 = !DILocation(line: 176, column: 1, scope: !5412)
!5745 = !{i64 2147620719, i64 2147620762, i64 2147620802}
!5746 = !DILocation(line: 177, column: 1, scope: !5412)
!5747 = !{i64 2147620933, i64 2147620976, i64 2147621016}
!5748 = !DILocation(line: 178, column: 1, scope: !5412)
!5749 = !{i64 2147621123, i64 2147621166, i64 2147621206}
!5750 = !DILocation(line: 179, column: 1, scope: !5412)
!5751 = !{i64 2147621322, i64 2147621365, i64 2147621405}
!5752 = !DILocation(line: 180, column: 1, scope: !5412)
!5753 = !{i64 2147621527, i64 2147621570, i64 2147621610}
!5754 = !DILocation(line: 181, column: 1, scope: !5412)
!5755 = !{i64 2147621747, i64 2147621790, i64 2147621830}
!5756 = !DILocation(line: 182, column: 1, scope: !5412)
!5757 = !{i64 2147621948, i64 2147621991, i64 2147622031}
!5758 = !DILocation(line: 183, column: 1, scope: !5412)
!5759 = !{i64 2147622147, i64 2147622190, i64 2147622230}
!5760 = !DILocation(line: 184, column: 1, scope: !5412)
!5761 = !{i64 2147622352, i64 2147622395, i64 2147622435}
!5762 = !DILocation(line: 185, column: 1, scope: !5412)
!5763 = !{i64 2147622521, i64 2147622564, i64 2147622604}
!5764 = !DILocation(line: 186, column: 1, scope: !5412)
!5765 = !{i64 2147622705, i64 2147622748, i64 2147622788}
!5766 = !DILocation(line: 187, column: 1, scope: !5412)
!5767 = !{i64 2147622889, i64 2147622932, i64 2147622972}
!5768 = !DILocation(line: 188, column: 1, scope: !5412)
!5769 = !{i64 2147623076, i64 2147623119, i64 2147623159}
!5770 = !DILocation(line: 189, column: 1, scope: !5412)
!5771 = !{i64 2147623260, i64 2147623303, i64 2147623343}
!5772 = !DILocation(line: 190, column: 1, scope: !5412)
!5773 = !{i64 2147623447, i64 2147623490, i64 2147623530}
!5774 = !DILocation(line: 191, column: 1, scope: !5412)
!5775 = !{i64 2147623659, i64 2147623702, i64 2147623742}
!5776 = !DILocation(line: 192, column: 1, scope: !5412)
!5777 = !{i64 2147623897, i64 2147623940, i64 2147623980}
!5778 = !DILocation(line: 193, column: 1, scope: !5412)
!5779 = !{i64 2147624127, i64 2147624170, i64 2147624210}
!5780 = !DILocation(line: 194, column: 1, scope: !5412)
!5781 = !{i64 2147624356, i64 2147624399, i64 2147624439}
!5782 = !DILocation(line: 195, column: 1, scope: !5412)
!5783 = !{i64 2147624543, i64 2147624586, i64 2147624626}
!5784 = !DILocation(line: 196, column: 1, scope: !5412)
!5785 = !{i64 2147624739, i64 2147624782, i64 2147624822}
!5786 = !DILocation(line: 197, column: 1, scope: !5412)
!5787 = !{i64 2147624947, i64 2147624990, i64 2147625030}
!5788 = !DILocation(line: 198, column: 1, scope: !5412)
!5789 = !{i64 2147625159, i64 2147625202, i64 2147625242}
!5790 = !DILocation(line: 199, column: 1, scope: !5412)
!5791 = !{i64 2147625358, i64 2147625401, i64 2147625441}
!5792 = !DILocation(line: 200, column: 1, scope: !5412)
!5793 = !{i64 2147625596, i64 2147625639, i64 2147625679}
!5794 = !DILocation(line: 201, column: 1, scope: !5412)
!5795 = !{i64 2147625792, i64 2147625835, i64 2147625875}
!5796 = !DILocation(line: 202, column: 1, scope: !5412)
!5797 = !{i64 2147625994, i64 2147626037, i64 2147626077}
!5798 = !DILocation(line: 203, column: 1, scope: !5412)
!5799 = !{i64 2147626187, i64 2147626230, i64 2147626270}
!5800 = !DILocation(line: 204, column: 1, scope: !5412)
!5801 = !{i64 2147626421, i64 2147626464, i64 2147626504}
!5802 = !DILocation(line: 205, column: 1, scope: !5412)
!5803 = !{i64 2147626584, i64 2147626627, i64 2147626667}
!5804 = !DILocation(line: 206, column: 1, scope: !5412)
!5805 = !{i64 2147626823, i64 2147626866, i64 2147626906}
!5806 = !DILocation(line: 207, column: 1, scope: !5412)
!5807 = !{i64 2147627062, i64 2147627105, i64 2147627145}
!5808 = !DILocation(line: 208, column: 1, scope: !5412)
!5809 = !{i64 2147627298, i64 2147627341, i64 2147627381}
!5810 = !DILocation(line: 209, column: 1, scope: !5412)
!5811 = !{i64 2147627528, i64 2147627571, i64 2147627611}
!5812 = !DILocation(line: 210, column: 1, scope: !5412)
!5813 = !{i64 2147627715, i64 2147627758, i64 2147627798}
!5814 = !DILocation(line: 211, column: 1, scope: !5412)
!5815 = !{i64 2147627914, i64 2147627957, i64 2147627997}
!5816 = !DILocation(line: 212, column: 1, scope: !5412)
!5817 = !{i64 2147628185, i64 2147628228, i64 2147628268}
!5818 = !DILocation(line: 213, column: 1, scope: !5412)
!5819 = !{i64 2147628360, i64 2147628403, i64 2147628443}
!5820 = !DILocation(line: 214, column: 1, scope: !5412)
!5821 = !{i64 2147628594, i64 2147628637, i64 2147628677}
!5822 = !DILocation(line: 215, column: 1, scope: !5412)
!5823 = !{i64 2147628802, i64 2147628845, i64 2147628885}
!5824 = !DILocation(line: 216, column: 1, scope: !5412)
!5825 = !{i64 2147629020, i64 2147629063, i64 2147629103}
!5826 = !DILocation(line: 217, column: 1, scope: !5412)
!5827 = !{i64 2147629210, i64 2147629253, i64 2147629293}
!5828 = !DILocation(line: 218, column: 1, scope: !5412)
!5829 = !{i64 2147633503, i64 2147633546, i64 2147633586}
!5830 = !DILocation(line: 219, column: 1, scope: !5412)
!5831 = !{i64 2147633723, i64 2147633766, i64 2147633806}
!5832 = !DILocation(line: 220, column: 1, scope: !5412)
!5833 = !{i64 2147633919, i64 2147633962, i64 2147634002}
!5834 = !DILocation(line: 221, column: 1, scope: !5412)
!5835 = !{i64 2147634125, i64 2147634168, i64 2147634208}
!5836 = !DILocation(line: 222, column: 1, scope: !5412)
!5837 = !{i64 2147634330, i64 2147634373, i64 2147634413}
!5838 = !DILocation(line: 223, column: 1, scope: !5412)
!5839 = !{i64 2147634556, i64 2147634599, i64 2147634639}
!5840 = !DILocation(line: 224, column: 1, scope: !5412)
!5841 = !{i64 2147634764, i64 2147634807, i64 2147634847}
!5842 = !DILocation(line: 225, column: 1, scope: !5412)
!5843 = !{i64 2147634960, i64 2147635003, i64 2147635043}
!5844 = !DILocation(line: 226, column: 1, scope: !5412)
!5845 = !{i64 2147635192, i64 2147635235, i64 2147635275}
!5846 = !DILocation(line: 227, column: 1, scope: !5412)
!5847 = !{i64 2147635376, i64 2147635419, i64 2147635459}
!5848 = !DILocation(line: 228, column: 1, scope: !5412)
!5849 = !{i64 2147635585, i64 2147635628, i64 2147635668}
!5850 = !DILocation(line: 229, column: 1, scope: !5412)
!5851 = !{i64 2147635793, i64 2147635836, i64 2147635876}
!5852 = !DILocation(line: 230, column: 1, scope: !5412)
!5853 = !{i64 2147635989, i64 2147636032, i64 2147636072}
!5854 = !DILocation(line: 231, column: 1, scope: !5412)
!5855 = !{i64 2147636173, i64 2147636216, i64 2147636256}
!5856 = !DILocation(line: 232, column: 1, scope: !5412)
!5857 = !{i64 2147636399, i64 2147636442, i64 2147636482}
!5858 = !DILocation(line: 233, column: 1, scope: !5412)
!5859 = !{i64 2147636625, i64 2147636668, i64 2147636708}
!5860 = !DILocation(line: 234, column: 1, scope: !5412)
!5861 = !{i64 2147636851, i64 2147636894, i64 2147636934}
!5862 = !DILocation(line: 235, column: 1, scope: !5412)
!5863 = !{i64 2147637077, i64 2147637120, i64 2147637160}
!5864 = !DILocation(line: 236, column: 1, scope: !5412)
!5865 = !{i64 2147637303, i64 2147637346, i64 2147637386}
!5866 = !DILocation(line: 237, column: 1, scope: !5412)
!5867 = !{i64 2147637535, i64 2147637578, i64 2147637618}
!5868 = !DILocation(line: 238, column: 1, scope: !5412)
!5869 = !{i64 2147637773, i64 2147637816, i64 2147637856}
!5870 = !DILocation(line: 239, column: 1, scope: !5412)
!5871 = !{i64 2147637993, i64 2147638036, i64 2147638076}
!5872 = !DILocation(line: 240, column: 1, scope: !5412)
!5873 = !{i64 2147638237, i64 2147638280, i64 2147638320}
!5874 = !DILocation(line: 241, column: 1, scope: !5412)
!5875 = !{i64 2147638478, i64 2147638521, i64 2147638561}
!5876 = !DILocation(line: 242, column: 1, scope: !5412)
!5877 = !{i64 2147638713, i64 2147638756, i64 2147638796}
!5878 = !DILocation(line: 243, column: 1, scope: !5412)
!5879 = !{i64 2147638945, i64 2147638988, i64 2147639028}
!5880 = !DILocation(line: 244, column: 1, scope: !5412)
!5881 = !{i64 2147639147, i64 2147639190, i64 2147639230}
!5882 = !DILocation(line: 245, column: 1, scope: !5412)
!5883 = !{i64 2147639397, i64 2147639440, i64 2147639480}
!5884 = !DILocation(line: 246, column: 1, scope: !5412)
!5885 = !{i64 2147639635, i64 2147639678, i64 2147639718}
!5886 = !DILocation(line: 247, column: 1, scope: !5412)
!5887 = !{i64 2147639843, i64 2147639886, i64 2147639926}
!5888 = !DILocation(line: 248, column: 1, scope: !5412)
!5889 = !{i64 2147640039, i64 2147640082, i64 2147640122}
!5890 = !DILocation(line: 249, column: 1, scope: !5412)
!5891 = !{i64 2147640223, i64 2147640266, i64 2147640306}
!5892 = !DILocation(line: 250, column: 1, scope: !5412)
!5893 = !{i64 2147640440, i64 2147640483, i64 2147640523}
!5894 = !DILocation(line: 251, column: 1, scope: !5412)
!5895 = !{i64 2147640645, i64 2147640688, i64 2147640728}
!5896 = !DILocation(line: 252, column: 1, scope: !5412)
!5897 = !{i64 2147640880, i64 2147640923, i64 2147640963}
!5898 = !DILocation(line: 253, column: 1, scope: !5412)
!5899 = !{i64 2147641103, i64 2147641146, i64 2147641186}
!5900 = !DILocation(line: 254, column: 1, scope: !5412)
!5901 = !{i64 2147641326, i64 2147641369, i64 2147641409}
!5902 = !DILocation(line: 255, column: 1, scope: !5412)
!5903 = !{i64 2147641564, i64 2147641607, i64 2147641647}
!5904 = !DILocation(line: 256, column: 1, scope: !5412)
!5905 = !{i64 2147641802, i64 2147641845, i64 2147641885}
!5906 = !DILocation(line: 257, column: 1, scope: !5412)
!5907 = !{i64 2147646080, i64 2147646123, i64 2147646163}
!5908 = !DILocation(line: 258, column: 1, scope: !5412)
!5909 = !{i64 2147646285, i64 2147646328, i64 2147646368}
!5910 = !DILocation(line: 259, column: 1, scope: !5412)
!5911 = !{i64 2147646478, i64 2147646521, i64 2147646561}
!5912 = !DILocation(line: 260, column: 1, scope: !5412)
!5913 = !{i64 2147646731, i64 2147646774, i64 2147646814}
!5914 = !DILocation(line: 261, column: 1, scope: !5412)
!5915 = !{i64 2147646939, i64 2147646982, i64 2147647022}
!5916 = !DILocation(line: 262, column: 1, scope: !5412)
!5917 = !{i64 2147647135, i64 2147647178, i64 2147647218}
!5918 = !DILocation(line: 263, column: 1, scope: !5412)
!5919 = !{i64 2147647349, i64 2147647392, i64 2147647432}
!5920 = !DILocation(line: 264, column: 1, scope: !5412)
!5921 = !{i64 2147647557, i64 2147647600, i64 2147647640}
!5922 = !DILocation(line: 265, column: 1, scope: !5412)
!5923 = !{i64 2147647747, i64 2147647790, i64 2147647830}
!5924 = !DILocation(line: 266, column: 1, scope: !5412)
!5925 = !{i64 2147647961, i64 2147648004, i64 2147648044}
!5926 = !DILocation(line: 267, column: 1, scope: !5412)
!5927 = !{i64 2147648223, i64 2147648266, i64 2147648306}
!5928 = !DILocation(line: 268, column: 1, scope: !5412)
!5929 = !{i64 2147648434, i64 2147648477, i64 2147648517}
!5930 = !DILocation(line: 269, column: 1, scope: !5412)
!5931 = !{i64 2147648678, i64 2147648721, i64 2147648761}
!5932 = !DILocation(line: 270, column: 1, scope: !5412)
!5933 = !{i64 2147648889, i64 2147648932, i64 2147648972}
!5934 = !DILocation(line: 271, column: 1, scope: !5412)
!5935 = !{i64 2147649118, i64 2147649161, i64 2147649201}
!5936 = !DILocation(line: 272, column: 1, scope: !5412)
!5937 = !{i64 2147649383, i64 2147649426, i64 2147649466}
!5938 = !DILocation(line: 273, column: 1, scope: !5412)
!5939 = !{i64 2147649588, i64 2147649631, i64 2147649671}
!5940 = !DILocation(line: 274, column: 1, scope: !5412)
!5941 = !{i64 2147649784, i64 2147649827, i64 2147649867}
!5942 = !DILocation(line: 275, column: 1, scope: !5412)
!5943 = !{i64 2147650007, i64 2147650050, i64 2147650090}
!5944 = !DILocation(line: 276, column: 1, scope: !5412)
!5945 = !{i64 2147650170, i64 2147650213, i64 2147650253}
!5946 = !DILocation(line: 277, column: 1, scope: !5412)
!5947 = !{i64 2147650375, i64 2147650418, i64 2147650458}
!5948 = !DILocation(line: 278, column: 1, scope: !5412)
!5949 = !{i64 2147650595, i64 2147650638, i64 2147650678}
!5950 = !DILocation(line: 279, column: 1, scope: !5412)
!5951 = !{i64 2147650809, i64 2147650852, i64 2147650892}
!5952 = !DILocation(line: 280, column: 1, scope: !5412)
!5953 = !{i64 2147651053, i64 2147651096, i64 2147651136}
!5954 = !DILocation(line: 281, column: 1, scope: !5412)
!5955 = !{i64 2147651285, i64 2147651328, i64 2147651368}
!5956 = !DILocation(line: 282, column: 1, scope: !5412)
!5957 = !{i64 2147651499, i64 2147651542, i64 2147651582}
!5958 = !DILocation(line: 283, column: 1, scope: !5412)
!5959 = !{i64 2147651710, i64 2147651753, i64 2147651793}
!5960 = !DILocation(line: 284, column: 1, scope: !5412)
!5961 = !{i64 2147651903, i64 2147651946, i64 2147651986}
!5962 = !DILocation(line: 285, column: 1, scope: !5412)
!5963 = !{i64 2147652102, i64 2147652145, i64 2147652185}
!5964 = !DILocation(line: 286, column: 1, scope: !5412)
!5965 = !{i64 2147652274, i64 2147652317, i64 2147652357}
!5966 = !DILocation(line: 287, column: 1, scope: !5412)
!5967 = !{i64 2147652467, i64 2147652510, i64 2147652550}
!5968 = !DILocation(line: 288, column: 1, scope: !5412)
!5969 = !{i64 2147652639, i64 2147652682, i64 2147652722}
!5970 = !DILocation(line: 289, column: 1, scope: !5412)
!5971 = !{i64 2147652829, i64 2147652872, i64 2147652912}
!5972 = !DILocation(line: 290, column: 1, scope: !5412)
!5973 = !{i64 2147653022, i64 2147653065, i64 2147653105}
!5974 = !DILocation(line: 291, column: 1, scope: !5412)
!5975 = !{i64 2147653218, i64 2147653261, i64 2147653301}
!5976 = !DILocation(line: 292, column: 1, scope: !5412)
!5977 = !{i64 2147653381, i64 2147653424, i64 2147653464}
!5978 = !DILocation(line: 293, column: 1, scope: !5412)
!5979 = !{i64 2147653583, i64 2147653626, i64 2147653666}
!5980 = !DILocation(line: 294, column: 1, scope: !5412)
!5981 = !{i64 2147653794, i64 2147653837, i64 2147653877}
!5982 = !DILocation(line: 295, column: 1, scope: !5412)
!5983 = !{i64 2147653999, i64 2147654042, i64 2147654082}
!5984 = !DILocation(line: 296, column: 1, scope: !5412)
!5985 = !{i64 2147654207, i64 2147654250, i64 2147654290}
!5986 = !DILocation(line: 297, column: 1, scope: !5412)
!5987 = !{i64 2147654400, i64 2147654443, i64 2147654483}
!5988 = !DILocation(line: 298, column: 1, scope: !5412)
!5989 = !{i64 2147654587, i64 2147654630, i64 2147654670}
!5990 = !DILocation(line: 299, column: 1, scope: !5412)
!5991 = !{i64 2147654753, i64 2147654796, i64 2147654836}
!5992 = !DILocation(line: 300, column: 1, scope: !5412)
!5993 = !{i64 2147654980, i64 2147655023, i64 2147655063}
!5994 = !DILocation(line: 301, column: 1, scope: !5412)
!5995 = !{i64 2147659258, i64 2147659301, i64 2147659341}
!5996 = !DILocation(line: 302, column: 1, scope: !5412)
!5997 = !{i64 2147659484, i64 2147659527, i64 2147659567}
!5998 = !DILocation(line: 303, column: 1, scope: !5412)
!5999 = !{i64 2147659689, i64 2147659732, i64 2147659772}
!6000 = !DILocation(line: 304, column: 1, scope: !5412)
!6001 = !{i64 2147659906, i64 2147659949, i64 2147659989}
!6002 = !DILocation(line: 305, column: 1, scope: !5412)
!6003 = !{i64 2147660198, i64 2147660241, i64 2147660281}
!6004 = !DILocation(line: 306, column: 1, scope: !5412)
!6005 = !{i64 2147660430, i64 2147660473, i64 2147660513}
!6006 = !DILocation(line: 307, column: 1, scope: !5412)
!6007 = !{i64 2147660647, i64 2147660690, i64 2147660730}
!6008 = !DILocation(line: 308, column: 1, scope: !5412)
!6009 = !{i64 2147660854, i64 2147660897, i64 2147660937}
!6010 = !DILocation(line: 309, column: 1, scope: !5412)
!6011 = !{i64 2147661055, i64 2147661098, i64 2147661138}
!6012 = !DILocation(line: 310, column: 1, scope: !5412)
!6013 = !{i64 2147661287, i64 2147661330, i64 2147661370}
!6014 = !DILocation(line: 311, column: 1, scope: !5412)
!6015 = !{i64 2147661495, i64 2147661538, i64 2147661578}
!6016 = !DILocation(line: 312, column: 1, scope: !5412)
!6017 = !{i64 2147661685, i64 2147661728, i64 2147661768}
!6018 = !DILocation(line: 313, column: 1, scope: !5412)
!6019 = !{i64 2147661911, i64 2147661954, i64 2147661994}
!6020 = !DILocation(line: 314, column: 1, scope: !5412)
!6021 = !{i64 2147662100, i64 2147662143, i64 2147662183}
!6022 = !DILocation(line: 315, column: 1, scope: !5412)
!6023 = !{i64 2147662371, i64 2147662414, i64 2147662454}
!6024 = !DILocation(line: 316, column: 1, scope: !5412)
!6025 = !{i64 2147662591, i64 2147662634, i64 2147662674}
!6026 = !DILocation(line: 317, column: 1, scope: !5412)
!6027 = !{i64 2147662844, i64 2147662887, i64 2147662927}
!6028 = !DILocation(line: 318, column: 1, scope: !5412)
!6029 = !{i64 2147663052, i64 2147663095, i64 2147663135}
!6030 = !DILocation(line: 319, column: 1, scope: !5412)
!6031 = !{i64 2147663284, i64 2147663327, i64 2147663367}
!6032 = !DILocation(line: 320, column: 1, scope: !5412)
!6033 = !{i64 2147663495, i64 2147663538, i64 2147663578}
!6034 = !DILocation(line: 321, column: 1, scope: !5412)
!6035 = !{i64 2147663685, i64 2147663728, i64 2147663768}
!6036 = !DILocation(line: 322, column: 1, scope: !5412)
!6037 = !{i64 2147663899, i64 2147663942, i64 2147663982}
!6038 = !DILocation(line: 323, column: 1, scope: !5412)
!6039 = !{i64 2147664098, i64 2147664141, i64 2147664181}
!6040 = !DILocation(line: 324, column: 1, scope: !5412)
!6041 = !{i64 2147664285, i64 2147664328, i64 2147664368}
!6042 = !DILocation(line: 325, column: 1, scope: !5412)
!6043 = !{i64 2147664493, i64 2147664536, i64 2147664576}
!6044 = !DILocation(line: 326, column: 1, scope: !5412)
!6045 = !{i64 2147664722, i64 2147664765, i64 2147664805}
!6046 = !DILocation(line: 327, column: 1, scope: !5412)
!6047 = !{i64 2147664924, i64 2147664967, i64 2147665007}
!6048 = !DILocation(line: 328, column: 1, scope: !5412)
!6049 = !{i64 2147665123, i64 2147665166, i64 2147665206}
!6050 = !DILocation(line: 329, column: 1, scope: !5412)
!6051 = !{i64 2147665340, i64 2147665383, i64 2147665423}
!6052 = !DILocation(line: 331, column: 1, scope: !5412)
!6053 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !324, file: !324, line: 30, type: !331, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6054)
!6054 = !{!6055, !6056}
!6055 = !DILocalVariable(name: "arg", arg: 1, scope: !6053, file: !324, line: 30, type: !333)
!6056 = !DILocalVariable(name: "key", scope: !6053, file: !324, line: 32, type: !110)
!6057 = !DILocation(line: 0, scope: !6053)
!6058 = !DILocation(line: 37, column: 2, scope: !6053)
!6059 = !DILocation(line: 38, column: 2, scope: !6053)
!6060 = !DILocation(line: 55, column: 2, scope: !6061, inlinedAt: !6068)
!6061 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6062, file: !6062, line: 42, type: !6063, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6065)
!6062 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6063 = !DISubroutineType(types: !6064)
!6064 = !{!32}
!6065 = !{!6066, !6067}
!6066 = !DILocalVariable(name: "key", scope: !6061, file: !6062, line: 44, type: !32)
!6067 = !DILocalVariable(name: "tmp", scope: !6061, file: !6062, line: 53, type: !32)
!6068 = distinct !DILocation(line: 40, column: 8, scope: !6053)
!6069 = !{i64 1835426}
!6070 = !DILocation(line: 0, scope: !6061, inlinedAt: !6068)
!6071 = !DILocalVariable(name: "key", arg: 1, scope: !6072, file: !6062, line: 84, type: !32)
!6072 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6062, file: !6062, line: 84, type: !6073, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6075)
!6073 = !DISubroutineType(types: !6074)
!6074 = !{null, !32}
!6075 = !{!6071}
!6076 = !DILocation(line: 0, scope: !6072, inlinedAt: !6077)
!6077 = distinct !DILocation(line: 47, column: 2, scope: !6053)
!6078 = !DILocation(line: 95, column: 2, scope: !6072, inlinedAt: !6077)
!6079 = !{i64 1836243}
!6080 = !DILocation(line: 51, column: 18, scope: !6053)
!6081 = !DILocation(line: 53, column: 2, scope: !6053)
!6082 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6083, file: !6083, line: 1609, type: !3070, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2002)
!6083 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6084 = !DILocation(line: 1611, column: 3, scope: !6082)
!6085 = !DILocation(line: 1612, column: 1, scope: !6082)
!6086 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6083, file: !6083, line: 1629, type: !3070, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2002)
!6087 = !DILocation(line: 1631, column: 3, scope: !6086)
!6088 = !DILocation(line: 1632, column: 1, scope: !6086)
!6089 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !361, file: !361, line: 26, type: !367, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !6090)
!6090 = !{!6091}
!6091 = !DILocalVariable(name: "dev", arg: 1, scope: !6089, file: !361, line: 26, type: !369)
!6092 = !DILocation(line: 0, scope: !6089)
!6093 = !DILocation(line: 68, column: 2, scope: !6089)
!6094 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6095, file: !6095, line: 14, type: !4366, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !6096)
!6095 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6096 = !{!6097, !6098}
!6097 = !DILocalVariable(name: "fmt", arg: 1, scope: !6094, file: !6095, line: 14, type: !279)
!6098 = !DILocalVariable(name: "ap", scope: !6094, file: !6095, line: 16, type: !6099)
!6099 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3372, line: 99, baseType: !6100)
!6100 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3372, line: 40, baseType: !6101)
!6101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6095, baseType: !6102)
!6102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6103)
!6103 = !{!6104}
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6102, file: !6095, line: 16, baseType: !107, size: 32)
!6105 = !DILocation(line: 0, scope: !6094)
!6106 = !DILocation(line: 16, column: 2, scope: !6094)
!6107 = !DILocation(line: 16, column: 10, scope: !6094)
!6108 = !DILocation(line: 18, column: 2, scope: !6094)
!6109 = !DILocation(line: 19, column: 2, scope: !6094)
!6110 = !DILocation(line: 20, column: 2, scope: !6094)
!6111 = !DILocation(line: 21, column: 1, scope: !6094)
!6112 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6095, file: !6095, line: 23, type: !6113, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !6115)
!6113 = !DISubroutineType(types: !6114)
!6114 = !{null, !279, !6099}
!6115 = !{!6116, !6117}
!6116 = !DILocalVariable(name: "fmt", arg: 1, scope: !6112, file: !6095, line: 23, type: !279)
!6117 = !DILocalVariable(name: "ap", arg: 2, scope: !6112, file: !6095, line: 23, type: !6099)
!6118 = !DILocation(line: 0, scope: !6112)
!6119 = !DILocation(line: 25, column: 2, scope: !6112)
!6120 = !DILocation(line: 26, column: 1, scope: !6112)
!6121 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6095, file: !6095, line: 52, type: !6122, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !6124)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{null, !109, !13, !234}
!6124 = !{!6125, !6126, !6127, !6128}
!6125 = !DILocalVariable(name: "level", arg: 1, scope: !6121, file: !6095, line: 52, type: !109)
!6126 = !DILocalVariable(name: "data", arg: 2, scope: !6121, file: !6095, line: 52, type: !13)
!6127 = !DILocalVariable(name: "size", arg: 3, scope: !6121, file: !6095, line: 52, type: !234)
!6128 = !DILocalVariable(name: "data_buffer", scope: !6121, file: !6095, line: 54, type: !279)
!6129 = !DILocation(line: 0, scope: !6121)
!6130 = !DILocation(line: 55, column: 14, scope: !6121)
!6131 = !DILocation(line: 55, column: 2, scope: !6121)
!6132 = !DILocation(line: 56, column: 3, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6121, file: !6095, line: 55, column: 20)
!6134 = !DILocation(line: 57, column: 3, scope: !6133)
!6135 = !DILocation(line: 59, column: 7, scope: !6133)
!6136 = distinct !{!6136, !6131, !6137}
!6137 = !DILocation(line: 65, column: 2, scope: !6121)
!6138 = !DILocation(line: 66, column: 1, scope: !6121)
!6139 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6140, file: !6140, line: 175, type: !6141, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !6143)
!6140 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6141 = !DISubroutineType(types: !6142)
!6142 = !{!150, !109}
!6143 = !{!6144}
!6144 = !DILocalVariable(name: "level", arg: 1, scope: !6139, file: !6140, line: 175, type: !109)
!6145 = !DILocation(line: 0, scope: !6139)
!6146 = !DILocation(line: 177, column: 2, scope: !6139)
!6147 = !DILocation(line: 189, column: 1, scope: !6139)
!6148 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6095, file: !6095, line: 28, type: !6149, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !6151)
!6149 = !DISubroutineType(types: !6150)
!6150 = !{null, !279, !234}
!6151 = !{!6152, !6153, !6154, !6156, !6158}
!6152 = !DILocalVariable(name: "data", arg: 1, scope: !6148, file: !6095, line: 28, type: !279)
!6153 = !DILocalVariable(name: "length", arg: 2, scope: !6148, file: !6095, line: 28, type: !234)
!6154 = !DILocalVariable(name: "i", scope: !6155, file: !6095, line: 30, type: !234)
!6155 = distinct !DILexicalBlock(scope: !6148, file: !6095, line: 30, column: 2)
!6156 = !DILocalVariable(name: "i", scope: !6157, file: !6095, line: 40, type: !234)
!6157 = distinct !DILexicalBlock(scope: !6148, file: !6095, line: 40, column: 2)
!6158 = !DILocalVariable(name: "c", scope: !6159, file: !6095, line: 42, type: !181)
!6159 = distinct !DILexicalBlock(scope: !6160, file: !6095, line: 41, column: 19)
!6160 = distinct !DILexicalBlock(scope: !6161, file: !6095, line: 41, column: 7)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !6095, line: 40, column: 54)
!6162 = distinct !DILexicalBlock(scope: !6157, file: !6095, line: 40, column: 2)
!6163 = !DILocation(line: 0, scope: !6148)
!6164 = !DILocation(line: 0, scope: !6155)
!6165 = !DILocation(line: 30, column: 2, scope: !6155)
!6166 = !DILocation(line: 38, column: 2, scope: !6148)
!6167 = !DILocation(line: 0, scope: !6157)
!6168 = !DILocation(line: 40, column: 2, scope: !6157)
!6169 = !DILocation(line: 31, column: 9, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !6095, line: 31, column: 7)
!6171 = distinct !DILexicalBlock(scope: !6172, file: !6095, line: 30, column: 54)
!6172 = distinct !DILexicalBlock(scope: !6155, file: !6095, line: 30, column: 2)
!6173 = !DILocation(line: 31, column: 7, scope: !6171)
!6174 = !DILocation(line: 32, column: 35, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6170, file: !6095, line: 31, column: 19)
!6176 = !DILocation(line: 32, column: 20, scope: !6175)
!6177 = !DILocation(line: 32, column: 4, scope: !6175)
!6178 = !DILocation(line: 33, column: 3, scope: !6175)
!6179 = !DILocation(line: 34, column: 4, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6170, file: !6095, line: 33, column: 10)
!6181 = !DILocation(line: 30, column: 50, scope: !6172)
!6182 = !DILocation(line: 30, column: 24, scope: !6172)
!6183 = distinct !{!6183, !6165, !6184}
!6184 = !DILocation(line: 36, column: 2, scope: !6155)
!6185 = !DILocation(line: 49, column: 2, scope: !6148)
!6186 = !DILocation(line: 50, column: 1, scope: !6148)
!6187 = !DILocation(line: 41, column: 9, scope: !6160)
!6188 = !DILocation(line: 41, column: 7, scope: !6161)
!6189 = !DILocation(line: 42, column: 22, scope: !6159)
!6190 = !DILocation(line: 0, scope: !6159)
!6191 = !DILocation(line: 44, column: 25, scope: !6159)
!6192 = !DILocation(line: 44, column: 17, scope: !6159)
!6193 = !DILocation(line: 44, column: 33, scope: !6159)
!6194 = !DILocation(line: 44, column: 4, scope: !6159)
!6195 = !DILocation(line: 45, column: 3, scope: !6159)
!6196 = !DILocation(line: 46, column: 4, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6160, file: !6095, line: 45, column: 10)
!6198 = !DILocation(line: 40, column: 50, scope: !6162)
!6199 = !DILocation(line: 40, column: 24, scope: !6162)
!6200 = distinct !{!6200, !6168, !6201}
!6201 = !DILocation(line: 48, column: 2, scope: !6157)
!6202 = distinct !DISubprogram(name: "isprint", scope: !5156, file: !5156, line: 37, type: !303, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !6203)
!6203 = !{!6204}
!6204 = !DILocalVariable(name: "c", arg: 1, scope: !6202, file: !5156, line: 37, type: !109)
!6205 = !DILocation(line: 0, scope: !6202)
!6206 = !DILocation(line: 39, column: 38, scope: !6202)
!6207 = !DILocation(line: 39, column: 2, scope: !6202)
!6208 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6209, file: !6209, line: 57, type: !6210, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !6256)
!6209 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6210 = !DISubroutineType(types: !6211)
!6211 = !{null, !32, !6212}
!6212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6213, size: 32)
!6213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6214)
!6214 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2650, line: 141, baseType: !6215)
!6215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2650, line: 97, size: 256, elements: !6216)
!6216 = !{!6217}
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6215, file: !2650, line: 107, baseType: !6218, size: 256)
!6218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2650, line: 98, size: 256, elements: !6219)
!6219 = !{!6220, !6225, !6230, !6235, !6240, !6245, !6250, !6255}
!6220 = !DIDerivedType(tag: DW_TAG_member, scope: !6218, file: !2650, line: 99, baseType: !6221, size: 32)
!6221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6218, file: !2650, line: 99, size: 32, elements: !6222)
!6222 = !{!6223, !6224}
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6221, file: !2650, line: 99, baseType: !110, size: 32)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6221, file: !2650, line: 99, baseType: !110, size: 32)
!6225 = !DIDerivedType(tag: DW_TAG_member, scope: !6218, file: !2650, line: 100, baseType: !6226, size: 32, offset: 32)
!6226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6218, file: !2650, line: 100, size: 32, elements: !6227)
!6227 = !{!6228, !6229}
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6226, file: !2650, line: 100, baseType: !110, size: 32)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6226, file: !2650, line: 100, baseType: !110, size: 32)
!6230 = !DIDerivedType(tag: DW_TAG_member, scope: !6218, file: !2650, line: 101, baseType: !6231, size: 32, offset: 64)
!6231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6218, file: !2650, line: 101, size: 32, elements: !6232)
!6232 = !{!6233, !6234}
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6231, file: !2650, line: 101, baseType: !110, size: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6231, file: !2650, line: 101, baseType: !110, size: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, scope: !6218, file: !2650, line: 102, baseType: !6236, size: 32, offset: 96)
!6236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6218, file: !2650, line: 102, size: 32, elements: !6237)
!6237 = !{!6238, !6239}
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6236, file: !2650, line: 102, baseType: !110, size: 32)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6236, file: !2650, line: 102, baseType: !110, size: 32)
!6240 = !DIDerivedType(tag: DW_TAG_member, scope: !6218, file: !2650, line: 103, baseType: !6241, size: 32, offset: 128)
!6241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6218, file: !2650, line: 103, size: 32, elements: !6242)
!6242 = !{!6243, !6244}
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6241, file: !2650, line: 103, baseType: !110, size: 32)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6241, file: !2650, line: 103, baseType: !110, size: 32)
!6245 = !DIDerivedType(tag: DW_TAG_member, scope: !6218, file: !2650, line: 104, baseType: !6246, size: 32, offset: 160)
!6246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6218, file: !2650, line: 104, size: 32, elements: !6247)
!6247 = !{!6248, !6249}
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6246, file: !2650, line: 104, baseType: !110, size: 32)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6246, file: !2650, line: 104, baseType: !110, size: 32)
!6250 = !DIDerivedType(tag: DW_TAG_member, scope: !6218, file: !2650, line: 105, baseType: !6251, size: 32, offset: 192)
!6251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6218, file: !2650, line: 105, size: 32, elements: !6252)
!6252 = !{!6253, !6254}
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6251, file: !2650, line: 105, baseType: !110, size: 32)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6251, file: !2650, line: 105, baseType: !110, size: 32)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6218, file: !2650, line: 106, baseType: !110, size: 32, offset: 224)
!6256 = !{!6257, !6258}
!6257 = !DILocalVariable(name: "reason", arg: 1, scope: !6208, file: !6209, line: 57, type: !32)
!6258 = !DILocalVariable(name: "esf", arg: 2, scope: !6208, file: !6209, line: 57, type: !6212)
!6259 = !DILocation(line: 0, scope: !6208)
!6260 = !DILocation(line: 60, column: 10, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6208, file: !6209, line: 60, column: 6)
!6262 = !DILocation(line: 60, column: 6, scope: !6208)
!6263 = !DILocation(line: 61, column: 3, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6261, file: !6209, line: 60, column: 19)
!6265 = !DILocation(line: 62, column: 2, scope: !6264)
!6266 = !DILocation(line: 63, column: 2, scope: !6208)
!6267 = !DILocation(line: 64, column: 1, scope: !6208)
!6268 = distinct !DISubprogram(name: "esf_dump", scope: !6209, file: !6209, line: 20, type: !6269, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !6271)
!6269 = !DISubroutineType(types: !6270)
!6270 = !{null, !6212}
!6271 = !{!6272}
!6272 = !DILocalVariable(name: "esf", arg: 1, scope: !6268, file: !6209, line: 20, type: !6212)
!6273 = !DILocation(line: 0, scope: !6268)
!6274 = !DILocation(line: 22, column: 2, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !6209, line: 22, column: 2)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !6209, line: 22, column: 2)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !6209, line: 22, column: 2)
!6278 = distinct !DILexicalBlock(scope: !6268, file: !6209, line: 22, column: 2)
!6279 = !DILocation(line: 24, column: 2, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6281, file: !6209, line: 24, column: 2)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !6209, line: 24, column: 2)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !6209, line: 24, column: 2)
!6283 = distinct !DILexicalBlock(scope: !6268, file: !6209, line: 24, column: 2)
!6284 = !DILocation(line: 26, column: 2, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !6209, line: 26, column: 2)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !6209, line: 26, column: 2)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !6209, line: 26, column: 2)
!6288 = distinct !DILexicalBlock(scope: !6268, file: !6209, line: 26, column: 2)
!6289 = !DILocation(line: 53, column: 2, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !6209, line: 53, column: 2)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !6209, line: 53, column: 2)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !6209, line: 53, column: 2)
!6293 = distinct !DILexicalBlock(scope: !6268, file: !6209, line: 53, column: 2)
!6294 = !DILocation(line: 55, column: 1, scope: !6268)
!6295 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6209, file: !6209, line: 82, type: !6296, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !6311)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{null, !6212, !6298}
!6298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6299, size: 32)
!6299 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6300)
!6300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6301)
!6301 = !{!6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310}
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6300, file: !211, line: 26, baseType: !110, size: 32)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6300, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6300, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6300, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6300, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6300, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6300, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6300, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6300, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6311 = !{!6312, !6313, !6314}
!6312 = !DILocalVariable(name: "esf", arg: 1, scope: !6295, file: !6209, line: 82, type: !6212)
!6313 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6295, file: !6209, line: 82, type: !6298)
!6314 = !DILocalVariable(name: "reason", scope: !6295, file: !6209, line: 88, type: !32)
!6315 = !DILocation(line: 0, scope: !6295)
!6316 = !DILocation(line: 88, column: 35, scope: !6295)
!6317 = !DILocation(line: 108, column: 2, scope: !6295)
!6318 = !DILocation(line: 131, column: 1, scope: !6295)
!6319 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6209, file: !6209, line: 133, type: !6320, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !6322)
!6320 = !DISubroutineType(types: !6321)
!6321 = !{null, !107}
!6322 = !{!6323, !6324, !6325}
!6323 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6319, file: !6209, line: 133, type: !107)
!6324 = !DILocalVariable(name: "ssf_contents", scope: !6319, file: !6209, line: 135, type: !864)
!6325 = !DILocalVariable(name: "oops_esf", scope: !6319, file: !6209, line: 136, type: !6214)
!6326 = !DILocation(line: 0, scope: !6319)
!6327 = !DILocation(line: 136, column: 2, scope: !6319)
!6328 = !DILocation(line: 136, column: 15, scope: !6319)
!6329 = !DILocation(line: 139, column: 22, scope: !6319)
!6330 = !DILocation(line: 139, column: 17, scope: !6319)
!6331 = !DILocation(line: 139, column: 20, scope: !6319)
!6332 = !DILocation(line: 141, column: 2, scope: !6319)
!6333 = !DILocation(line: 142, column: 2, scope: !6319)
!6334 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6335, file: !6335, line: 40, type: !6073, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !6336)
!6335 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6336 = !{!6337}
!6337 = !DILocalVariable(name: "irq", arg: 1, scope: !6334, file: !6335, line: 40, type: !32)
!6338 = !DILocation(line: 0, scope: !6334)
!6339 = !DILocation(line: 42, column: 2, scope: !6334)
!6340 = !DILocation(line: 43, column: 1, scope: !6334)
!6341 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !535, file: !535, line: 1684, type: !6342, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !6344)
!6342 = !DISubroutineType(types: !6343)
!6343 = !{null, !771}
!6344 = !{!6345}
!6345 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6341, file: !535, line: 1684, type: !771)
!6346 = !DILocation(line: 0, scope: !6341)
!6347 = !DILocation(line: 1686, column: 23, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6341, file: !535, line: 1686, column: 7)
!6349 = !DILocation(line: 1686, column: 7, scope: !6341)
!6350 = !DILocation(line: 1688, column: 5, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6348, file: !535, line: 1687, column: 3)
!6352 = !{i64 2150359201}
!6353 = !DILocation(line: 1689, column: 81, scope: !6351)
!6354 = !DILocation(line: 1689, column: 60, scope: !6351)
!6355 = !DILocation(line: 1689, column: 34, scope: !6351)
!6356 = !DILocation(line: 1689, column: 5, scope: !6351)
!6357 = !DILocation(line: 1689, column: 43, scope: !6351)
!6358 = !DILocation(line: 1690, column: 5, scope: !6351)
!6359 = !{i64 2150359315}
!6360 = !DILocation(line: 1691, column: 3, scope: !6351)
!6361 = !DILocation(line: 1692, column: 1, scope: !6341)
!6362 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6335, file: !6335, line: 45, type: !6073, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !6363)
!6363 = !{!6364}
!6364 = !DILocalVariable(name: "irq", arg: 1, scope: !6362, file: !6335, line: 45, type: !32)
!6365 = !DILocation(line: 0, scope: !6362)
!6366 = !DILocation(line: 47, column: 2, scope: !6362)
!6367 = !DILocation(line: 48, column: 1, scope: !6362)
!6368 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !535, file: !535, line: 1722, type: !6342, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !6369)
!6369 = !{!6370}
!6370 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6368, file: !535, line: 1722, type: !771)
!6371 = !DILocation(line: 0, scope: !6368)
!6372 = !DILocation(line: 1724, column: 23, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6368, file: !535, line: 1724, column: 7)
!6374 = !DILocation(line: 1724, column: 7, scope: !6368)
!6375 = !DILocation(line: 1726, column: 81, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6373, file: !535, line: 1725, column: 3)
!6377 = !DILocation(line: 1726, column: 60, scope: !6376)
!6378 = !DILocation(line: 1726, column: 34, scope: !6376)
!6379 = !DILocation(line: 1726, column: 5, scope: !6376)
!6380 = !DILocation(line: 1726, column: 43, scope: !6376)
!6381 = !DILocation(line: 271, column: 3, scope: !6382, inlinedAt: !6384)
!6382 = distinct !DISubprogram(name: "__DSB", scope: !6383, file: !6383, line: 269, type: !3070, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2002)
!6383 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6384 = distinct !DILocation(line: 1727, column: 5, scope: !6376)
!6385 = !{i64 2813584}
!6386 = !DILocation(line: 260, column: 3, scope: !6387, inlinedAt: !6388)
!6387 = distinct !DISubprogram(name: "__ISB", scope: !6383, file: !6383, line: 258, type: !3070, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !2002)
!6388 = distinct !DILocation(line: 1728, column: 5, scope: !6376)
!6389 = !{i64 2813301}
!6390 = !DILocation(line: 1729, column: 3, scope: !6376)
!6391 = !DILocation(line: 1730, column: 1, scope: !6368)
!6392 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6335, file: !6335, line: 50, type: !6393, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !6395)
!6393 = !DISubroutineType(types: !6394)
!6394 = !{!109, !32}
!6395 = !{!6396}
!6396 = !DILocalVariable(name: "irq", arg: 1, scope: !6392, file: !6335, line: 50, type: !32)
!6397 = !DILocation(line: 0, scope: !6392)
!6398 = !DILocation(line: 52, column: 20, scope: !6392)
!6399 = !DILocation(line: 52, column: 9, scope: !6392)
!6400 = !DILocation(line: 52, column: 41, scope: !6392)
!6401 = !DILocation(line: 52, column: 39, scope: !6392)
!6402 = !DILocation(line: 52, column: 2, scope: !6392)
!6403 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6335, file: !6335, line: 64, type: !6404, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !6406)
!6404 = !DISubroutineType(types: !6405)
!6405 = !{null, !32, !32, !110}
!6406 = !{!6407, !6408, !6409}
!6407 = !DILocalVariable(name: "irq", arg: 1, scope: !6403, file: !6335, line: 64, type: !32)
!6408 = !DILocalVariable(name: "prio", arg: 2, scope: !6403, file: !6335, line: 64, type: !32)
!6409 = !DILocalVariable(name: "flags", arg: 3, scope: !6403, file: !6335, line: 64, type: !110)
!6410 = !DILocation(line: 0, scope: !6403)
!6411 = !DILocation(line: 83, column: 8, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !6335, line: 82, column: 9)
!6413 = distinct !DILexicalBlock(scope: !6403, file: !6335, line: 76, column: 6)
!6414 = !DILocation(line: 91, column: 2, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6416, file: !6335, line: 91, column: 2)
!6416 = distinct !DILexicalBlock(scope: !6403, file: !6335, line: 91, column: 2)
!6417 = !DILocation(line: 91, column: 2, scope: !6416)
!6418 = !DILocation(line: 91, column: 2, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6415, file: !6335, line: 91, column: 2)
!6420 = !DILocation(line: 95, column: 2, scope: !6403)
!6421 = !DILocation(line: 96, column: 1, scope: !6403)
!6422 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6423, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !6425)
!6423 = !DISubroutineType(types: !6424)
!6424 = !{null, !771, !110}
!6425 = !{!6426, !6427}
!6426 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6422, file: !535, line: 1814, type: !771)
!6427 = !DILocalVariable(name: "priority", arg: 2, scope: !6422, file: !535, line: 1814, type: !110)
!6428 = !DILocation(line: 0, scope: !6422)
!6429 = !DILocation(line: 0, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6422, file: !535, line: 1816, column: 7)
!6431 = !DILocation(line: 1816, column: 7, scope: !6422)
!6432 = !DILocation(line: 1824, column: 1, scope: !6422)
!6433 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6335, file: !6335, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !6434)
!6434 = !{!6435}
!6435 = !DILocalVariable(name: "unused", arg: 1, scope: !6433, file: !6335, line: 155, type: !13)
!6436 = !DILocation(line: 0, scope: !6433)
!6437 = !DILocation(line: 159, column: 2, scope: !6433)
!6438 = !DILocation(line: 160, column: 1, scope: !6433)
!6439 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6440, file: !6440, line: 87, type: !3070, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !2002)
!6440 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6441 = !DILocation(line: 89, column: 2, scope: !6439)
!6442 = !DILocation(line: 90, column: 2, scope: !6439)
!6443 = !DILocation(line: 91, column: 1, scope: !6439)
!6444 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6440, file: !6440, line: 23, type: !3070, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2002)
!6445 = !DISubprogram(name: "z_arm_int_exit", scope: !6446, file: !6446, line: 153, type: !3070, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2002)
!6446 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6447 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6448, file: !6448, line: 256, type: !3070, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !2002)
!6448 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6449 = !DILocation(line: 258, column: 2, scope: !6447)
!6450 = !DILocation(line: 260, column: 2, scope: !6447)
!6451 = !DILocation(line: 262, column: 2, scope: !6447)
!6452 = !DILocation(line: 263, column: 2, scope: !6447)
!6453 = !DILocation(line: 267, column: 2, scope: !6447)
!6454 = !DILocation(line: 268, column: 2, scope: !6447)
!6455 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6448, file: !6448, line: 53, type: !3070, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !2002)
!6456 = !DILocation(line: 55, column: 12, scope: !6455)
!6457 = !DILocation(line: 271, column: 3, scope: !6458, inlinedAt: !6459)
!6458 = distinct !DISubprogram(name: "__DSB", scope: !6383, file: !6383, line: 269, type: !3070, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !2002)
!6459 = distinct !DILocation(line: 56, column: 2, scope: !6455)
!6460 = !{i64 2812255}
!6461 = !DILocation(line: 260, column: 3, scope: !6462, inlinedAt: !6463)
!6462 = distinct !DISubprogram(name: "__ISB", scope: !6383, file: !6383, line: 258, type: !3070, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !2002)
!6463 = distinct !DILocation(line: 57, column: 2, scope: !6455)
!6464 = !{i64 2811972}
!6465 = !DILocation(line: 58, column: 1, scope: !6455)
!6466 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6448, file: !6448, line: 96, type: !3070, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !2002)
!6467 = !DILocation(line: 103, column: 13, scope: !6466)
!6468 = !DILocation(line: 975, column: 3, scope: !6469, inlinedAt: !6474)
!6469 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6383, file: !6383, line: 971, type: !6470, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !6472)
!6470 = !DISubroutineType(types: !6471)
!6471 = !{!110}
!6472 = !{!6473}
!6473 = !DILocalVariable(name: "result", scope: !6469, file: !6383, line: 973, type: !110)
!6474 = distinct !DILocation(line: 189, column: 16, scope: !6466)
!6475 = !{i64 2833085}
!6476 = !DILocation(line: 0, scope: !6469, inlinedAt: !6474)
!6477 = !DILocation(line: 189, column: 32, scope: !6466)
!6478 = !DILocalVariable(name: "control", arg: 1, scope: !6479, file: !6383, line: 1001, type: !110)
!6479 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6383, file: !6383, line: 1001, type: !6480, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !6482)
!6480 = !DISubroutineType(types: !6481)
!6481 = !{null, !110}
!6482 = !{!6478}
!6483 = !DILocation(line: 0, scope: !6479, inlinedAt: !6484)
!6484 = distinct !DILocation(line: 189, column: 2, scope: !6466)
!6485 = !DILocation(line: 1003, column: 3, scope: !6479, inlinedAt: !6484)
!6486 = !{i64 2833805}
!6487 = !DILocation(line: 260, column: 3, scope: !6462, inlinedAt: !6488)
!6488 = distinct !DILocation(line: 1004, column: 3, scope: !6479, inlinedAt: !6484)
!6489 = !DILocation(line: 191, column: 1, scope: !6466)
!6490 = distinct !DISubprogram(name: "arch_swap", scope: !6491, file: !6491, line: 33, type: !6393, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !6492)
!6491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6492 = !{!6493}
!6493 = !DILocalVariable(name: "key", arg: 1, scope: !6490, file: !6491, line: 33, type: !32)
!6494 = !DILocation(line: 0, scope: !6490)
!6495 = !DILocation(line: 36, column: 2, scope: !6490)
!6496 = !DILocation(line: 36, column: 17, scope: !6490)
!6497 = !DILocation(line: 36, column: 25, scope: !6490)
!6498 = !DILocation(line: 37, column: 37, scope: !6490)
!6499 = !DILocation(line: 37, column: 17, scope: !6490)
!6500 = !DILocation(line: 37, column: 35, scope: !6490)
!6501 = !DILocation(line: 41, column: 12, scope: !6490)
!6502 = !DILocalVariable(name: "key", arg: 1, scope: !6503, file: !6062, line: 84, type: !32)
!6503 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6062, file: !6062, line: 84, type: !6073, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2617, retainedNodes: !6504)
!6504 = !{!6502}
!6505 = !DILocation(line: 0, scope: !6503, inlinedAt: !6506)
!6506 = distinct !DILocation(line: 44, column: 2, scope: !6490)
!6507 = !DILocation(line: 95, column: 2, scope: !6503, inlinedAt: !6506)
!6508 = !{i64 1951451}
!6509 = !DILocation(line: 53, column: 9, scope: !6490)
!6510 = !DILocation(line: 53, column: 24, scope: !6490)
!6511 = !DILocation(line: 53, column: 2, scope: !6490)
!6512 = distinct !DISubprogram(name: "arch_new_thread", scope: !6513, file: !6513, line: 56, type: !6514, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6624)
!6513 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6514 = !DISubroutineType(types: !6515)
!6515 = !{null, !6516, !6619, !285, !3337, !107, !107, !107}
!6516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6517, size: 32)
!6517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !6518)
!6518 = !{!6519, !6577, !6589, !6590, !6591, !6592, !6593, !6599, !6614}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6517, file: !158, line: 247, baseType: !6520, size: 384)
!6520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !6521)
!6521 = !{!6522, !6546, !6553, !6554, !6555, !6564, !6565, !6566}
!6522 = !DIDerivedType(tag: DW_TAG_member, scope: !6520, file: !158, line: 60, baseType: !6523, size: 64)
!6523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6520, file: !158, line: 60, size: 64, elements: !6524)
!6524 = !{!6525, !6540}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6523, file: !158, line: 61, baseType: !6526, size: 64)
!6526 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !6527)
!6527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !6528)
!6528 = !{!6529, !6535}
!6529 = !DIDerivedType(tag: DW_TAG_member, scope: !6527, file: !127, line: 38, baseType: !6530, size: 32)
!6530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6527, file: !127, line: 38, size: 32, elements: !6531)
!6531 = !{!6532, !6534}
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6530, file: !127, line: 39, baseType: !6533, size: 32)
!6533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6527, size: 32)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6530, file: !127, line: 40, baseType: !6533, size: 32)
!6535 = !DIDerivedType(tag: DW_TAG_member, scope: !6527, file: !127, line: 42, baseType: !6536, size: 32, offset: 32)
!6536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6527, file: !127, line: 42, size: 32, elements: !6537)
!6537 = !{!6538, !6539}
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6536, file: !127, line: 43, baseType: !6533, size: 32)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6536, file: !127, line: 44, baseType: !6533, size: 32)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6523, file: !158, line: 62, baseType: !6541, size: 64)
!6541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !6542)
!6542 = !{!6543}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6541, file: !170, line: 50, baseType: !6544, size: 64)
!6544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6545, size: 64, elements: !175)
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6541, size: 32)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6520, file: !158, line: 68, baseType: !6547, size: 32, offset: 64)
!6547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6548, size: 32)
!6548 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !6549)
!6549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !6550)
!6550 = !{!6551}
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6549, file: !122, line: 232, baseType: !6552, size: 64)
!6552 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !6527)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6520, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6520, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!6555 = !DIDerivedType(tag: DW_TAG_member, scope: !6520, file: !158, line: 90, baseType: !6556, size: 16, offset: 112)
!6556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6520, file: !158, line: 90, size: 16, elements: !6557)
!6557 = !{!6558, !6563}
!6558 = !DIDerivedType(tag: DW_TAG_member, scope: !6556, file: !158, line: 91, baseType: !6559, size: 16)
!6559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6556, file: !158, line: 91, size: 16, elements: !6560)
!6560 = !{!6561, !6562}
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6559, file: !158, line: 96, baseType: !190, size: 8)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6559, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6556, file: !158, line: 100, baseType: !194, size: 16)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6520, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6520, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6520, file: !158, line: 131, baseType: !6567, size: 192, offset: 192)
!6567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !6568)
!6568 = !{!6569, !6570, !6576}
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6567, file: !122, line: 245, baseType: !6526, size: 64)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6567, file: !122, line: 246, baseType: !6571, size: 32, offset: 64)
!6571 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !6572)
!6572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6573, size: 32)
!6573 = !DISubroutineType(types: !6574)
!6574 = !{null, !6575}
!6575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6567, size: 32)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6567, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6517, file: !158, line: 250, baseType: !6578, size: 288, offset: 384)
!6578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6579)
!6579 = !{!6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588}
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6578, file: !211, line: 26, baseType: !110, size: 32)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6578, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6578, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6578, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6578, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6578, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6578, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6578, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6578, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6517, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6517, file: !158, line: 256, baseType: !6548, size: 64, offset: 704)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6517, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6517, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6517, file: !158, line: 300, baseType: !6594, size: 96, offset: 1056)
!6594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !6595)
!6595 = !{!6596, !6597, !6598}
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6594, file: !158, line: 153, baseType: !22, size: 32)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6594, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6594, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6517, file: !158, line: 325, baseType: !6600, size: 32, offset: 1152)
!6600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6601, size: 32)
!6601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !6602)
!6602 = !{!6603, !6609, !6610}
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6601, file: !118, line: 5074, baseType: !6604, size: 96)
!6604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !6605)
!6605 = !{!6606, !6607, !6608}
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6604, file: !243, line: 57, baseType: !246, size: 32)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6604, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6604, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6601, file: !118, line: 5075, baseType: !6548, size: 64, offset: 96)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6601, file: !118, line: 5076, baseType: !6611, size: 32, offset: 160)
!6611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !6612)
!6612 = !{!6613}
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6611, file: !253, line: 52, baseType: !22, size: 32)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6517, file: !158, line: 343, baseType: !6615, size: 64, offset: 1184)
!6615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !6616)
!6616 = !{!6617, !6618}
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6615, file: !211, line: 63, baseType: !110, size: 32)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6615, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!6619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6620, size: 32)
!6620 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3336, line: 44, baseType: !6621)
!6621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !6622)
!6622 = !{!6623}
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6621, file: !147, line: 48, baseType: !150, size: 8)
!6624 = !{!6625, !6626, !6627, !6628, !6629, !6630, !6631, !6632}
!6625 = !DILocalVariable(name: "thread", arg: 1, scope: !6512, file: !6513, line: 56, type: !6516)
!6626 = !DILocalVariable(name: "stack", arg: 2, scope: !6512, file: !6513, line: 56, type: !6619)
!6627 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6512, file: !6513, line: 57, type: !285)
!6628 = !DILocalVariable(name: "entry", arg: 4, scope: !6512, file: !6513, line: 57, type: !3337)
!6629 = !DILocalVariable(name: "p1", arg: 5, scope: !6512, file: !6513, line: 58, type: !107)
!6630 = !DILocalVariable(name: "p2", arg: 6, scope: !6512, file: !6513, line: 58, type: !107)
!6631 = !DILocalVariable(name: "p3", arg: 7, scope: !6512, file: !6513, line: 58, type: !107)
!6632 = !DILocalVariable(name: "iframe", scope: !6512, file: !6513, line: 60, type: !2648)
!6633 = !DILocation(line: 0, scope: !6512)
!6634 = !DILocation(line: 85, column: 11, scope: !6512)
!6635 = !DILocation(line: 93, column: 10, scope: !6512)
!6636 = !DILocation(line: 98, column: 13, scope: !6512)
!6637 = !DILocation(line: 100, column: 15, scope: !6512)
!6638 = !DILocation(line: 100, column: 10, scope: !6512)
!6639 = !DILocation(line: 100, column: 13, scope: !6512)
!6640 = !DILocation(line: 101, column: 15, scope: !6512)
!6641 = !DILocation(line: 101, column: 10, scope: !6512)
!6642 = !DILocation(line: 101, column: 13, scope: !6512)
!6643 = !DILocation(line: 102, column: 15, scope: !6512)
!6644 = !DILocation(line: 102, column: 10, scope: !6512)
!6645 = !DILocation(line: 102, column: 13, scope: !6512)
!6646 = !DILocation(line: 103, column: 15, scope: !6512)
!6647 = !DILocation(line: 103, column: 10, scope: !6512)
!6648 = !DILocation(line: 103, column: 13, scope: !6512)
!6649 = !DILocation(line: 106, column: 10, scope: !6512)
!6650 = !DILocation(line: 106, column: 15, scope: !6512)
!6651 = !DILocation(line: 122, column: 29, scope: !6512)
!6652 = !DILocation(line: 122, column: 23, scope: !6512)
!6653 = !DILocation(line: 122, column: 27, scope: !6512)
!6654 = !DILocation(line: 123, column: 15, scope: !6512)
!6655 = !DILocation(line: 123, column: 23, scope: !6512)
!6656 = !DILocation(line: 143, column: 1, scope: !6512)
!6657 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6513, file: !6513, line: 385, type: !6658, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6661)
!6658 = !DISubroutineType(types: !6659)
!6659 = !{!110, !6660, !6660}
!6660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6661 = !{!6662, !6663, !6664, !6667}
!6662 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6657, file: !6513, line: 385, type: !6660)
!6663 = !DILocalVariable(name: "psp", arg: 2, scope: !6657, file: !6513, line: 385, type: !6660)
!6664 = !DILocalVariable(name: "thread", scope: !6657, file: !6513, line: 388, type: !6665)
!6665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6666, size: 32)
!6666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6517)
!6667 = !DILocalVariable(name: "guard_len", scope: !6657, file: !6513, line: 405, type: !110)
!6668 = !DILocation(line: 0, scope: !6657)
!6669 = !DILocation(line: 388, column: 34, scope: !6657)
!6670 = !DILocation(line: 390, column: 13, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6657, file: !6513, line: 390, column: 6)
!6672 = !DILocation(line: 390, column: 6, scope: !6657)
!6673 = !DILocation(line: 438, column: 6, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6657, file: !6513, line: 438, column: 6)
!6675 = !DILocation(line: 438, column: 6, scope: !6657)
!6676 = !DILocation(line: 442, column: 3, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6674, file: !6513, line: 440, column: 22)
!6678 = !DILocation(line: 455, column: 1, scope: !6657)
!6679 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6513, file: !6513, line: 530, type: !6680, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6682)
!6680 = !DISubroutineType(types: !6681)
!6681 = !{null, !6516, !285, !3337}
!6682 = !{!6683, !6684, !6685}
!6683 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6679, file: !6513, line: 530, type: !6516)
!6684 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6679, file: !6513, line: 530, type: !285)
!6685 = !DILocalVariable(name: "_main", arg: 3, scope: !6679, file: !6513, line: 531, type: !3337)
!6686 = !DILocation(line: 0, scope: !6679)
!6687 = !DILocation(line: 535, column: 11, scope: !6679)
!6688 = !DILocation(line: 560, column: 2, scope: !6679)
!6689 = !DILocation(line: 576, column: 2, scope: !6679)
!6690 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6691 = !DILocation(line: 603, column: 2, scope: !6679)
!6692 = distinct !DISubprogram(name: "z_arm_fault", scope: !6693, file: !6693, line: 1036, type: !6694, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !6709)
!6693 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6694 = !DISubroutineType(types: !6695)
!6695 = !{null, !110, !110, !110, !6696}
!6696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6697, size: 32)
!6697 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6698)
!6698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6699)
!6699 = !{!6700, !6701, !6702, !6703, !6704, !6705, !6706, !6707, !6708}
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6698, file: !211, line: 26, baseType: !110, size: 32)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6698, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6698, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6698, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6698, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6698, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6698, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6698, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6698, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6709 = !{!6710, !6711, !6712, !6713, !6714, !6715, !6716, !6717, !6718, !6719}
!6710 = !DILocalVariable(name: "msp", arg: 1, scope: !6692, file: !6693, line: 1036, type: !110)
!6711 = !DILocalVariable(name: "psp", arg: 2, scope: !6692, file: !6693, line: 1036, type: !110)
!6712 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6692, file: !6693, line: 1036, type: !110)
!6713 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6692, file: !6693, line: 1037, type: !6696)
!6714 = !DILocalVariable(name: "reason", scope: !6692, file: !6693, line: 1039, type: !110)
!6715 = !DILocalVariable(name: "fault", scope: !6692, file: !6693, line: 1040, type: !109)
!6716 = !DILocalVariable(name: "recoverable", scope: !6692, file: !6693, line: 1041, type: !347)
!6717 = !DILocalVariable(name: "nested_exc", scope: !6692, file: !6693, line: 1041, type: !347)
!6718 = !DILocalVariable(name: "esf", scope: !6692, file: !6693, line: 1042, type: !2716)
!6719 = !DILocalVariable(name: "esf_copy", scope: !6692, file: !6693, line: 1047, type: !2717)
!6720 = !DILocation(line: 0, scope: !6692)
!6721 = !DILocation(line: 1040, column: 19, scope: !6692)
!6722 = !DILocation(line: 1041, column: 2, scope: !6692)
!6723 = !DILocation(line: 1047, column: 2, scope: !6692)
!6724 = !DILocation(line: 1047, column: 15, scope: !6692)
!6725 = !DILocalVariable(name: "key", arg: 1, scope: !6726, file: !6062, line: 84, type: !32)
!6726 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6062, file: !6062, line: 84, type: !6073, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !6727)
!6727 = !{!6725}
!6728 = !DILocation(line: 0, scope: !6726, inlinedAt: !6729)
!6729 = distinct !DILocation(line: 1050, column: 2, scope: !6692)
!6730 = !DILocation(line: 95, column: 2, scope: !6726, inlinedAt: !6729)
!6731 = !{i64 1984695}
!6732 = !DILocation(line: 1055, column: 9, scope: !6692)
!6733 = !DILocation(line: 1056, column: 2, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !6693, line: 1056, column: 2)
!6735 = distinct !DILexicalBlock(scope: !6692, file: !6693, line: 1056, column: 2)
!6736 = !DILocation(line: 1056, column: 2, scope: !6735)
!6737 = !DILocation(line: 1056, column: 2, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6734, file: !6693, line: 1056, column: 2)
!6739 = !DILocation(line: 1040, column: 24, scope: !6692)
!6740 = !DILocation(line: 1063, column: 11, scope: !6692)
!6741 = !DILocation(line: 1064, column: 6, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6692, file: !6693, line: 1064, column: 6)
!6743 = !{i8 0, i8 2}
!6744 = !DILocation(line: 1064, column: 6, scope: !6692)
!6745 = !DILocation(line: 1070, column: 20, scope: !6692)
!6746 = !DILocation(line: 1070, column: 2, scope: !6692)
!6747 = !DILocation(line: 1089, column: 6, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6692, file: !6693, line: 1089, column: 6)
!6749 = !DILocation(line: 0, scope: !6748)
!6750 = !DILocation(line: 1089, column: 6, scope: !6692)
!6751 = !DILocation(line: 1090, column: 28, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !6693, line: 1090, column: 7)
!6753 = distinct !DILexicalBlock(scope: !6748, file: !6693, line: 1089, column: 18)
!6754 = !DILocation(line: 1090, column: 44, scope: !6752)
!6755 = !DILocation(line: 1090, column: 7, scope: !6753)
!6756 = !DILocation(line: 1091, column: 24, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6752, file: !6693, line: 1090, column: 50)
!6758 = !DILocation(line: 1092, column: 3, scope: !6757)
!6759 = !DILocation(line: 1094, column: 23, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6748, file: !6693, line: 1093, column: 9)
!6761 = !DILocation(line: 1097, column: 2, scope: !6692)
!6762 = !DILocation(line: 1098, column: 1, scope: !6692)
!6763 = distinct !DISubprogram(name: "get_esf", scope: !6693, file: !6693, line: 894, type: !6764, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !6767)
!6764 = !DISubroutineType(types: !6765)
!6765 = !{!2716, !110, !110, !110, !6766}
!6766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!6767 = !{!6768, !6769, !6770, !6771, !6772, !6773}
!6768 = !DILocalVariable(name: "msp", arg: 1, scope: !6763, file: !6693, line: 894, type: !110)
!6769 = !DILocalVariable(name: "psp", arg: 2, scope: !6763, file: !6693, line: 894, type: !110)
!6770 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6763, file: !6693, line: 894, type: !110)
!6771 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6763, file: !6693, line: 895, type: !6766)
!6772 = !DILocalVariable(name: "alternative_state_exc", scope: !6763, file: !6693, line: 897, type: !347)
!6773 = !DILocalVariable(name: "ptr_esf", scope: !6763, file: !6693, line: 898, type: !2716)
!6774 = !DILocation(line: 0, scope: !6763)
!6775 = !DILocation(line: 900, column: 14, scope: !6763)
!6776 = !DILocation(line: 902, column: 49, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6763, file: !6693, line: 902, column: 6)
!6778 = !DILocation(line: 902, column: 6, scope: !6763)
!6779 = !DILocation(line: 983, column: 44, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6763, file: !6693, line: 983, column: 6)
!6781 = !DILocation(line: 985, column: 3, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !6693, line: 985, column: 3)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !6693, line: 985, column: 3)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !6693, line: 985, column: 3)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !6693, line: 985, column: 3)
!6786 = distinct !DILexicalBlock(scope: !6780, file: !6693, line: 984, column: 47)
!6787 = !DILocation(line: 986, column: 3, scope: !6786)
!6788 = !DILocation(line: 983, column: 18, scope: !6780)
!6789 = !DILocation(line: 991, column: 7, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !6693, line: 990, column: 30)
!6791 = distinct !DILexicalBlock(scope: !6763, file: !6693, line: 990, column: 6)
!6792 = !DILocation(line: 998, column: 16, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !6693, line: 995, column: 10)
!6794 = distinct !DILexicalBlock(scope: !6790, file: !6693, line: 991, column: 7)
!6795 = !DILocation(line: 1002, column: 2, scope: !6763)
!6796 = !DILocation(line: 1003, column: 1, scope: !6763)
!6797 = distinct !DISubprogram(name: "fault_handle", scope: !6693, file: !6693, line: 786, type: !6798, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !6800)
!6798 = !DISubroutineType(types: !6799)
!6799 = !{!110, !2716, !109, !6766}
!6800 = !{!6801, !6802, !6803, !6804}
!6801 = !DILocalVariable(name: "esf", arg: 1, scope: !6797, file: !6693, line: 786, type: !2716)
!6802 = !DILocalVariable(name: "fault", arg: 2, scope: !6797, file: !6693, line: 786, type: !109)
!6803 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6797, file: !6693, line: 786, type: !6766)
!6804 = !DILocalVariable(name: "reason", scope: !6797, file: !6693, line: 788, type: !110)
!6805 = !DILocation(line: 0, scope: !6797)
!6806 = !DILocation(line: 790, column: 15, scope: !6797)
!6807 = !DILocation(line: 792, column: 2, scope: !6797)
!6808 = !DILocation(line: 794, column: 12, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6797, file: !6693, line: 792, column: 17)
!6810 = !DILocation(line: 795, column: 3, scope: !6809)
!6811 = !DILocation(line: 800, column: 12, scope: !6809)
!6812 = !DILocation(line: 801, column: 3, scope: !6809)
!6813 = !DILocation(line: 803, column: 12, scope: !6809)
!6814 = !DILocation(line: 804, column: 3, scope: !6809)
!6815 = !DILocation(line: 806, column: 12, scope: !6809)
!6816 = !DILocation(line: 807, column: 3, scope: !6809)
!6817 = !DILocation(line: 814, column: 3, scope: !6809)
!6818 = !DILocation(line: 815, column: 3, scope: !6809)
!6819 = !DILocation(line: 820, column: 3, scope: !6809)
!6820 = !DILocation(line: 821, column: 3, scope: !6809)
!6821 = !DILocation(line: 829, column: 2, scope: !6797)
!6822 = distinct !DISubprogram(name: "hard_fault", scope: !6693, file: !6693, line: 709, type: !6823, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !6825)
!6823 = !DISubroutineType(types: !6824)
!6824 = !{!110, !2716, !6766}
!6825 = !{!6826, !6827, !6828}
!6826 = !DILocalVariable(name: "esf", arg: 1, scope: !6822, file: !6693, line: 709, type: !2716)
!6827 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6822, file: !6693, line: 709, type: !6766)
!6828 = !DILocalVariable(name: "reason", scope: !6822, file: !6693, line: 711, type: !110)
!6829 = !DILocation(line: 0, scope: !6822)
!6830 = !DILocation(line: 713, column: 2, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !6693, line: 713, column: 2)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !6693, line: 713, column: 2)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !6693, line: 713, column: 2)
!6834 = distinct !DILexicalBlock(scope: !6822, file: !6693, line: 713, column: 2)
!6835 = !DILocation(line: 732, column: 15, scope: !6822)
!6836 = !DILocation(line: 734, column: 12, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6822, file: !6693, line: 734, column: 6)
!6838 = !DILocation(line: 734, column: 17, scope: !6837)
!6839 = !DILocation(line: 734, column: 41, scope: !6837)
!6840 = !DILocation(line: 734, column: 6, scope: !6822)
!6841 = !DILocation(line: 735, column: 3, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6843, file: !6693, line: 735, column: 3)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !6693, line: 735, column: 3)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !6693, line: 735, column: 3)
!6845 = distinct !DILexicalBlock(scope: !6846, file: !6693, line: 735, column: 3)
!6846 = distinct !DILexicalBlock(scope: !6837, file: !6693, line: 734, column: 47)
!6847 = !DILocation(line: 736, column: 2, scope: !6846)
!6848 = !DILocation(line: 736, column: 19, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6837, file: !6693, line: 736, column: 13)
!6850 = !DILocation(line: 736, column: 49, scope: !6849)
!6851 = !DILocation(line: 736, column: 13, scope: !6837)
!6852 = !DILocation(line: 737, column: 3, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6854, file: !6693, line: 737, column: 3)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !6693, line: 737, column: 3)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !6693, line: 737, column: 3)
!6856 = distinct !DILexicalBlock(scope: !6857, file: !6693, line: 737, column: 3)
!6857 = distinct !DILexicalBlock(scope: !6849, file: !6693, line: 736, column: 55)
!6858 = !DILocation(line: 738, column: 2, scope: !6857)
!6859 = !DILocation(line: 738, column: 19, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6849, file: !6693, line: 738, column: 13)
!6861 = !DILocation(line: 738, column: 24, scope: !6860)
!6862 = !DILocation(line: 738, column: 47, scope: !6860)
!6863 = !DILocation(line: 738, column: 13, scope: !6849)
!6864 = !DILocation(line: 739, column: 3, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !6693, line: 739, column: 3)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !6693, line: 739, column: 3)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6693, line: 739, column: 3)
!6868 = distinct !DILexicalBlock(scope: !6869, file: !6693, line: 739, column: 3)
!6869 = distinct !DILexicalBlock(scope: !6860, file: !6693, line: 738, column: 53)
!6870 = !DILocation(line: 740, column: 7, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6869, file: !6693, line: 740, column: 7)
!6872 = !DILocation(line: 740, column: 7, scope: !6869)
!6873 = !DILocation(line: 741, column: 4, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !6693, line: 741, column: 4)
!6875 = distinct !DILexicalBlock(scope: !6876, file: !6693, line: 741, column: 4)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !6693, line: 741, column: 4)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !6693, line: 741, column: 4)
!6878 = distinct !DILexicalBlock(scope: !6871, file: !6693, line: 740, column: 38)
!6879 = !DILocation(line: 742, column: 24, scope: !6878)
!6880 = !DILocation(line: 743, column: 3, scope: !6878)
!6881 = !DILocation(line: 743, column: 20, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6871, file: !6693, line: 743, column: 14)
!6883 = !DILocation(line: 743, column: 25, scope: !6882)
!6884 = !DILocation(line: 743, column: 52, scope: !6882)
!6885 = !DILocation(line: 743, column: 14, scope: !6871)
!6886 = !DILocation(line: 744, column: 13, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6882, file: !6693, line: 743, column: 58)
!6888 = !DILocation(line: 745, column: 3, scope: !6887)
!6889 = !DILocation(line: 745, column: 20, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6882, file: !6693, line: 745, column: 14)
!6891 = !DILocation(line: 745, column: 25, scope: !6890)
!6892 = !DILocation(line: 745, column: 52, scope: !6890)
!6893 = !DILocation(line: 745, column: 14, scope: !6882)
!6894 = !DILocation(line: 746, column: 13, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6890, file: !6693, line: 745, column: 58)
!6896 = !DILocation(line: 747, column: 3, scope: !6895)
!6897 = !DILocation(line: 747, column: 20, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6890, file: !6693, line: 747, column: 14)
!6899 = !DILocation(line: 747, column: 52, scope: !6898)
!6900 = !DILocation(line: 747, column: 14, scope: !6890)
!6901 = !DILocation(line: 748, column: 13, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6898, file: !6693, line: 747, column: 58)
!6903 = !DILocation(line: 754, column: 4, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !6693, line: 754, column: 4)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !6693, line: 754, column: 4)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !6693, line: 754, column: 4)
!6907 = distinct !DILexicalBlock(scope: !6898, file: !6693, line: 753, column: 10)
!6908 = !DILocation(line: 758, column: 3, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6693, line: 758, column: 3)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !6693, line: 758, column: 3)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !6693, line: 758, column: 3)
!6912 = distinct !DILexicalBlock(scope: !6860, file: !6693, line: 757, column: 9)
!6913 = !DILocation(line: 766, column: 2, scope: !6822)
!6914 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6693, file: !6693, line: 229, type: !6798, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !6915)
!6915 = !{!6916, !6917, !6918, !6919, !6920, !6921, !6924}
!6916 = !DILocalVariable(name: "esf", arg: 1, scope: !6914, file: !6693, line: 229, type: !2716)
!6917 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6914, file: !6693, line: 229, type: !109)
!6918 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6914, file: !6693, line: 230, type: !6766)
!6919 = !DILocalVariable(name: "reason", scope: !6914, file: !6693, line: 232, type: !110)
!6920 = !DILocalVariable(name: "mmfar", scope: !6914, file: !6693, line: 233, type: !110)
!6921 = !DILocalVariable(name: "temp", scope: !6922, file: !6693, line: 254, type: !110)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !6693, line: 244, column: 48)
!6923 = distinct !DILexicalBlock(scope: !6914, file: !6693, line: 244, column: 6)
!6924 = !DILocalVariable(name: "min_stack_ptr", scope: !6925, file: !6693, line: 309, type: !110)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !6693, line: 308, column: 43)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !6693, line: 308, column: 7)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !6693, line: 289, column: 40)
!6928 = distinct !DILexicalBlock(scope: !6914, file: !6693, line: 288, column: 6)
!6929 = !DILocation(line: 0, scope: !6914)
!6930 = !DILocation(line: 235, column: 2, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6693, line: 235, column: 2)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6693, line: 235, column: 2)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6693, line: 235, column: 2)
!6934 = distinct !DILexicalBlock(scope: !6914, file: !6693, line: 235, column: 2)
!6935 = !DILocation(line: 237, column: 12, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6914, file: !6693, line: 237, column: 6)
!6937 = !DILocation(line: 237, column: 17, scope: !6936)
!6938 = !DILocation(line: 237, column: 41, scope: !6936)
!6939 = !DILocation(line: 237, column: 6, scope: !6914)
!6940 = !DILocation(line: 238, column: 3, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !6693, line: 238, column: 3)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !6693, line: 238, column: 3)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6693, line: 238, column: 3)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6693, line: 238, column: 3)
!6945 = distinct !DILexicalBlock(scope: !6936, file: !6693, line: 237, column: 47)
!6946 = !DILocation(line: 240, column: 2, scope: !6945)
!6947 = !DILocation(line: 241, column: 12, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6914, file: !6693, line: 241, column: 6)
!6949 = !DILocation(line: 241, column: 17, scope: !6948)
!6950 = !DILocation(line: 241, column: 43, scope: !6948)
!6951 = !DILocation(line: 241, column: 6, scope: !6914)
!6952 = !DILocation(line: 242, column: 3, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6954, file: !6693, line: 242, column: 3)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !6693, line: 242, column: 3)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !6693, line: 242, column: 3)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !6693, line: 242, column: 3)
!6957 = distinct !DILexicalBlock(scope: !6948, file: !6693, line: 241, column: 49)
!6958 = !DILocation(line: 243, column: 2, scope: !6957)
!6959 = !DILocation(line: 244, column: 12, scope: !6923)
!6960 = !DILocation(line: 244, column: 17, scope: !6923)
!6961 = !DILocation(line: 244, column: 42, scope: !6923)
!6962 = !DILocation(line: 244, column: 6, scope: !6914)
!6963 = !DILocation(line: 245, column: 3, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !6693, line: 245, column: 3)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6693, line: 245, column: 3)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6693, line: 245, column: 3)
!6967 = distinct !DILexicalBlock(scope: !6922, file: !6693, line: 245, column: 3)
!6968 = !DILocation(line: 254, column: 24, scope: !6922)
!6969 = !DILocation(line: 0, scope: !6922)
!6970 = !DILocation(line: 256, column: 13, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6922, file: !6693, line: 256, column: 7)
!6972 = !DILocation(line: 256, column: 18, scope: !6971)
!6973 = !DILocation(line: 256, column: 44, scope: !6971)
!6974 = !DILocation(line: 256, column: 7, scope: !6922)
!6975 = !DILocation(line: 258, column: 4, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !6693, line: 258, column: 4)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !6693, line: 258, column: 4)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !6693, line: 258, column: 4)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !6693, line: 258, column: 4)
!6980 = distinct !DILexicalBlock(scope: !6971, file: !6693, line: 256, column: 50)
!6981 = !DILocation(line: 259, column: 24, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6980, file: !6693, line: 259, column: 8)
!6983 = !DILocation(line: 259, column: 8, scope: !6980)
!6984 = !DILocation(line: 261, column: 15, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6982, file: !6693, line: 259, column: 30)
!6986 = !DILocation(line: 262, column: 4, scope: !6985)
!6987 = !DILocation(line: 265, column: 12, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6914, file: !6693, line: 265, column: 6)
!6989 = !DILocation(line: 265, column: 17, scope: !6988)
!6990 = !DILocation(line: 265, column: 42, scope: !6988)
!6991 = !DILocation(line: 265, column: 6, scope: !6914)
!6992 = !DILocation(line: 266, column: 3, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !6693, line: 266, column: 3)
!6994 = distinct !DILexicalBlock(scope: !6995, file: !6693, line: 266, column: 3)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !6693, line: 266, column: 3)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !6693, line: 266, column: 3)
!6997 = distinct !DILexicalBlock(scope: !6988, file: !6693, line: 265, column: 48)
!6998 = !DILocation(line: 267, column: 2, scope: !6997)
!6999 = !DILocation(line: 269, column: 12, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6914, file: !6693, line: 269, column: 6)
!7001 = !DILocation(line: 269, column: 17, scope: !7000)
!7002 = !DILocation(line: 269, column: 41, scope: !7000)
!7003 = !DILocation(line: 269, column: 6, scope: !6914)
!7004 = !DILocation(line: 270, column: 3, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6693, line: 270, column: 3)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !6693, line: 270, column: 3)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !6693, line: 270, column: 3)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !6693, line: 270, column: 3)
!7009 = distinct !DILexicalBlock(scope: !7000, file: !6693, line: 269, column: 47)
!7010 = !DILocation(line: 272, column: 2, scope: !7009)
!7011 = !DILocation(line: 288, column: 12, scope: !6928)
!7012 = !DILocation(line: 288, column: 17, scope: !6928)
!7013 = !DILocation(line: 288, column: 41, scope: !6928)
!7014 = !DILocation(line: 289, column: 9, scope: !6928)
!7015 = !DILocation(line: 289, column: 14, scope: !6928)
!7016 = !DILocation(line: 288, column: 6, scope: !6914)
!7017 = !DILocation(line: 308, column: 12, scope: !6926)
!7018 = !DILocation(line: 308, column: 17, scope: !6926)
!7019 = !DILocation(line: 308, column: 7, scope: !6927)
!7020 = !DILocation(line: 310, column: 6, scope: !6925)
!7021 = !DILocation(line: 309, column: 29, scope: !6925)
!7022 = !DILocation(line: 0, scope: !6925)
!7023 = !DILocation(line: 312, column: 8, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !6925, file: !6693, line: 312, column: 8)
!7025 = !DILocation(line: 312, column: 8, scope: !6925)
!7026 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7027, file: !6383, line: 1099, type: !110)
!7027 = distinct !DISubprogram(name: "__set_PSP", scope: !6383, file: !6383, line: 1099, type: !6480, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7028)
!7028 = !{!7026}
!7029 = !DILocation(line: 0, scope: !7027, inlinedAt: !7030)
!7030 = distinct !DILocation(line: 338, column: 5, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7024, file: !6693, line: 312, column: 23)
!7032 = !DILocation(line: 1101, column: 3, scope: !7027, inlinedAt: !7030)
!7033 = !{i64 2863224}
!7034 = !DILocation(line: 341, column: 4, scope: !7031)
!7035 = !DILocation(line: 342, column: 5, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !6693, line: 342, column: 5)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !6693, line: 342, column: 5)
!7038 = distinct !DILexicalBlock(scope: !7024, file: !6693, line: 341, column: 11)
!7039 = !DILocation(line: 342, column: 5, scope: !7037)
!7040 = !DILocation(line: 342, column: 5, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7036, file: !6693, line: 342, column: 5)
!7042 = !DILocation(line: 360, column: 12, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !6914, file: !6693, line: 360, column: 6)
!7044 = !DILocation(line: 360, column: 17, scope: !7043)
!7045 = !DILocation(line: 360, column: 41, scope: !7043)
!7046 = !DILocation(line: 360, column: 6, scope: !6914)
!7047 = !DILocation(line: 361, column: 14, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7043, file: !6693, line: 360, column: 47)
!7049 = !DILocation(line: 362, column: 2, scope: !7048)
!7050 = !DILocation(line: 366, column: 12, scope: !6914)
!7051 = !DILocation(line: 369, column: 15, scope: !6914)
!7052 = !DILocation(line: 371, column: 2, scope: !6914)
!7053 = distinct !DISubprogram(name: "bus_fault", scope: !6693, file: !6693, line: 383, type: !7054, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7056)
!7054 = !DISubroutineType(types: !7055)
!7055 = !{!109, !2716, !109, !6766}
!7056 = !{!7057, !7058, !7059, !7060, !7061}
!7057 = !DILocalVariable(name: "esf", arg: 1, scope: !7053, file: !6693, line: 383, type: !2716)
!7058 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7053, file: !6693, line: 383, type: !109)
!7059 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7053, file: !6693, line: 383, type: !6766)
!7060 = !DILocalVariable(name: "reason", scope: !7053, file: !6693, line: 385, type: !110)
!7061 = !DILocalVariable(name: "bfar", scope: !7062, file: !6693, line: 405, type: !110)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !6693, line: 395, column: 42)
!7063 = distinct !DILexicalBlock(scope: !7053, file: !6693, line: 395, column: 6)
!7064 = !DILocation(line: 0, scope: !7053)
!7065 = !DILocation(line: 387, column: 2, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !6693, line: 387, column: 2)
!7067 = distinct !DILexicalBlock(scope: !7068, file: !6693, line: 387, column: 2)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !6693, line: 387, column: 2)
!7069 = distinct !DILexicalBlock(scope: !7053, file: !6693, line: 387, column: 2)
!7070 = !DILocation(line: 389, column: 11, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7053, file: !6693, line: 389, column: 6)
!7072 = !DILocation(line: 389, column: 16, scope: !7071)
!7073 = !DILocation(line: 389, column: 6, scope: !7053)
!7074 = !DILocation(line: 390, column: 3, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !6693, line: 390, column: 3)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !6693, line: 390, column: 3)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !6693, line: 390, column: 3)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !6693, line: 390, column: 3)
!7079 = distinct !DILexicalBlock(scope: !7071, file: !6693, line: 389, column: 39)
!7080 = !DILocation(line: 391, column: 2, scope: !7079)
!7081 = !DILocation(line: 392, column: 11, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7053, file: !6693, line: 392, column: 6)
!7083 = !DILocation(line: 392, column: 16, scope: !7082)
!7084 = !DILocation(line: 392, column: 6, scope: !7053)
!7085 = !DILocation(line: 393, column: 3, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7087, file: !6693, line: 393, column: 3)
!7087 = distinct !DILexicalBlock(scope: !7088, file: !6693, line: 393, column: 3)
!7088 = distinct !DILexicalBlock(scope: !7089, file: !6693, line: 393, column: 3)
!7089 = distinct !DILexicalBlock(scope: !7090, file: !6693, line: 393, column: 3)
!7090 = distinct !DILexicalBlock(scope: !7082, file: !6693, line: 392, column: 41)
!7091 = !DILocation(line: 394, column: 2, scope: !7090)
!7092 = !DILocation(line: 395, column: 11, scope: !7063)
!7093 = !DILocation(line: 395, column: 16, scope: !7063)
!7094 = !DILocation(line: 395, column: 6, scope: !7053)
!7095 = !DILocation(line: 396, column: 3, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !6693, line: 396, column: 3)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !6693, line: 396, column: 3)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !6693, line: 396, column: 3)
!7099 = distinct !DILexicalBlock(scope: !7062, file: !6693, line: 396, column: 3)
!7100 = !DILocation(line: 405, column: 3, scope: !7062)
!7101 = !DILocation(line: 0, scope: !7062)
!7102 = !DILocation(line: 407, column: 13, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7062, file: !6693, line: 407, column: 7)
!7104 = !DILocation(line: 407, column: 18, scope: !7103)
!7105 = !DILocation(line: 407, column: 44, scope: !7103)
!7106 = !DILocation(line: 407, column: 7, scope: !7062)
!7107 = !DILocation(line: 408, column: 4, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7109, file: !6693, line: 408, column: 4)
!7109 = distinct !DILexicalBlock(scope: !7110, file: !6693, line: 408, column: 4)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !6693, line: 408, column: 4)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !6693, line: 408, column: 4)
!7112 = distinct !DILexicalBlock(scope: !7103, file: !6693, line: 407, column: 50)
!7113 = !DILocation(line: 409, column: 24, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7112, file: !6693, line: 409, column: 8)
!7115 = !DILocation(line: 409, column: 8, scope: !7112)
!7116 = !DILocation(line: 411, column: 15, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7114, file: !6693, line: 409, column: 30)
!7118 = !DILocation(line: 412, column: 4, scope: !7117)
!7119 = !DILocation(line: 415, column: 11, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7053, file: !6693, line: 415, column: 6)
!7121 = !DILocation(line: 415, column: 16, scope: !7120)
!7122 = !DILocation(line: 415, column: 6, scope: !7053)
!7123 = !DILocation(line: 416, column: 3, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !6693, line: 416, column: 3)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !6693, line: 416, column: 3)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !6693, line: 416, column: 3)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !6693, line: 416, column: 3)
!7128 = distinct !DILexicalBlock(scope: !7120, file: !6693, line: 415, column: 44)
!7129 = !DILocation(line: 417, column: 2, scope: !7128)
!7130 = !DILocation(line: 418, column: 12, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7053, file: !6693, line: 418, column: 6)
!7132 = !DILocation(line: 418, column: 17, scope: !7131)
!7133 = !DILocation(line: 418, column: 41, scope: !7131)
!7134 = !DILocation(line: 418, column: 6, scope: !7053)
!7135 = !DILocation(line: 423, column: 18, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7131, file: !6693, line: 423, column: 13)
!7137 = !DILocation(line: 423, column: 23, scope: !7136)
!7138 = !DILocation(line: 423, column: 13, scope: !7131)
!7139 = !DILocation(line: 0, scope: !7131)
!7140 = !DILocation(line: 524, column: 12, scope: !7053)
!7141 = !DILocation(line: 526, column: 15, scope: !7053)
!7142 = !DILocation(line: 528, column: 2, scope: !7053)
!7143 = distinct !DISubprogram(name: "usage_fault", scope: !6693, file: !6693, line: 539, type: !7144, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7148)
!7144 = !DISubroutineType(types: !7145)
!7145 = !{!110, !7146}
!7146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7147, size: 32)
!7147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2717)
!7148 = !{!7149, !7150}
!7149 = !DILocalVariable(name: "esf", arg: 1, scope: !7143, file: !6693, line: 539, type: !7146)
!7150 = !DILocalVariable(name: "reason", scope: !7143, file: !6693, line: 541, type: !110)
!7151 = !DILocation(line: 0, scope: !7143)
!7152 = !DILocation(line: 543, column: 2, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !6693, line: 543, column: 2)
!7154 = distinct !DILexicalBlock(scope: !7155, file: !6693, line: 543, column: 2)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !6693, line: 543, column: 2)
!7156 = distinct !DILexicalBlock(scope: !7143, file: !6693, line: 543, column: 2)
!7157 = !DILocation(line: 546, column: 12, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7143, file: !6693, line: 546, column: 6)
!7159 = !DILocation(line: 546, column: 17, scope: !7158)
!7160 = !DILocation(line: 546, column: 43, scope: !7158)
!7161 = !DILocation(line: 546, column: 6, scope: !7143)
!7162 = !DILocation(line: 547, column: 3, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !6693, line: 547, column: 3)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !6693, line: 547, column: 3)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !6693, line: 547, column: 3)
!7166 = distinct !DILexicalBlock(scope: !7167, file: !6693, line: 547, column: 3)
!7167 = distinct !DILexicalBlock(scope: !7158, file: !6693, line: 546, column: 49)
!7168 = !DILocation(line: 548, column: 2, scope: !7167)
!7169 = !DILocation(line: 549, column: 12, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7143, file: !6693, line: 549, column: 6)
!7171 = !DILocation(line: 549, column: 17, scope: !7170)
!7172 = !DILocation(line: 549, column: 43, scope: !7170)
!7173 = !DILocation(line: 549, column: 6, scope: !7143)
!7174 = !DILocation(line: 550, column: 3, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !6693, line: 550, column: 3)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !6693, line: 550, column: 3)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !6693, line: 550, column: 3)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !6693, line: 550, column: 3)
!7179 = distinct !DILexicalBlock(scope: !7170, file: !6693, line: 549, column: 49)
!7180 = !DILocation(line: 551, column: 2, scope: !7179)
!7181 = !DILocation(line: 567, column: 12, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7143, file: !6693, line: 567, column: 6)
!7183 = !DILocation(line: 567, column: 17, scope: !7182)
!7184 = !DILocation(line: 567, column: 38, scope: !7182)
!7185 = !DILocation(line: 567, column: 6, scope: !7143)
!7186 = !DILocation(line: 568, column: 3, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7188, file: !6693, line: 568, column: 3)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !6693, line: 568, column: 3)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !6693, line: 568, column: 3)
!7190 = distinct !DILexicalBlock(scope: !7191, file: !6693, line: 568, column: 3)
!7191 = distinct !DILexicalBlock(scope: !7182, file: !6693, line: 567, column: 44)
!7192 = !DILocation(line: 569, column: 2, scope: !7191)
!7193 = !DILocation(line: 570, column: 12, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7143, file: !6693, line: 570, column: 6)
!7195 = !DILocation(line: 570, column: 17, scope: !7194)
!7196 = !DILocation(line: 570, column: 39, scope: !7194)
!7197 = !DILocation(line: 570, column: 6, scope: !7143)
!7198 = !DILocation(line: 571, column: 3, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !6693, line: 571, column: 3)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !6693, line: 571, column: 3)
!7201 = distinct !DILexicalBlock(scope: !7202, file: !6693, line: 571, column: 3)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !6693, line: 571, column: 3)
!7203 = distinct !DILexicalBlock(scope: !7194, file: !6693, line: 570, column: 45)
!7204 = !DILocation(line: 572, column: 2, scope: !7203)
!7205 = !DILocation(line: 573, column: 12, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7143, file: !6693, line: 573, column: 6)
!7207 = !DILocation(line: 573, column: 17, scope: !7206)
!7208 = !DILocation(line: 573, column: 42, scope: !7206)
!7209 = !DILocation(line: 573, column: 6, scope: !7143)
!7210 = !DILocation(line: 574, column: 3, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !6693, line: 574, column: 3)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !6693, line: 574, column: 3)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !6693, line: 574, column: 3)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !6693, line: 574, column: 3)
!7215 = distinct !DILexicalBlock(scope: !7206, file: !6693, line: 573, column: 48)
!7216 = !DILocation(line: 575, column: 2, scope: !7215)
!7217 = !DILocation(line: 576, column: 12, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7143, file: !6693, line: 576, column: 6)
!7219 = !DILocation(line: 576, column: 17, scope: !7218)
!7220 = !DILocation(line: 576, column: 44, scope: !7218)
!7221 = !DILocation(line: 576, column: 6, scope: !7143)
!7222 = !DILocation(line: 577, column: 3, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !6693, line: 577, column: 3)
!7224 = distinct !DILexicalBlock(scope: !7225, file: !6693, line: 577, column: 3)
!7225 = distinct !DILexicalBlock(scope: !7226, file: !6693, line: 577, column: 3)
!7226 = distinct !DILexicalBlock(scope: !7227, file: !6693, line: 577, column: 3)
!7227 = distinct !DILexicalBlock(scope: !7218, file: !6693, line: 576, column: 50)
!7228 = !DILocation(line: 578, column: 2, scope: !7227)
!7229 = !DILocation(line: 581, column: 12, scope: !7143)
!7230 = !DILocation(line: 583, column: 2, scope: !7143)
!7231 = distinct !DISubprogram(name: "debug_monitor", scope: !6693, file: !6693, line: 632, type: !7232, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7234)
!7232 = !DISubroutineType(types: !7233)
!7233 = !{null, !2716, !6766}
!7234 = !{!7235, !7236}
!7235 = !DILocalVariable(name: "esf", arg: 1, scope: !7231, file: !6693, line: 632, type: !2716)
!7236 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7231, file: !6693, line: 632, type: !6766)
!7237 = !DILocation(line: 0, scope: !7231)
!7238 = !DILocation(line: 634, column: 15, scope: !7231)
!7239 = !DILocation(line: 636, column: 2, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7241, file: !6693, line: 636, column: 2)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !6693, line: 636, column: 2)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !6693, line: 636, column: 2)
!7243 = distinct !DILexicalBlock(scope: !7231, file: !6693, line: 636, column: 2)
!7244 = !DILocation(line: 652, column: 1, scope: !7231)
!7245 = distinct !DISubprogram(name: "reserved_exception", scope: !6693, file: !6693, line: 776, type: !7246, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7248)
!7246 = !DISubroutineType(types: !7247)
!7247 = !{null, !7146, !109}
!7248 = !{!7249, !7250}
!7249 = !DILocalVariable(name: "esf", arg: 1, scope: !7245, file: !6693, line: 776, type: !7146)
!7250 = !DILocalVariable(name: "fault", arg: 2, scope: !7245, file: !6693, line: 776, type: !109)
!7251 = !DILocation(line: 0, scope: !7245)
!7252 = !DILocation(line: 780, column: 2, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !6693, line: 780, column: 2)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !6693, line: 780, column: 2)
!7255 = distinct !DILexicalBlock(scope: !7256, file: !6693, line: 780, column: 2)
!7256 = distinct !DILexicalBlock(scope: !7245, file: !6693, line: 780, column: 2)
!7257 = !DILocation(line: 783, column: 1, scope: !7245)
!7258 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6693, file: !6693, line: 658, type: !7259, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !7261)
!7259 = !DISubroutineType(types: !7260)
!7260 = !{!347, !2716}
!7261 = !{!7262, !7263, !7264}
!7262 = !DILocalVariable(name: "esf", arg: 1, scope: !7258, file: !6693, line: 658, type: !2716)
!7263 = !DILocalVariable(name: "ret_addr", scope: !7258, file: !6693, line: 660, type: !2759)
!7264 = !DILocalVariable(name: "fault_insn", scope: !7258, file: !6693, line: 686, type: !194)
!7265 = !DILocation(line: 0, scope: !7258)
!7266 = !DILocation(line: 660, column: 46, scope: !7258)
!7267 = !DILocation(line: 660, column: 23, scope: !7258)
!7268 = !DILocation(line: 682, column: 11, scope: !7258)
!7269 = !DILocation(line: 271, column: 3, scope: !7270, inlinedAt: !7271)
!7270 = distinct !DISubprogram(name: "__DSB", scope: !6383, file: !6383, line: 269, type: !3070, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !2002)
!7271 = distinct !DILocation(line: 683, column: 2, scope: !7258)
!7272 = !{i64 2839359}
!7273 = !DILocation(line: 260, column: 3, scope: !7274, inlinedAt: !7275)
!7274 = distinct !DISubprogram(name: "__ISB", scope: !6383, file: !6383, line: 258, type: !3070, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !2002)
!7275 = distinct !DILocation(line: 684, column: 2, scope: !7258)
!7276 = !{i64 2839076}
!7277 = !DILocation(line: 686, column: 35, scope: !7258)
!7278 = !DILocation(line: 686, column: 24, scope: !7258)
!7279 = !DILocation(line: 688, column: 11, scope: !7258)
!7280 = !DILocation(line: 271, column: 3, scope: !7270, inlinedAt: !7281)
!7281 = distinct !DILocation(line: 689, column: 2, scope: !7258)
!7282 = !DILocation(line: 260, column: 3, scope: !7274, inlinedAt: !7283)
!7283 = distinct !DILocation(line: 690, column: 2, scope: !7258)
!7284 = !DILocation(line: 693, column: 45, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7258, file: !6693, line: 693, column: 6)
!7286 = !DILocation(line: 699, column: 1, scope: !7258)
!7287 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6693, file: !6693, line: 1107, type: !3070, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2688, retainedNodes: !2002)
!7288 = !DILocation(line: 1111, column: 11, scope: !7287)
!7289 = !DILocation(line: 1136, column: 1, scope: !7287)
!7290 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7291, file: !7291, line: 26, type: !3070, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !7292)
!7291 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7292 = !{!7293}
!7293 = !DILocalVariable(name: "irq", scope: !7290, file: !7291, line: 28, type: !109)
!7294 = !DILocation(line: 0, scope: !7290)
!7295 = !DILocation(line: 30, column: 2, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7290, file: !7291, line: 30, column: 2)
!7297 = !DILocation(line: 31, column: 3, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7299, file: !7291, line: 30, column: 39)
!7299 = distinct !DILexicalBlock(scope: !7296, file: !7291, line: 30, column: 2)
!7300 = !DILocation(line: 30, column: 35, scope: !7299)
!7301 = !DILocation(line: 30, column: 13, scope: !7299)
!7302 = distinct !{!7302, !7295, !7303}
!7303 = !DILocation(line: 32, column: 2, scope: !7296)
!7304 = !DILocation(line: 33, column: 1, scope: !7290)
!7305 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6423, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !7306)
!7306 = !{!7307, !7308}
!7307 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7305, file: !535, line: 1814, type: !771)
!7308 = !DILocalVariable(name: "priority", arg: 2, scope: !7305, file: !535, line: 1814, type: !110)
!7309 = !DILocation(line: 0, scope: !7305)
!7310 = !DILocation(line: 1816, column: 7, scope: !7305)
!7311 = !DILocation(line: 0, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7305, file: !535, line: 1816, column: 7)
!7313 = !DILocation(line: 1824, column: 1, scope: !7305)
!7314 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7315, file: !7315, line: 27, type: !7316, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2805, retainedNodes: !7422)
!7315 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7316 = !DISubroutineType(types: !7317)
!7317 = !{null, !7318}
!7318 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !7319)
!7319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7320, size: 32)
!7320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !7321)
!7321 = !{!7322, !7380, !7392, !7393, !7394, !7395, !7396, !7402, !7417}
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7320, file: !158, line: 247, baseType: !7323, size: 384)
!7323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !7324)
!7324 = !{!7325, !7349, !7356, !7357, !7358, !7367, !7368, !7369}
!7325 = !DIDerivedType(tag: DW_TAG_member, scope: !7323, file: !158, line: 60, baseType: !7326, size: 64)
!7326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7323, file: !158, line: 60, size: 64, elements: !7327)
!7327 = !{!7328, !7343}
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7326, file: !158, line: 61, baseType: !7329, size: 64)
!7329 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !7330)
!7330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7331)
!7331 = !{!7332, !7338}
!7332 = !DIDerivedType(tag: DW_TAG_member, scope: !7330, file: !127, line: 38, baseType: !7333, size: 32)
!7333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7330, file: !127, line: 38, size: 32, elements: !7334)
!7334 = !{!7335, !7337}
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7333, file: !127, line: 39, baseType: !7336, size: 32)
!7336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7330, size: 32)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7333, file: !127, line: 40, baseType: !7336, size: 32)
!7338 = !DIDerivedType(tag: DW_TAG_member, scope: !7330, file: !127, line: 42, baseType: !7339, size: 32, offset: 32)
!7339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7330, file: !127, line: 42, size: 32, elements: !7340)
!7340 = !{!7341, !7342}
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7339, file: !127, line: 43, baseType: !7336, size: 32)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7339, file: !127, line: 44, baseType: !7336, size: 32)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7326, file: !158, line: 62, baseType: !7344, size: 64)
!7344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !7345)
!7345 = !{!7346}
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7344, file: !170, line: 50, baseType: !7347, size: 64)
!7347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7348, size: 64, elements: !175)
!7348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7344, size: 32)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7323, file: !158, line: 68, baseType: !7350, size: 32, offset: 64)
!7350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7351, size: 32)
!7351 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7352)
!7352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7353)
!7353 = !{!7354}
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7352, file: !122, line: 232, baseType: !7355, size: 64)
!7355 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7330)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7323, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7323, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!7358 = !DIDerivedType(tag: DW_TAG_member, scope: !7323, file: !158, line: 90, baseType: !7359, size: 16, offset: 112)
!7359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7323, file: !158, line: 90, size: 16, elements: !7360)
!7360 = !{!7361, !7366}
!7361 = !DIDerivedType(tag: DW_TAG_member, scope: !7359, file: !158, line: 91, baseType: !7362, size: 16)
!7362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7359, file: !158, line: 91, size: 16, elements: !7363)
!7363 = !{!7364, !7365}
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7362, file: !158, line: 96, baseType: !190, size: 8)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7362, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7359, file: !158, line: 100, baseType: !194, size: 16)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7323, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7323, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7323, file: !158, line: 131, baseType: !7370, size: 192, offset: 192)
!7370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !7371)
!7371 = !{!7372, !7373, !7379}
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7370, file: !122, line: 245, baseType: !7329, size: 64)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7370, file: !122, line: 246, baseType: !7374, size: 32, offset: 64)
!7374 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !7375)
!7375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7376, size: 32)
!7376 = !DISubroutineType(types: !7377)
!7377 = !{null, !7378}
!7378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7370, size: 32)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7370, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7320, file: !158, line: 250, baseType: !7381, size: 288, offset: 384)
!7381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !7382)
!7382 = !{!7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390, !7391}
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7381, file: !211, line: 26, baseType: !110, size: 32)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7381, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7381, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7381, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7381, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7381, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7381, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7381, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7381, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7320, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7320, file: !158, line: 256, baseType: !7351, size: 64, offset: 704)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7320, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7320, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7320, file: !158, line: 300, baseType: !7397, size: 96, offset: 1056)
!7397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !7398)
!7398 = !{!7399, !7400, !7401}
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7397, file: !158, line: 153, baseType: !22, size: 32)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7397, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7397, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7320, file: !158, line: 325, baseType: !7403, size: 32, offset: 1152)
!7403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7404, size: 32)
!7404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !7405)
!7405 = !{!7406, !7412, !7413}
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7404, file: !118, line: 5074, baseType: !7407, size: 96)
!7407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !7408)
!7408 = !{!7409, !7410, !7411}
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7407, file: !243, line: 57, baseType: !246, size: 32)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7407, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7407, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7404, file: !118, line: 5075, baseType: !7351, size: 64, offset: 96)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7404, file: !118, line: 5076, baseType: !7414, size: 32, offset: 160)
!7414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !7415)
!7415 = !{!7416}
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7414, file: !253, line: 52, baseType: !22, size: 32)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7320, file: !158, line: 343, baseType: !7418, size: 64, offset: 1184)
!7418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !7419)
!7419 = !{!7420, !7421}
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7418, file: !211, line: 63, baseType: !110, size: 32)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7418, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!7422 = !{!7423}
!7423 = !DILocalVariable(name: "thread", arg: 1, scope: !7314, file: !7315, line: 27, type: !7318)
!7424 = !DILocation(line: 0, scope: !7314)
!7425 = !DILocation(line: 29, column: 6, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7314, file: !7315, line: 29, column: 6)
!7427 = !DILocation(line: 29, column: 15, scope: !7426)
!7428 = !DILocation(line: 29, column: 6, scope: !7314)
!7429 = !DILocation(line: 1031, column: 3, scope: !7430, inlinedAt: !7433)
!7430 = distinct !DISubprogram(name: "__get_IPSR", scope: !6383, file: !6383, line: 1027, type: !6470, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2805, retainedNodes: !7431)
!7431 = !{!7432}
!7432 = !DILocalVariable(name: "result", scope: !7430, file: !6383, line: 1029, type: !110)
!7433 = distinct !DILocation(line: 48, column: 10, scope: !7434, inlinedAt: !7438)
!7434 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7435, file: !7435, line: 46, type: !7436, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2805, retainedNodes: !2002)
!7435 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7436 = !DISubroutineType(types: !7437)
!7437 = !{!347}
!7438 = distinct !DILocation(line: 30, column: 7, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !7315, line: 30, column: 7)
!7440 = distinct !DILexicalBlock(scope: !7426, file: !7315, line: 29, column: 26)
!7441 = !{i64 2828207}
!7442 = !DILocation(line: 0, scope: !7430, inlinedAt: !7433)
!7443 = !DILocation(line: 48, column: 9, scope: !7434, inlinedAt: !7438)
!7444 = !DILocation(line: 30, column: 7, scope: !7440)
!7445 = !DILocation(line: 42, column: 14, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7439, file: !7315, line: 30, column: 25)
!7447 = !DILocation(line: 48, column: 15, scope: !7446)
!7448 = !DILocation(line: 49, column: 3, scope: !7446)
!7449 = !DILocation(line: 52, column: 2, scope: !7314)
!7450 = !DILocation(line: 53, column: 1, scope: !7314)
!7451 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3070, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !2002)
!7452 = !DILocation(line: 134, column: 2, scope: !7451)
!7453 = !DILocation(line: 156, column: 1, scope: !7451)
!7454 = !DILocation(line: 0, scope: !393)
!7455 = !DILocation(line: 289, column: 36, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7457 = !DILocation(line: 289, column: 42, scope: !7456)
!7458 = !DILocation(line: 300, column: 36, scope: !393)
!7459 = !DILocation(line: 301, column: 35, scope: !393)
!7460 = !DILocation(line: 302, column: 37, scope: !393)
!7461 = !DILocation(line: 311, column: 2, scope: !393)
!7462 = !DILocation(line: 316, column: 1, scope: !393)
!7463 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !563, file: !563, line: 180, type: !3070, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2002)
!7464 = !DILocation(line: 188, column: 12, scope: !7463)
!7465 = !DILocation(line: 271, column: 3, scope: !7466, inlinedAt: !7467)
!7466 = distinct !DISubprogram(name: "__DSB", scope: !6383, file: !6383, line: 269, type: !3070, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2002)
!7467 = distinct !DILocation(line: 192, column: 2, scope: !7463)
!7468 = !{i64 2991342}
!7469 = !DILocation(line: 260, column: 3, scope: !7470, inlinedAt: !7471)
!7470 = distinct !DISubprogram(name: "__ISB", scope: !6383, file: !6383, line: 258, type: !3070, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2002)
!7471 = distinct !DILocation(line: 193, column: 2, scope: !7463)
!7472 = !{i64 2991059}
!7473 = !DILocation(line: 194, column: 1, scope: !7463)
!7474 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !563, file: !563, line: 199, type: !3070, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2002)
!7475 = !DILocation(line: 282, column: 3, scope: !7476, inlinedAt: !7477)
!7476 = distinct !DISubprogram(name: "__DMB", scope: !6383, file: !6383, line: 280, type: !3070, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2002)
!7477 = distinct !DILocation(line: 202, column: 2, scope: !7474)
!7478 = !{i64 2991618}
!7479 = !DILocation(line: 205, column: 12, scope: !7474)
!7480 = !DILocation(line: 206, column: 1, scope: !7474)
!7481 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !563, file: !563, line: 275, type: !7482, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7495)
!7482 = !DISubroutineType(types: !7483)
!7483 = !{null, !7484, !1784, !6660, !6660}
!7484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7485, size: 32)
!7485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7486)
!7486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !7487)
!7487 = !{!7488, !7489, !7490}
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7486, file: !507, line: 53, baseType: !22, size: 32)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7486, file: !507, line: 54, baseType: !234, size: 32, offset: 32)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7486, file: !507, line: 55, baseType: !7491, size: 32, offset: 64)
!7491 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !7492)
!7492 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !7493)
!7493 = !{!7494}
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7492, file: !513, line: 150, baseType: !110, size: 32)
!7495 = !{!7496, !7497, !7498, !7499}
!7496 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7481, file: !563, line: 276, type: !7484)
!7497 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7481, file: !563, line: 276, type: !1784)
!7498 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7481, file: !563, line: 277, type: !6660)
!7499 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7481, file: !563, line: 277, type: !6660)
!7500 = !DILocation(line: 0, scope: !7481)
!7501 = !DILocation(line: 279, column: 6, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7481, file: !563, line: 279, column: 6)
!7503 = !DILocation(line: 280, column: 57, scope: !7502)
!7504 = !DILocation(line: 279, column: 6, scope: !7481)
!7505 = !DILocation(line: 282, column: 3, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7507, file: !563, line: 282, column: 3)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !563, line: 282, column: 3)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !563, line: 282, column: 3)
!7509 = distinct !DILexicalBlock(scope: !7502, file: !563, line: 280, column: 69)
!7510 = !DILocation(line: 285, column: 1, scope: !7481)
!7511 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7512, file: !7512, line: 220, type: !7513, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7515)
!7512 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7513 = !DISubroutineType(types: !7514)
!7514 = !{!109, !7484, !1784, !6660, !6660}
!7515 = !{!7516, !7517, !7518, !7519, !7520}
!7516 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7511, file: !7512, line: 221, type: !7484)
!7517 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7511, file: !7512, line: 221, type: !1784)
!7518 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7511, file: !7512, line: 222, type: !6660)
!7519 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7511, file: !7512, line: 223, type: !6660)
!7520 = !DILocalVariable(name: "mpu_reg_index", scope: !7511, file: !7512, line: 225, type: !109)
!7521 = !DILocation(line: 0, scope: !7511)
!7522 = !DILocation(line: 225, column: 22, scope: !7511)
!7523 = !DILocation(line: 233, column: 18, scope: !7511)
!7524 = !DILocation(line: 236, column: 23, scope: !7511)
!7525 = !DILocation(line: 236, column: 21, scope: !7511)
!7526 = !DILocation(line: 238, column: 2, scope: !7511)
!7527 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !563, file: !563, line: 105, type: !7528, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7530)
!7528 = !DISubroutineType(types: !7529)
!7529 = !{!109, !7484, !180, !180, !347}
!7530 = !{!7531, !7532, !7533, !7534, !7535, !7536}
!7531 = !DILocalVariable(name: "regions", arg: 1, scope: !7527, file: !563, line: 106, type: !7484)
!7532 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7527, file: !563, line: 106, type: !180)
!7533 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7527, file: !563, line: 106, type: !180)
!7534 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7527, file: !563, line: 107, type: !347)
!7535 = !DILocalVariable(name: "i", scope: !7527, file: !563, line: 109, type: !109)
!7536 = !DILocalVariable(name: "reg_index", scope: !7527, file: !563, line: 110, type: !109)
!7537 = !DILocation(line: 0, scope: !7527)
!7538 = !DILocation(line: 110, column: 18, scope: !7527)
!7539 = !DILocation(line: 112, column: 16, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !563, line: 112, column: 2)
!7541 = distinct !DILexicalBlock(scope: !7527, file: !563, line: 112, column: 2)
!7542 = !DILocation(line: 112, column: 2, scope: !7541)
!7543 = !DILocation(line: 113, column: 7, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7545, file: !563, line: 113, column: 7)
!7545 = distinct !DILexicalBlock(scope: !7540, file: !563, line: 112, column: 36)
!7546 = !DILocation(line: 113, column: 18, scope: !7544)
!7547 = !DILocation(line: 113, column: 23, scope: !7544)
!7548 = !DILocation(line: 113, column: 7, scope: !7545)
!7549 = !DILocation(line: 118, column: 23, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7545, file: !563, line: 118, column: 7)
!7551 = !DILocation(line: 119, column: 7, scope: !7550)
!7552 = !DILocation(line: 118, column: 7, scope: !7545)
!7553 = !DILocation(line: 120, column: 4, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7555, file: !563, line: 120, column: 4)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !563, line: 120, column: 4)
!7556 = distinct !DILexicalBlock(scope: !7557, file: !563, line: 120, column: 4)
!7557 = distinct !DILexicalBlock(scope: !7558, file: !563, line: 120, column: 4)
!7558 = distinct !DILexicalBlock(scope: !7550, file: !563, line: 119, column: 45)
!7559 = !DILocation(line: 121, column: 4, scope: !7558)
!7560 = !DILocation(line: 124, column: 36, scope: !7545)
!7561 = !DILocation(line: 124, column: 15, scope: !7545)
!7562 = !DILocation(line: 126, column: 17, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7545, file: !563, line: 126, column: 7)
!7564 = !DILocation(line: 126, column: 7, scope: !7545)
!7565 = !DILocation(line: 131, column: 12, scope: !7545)
!7566 = !DILocation(line: 132, column: 2, scope: !7545)
!7567 = !DILocation(line: 112, column: 32, scope: !7540)
!7568 = distinct !{!7568, !7542, !7569}
!7569 = !DILocation(line: 132, column: 2, scope: !7541)
!7570 = !DILocation(line: 135, column: 1, scope: !7527)
!7571 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7512, file: !7512, line: 63, type: !7572, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7574)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{!109, !7484}
!7574 = !{!7575, !7576}
!7575 = !DILocalVariable(name: "part", arg: 1, scope: !7571, file: !7512, line: 63, type: !7484)
!7576 = !DILocalVariable(name: "partition_is_valid", scope: !7571, file: !7512, line: 70, type: !109)
!7577 = !DILocation(line: 0, scope: !7571)
!7578 = !DILocation(line: 71, column: 11, scope: !7571)
!7579 = !DILocation(line: 71, column: 37, scope: !7571)
!7580 = !{i32 0, i32 33}
!7581 = !DILocation(line: 72, column: 3, scope: !7571)
!7582 = !DILocation(line: 71, column: 30, scope: !7571)
!7583 = !DILocation(line: 75, column: 11, scope: !7571)
!7584 = !DILocation(line: 75, column: 17, scope: !7571)
!7585 = !DILocation(line: 75, column: 38, scope: !7571)
!7586 = !DILocation(line: 77, column: 2, scope: !7571)
!7587 = distinct !DISubprogram(name: "mpu_configure_region", scope: !563, file: !563, line: 79, type: !7588, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7590)
!7588 = !DISubroutineType(types: !7589)
!7589 = !{!109, !1784, !7484}
!7590 = !{!7591, !7592, !7593}
!7591 = !DILocalVariable(name: "index", arg: 1, scope: !7587, file: !563, line: 79, type: !1784)
!7592 = !DILocalVariable(name: "new_region", arg: 2, scope: !7587, file: !563, line: 80, type: !7484)
!7593 = !DILocalVariable(name: "region_conf", scope: !7587, file: !563, line: 82, type: !552)
!7594 = !DILocation(line: 0, scope: !7587)
!7595 = !DILocation(line: 82, column: 2, scope: !7587)
!7596 = !DILocation(line: 82, column: 24, scope: !7587)
!7597 = !DILocation(line: 87, column: 33, scope: !7587)
!7598 = !DILocation(line: 87, column: 14, scope: !7587)
!7599 = !DILocation(line: 87, column: 19, scope: !7587)
!7600 = !DILocation(line: 91, column: 55, scope: !7587)
!7601 = !DILocation(line: 92, column: 16, scope: !7587)
!7602 = !DILocation(line: 92, column: 53, scope: !7587)
!7603 = !DILocation(line: 91, column: 2, scope: !7587)
!7604 = !DILocation(line: 95, column: 9, scope: !7587)
!7605 = !DILocation(line: 97, column: 1, scope: !7587)
!7606 = !DILocation(line: 95, column: 2, scope: !7587)
!7607 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7512, file: !7512, line: 113, type: !7608, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7613)
!7608 = !DISubroutineType(types: !7609)
!7609 = !{null, !7610, !7611, !110, !110}
!7610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!7611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7612, size: 32)
!7612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7491)
!7613 = !{!7614, !7615, !7616, !7617}
!7614 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7607, file: !7512, line: 114, type: !7610)
!7615 = !DILocalVariable(name: "attr", arg: 2, scope: !7607, file: !7512, line: 115, type: !7611)
!7616 = !DILocalVariable(name: "base", arg: 3, scope: !7607, file: !7512, line: 115, type: !110)
!7617 = !DILocalVariable(name: "size", arg: 4, scope: !7607, file: !7512, line: 115, type: !110)
!7618 = !DILocation(line: 0, scope: !7607)
!7619 = !DILocation(line: 127, column: 23, scope: !7607)
!7620 = !DILocation(line: 127, column: 35, scope: !7607)
!7621 = !DILocation(line: 127, column: 33, scope: !7607)
!7622 = !DILocation(line: 127, column: 10, scope: !7607)
!7623 = !DILocation(line: 127, column: 15, scope: !7607)
!7624 = !DILocation(line: 129, column: 1, scope: !7607)
!7625 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !563, file: !563, line: 57, type: !7626, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7628)
!7626 = !DISubroutineType(types: !7627)
!7627 = !{!109, !1784, !550}
!7628 = !{!7629, !7630}
!7629 = !DILocalVariable(name: "index", arg: 1, scope: !7625, file: !563, line: 57, type: !1784)
!7630 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7625, file: !563, line: 58, type: !550)
!7631 = !DILocation(line: 0, scope: !7625)
!7632 = !DILocation(line: 61, column: 6, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7625, file: !563, line: 61, column: 6)
!7634 = !DILocation(line: 61, column: 12, scope: !7633)
!7635 = !DILocation(line: 61, column: 6, scope: !7625)
!7636 = !DILocation(line: 64, column: 3, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7638, file: !563, line: 64, column: 3)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !563, line: 64, column: 3)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !563, line: 64, column: 3)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !563, line: 64, column: 3)
!7641 = distinct !DILexicalBlock(scope: !7633, file: !563, line: 61, column: 40)
!7642 = !DILocation(line: 65, column: 3, scope: !7641)
!7643 = !DILocation(line: 71, column: 2, scope: !7625)
!7644 = !DILocation(line: 73, column: 2, scope: !7625)
!7645 = !DILocation(line: 74, column: 1, scope: !7625)
!7646 = distinct !DISubprogram(name: "region_init", scope: !7512, file: !7512, line: 29, type: !7647, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7649)
!7647 = !DISubroutineType(types: !7648)
!7648 = !{null, !6660, !550}
!7649 = !{!7650, !7651}
!7650 = !DILocalVariable(name: "index", arg: 1, scope: !7646, file: !7512, line: 29, type: !6660)
!7651 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7646, file: !7512, line: 30, type: !550)
!7652 = !DILocation(line: 0, scope: !7646)
!7653 = !DILocation(line: 33, column: 2, scope: !7646)
!7654 = !DILocation(line: 47, column: 28, scope: !7646)
!7655 = !DILocation(line: 47, column: 33, scope: !7646)
!7656 = !DILocation(line: 48, column: 26, scope: !7646)
!7657 = !DILocation(line: 47, column: 12, scope: !7646)
!7658 = !DILocation(line: 49, column: 32, scope: !7646)
!7659 = !DILocation(line: 49, column: 37, scope: !7646)
!7660 = !DILocation(line: 49, column: 12, scope: !7646)
!7661 = !DILocation(line: 53, column: 1, scope: !7646)
!7662 = distinct !DISubprogram(name: "set_region_number", scope: !7663, file: !7663, line: 32, type: !6480, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7664)
!7663 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7664 = !{!7665}
!7665 = !DILocalVariable(name: "index", arg: 1, scope: !7662, file: !7663, line: 32, type: !110)
!7666 = !DILocation(line: 0, scope: !7662)
!7667 = !DILocation(line: 34, column: 11, scope: !7662)
!7668 = !DILocation(line: 35, column: 1, scope: !7662)
!7669 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7512, file: !7512, line: 88, type: !7670, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7672)
!7670 = !DISubroutineType(types: !7671)
!7671 = !{!110, !110}
!7672 = !{!7673}
!7673 = !DILocalVariable(name: "size", arg: 1, scope: !7669, file: !7512, line: 88, type: !110)
!7674 = !DILocation(line: 0, scope: !7669)
!7675 = !DILocation(line: 91, column: 11, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7669, file: !7512, line: 91, column: 6)
!7677 = !DILocation(line: 91, column: 6, scope: !7669)
!7678 = !DILocation(line: 100, column: 11, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7669, file: !7512, line: 100, column: 6)
!7680 = !DILocation(line: 100, column: 6, scope: !7669)
!7681 = !DILocation(line: 104, column: 35, scope: !7669)
!7682 = !DILocation(line: 104, column: 16, scope: !7669)
!7683 = !DILocation(line: 104, column: 50, scope: !7669)
!7684 = !DILocation(line: 104, column: 72, scope: !7669)
!7685 = !DILocation(line: 104, column: 2, scope: !7669)
!7686 = !DILocation(line: 106, column: 1, scope: !7669)
!7687 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !563, file: !563, line: 307, type: !7688, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7690)
!7688 = !DISubroutineType(types: !7689)
!7689 = !{null, !7484, !180}
!7690 = !{!7691, !7692}
!7691 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7687, file: !563, line: 308, type: !7484)
!7692 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7687, file: !563, line: 308, type: !180)
!7693 = !DILocation(line: 0, scope: !7687)
!7694 = !DILocation(line: 310, column: 6, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7687, file: !563, line: 310, column: 6)
!7696 = !DILocation(line: 311, column: 3, scope: !7695)
!7697 = !DILocation(line: 310, column: 6, scope: !7687)
!7698 = !DILocation(line: 313, column: 3, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7700, file: !563, line: 313, column: 3)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !563, line: 313, column: 3)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !563, line: 313, column: 3)
!7702 = distinct !DILexicalBlock(scope: !7695, file: !563, line: 311, column: 15)
!7703 = !DILocation(line: 316, column: 1, scope: !7687)
!7704 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7512, file: !7512, line: 249, type: !7705, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7707)
!7705 = !DISubroutineType(types: !7706)
!7706 = !{!109, !7484, !180}
!7707 = !{!7708, !7709, !7710, !7711}
!7708 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7704, file: !7512, line: 250, type: !7484)
!7709 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7704, file: !7512, line: 250, type: !180)
!7710 = !DILocalVariable(name: "mpu_reg_index", scope: !7704, file: !7512, line: 252, type: !109)
!7711 = !DILocalVariable(name: "i", scope: !7712, file: !7512, line: 264, type: !109)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !7512, line: 264, column: 3)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !7512, line: 261, column: 32)
!7714 = distinct !DILexicalBlock(scope: !7704, file: !7512, line: 261, column: 6)
!7715 = !DILocation(line: 0, scope: !7704)
!7716 = !DILocation(line: 252, column: 22, scope: !7704)
!7717 = !DILocation(line: 258, column: 18, scope: !7704)
!7718 = !DILocation(line: 261, column: 20, scope: !7714)
!7719 = !DILocation(line: 261, column: 6, scope: !7704)
!7720 = !DILocation(line: 0, scope: !7712)
!7721 = !DILocation(line: 265, column: 4, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !7512, line: 264, column: 59)
!7723 = distinct !DILexicalBlock(scope: !7712, file: !7512, line: 264, column: 3)
!7724 = !DILocation(line: 264, column: 55, scope: !7723)
!7725 = !DILocation(line: 264, column: 33, scope: !7723)
!7726 = !DILocation(line: 264, column: 3, scope: !7712)
!7727 = distinct !{!7727, !7726, !7728}
!7728 = !DILocation(line: 266, column: 3, scope: !7712)
!7729 = !DILocation(line: 269, column: 2, scope: !7704)
!7730 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7731, file: !7731, line: 218, type: !6480, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7732)
!7731 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7732 = !{!7733}
!7733 = !DILocalVariable(name: "rnr", arg: 1, scope: !7730, file: !7731, line: 218, type: !110)
!7734 = !DILocation(line: 0, scope: !7730)
!7735 = !DILocation(line: 220, column: 12, scope: !7730)
!7736 = !DILocation(line: 221, column: 13, scope: !7730)
!7737 = !DILocation(line: 222, column: 1, scope: !7730)
!7738 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !563, file: !563, line: 326, type: !7739, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7741)
!7739 = !DISubroutineType(types: !7740)
!7740 = !{!109}
!7741 = !{!7742}
!7742 = !DILocalVariable(name: "r_index", scope: !7738, file: !563, line: 328, type: !110)
!7743 = !DILocation(line: 330, column: 17, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7738, file: !563, line: 330, column: 6)
!7745 = !DILocation(line: 330, column: 29, scope: !7744)
!7746 = !DILocation(line: 330, column: 6, scope: !7738)
!7747 = !DILocation(line: 337, column: 3, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !563, line: 337, column: 3)
!7749 = distinct !DILexicalBlock(scope: !7750, file: !563, line: 337, column: 3)
!7750 = distinct !DILexicalBlock(scope: !7751, file: !563, line: 337, column: 3)
!7751 = distinct !DILexicalBlock(scope: !7744, file: !563, line: 330, column: 50)
!7752 = !DILocation(line: 347, column: 2, scope: !7738)
!7753 = !DILocation(line: 0, scope: !7738)
!7754 = !DILocation(line: 364, column: 29, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !563, line: 364, column: 2)
!7756 = distinct !DILexicalBlock(scope: !7738, file: !563, line: 364, column: 2)
!7757 = !DILocation(line: 364, column: 2, scope: !7756)
!7758 = !DILocation(line: 365, column: 25, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7755, file: !563, line: 364, column: 66)
!7760 = !DILocation(line: 365, column: 3, scope: !7759)
!7761 = !DILocation(line: 364, column: 62, scope: !7755)
!7762 = distinct !{!7762, !7757, !7763}
!7763 = !DILocation(line: 366, column: 2, scope: !7756)
!7764 = !DILocation(line: 369, column: 23, scope: !7738)
!7765 = !DILocation(line: 369, column: 21, scope: !7738)
!7766 = !DILocation(line: 372, column: 2, scope: !7738)
!7767 = !DILocation(line: 433, column: 2, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !563, line: 433, column: 2)
!7769 = distinct !DILexicalBlock(scope: !7738, file: !563, line: 433, column: 2)
!7770 = !DILocation(line: 433, column: 2, scope: !7769)
!7771 = !DILocation(line: 433, column: 2, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7768, file: !563, line: 433, column: 2)
!7773 = !DILocation(line: 444, column: 1, scope: !7738)
!7774 = distinct !DISubprogram(name: "strcpy", scope: !7775, file: !7775, line: 20, type: !7776, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !7780)
!7775 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!285, !7778, !7779}
!7778 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !285)
!7779 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !279)
!7780 = !{!7781, !7782, !7783}
!7781 = !DILocalVariable(name: "d", arg: 1, scope: !7774, file: !7775, line: 20, type: !7778)
!7782 = !DILocalVariable(name: "s", arg: 2, scope: !7774, file: !7775, line: 20, type: !7779)
!7783 = !DILocalVariable(name: "dest", scope: !7774, file: !7775, line: 22, type: !285)
!7784 = !DILocation(line: 0, scope: !7774)
!7785 = !DILocation(line: 24, column: 9, scope: !7774)
!7786 = !DILocation(line: 24, column: 12, scope: !7774)
!7787 = !DILocation(line: 24, column: 2, scope: !7774)
!7788 = !DILocation(line: 25, column: 6, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7774, file: !7775, line: 24, column: 21)
!7790 = !DILocation(line: 26, column: 4, scope: !7789)
!7791 = !DILocation(line: 27, column: 4, scope: !7789)
!7792 = distinct !{!7792, !7787, !7793}
!7793 = !DILocation(line: 28, column: 2, scope: !7774)
!7794 = !DILocation(line: 30, column: 5, scope: !7774)
!7795 = !DILocation(line: 32, column: 2, scope: !7774)
!7796 = distinct !DISubprogram(name: "strncpy", scope: !7775, file: !7775, line: 42, type: !7797, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !7799)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{!285, !7778, !7779, !234}
!7799 = !{!7800, !7801, !7802, !7803}
!7800 = !DILocalVariable(name: "d", arg: 1, scope: !7796, file: !7775, line: 42, type: !7778)
!7801 = !DILocalVariable(name: "s", arg: 2, scope: !7796, file: !7775, line: 42, type: !7779)
!7802 = !DILocalVariable(name: "n", arg: 3, scope: !7796, file: !7775, line: 42, type: !234)
!7803 = !DILocalVariable(name: "dest", scope: !7796, file: !7775, line: 44, type: !285)
!7804 = !DILocation(line: 0, scope: !7796)
!7805 = !DILocation(line: 46, column: 12, scope: !7796)
!7806 = !DILocation(line: 46, column: 17, scope: !7796)
!7807 = !DILocation(line: 46, column: 20, scope: !7796)
!7808 = !DILocation(line: 46, column: 23, scope: !7796)
!7809 = !DILocation(line: 46, column: 2, scope: !7796)
!7810 = !DILocation(line: 47, column: 6, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7796, file: !7775, line: 46, column: 32)
!7812 = !DILocation(line: 48, column: 4, scope: !7811)
!7813 = !DILocation(line: 49, column: 4, scope: !7811)
!7814 = !DILocation(line: 50, column: 4, scope: !7811)
!7815 = distinct !{!7815, !7809, !7816}
!7816 = !DILocation(line: 51, column: 2, scope: !7796)
!7817 = !DILocation(line: 54, column: 6, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7796, file: !7775, line: 53, column: 16)
!7819 = !DILocation(line: 55, column: 4, scope: !7818)
!7820 = !DILocation(line: 56, column: 4, scope: !7818)
!7821 = !DILocation(line: 53, column: 11, scope: !7796)
!7822 = !DILocation(line: 53, column: 2, scope: !7796)
!7823 = distinct !{!7823, !7822, !7824}
!7824 = !DILocation(line: 57, column: 2, scope: !7796)
!7825 = !DILocation(line: 59, column: 2, scope: !7796)
!7826 = distinct !DISubprogram(name: "strchr", scope: !7775, file: !7775, line: 69, type: !7827, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !7829)
!7827 = !DISubroutineType(types: !7828)
!7828 = !{!285, !279, !109}
!7829 = !{!7830, !7831, !7832}
!7830 = !DILocalVariable(name: "s", arg: 1, scope: !7826, file: !7775, line: 69, type: !279)
!7831 = !DILocalVariable(name: "c", arg: 2, scope: !7826, file: !7775, line: 69, type: !109)
!7832 = !DILocalVariable(name: "tmp", scope: !7826, file: !7775, line: 71, type: !150)
!7833 = !DILocation(line: 0, scope: !7826)
!7834 = !DILocation(line: 73, column: 2, scope: !7826)
!7835 = !DILocation(line: 73, column: 10, scope: !7826)
!7836 = !DILocation(line: 73, column: 13, scope: !7826)
!7837 = !DILocation(line: 73, column: 21, scope: !7826)
!7838 = !DILocation(line: 74, column: 4, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7826, file: !7775, line: 73, column: 38)
!7840 = distinct !{!7840, !7834, !7841}
!7841 = !DILocation(line: 75, column: 2, scope: !7826)
!7842 = !DILocation(line: 77, column: 9, scope: !7826)
!7843 = !DILocation(line: 77, column: 2, scope: !7826)
!7844 = distinct !DISubprogram(name: "strrchr", scope: !7775, file: !7775, line: 87, type: !7827, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !7845)
!7845 = !{!7846, !7847, !7848}
!7846 = !DILocalVariable(name: "s", arg: 1, scope: !7844, file: !7775, line: 87, type: !279)
!7847 = !DILocalVariable(name: "c", arg: 2, scope: !7844, file: !7775, line: 87, type: !109)
!7848 = !DILocalVariable(name: "match", scope: !7844, file: !7775, line: 89, type: !285)
!7849 = !DILocation(line: 0, scope: !7844)
!7850 = !DILocation(line: 91, column: 2, scope: !7844)
!7851 = !DILocation(line: 92, column: 7, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !7775, line: 92, column: 7)
!7853 = distinct !DILexicalBlock(scope: !7844, file: !7775, line: 91, column: 5)
!7854 = !DILocation(line: 92, column: 10, scope: !7852)
!7855 = !DILocation(line: 92, column: 7, scope: !7853)
!7856 = !DILocation(line: 95, column: 13, scope: !7844)
!7857 = !DILocation(line: 95, column: 2, scope: !7853)
!7858 = distinct !{!7858, !7850, !7859}
!7859 = !DILocation(line: 95, column: 15, scope: !7844)
!7860 = !DILocation(line: 97, column: 2, scope: !7844)
!7861 = distinct !DISubprogram(name: "strlen", scope: !7775, file: !7775, line: 107, type: !7862, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !7864)
!7862 = !DISubroutineType(types: !7863)
!7863 = !{!234, !279}
!7864 = !{!7865, !7866}
!7865 = !DILocalVariable(name: "s", arg: 1, scope: !7861, file: !7775, line: 107, type: !279)
!7866 = !DILocalVariable(name: "n", scope: !7861, file: !7775, line: 109, type: !234)
!7867 = !DILocation(line: 0, scope: !7861)
!7868 = !DILocation(line: 111, column: 9, scope: !7861)
!7869 = !DILocation(line: 111, column: 12, scope: !7861)
!7870 = !DILocation(line: 111, column: 2, scope: !7861)
!7871 = !DILocation(line: 112, column: 4, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7861, file: !7775, line: 111, column: 21)
!7873 = !DILocation(line: 113, column: 4, scope: !7872)
!7874 = distinct !{!7874, !7870, !7875}
!7875 = !DILocation(line: 114, column: 2, scope: !7861)
!7876 = !DILocation(line: 116, column: 2, scope: !7861)
!7877 = distinct !DISubprogram(name: "strnlen", scope: !7775, file: !7775, line: 126, type: !7878, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !7880)
!7878 = !DISubroutineType(types: !7879)
!7879 = !{!234, !279, !234}
!7880 = !{!7881, !7882, !7883}
!7881 = !DILocalVariable(name: "s", arg: 1, scope: !7877, file: !7775, line: 126, type: !279)
!7882 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7877, file: !7775, line: 126, type: !234)
!7883 = !DILocalVariable(name: "n", scope: !7877, file: !7775, line: 128, type: !234)
!7884 = !DILocation(line: 0, scope: !7877)
!7885 = !DILocation(line: 130, column: 9, scope: !7877)
!7886 = !DILocation(line: 130, column: 12, scope: !7877)
!7887 = !DILocation(line: 130, column: 20, scope: !7877)
!7888 = !DILocation(line: 130, column: 2, scope: !7877)
!7889 = !DILocation(line: 131, column: 4, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7877, file: !7775, line: 130, column: 35)
!7891 = !DILocation(line: 132, column: 4, scope: !7890)
!7892 = distinct !{!7892, !7888, !7893}
!7893 = !DILocation(line: 133, column: 2, scope: !7877)
!7894 = !DILocation(line: 135, column: 2, scope: !7877)
!7895 = distinct !DISubprogram(name: "strcmp", scope: !7775, file: !7775, line: 145, type: !7896, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !7898)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{!109, !279, !279}
!7898 = !{!7899, !7900}
!7899 = !DILocalVariable(name: "s1", arg: 1, scope: !7895, file: !7775, line: 145, type: !279)
!7900 = !DILocalVariable(name: "s2", arg: 2, scope: !7895, file: !7775, line: 145, type: !279)
!7901 = !DILocation(line: 0, scope: !7895)
!7902 = !DILocation(line: 147, column: 10, scope: !7895)
!7903 = !DILocation(line: 147, column: 17, scope: !7895)
!7904 = !DILocation(line: 147, column: 14, scope: !7895)
!7905 = !DILocation(line: 147, column: 22, scope: !7895)
!7906 = !DILocation(line: 148, column: 5, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7895, file: !7775, line: 147, column: 40)
!7908 = !DILocation(line: 149, column: 5, scope: !7907)
!7909 = distinct !{!7909, !7910, !7911}
!7910 = !DILocation(line: 147, column: 2, scope: !7895)
!7911 = !DILocation(line: 150, column: 2, scope: !7895)
!7912 = !DILocation(line: 152, column: 9, scope: !7895)
!7913 = !DILocation(line: 152, column: 15, scope: !7895)
!7914 = !DILocation(line: 152, column: 13, scope: !7895)
!7915 = !DILocation(line: 152, column: 2, scope: !7895)
!7916 = distinct !DISubprogram(name: "strncmp", scope: !7775, file: !7775, line: 162, type: !7917, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !7919)
!7917 = !DISubroutineType(types: !7918)
!7918 = !{!109, !279, !279, !234}
!7919 = !{!7920, !7921, !7922}
!7920 = !DILocalVariable(name: "s1", arg: 1, scope: !7916, file: !7775, line: 162, type: !279)
!7921 = !DILocalVariable(name: "s2", arg: 2, scope: !7916, file: !7775, line: 162, type: !279)
!7922 = !DILocalVariable(name: "n", arg: 3, scope: !7916, file: !7775, line: 162, type: !234)
!7923 = !DILocation(line: 0, scope: !7916)
!7924 = !DILocation(line: 164, column: 17, scope: !7916)
!7925 = !DILocation(line: 164, column: 21, scope: !7916)
!7926 = !DILocation(line: 164, column: 28, scope: !7916)
!7927 = !DILocation(line: 164, column: 25, scope: !7916)
!7928 = !DILocation(line: 164, column: 33, scope: !7916)
!7929 = !DILocation(line: 165, column: 5, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7916, file: !7775, line: 164, column: 51)
!7931 = !DILocation(line: 166, column: 5, scope: !7930)
!7932 = !DILocation(line: 167, column: 4, scope: !7930)
!7933 = distinct !{!7933, !7934, !7935}
!7934 = !DILocation(line: 164, column: 2, scope: !7916)
!7935 = !DILocation(line: 168, column: 2, scope: !7916)
!7936 = !DILocation(line: 170, column: 25, scope: !7916)
!7937 = !DILocation(line: 170, column: 31, scope: !7916)
!7938 = !DILocation(line: 170, column: 29, scope: !7916)
!7939 = !DILocation(line: 170, column: 9, scope: !7916)
!7940 = !DILocation(line: 170, column: 2, scope: !7916)
!7941 = distinct !DISubprogram(name: "strtok_r", scope: !7775, file: !7775, line: 180, type: !7942, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !7944)
!7942 = !DISubroutineType(types: !7943)
!7943 = !{!285, !285, !279, !284}
!7944 = !{!7945, !7946, !7947, !7948, !7949}
!7945 = !DILocalVariable(name: "str", arg: 1, scope: !7941, file: !7775, line: 180, type: !285)
!7946 = !DILocalVariable(name: "sep", arg: 2, scope: !7941, file: !7775, line: 180, type: !279)
!7947 = !DILocalVariable(name: "state", arg: 3, scope: !7941, file: !7775, line: 180, type: !284)
!7948 = !DILocalVariable(name: "start", scope: !7941, file: !7775, line: 182, type: !285)
!7949 = !DILocalVariable(name: "end", scope: !7941, file: !7775, line: 182, type: !285)
!7950 = !DILocation(line: 0, scope: !7941)
!7951 = !DILocation(line: 184, column: 10, scope: !7941)
!7952 = !DILocation(line: 184, column: 22, scope: !7941)
!7953 = !DILocation(line: 187, column: 9, scope: !7941)
!7954 = !DILocation(line: 187, column: 16, scope: !7941)
!7955 = !DILocation(line: 187, column: 19, scope: !7941)
!7956 = !DILocation(line: 187, column: 2, scope: !7941)
!7957 = !DILocation(line: 188, column: 8, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7941, file: !7775, line: 187, column: 40)
!7959 = distinct !{!7959, !7956, !7960}
!7960 = !DILocation(line: 189, column: 2, scope: !7941)
!7961 = !DILocation(line: 198, column: 9, scope: !7941)
!7962 = !DILocation(line: 198, column: 18, scope: !7941)
!7963 = !DILocation(line: 198, column: 17, scope: !7941)
!7964 = !DILocation(line: 198, column: 2, scope: !7941)
!7965 = !DILocation(line: 199, column: 6, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7941, file: !7775, line: 198, column: 37)
!7967 = !DILocation(line: 198, column: 14, scope: !7941)
!7968 = distinct !{!7968, !7964, !7969}
!7969 = !DILocation(line: 200, column: 2, scope: !7941)
!7970 = !DILocation(line: 203, column: 8, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7972, file: !7775, line: 202, column: 20)
!7972 = distinct !DILexicalBlock(scope: !7941, file: !7775, line: 202, column: 6)
!7973 = !DILocation(line: 204, column: 16, scope: !7971)
!7974 = !DILocation(line: 205, column: 2, scope: !7971)
!7975 = !DILocation(line: 210, column: 1, scope: !7941)
!7976 = distinct !DISubprogram(name: "strcat", scope: !7775, file: !7775, line: 212, type: !7776, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !7977)
!7977 = !{!7978, !7979}
!7978 = !DILocalVariable(name: "dest", arg: 1, scope: !7976, file: !7775, line: 212, type: !7778)
!7979 = !DILocalVariable(name: "src", arg: 2, scope: !7976, file: !7775, line: 212, type: !7779)
!7980 = !DILocation(line: 0, scope: !7976)
!7981 = !DILocation(line: 214, column: 16, scope: !7976)
!7982 = !DILocation(line: 214, column: 14, scope: !7976)
!7983 = !DILocation(line: 214, column: 2, scope: !7976)
!7984 = !DILocation(line: 215, column: 2, scope: !7976)
!7985 = distinct !DISubprogram(name: "strncat", scope: !7775, file: !7775, line: 218, type: !7797, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !7986)
!7986 = !{!7987, !7988, !7989, !7990, !7991}
!7987 = !DILocalVariable(name: "dest", arg: 1, scope: !7985, file: !7775, line: 218, type: !7778)
!7988 = !DILocalVariable(name: "src", arg: 2, scope: !7985, file: !7775, line: 218, type: !7779)
!7989 = !DILocalVariable(name: "n", arg: 3, scope: !7985, file: !7775, line: 219, type: !234)
!7990 = !DILocalVariable(name: "orig_dest", scope: !7985, file: !7775, line: 221, type: !285)
!7991 = !DILocalVariable(name: "len", scope: !7985, file: !7775, line: 222, type: !234)
!7992 = !DILocation(line: 0, scope: !7985)
!7993 = !DILocation(line: 222, column: 15, scope: !7985)
!7994 = !DILocation(line: 224, column: 7, scope: !7985)
!7995 = !DILocation(line: 225, column: 14, scope: !7985)
!7996 = !DILocation(line: 225, column: 19, scope: !7985)
!7997 = !DILocation(line: 225, column: 11, scope: !7985)
!7998 = !DILocation(line: 225, column: 23, scope: !7985)
!7999 = !DILocation(line: 225, column: 28, scope: !7985)
!8000 = !DILocation(line: 225, column: 2, scope: !7985)
!8001 = !DILocation(line: 226, column: 17, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7985, file: !7775, line: 225, column: 38)
!8003 = !DILocation(line: 226, column: 8, scope: !8002)
!8004 = !DILocation(line: 226, column: 11, scope: !8002)
!8005 = distinct !{!8005, !8000, !8006}
!8006 = !DILocation(line: 227, column: 2, scope: !7985)
!8007 = !DILocation(line: 228, column: 8, scope: !7985)
!8008 = !DILocation(line: 230, column: 2, scope: !7985)
!8009 = distinct !DISubprogram(name: "memcmp", scope: !7775, file: !7775, line: 239, type: !8010, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !8012)
!8010 = !DISubroutineType(types: !8011)
!8011 = !{!109, !13, !13, !234}
!8012 = !{!8013, !8014, !8015, !8016, !8017}
!8013 = !DILocalVariable(name: "m1", arg: 1, scope: !8009, file: !7775, line: 239, type: !13)
!8014 = !DILocalVariable(name: "m2", arg: 2, scope: !8009, file: !7775, line: 239, type: !13)
!8015 = !DILocalVariable(name: "n", arg: 3, scope: !8009, file: !7775, line: 239, type: !234)
!8016 = !DILocalVariable(name: "c1", scope: !8009, file: !7775, line: 241, type: !279)
!8017 = !DILocalVariable(name: "c2", scope: !8009, file: !7775, line: 242, type: !279)
!8018 = !DILocation(line: 0, scope: !8009)
!8019 = !DILocation(line: 244, column: 7, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8009, file: !7775, line: 244, column: 6)
!8021 = !DILocation(line: 244, column: 6, scope: !8009)
!8022 = !DILocation(line: 248, column: 10, scope: !8009)
!8023 = !DILocation(line: 248, column: 14, scope: !8009)
!8024 = !DILocation(line: 248, column: 19, scope: !8009)
!8025 = !DILocation(line: 248, column: 2, scope: !8009)
!8026 = !DILocation(line: 248, column: 23, scope: !8009)
!8027 = !DILocation(line: 248, column: 30, scope: !8009)
!8028 = !DILocation(line: 248, column: 27, scope: !8009)
!8029 = !DILocation(line: 249, column: 5, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8009, file: !7775, line: 248, column: 36)
!8031 = !DILocation(line: 250, column: 5, scope: !8030)
!8032 = distinct !{!8032, !8025, !8033}
!8033 = !DILocation(line: 251, column: 2, scope: !8009)
!8034 = !DILocation(line: 253, column: 9, scope: !8009)
!8035 = !DILocation(line: 253, column: 15, scope: !8009)
!8036 = !DILocation(line: 253, column: 13, scope: !8009)
!8037 = !DILocation(line: 253, column: 2, scope: !8009)
!8038 = !DILocation(line: 254, column: 1, scope: !8009)
!8039 = distinct !DISubprogram(name: "memmove", scope: !7775, file: !7775, line: 263, type: !8040, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !8042)
!8040 = !DISubroutineType(types: !8041)
!8041 = !{!107, !107, !13, !234}
!8042 = !{!8043, !8044, !8045, !8046, !8047}
!8043 = !DILocalVariable(name: "d", arg: 1, scope: !8039, file: !7775, line: 263, type: !107)
!8044 = !DILocalVariable(name: "s", arg: 2, scope: !8039, file: !7775, line: 263, type: !13)
!8045 = !DILocalVariable(name: "n", arg: 3, scope: !8039, file: !7775, line: 263, type: !234)
!8046 = !DILocalVariable(name: "dest", scope: !8039, file: !7775, line: 265, type: !285)
!8047 = !DILocalVariable(name: "src", scope: !8039, file: !7775, line: 266, type: !279)
!8048 = !DILocation(line: 0, scope: !8039)
!8049 = !DILocation(line: 268, column: 21, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8039, file: !7775, line: 268, column: 6)
!8051 = !DILocation(line: 268, column: 28, scope: !8050)
!8052 = !DILocation(line: 268, column: 6, scope: !8039)
!8053 = !DILocation(line: 280, column: 12, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8050, file: !7775, line: 278, column: 9)
!8055 = !DILocation(line: 280, column: 3, scope: !8054)
!8056 = !DILocation(line: 275, column: 5, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8058, file: !7775, line: 274, column: 17)
!8058 = distinct !DILexicalBlock(scope: !8050, file: !7775, line: 268, column: 33)
!8059 = !DILocation(line: 276, column: 14, scope: !8057)
!8060 = !DILocation(line: 276, column: 4, scope: !8057)
!8061 = !DILocation(line: 276, column: 12, scope: !8057)
!8062 = !DILocation(line: 274, column: 12, scope: !8058)
!8063 = !DILocation(line: 274, column: 3, scope: !8058)
!8064 = distinct !{!8064, !8063, !8065}
!8065 = !DILocation(line: 277, column: 3, scope: !8058)
!8066 = !DILocation(line: 281, column: 12, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8054, file: !7775, line: 280, column: 17)
!8068 = !DILocation(line: 281, column: 10, scope: !8067)
!8069 = !DILocation(line: 282, column: 8, scope: !8067)
!8070 = !DILocation(line: 283, column: 7, scope: !8067)
!8071 = !DILocation(line: 284, column: 5, scope: !8067)
!8072 = distinct !{!8072, !8055, !8073}
!8073 = !DILocation(line: 285, column: 3, scope: !8054)
!8074 = !DILocation(line: 288, column: 2, scope: !8039)
!8075 = distinct !DISubprogram(name: "memcpy", scope: !7775, file: !7775, line: 298, type: !8076, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !8080)
!8076 = !DISubroutineType(types: !8077)
!8077 = !{!107, !8078, !8079, !234}
!8078 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !107)
!8079 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8080 = !{!8081, !8082, !8083, !8084, !8085}
!8081 = !DILocalVariable(name: "d", arg: 1, scope: !8075, file: !7775, line: 298, type: !8078)
!8082 = !DILocalVariable(name: "s", arg: 2, scope: !8075, file: !7775, line: 298, type: !8079)
!8083 = !DILocalVariable(name: "n", arg: 3, scope: !8075, file: !7775, line: 298, type: !234)
!8084 = !DILocalVariable(name: "d_byte", scope: !8075, file: !7775, line: 302, type: !969)
!8085 = !DILocalVariable(name: "s_byte", scope: !8075, file: !7775, line: 303, type: !2836)
!8086 = !DILocation(line: 0, scope: !8075)
!8087 = !DILocation(line: 337, column: 11, scope: !8075)
!8088 = !DILocation(line: 337, column: 2, scope: !8075)
!8089 = !DILocation(line: 338, column: 25, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8075, file: !7775, line: 337, column: 16)
!8091 = !DILocation(line: 338, column: 17, scope: !8090)
!8092 = !DILocation(line: 338, column: 11, scope: !8090)
!8093 = !DILocation(line: 338, column: 15, scope: !8090)
!8094 = !DILocation(line: 339, column: 4, scope: !8090)
!8095 = distinct !{!8095, !8088, !8096}
!8096 = !DILocation(line: 340, column: 2, scope: !8075)
!8097 = !DILocation(line: 342, column: 2, scope: !8075)
!8098 = distinct !DISubprogram(name: "memset", scope: !7775, file: !7775, line: 352, type: !8099, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !8101)
!8099 = !DISubroutineType(types: !8100)
!8100 = !{!107, !107, !109, !234}
!8101 = !{!8102, !8103, !8104, !8105, !8106}
!8102 = !DILocalVariable(name: "buf", arg: 1, scope: !8098, file: !7775, line: 352, type: !107)
!8103 = !DILocalVariable(name: "c", arg: 2, scope: !8098, file: !7775, line: 352, type: !109)
!8104 = !DILocalVariable(name: "n", arg: 3, scope: !8098, file: !7775, line: 352, type: !234)
!8105 = !DILocalVariable(name: "d_byte", scope: !8098, file: !7775, line: 356, type: !969)
!8106 = !DILocalVariable(name: "c_byte", scope: !8098, file: !7775, line: 357, type: !181)
!8107 = !DILocation(line: 0, scope: !8098)
!8108 = !DILocation(line: 357, column: 25, scope: !8098)
!8109 = !DILocation(line: 389, column: 11, scope: !8098)
!8110 = !DILocation(line: 389, column: 2, scope: !8098)
!8111 = !DILocation(line: 390, column: 11, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8098, file: !7775, line: 389, column: 16)
!8113 = !DILocation(line: 390, column: 15, scope: !8112)
!8114 = !DILocation(line: 391, column: 4, scope: !8112)
!8115 = distinct !{!8115, !8110, !8116}
!8116 = !DILocation(line: 392, column: 2, scope: !8098)
!8117 = !DILocation(line: 394, column: 2, scope: !8098)
!8118 = distinct !DISubprogram(name: "memchr", scope: !7775, file: !7775, line: 404, type: !8119, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !8121)
!8119 = !DISubroutineType(types: !8120)
!8120 = !{!107, !13, !109, !234}
!8121 = !{!8122, !8123, !8124, !8125}
!8122 = !DILocalVariable(name: "s", arg: 1, scope: !8118, file: !7775, line: 404, type: !13)
!8123 = !DILocalVariable(name: "c", arg: 2, scope: !8118, file: !7775, line: 404, type: !109)
!8124 = !DILocalVariable(name: "n", arg: 3, scope: !8118, file: !7775, line: 404, type: !234)
!8125 = !DILocalVariable(name: "p", scope: !8126, file: !7775, line: 407, type: !2836)
!8126 = distinct !DILexicalBlock(scope: !8127, file: !7775, line: 406, column: 14)
!8127 = distinct !DILexicalBlock(scope: !8118, file: !7775, line: 406, column: 6)
!8128 = !DILocation(line: 0, scope: !8118)
!8129 = !DILocation(line: 406, column: 8, scope: !8127)
!8130 = !DILocation(line: 406, column: 6, scope: !8118)
!8131 = !DILocation(line: 409, column: 3, scope: !8126)
!8132 = !DILocation(line: 0, scope: !8126)
!8133 = !DILocation(line: 410, column: 8, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !7775, line: 410, column: 8)
!8135 = distinct !DILexicalBlock(scope: !8126, file: !7775, line: 409, column: 6)
!8136 = !DILocation(line: 410, column: 13, scope: !8134)
!8137 = !DILocation(line: 410, column: 8, scope: !8135)
!8138 = distinct !{!8138, !8131, !8139}
!8139 = !DILocation(line: 414, column: 20, scope: !8126)
!8140 = !DILocation(line: 417, column: 2, scope: !8118)
!8141 = !DILocation(line: 418, column: 1, scope: !8118)
!8142 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !573, file: !573, line: 23, type: !4288, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8143)
!8143 = !{!8144}
!8144 = !DILocalVariable(name: "hook", arg: 1, scope: !8142, file: !573, line: 23, type: !302)
!8145 = !DILocation(line: 0, scope: !8142)
!8146 = !DILocation(line: 25, column: 15, scope: !8142)
!8147 = !DILocation(line: 26, column: 1, scope: !8142)
!8148 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !573, file: !573, line: 14, type: !303, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8149)
!8149 = !{!8150}
!8150 = !DILocalVariable(name: "c", arg: 1, scope: !8148, file: !573, line: 14, type: !109)
!8151 = !DILocation(line: 0, scope: !8148)
!8152 = !DILocation(line: 18, column: 2, scope: !8148)
!8153 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !573, file: !573, line: 28, type: !8154, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8156)
!8154 = !DISubroutineType(types: !8155)
!8155 = !{!109, !109, !569}
!8156 = !{!8157, !8158}
!8157 = !DILocalVariable(name: "c", arg: 1, scope: !8153, file: !573, line: 28, type: !109)
!8158 = !DILocalVariable(name: "stream", arg: 2, scope: !8153, file: !573, line: 28, type: !569)
!8159 = !DILocation(line: 0, scope: !8153)
!8160 = !DILocation(line: 30, column: 27, scope: !8153)
!8161 = !DILocation(line: 30, column: 50, scope: !8153)
!8162 = !DILocation(line: 30, column: 9, scope: !8153)
!8163 = !DILocation(line: 30, column: 2, scope: !8153)
!8164 = distinct !DISubprogram(name: "fputc", scope: !573, file: !573, line: 41, type: !8154, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8165)
!8165 = !{!8166, !8167}
!8166 = !DILocalVariable(name: "c", arg: 1, scope: !8164, file: !573, line: 41, type: !109)
!8167 = !DILocalVariable(name: "stream", arg: 2, scope: !8164, file: !573, line: 41, type: !569)
!8168 = !DILocation(line: 0, scope: !8164)
!8169 = !DILocation(line: 43, column: 9, scope: !8164)
!8170 = !DILocation(line: 43, column: 2, scope: !8164)
!8171 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8172, file: !8172, line: 72, type: !8154, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8173)
!8172 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!8173 = !{!8174, !8175}
!8174 = !DILocalVariable(name: "c", arg: 1, scope: !8171, file: !8172, line: 72, type: !109)
!8175 = !DILocalVariable(name: "stream", arg: 2, scope: !8171, file: !8172, line: 72, type: !569)
!8176 = !DILocation(line: 0, scope: !8171)
!8177 = !DILocation(line: 81, column: 2, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8171, file: !8172, line: 81, column: 2)
!8179 = !{i64 2154135089}
!8180 = !DILocation(line: 82, column: 9, scope: !8171)
!8181 = !DILocation(line: 82, column: 2, scope: !8171)
!8182 = distinct !DISubprogram(name: "fputs", scope: !573, file: !573, line: 46, type: !8183, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8186)
!8183 = !DISubroutineType(types: !8184)
!8184 = !{!109, !7779, !8185}
!8185 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!8186 = !{!8187, !8188, !8189, !8190}
!8187 = !DILocalVariable(name: "s", arg: 1, scope: !8182, file: !573, line: 46, type: !7779)
!8188 = !DILocalVariable(name: "stream", arg: 2, scope: !8182, file: !573, line: 46, type: !8185)
!8189 = !DILocalVariable(name: "len", scope: !8182, file: !573, line: 48, type: !109)
!8190 = !DILocalVariable(name: "ret", scope: !8182, file: !573, line: 49, type: !109)
!8191 = !DILocation(line: 0, scope: !8182)
!8192 = !DILocation(line: 48, column: 12, scope: !8182)
!8193 = !DILocation(line: 51, column: 8, scope: !8182)
!8194 = !DILocation(line: 53, column: 13, scope: !8182)
!8195 = !DILocation(line: 53, column: 9, scope: !8182)
!8196 = !DILocation(line: 53, column: 2, scope: !8182)
!8197 = distinct !DISubprogram(name: "fwrite", scope: !573, file: !573, line: 99, type: !8198, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8200)
!8198 = !DISubroutineType(types: !8199)
!8199 = !{!234, !8079, !234, !234, !8185}
!8200 = !{!8201, !8202, !8203, !8204}
!8201 = !DILocalVariable(name: "ptr", arg: 1, scope: !8197, file: !573, line: 99, type: !8079)
!8202 = !DILocalVariable(name: "size", arg: 2, scope: !8197, file: !573, line: 99, type: !234)
!8203 = !DILocalVariable(name: "nitems", arg: 3, scope: !8197, file: !573, line: 99, type: !234)
!8204 = !DILocalVariable(name: "stream", arg: 4, scope: !8197, file: !573, line: 100, type: !8185)
!8205 = !DILocation(line: 0, scope: !8197)
!8206 = !DILocation(line: 102, column: 9, scope: !8197)
!8207 = !DILocation(line: 102, column: 2, scope: !8197)
!8208 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8172, file: !8172, line: 96, type: !8198, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8209)
!8209 = !{!8210, !8211, !8212, !8213}
!8210 = !DILocalVariable(name: "ptr", arg: 1, scope: !8208, file: !8172, line: 96, type: !8079)
!8211 = !DILocalVariable(name: "size", arg: 2, scope: !8208, file: !8172, line: 96, type: !234)
!8212 = !DILocalVariable(name: "nitems", arg: 3, scope: !8208, file: !8172, line: 96, type: !234)
!8213 = !DILocalVariable(name: "stream", arg: 4, scope: !8208, file: !8172, line: 96, type: !8185)
!8214 = !DILocation(line: 0, scope: !8208)
!8215 = !DILocation(line: 107, column: 2, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8208, file: !8172, line: 107, column: 2)
!8217 = !{i64 2154135193}
!8218 = !DILocation(line: 108, column: 9, scope: !8208)
!8219 = !DILocation(line: 108, column: 2, scope: !8208)
!8220 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !573, file: !573, line: 56, type: !8198, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8221)
!8221 = !{!8222, !8223, !8224, !8225, !8226, !8227, !8228, !8229}
!8222 = !DILocalVariable(name: "ptr", arg: 1, scope: !8220, file: !573, line: 56, type: !8079)
!8223 = !DILocalVariable(name: "size", arg: 2, scope: !8220, file: !573, line: 56, type: !234)
!8224 = !DILocalVariable(name: "nitems", arg: 3, scope: !8220, file: !573, line: 57, type: !234)
!8225 = !DILocalVariable(name: "stream", arg: 4, scope: !8220, file: !573, line: 57, type: !8185)
!8226 = !DILocalVariable(name: "i", scope: !8220, file: !573, line: 59, type: !234)
!8227 = !DILocalVariable(name: "j", scope: !8220, file: !573, line: 60, type: !234)
!8228 = !DILocalVariable(name: "p", scope: !8220, file: !573, line: 61, type: !2836)
!8229 = !DILabel(scope: !8220, name: "done", file: !573, line: 82)
!8230 = !DILocation(line: 0, scope: !8220)
!8231 = !DILocation(line: 63, column: 14, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8220, file: !573, line: 63, column: 6)
!8233 = !DILocation(line: 63, column: 24, scope: !8232)
!8234 = !DILocation(line: 72, column: 3, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8220, file: !573, line: 70, column: 5)
!8236 = !DILocation(line: 0, scope: !8235)
!8237 = !DILocation(line: 73, column: 8, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8239, file: !573, line: 73, column: 8)
!8239 = distinct !DILexicalBlock(scope: !8235, file: !573, line: 72, column: 6)
!8240 = !DILocation(line: 73, column: 29, scope: !8238)
!8241 = !DILocation(line: 73, column: 27, scope: !8238)
!8242 = !DILocation(line: 73, column: 21, scope: !8238)
!8243 = !DILocation(line: 73, column: 33, scope: !8238)
!8244 = !DILocation(line: 73, column: 8, scope: !8239)
!8245 = !DILocation(line: 76, column: 5, scope: !8239)
!8246 = !DILocation(line: 77, column: 14, scope: !8235)
!8247 = !DILocation(line: 77, column: 3, scope: !8239)
!8248 = distinct !{!8248, !8234, !8249}
!8249 = !DILocation(line: 77, column: 17, scope: !8235)
!8250 = !DILocation(line: 79, column: 4, scope: !8235)
!8251 = !DILocation(line: 80, column: 13, scope: !8220)
!8252 = !DILocation(line: 80, column: 2, scope: !8235)
!8253 = distinct !{!8253, !8254, !8255}
!8254 = !DILocation(line: 70, column: 2, scope: !8220)
!8255 = !DILocation(line: 80, column: 16, scope: !8220)
!8256 = !DILocation(line: 82, column: 1, scope: !8220)
!8257 = !DILocation(line: 83, column: 17, scope: !8220)
!8258 = !DILocation(line: 83, column: 2, scope: !8220)
!8259 = !DILocation(line: 84, column: 1, scope: !8220)
!8260 = distinct !DISubprogram(name: "puts", scope: !573, file: !573, line: 106, type: !8261, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8263)
!8261 = !DISubroutineType(types: !8262)
!8262 = !{!109, !279}
!8263 = !{!8264}
!8264 = !DILocalVariable(name: "s", arg: 1, scope: !8260, file: !573, line: 106, type: !279)
!8265 = !DILocation(line: 0, scope: !8260)
!8266 = !DILocation(line: 108, column: 6, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8260, file: !573, line: 108, column: 6)
!8268 = !DILocation(line: 108, column: 23, scope: !8267)
!8269 = !DILocation(line: 108, column: 6, scope: !8260)
!8270 = !DILocation(line: 112, column: 9, scope: !8260)
!8271 = !DILocation(line: 112, column: 29, scope: !8260)
!8272 = !DILocation(line: 112, column: 2, scope: !8260)
!8273 = !DILocation(line: 113, column: 1, scope: !8260)
!8274 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !685, file: !685, line: 368, type: !738, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8275)
!8275 = !{!8276}
!8276 = !DILocalVariable(name: "dev", arg: 1, scope: !8274, file: !685, line: 368, type: !714)
!8277 = !DILocation(line: 0, scope: !8274)
!8278 = !DILocation(line: 370, column: 2, scope: !8274)
!8279 = !DILocation(line: 371, column: 1, scope: !8274)
!8280 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !685, file: !685, line: 243, type: !8281, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8283)
!8281 = !DISubroutineType(types: !8282)
!8282 = !{null, !109, !109, !714}
!8283 = !{!8284, !8285, !8286, !8287, !8289}
!8284 = !DILocalVariable(name: "min", arg: 1, scope: !8280, file: !685, line: 243, type: !109)
!8285 = !DILocalVariable(name: "max", arg: 2, scope: !8280, file: !685, line: 243, type: !109)
!8286 = !DILocalVariable(name: "dev", arg: 3, scope: !8280, file: !685, line: 243, type: !714)
!8287 = !DILocalVariable(name: "data", scope: !8280, file: !685, line: 245, type: !8288)
!8288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!8289 = !DILocalVariable(name: "line", scope: !8280, file: !685, line: 246, type: !109)
!8290 = !DILocation(line: 0, scope: !8280)
!8291 = !DILocation(line: 245, column: 38, scope: !8280)
!8292 = !DILocation(line: 249, column: 24, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8294, file: !685, line: 249, column: 2)
!8294 = distinct !DILexicalBlock(scope: !8280, file: !685, line: 249, column: 2)
!8295 = !DILocation(line: 249, column: 2, scope: !8294)
!8296 = !DILocation(line: 251, column: 7, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8298, file: !685, line: 251, column: 7)
!8298 = distinct !DILexicalBlock(scope: !8293, file: !685, line: 249, column: 39)
!8299 = !DILocation(line: 251, column: 7, scope: !8298)
!8300 = !DILocation(line: 253, column: 4, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8297, file: !685, line: 251, column: 36)
!8302 = !DILocation(line: 256, column: 24, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8301, file: !685, line: 256, column: 8)
!8304 = !DILocation(line: 256, column: 9, scope: !8303)
!8305 = !DILocation(line: 256, column: 8, scope: !8301)
!8306 = !DILocation(line: 260, column: 43, scope: !8301)
!8307 = !DILocation(line: 260, column: 4, scope: !8301)
!8308 = !DILocation(line: 261, column: 3, scope: !8301)
!8309 = !DILocation(line: 249, column: 35, scope: !8293)
!8310 = distinct !{!8310, !8295, !8311}
!8311 = !DILocation(line: 262, column: 2, scope: !8294)
!8312 = !DILocation(line: 263, column: 1, scope: !8280)
!8313 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !685, file: !685, line: 158, type: !303, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8314)
!8314 = !{!8315}
!8315 = !DILocalVariable(name: "line", arg: 1, scope: !8313, file: !685, line: 158, type: !109)
!8316 = !DILocation(line: 0, scope: !8313)
!8317 = !DILocation(line: 170, column: 38, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !685, line: 160, column: 17)
!8319 = distinct !DILexicalBlock(scope: !8313, file: !685, line: 160, column: 6)
!8320 = !DILocation(line: 170, column: 10, scope: !8318)
!8321 = !DILocation(line: 176, column: 1, scope: !8313)
!8322 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !685, file: !685, line: 183, type: !8323, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8325)
!8323 = !DISubroutineType(types: !8324)
!8324 = !{null, !109}
!8325 = !{!8326}
!8326 = !DILocalVariable(name: "line", arg: 1, scope: !8322, file: !685, line: 183, type: !109)
!8327 = !DILocation(line: 0, scope: !8322)
!8328 = !DILocation(line: 195, column: 28, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !685, line: 185, column: 17)
!8330 = distinct !DILexicalBlock(scope: !8322, file: !685, line: 185, column: 6)
!8331 = !DILocation(line: 195, column: 3, scope: !8329)
!8332 = !DILocation(line: 200, column: 1, scope: !8322)
!8333 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8334, file: !8334, line: 910, type: !6480, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8335)
!8334 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8335 = !{!8336}
!8336 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8333, file: !8334, line: 910, type: !110)
!8337 = !DILocation(line: 0, scope: !8333)
!8338 = !DILocation(line: 912, column: 3, scope: !8333)
!8339 = !DILocation(line: 913, column: 1, scope: !8333)
!8340 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8334, file: !8334, line: 834, type: !7670, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8341)
!8341 = !{!8342}
!8342 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8340, file: !8334, line: 834, type: !110)
!8343 = !DILocation(line: 0, scope: !8340)
!8344 = !DILocation(line: 836, column: 11, scope: !8340)
!8345 = !DILocation(line: 836, column: 40, scope: !8340)
!8346 = !DILocation(line: 836, column: 3, scope: !8340)
!8347 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !685, file: !685, line: 304, type: !738, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8348)
!8348 = !{!8349}
!8349 = !DILocalVariable(name: "dev", arg: 1, scope: !8347, file: !685, line: 304, type: !714)
!8350 = !DILocation(line: 0, scope: !8347)
!8351 = !DILocation(line: 306, column: 2, scope: !8347)
!8352 = !DILocation(line: 307, column: 1, scope: !8347)
!8353 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !685, file: !685, line: 299, type: !738, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8354)
!8354 = !{!8355}
!8355 = !DILocalVariable(name: "dev", arg: 1, scope: !8353, file: !685, line: 299, type: !714)
!8356 = !DILocation(line: 0, scope: !8353)
!8357 = !DILocation(line: 301, column: 2, scope: !8353)
!8358 = !DILocation(line: 302, column: 1, scope: !8353)
!8359 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !685, file: !685, line: 294, type: !738, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8360)
!8360 = !{!8361}
!8361 = !DILocalVariable(name: "dev", arg: 1, scope: !8359, file: !685, line: 294, type: !714)
!8362 = !DILocation(line: 0, scope: !8359)
!8363 = !DILocation(line: 296, column: 2, scope: !8359)
!8364 = !DILocation(line: 297, column: 1, scope: !8359)
!8365 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !685, file: !685, line: 397, type: !738, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8366)
!8366 = !{!8367}
!8367 = !DILocalVariable(name: "dev", arg: 1, scope: !8365, file: !685, line: 397, type: !714)
!8368 = !DILocation(line: 0, scope: !8365)
!8369 = !DILocation(line: 399, column: 2, scope: !8365)
!8370 = !DILocation(line: 400, column: 1, scope: !8365)
!8371 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !685, file: !685, line: 392, type: !738, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8372)
!8372 = !{!8373}
!8373 = !DILocalVariable(name: "dev", arg: 1, scope: !8371, file: !685, line: 392, type: !714)
!8374 = !DILocation(line: 0, scope: !8371)
!8375 = !DILocation(line: 394, column: 2, scope: !8371)
!8376 = !DILocation(line: 395, column: 1, scope: !8371)
!8377 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !685, file: !685, line: 289, type: !738, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8378)
!8378 = !{!8379}
!8379 = !DILocalVariable(name: "dev", arg: 1, scope: !8377, file: !685, line: 289, type: !714)
!8380 = !DILocation(line: 0, scope: !8377)
!8381 = !DILocation(line: 291, column: 2, scope: !8377)
!8382 = !DILocation(line: 292, column: 1, scope: !8377)
!8383 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !685, file: !685, line: 387, type: !738, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8384)
!8384 = !{!8385}
!8385 = !DILocalVariable(name: "dev", arg: 1, scope: !8383, file: !685, line: 387, type: !714)
!8386 = !DILocation(line: 0, scope: !8383)
!8387 = !DILocation(line: 389, column: 2, scope: !8383)
!8388 = !DILocation(line: 390, column: 1, scope: !8383)
!8389 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !685, file: !685, line: 382, type: !738, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8390)
!8390 = !{!8391}
!8391 = !DILocalVariable(name: "dev", arg: 1, scope: !8389, file: !685, line: 382, type: !714)
!8392 = !DILocation(line: 0, scope: !8389)
!8393 = !DILocation(line: 384, column: 2, scope: !8389)
!8394 = !DILocation(line: 385, column: 1, scope: !8389)
!8395 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !685, file: !685, line: 373, type: !738, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8396)
!8396 = !{!8397}
!8397 = !DILocalVariable(name: "dev", arg: 1, scope: !8395, file: !685, line: 373, type: !714)
!8398 = !DILocation(line: 0, scope: !8395)
!8399 = !DILocation(line: 375, column: 2, scope: !8395)
!8400 = !DILocation(line: 376, column: 1, scope: !8395)
!8401 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !685, file: !685, line: 284, type: !738, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8402)
!8402 = !{!8403}
!8403 = !DILocalVariable(name: "dev", arg: 1, scope: !8401, file: !685, line: 284, type: !714)
!8404 = !DILocation(line: 0, scope: !8401)
!8405 = !DILocation(line: 286, column: 2, scope: !8401)
!8406 = !DILocation(line: 287, column: 1, scope: !8401)
!8407 = distinct !DISubprogram(name: "stm32_exti_init", scope: !685, file: !685, line: 416, type: !712, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8408)
!8408 = !{!8409}
!8409 = !DILocalVariable(name: "dev", arg: 1, scope: !8407, file: !685, line: 416, type: !714)
!8410 = !DILocation(line: 0, scope: !8407)
!8411 = !DILocation(line: 418, column: 2, scope: !8407)
!8412 = !DILocation(line: 420, column: 2, scope: !8407)
!8413 = !DILocation(line: 0, scope: !737)
!8414 = !DILocation(line: 493, column: 2, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !737, file: !685, line: 493, column: 2)
!8416 = !DILocation(line: 497, column: 2, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !737, file: !685, line: 497, column: 2)
!8418 = !DILocation(line: 507, column: 2, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !737, file: !685, line: 507, column: 2)
!8420 = !DILocation(line: 512, column: 2, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !737, file: !685, line: 512, column: 2)
!8422 = !DILocation(line: 516, column: 2, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !737, file: !685, line: 516, column: 2)
!8424 = !DILocation(line: 523, column: 2, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !737, file: !685, line: 523, column: 2)
!8426 = !DILocation(line: 527, column: 2, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !737, file: !685, line: 527, column: 2)
!8428 = !DILocation(line: 581, column: 2, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !737, file: !685, line: 581, column: 2)
!8430 = !DILocation(line: 586, column: 2, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !737, file: !685, line: 586, column: 2)
!8432 = !DILocation(line: 591, column: 2, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !737, file: !685, line: 591, column: 2)
!8434 = !DILocation(line: 595, column: 2, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !737, file: !685, line: 595, column: 2)
!8436 = !DILocation(line: 607, column: 1, scope: !737)
!8437 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !685, file: !685, line: 112, type: !8323, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8438)
!8438 = !{!8439, !8440}
!8439 = !DILocalVariable(name: "line", arg: 1, scope: !8437, file: !685, line: 112, type: !109)
!8440 = !DILocalVariable(name: "irqnum", scope: !8437, file: !685, line: 114, type: !109)
!8441 = !DILocation(line: 0, scope: !8437)
!8442 = !DILocation(line: 122, column: 13, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8437, file: !685, line: 122, column: 6)
!8444 = !DILocation(line: 122, column: 6, scope: !8437)
!8445 = !DILocation(line: 123, column: 3, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8447, file: !685, line: 123, column: 3)
!8447 = distinct !DILexicalBlock(scope: !8448, file: !685, line: 123, column: 3)
!8448 = distinct !DILexicalBlock(scope: !8449, file: !685, line: 123, column: 3)
!8449 = distinct !DILexicalBlock(scope: !8443, file: !685, line: 122, column: 22)
!8450 = !DILocation(line: 121, column: 11, scope: !8437)
!8451 = !DILocation(line: 130, column: 26, scope: !8437)
!8452 = !DILocation(line: 130, column: 2, scope: !8437)
!8453 = !DILocation(line: 134, column: 2, scope: !8437)
!8454 = !DILocation(line: 135, column: 1, scope: !8437)
!8455 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8334, file: !8334, line: 268, type: !6480, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8456)
!8456 = !{!8457}
!8457 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8455, file: !8334, line: 268, type: !110)
!8458 = !DILocation(line: 0, scope: !8455)
!8459 = !DILocation(line: 270, column: 3, scope: !8455)
!8460 = !DILocation(line: 271, column: 1, scope: !8455)
!8461 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !685, file: !685, line: 137, type: !8323, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8462)
!8462 = !{!8463}
!8463 = !DILocalVariable(name: "line", arg: 1, scope: !8461, file: !685, line: 137, type: !109)
!8464 = !DILocation(line: 0, scope: !8461)
!8465 = !DILocation(line: 141, column: 11, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8461, file: !685, line: 141, column: 6)
!8467 = !DILocation(line: 141, column: 6, scope: !8461)
!8468 = !DILocation(line: 145, column: 28, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8466, file: !685, line: 141, column: 17)
!8470 = !DILocation(line: 145, column: 3, scope: !8469)
!8471 = !DILocation(line: 147, column: 2, scope: !8469)
!8472 = !DILocation(line: 151, column: 1, scope: !8461)
!8473 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8334, file: !8334, line: 309, type: !6480, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8474)
!8474 = !{!8475}
!8475 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8473, file: !8334, line: 309, type: !110)
!8476 = !DILocation(line: 0, scope: !8473)
!8477 = !DILocation(line: 311, column: 3, scope: !8473)
!8478 = !DILocation(line: 312, column: 1, scope: !8473)
!8479 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !685, file: !685, line: 202, type: !8480, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8482)
!8480 = !DISubroutineType(types: !8481)
!8481 = !{null, !109, !109}
!8482 = !{!8483, !8484}
!8483 = !DILocalVariable(name: "line", arg: 1, scope: !8479, file: !685, line: 202, type: !109)
!8484 = !DILocalVariable(name: "trigger", arg: 2, scope: !8479, file: !685, line: 202, type: !109)
!8485 = !DILocation(line: 0, scope: !8479)
!8486 = !DILocation(line: 211, column: 2, scope: !8479)
!8487 = !DILocation(line: 213, column: 36, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8479, file: !685, line: 211, column: 19)
!8489 = !DILocation(line: 213, column: 3, scope: !8488)
!8490 = !DILocation(line: 214, column: 3, scope: !8488)
!8491 = !DILocation(line: 215, column: 3, scope: !8488)
!8492 = !DILocation(line: 217, column: 35, scope: !8488)
!8493 = !DILocation(line: 217, column: 3, scope: !8488)
!8494 = !DILocation(line: 218, column: 3, scope: !8488)
!8495 = !DILocation(line: 219, column: 3, scope: !8488)
!8496 = !DILocation(line: 221, column: 36, scope: !8488)
!8497 = !DILocation(line: 221, column: 3, scope: !8488)
!8498 = !DILocation(line: 222, column: 3, scope: !8488)
!8499 = !DILocation(line: 223, column: 3, scope: !8488)
!8500 = !DILocation(line: 225, column: 35, scope: !8488)
!8501 = !DILocation(line: 225, column: 3, scope: !8488)
!8502 = !DILocation(line: 226, column: 3, scope: !8488)
!8503 = !DILocation(line: 227, column: 3, scope: !8488)
!8504 = !DILocation(line: 232, column: 1, scope: !8479)
!8505 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8334, file: !8334, line: 573, type: !6480, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8506)
!8506 = !{!8507}
!8507 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8505, file: !8334, line: 573, type: !110)
!8508 = !DILocation(line: 0, scope: !8505)
!8509 = !DILocation(line: 575, column: 3, scope: !8505)
!8510 = !DILocation(line: 577, column: 1, scope: !8505)
!8511 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8334, file: !8334, line: 703, type: !6480, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8512)
!8512 = !{!8513}
!8513 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8511, file: !8334, line: 703, type: !110)
!8514 = !DILocation(line: 0, scope: !8511)
!8515 = !DILocation(line: 705, column: 3, scope: !8511)
!8516 = !DILocation(line: 706, column: 1, scope: !8511)
!8517 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8334, file: !8334, line: 529, type: !6480, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8518)
!8518 = !{!8519}
!8519 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8517, file: !8334, line: 529, type: !110)
!8520 = !DILocation(line: 0, scope: !8517)
!8521 = !DILocation(line: 531, column: 3, scope: !8517)
!8522 = !DILocation(line: 533, column: 1, scope: !8517)
!8523 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8334, file: !8334, line: 661, type: !6480, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8524)
!8524 = !{!8525}
!8525 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8523, file: !8334, line: 661, type: !110)
!8526 = !DILocation(line: 0, scope: !8523)
!8527 = !DILocation(line: 663, column: 3, scope: !8523)
!8528 = !DILocation(line: 664, column: 1, scope: !8523)
!8529 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !685, file: !685, line: 433, type: !8530, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8532)
!8530 = !DISubroutineType(types: !8531)
!8531 = !{!109, !109, !725, !107}
!8532 = !{!8533, !8534, !8535, !8536, !8538}
!8533 = !DILocalVariable(name: "line", arg: 1, scope: !8529, file: !685, line: 433, type: !109)
!8534 = !DILocalVariable(name: "cb", arg: 2, scope: !8529, file: !685, line: 433, type: !725)
!8535 = !DILocalVariable(name: "arg", arg: 3, scope: !8529, file: !685, line: 433, type: !107)
!8536 = !DILocalVariable(name: "dev", scope: !8529, file: !685, line: 435, type: !8537)
!8537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !714)
!8538 = !DILocalVariable(name: "data", scope: !8529, file: !685, line: 436, type: !8288)
!8539 = !DILocation(line: 0, scope: !8529)
!8540 = !DILocation(line: 438, column: 21, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8529, file: !685, line: 438, column: 6)
!8542 = !DILocation(line: 438, column: 6, scope: !8541)
!8543 = !DILocation(line: 438, column: 6, scope: !8529)
!8544 = !DILocation(line: 442, column: 20, scope: !8529)
!8545 = !DILocation(line: 443, column: 17, scope: !8529)
!8546 = !DILocation(line: 443, column: 22, scope: !8529)
!8547 = !DILocation(line: 445, column: 2, scope: !8529)
!8548 = !DILocation(line: 446, column: 1, scope: !8529)
!8549 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !685, file: !685, line: 448, type: !8323, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8550)
!8550 = !{!8551, !8552, !8553}
!8551 = !DILocalVariable(name: "line", arg: 1, scope: !8549, file: !685, line: 448, type: !109)
!8552 = !DILocalVariable(name: "dev", scope: !8549, file: !685, line: 450, type: !8537)
!8553 = !DILocalVariable(name: "data", scope: !8549, file: !685, line: 451, type: !8288)
!8554 = !DILocation(line: 0, scope: !8549)
!8555 = !DILocation(line: 453, column: 17, scope: !8549)
!8556 = !DILocation(line: 453, column: 20, scope: !8549)
!8557 = !DILocation(line: 454, column: 17, scope: !8549)
!8558 = !DILocation(line: 454, column: 22, scope: !8549)
!8559 = !DILocation(line: 455, column: 1, scope: !8549)
!8560 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !868, file: !868, line: 183, type: !906, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8561)
!8561 = !{!8562, !8563, !8564, !8565, !8566}
!8562 = !DILocalVariable(name: "dev", arg: 1, scope: !8560, file: !868, line: 183, type: !897)
!8563 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8560, file: !868, line: 184, type: !908)
!8564 = !DILocalVariable(name: "pclken", scope: !8560, file: !868, line: 186, type: !858)
!8565 = !DILocalVariable(name: "reg", scope: !8560, file: !868, line: 187, type: !1446)
!8566 = !DILocalVariable(name: "reg_val", scope: !8560, file: !868, line: 188, type: !110)
!8567 = !DILocation(line: 0, scope: !8560)
!8568 = !DILocation(line: 192, column: 6, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8560, file: !868, line: 192, column: 6)
!8570 = !DILocation(line: 192, column: 6, scope: !8560)
!8571 = !DILocation(line: 197, column: 52, scope: !8560)
!8572 = !DILocation(line: 197, column: 8, scope: !8560)
!8573 = !DILocation(line: 198, column: 12, scope: !8560)
!8574 = !DILocation(line: 199, column: 21, scope: !8560)
!8575 = !DILocation(line: 199, column: 10, scope: !8560)
!8576 = !DILocation(line: 200, column: 7, scope: !8560)
!8577 = !DILocation(line: 202, column: 2, scope: !8560)
!8578 = !DILocation(line: 203, column: 1, scope: !8560)
!8579 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !868, file: !868, line: 205, type: !906, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8580)
!8580 = !{!8581, !8582, !8583, !8584, !8585}
!8581 = !DILocalVariable(name: "dev", arg: 1, scope: !8579, file: !868, line: 205, type: !897)
!8582 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8579, file: !868, line: 206, type: !908)
!8583 = !DILocalVariable(name: "pclken", scope: !8579, file: !868, line: 208, type: !858)
!8584 = !DILocalVariable(name: "reg", scope: !8579, file: !868, line: 209, type: !1446)
!8585 = !DILocalVariable(name: "reg_val", scope: !8579, file: !868, line: 210, type: !110)
!8586 = !DILocation(line: 0, scope: !8579)
!8587 = !DILocation(line: 214, column: 6, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8579, file: !868, line: 214, column: 6)
!8589 = !DILocation(line: 214, column: 6, scope: !8579)
!8590 = !DILocation(line: 219, column: 52, scope: !8579)
!8591 = !DILocation(line: 219, column: 8, scope: !8579)
!8592 = !DILocation(line: 220, column: 12, scope: !8579)
!8593 = !DILocation(line: 221, column: 22, scope: !8579)
!8594 = !DILocation(line: 221, column: 13, scope: !8579)
!8595 = !DILocation(line: 221, column: 10, scope: !8579)
!8596 = !DILocation(line: 222, column: 7, scope: !8579)
!8597 = !DILocation(line: 224, column: 2, scope: !8579)
!8598 = !DILocation(line: 225, column: 1, scope: !8579)
!8599 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !868, file: !868, line: 262, type: !922, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8600)
!8600 = !{!8601, !8602, !8603, !8604, !8605, !8606, !8607, !8608}
!8601 = !DILocalVariable(name: "clock", arg: 1, scope: !8599, file: !868, line: 262, type: !897)
!8602 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8599, file: !868, line: 263, type: !908)
!8603 = !DILocalVariable(name: "rate", arg: 3, scope: !8599, file: !868, line: 264, type: !864)
!8604 = !DILocalVariable(name: "pclken", scope: !8599, file: !868, line: 266, type: !858)
!8605 = !DILocalVariable(name: "ahb_clock", scope: !8599, file: !868, line: 273, type: !110)
!8606 = !DILocalVariable(name: "apb1_clock", scope: !8599, file: !868, line: 274, type: !110)
!8607 = !DILocalVariable(name: "apb2_clock", scope: !8599, file: !868, line: 276, type: !110)
!8608 = !DILocalVariable(name: "ahb3_clock", scope: !8599, file: !868, line: 286, type: !110)
!8609 = !DILocation(line: 0, scope: !8599)
!8610 = !DILocation(line: 273, column: 23, scope: !8599)
!8611 = !DILocation(line: 299, column: 18, scope: !8599)
!8612 = !DILocation(line: 299, column: 2, scope: !8599)
!8613 = !DILocation(line: 274, column: 24, scope: !8599)
!8614 = !DILocation(line: 319, column: 3, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8599, file: !868, line: 299, column: 23)
!8616 = !DILocation(line: 276, column: 24, scope: !8599)
!8617 = !DILocation(line: 323, column: 3, scope: !8615)
!8618 = !DILocation(line: 346, column: 33, scope: !8615)
!8619 = !DILocation(line: 346, column: 11, scope: !8615)
!8620 = !DILocation(line: 350, column: 3, scope: !8615)
!8621 = !DILocation(line: 374, column: 3, scope: !8615)
!8622 = !DILocation(line: 379, column: 3, scope: !8615)
!8623 = !DILocation(line: 0, scope: !8615)
!8624 = !DILocation(line: 396, column: 1, scope: !8599)
!8625 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !868, file: !868, line: 227, type: !938, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8626)
!8626 = !{!8627, !8628, !8629, !8630, !8631, !8632, !8633, !8634}
!8627 = !DILocalVariable(name: "dev", arg: 1, scope: !8625, file: !868, line: 227, type: !897)
!8628 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8625, file: !868, line: 228, type: !908)
!8629 = !DILocalVariable(name: "data", arg: 3, scope: !8625, file: !868, line: 229, type: !107)
!8630 = !DILocalVariable(name: "pclken", scope: !8625, file: !868, line: 233, type: !858)
!8631 = !DILocalVariable(name: "reg", scope: !8625, file: !868, line: 234, type: !1446)
!8632 = !DILocalVariable(name: "reg_val", scope: !8625, file: !868, line: 235, type: !110)
!8633 = !DILocalVariable(name: "dt_val", scope: !8625, file: !868, line: 235, type: !110)
!8634 = !DILocalVariable(name: "err", scope: !8625, file: !868, line: 236, type: !109)
!8635 = !DILocation(line: 0, scope: !8625)
!8636 = !DILocation(line: 241, column: 30, scope: !8625)
!8637 = !DILocation(line: 241, column: 8, scope: !8625)
!8638 = !DILocation(line: 242, column: 10, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8625, file: !868, line: 242, column: 6)
!8640 = !DILocation(line: 242, column: 6, scope: !8625)
!8641 = !DILocation(line: 247, column: 11, scope: !8625)
!8642 = !DILocation(line: 248, column: 6, scope: !8625)
!8643 = !DILocation(line: 247, column: 44, scope: !8625)
!8644 = !DILocation(line: 250, column: 6, scope: !8625)
!8645 = !DILocation(line: 249, column: 52, scope: !8625)
!8646 = !DILocation(line: 249, column: 8, scope: !8625)
!8647 = !DILocation(line: 251, column: 12, scope: !8625)
!8648 = !DILocation(line: 252, column: 10, scope: !8625)
!8649 = !DILocation(line: 253, column: 7, scope: !8625)
!8650 = !DILocation(line: 255, column: 2, scope: !8625)
!8651 = !DILocation(line: 260, column: 1, scope: !8625)
!8652 = distinct !DISubprogram(name: "enabled_clock", scope: !868, file: !868, line: 100, type: !8653, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8655)
!8653 = !DISubroutineType(types: !8654)
!8654 = !{!109, !110}
!8655 = !{!8656, !8657}
!8656 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8652, file: !868, line: 100, type: !110)
!8657 = !DILocalVariable(name: "r", scope: !8652, file: !868, line: 102, type: !109)
!8658 = !DILocation(line: 0, scope: !8652)
!8659 = !DILocation(line: 104, column: 2, scope: !8652)
!8660 = !DILocation(line: 180, column: 2, scope: !8652)
!8661 = !DILocation(line: 181, column: 1, scope: !8652)
!8662 = distinct !DISubprogram(name: "get_bus_clock", scope: !868, file: !868, line: 79, type: !8663, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8665)
!8663 = !DISubroutineType(types: !8664)
!8664 = !{!110, !110, !110}
!8665 = !{!8666, !8667}
!8666 = !DILocalVariable(name: "clock", arg: 1, scope: !8662, file: !868, line: 79, type: !110)
!8667 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8662, file: !868, line: 79, type: !110)
!8668 = !DILocation(line: 0, scope: !8662)
!8669 = !DILocation(line: 81, column: 15, scope: !8662)
!8670 = !DILocation(line: 81, column: 2, scope: !8662)
!8671 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !868, file: !868, line: 68, type: !8672, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8674)
!8672 = !DISubroutineType(types: !8673)
!8673 = !{!110, !110, !109, !109, !109}
!8674 = !{!8675, !8676, !8677, !8678}
!8675 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8671, file: !868, line: 68, type: !110)
!8676 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8671, file: !868, line: 69, type: !109)
!8677 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8671, file: !868, line: 70, type: !109)
!8678 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8671, file: !868, line: 71, type: !109)
!8679 = !DILocation(line: 0, scope: !8671)
!8680 = !DILocation(line: 75, column: 22, scope: !8671)
!8681 = !DILocation(line: 75, column: 34, scope: !8671)
!8682 = !DILocation(line: 75, column: 2, scope: !8671)
!8683 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !868, file: !868, line: 641, type: !895, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8684)
!8684 = !{!8685, !8686, !8687}
!8685 = !DILocalVariable(name: "dev", arg: 1, scope: !8683, file: !868, line: 641, type: !897)
!8686 = !DILocalVariable(name: "old_flash_freq", scope: !8683, file: !868, line: 664, type: !110)
!8687 = !DILocalVariable(name: "new_flash_freq", scope: !8683, file: !868, line: 665, type: !110)
!8688 = !DILocation(line: 0, scope: !8683)
!8689 = !DILocation(line: 646, column: 2, scope: !8683)
!8690 = !DILocation(line: 667, column: 19, scope: !8683)
!8691 = !DILocation(line: 674, column: 21, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8683, file: !868, line: 674, column: 6)
!8693 = !DILocation(line: 674, column: 6, scope: !8683)
!8694 = !DILocation(line: 675, column: 3, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8692, file: !868, line: 674, column: 59)
!8696 = !DILocation(line: 676, column: 2, scope: !8695)
!8697 = !DILocation(line: 680, column: 2, scope: !8683)
!8698 = !DILocation(line: 683, column: 2, scope: !8683)
!8699 = !DILocation(line: 690, column: 3, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !868, line: 689, column: 9)
!8701 = distinct !DILexicalBlock(scope: !8683, file: !868, line: 685, column: 6)
!8702 = !DILocation(line: 695, column: 2, scope: !8683)
!8703 = !DILocation(line: 696, column: 2, scope: !8683)
!8704 = !DILocation(line: 696, column: 9, scope: !8683)
!8705 = !DILocation(line: 696, column: 34, scope: !8683)
!8706 = distinct !{!8706, !8703, !8707}
!8707 = !DILocation(line: 697, column: 2, scope: !8683)
!8708 = !DILocation(line: 720, column: 21, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8683, file: !868, line: 720, column: 6)
!8710 = !DILocation(line: 720, column: 6, scope: !8683)
!8711 = !DILocation(line: 721, column: 3, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8709, file: !868, line: 720, column: 60)
!8713 = !DILocation(line: 722, column: 2, scope: !8712)
!8714 = !DILocation(line: 725, column: 18, scope: !8683)
!8715 = !DILocation(line: 728, column: 2, scope: !8683)
!8716 = !DILocation(line: 730, column: 2, scope: !8683)
!8717 = !DILocation(line: 745, column: 2, scope: !8683)
!8718 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8719, file: !8719, line: 3275, type: !6470, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8719 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8720 = !DILocation(line: 3277, column: 21, scope: !8718)
!8721 = !DILocation(line: 3277, column: 3, scope: !8718)
!8722 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !868, file: !868, line: 507, type: !3070, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8723 = !DILocation(line: 534, column: 7, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8725, file: !868, line: 534, column: 7)
!8725 = distinct !DILexicalBlock(scope: !8726, file: !868, line: 532, column: 37)
!8726 = distinct !DILexicalBlock(scope: !8722, file: !868, line: 532, column: 6)
!8727 = !DILocation(line: 534, column: 28, scope: !8724)
!8728 = !DILocation(line: 534, column: 7, scope: !8725)
!8729 = !DILocation(line: 536, column: 4, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8724, file: !868, line: 534, column: 34)
!8731 = !DILocation(line: 537, column: 4, scope: !8730)
!8732 = !DILocation(line: 537, column: 11, scope: !8730)
!8733 = !DILocation(line: 537, column: 32, scope: !8730)
!8734 = distinct !{!8734, !8731, !8735}
!8735 = !DILocation(line: 539, column: 4, scope: !8730)
!8736 = !DILocation(line: 583, column: 3, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8738, file: !868, line: 577, column: 37)
!8738 = distinct !DILexicalBlock(scope: !8722, file: !868, line: 577, column: 6)
!8739 = !DILocation(line: 584, column: 3, scope: !8737)
!8740 = !DILocation(line: 584, column: 10, scope: !8737)
!8741 = !DILocation(line: 584, column: 31, scope: !8737)
!8742 = distinct !{!8742, !8739, !8743}
!8743 = !DILocation(line: 585, column: 3, scope: !8737)
!8744 = !DILocation(line: 627, column: 1, scope: !8722)
!8745 = distinct !DISubprogram(name: "set_up_plls", scope: !868, file: !868, line: 448, type: !3070, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8746 = !DILocation(line: 460, column: 6, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8745, file: !868, line: 460, column: 6)
!8748 = !DILocation(line: 460, column: 31, scope: !8747)
!8749 = !DILocation(line: 460, column: 6, scope: !8745)
!8750 = !DILocation(line: 461, column: 3, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8747, file: !868, line: 460, column: 67)
!8752 = !DILocation(line: 462, column: 3, scope: !8751)
!8753 = !DILocation(line: 463, column: 2, scope: !8751)
!8754 = !DILocation(line: 464, column: 2, scope: !8745)
!8755 = !DILocation(line: 488, column: 2, scope: !8745)
!8756 = !DILocation(line: 496, column: 2, scope: !8745)
!8757 = !DILocation(line: 499, column: 2, scope: !8745)
!8758 = !DILocation(line: 500, column: 2, scope: !8745)
!8759 = !DILocation(line: 500, column: 9, scope: !8745)
!8760 = !DILocation(line: 500, column: 30, scope: !8745)
!8761 = distinct !{!8761, !8758, !8762}
!8762 = !DILocation(line: 502, column: 2, scope: !8745)
!8763 = !DILocation(line: 505, column: 1, scope: !8745)
!8764 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8719, file: !8719, line: 3224, type: !6480, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8765)
!8765 = !{!8766}
!8766 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8764, file: !8719, line: 3224, type: !110)
!8767 = !DILocation(line: 0, scope: !8764)
!8768 = !DILocation(line: 3226, column: 3, scope: !8764)
!8769 = !DILocation(line: 3227, column: 1, scope: !8764)
!8770 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8719, file: !8719, line: 3188, type: !6480, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8771)
!8771 = !{!8772}
!8772 = !DILocalVariable(name: "Source", arg: 1, scope: !8770, file: !8719, line: 3188, type: !110)
!8773 = !DILocation(line: 0, scope: !8770)
!8774 = !DILocation(line: 3190, column: 3, scope: !8770)
!8775 = !DILocation(line: 3191, column: 1, scope: !8770)
!8776 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8719, file: !8719, line: 3204, type: !6470, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8777 = !DILocation(line: 3206, column: 21, scope: !8776)
!8778 = !DILocation(line: 3206, column: 3, scope: !8776)
!8779 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8719, file: !8719, line: 3240, type: !6480, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8780)
!8780 = !{!8781}
!8781 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8779, file: !8719, line: 3240, type: !110)
!8782 = !DILocation(line: 0, scope: !8779)
!8783 = !DILocation(line: 3242, column: 3, scope: !8779)
!8784 = !DILocation(line: 3243, column: 1, scope: !8779)
!8785 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8719, file: !8719, line: 3256, type: !6480, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !8786)
!8786 = !{!8787}
!8787 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8785, file: !8719, line: 3256, type: !110)
!8788 = !DILocation(line: 0, scope: !8785)
!8789 = !DILocation(line: 3258, column: 3, scope: !8785)
!8790 = !DILocation(line: 3259, column: 1, scope: !8785)
!8791 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !868, file: !868, line: 409, type: !3070, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8792 = !DILocation(line: 412, column: 6, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8791, file: !868, line: 412, column: 6)
!8794 = !DILocation(line: 412, column: 27, scope: !8793)
!8795 = !DILocation(line: 412, column: 6, scope: !8791)
!8796 = !DILocation(line: 414, column: 3, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8793, file: !868, line: 412, column: 33)
!8798 = !DILocation(line: 415, column: 3, scope: !8797)
!8799 = !DILocation(line: 415, column: 10, scope: !8797)
!8800 = !DILocation(line: 415, column: 31, scope: !8797)
!8801 = distinct !{!8801, !8798, !8802}
!8802 = !DILocation(line: 417, column: 3, scope: !8797)
!8803 = !DILocation(line: 421, column: 2, scope: !8791)
!8804 = !DILocation(line: 422, column: 2, scope: !8791)
!8805 = !DILocation(line: 422, column: 9, scope: !8791)
!8806 = !DILocation(line: 422, column: 34, scope: !8791)
!8807 = distinct !{!8807, !8804, !8808}
!8808 = !DILocation(line: 423, column: 2, scope: !8791)
!8809 = !DILocation(line: 424, column: 1, scope: !8791)
!8810 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8719, file: !8719, line: 4195, type: !3070, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8811 = !DILocation(line: 4197, column: 3, scope: !8810)
!8812 = !DILocation(line: 4198, column: 1, scope: !8810)
!8813 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8719, file: !8719, line: 4184, type: !3070, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8814 = !DILocation(line: 4186, column: 3, scope: !8813)
!8815 = !DILocation(line: 4187, column: 1, scope: !8813)
!8816 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8719, file: !8719, line: 4205, type: !6470, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8817 = !DILocation(line: 4207, column: 11, scope: !8816)
!8818 = !DILocation(line: 4207, column: 44, scope: !8816)
!8819 = !DILocation(line: 4207, column: 3, scope: !8816)
!8820 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8719, file: !8719, line: 3007, type: !6470, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8821 = !DILocation(line: 3009, column: 11, scope: !8820)
!8822 = !DILocation(line: 3009, column: 44, scope: !8820)
!8823 = !DILocation(line: 3009, column: 3, scope: !8820)
!8824 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8719, file: !8719, line: 2987, type: !3070, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8825 = !DILocation(line: 2989, column: 3, scope: !8824)
!8826 = !DILocation(line: 2990, column: 1, scope: !8824)
!8827 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8719, file: !8719, line: 3143, type: !3070, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8828 = !DILocation(line: 3145, column: 3, scope: !8827)
!8829 = !DILocation(line: 3146, column: 1, scope: !8827)
!8830 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8719, file: !8719, line: 3163, type: !6470, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2002)
!8831 = !DILocation(line: 3165, column: 11, scope: !8830)
!8832 = !DILocation(line: 3165, column: 46, scope: !8830)
!8833 = !DILocation(line: 3165, column: 3, scope: !8830)
!8834 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8835, file: !8835, line: 40, type: !6470, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !2002)
!8835 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8836 = !DILocation(line: 43, column: 3, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8838, file: !8835, line: 42, column: 37)
!8838 = distinct !DILexicalBlock(scope: !8834, file: !8835, line: 42, column: 6)
!8839 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8835, file: !8835, line: 56, type: !3070, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !2002)
!8840 = !DILocation(line: 58, column: 2, scope: !8839)
!8841 = !DILocation(line: 62, column: 1, scope: !8839)
!8842 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8719, file: !8719, line: 4304, type: !8843, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !8845)
!8843 = !DISubroutineType(types: !8844)
!8844 = !{null, !110, !110, !110, !110}
!8845 = !{!8846, !8847, !8848, !8849}
!8846 = !DILocalVariable(name: "Source", arg: 1, scope: !8842, file: !8719, line: 4304, type: !110)
!8847 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8842, file: !8719, line: 4304, type: !110)
!8848 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8842, file: !8719, line: 4304, type: !110)
!8849 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8842, file: !8719, line: 4304, type: !110)
!8850 = !DILocation(line: 0, scope: !8842)
!8851 = !DILocation(line: 4306, column: 3, scope: !8842)
!8852 = !DILocation(line: 4308, column: 3, scope: !8842)
!8853 = !DILocation(line: 4312, column: 1, scope: !8842)
!8854 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8835, file: !8835, line: 69, type: !3070, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !2002)
!8855 = !DILocation(line: 72, column: 2, scope: !8854)
!8856 = !DILocation(line: 73, column: 1, scope: !8854)
!8857 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8858, file: !8858, line: 1185, type: !6480, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !8859)
!8858 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8859 = !{!8860, !8861}
!8860 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8857, file: !8858, line: 1185, type: !110)
!8861 = !DILocalVariable(name: "tmpreg", scope: !8857, file: !8858, line: 1187, type: !316)
!8862 = !DILocation(line: 0, scope: !8857)
!8863 = !DILocation(line: 1187, column: 3, scope: !8857)
!8864 = !DILocation(line: 1187, column: 17, scope: !8857)
!8865 = !DILocation(line: 1188, column: 3, scope: !8857)
!8866 = !DILocation(line: 1190, column: 12, scope: !8857)
!8867 = !DILocation(line: 1190, column: 10, scope: !8857)
!8868 = !DILocation(line: 1191, column: 9, scope: !8857)
!8869 = !DILocation(line: 1192, column: 1, scope: !8857)
!8870 = distinct !DISubprogram(name: "uart_console_init", scope: !999, file: !999, line: 588, type: !976, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8871)
!8871 = !{!8872}
!8872 = !DILocalVariable(name: "arg", arg: 1, scope: !8870, file: !999, line: 588, type: !954)
!8873 = !DILocation(line: 0, scope: !8870)
!8874 = !DILocation(line: 593, column: 7, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8870, file: !999, line: 593, column: 6)
!8876 = !DILocation(line: 593, column: 6, scope: !8870)
!8877 = !DILocation(line: 597, column: 2, scope: !8870)
!8878 = !DILocation(line: 599, column: 2, scope: !8870)
!8879 = !DILocation(line: 600, column: 1, scope: !8870)
!8880 = distinct !DISubprogram(name: "device_is_ready", scope: !8881, file: !8881, line: 47, type: !8882, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8884)
!8881 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!8882 = !DISubroutineType(types: !8883)
!8883 = !{!347, !954}
!8884 = !{!8885}
!8885 = !DILocalVariable(name: "dev", arg: 1, scope: !8880, file: !8881, line: 47, type: !954)
!8886 = !DILocation(line: 0, scope: !8880)
!8887 = !DILocation(line: 55, column: 2, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8880, file: !8881, line: 55, column: 2)
!8889 = !{i64 2154277476}
!8890 = !DILocation(line: 56, column: 9, scope: !8880)
!8891 = !DILocation(line: 56, column: 2, scope: !8880)
!8892 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !999, file: !999, line: 573, type: !3070, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !2002)
!8893 = !DILocation(line: 576, column: 2, scope: !8892)
!8894 = !DILocation(line: 579, column: 2, scope: !8892)
!8895 = !DILocation(line: 581, column: 1, scope: !8892)
!8896 = distinct !DISubprogram(name: "console_out", scope: !999, file: !999, line: 77, type: !303, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8897)
!8897 = !{!8898}
!8898 = !DILocalVariable(name: "c", arg: 1, scope: !8896, file: !999, line: 77, type: !109)
!8899 = !DILocation(line: 0, scope: !8896)
!8900 = !DILocation(line: 89, column: 11, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8896, file: !999, line: 89, column: 6)
!8902 = !DILocation(line: 89, column: 6, scope: !8896)
!8903 = !DILocation(line: 90, column: 3, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8901, file: !999, line: 89, column: 17)
!8905 = !DILocation(line: 91, column: 2, scope: !8904)
!8906 = !DILocation(line: 92, column: 34, scope: !8896)
!8907 = !DILocation(line: 92, column: 2, scope: !8896)
!8908 = !DILocation(line: 94, column: 2, scope: !8896)
!8909 = distinct !DISubprogram(name: "uart_poll_out", scope: !8910, file: !8910, line: 95, type: !972, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8911)
!8910 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/condvar")
!8911 = !{!8912, !8913}
!8912 = !DILocalVariable(name: "dev", arg: 1, scope: !8909, file: !8910, line: 95, type: !954)
!8913 = !DILocalVariable(name: "out_char", arg: 2, scope: !8909, file: !8910, line: 95, type: !181)
!8914 = !DILocation(line: 0, scope: !8909)
!8915 = !DILocation(line: 105, column: 2, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8909, file: !8910, line: 105, column: 2)
!8917 = !{i64 2154360867}
!8918 = !DILocation(line: 106, column: 2, scope: !8909)
!8919 = !DILocation(line: 107, column: 1, scope: !8909)
!8920 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !948, file: !948, line: 574, type: !972, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8921)
!8921 = !{!8922, !8923, !8924}
!8922 = !DILocalVariable(name: "dev", arg: 1, scope: !8920, file: !948, line: 574, type: !954)
!8923 = !DILocalVariable(name: "out_char", arg: 2, scope: !8920, file: !948, line: 575, type: !181)
!8924 = !DILocalVariable(name: "api", scope: !8920, file: !948, line: 577, type: !945)
!8925 = !DILocation(line: 0, scope: !8920)
!8926 = !DILocation(line: 578, column: 40, scope: !8920)
!8927 = !DILocation(line: 580, column: 7, scope: !8920)
!8928 = !DILocation(line: 580, column: 2, scope: !8920)
!8929 = !DILocation(line: 581, column: 1, scope: !8920)
!8930 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !8882, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8931)
!8931 = !{!8932}
!8932 = !DILocalVariable(name: "dev", arg: 1, scope: !8930, file: !336, line: 730, type: !954)
!8933 = !DILocation(line: 0, scope: !8930)
!8934 = !DILocation(line: 732, column: 9, scope: !8930)
!8935 = !DILocation(line: 732, column: 2, scope: !8930)
!8936 = distinct !DISubprogram(name: "uart_register_input", scope: !999, file: !999, line: 560, type: !8937, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8984)
!8937 = !DISubroutineType(types: !8938)
!8938 = !{null, !8939, !8939, !8981}
!8939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8940, size: 32)
!8940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 160, elements: !8941)
!8941 = !{!8942}
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8940, file: !118, line: 2209, baseType: !8943, size: 160)
!8943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 160, elements: !8944)
!8944 = !{!8945, !8958, !8962}
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8943, file: !118, line: 1710, baseType: !8946, size: 64)
!8946 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8947, line: 46, baseType: !8948)
!8947 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8947, line: 41, size: 64, elements: !8949)
!8949 = !{!8950, !8957}
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8948, file: !8947, line: 42, baseType: !8951, size: 32)
!8951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8952, size: 32)
!8952 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8947, line: 39, baseType: !8953)
!8953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8947, line: 35, size: 32, elements: !8954)
!8954 = !{!8955}
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8953, file: !8947, line: 36, baseType: !8956, size: 32)
!8956 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8947, line: 32, baseType: !110)
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8948, file: !8947, line: 43, baseType: !8951, size: 32, offset: 32)
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8943, file: !118, line: 1711, baseType: !8959, size: 32, offset: 64)
!8959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !8960)
!8960 = !{!8961}
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8959, file: !253, line: 52, baseType: !22, size: 32)
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8943, file: !118, line: 1712, baseType: !8963, size: 64, offset: 96)
!8963 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !8964)
!8964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !8965)
!8965 = !{!8966}
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8964, file: !122, line: 232, baseType: !8967, size: 64)
!8967 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !8968)
!8968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !8969)
!8969 = !{!8970, !8976}
!8970 = !DIDerivedType(tag: DW_TAG_member, scope: !8968, file: !127, line: 38, baseType: !8971, size: 32)
!8971 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8968, file: !127, line: 38, size: 32, elements: !8972)
!8972 = !{!8973, !8975}
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8971, file: !127, line: 39, baseType: !8974, size: 32)
!8974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8968, size: 32)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8971, file: !127, line: 40, baseType: !8974, size: 32)
!8976 = !DIDerivedType(tag: DW_TAG_member, scope: !8968, file: !127, line: 42, baseType: !8977, size: 32, offset: 32)
!8977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8968, file: !127, line: 42, size: 32, elements: !8978)
!8978 = !{!8979, !8980}
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8977, file: !127, line: 43, baseType: !8974, size: 32)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8977, file: !127, line: 44, baseType: !8974, size: 32)
!8981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8982, size: 32)
!8982 = !DISubroutineType(types: !8983)
!8983 = !{!180, !285, !180}
!8984 = !{!8985, !8986, !8987}
!8985 = !DILocalVariable(name: "avail", arg: 1, scope: !8936, file: !999, line: 560, type: !8939)
!8986 = !DILocalVariable(name: "lines", arg: 2, scope: !8936, file: !999, line: 560, type: !8939)
!8987 = !DILocalVariable(name: "completion", arg: 3, scope: !8936, file: !999, line: 561, type: !8981)
!8988 = !DILocation(line: 0, scope: !8936)
!8989 = !DILocation(line: 566, column: 1, scope: !8936)
!8990 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1177, file: !1177, line: 523, type: !1035, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !8991)
!8991 = !{!8992, !8993, !8994, !8995, !8996}
!8992 = !DILocalVariable(name: "dev", arg: 1, scope: !8990, file: !1177, line: 523, type: !1037)
!8993 = !DILocalVariable(name: "pin", arg: 2, scope: !8990, file: !1177, line: 524, type: !1052)
!8994 = !DILocalVariable(name: "flags", arg: 3, scope: !8990, file: !1177, line: 524, type: !1053)
!8995 = !DILocalVariable(name: "err", scope: !8990, file: !1177, line: 526, type: !109)
!8996 = !DILocalVariable(name: "pincfg", scope: !8990, file: !1177, line: 527, type: !109)
!8997 = !DILocation(line: 0, scope: !8990)
!8998 = !DILocation(line: 527, column: 2, scope: !8990)
!8999 = !DILocation(line: 532, column: 8, scope: !8990)
!9000 = !DILocation(line: 533, column: 10, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8990, file: !1177, line: 533, column: 6)
!9002 = !DILocation(line: 533, column: 6, scope: !8990)
!9003 = !DILocation(line: 543, column: 13, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8990, file: !1177, line: 543, column: 6)
!9005 = !DILocation(line: 543, column: 28, scope: !9004)
!9006 = !DILocation(line: 543, column: 6, scope: !8990)
!9007 = !DILocation(line: 544, column: 14, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !1177, line: 544, column: 7)
!9009 = distinct !DILexicalBlock(scope: !9004, file: !1177, line: 543, column: 34)
!9010 = !DILocation(line: 544, column: 39, scope: !9008)
!9011 = !DILocation(line: 544, column: 7, scope: !9009)
!9012 = !DILocation(line: 545, column: 38, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9008, file: !1177, line: 544, column: 45)
!9014 = !DILocation(line: 545, column: 4, scope: !9013)
!9015 = !DILocation(line: 546, column: 3, scope: !9013)
!9016 = !DILocation(line: 546, column: 21, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9008, file: !1177, line: 546, column: 14)
!9018 = !DILocation(line: 546, column: 45, scope: !9017)
!9019 = !DILocation(line: 546, column: 14, scope: !9008)
!9020 = !DILocation(line: 547, column: 40, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9017, file: !1177, line: 546, column: 51)
!9022 = !DILocation(line: 547, column: 4, scope: !9021)
!9023 = !DILocation(line: 548, column: 3, scope: !9021)
!9024 = !DILocation(line: 551, column: 32, scope: !8990)
!9025 = !DILocation(line: 551, column: 37, scope: !8990)
!9026 = !DILocation(line: 551, column: 2, scope: !8990)
!9027 = !DILocation(line: 554, column: 6, scope: !8990)
!9028 = !DILocation(line: 562, column: 1, scope: !8990)
!9029 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1177, file: !1177, line: 410, type: !9030, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9032)
!9030 = !DISubroutineType(types: !9031)
!9031 = !{!109, !1037, !864}
!9032 = !{!9033, !9034, !9035, !9037}
!9033 = !DILocalVariable(name: "dev", arg: 1, scope: !9029, file: !1177, line: 410, type: !1037)
!9034 = !DILocalVariable(name: "value", arg: 2, scope: !9029, file: !1177, line: 410, type: !864)
!9035 = !DILocalVariable(name: "cfg", scope: !9029, file: !1177, line: 412, type: !9036)
!9036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!9037 = !DILocalVariable(name: "gpio", scope: !9029, file: !1177, line: 413, type: !1110)
!9038 = !DILocation(line: 0, scope: !9029)
!9039 = !DILocation(line: 412, column: 45, scope: !9029)
!9040 = !DILocation(line: 413, column: 44, scope: !9029)
!9041 = !DILocation(line: 415, column: 11, scope: !9029)
!9042 = !DILocation(line: 415, column: 9, scope: !9029)
!9043 = !DILocation(line: 417, column: 2, scope: !9029)
!9044 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1177, file: !1177, line: 420, type: !1062, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9045)
!9045 = !{!9046, !9047, !9048, !9049, !9050, !9051}
!9046 = !DILocalVariable(name: "dev", arg: 1, scope: !9044, file: !1177, line: 420, type: !1037)
!9047 = !DILocalVariable(name: "mask", arg: 2, scope: !9044, file: !1177, line: 421, type: !1064)
!9048 = !DILocalVariable(name: "value", arg: 3, scope: !9044, file: !1177, line: 422, type: !1059)
!9049 = !DILocalVariable(name: "cfg", scope: !9044, file: !1177, line: 424, type: !9036)
!9050 = !DILocalVariable(name: "gpio", scope: !9044, file: !1177, line: 425, type: !1110)
!9051 = !DILocalVariable(name: "port_value", scope: !9044, file: !1177, line: 426, type: !110)
!9052 = !DILocation(line: 0, scope: !9044)
!9053 = !DILocation(line: 424, column: 45, scope: !9044)
!9054 = !DILocation(line: 425, column: 44, scope: !9044)
!9055 = !DILocation(line: 430, column: 15, scope: !9044)
!9056 = !DILocation(line: 431, column: 46, scope: !9044)
!9057 = !DILocation(line: 431, column: 44, scope: !9044)
!9058 = !DILocation(line: 431, column: 61, scope: !9044)
!9059 = !DILocation(line: 431, column: 53, scope: !9044)
!9060 = !DILocation(line: 431, column: 2, scope: !9044)
!9061 = !DILocation(line: 435, column: 2, scope: !9044)
!9062 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1177, file: !1177, line: 438, type: !1067, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9063)
!9063 = !{!9064, !9065, !9066, !9067}
!9064 = !DILocalVariable(name: "dev", arg: 1, scope: !9062, file: !1177, line: 438, type: !1037)
!9065 = !DILocalVariable(name: "pins", arg: 2, scope: !9062, file: !1177, line: 439, type: !1064)
!9066 = !DILocalVariable(name: "cfg", scope: !9062, file: !1177, line: 441, type: !9036)
!9067 = !DILocalVariable(name: "gpio", scope: !9062, file: !1177, line: 442, type: !1110)
!9068 = !DILocation(line: 0, scope: !9062)
!9069 = !DILocation(line: 441, column: 45, scope: !9062)
!9070 = !DILocation(line: 442, column: 44, scope: !9062)
!9071 = !DILocation(line: 448, column: 2, scope: !9062)
!9072 = !DILocation(line: 450, column: 2, scope: !9062)
!9073 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1177, file: !1177, line: 453, type: !1067, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9074)
!9074 = !{!9075, !9076, !9077, !9078}
!9075 = !DILocalVariable(name: "dev", arg: 1, scope: !9073, file: !1177, line: 453, type: !1037)
!9076 = !DILocalVariable(name: "pins", arg: 2, scope: !9073, file: !1177, line: 454, type: !1064)
!9077 = !DILocalVariable(name: "cfg", scope: !9073, file: !1177, line: 456, type: !9036)
!9078 = !DILocalVariable(name: "gpio", scope: !9073, file: !1177, line: 457, type: !1110)
!9079 = !DILocation(line: 0, scope: !9073)
!9080 = !DILocation(line: 456, column: 45, scope: !9073)
!9081 = !DILocation(line: 457, column: 44, scope: !9073)
!9082 = !DILocation(line: 467, column: 2, scope: !9073)
!9083 = !DILocation(line: 470, column: 2, scope: !9073)
!9084 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1177, file: !1177, line: 473, type: !1067, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9085)
!9085 = !{!9086, !9087, !9088, !9089}
!9086 = !DILocalVariable(name: "dev", arg: 1, scope: !9084, file: !1177, line: 473, type: !1037)
!9087 = !DILocalVariable(name: "pins", arg: 2, scope: !9084, file: !1177, line: 474, type: !1064)
!9088 = !DILocalVariable(name: "cfg", scope: !9084, file: !1177, line: 476, type: !9036)
!9089 = !DILocalVariable(name: "gpio", scope: !9084, file: !1177, line: 477, type: !1110)
!9090 = !DILocation(line: 0, scope: !9084)
!9091 = !DILocation(line: 476, column: 45, scope: !9084)
!9092 = !DILocation(line: 477, column: 44, scope: !9084)
!9093 = !DILocation(line: 484, column: 2, scope: !9084)
!9094 = !DILocation(line: 487, column: 2, scope: !9084)
!9095 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1177, file: !1177, line: 594, type: !1073, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9096)
!9096 = !{!9097, !9098, !9099, !9100, !9101, !9102, !9104, !9105, !9106}
!9097 = !DILocalVariable(name: "dev", arg: 1, scope: !9095, file: !1177, line: 594, type: !1037)
!9098 = !DILocalVariable(name: "pin", arg: 2, scope: !9095, file: !1177, line: 595, type: !1052)
!9099 = !DILocalVariable(name: "mode", arg: 3, scope: !9095, file: !1177, line: 596, type: !1011)
!9100 = !DILocalVariable(name: "trig", arg: 4, scope: !9095, file: !1177, line: 597, type: !1017)
!9101 = !DILocalVariable(name: "cfg", scope: !9095, file: !1177, line: 599, type: !9036)
!9102 = !DILocalVariable(name: "data", scope: !9095, file: !1177, line: 600, type: !9103)
!9103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!9104 = !DILocalVariable(name: "edge", scope: !9095, file: !1177, line: 601, type: !109)
!9105 = !DILocalVariable(name: "err", scope: !9095, file: !1177, line: 602, type: !109)
!9106 = !DILabel(scope: !9095, name: "exit", file: !1177, line: 643)
!9107 = !DILocation(line: 0, scope: !9095)
!9108 = !DILocation(line: 599, column: 45, scope: !9095)
!9109 = !DILocation(line: 604, column: 6, scope: !9095)
!9110 = !DILocation(line: 605, column: 34, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9112, file: !1177, line: 605, column: 7)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !1177, line: 604, column: 38)
!9113 = distinct !DILexicalBlock(scope: !9095, file: !1177, line: 604, column: 6)
!9114 = !DILocation(line: 605, column: 7, scope: !9111)
!9115 = !DILocation(line: 605, column: 47, scope: !9111)
!9116 = !DILocation(line: 605, column: 39, scope: !9111)
!9117 = !DILocation(line: 605, column: 7, scope: !9112)
!9118 = !DILocation(line: 606, column: 4, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9111, file: !1177, line: 605, column: 53)
!9120 = !DILocation(line: 607, column: 4, scope: !9119)
!9121 = !DILocation(line: 608, column: 4, scope: !9119)
!9122 = !DILocation(line: 609, column: 3, scope: !9119)
!9123 = !DILocation(line: 600, column: 38, scope: !9095)
!9124 = !DILocation(line: 620, column: 30, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9095, file: !1177, line: 620, column: 6)
!9126 = !DILocation(line: 620, column: 6, scope: !9125)
!9127 = !DILocation(line: 620, column: 57, scope: !9125)
!9128 = !DILocation(line: 620, column: 6, scope: !9095)
!9129 = !DILocation(line: 625, column: 29, scope: !9095)
!9130 = !DILocation(line: 625, column: 2, scope: !9095)
!9131 = !DILocation(line: 627, column: 2, scope: !9095)
!9132 = !DILocation(line: 630, column: 3, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9095, file: !1177, line: 627, column: 16)
!9134 = !DILocation(line: 633, column: 3, scope: !9133)
!9135 = !DILocation(line: 636, column: 3, scope: !9133)
!9136 = !DILocation(line: 639, column: 2, scope: !9095)
!9137 = !DILocation(line: 641, column: 2, scope: !9095)
!9138 = !DILocation(line: 643, column: 1, scope: !9095)
!9139 = !DILocation(line: 644, column: 2, scope: !9095)
!9140 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1177, file: !1177, line: 647, type: !1077, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9141)
!9141 = !{!9142, !9143, !9144, !9145}
!9142 = !DILocalVariable(name: "dev", arg: 1, scope: !9140, file: !1177, line: 647, type: !1037)
!9143 = !DILocalVariable(name: "callback", arg: 2, scope: !9140, file: !1177, line: 648, type: !1079)
!9144 = !DILocalVariable(name: "set", arg: 3, scope: !9140, file: !1177, line: 649, type: !347)
!9145 = !DILocalVariable(name: "data", scope: !9140, file: !1177, line: 651, type: !9103)
!9146 = !DILocation(line: 0, scope: !9140)
!9147 = !DILocation(line: 651, column: 38, scope: !9140)
!9148 = !DILocation(line: 653, column: 37, scope: !9140)
!9149 = !DILocation(line: 653, column: 9, scope: !9140)
!9150 = !DILocation(line: 653, column: 2, scope: !9140)
!9151 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9152, file: !9152, line: 38, type: !9153, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9156)
!9152 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9153 = !DISubroutineType(types: !9154)
!9154 = !{!109, !9155, !1079, !347}
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!9156 = !{!9157, !9158, !9159}
!9157 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9151, file: !9152, line: 38, type: !9155)
!9158 = !DILocalVariable(name: "callback", arg: 2, scope: !9151, file: !9152, line: 39, type: !1079)
!9159 = !DILocalVariable(name: "set", arg: 3, scope: !9151, file: !9152, line: 40, type: !347)
!9160 = !DILocation(line: 0, scope: !9151)
!9161 = !DILocation(line: 42, column: 2, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9163, file: !9152, line: 42, column: 2)
!9163 = distinct !DILexicalBlock(scope: !9151, file: !9152, line: 42, column: 2)
!9164 = !DILocation(line: 42, column: 2, scope: !9163)
!9165 = !DILocation(line: 42, column: 2, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9162, file: !9152, line: 42, column: 2)
!9167 = !DILocation(line: 43, column: 2, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9169, file: !9152, line: 43, column: 2)
!9169 = distinct !DILexicalBlock(scope: !9151, file: !9152, line: 43, column: 2)
!9170 = !DILocation(line: 43, column: 2, scope: !9169)
!9171 = !DILocation(line: 43, column: 2, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9168, file: !9152, line: 43, column: 2)
!9173 = !DILocation(line: 45, column: 7, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9151, file: !9152, line: 45, column: 6)
!9175 = !DILocation(line: 45, column: 6, scope: !9151)
!9176 = !DILocation(line: 46, column: 56, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9178, file: !9152, line: 46, column: 7)
!9178 = distinct !DILexicalBlock(scope: !9174, file: !9152, line: 45, column: 38)
!9179 = !DILocation(line: 46, column: 8, scope: !9177)
!9180 = !DILocation(line: 46, column: 7, scope: !9178)
!9181 = !DILocation(line: 51, column: 13, scope: !9174)
!9182 = !DILocation(line: 56, column: 43, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9184, file: !9152, line: 55, column: 11)
!9184 = distinct !DILexicalBlock(scope: !9151, file: !9152, line: 55, column: 6)
!9185 = !DILocation(line: 56, column: 3, scope: !9183)
!9186 = !DILocation(line: 57, column: 2, scope: !9183)
!9187 = !DILocation(line: 60, column: 1, scope: !9151)
!9188 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1084, file: !1084, line: 261, type: !9189, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9191)
!9189 = !DISubroutineType(types: !9190)
!9190 = !{!347, !9155}
!9191 = !{!9192}
!9192 = !DILocalVariable(name: "list", arg: 1, scope: !9188, file: !1084, line: 261, type: !9155)
!9193 = !DILocation(line: 0, scope: !9188)
!9194 = !DILocation(line: 261, column: 1, scope: !9188)
!9195 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1084, file: !1084, line: 417, type: !9196, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9198)
!9196 = !DISubroutineType(types: !9197)
!9197 = !{!347, !9155, !1250}
!9198 = !{!9199, !9200, !9201, !9202}
!9199 = !DILocalVariable(name: "list", arg: 1, scope: !9195, file: !1084, line: 417, type: !9155)
!9200 = !DILocalVariable(name: "node", arg: 2, scope: !9195, file: !1084, line: 417, type: !1250)
!9201 = !DILocalVariable(name: "prev", scope: !9195, file: !1084, line: 417, type: !1250)
!9202 = !DILocalVariable(name: "test", scope: !9195, file: !1084, line: 417, type: !1250)
!9203 = !DILocation(line: 0, scope: !9195)
!9204 = !DILocation(line: 417, column: 1, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9195, file: !1084, line: 417, column: 1)
!9206 = !DILocation(line: 417, column: 1, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9205, file: !1084, line: 417, column: 1)
!9208 = !DILocation(line: 417, column: 1, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !1084, line: 417, column: 1)
!9210 = distinct !DILexicalBlock(scope: !9207, file: !1084, line: 417, column: 1)
!9211 = !DILocation(line: 417, column: 1, scope: !9210)
!9212 = distinct !{!9212, !9204, !9204}
!9213 = !DILocation(line: 417, column: 1, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9209, file: !1084, line: 417, column: 1)
!9215 = !DILocation(line: 417, column: 1, scope: !9195)
!9216 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1084, file: !1084, line: 298, type: !9217, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9219)
!9217 = !DISubroutineType(types: !9218)
!9218 = !{null, !9155, !1250}
!9219 = !{!9220, !9221}
!9220 = !DILocalVariable(name: "list", arg: 1, scope: !9216, file: !1084, line: 298, type: !9155)
!9221 = !DILocalVariable(name: "node", arg: 2, scope: !9216, file: !1084, line: 298, type: !1250)
!9222 = !DILocation(line: 0, scope: !9216)
!9223 = !DILocation(line: 298, column: 1, scope: !9216)
!9224 = !DILocation(line: 298, column: 1, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9216, file: !1084, line: 298, column: 1)
!9226 = !DILocation(line: 298, column: 1, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9225, file: !1084, line: 298, column: 1)
!9228 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1084, file: !1084, line: 231, type: !9229, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9231)
!9229 = !DISubroutineType(types: !9230)
!9230 = !{!1250, !9155}
!9231 = !{!9232}
!9232 = !DILocalVariable(name: "list", arg: 1, scope: !9228, file: !1084, line: 231, type: !9155)
!9233 = !DILocation(line: 0, scope: !9228)
!9234 = !DILocation(line: 233, column: 15, scope: !9228)
!9235 = !DILocation(line: 233, column: 2, scope: !9228)
!9236 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1084, file: !1084, line: 209, type: !9237, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9239)
!9237 = !DISubroutineType(types: !9238)
!9238 = !{null, !1250, !1250}
!9239 = !{!9240, !9241}
!9240 = !DILocalVariable(name: "parent", arg: 1, scope: !9236, file: !1084, line: 209, type: !1250)
!9241 = !DILocalVariable(name: "child", arg: 2, scope: !9236, file: !1084, line: 209, type: !1250)
!9242 = !DILocation(line: 0, scope: !9236)
!9243 = !DILocation(line: 211, column: 10, scope: !9236)
!9244 = !DILocation(line: 211, column: 15, scope: !9236)
!9245 = !DILocation(line: 212, column: 1, scope: !9236)
!9246 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1084, file: !1084, line: 214, type: !9217, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9247)
!9247 = !{!9248, !9249}
!9248 = !DILocalVariable(name: "list", arg: 1, scope: !9246, file: !1084, line: 214, type: !9155)
!9249 = !DILocalVariable(name: "node", arg: 2, scope: !9246, file: !1084, line: 214, type: !1250)
!9250 = !DILocation(line: 0, scope: !9246)
!9251 = !DILocation(line: 216, column: 8, scope: !9246)
!9252 = !DILocation(line: 216, column: 13, scope: !9246)
!9253 = !DILocation(line: 217, column: 1, scope: !9246)
!9254 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1084, file: !1084, line: 243, type: !9229, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9255)
!9255 = !{!9256}
!9256 = !DILocalVariable(name: "list", arg: 1, scope: !9254, file: !1084, line: 243, type: !9155)
!9257 = !DILocation(line: 0, scope: !9254)
!9258 = !DILocation(line: 245, column: 15, scope: !9254)
!9259 = !DILocation(line: 245, column: 2, scope: !9254)
!9260 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1084, file: !1084, line: 219, type: !9217, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9261)
!9261 = !{!9262, !9263}
!9262 = !DILocalVariable(name: "list", arg: 1, scope: !9260, file: !1084, line: 219, type: !9155)
!9263 = !DILocalVariable(name: "node", arg: 2, scope: !9260, file: !1084, line: 219, type: !1250)
!9264 = !DILocation(line: 0, scope: !9260)
!9265 = !DILocation(line: 221, column: 8, scope: !9260)
!9266 = !DILocation(line: 221, column: 13, scope: !9260)
!9267 = !DILocation(line: 222, column: 1, scope: !9260)
!9268 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1084, file: !1084, line: 401, type: !9269, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9271)
!9269 = !DISubroutineType(types: !9270)
!9270 = !{null, !9155, !1250, !1250}
!9271 = !{!9272, !9273, !9274}
!9272 = !DILocalVariable(name: "list", arg: 1, scope: !9268, file: !1084, line: 401, type: !9155)
!9273 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9268, file: !1084, line: 401, type: !1250)
!9274 = !DILocalVariable(name: "node", arg: 3, scope: !9268, file: !1084, line: 401, type: !1250)
!9275 = !DILocation(line: 0, scope: !9268)
!9276 = !DILocation(line: 401, column: 1, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9268, file: !1084, line: 401, column: 1)
!9278 = !DILocation(line: 0, scope: !9277)
!9279 = !DILocation(line: 401, column: 1, scope: !9268)
!9280 = !DILocation(line: 401, column: 1, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9277, file: !1084, line: 401, column: 1)
!9282 = !DILocation(line: 401, column: 1, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9281, file: !1084, line: 401, column: 1)
!9284 = !DILocation(line: 401, column: 1, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9283, file: !1084, line: 401, column: 1)
!9286 = !DILocation(line: 401, column: 1, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9277, file: !1084, line: 401, column: 1)
!9288 = !DILocation(line: 401, column: 1, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9287, file: !1084, line: 401, column: 1)
!9290 = !DILocation(line: 401, column: 1, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9289, file: !1084, line: 401, column: 1)
!9292 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1084, file: !1084, line: 285, type: !9293, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9295)
!9293 = !DISubroutineType(types: !9294)
!9294 = !{!1250, !1250}
!9295 = !{!9296}
!9296 = !DILocalVariable(name: "node", arg: 1, scope: !9292, file: !1084, line: 285, type: !1250)
!9297 = !DILocation(line: 0, scope: !9292)
!9298 = !DILocation(line: 285, column: 1, scope: !9292)
!9299 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1084, file: !1084, line: 274, type: !9293, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9300)
!9300 = !{!9301}
!9301 = !DILocalVariable(name: "node", arg: 1, scope: !9299, file: !1084, line: 274, type: !1250)
!9302 = !DILocation(line: 0, scope: !9299)
!9303 = !DILocation(line: 274, column: 1, scope: !9299)
!9304 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1084, file: !1084, line: 204, type: !9293, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9305)
!9305 = !{!9306}
!9306 = !DILocalVariable(name: "node", arg: 1, scope: !9304, file: !1084, line: 204, type: !1250)
!9307 = !DILocation(line: 0, scope: !9304)
!9308 = !DILocation(line: 206, column: 15, scope: !9304)
!9309 = !DILocation(line: 206, column: 2, scope: !9304)
!9310 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1177, file: !1177, line: 342, type: !303, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9311)
!9311 = !{!9312, !9313, !9314}
!9312 = !DILocalVariable(name: "pin", arg: 1, scope: !9310, file: !1177, line: 342, type: !109)
!9313 = !DILocalVariable(name: "line", scope: !9310, file: !1177, line: 344, type: !110)
!9314 = !DILocalVariable(name: "port", scope: !9310, file: !1177, line: 345, type: !109)
!9315 = !DILocation(line: 0, scope: !9310)
!9316 = !DILocation(line: 344, column: 18, scope: !9310)
!9317 = !{i32 983040, i32 0}
!9318 = !DILocation(line: 356, column: 9, scope: !9310)
!9319 = !DILocation(line: 370, column: 2, scope: !9310)
!9320 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1177, file: !1177, line: 37, type: !728, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9321)
!9321 = !{!9322, !9323, !9324}
!9322 = !DILocalVariable(name: "line", arg: 1, scope: !9320, file: !1177, line: 37, type: !109)
!9323 = !DILocalVariable(name: "arg", arg: 2, scope: !9320, file: !1177, line: 37, type: !107)
!9324 = !DILocalVariable(name: "data", scope: !9320, file: !1177, line: 39, type: !9103)
!9325 = !DILocation(line: 0, scope: !9320)
!9326 = !DILocation(line: 41, column: 29, scope: !9320)
!9327 = !DILocation(line: 41, column: 39, scope: !9320)
!9328 = !DILocation(line: 41, column: 44, scope: !9320)
!9329 = !DILocation(line: 41, column: 2, scope: !9320)
!9330 = !DILocation(line: 42, column: 1, scope: !9320)
!9331 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1177, file: !1177, line: 376, type: !9332, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9334)
!9332 = !DISubroutineType(types: !9333)
!9333 = !{!109, !109, !109}
!9334 = !{!9335, !9336, !9337, !9339, !9340}
!9335 = !DILocalVariable(name: "port", arg: 1, scope: !9331, file: !1177, line: 376, type: !109)
!9336 = !DILocalVariable(name: "pin", arg: 2, scope: !9331, file: !1177, line: 376, type: !109)
!9337 = !DILocalVariable(name: "clk", scope: !9331, file: !1177, line: 386, type: !9338)
!9338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!9339 = !DILocalVariable(name: "pclken", scope: !9331, file: !1177, line: 387, type: !1293)
!9340 = !DILocalVariable(name: "ret", scope: !9331, file: !1177, line: 396, type: !109)
!9341 = !DILocation(line: 0, scope: !9331)
!9342 = !DILocation(line: 387, column: 2, scope: !9331)
!9343 = !DILocation(line: 387, column: 22, scope: !9331)
!9344 = !DILocation(line: 399, column: 8, scope: !9331)
!9345 = !DILocation(line: 400, column: 10, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9331, file: !1177, line: 400, column: 6)
!9347 = !DILocation(line: 400, column: 6, scope: !9331)
!9348 = !DILocation(line: 405, column: 2, scope: !9331)
!9349 = !DILocation(line: 407, column: 2, scope: !9331)
!9350 = !DILocation(line: 408, column: 1, scope: !9331)
!9351 = distinct !DISubprogram(name: "clock_control_on", scope: !813, file: !813, line: 123, type: !1142, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9352)
!9352 = !{!9353, !9354, !9355}
!9353 = !DILocalVariable(name: "dev", arg: 1, scope: !9351, file: !813, line: 123, type: !1037)
!9354 = !DILocalVariable(name: "sys", arg: 2, scope: !9351, file: !813, line: 124, type: !908)
!9355 = !DILocalVariable(name: "api", scope: !9351, file: !813, line: 126, type: !1135)
!9356 = !DILocation(line: 0, scope: !9351)
!9357 = !DILocation(line: 127, column: 49, scope: !9351)
!9358 = !DILocation(line: 129, column: 14, scope: !9351)
!9359 = !DILocation(line: 129, column: 9, scope: !9351)
!9360 = !DILocation(line: 129, column: 2, scope: !9351)
!9361 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1177, file: !1177, line: 311, type: !8480, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9362)
!9362 = !{!9363, !9364, !9365}
!9363 = !DILocalVariable(name: "port", arg: 1, scope: !9361, file: !1177, line: 311, type: !109)
!9364 = !DILocalVariable(name: "pin", arg: 2, scope: !9361, file: !1177, line: 311, type: !109)
!9365 = !DILocalVariable(name: "line", scope: !9361, file: !1177, line: 313, type: !110)
!9366 = !DILocation(line: 0, scope: !9361)
!9367 = !DILocation(line: 313, column: 18, scope: !9361)
!9368 = !DILocation(line: 337, column: 2, scope: !9361)
!9369 = !DILocation(line: 340, column: 1, scope: !9361)
!9370 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1177, file: !1177, line: 295, type: !9371, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9373)
!9371 = !DISubroutineType(types: !9372)
!9372 = !{!110, !109}
!9373 = !{!9374}
!9374 = !DILocalVariable(name: "pin", arg: 1, scope: !9370, file: !1177, line: 295, type: !109)
!9375 = !DILocation(line: 0, scope: !9370)
!9376 = !DILocation(line: 307, column: 46, scope: !9370)
!9377 = !DILocation(line: 307, column: 27, scope: !9370)
!9378 = !DILocation(line: 307, column: 32, scope: !9370)
!9379 = !DILocation(line: 307, column: 14, scope: !9370)
!9380 = !DILocation(line: 307, column: 39, scope: !9370)
!9381 = !DILocation(line: 307, column: 2, scope: !9370)
!9382 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6083, file: !6083, line: 671, type: !9383, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9385)
!9383 = !DISubroutineType(types: !9384)
!9384 = !{null, !110, !110}
!9385 = !{!9386, !9387}
!9386 = !DILocalVariable(name: "Port", arg: 1, scope: !9382, file: !6083, line: 671, type: !110)
!9387 = !DILocalVariable(name: "Line", arg: 2, scope: !9382, file: !6083, line: 671, type: !110)
!9388 = !DILocation(line: 0, scope: !9382)
!9389 = !DILocation(line: 673, column: 3, scope: !9382)
!9390 = !DILocalVariable(name: "value", arg: 1, scope: !9391, file: !6383, line: 373, type: !110)
!9391 = distinct !DISubprogram(name: "__RBIT", scope: !6383, file: !6383, line: 373, type: !7670, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9392)
!9392 = !{!9390, !9393}
!9393 = !DILocalVariable(name: "result", scope: !9391, file: !6383, line: 375, type: !110)
!9394 = !DILocation(line: 0, scope: !9391, inlinedAt: !9395)
!9395 = distinct !DILocation(line: 673, column: 3, scope: !9382)
!9396 = !DILocation(line: 380, column: 4, scope: !9391, inlinedAt: !9395)
!9397 = !{i64 2835507}
!9398 = !DILocalVariable(name: "value", arg: 1, scope: !9399, file: !6383, line: 403, type: !110)
!9399 = distinct !DISubprogram(name: "__CLZ", scope: !6383, file: !6383, line: 403, type: !9400, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9402)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{!180, !110}
!9402 = !{!9398}
!9403 = !DILocation(line: 0, scope: !9399, inlinedAt: !9404)
!9404 = distinct !DILocation(line: 673, column: 3, scope: !9382)
!9405 = !DILocation(line: 414, column: 7, scope: !9399, inlinedAt: !9404)
!9406 = !DILocation(line: 674, column: 1, scope: !9382)
!9407 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9152, file: !9152, line: 69, type: !9408, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9410)
!9408 = !DISubroutineType(types: !9409)
!9409 = !{null, !9155, !1037, !110}
!9410 = !{!9411, !9412, !9413, !9414, !9415}
!9411 = !DILocalVariable(name: "list", arg: 1, scope: !9407, file: !9152, line: 69, type: !9155)
!9412 = !DILocalVariable(name: "port", arg: 2, scope: !9407, file: !9152, line: 70, type: !1037)
!9413 = !DILocalVariable(name: "pins", arg: 3, scope: !9407, file: !9152, line: 71, type: !110)
!9414 = !DILocalVariable(name: "cb", scope: !9407, file: !9152, line: 73, type: !1079)
!9415 = !DILocalVariable(name: "tmp", scope: !9407, file: !9152, line: 73, type: !1079)
!9416 = !DILocation(line: 0, scope: !9407)
!9417 = !DILocation(line: 75, column: 2, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9407, file: !9152, line: 75, column: 2)
!9419 = !DILocation(line: 0, scope: !9418)
!9420 = !DILocation(line: 76, column: 11, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9422, file: !9152, line: 76, column: 7)
!9422 = distinct !DILexicalBlock(scope: !9423, file: !9152, line: 75, column: 57)
!9423 = distinct !DILexicalBlock(scope: !9418, file: !9152, line: 75, column: 2)
!9424 = !DILocation(line: 76, column: 20, scope: !9421)
!9425 = !DILocation(line: 76, column: 7, scope: !9422)
!9426 = !DILocation(line: 77, column: 4, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9428, file: !9152, line: 77, column: 4)
!9428 = distinct !DILexicalBlock(scope: !9429, file: !9152, line: 77, column: 4)
!9429 = distinct !DILexicalBlock(scope: !9421, file: !9152, line: 76, column: 28)
!9430 = !DILocation(line: 77, column: 4, scope: !9428)
!9431 = !DILocation(line: 77, column: 4, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9427, file: !9152, line: 77, column: 4)
!9433 = !DILocation(line: 78, column: 4, scope: !9429)
!9434 = !DILocation(line: 79, column: 3, scope: !9429)
!9435 = !DILocation(line: 75, column: 2, scope: !9423)
!9436 = !DILocation(line: 81, column: 1, scope: !9407)
!9437 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6083, file: !6083, line: 710, type: !7670, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9438)
!9438 = !{!9439}
!9439 = !DILocalVariable(name: "Line", arg: 1, scope: !9437, file: !6083, line: 710, type: !110)
!9440 = !DILocation(line: 0, scope: !9437)
!9441 = !DILocation(line: 712, column: 21, scope: !9437)
!9442 = !DILocation(line: 0, scope: !9391, inlinedAt: !9443)
!9443 = distinct !DILocation(line: 712, column: 76, scope: !9437)
!9444 = !DILocation(line: 380, column: 4, scope: !9391, inlinedAt: !9443)
!9445 = !DILocation(line: 0, scope: !9399, inlinedAt: !9446)
!9446 = distinct !DILocation(line: 712, column: 76, scope: !9437)
!9447 = !DILocation(line: 414, column: 7, scope: !9399, inlinedAt: !9446)
!9448 = !DILocation(line: 712, column: 73, scope: !9437)
!9449 = !DILocation(line: 712, column: 3, scope: !9437)
!9450 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9451, file: !9451, line: 910, type: !9452, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9454)
!9451 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9452 = !DISubroutineType(types: !9453)
!9453 = !{null, !1110, !110}
!9454 = !{!9455, !9456}
!9455 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9450, file: !9451, line: 910, type: !1110)
!9456 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9450, file: !9451, line: 910, type: !110)
!9457 = !DILocation(line: 0, scope: !9450)
!9458 = !DILocation(line: 912, column: 3, scope: !9450)
!9459 = !DILocation(line: 913, column: 1, scope: !9450)
!9460 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9451, file: !9451, line: 823, type: !9461, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9463)
!9461 = !DISubroutineType(types: !9462)
!9462 = !{!110, !1110}
!9463 = !{!9464}
!9464 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9460, file: !9451, line: 823, type: !1110)
!9465 = !DILocation(line: 0, scope: !9460)
!9466 = !DILocation(line: 825, column: 21, scope: !9460)
!9467 = !DILocation(line: 825, column: 3, scope: !9460)
!9468 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9451, file: !9451, line: 812, type: !9452, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9469)
!9469 = !{!9470, !9471}
!9470 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9468, file: !9451, line: 812, type: !1110)
!9471 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9468, file: !9451, line: 812, type: !110)
!9472 = !DILocation(line: 0, scope: !9468)
!9473 = !DILocation(line: 814, column: 3, scope: !9468)
!9474 = !DILocation(line: 815, column: 1, scope: !9468)
!9475 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9451, file: !9451, line: 771, type: !9461, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9476)
!9476 = !{!9477}
!9477 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9475, file: !9451, line: 771, type: !1110)
!9478 = !DILocation(line: 0, scope: !9475)
!9479 = !DILocation(line: 773, column: 21, scope: !9475)
!9480 = !DILocation(line: 773, column: 3, scope: !9475)
!9481 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1177, file: !1177, line: 47, type: !9482, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9484)
!9482 = !DISubroutineType(types: !9483)
!9483 = !{!109, !1053, !281}
!9484 = !{!9485, !9486}
!9485 = !DILocalVariable(name: "flags", arg: 1, scope: !9481, file: !1177, line: 47, type: !1053)
!9486 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9481, file: !1177, line: 47, type: !281)
!9487 = !DILocation(line: 0, scope: !9481)
!9488 = !DILocation(line: 50, column: 13, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9481, file: !1177, line: 50, column: 6)
!9490 = !DILocation(line: 50, column: 28, scope: !9489)
!9491 = !DILocation(line: 50, column: 6, scope: !9481)
!9492 = !DILocation(line: 53, column: 11, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9489, file: !1177, line: 50, column: 34)
!9494 = !DILocation(line: 55, column: 14, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9493, file: !1177, line: 55, column: 7)
!9496 = !DILocation(line: 55, column: 35, scope: !9495)
!9497 = !DILocation(line: 55, column: 7, scope: !9493)
!9498 = !DILocation(line: 56, column: 14, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !1177, line: 56, column: 8)
!9500 = distinct !DILexicalBlock(scope: !9495, file: !1177, line: 55, column: 41)
!9501 = !DILocation(line: 56, column: 8, scope: !9500)
!9502 = !DILocation(line: 0, scope: !9495)
!9503 = !DILocation(line: 66, column: 14, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9493, file: !1177, line: 66, column: 7)
!9505 = !DILocation(line: 66, column: 30, scope: !9504)
!9506 = !DILocation(line: 66, column: 7, scope: !9493)
!9507 = !DILocation(line: 67, column: 12, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9504, file: !1177, line: 66, column: 36)
!9509 = !DILocation(line: 68, column: 3, scope: !9508)
!9510 = !DILocation(line: 68, column: 21, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9504, file: !1177, line: 68, column: 14)
!9512 = !DILocation(line: 68, column: 39, scope: !9511)
!9513 = !DILocation(line: 68, column: 14, scope: !9504)
!9514 = !DILocation(line: 69, column: 12, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9511, file: !1177, line: 68, column: 45)
!9516 = !DILocation(line: 70, column: 3, scope: !9515)
!9517 = !DILocation(line: 72, column: 21, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9489, file: !1177, line: 72, column: 14)
!9519 = !DILocation(line: 72, column: 35, scope: !9518)
!9520 = !DILocation(line: 72, column: 14, scope: !9489)
!9521 = !DILocation(line: 77, column: 14, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9523, file: !1177, line: 77, column: 7)
!9523 = distinct !DILexicalBlock(scope: !9518, file: !1177, line: 72, column: 41)
!9524 = !DILocation(line: 77, column: 30, scope: !9522)
!9525 = !DILocation(line: 77, column: 7, scope: !9523)
!9526 = !DILocation(line: 0, scope: !9489)
!9527 = !DILocation(line: 90, column: 1, scope: !9481)
!9528 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1177, file: !1177, line: 157, type: !9529, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9531)
!9529 = !DISubroutineType(types: !9530)
!9530 = !{null, !1037, !109, !109, !109}
!9531 = !{!9532, !9533, !9534, !9535, !9536, !9537, !9538, !9539, !9540, !9541, !9542}
!9532 = !DILocalVariable(name: "dev", arg: 1, scope: !9528, file: !1177, line: 157, type: !1037)
!9533 = !DILocalVariable(name: "pin", arg: 2, scope: !9528, file: !1177, line: 157, type: !109)
!9534 = !DILocalVariable(name: "conf", arg: 3, scope: !9528, file: !1177, line: 158, type: !109)
!9535 = !DILocalVariable(name: "func", arg: 4, scope: !9528, file: !1177, line: 158, type: !109)
!9536 = !DILocalVariable(name: "cfg", scope: !9528, file: !1177, line: 160, type: !9036)
!9537 = !DILocalVariable(name: "gpio", scope: !9528, file: !1177, line: 161, type: !1110)
!9538 = !DILocalVariable(name: "pin_ll", scope: !9528, file: !1177, line: 163, type: !109)
!9539 = !DILocalVariable(name: "mode", scope: !9528, file: !1177, line: 227, type: !32)
!9540 = !DILocalVariable(name: "otype", scope: !9528, file: !1177, line: 227, type: !32)
!9541 = !DILocalVariable(name: "ospeed", scope: !9528, file: !1177, line: 227, type: !32)
!9542 = !DILocalVariable(name: "pupd", scope: !9528, file: !1177, line: 227, type: !32)
!9543 = !DILocation(line: 0, scope: !9528)
!9544 = !DILocation(line: 160, column: 45, scope: !9528)
!9545 = !DILocation(line: 161, column: 44, scope: !9528)
!9546 = !DILocation(line: 163, column: 15, scope: !9528)
!9547 = !DILocation(line: 229, column: 14, scope: !9528)
!9548 = !DILocation(line: 246, column: 47, scope: !9528)
!9549 = !DILocation(line: 246, column: 2, scope: !9528)
!9550 = !DILocation(line: 248, column: 43, scope: !9528)
!9551 = !DILocation(line: 248, column: 2, scope: !9528)
!9552 = !DILocation(line: 250, column: 40, scope: !9528)
!9553 = !DILocation(line: 250, column: 2, scope: !9528)
!9554 = !DILocation(line: 252, column: 11, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9528, file: !1177, line: 252, column: 6)
!9556 = !DILocation(line: 252, column: 6, scope: !9528)
!9557 = !DILocation(line: 253, column: 11, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9559, file: !1177, line: 253, column: 7)
!9559 = distinct !DILexicalBlock(scope: !9555, file: !1177, line: 252, column: 36)
!9560 = !DILocation(line: 253, column: 7, scope: !9559)
!9561 = !DILocation(line: 254, column: 4, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9558, file: !1177, line: 253, column: 16)
!9563 = !DILocation(line: 255, column: 3, scope: !9562)
!9564 = !DILocation(line: 256, column: 4, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9558, file: !1177, line: 255, column: 10)
!9566 = !DILocation(line: 260, column: 40, scope: !9528)
!9567 = !DILocation(line: 260, column: 2, scope: !9528)
!9568 = !DILocation(line: 265, column: 1, scope: !9528)
!9569 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1177, file: !1177, line: 137, type: !9371, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9570)
!9570 = !{!9571, !9572}
!9571 = !DILocalVariable(name: "pin", arg: 1, scope: !9569, file: !1177, line: 137, type: !109)
!9572 = !DILocalVariable(name: "pinval", scope: !9569, file: !1177, line: 139, type: !110)
!9573 = !DILocation(line: 0, scope: !9569)
!9574 = !DILocation(line: 149, column: 13, scope: !9569)
!9575 = !DILocation(line: 151, column: 2, scope: !9569)
!9576 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9451, file: !9451, line: 342, type: !9577, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9579)
!9577 = !DISubroutineType(types: !9578)
!9578 = !{null, !1110, !110, !110}
!9579 = !{!9580, !9581, !9582}
!9580 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9576, file: !9451, line: 342, type: !1110)
!9581 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9576, file: !9451, line: 342, type: !110)
!9582 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9576, file: !9451, line: 342, type: !110)
!9583 = !DILocation(line: 0, scope: !9576)
!9584 = !DILocation(line: 344, column: 3, scope: !9576)
!9585 = !DILocation(line: 345, column: 1, scope: !9576)
!9586 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9451, file: !9451, line: 413, type: !9577, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9587)
!9587 = !{!9588, !9589, !9590}
!9588 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9586, file: !9451, line: 413, type: !1110)
!9589 = !DILocalVariable(name: "Pin", arg: 2, scope: !9586, file: !9451, line: 413, type: !110)
!9590 = !DILocalVariable(name: "Speed", arg: 3, scope: !9586, file: !9451, line: 413, type: !110)
!9591 = !DILocation(line: 0, scope: !9586)
!9592 = !DILocation(line: 415, column: 3, scope: !9586)
!9593 = !DILocation(line: 0, scope: !9391, inlinedAt: !9594)
!9594 = distinct !DILocation(line: 415, column: 3, scope: !9586)
!9595 = !DILocation(line: 380, column: 4, scope: !9391, inlinedAt: !9594)
!9596 = !DILocation(line: 0, scope: !9399, inlinedAt: !9597)
!9597 = distinct !DILocation(line: 415, column: 3, scope: !9586)
!9598 = !DILocation(line: 414, column: 7, scope: !9399, inlinedAt: !9597)
!9599 = !DILocation(line: 0, scope: !9391, inlinedAt: !9600)
!9600 = distinct !DILocation(line: 415, column: 3, scope: !9586)
!9601 = !DILocation(line: 0, scope: !9399, inlinedAt: !9602)
!9602 = distinct !DILocation(line: 415, column: 3, scope: !9586)
!9603 = !DILocation(line: 417, column: 1, scope: !9586)
!9604 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9451, file: !9451, line: 484, type: !9577, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9605)
!9605 = !{!9606, !9607, !9608}
!9606 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9604, file: !9451, line: 484, type: !1110)
!9607 = !DILocalVariable(name: "Pin", arg: 2, scope: !9604, file: !9451, line: 484, type: !110)
!9608 = !DILocalVariable(name: "Pull", arg: 3, scope: !9604, file: !9451, line: 484, type: !110)
!9609 = !DILocation(line: 0, scope: !9604)
!9610 = !DILocation(line: 486, column: 3, scope: !9604)
!9611 = !DILocation(line: 0, scope: !9391, inlinedAt: !9612)
!9612 = distinct !DILocation(line: 486, column: 3, scope: !9604)
!9613 = !DILocation(line: 380, column: 4, scope: !9391, inlinedAt: !9612)
!9614 = !DILocation(line: 0, scope: !9399, inlinedAt: !9615)
!9615 = distinct !DILocation(line: 486, column: 3, scope: !9604)
!9616 = !DILocation(line: 414, column: 7, scope: !9399, inlinedAt: !9615)
!9617 = !DILocation(line: 0, scope: !9391, inlinedAt: !9618)
!9618 = distinct !DILocation(line: 486, column: 3, scope: !9604)
!9619 = !DILocation(line: 0, scope: !9399, inlinedAt: !9620)
!9620 = distinct !DILocation(line: 486, column: 3, scope: !9604)
!9621 = !DILocation(line: 487, column: 1, scope: !9604)
!9622 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9451, file: !9451, line: 556, type: !9577, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9623)
!9623 = !{!9624, !9625, !9626}
!9624 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9622, file: !9451, line: 556, type: !1110)
!9625 = !DILocalVariable(name: "Pin", arg: 2, scope: !9622, file: !9451, line: 556, type: !110)
!9626 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9622, file: !9451, line: 556, type: !110)
!9627 = !DILocation(line: 0, scope: !9622)
!9628 = !DILocation(line: 558, column: 3, scope: !9622)
!9629 = !DILocation(line: 0, scope: !9391, inlinedAt: !9630)
!9630 = distinct !DILocation(line: 558, column: 3, scope: !9622)
!9631 = !DILocation(line: 380, column: 4, scope: !9391, inlinedAt: !9630)
!9632 = !DILocation(line: 0, scope: !9399, inlinedAt: !9633)
!9633 = distinct !DILocation(line: 558, column: 3, scope: !9622)
!9634 = !DILocation(line: 414, column: 7, scope: !9399, inlinedAt: !9633)
!9635 = !DILocation(line: 0, scope: !9391, inlinedAt: !9636)
!9636 = distinct !DILocation(line: 558, column: 3, scope: !9622)
!9637 = !DILocation(line: 0, scope: !9399, inlinedAt: !9638)
!9638 = distinct !DILocation(line: 558, column: 3, scope: !9622)
!9639 = !DILocation(line: 560, column: 1, scope: !9622)
!9640 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9451, file: !9451, line: 633, type: !9577, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9641)
!9641 = !{!9642, !9643, !9644}
!9642 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9640, file: !9451, line: 633, type: !1110)
!9643 = !DILocalVariable(name: "Pin", arg: 2, scope: !9640, file: !9451, line: 633, type: !110)
!9644 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9640, file: !9451, line: 633, type: !110)
!9645 = !DILocation(line: 0, scope: !9640)
!9646 = !DILocation(line: 635, column: 3, scope: !9640)
!9647 = !DILocation(line: 0, scope: !9391, inlinedAt: !9648)
!9648 = distinct !DILocation(line: 635, column: 3, scope: !9640)
!9649 = !DILocation(line: 380, column: 4, scope: !9391, inlinedAt: !9648)
!9650 = !DILocation(line: 0, scope: !9399, inlinedAt: !9651)
!9651 = distinct !DILocation(line: 635, column: 3, scope: !9640)
!9652 = !DILocation(line: 414, column: 7, scope: !9399, inlinedAt: !9651)
!9653 = !DILocation(line: 0, scope: !9391, inlinedAt: !9654)
!9654 = distinct !DILocation(line: 635, column: 3, scope: !9640)
!9655 = !DILocation(line: 0, scope: !9399, inlinedAt: !9656)
!9656 = distinct !DILocation(line: 635, column: 3, scope: !9640)
!9657 = !DILocation(line: 637, column: 1, scope: !9640)
!9658 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9451, file: !9451, line: 273, type: !9577, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9659)
!9659 = !{!9660, !9661, !9662}
!9660 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9658, file: !9451, line: 273, type: !1110)
!9661 = !DILocalVariable(name: "Pin", arg: 2, scope: !9658, file: !9451, line: 273, type: !110)
!9662 = !DILocalVariable(name: "Mode", arg: 3, scope: !9658, file: !9451, line: 273, type: !110)
!9663 = !DILocation(line: 0, scope: !9658)
!9664 = !DILocation(line: 275, column: 3, scope: !9658)
!9665 = !DILocation(line: 0, scope: !9391, inlinedAt: !9666)
!9666 = distinct !DILocation(line: 275, column: 3, scope: !9658)
!9667 = !DILocation(line: 380, column: 4, scope: !9391, inlinedAt: !9666)
!9668 = !DILocation(line: 0, scope: !9399, inlinedAt: !9669)
!9669 = distinct !DILocation(line: 275, column: 3, scope: !9658)
!9670 = !DILocation(line: 414, column: 7, scope: !9399, inlinedAt: !9669)
!9671 = !DILocation(line: 0, scope: !9391, inlinedAt: !9672)
!9672 = distinct !DILocation(line: 275, column: 3, scope: !9658)
!9673 = !DILocation(line: 0, scope: !9399, inlinedAt: !9674)
!9674 = distinct !DILocation(line: 275, column: 3, scope: !9658)
!9675 = !DILocation(line: 276, column: 1, scope: !9658)
!9676 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1177, file: !1177, line: 698, type: !1190, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9677)
!9677 = !{!9678, !9679, !9680}
!9678 = !DILocalVariable(name: "dev", arg: 1, scope: !9676, file: !1177, line: 698, type: !1037)
!9679 = !DILocalVariable(name: "data", scope: !9676, file: !1177, line: 700, type: !9103)
!9680 = !DILocalVariable(name: "ret", scope: !9676, file: !1177, line: 701, type: !109)
!9681 = !DILocation(line: 0, scope: !9676)
!9682 = !DILocation(line: 700, column: 38, scope: !9676)
!9683 = !DILocation(line: 703, column: 8, scope: !9676)
!9684 = !DILocation(line: 703, column: 12, scope: !9676)
!9685 = !DILocation(line: 705, column: 7, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9676, file: !1177, line: 705, column: 6)
!9687 = !DILocation(line: 705, column: 6, scope: !9676)
!9688 = !DILocation(line: 722, column: 8, scope: !9676)
!9689 = !DILocation(line: 723, column: 10, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9676, file: !1177, line: 723, column: 6)
!9691 = !DILocation(line: 723, column: 6, scope: !9676)
!9692 = !DILocation(line: 731, column: 1, scope: !9676)
!9693 = distinct !DISubprogram(name: "device_is_ready", scope: !8881, file: !8881, line: 47, type: !9694, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9696)
!9694 = !DISubroutineType(types: !9695)
!9695 = !{!347, !1037}
!9696 = !{!9697}
!9697 = !DILocalVariable(name: "dev", arg: 1, scope: !9693, file: !8881, line: 47, type: !1037)
!9698 = !DILocation(line: 0, scope: !9693)
!9699 = !DILocation(line: 55, column: 2, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9693, file: !8881, line: 55, column: 2)
!9701 = !{i64 2154268683}
!9702 = !DILocation(line: 56, column: 9, scope: !9693)
!9703 = !DILocation(line: 56, column: 2, scope: !9693)
!9704 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1177, file: !1177, line: 270, type: !9705, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9707)
!9705 = !DISubroutineType(types: !9706)
!9706 = !{!109, !1037, !347}
!9707 = !{!9708, !9709, !9710, !9711, !9712}
!9708 = !DILocalVariable(name: "dev", arg: 1, scope: !9704, file: !1177, line: 270, type: !1037)
!9709 = !DILocalVariable(name: "on", arg: 2, scope: !9704, file: !1177, line: 270, type: !347)
!9710 = !DILocalVariable(name: "cfg", scope: !9704, file: !1177, line: 272, type: !9036)
!9711 = !DILocalVariable(name: "ret", scope: !9704, file: !1177, line: 273, type: !109)
!9712 = !DILocalVariable(name: "clk", scope: !9704, file: !1177, line: 278, type: !9338)
!9713 = !DILocation(line: 0, scope: !9704)
!9714 = !DILocation(line: 272, column: 45, scope: !9704)
!9715 = !DILocation(line: 282, column: 38, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9717, file: !1177, line: 280, column: 10)
!9717 = distinct !DILexicalBlock(scope: !9704, file: !1177, line: 280, column: 6)
!9718 = !DILocation(line: 282, column: 6, scope: !9716)
!9719 = !DILocation(line: 281, column: 9, scope: !9716)
!9720 = !DILocation(line: 293, column: 1, scope: !9704)
!9721 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !9694, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9722)
!9722 = !{!9723}
!9723 = !DILocalVariable(name: "dev", arg: 1, scope: !9721, file: !336, line: 730, type: !1037)
!9724 = !DILocation(line: 0, scope: !9721)
!9725 = !DILocation(line: 732, column: 9, scope: !9721)
!9726 = !DILocation(line: 732, column: 2, scope: !9721)
!9727 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1177, file: !1177, line: 496, type: !9728, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1008, retainedNodes: !9730)
!9728 = !DISubroutineType(types: !9729)
!9729 = !{!109, !1037, !109, !109, !109}
!9730 = !{!9731, !9732, !9733, !9734, !9735, !9736}
!9731 = !DILocalVariable(name: "dev", arg: 1, scope: !9727, file: !1177, line: 496, type: !1037)
!9732 = !DILocalVariable(name: "pin", arg: 2, scope: !9727, file: !1177, line: 496, type: !109)
!9733 = !DILocalVariable(name: "conf", arg: 3, scope: !9727, file: !1177, line: 496, type: !109)
!9734 = !DILocalVariable(name: "func", arg: 4, scope: !9727, file: !1177, line: 496, type: !109)
!9735 = !DILocalVariable(name: "ret", scope: !9727, file: !1177, line: 498, type: !109)
!9736 = !DILocalVariable(name: "gpio_out", scope: !9737, file: !1177, line: 508, type: !110)
!9737 = distinct !DILexicalBlock(scope: !9738, file: !1177, line: 507, column: 27)
!9738 = distinct !DILexicalBlock(scope: !9727, file: !1177, line: 507, column: 6)
!9739 = !DILocation(line: 0, scope: !9727)
!9740 = !DILocation(line: 505, column: 2, scope: !9727)
!9741 = !DILocation(line: 507, column: 11, scope: !9738)
!9742 = !DILocation(line: 507, column: 6, scope: !9727)
!9743 = !DILocation(line: 508, column: 28, scope: !9737)
!9744 = !DILocation(line: 0, scope: !9737)
!9745 = !DILocation(line: 510, column: 16, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9737, file: !1177, line: 510, column: 7)
!9747 = !DILocation(line: 0, scope: !9746)
!9748 = !DILocation(line: 510, column: 7, scope: !9737)
!9749 = !DILocation(line: 511, column: 4, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9746, file: !1177, line: 510, column: 32)
!9751 = !DILocation(line: 512, column: 3, scope: !9750)
!9752 = !DILocation(line: 513, column: 4, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9754, file: !1177, line: 512, column: 39)
!9754 = distinct !DILexicalBlock(scope: !9746, file: !1177, line: 512, column: 14)
!9755 = !DILocation(line: 514, column: 3, scope: !9753)
!9756 = !DILocation(line: 518, column: 1, scope: !9727)
!9757 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1450, file: !1450, line: 526, type: !1353, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9758)
!9758 = !{!9759, !9760, !9761}
!9759 = !DILocalVariable(name: "dev", arg: 1, scope: !9757, file: !1450, line: 526, type: !1355)
!9760 = !DILocalVariable(name: "c", arg: 2, scope: !9757, file: !1450, line: 526, type: !969)
!9761 = !DILocalVariable(name: "config", scope: !9757, file: !1450, line: 528, type: !9762)
!9762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!9763 = !DILocation(line: 0, scope: !9757)
!9764 = !DILocation(line: 528, column: 48, scope: !9757)
!9765 = !DILocation(line: 531, column: 40, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9757, file: !1450, line: 531, column: 6)
!9767 = !DILocation(line: 531, column: 6, scope: !9766)
!9768 = !DILocation(line: 531, column: 6, scope: !9757)
!9769 = !DILocation(line: 532, column: 34, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9766, file: !1450, line: 531, column: 48)
!9771 = !DILocation(line: 532, column: 3, scope: !9770)
!9772 = !DILocation(line: 533, column: 2, scope: !9770)
!9773 = !DILocation(line: 539, column: 42, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9757, file: !1450, line: 539, column: 6)
!9775 = !DILocation(line: 539, column: 7, scope: !9774)
!9776 = !DILocation(line: 539, column: 6, scope: !9757)
!9777 = !DILocation(line: 543, column: 52, scope: !9757)
!9778 = !DILocation(line: 543, column: 22, scope: !9757)
!9779 = !DILocation(line: 543, column: 5, scope: !9757)
!9780 = !DILocation(line: 545, column: 2, scope: !9757)
!9781 = !DILocation(line: 546, column: 1, scope: !9757)
!9782 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1450, file: !1450, line: 548, type: !1372, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9783)
!9783 = !{!9784, !9785, !9786, !9787}
!9784 = !DILocalVariable(name: "dev", arg: 1, scope: !9782, file: !1450, line: 548, type: !1355)
!9785 = !DILocalVariable(name: "c", arg: 2, scope: !9782, file: !1450, line: 549, type: !181)
!9786 = !DILocalVariable(name: "config", scope: !9782, file: !1450, line: 551, type: !9762)
!9787 = !DILocalVariable(name: "key", scope: !9782, file: !1450, line: 555, type: !32)
!9788 = !DILocation(line: 0, scope: !9782)
!9789 = !DILocation(line: 551, column: 48, scope: !9782)
!9790 = !DILocation(line: 562, column: 2, scope: !9782)
!9791 = !DILocation(line: 563, column: 41, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9793, file: !1450, line: 563, column: 7)
!9793 = distinct !DILexicalBlock(scope: !9782, file: !1450, line: 562, column: 12)
!9794 = !DILocation(line: 563, column: 7, scope: !9792)
!9795 = !DILocation(line: 563, column: 7, scope: !9793)
!9796 = !DILocation(line: 55, column: 2, scope: !9797, inlinedAt: !9801)
!9797 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6062, file: !6062, line: 42, type: !6063, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9798)
!9798 = !{!9799, !9800}
!9799 = !DILocalVariable(name: "key", scope: !9797, file: !6062, line: 44, type: !32)
!9800 = !DILocalVariable(name: "tmp", scope: !9797, file: !6062, line: 53, type: !32)
!9801 = distinct !DILocation(line: 564, column: 10, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9792, file: !1450, line: 563, column: 49)
!9803 = !{i64 2001052}
!9804 = !DILocation(line: 0, scope: !9797, inlinedAt: !9801)
!9805 = !DILocation(line: 565, column: 42, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9802, file: !1450, line: 565, column: 8)
!9807 = !DILocation(line: 565, column: 8, scope: !9806)
!9808 = !DILocation(line: 565, column: 8, scope: !9802)
!9809 = !DILocalVariable(name: "key", arg: 1, scope: !9810, file: !6062, line: 84, type: !32)
!9810 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6062, file: !6062, line: 84, type: !6073, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9811)
!9811 = !{!9809}
!9812 = !DILocation(line: 0, scope: !9810, inlinedAt: !9813)
!9813 = distinct !DILocation(line: 568, column: 4, scope: !9802)
!9814 = !DILocation(line: 95, column: 2, scope: !9810, inlinedAt: !9813)
!9815 = !{i64 2001869}
!9816 = !DILocation(line: 569, column: 3, scope: !9802)
!9817 = distinct !{!9817, !9790, !9818}
!9818 = !DILocation(line: 570, column: 2, scope: !9782)
!9819 = !DILocation(line: 592, column: 33, scope: !9782)
!9820 = !DILocation(line: 592, column: 2, scope: !9782)
!9821 = !DILocation(line: 0, scope: !9810, inlinedAt: !9822)
!9822 = distinct !DILocation(line: 593, column: 2, scope: !9782)
!9823 = !DILocation(line: 95, column: 2, scope: !9810, inlinedAt: !9822)
!9824 = !DILocation(line: 594, column: 1, scope: !9782)
!9825 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1450, file: !1450, line: 596, type: !1376, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9826)
!9826 = !{!9827, !9828, !9829}
!9827 = !DILocalVariable(name: "dev", arg: 1, scope: !9825, file: !1450, line: 596, type: !1355)
!9828 = !DILocalVariable(name: "config", scope: !9825, file: !1450, line: 598, type: !9762)
!9829 = !DILocalVariable(name: "err", scope: !9825, file: !1450, line: 599, type: !110)
!9830 = !DILocation(line: 0, scope: !9825)
!9831 = !DILocation(line: 598, column: 48, scope: !9825)
!9832 = !DILocation(line: 606, column: 40, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9825, file: !1450, line: 606, column: 6)
!9834 = !DILocation(line: 606, column: 6, scope: !9833)
!9835 = !DILocation(line: 606, column: 6, scope: !9825)
!9836 = !DILocation(line: 610, column: 39, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9825, file: !1450, line: 610, column: 6)
!9838 = !DILocation(line: 610, column: 6, scope: !9837)
!9839 = !DILocation(line: 610, column: 6, scope: !9825)
!9840 = !DILocation(line: 614, column: 39, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9825, file: !1450, line: 614, column: 6)
!9842 = !DILocation(line: 614, column: 6, scope: !9841)
!9843 = !DILocation(line: 614, column: 6, scope: !9825)
!9844 = !DILocation(line: 619, column: 40, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9825, file: !1450, line: 619, column: 6)
!9846 = !DILocation(line: 619, column: 6, scope: !9845)
!9847 = !DILocation(line: 619, column: 6, scope: !9825)
!9848 = !DILocation(line: 623, column: 10, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9825, file: !1450, line: 623, column: 6)
!9850 = !DILocation(line: 623, column: 6, scope: !9825)
!9851 = !DILocation(line: 624, column: 34, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9849, file: !1450, line: 623, column: 24)
!9853 = !DILocation(line: 624, column: 3, scope: !9852)
!9854 = !DILocation(line: 625, column: 2, scope: !9852)
!9855 = !DILocation(line: 632, column: 10, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9825, file: !1450, line: 632, column: 6)
!9857 = !DILocation(line: 632, column: 6, scope: !9825)
!9858 = !DILocation(line: 633, column: 34, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9856, file: !1450, line: 632, column: 32)
!9860 = !DILocation(line: 633, column: 3, scope: !9859)
!9861 = !DILocation(line: 634, column: 2, scope: !9859)
!9862 = !DILocation(line: 636, column: 10, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9825, file: !1450, line: 636, column: 6)
!9864 = !DILocation(line: 636, column: 6, scope: !9825)
!9865 = !DILocation(line: 637, column: 33, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9863, file: !1450, line: 636, column: 31)
!9867 = !DILocation(line: 637, column: 3, scope: !9866)
!9868 = !DILocation(line: 638, column: 2, scope: !9866)
!9869 = !DILocation(line: 640, column: 10, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9825, file: !1450, line: 640, column: 6)
!9871 = !DILocation(line: 640, column: 6, scope: !9825)
!9872 = !DILocation(line: 641, column: 33, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9870, file: !1450, line: 640, column: 32)
!9874 = !DILocation(line: 641, column: 3, scope: !9873)
!9875 = !DILocation(line: 642, column: 2, scope: !9873)
!9876 = !DILocation(line: 646, column: 32, scope: !9825)
!9877 = !DILocation(line: 646, column: 2, scope: !9825)
!9878 = !DILocation(line: 648, column: 2, scope: !9825)
!9879 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1450, file: !1450, line: 419, type: !1380, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9880)
!9880 = !{!9881, !9882, !9883, !9884, !9886, !9887, !9888, !9889}
!9881 = !DILocalVariable(name: "dev", arg: 1, scope: !9879, file: !1450, line: 419, type: !1355)
!9882 = !DILocalVariable(name: "cfg", arg: 2, scope: !9879, file: !1450, line: 420, type: !1382)
!9883 = !DILocalVariable(name: "config", scope: !9879, file: !1450, line: 422, type: !9762)
!9884 = !DILocalVariable(name: "data", scope: !9879, file: !1450, line: 423, type: !9885)
!9885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!9886 = !DILocalVariable(name: "parity", scope: !9879, file: !1450, line: 424, type: !6660)
!9887 = !DILocalVariable(name: "stopbits", scope: !9879, file: !1450, line: 425, type: !6660)
!9888 = !DILocalVariable(name: "databits", scope: !9879, file: !1450, line: 426, type: !6660)
!9889 = !DILocalVariable(name: "flowctrl", scope: !9879, file: !1450, line: 428, type: !6660)
!9890 = !DILocation(line: 0, scope: !9879)
!9891 = !DILocation(line: 422, column: 48, scope: !9879)
!9892 = !DILocation(line: 423, column: 38, scope: !9879)
!9893 = !DILocation(line: 424, column: 56, scope: !9879)
!9894 = !DILocation(line: 424, column: 51, scope: !9879)
!9895 = !DILocation(line: 424, column: 26, scope: !9879)
!9896 = !DILocation(line: 425, column: 60, scope: !9879)
!9897 = !DILocation(line: 425, column: 55, scope: !9879)
!9898 = !DILocation(line: 425, column: 28, scope: !9879)
!9899 = !DILocation(line: 426, column: 60, scope: !9879)
!9900 = !DILocation(line: 426, column: 55, scope: !9879)
!9901 = !DILocation(line: 426, column: 28, scope: !9879)
!9902 = !DILocation(line: 428, column: 58, scope: !9879)
!9903 = !DILocation(line: 428, column: 53, scope: !9879)
!9904 = !DILocation(line: 428, column: 28, scope: !9879)
!9905 = !DILocation(line: 431, column: 44, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9879, file: !1450, line: 431, column: 6)
!9907 = !DILocation(line: 438, column: 22, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9879, file: !1450, line: 437, column: 6)
!9909 = !DILocation(line: 437, column: 6, scope: !9879)
!9910 = !DILocation(line: 448, column: 6, scope: !9879)
!9911 = !DILocation(line: 465, column: 47, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9879, file: !1450, line: 465, column: 6)
!9913 = !DILocation(line: 475, column: 21, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9879, file: !1450, line: 475, column: 6)
!9915 = !DILocation(line: 475, column: 6, scope: !9879)
!9916 = !DILocation(line: 476, column: 8, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9918, file: !1450, line: 476, column: 7)
!9918 = distinct !DILexicalBlock(scope: !9914, file: !1450, line: 475, column: 49)
!9919 = !DILocation(line: 477, column: 34, scope: !9917)
!9920 = !DILocation(line: 476, column: 7, scope: !9918)
!9921 = !DILocation(line: 482, column: 27, scope: !9879)
!9922 = !DILocation(line: 482, column: 2, scope: !9879)
!9923 = !DILocation(line: 484, column: 16, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9879, file: !1450, line: 484, column: 6)
!9925 = !DILocation(line: 484, column: 13, scope: !9924)
!9926 = !DILocation(line: 484, column: 6, scope: !9879)
!9927 = !DILocation(line: 485, column: 3, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9924, file: !1450, line: 484, column: 44)
!9929 = !DILocation(line: 486, column: 2, scope: !9928)
!9930 = !DILocation(line: 488, column: 18, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9879, file: !1450, line: 488, column: 6)
!9932 = !DILocation(line: 488, column: 15, scope: !9931)
!9933 = !DILocation(line: 488, column: 6, scope: !9879)
!9934 = !DILocation(line: 489, column: 3, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9931, file: !1450, line: 488, column: 48)
!9936 = !DILocation(line: 490, column: 2, scope: !9935)
!9937 = !DILocation(line: 492, column: 18, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9879, file: !1450, line: 492, column: 6)
!9939 = !DILocation(line: 492, column: 15, scope: !9938)
!9940 = !DILocation(line: 492, column: 6, scope: !9879)
!9941 = !DILocation(line: 493, column: 3, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9938, file: !1450, line: 492, column: 48)
!9943 = !DILocation(line: 494, column: 2, scope: !9942)
!9944 = !DILocation(line: 496, column: 18, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9879, file: !1450, line: 496, column: 6)
!9946 = !DILocation(line: 496, column: 15, scope: !9945)
!9947 = !DILocation(line: 496, column: 6, scope: !9879)
!9948 = !DILocation(line: 497, column: 3, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9945, file: !1450, line: 496, column: 46)
!9950 = !DILocation(line: 498, column: 2, scope: !9949)
!9951 = !DILocation(line: 500, column: 11, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9879, file: !1450, line: 500, column: 6)
!9953 = !DILocation(line: 500, column: 29, scope: !9952)
!9954 = !DILocation(line: 500, column: 20, scope: !9952)
!9955 = !DILocation(line: 500, column: 6, scope: !9879)
!9956 = !DILocation(line: 501, column: 3, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9952, file: !1450, line: 500, column: 40)
!9958 = !DILocation(line: 502, column: 26, scope: !9957)
!9959 = !DILocation(line: 502, column: 19, scope: !9957)
!9960 = !DILocation(line: 503, column: 2, scope: !9957)
!9961 = !DILocation(line: 505, column: 26, scope: !9879)
!9962 = !DILocation(line: 505, column: 2, scope: !9879)
!9963 = !DILocation(line: 506, column: 2, scope: !9879)
!9964 = !DILocation(line: 507, column: 1, scope: !9879)
!9965 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1450, file: !1450, line: 509, type: !1393, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9966)
!9966 = !{!9967, !9968, !9969}
!9967 = !DILocalVariable(name: "dev", arg: 1, scope: !9965, file: !1450, line: 509, type: !1355)
!9968 = !DILocalVariable(name: "cfg", arg: 2, scope: !9965, file: !1450, line: 510, type: !1395)
!9969 = !DILocalVariable(name: "data", scope: !9965, file: !1450, line: 512, type: !9885)
!9970 = !DILocation(line: 0, scope: !9965)
!9971 = !DILocation(line: 512, column: 38, scope: !9965)
!9972 = !DILocation(line: 514, column: 24, scope: !9965)
!9973 = !DILocation(line: 514, column: 7, scope: !9965)
!9974 = !DILocation(line: 514, column: 16, scope: !9965)
!9975 = !DILocation(line: 515, column: 41, scope: !9965)
!9976 = !{i32 0, i32 1537}
!9977 = !DILocation(line: 515, column: 16, scope: !9965)
!9978 = !DILocation(line: 515, column: 7, scope: !9965)
!9979 = !DILocation(line: 515, column: 14, scope: !9965)
!9980 = !DILocation(line: 517, column: 3, scope: !9965)
!9981 = !{i32 0, i32 12289}
!9982 = !DILocation(line: 516, column: 19, scope: !9965)
!9983 = !DILocation(line: 516, column: 7, scope: !9965)
!9984 = !DILocation(line: 516, column: 17, scope: !9965)
!9985 = !DILocation(line: 519, column: 3, scope: !9965)
!9986 = !DILocation(line: 519, column: 33, scope: !9965)
!9987 = !DILocation(line: 518, column: 19, scope: !9965)
!9988 = !DILocation(line: 518, column: 7, scope: !9965)
!9989 = !DILocation(line: 518, column: 17, scope: !9965)
!9990 = !DILocation(line: 521, column: 3, scope: !9965)
!9991 = !{i32 0, i32 769}
!9992 = !DILocation(line: 520, column: 19, scope: !9965)
!9993 = !DILocation(line: 520, column: 7, scope: !9965)
!9994 = !DILocation(line: 520, column: 17, scope: !9965)
!9995 = !DILocation(line: 522, column: 2, scope: !9965)
!9996 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1450, file: !1450, line: 205, type: !9997, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !9999)
!9997 = !DISubroutineType(types: !9998)
!9998 = !{!110, !1355}
!9999 = !{!10000, !10001}
!10000 = !DILocalVariable(name: "dev", arg: 1, scope: !9996, file: !1450, line: 205, type: !1355)
!10001 = !DILocalVariable(name: "config", scope: !9996, file: !1450, line: 207, type: !9762)
!10002 = !DILocation(line: 0, scope: !9996)
!10003 = !DILocation(line: 207, column: 48, scope: !9996)
!10004 = !DILocation(line: 209, column: 36, scope: !9996)
!10005 = !DILocation(line: 209, column: 9, scope: !9996)
!10006 = !DILocation(line: 209, column: 2, scope: !9996)
!10007 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1450, file: !1450, line: 270, type: !10008, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10010)
!10008 = !DISubroutineType(types: !10009)
!10009 = !{!1321, !110}
!10010 = !{!10011}
!10011 = !DILocalVariable(name: "parity", arg: 1, scope: !10007, file: !1450, line: 270, type: !110)
!10012 = !DILocation(line: 0, scope: !10007)
!10013 = !DILocation(line: 272, column: 2, scope: !10007)
!10014 = !DILocation(line: 281, column: 1, scope: !10007)
!10015 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1450, file: !1450, line: 220, type: !9997, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10016)
!10016 = !{!10017, !10018}
!10017 = !DILocalVariable(name: "dev", arg: 1, scope: !10015, file: !1450, line: 220, type: !1355)
!10018 = !DILocalVariable(name: "config", scope: !10015, file: !1450, line: 222, type: !9762)
!10019 = !DILocation(line: 0, scope: !10015)
!10020 = !DILocation(line: 222, column: 48, scope: !10015)
!10021 = !DILocation(line: 224, column: 44, scope: !10015)
!10022 = !DILocation(line: 224, column: 9, scope: !10015)
!10023 = !DILocation(line: 224, column: 2, scope: !10015)
!10024 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1450, file: !1450, line: 304, type: !10025, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10027)
!10025 = !DISubroutineType(types: !10026)
!10026 = !{!1335, !110}
!10027 = !{!10028}
!10028 = !DILocalVariable(name: "sb", arg: 1, scope: !10024, file: !1450, line: 304, type: !110)
!10029 = !DILocation(line: 0, scope: !10024)
!10030 = !DILocation(line: 306, column: 2, scope: !10024)
!10031 = !DILocation(line: 0, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10024, file: !1450, line: 306, column: 14)
!10033 = !DILocation(line: 323, column: 1, scope: !10024)
!10034 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1450, file: !1450, line: 235, type: !9997, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10035)
!10035 = !{!10036, !10037}
!10036 = !DILocalVariable(name: "dev", arg: 1, scope: !10034, file: !1450, line: 235, type: !1355)
!10037 = !DILocalVariable(name: "config", scope: !10034, file: !1450, line: 237, type: !9762)
!10038 = !DILocation(line: 0, scope: !10034)
!10039 = !DILocation(line: 237, column: 48, scope: !10034)
!10040 = !DILocation(line: 239, column: 39, scope: !10034)
!10041 = !DILocation(line: 239, column: 9, scope: !10034)
!10042 = !DILocation(line: 239, column: 2, scope: !10034)
!10043 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1450, file: !1450, line: 355, type: !10044, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10046)
!10044 = !DISubroutineType(types: !10045)
!10045 = !{!1328, !110, !110}
!10046 = !{!10047, !10048}
!10047 = !DILocalVariable(name: "db", arg: 1, scope: !10043, file: !1450, line: 355, type: !110)
!10048 = !DILocalVariable(name: "p", arg: 2, scope: !10043, file: !1450, line: 356, type: !110)
!10049 = !DILocation(line: 0, scope: !10043)
!10050 = !DILocation(line: 358, column: 2, scope: !10043)
!10051 = !DILocation(line: 384, column: 1, scope: !10043)
!10052 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1450, file: !1450, line: 250, type: !9997, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10053)
!10053 = !{!10054, !10055}
!10054 = !DILocalVariable(name: "dev", arg: 1, scope: !10052, file: !1450, line: 250, type: !1355)
!10055 = !DILocalVariable(name: "config", scope: !10052, file: !1450, line: 252, type: !9762)
!10056 = !DILocation(line: 0, scope: !10052)
!10057 = !DILocation(line: 252, column: 48, scope: !10052)
!10058 = !DILocation(line: 254, column: 40, scope: !10052)
!10059 = !DILocation(line: 254, column: 9, scope: !10052)
!10060 = !DILocation(line: 254, column: 2, scope: !10052)
!10061 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1450, file: !1450, line: 409, type: !10062, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10064)
!10062 = !DISubroutineType(types: !10063)
!10063 = !{!1341, !110}
!10064 = !{!10065}
!10065 = !DILocalVariable(name: "fc", arg: 1, scope: !10061, file: !1450, line: 409, type: !110)
!10066 = !DILocation(line: 0, scope: !10061)
!10067 = !DILocation(line: 411, column: 9, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10061, file: !1450, line: 411, column: 6)
!10069 = !DILocation(line: 416, column: 1, scope: !10061)
!10070 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10071, file: !10071, line: 967, type: !10072, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10074)
!10071 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10072 = !DISubroutineType(types: !10073)
!10073 = !{!110, !1396}
!10074 = !{!10075}
!10075 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10070, file: !10071, line: 967, type: !1396)
!10076 = !DILocation(line: 0, scope: !10070)
!10077 = !DILocation(line: 969, column: 21, scope: !10070)
!10078 = !DILocation(line: 969, column: 3, scope: !10070)
!10079 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10071, file: !10071, line: 601, type: !10072, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10080)
!10080 = !{!10081}
!10081 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10079, file: !10071, line: 601, type: !1396)
!10082 = !DILocation(line: 0, scope: !10079)
!10083 = !DILocation(line: 603, column: 21, scope: !10079)
!10084 = !DILocation(line: 603, column: 3, scope: !10079)
!10085 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10071, file: !10071, line: 820, type: !10072, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10086)
!10086 = !{!10087}
!10087 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10085, file: !10071, line: 820, type: !1396)
!10088 = !DILocation(line: 0, scope: !10085)
!10089 = !DILocation(line: 822, column: 21, scope: !10085)
!10090 = !DILocation(line: 822, column: 3, scope: !10085)
!10091 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10071, file: !10071, line: 547, type: !10072, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10092)
!10092 = !{!10093}
!10093 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10091, file: !10071, line: 547, type: !1396)
!10094 = !DILocation(line: 0, scope: !10091)
!10095 = !DILocation(line: 549, column: 21, scope: !10091)
!10096 = !DILocation(line: 549, column: 3, scope: !10091)
!10097 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1450, file: !1450, line: 257, type: !10098, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10100)
!10098 = !DISubroutineType(types: !10099)
!10099 = !{!110, !1321}
!10100 = !{!10101}
!10101 = !DILocalVariable(name: "parity", arg: 1, scope: !10097, file: !1450, line: 257, type: !1321)
!10102 = !DILocation(line: 0, scope: !10097)
!10103 = !DILocation(line: 259, column: 2, scope: !10097)
!10104 = !DILocation(line: 268, column: 1, scope: !10097)
!10105 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1450, file: !1450, line: 283, type: !10106, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10108)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{!110, !1335}
!10108 = !{!10109}
!10109 = !DILocalVariable(name: "sb", arg: 1, scope: !10105, file: !1450, line: 283, type: !1335)
!10110 = !DILocation(line: 0, scope: !10105)
!10111 = !DILocation(line: 285, column: 2, scope: !10105)
!10112 = !DILocation(line: 0, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10105, file: !1450, line: 285, column: 14)
!10114 = !DILocation(line: 302, column: 1, scope: !10105)
!10115 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1450, file: !1450, line: 325, type: !10116, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10118)
!10116 = !DISubroutineType(types: !10117)
!10117 = !{!110, !1328, !1321}
!10118 = !{!10119, !10120}
!10119 = !DILocalVariable(name: "db", arg: 1, scope: !10115, file: !1450, line: 325, type: !1328)
!10120 = !DILocalVariable(name: "p", arg: 2, scope: !10115, file: !1450, line: 326, type: !1321)
!10121 = !DILocation(line: 0, scope: !10115)
!10122 = !DILocation(line: 328, column: 2, scope: !10115)
!10123 = !DILocation(line: 353, column: 1, scope: !10115)
!10124 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1450, file: !1450, line: 393, type: !10125, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10127)
!10125 = !DISubroutineType(types: !10126)
!10126 = !{!110, !1341}
!10127 = !{!10128}
!10128 = !DILocalVariable(name: "fc", arg: 1, scope: !10124, file: !1450, line: 393, type: !1341)
!10129 = !DILocation(line: 0, scope: !10124)
!10130 = !DILocation(line: 395, column: 9, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10124, file: !1450, line: 395, column: 6)
!10132 = !DILocation(line: 400, column: 1, scope: !10124)
!10133 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10071, file: !10071, line: 424, type: !10134, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10136)
!10134 = !DISubroutineType(types: !10135)
!10135 = !{null, !1396}
!10136 = !{!10137}
!10137 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10133, file: !10071, line: 424, type: !1396)
!10138 = !DILocation(line: 0, scope: !10133)
!10139 = !DILocation(line: 426, column: 3, scope: !10133)
!10140 = !DILocation(line: 427, column: 1, scope: !10133)
!10141 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1450, file: !1450, line: 197, type: !10142, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10144)
!10142 = !DISubroutineType(types: !10143)
!10143 = !{null, !1355, !110}
!10144 = !{!10145, !10146, !10147}
!10145 = !DILocalVariable(name: "dev", arg: 1, scope: !10141, file: !1450, line: 197, type: !1355)
!10146 = !DILocalVariable(name: "parity", arg: 2, scope: !10141, file: !1450, line: 198, type: !110)
!10147 = !DILocalVariable(name: "config", scope: !10141, file: !1450, line: 200, type: !9762)
!10148 = !DILocation(line: 0, scope: !10141)
!10149 = !DILocation(line: 200, column: 48, scope: !10141)
!10150 = !DILocation(line: 202, column: 29, scope: !10141)
!10151 = !DILocation(line: 202, column: 2, scope: !10141)
!10152 = !DILocation(line: 203, column: 1, scope: !10141)
!10153 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1450, file: !1450, line: 212, type: !10142, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10154)
!10154 = !{!10155, !10156, !10157}
!10155 = !DILocalVariable(name: "dev", arg: 1, scope: !10153, file: !1450, line: 212, type: !1355)
!10156 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10153, file: !1450, line: 213, type: !110)
!10157 = !DILocalVariable(name: "config", scope: !10153, file: !1450, line: 215, type: !9762)
!10158 = !DILocation(line: 0, scope: !10153)
!10159 = !DILocation(line: 215, column: 48, scope: !10153)
!10160 = !DILocation(line: 217, column: 37, scope: !10153)
!10161 = !DILocation(line: 217, column: 2, scope: !10153)
!10162 = !DILocation(line: 218, column: 1, scope: !10153)
!10163 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1450, file: !1450, line: 227, type: !10142, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10164)
!10164 = !{!10165, !10166, !10167}
!10165 = !DILocalVariable(name: "dev", arg: 1, scope: !10163, file: !1450, line: 227, type: !1355)
!10166 = !DILocalVariable(name: "databits", arg: 2, scope: !10163, file: !1450, line: 228, type: !110)
!10167 = !DILocalVariable(name: "config", scope: !10163, file: !1450, line: 230, type: !9762)
!10168 = !DILocation(line: 0, scope: !10163)
!10169 = !DILocation(line: 230, column: 48, scope: !10163)
!10170 = !DILocation(line: 232, column: 32, scope: !10163)
!10171 = !DILocation(line: 232, column: 2, scope: !10163)
!10172 = !DILocation(line: 233, column: 1, scope: !10163)
!10173 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1450, file: !1450, line: 242, type: !10142, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10174)
!10174 = !{!10175, !10176, !10177}
!10175 = !DILocalVariable(name: "dev", arg: 1, scope: !10173, file: !1450, line: 242, type: !1355)
!10176 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10173, file: !1450, line: 243, type: !110)
!10177 = !DILocalVariable(name: "config", scope: !10173, file: !1450, line: 245, type: !9762)
!10178 = !DILocation(line: 0, scope: !10173)
!10179 = !DILocation(line: 245, column: 48, scope: !10173)
!10180 = !DILocation(line: 247, column: 33, scope: !10173)
!10181 = !DILocation(line: 247, column: 2, scope: !10173)
!10182 = !DILocation(line: 248, column: 1, scope: !10173)
!10183 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1450, file: !1450, line: 107, type: !10142, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10184)
!10184 = !{!10185, !10186, !10187, !10188, !10189}
!10185 = !DILocalVariable(name: "dev", arg: 1, scope: !10183, file: !1450, line: 107, type: !1355)
!10186 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10183, file: !1450, line: 107, type: !110)
!10187 = !DILocalVariable(name: "config", scope: !10183, file: !1450, line: 109, type: !9762)
!10188 = !DILocalVariable(name: "data", scope: !10183, file: !1450, line: 110, type: !9885)
!10189 = !DILocalVariable(name: "clock_rate", scope: !10183, file: !1450, line: 112, type: !110)
!10190 = !DILocation(line: 0, scope: !10183)
!10191 = !DILocation(line: 109, column: 48, scope: !10183)
!10192 = !DILocation(line: 110, column: 38, scope: !10183)
!10193 = !DILocation(line: 112, column: 2, scope: !10183)
!10194 = !DILocation(line: 123, column: 36, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10196, file: !1450, line: 123, column: 7)
!10196 = distinct !DILexicalBlock(scope: !10197, file: !1450, line: 122, column: 9)
!10197 = distinct !DILexicalBlock(scope: !10183, file: !1450, line: 115, column: 6)
!10198 = !DILocation(line: 124, column: 42, scope: !10195)
!10199 = !DILocation(line: 123, column: 7, scope: !10195)
!10200 = !DILocation(line: 125, column: 22, scope: !10195)
!10201 = !DILocation(line: 123, column: 7, scope: !10196)
!10202 = !DILocation(line: 126, column: 4, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10204, file: !1450, line: 126, column: 4)
!10204 = distinct !DILexicalBlock(scope: !10205, file: !1450, line: 126, column: 4)
!10205 = distinct !DILexicalBlock(scope: !10206, file: !1450, line: 126, column: 4)
!10206 = distinct !DILexicalBlock(scope: !10207, file: !1450, line: 126, column: 4)
!10207 = distinct !DILexicalBlock(scope: !10195, file: !1450, line: 125, column: 27)
!10208 = !DILocation(line: 127, column: 4, scope: !10207)
!10209 = !DILocation(line: 176, column: 36, scope: !10183)
!10210 = !DILocation(line: 176, column: 3, scope: !10183)
!10211 = !DILocation(line: 179, column: 32, scope: !10183)
!10212 = !DILocation(line: 180, column: 10, scope: !10183)
!10213 = !DILocation(line: 179, column: 3, scope: !10183)
!10214 = !DILocation(line: 189, column: 3, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10216, file: !1450, line: 189, column: 3)
!10216 = distinct !DILexicalBlock(scope: !10183, file: !1450, line: 189, column: 3)
!10217 = !DILocation(line: 189, column: 3, scope: !10216)
!10218 = !DILocation(line: 189, column: 3, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10215, file: !1450, line: 189, column: 3)
!10220 = !DILocation(line: 195, column: 1, scope: !10183)
!10221 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10071, file: !10071, line: 410, type: !10134, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10222)
!10222 = !{!10223}
!10223 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10221, file: !10071, line: 410, type: !1396)
!10224 = !DILocation(line: 0, scope: !10221)
!10225 = !DILocation(line: 412, column: 3, scope: !10221)
!10226 = !DILocation(line: 413, column: 1, scope: !10221)
!10227 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !813, file: !813, line: 216, type: !1429, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10228)
!10228 = !{!10229, !10230, !10231, !10232}
!10229 = !DILocalVariable(name: "dev", arg: 1, scope: !10227, file: !813, line: 216, type: !1355)
!10230 = !DILocalVariable(name: "sys", arg: 2, scope: !10227, file: !813, line: 217, type: !908)
!10231 = !DILocalVariable(name: "rate", arg: 3, scope: !10227, file: !813, line: 218, type: !864)
!10232 = !DILocalVariable(name: "api", scope: !10227, file: !813, line: 220, type: !1407)
!10233 = !DILocation(line: 0, scope: !10227)
!10234 = !DILocation(line: 221, column: 49, scope: !10227)
!10235 = !DILocation(line: 223, column: 11, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10227, file: !813, line: 223, column: 6)
!10237 = !DILocation(line: 223, column: 20, scope: !10236)
!10238 = !DILocation(line: 223, column: 6, scope: !10227)
!10239 = !DILocation(line: 227, column: 9, scope: !10227)
!10240 = !DILocation(line: 227, column: 2, scope: !10227)
!10241 = !DILocation(line: 228, column: 1, scope: !10227)
!10242 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6140, file: !6140, line: 175, type: !6141, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10243)
!10243 = !{!10244}
!10244 = !DILocalVariable(name: "level", arg: 1, scope: !10242, file: !6140, line: 175, type: !109)
!10245 = !DILocation(line: 0, scope: !10242)
!10246 = !DILocation(line: 177, column: 2, scope: !10242)
!10247 = !DILocation(line: 189, column: 1, scope: !10242)
!10248 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10071, file: !10071, line: 615, type: !10249, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10251)
!10249 = !DISubroutineType(types: !10250)
!10250 = !{null, !1396, !110}
!10251 = !{!10252, !10253}
!10252 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10248, file: !10071, line: 615, type: !1396)
!10253 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10248, file: !10071, line: 615, type: !110)
!10254 = !DILocation(line: 0, scope: !10248)
!10255 = !DILocation(line: 617, column: 3, scope: !10248)
!10256 = !DILocation(line: 618, column: 1, scope: !10248)
!10257 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10071, file: !10071, line: 1020, type: !10258, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10260)
!10258 = !DISubroutineType(types: !10259)
!10259 = !{null, !1396, !110, !110, !110}
!10260 = !{!10261, !10262, !10263, !10264}
!10261 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10257, file: !10071, line: 1020, type: !1396)
!10262 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10257, file: !10071, line: 1020, type: !110)
!10263 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10257, file: !10071, line: 1020, type: !110)
!10264 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10257, file: !10071, line: 1021, type: !110)
!10265 = !DILocation(line: 0, scope: !10257)
!10266 = !DILocation(line: 1029, column: 30, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10268, file: !10071, line: 1028, column: 3)
!10268 = distinct !DILexicalBlock(scope: !10257, file: !10071, line: 1023, column: 7)
!10269 = !DILocation(line: 1029, column: 19, scope: !10267)
!10270 = !DILocation(line: 1029, column: 13, scope: !10267)
!10271 = !DILocation(line: 1029, column: 17, scope: !10267)
!10272 = !DILocation(line: 1031, column: 1, scope: !10257)
!10273 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10071, file: !10071, line: 949, type: !10249, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10274)
!10274 = !{!10275, !10276}
!10275 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10273, file: !10071, line: 949, type: !1396)
!10276 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10273, file: !10071, line: 949, type: !110)
!10277 = !DILocation(line: 0, scope: !10273)
!10278 = !DILocation(line: 951, column: 3, scope: !10273)
!10279 = !DILocation(line: 952, column: 1, scope: !10273)
!10280 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10071, file: !10071, line: 588, type: !10249, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10281)
!10281 = !{!10282, !10283}
!10282 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10280, file: !10071, line: 588, type: !1396)
!10283 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10280, file: !10071, line: 588, type: !110)
!10284 = !DILocation(line: 0, scope: !10280)
!10285 = !DILocation(line: 590, column: 3, scope: !10280)
!10286 = !DILocation(line: 591, column: 1, scope: !10280)
!10287 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10071, file: !10071, line: 805, type: !10249, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10288)
!10288 = !{!10289, !10290}
!10289 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10287, file: !10071, line: 805, type: !1396)
!10290 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10287, file: !10071, line: 805, type: !110)
!10291 = !DILocation(line: 0, scope: !10287)
!10292 = !DILocation(line: 807, column: 3, scope: !10287)
!10293 = !DILocation(line: 808, column: 1, scope: !10287)
!10294 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10071, file: !10071, line: 532, type: !10249, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10295)
!10295 = !{!10296, !10297}
!10296 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10294, file: !10071, line: 532, type: !1396)
!10297 = !DILocalVariable(name: "Parity", arg: 2, scope: !10294, file: !10071, line: 532, type: !110)
!10298 = !DILocation(line: 0, scope: !10294)
!10299 = !DILocation(line: 534, column: 3, scope: !10294)
!10300 = !DILocation(line: 535, column: 1, scope: !10294)
!10301 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10071, file: !10071, line: 1770, type: !10072, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10302)
!10302 = !{!10303}
!10303 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10301, file: !10071, line: 1770, type: !1396)
!10304 = !DILocation(line: 0, scope: !10301)
!10305 = !DILocation(line: 1772, column: 11, scope: !10301)
!10306 = !DILocation(line: 1772, column: 46, scope: !10301)
!10307 = !DILocation(line: 1772, column: 3, scope: !10301)
!10308 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10071, file: !10071, line: 1737, type: !10072, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10309)
!10309 = !{!10310}
!10310 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10308, file: !10071, line: 1737, type: !1396)
!10311 = !DILocation(line: 0, scope: !10308)
!10312 = !DILocation(line: 1739, column: 11, scope: !10308)
!10313 = !DILocation(line: 1739, column: 3, scope: !10308)
!10314 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10071, file: !10071, line: 1748, type: !10072, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10315)
!10315 = !{!10316}
!10316 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10314, file: !10071, line: 1748, type: !1396)
!10317 = !DILocation(line: 0, scope: !10314)
!10318 = !DILocation(line: 1750, column: 11, scope: !10314)
!10319 = !DILocation(line: 1750, column: 45, scope: !10314)
!10320 = !DILocation(line: 1750, column: 3, scope: !10314)
!10321 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10071, file: !10071, line: 1827, type: !10072, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10322)
!10322 = !{!10323}
!10323 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10321, file: !10071, line: 1827, type: !1396)
!10324 = !DILocation(line: 0, scope: !10321)
!10325 = !DILocation(line: 1829, column: 11, scope: !10321)
!10326 = !DILocation(line: 1829, column: 46, scope: !10321)
!10327 = !DILocation(line: 1829, column: 3, scope: !10321)
!10328 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10071, file: !10071, line: 1992, type: !10134, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10329)
!10329 = !{!10330}
!10330 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10328, file: !10071, line: 1992, type: !1396)
!10331 = !DILocation(line: 0, scope: !10328)
!10332 = !DILocation(line: 1994, column: 3, scope: !10328)
!10333 = !DILocation(line: 1995, column: 1, scope: !10328)
!10334 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10071, file: !10071, line: 1934, type: !10134, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10335)
!10335 = !{!10336, !10337}
!10336 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10334, file: !10071, line: 1934, type: !1396)
!10337 = !DILocalVariable(name: "tmpreg", scope: !10334, file: !10071, line: 1936, type: !316)
!10338 = !DILocation(line: 0, scope: !10334)
!10339 = !DILocation(line: 1936, column: 3, scope: !10334)
!10340 = !DILocation(line: 1936, column: 17, scope: !10334)
!10341 = !DILocation(line: 1937, column: 20, scope: !10334)
!10342 = !DILocation(line: 1937, column: 10, scope: !10334)
!10343 = !DILocation(line: 1938, column: 10, scope: !10334)
!10344 = !DILocation(line: 1939, column: 20, scope: !10334)
!10345 = !DILocation(line: 1939, column: 10, scope: !10334)
!10346 = !DILocation(line: 1940, column: 10, scope: !10334)
!10347 = !DILocation(line: 1941, column: 1, scope: !10334)
!10348 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10071, file: !10071, line: 1877, type: !10134, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10349)
!10349 = !{!10350, !10351}
!10350 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10348, file: !10071, line: 1877, type: !1396)
!10351 = !DILocalVariable(name: "tmpreg", scope: !10348, file: !10071, line: 1879, type: !316)
!10352 = !DILocation(line: 0, scope: !10348)
!10353 = !DILocation(line: 1879, column: 3, scope: !10348)
!10354 = !DILocation(line: 1879, column: 17, scope: !10348)
!10355 = !DILocation(line: 1880, column: 20, scope: !10348)
!10356 = !DILocation(line: 1880, column: 10, scope: !10348)
!10357 = !DILocation(line: 1881, column: 10, scope: !10348)
!10358 = !DILocation(line: 1882, column: 20, scope: !10348)
!10359 = !DILocation(line: 1882, column: 10, scope: !10348)
!10360 = !DILocation(line: 1883, column: 10, scope: !10348)
!10361 = !DILocation(line: 1884, column: 1, scope: !10348)
!10362 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10071, file: !10071, line: 1896, type: !10134, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10363)
!10363 = !{!10364, !10365}
!10364 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10362, file: !10071, line: 1896, type: !1396)
!10365 = !DILocalVariable(name: "tmpreg", scope: !10362, file: !10071, line: 1898, type: !316)
!10366 = !DILocation(line: 0, scope: !10362)
!10367 = !DILocation(line: 1898, column: 3, scope: !10362)
!10368 = !DILocation(line: 1898, column: 17, scope: !10362)
!10369 = !DILocation(line: 1899, column: 20, scope: !10362)
!10370 = !DILocation(line: 1899, column: 10, scope: !10362)
!10371 = !DILocation(line: 1900, column: 10, scope: !10362)
!10372 = !DILocation(line: 1901, column: 20, scope: !10362)
!10373 = !DILocation(line: 1901, column: 10, scope: !10362)
!10374 = !DILocation(line: 1902, column: 10, scope: !10362)
!10375 = !DILocation(line: 1903, column: 1, scope: !10362)
!10376 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10071, file: !10071, line: 1915, type: !10134, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10377)
!10377 = !{!10378, !10379}
!10378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10376, file: !10071, line: 1915, type: !1396)
!10379 = !DILocalVariable(name: "tmpreg", scope: !10376, file: !10071, line: 1917, type: !316)
!10380 = !DILocation(line: 0, scope: !10376)
!10381 = !DILocation(line: 1917, column: 3, scope: !10376)
!10382 = !DILocation(line: 1917, column: 17, scope: !10376)
!10383 = !DILocation(line: 1918, column: 20, scope: !10376)
!10384 = !DILocation(line: 1918, column: 10, scope: !10376)
!10385 = !DILocation(line: 1919, column: 10, scope: !10376)
!10386 = !DILocation(line: 1920, column: 20, scope: !10376)
!10387 = !DILocation(line: 1920, column: 10, scope: !10376)
!10388 = !DILocation(line: 1921, column: 10, scope: !10376)
!10389 = !DILocation(line: 1922, column: 1, scope: !10376)
!10390 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10071, file: !10071, line: 1814, type: !10072, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10391)
!10391 = !{!10392}
!10392 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10390, file: !10071, line: 1814, type: !1396)
!10393 = !DILocation(line: 0, scope: !10390)
!10394 = !DILocation(line: 1816, column: 11, scope: !10390)
!10395 = !DILocation(line: 1816, column: 46, scope: !10390)
!10396 = !DILocation(line: 1816, column: 3, scope: !10390)
!10397 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10071, file: !10071, line: 2426, type: !10398, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10400)
!10398 = !DISubroutineType(types: !10399)
!10399 = !{null, !1396, !180}
!10400 = !{!10401, !10402}
!10401 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10397, file: !10071, line: 2426, type: !1396)
!10402 = !DILocalVariable(name: "Value", arg: 2, scope: !10397, file: !10071, line: 2426, type: !180)
!10403 = !DILocation(line: 0, scope: !10397)
!10404 = !DILocation(line: 2428, column: 16, scope: !10397)
!10405 = !DILocation(line: 2428, column: 11, scope: !10397)
!10406 = !DILocation(line: 2428, column: 14, scope: !10397)
!10407 = !DILocation(line: 2429, column: 1, scope: !10397)
!10408 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10071, file: !10071, line: 1792, type: !10072, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10409)
!10409 = !{!10410}
!10410 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10408, file: !10071, line: 1792, type: !1396)
!10411 = !DILocation(line: 0, scope: !10408)
!10412 = !DILocation(line: 1794, column: 11, scope: !10408)
!10413 = !DILocation(line: 1794, column: 47, scope: !10408)
!10414 = !DILocation(line: 1794, column: 3, scope: !10408)
!10415 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10071, file: !10071, line: 2403, type: !10416, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10418)
!10416 = !DISubroutineType(types: !10417)
!10417 = !{!180, !1396}
!10418 = !{!10419}
!10419 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10415, file: !10071, line: 2403, type: !1396)
!10420 = !DILocation(line: 0, scope: !10415)
!10421 = !DILocation(line: 2405, column: 20, scope: !10415)
!10422 = !DILocation(line: 2405, column: 10, scope: !10415)
!10423 = !DILocation(line: 2405, column: 3, scope: !10415)
!10424 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1450, file: !1450, line: 1583, type: !1376, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10425)
!10425 = !{!10426, !10427, !10428, !10429, !10430, !10431}
!10426 = !DILocalVariable(name: "dev", arg: 1, scope: !10424, file: !1450, line: 1583, type: !1355)
!10427 = !DILocalVariable(name: "config", scope: !10424, file: !1450, line: 1585, type: !9762)
!10428 = !DILocalVariable(name: "data", scope: !10424, file: !1450, line: 1586, type: !9885)
!10429 = !DILocalVariable(name: "ll_parity", scope: !10424, file: !1450, line: 1587, type: !110)
!10430 = !DILocalVariable(name: "ll_datawidth", scope: !10424, file: !1450, line: 1588, type: !110)
!10431 = !DILocalVariable(name: "err", scope: !10424, file: !1450, line: 1589, type: !109)
!10432 = !DILocation(line: 0, scope: !10424)
!10433 = !DILocation(line: 1585, column: 48, scope: !10424)
!10434 = !DILocation(line: 1586, column: 38, scope: !10424)
!10435 = !DILocation(line: 1591, column: 2, scope: !10424)
!10436 = !DILocation(line: 1593, column: 29, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10424, file: !1450, line: 1593, column: 6)
!10438 = !DILocation(line: 1593, column: 7, scope: !10437)
!10439 = !DILocation(line: 1593, column: 6, scope: !10424)
!10440 = !DILocation(line: 1594, column: 3, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10442, file: !1450, line: 1594, column: 3)
!10442 = distinct !DILexicalBlock(scope: !10443, file: !1450, line: 1594, column: 3)
!10443 = distinct !DILexicalBlock(scope: !10444, file: !1450, line: 1594, column: 3)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !1450, line: 1594, column: 3)
!10445 = distinct !DILexicalBlock(scope: !10437, file: !1450, line: 1593, column: 37)
!10446 = !DILocation(line: 1595, column: 3, scope: !10445)
!10447 = !DILocation(line: 1599, column: 31, scope: !10424)
!10448 = !DILocation(line: 1599, column: 71, scope: !10424)
!10449 = !DILocation(line: 1599, column: 8, scope: !10424)
!10450 = !DILocation(line: 1600, column: 10, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10424, file: !1450, line: 1600, column: 6)
!10452 = !DILocation(line: 1600, column: 6, scope: !10424)
!10453 = !DILocation(line: 1601, column: 3, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10455, file: !1450, line: 1601, column: 3)
!10455 = distinct !DILexicalBlock(scope: !10456, file: !1450, line: 1601, column: 3)
!10456 = distinct !DILexicalBlock(scope: !10457, file: !1450, line: 1601, column: 3)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !1450, line: 1601, column: 3)
!10458 = distinct !DILexicalBlock(scope: !10451, file: !1450, line: 1600, column: 16)
!10459 = !DILocation(line: 1602, column: 3, scope: !10458)
!10460 = !DILocation(line: 1616, column: 36, scope: !10424)
!10461 = !DILocation(line: 1616, column: 8, scope: !10424)
!10462 = !DILocation(line: 1617, column: 10, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10424, file: !1450, line: 1617, column: 6)
!10464 = !DILocation(line: 1617, column: 6, scope: !10424)
!10465 = !DILocation(line: 1621, column: 27, scope: !10424)
!10466 = !DILocation(line: 1621, column: 2, scope: !10424)
!10467 = !DILocation(line: 1624, column: 40, scope: !10424)
!10468 = !DILocation(line: 1624, column: 2, scope: !10424)
!10469 = !DILocation(line: 1630, column: 14, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10424, file: !1450, line: 1630, column: 6)
!10471 = !DILocation(line: 1630, column: 6, scope: !10424)
!10472 = !DILocation(line: 1640, column: 4, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10474, file: !1450, line: 1640, column: 4)
!10474 = distinct !DILexicalBlock(scope: !10475, file: !1450, line: 1640, column: 4)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !1450, line: 1640, column: 4)
!10476 = distinct !DILexicalBlock(scope: !10477, file: !1450, line: 1640, column: 4)
!10477 = distinct !DILexicalBlock(scope: !10478, file: !1450, line: 1639, column: 28)
!10478 = distinct !DILexicalBlock(scope: !10479, file: !1450, line: 1639, column: 7)
!10479 = distinct !DILexicalBlock(scope: !10480, file: !1450, line: 1638, column: 9)
!10480 = distinct !DILexicalBlock(scope: !10470, file: !1450, line: 1634, column: 13)
!10481 = !DILocation(line: 0, scope: !10470)
!10482 = !DILocation(line: 1649, column: 35, scope: !10424)
!10483 = !DILocation(line: 1649, column: 2, scope: !10424)
!10484 = !DILocation(line: 1654, column: 14, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10424, file: !1450, line: 1654, column: 6)
!10486 = !DILocation(line: 1654, column: 6, scope: !10424)
!10487 = !DILocation(line: 1655, column: 3, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10485, file: !1450, line: 1654, column: 31)
!10489 = !DILocation(line: 1656, column: 2, scope: !10488)
!10490 = !DILocation(line: 1659, column: 37, scope: !10424)
!10491 = !DILocation(line: 1659, column: 2, scope: !10424)
!10492 = !DILocation(line: 1662, column: 14, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10424, file: !1450, line: 1662, column: 6)
!10494 = !DILocation(line: 1662, column: 6, scope: !10424)
!10495 = !DILocation(line: 1663, column: 37, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10493, file: !1450, line: 1662, column: 27)
!10497 = !DILocation(line: 1663, column: 3, scope: !10496)
!10498 = !DILocation(line: 1664, column: 2, scope: !10496)
!10499 = !DILocation(line: 1684, column: 26, scope: !10424)
!10500 = !DILocation(line: 1684, column: 2, scope: !10424)
!10501 = !DILocation(line: 1722, column: 2, scope: !10424)
!10502 = !DILocation(line: 1724, column: 1, scope: !10424)
!10503 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1450, file: !1450, line: 651, type: !10504, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10506)
!10504 = !DISubroutineType(types: !10505)
!10505 = !{null, !1355}
!10506 = !{!10507, !10508, !10509}
!10507 = !DILocalVariable(name: "dev", arg: 1, scope: !10503, file: !1450, line: 651, type: !1355)
!10508 = !DILocalVariable(name: "data", scope: !10503, file: !1450, line: 653, type: !9885)
!10509 = !DILocalVariable(name: "clk", scope: !10503, file: !1450, line: 654, type: !10510)
!10510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1355)
!10511 = !DILocation(line: 0, scope: !10503)
!10512 = !DILocation(line: 653, column: 38, scope: !10503)
!10513 = !DILocation(line: 656, column: 8, scope: !10503)
!10514 = !DILocation(line: 656, column: 14, scope: !10503)
!10515 = !DILocation(line: 657, column: 1, scope: !10503)
!10516 = distinct !DISubprogram(name: "device_is_ready", scope: !8881, file: !8881, line: 47, type: !10517, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10519)
!10517 = !DISubroutineType(types: !10518)
!10518 = !{!347, !1355}
!10519 = !{!10520}
!10520 = !DILocalVariable(name: "dev", arg: 1, scope: !10516, file: !8881, line: 47, type: !1355)
!10521 = !DILocation(line: 0, scope: !10516)
!10522 = !DILocation(line: 55, column: 2, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10516, file: !8881, line: 55, column: 2)
!10524 = !{i64 2154359846}
!10525 = !DILocation(line: 56, column: 9, scope: !10516)
!10526 = !DILocation(line: 56, column: 2, scope: !10516)
!10527 = distinct !DISubprogram(name: "clock_control_on", scope: !813, file: !813, line: 123, type: !1414, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10528)
!10528 = !{!10529, !10530, !10531}
!10529 = !DILocalVariable(name: "dev", arg: 1, scope: !10527, file: !813, line: 123, type: !1355)
!10530 = !DILocalVariable(name: "sys", arg: 2, scope: !10527, file: !813, line: 124, type: !908)
!10531 = !DILocalVariable(name: "api", scope: !10527, file: !813, line: 126, type: !1407)
!10532 = !DILocation(line: 0, scope: !10527)
!10533 = !DILocation(line: 127, column: 49, scope: !10527)
!10534 = !DILocation(line: 129, column: 14, scope: !10527)
!10535 = !DILocation(line: 129, column: 9, scope: !10527)
!10536 = !DILocation(line: 129, column: 2, scope: !10527)
!10537 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1490, file: !1490, line: 342, type: !10538, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10540)
!10538 = !DISubroutineType(types: !10539)
!10539 = !{!109, !1487, !180}
!10540 = !{!10541, !10542, !10543, !10544}
!10541 = !DILocalVariable(name: "config", arg: 1, scope: !10537, file: !1490, line: 342, type: !1487)
!10542 = !DILocalVariable(name: "id", arg: 2, scope: !10537, file: !1490, line: 343, type: !180)
!10543 = !DILocalVariable(name: "ret", scope: !10537, file: !1490, line: 345, type: !109)
!10544 = !DILocalVariable(name: "state", scope: !10537, file: !1490, line: 346, type: !1493)
!10545 = !DILocation(line: 0, scope: !10537)
!10546 = !DILocation(line: 346, column: 2, scope: !10537)
!10547 = !DILocation(line: 348, column: 8, scope: !10537)
!10548 = !DILocation(line: 349, column: 10, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10537, file: !1490, line: 349, column: 6)
!10550 = !DILocation(line: 349, column: 6, scope: !10537)
!10551 = !DILocation(line: 353, column: 44, scope: !10537)
!10552 = !DILocation(line: 353, column: 9, scope: !10537)
!10553 = !DILocation(line: 353, column: 2, scope: !10537)
!10554 = !DILocation(line: 354, column: 1, scope: !10537)
!10555 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10071, file: !10071, line: 497, type: !10249, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10556)
!10556 = !{!10557, !10558, !10559}
!10557 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10555, file: !10071, line: 497, type: !1396)
!10558 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10555, file: !10071, line: 497, type: !110)
!10559 = !DILocalVariable(name: "val", scope: !10560, file: !10071, line: 499, type: !110)
!10560 = distinct !DILexicalBlock(scope: !10555, file: !10071, line: 499, column: 3)
!10561 = !DILocation(line: 0, scope: !10555)
!10562 = !DILocation(line: 499, column: 3, scope: !10560)
!10563 = !DILocalVariable(name: "addr", arg: 1, scope: !10564, file: !6383, line: 476, type: !1446)
!10564 = distinct !DISubprogram(name: "__LDREXW", scope: !6383, file: !6383, line: 476, type: !10565, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10567)
!10565 = !DISubroutineType(types: !10566)
!10566 = !{!110, !1446}
!10567 = !{!10563, !10568}
!10568 = !DILocalVariable(name: "result", scope: !10564, file: !6383, line: 478, type: !110)
!10569 = !DILocation(line: 0, scope: !10564, inlinedAt: !10570)
!10570 = distinct !DILocation(line: 499, column: 3, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10560, file: !10071, line: 499, column: 3)
!10572 = !DILocation(line: 480, column: 4, scope: !10564, inlinedAt: !10570)
!10573 = !{i64 2863114}
!10574 = !DILocation(line: 499, column: 3, scope: !10571)
!10575 = !DILocation(line: 0, scope: !10560)
!10576 = !DILocalVariable(name: "value", arg: 1, scope: !10577, file: !6383, line: 527, type: !110)
!10577 = distinct !DISubprogram(name: "__STREXW", scope: !6383, file: !6383, line: 527, type: !10578, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10580)
!10578 = !DISubroutineType(types: !10579)
!10579 = !{!110, !110, !1446}
!10580 = !{!10576, !10581, !10582}
!10581 = !DILocalVariable(name: "addr", arg: 2, scope: !10577, file: !6383, line: 527, type: !1446)
!10582 = !DILocalVariable(name: "result", scope: !10577, file: !6383, line: 529, type: !110)
!10583 = !DILocation(line: 0, scope: !10577, inlinedAt: !10584)
!10584 = distinct !DILocation(line: 499, column: 3, scope: !10560)
!10585 = !DILocation(line: 531, column: 4, scope: !10577, inlinedAt: !10584)
!10586 = !{i64 2864550}
!10587 = distinct !{!10587, !10562, !10562}
!10588 = !DILocation(line: 500, column: 1, scope: !10555)
!10589 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10071, file: !10071, line: 850, type: !10258, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10590)
!10590 = !{!10591, !10592, !10593, !10594}
!10591 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10589, file: !10071, line: 850, type: !1396)
!10592 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10589, file: !10071, line: 850, type: !110)
!10593 = !DILocalVariable(name: "Parity", arg: 3, scope: !10589, file: !10071, line: 850, type: !110)
!10594 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10589, file: !10071, line: 851, type: !110)
!10595 = !DILocation(line: 0, scope: !10589)
!10596 = !DILocation(line: 853, column: 3, scope: !10589)
!10597 = !DILocation(line: 854, column: 3, scope: !10589)
!10598 = !DILocation(line: 855, column: 1, scope: !10589)
!10599 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10071, file: !10071, line: 1337, type: !10134, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10600)
!10600 = !{!10601}
!10601 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10599, file: !10071, line: 1337, type: !1396)
!10602 = !DILocation(line: 0, scope: !10599)
!10603 = !DILocation(line: 1339, column: 3, scope: !10599)
!10604 = !DILocation(line: 1340, column: 1, scope: !10599)
!10605 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1490, file: !1490, line: 316, type: !10606, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10608)
!10606 = !DISubroutineType(types: !10607)
!10607 = !{!109, !1487, !1493}
!10608 = !{!10609, !10610, !10611}
!10609 = !DILocalVariable(name: "config", arg: 1, scope: !10605, file: !1490, line: 317, type: !1487)
!10610 = !DILocalVariable(name: "state", arg: 2, scope: !10605, file: !1490, line: 318, type: !1493)
!10611 = !DILocalVariable(name: "reg", scope: !10605, file: !1490, line: 320, type: !22)
!10612 = !DILocation(line: 0, scope: !10605)
!10613 = !DILocation(line: 329, column: 39, scope: !10605)
!10614 = !DILocation(line: 329, column: 52, scope: !10605)
!10615 = !DILocation(line: 329, column: 9, scope: !10605)
!10616 = !DILocation(line: 329, column: 2, scope: !10605)
!10617 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !10517, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1311, retainedNodes: !10618)
!10618 = !{!10619}
!10619 = !DILocalVariable(name: "dev", arg: 1, scope: !10617, file: !336, line: 730, type: !1355)
!10620 = !DILocation(line: 0, scope: !10617)
!10621 = !DILocation(line: 732, column: 9, scope: !10617)
!10622 = !DILocation(line: 732, column: 2, scope: !10617)
!10623 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1611, file: !1611, line: 270, type: !1617, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10624)
!10624 = !{!10625}
!10625 = !DILocalVariable(name: "dev", arg: 1, scope: !10623, file: !1611, line: 270, type: !1619)
!10626 = !DILocation(line: 0, scope: !10623)
!10627 = !DILocation(line: 274, column: 2, scope: !10623)
!10628 = !DILocation(line: 275, column: 12, scope: !10623)
!10629 = !DILocation(line: 276, column: 15, scope: !10623)
!10630 = !DILocation(line: 277, column: 16, scope: !10623)
!10631 = !DILocation(line: 278, column: 15, scope: !10623)
!10632 = !DILocation(line: 279, column: 16, scope: !10623)
!10633 = !DILocation(line: 282, column: 2, scope: !10623)
!10634 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6423, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10635)
!10635 = !{!10636, !10637}
!10636 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10634, file: !535, line: 1814, type: !771)
!10637 = !DILocalVariable(name: "priority", arg: 2, scope: !10634, file: !535, line: 1814, type: !110)
!10638 = !DILocation(line: 0, scope: !10634)
!10639 = !DILocation(line: 1822, column: 46, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !535, line: 1821, column: 3)
!10641 = distinct !DILexicalBlock(scope: !10634, file: !535, line: 1816, column: 7)
!10642 = !DILocation(line: 1824, column: 1, scope: !10634)
!10643 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1611, file: !1611, line: 118, type: !6320, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10644)
!10644 = !{!10645, !10646}
!10645 = !DILocalVariable(name: "arg", arg: 1, scope: !10643, file: !1611, line: 118, type: !107)
!10646 = !DILocalVariable(name: "dticks", scope: !10643, file: !1611, line: 121, type: !110)
!10647 = !DILocation(line: 0, scope: !10643)
!10648 = !DILocation(line: 124, column: 2, scope: !10643)
!10649 = !DILocation(line: 129, column: 17, scope: !10643)
!10650 = !DILocation(line: 129, column: 14, scope: !10643)
!10651 = !DILocation(line: 130, column: 15, scope: !10643)
!10652 = !DILocation(line: 145, column: 27, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !1611, line: 132, column: 16)
!10654 = distinct !DILexicalBlock(scope: !10643, file: !1611, line: 132, column: 6)
!10655 = !DILocation(line: 145, column: 25, scope: !10653)
!10656 = !DILocation(line: 145, column: 45, scope: !10653)
!10657 = !DILocation(line: 146, column: 30, scope: !10653)
!10658 = !DILocation(line: 146, column: 20, scope: !10653)
!10659 = !DILocation(line: 147, column: 3, scope: !10653)
!10660 = !DILocation(line: 151, column: 2, scope: !10643)
!10661 = !DILocation(line: 152, column: 1, scope: !10643)
!10662 = distinct !DISubprogram(name: "elapsed", scope: !1611, file: !1611, line: 85, type: !6470, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10663)
!10663 = !{!10664, !10665, !10666}
!10664 = !DILocalVariable(name: "val1", scope: !10662, file: !1611, line: 87, type: !110)
!10665 = !DILocalVariable(name: "ctrl", scope: !10662, file: !1611, line: 88, type: !110)
!10666 = !DILocalVariable(name: "val2", scope: !10662, file: !1611, line: 89, type: !110)
!10667 = !DILocation(line: 87, column: 27, scope: !10662)
!10668 = !DILocation(line: 0, scope: !10662)
!10669 = !DILocation(line: 88, column: 27, scope: !10662)
!10670 = !DILocation(line: 89, column: 27, scope: !10662)
!10671 = !DILocation(line: 105, column: 12, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10662, file: !1611, line: 105, column: 6)
!10673 = !DILocation(line: 106, column: 6, scope: !10672)
!10674 = !DILocation(line: 107, column: 16, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10672, file: !1611, line: 106, column: 24)
!10676 = !DILocation(line: 111, column: 18, scope: !10675)
!10677 = !DILocation(line: 112, column: 2, scope: !10675)
!10678 = !DILocation(line: 114, column: 20, scope: !10662)
!10679 = !DILocation(line: 114, column: 30, scope: !10662)
!10680 = !DILocation(line: 114, column: 28, scope: !10662)
!10681 = !DILocation(line: 114, column: 2, scope: !10662)
!10682 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1611, file: !1611, line: 154, type: !10683, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10685)
!10683 = !DISubroutineType(types: !10684)
!10684 = !{null, !745, !347}
!10685 = !{!10686, !10687, !10688, !10689, !10690, !10691, !10692, !10697, !10698}
!10686 = !DILocalVariable(name: "ticks", arg: 1, scope: !10682, file: !1611, line: 154, type: !745)
!10687 = !DILocalVariable(name: "idle", arg: 2, scope: !10682, file: !1611, line: 154, type: !347)
!10688 = !DILocalVariable(name: "delay", scope: !10682, file: !1611, line: 169, type: !110)
!10689 = !DILocalVariable(name: "val1", scope: !10682, file: !1611, line: 170, type: !110)
!10690 = !DILocalVariable(name: "val2", scope: !10682, file: !1611, line: 170, type: !110)
!10691 = !DILocalVariable(name: "last_load_", scope: !10682, file: !1611, line: 171, type: !110)
!10692 = !DILocalVariable(name: "key", scope: !10682, file: !1611, line: 176, type: !10693)
!10693 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !10694)
!10694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !10695)
!10695 = !{!10696}
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10694, file: !253, line: 33, baseType: !109, size: 32)
!10697 = !DILocalVariable(name: "pending", scope: !10682, file: !1611, line: 178, type: !110)
!10698 = !DILocalVariable(name: "unannounced", scope: !10682, file: !1611, line: 185, type: !110)
!10699 = !DILocation(line: 0, scope: !10682)
!10700 = !DILocation(line: 162, column: 49, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10682, file: !1611, line: 162, column: 6)
!10702 = !DILocation(line: 163, column: 17, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10701, file: !1611, line: 162, column: 78)
!10704 = !DILocation(line: 164, column: 13, scope: !10703)
!10705 = !DILocation(line: 165, column: 3, scope: !10703)
!10706 = !DILocation(line: 171, column: 24, scope: !10682)
!10707 = !DILocation(line: 173, column: 10, scope: !10682)
!10708 = !DILocation(line: 174, column: 10, scope: !10682)
!10709 = !DILocalVariable(name: "l", arg: 1, scope: !10710, file: !253, line: 136, type: !10713)
!10710 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !10711, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10714)
!10711 = !DISubroutineType(types: !10712)
!10712 = !{!10693, !10713}
!10713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!10714 = !{!10709, !10715}
!10715 = !DILocalVariable(name: "k", scope: !10710, file: !253, line: 139, type: !10693)
!10716 = !DILocation(line: 0, scope: !10710, inlinedAt: !10717)
!10717 = distinct !DILocation(line: 176, column: 25, scope: !10682)
!10718 = !DILocation(line: 55, column: 2, scope: !10719, inlinedAt: !10723)
!10719 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6062, file: !6062, line: 42, type: !6063, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10720)
!10720 = !{!10721, !10722}
!10721 = !DILocalVariable(name: "key", scope: !10719, file: !6062, line: 44, type: !32)
!10722 = !DILocalVariable(name: "tmp", scope: !10719, file: !6062, line: 53, type: !32)
!10723 = distinct !DILocation(line: 145, column: 10, scope: !10710, inlinedAt: !10717)
!10724 = !{i64 1925652}
!10725 = !DILocation(line: 0, scope: !10719, inlinedAt: !10723)
!10726 = !DILocation(line: 148, column: 2, scope: !10727, inlinedAt: !10717)
!10727 = distinct !DILexicalBlock(scope: !10728, file: !253, line: 148, column: 2)
!10728 = distinct !DILexicalBlock(scope: !10710, file: !253, line: 148, column: 2)
!10729 = !DILocation(line: 148, column: 2, scope: !10728, inlinedAt: !10717)
!10730 = !DILocation(line: 148, column: 2, scope: !10731, inlinedAt: !10717)
!10731 = distinct !DILexicalBlock(scope: !10727, file: !253, line: 148, column: 2)
!10732 = !DILocation(line: 160, column: 2, scope: !10710, inlinedAt: !10717)
!10733 = !DILocation(line: 178, column: 21, scope: !10682)
!10734 = !DILocation(line: 180, column: 18, scope: !10682)
!10735 = !DILocation(line: 182, column: 14, scope: !10682)
!10736 = !DILocation(line: 183, column: 15, scope: !10682)
!10737 = !DILocation(line: 185, column: 39, scope: !10682)
!10738 = !DILocation(line: 185, column: 37, scope: !10682)
!10739 = !DILocation(line: 187, column: 27, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10682, file: !1611, line: 187, column: 6)
!10741 = !DILocation(line: 187, column: 6, scope: !10682)
!10742 = !DILocation(line: 202, column: 27, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10740, file: !1611, line: 195, column: 9)
!10744 = !DILocation(line: 202, column: 48, scope: !10743)
!10745 = !DILocation(line: 203, column: 9, scope: !10743)
!10746 = !DILocation(line: 204, column: 11, scope: !10743)
!10747 = !DILocation(line: 205, column: 13, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10743, file: !1611, line: 205, column: 7)
!10749 = !DILocation(line: 205, column: 7, scope: !10743)
!10750 = !DILocation(line: 0, scope: !10740)
!10751 = !DILocation(line: 212, column: 18, scope: !10682)
!10752 = !DILocation(line: 214, column: 28, scope: !10682)
!10753 = !DILocation(line: 214, column: 16, scope: !10682)
!10754 = !DILocation(line: 215, column: 15, scope: !10682)
!10755 = !DILocation(line: 227, column: 11, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10682, file: !1611, line: 227, column: 6)
!10757 = !DILocation(line: 227, column: 6, scope: !10682)
!10758 = !DILocation(line: 228, column: 15, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10756, file: !1611, line: 227, column: 19)
!10760 = !DILocation(line: 228, column: 38, scope: !10759)
!10761 = !DILocation(line: 228, column: 24, scope: !10759)
!10762 = !DILocation(line: 229, column: 2, scope: !10759)
!10763 = !DILocation(line: 230, column: 24, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10756, file: !1611, line: 229, column: 9)
!10765 = !DILocation(line: 230, column: 15, scope: !10764)
!10766 = !DILocation(line: 0, scope: !10756)
!10767 = !DILocalVariable(name: "key", arg: 2, scope: !10768, file: !253, line: 190, type: !10693)
!10768 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !10769, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10771)
!10769 = !DISubroutineType(types: !10770)
!10770 = !{null, !10713, !10693}
!10771 = !{!10772, !10767}
!10772 = !DILocalVariable(name: "l", arg: 1, scope: !10768, file: !253, line: 189, type: !10713)
!10773 = !DILocation(line: 0, scope: !10768, inlinedAt: !10774)
!10774 = distinct !DILocation(line: 232, column: 2, scope: !10682)
!10775 = !DILocation(line: 194, column: 2, scope: !10776, inlinedAt: !10774)
!10776 = distinct !DILexicalBlock(scope: !10777, file: !253, line: 194, column: 2)
!10777 = distinct !DILexicalBlock(scope: !10768, file: !253, line: 194, column: 2)
!10778 = !DILocation(line: 194, column: 2, scope: !10777, inlinedAt: !10774)
!10779 = !DILocation(line: 194, column: 2, scope: !10780, inlinedAt: !10774)
!10780 = distinct !DILexicalBlock(scope: !10776, file: !253, line: 194, column: 2)
!10781 = !DILocalVariable(name: "key", arg: 1, scope: !10782, file: !6062, line: 84, type: !32)
!10782 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6062, file: !6062, line: 84, type: !6073, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10783)
!10783 = !{!10781}
!10784 = !DILocation(line: 0, scope: !10782, inlinedAt: !10785)
!10785 = distinct !DILocation(line: 215, column: 2, scope: !10768, inlinedAt: !10774)
!10786 = !DILocation(line: 95, column: 2, scope: !10782, inlinedAt: !10785)
!10787 = !{i64 1926469}
!10788 = !DILocation(line: 234, column: 1, scope: !10682)
!10789 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1611, file: !1611, line: 236, type: !6470, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10790)
!10790 = !{!10791, !10792}
!10791 = !DILocalVariable(name: "key", scope: !10789, file: !1611, line: 242, type: !10693)
!10792 = !DILocalVariable(name: "cyc", scope: !10789, file: !1611, line: 243, type: !110)
!10793 = !DILocation(line: 0, scope: !10710, inlinedAt: !10794)
!10794 = distinct !DILocation(line: 242, column: 25, scope: !10789)
!10795 = !DILocation(line: 55, column: 2, scope: !10719, inlinedAt: !10796)
!10796 = distinct !DILocation(line: 145, column: 10, scope: !10710, inlinedAt: !10794)
!10797 = !DILocation(line: 0, scope: !10719, inlinedAt: !10796)
!10798 = !DILocation(line: 148, column: 2, scope: !10727, inlinedAt: !10794)
!10799 = !DILocation(line: 148, column: 2, scope: !10728, inlinedAt: !10794)
!10800 = !DILocation(line: 148, column: 2, scope: !10731, inlinedAt: !10794)
!10801 = !DILocation(line: 160, column: 2, scope: !10710, inlinedAt: !10794)
!10802 = !DILocation(line: 0, scope: !10789)
!10803 = !DILocation(line: 243, column: 17, scope: !10789)
!10804 = !DILocation(line: 243, column: 29, scope: !10789)
!10805 = !DILocation(line: 243, column: 43, scope: !10789)
!10806 = !DILocation(line: 0, scope: !10768, inlinedAt: !10807)
!10807 = distinct !DILocation(line: 245, column: 2, scope: !10789)
!10808 = !DILocation(line: 194, column: 2, scope: !10776, inlinedAt: !10807)
!10809 = !DILocation(line: 194, column: 2, scope: !10777, inlinedAt: !10807)
!10810 = !DILocation(line: 194, column: 2, scope: !10780, inlinedAt: !10807)
!10811 = !DILocation(line: 243, column: 27, scope: !10789)
!10812 = !DILocation(line: 243, column: 41, scope: !10789)
!10813 = !DILocation(line: 0, scope: !10782, inlinedAt: !10814)
!10814 = distinct !DILocation(line: 215, column: 2, scope: !10768, inlinedAt: !10807)
!10815 = !DILocation(line: 95, column: 2, scope: !10782, inlinedAt: !10814)
!10816 = !DILocation(line: 246, column: 13, scope: !10789)
!10817 = !DILocation(line: 246, column: 2, scope: !10789)
!10818 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1611, file: !1611, line: 249, type: !6470, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !10819)
!10819 = !{!10820, !10821}
!10820 = !DILocalVariable(name: "key", scope: !10818, file: !1611, line: 251, type: !10693)
!10821 = !DILocalVariable(name: "ret", scope: !10818, file: !1611, line: 252, type: !110)
!10822 = !DILocation(line: 0, scope: !10710, inlinedAt: !10823)
!10823 = distinct !DILocation(line: 251, column: 25, scope: !10818)
!10824 = !DILocation(line: 55, column: 2, scope: !10719, inlinedAt: !10825)
!10825 = distinct !DILocation(line: 145, column: 10, scope: !10710, inlinedAt: !10823)
!10826 = !DILocation(line: 0, scope: !10719, inlinedAt: !10825)
!10827 = !DILocation(line: 148, column: 2, scope: !10727, inlinedAt: !10823)
!10828 = !DILocation(line: 148, column: 2, scope: !10728, inlinedAt: !10823)
!10829 = !DILocation(line: 148, column: 2, scope: !10731, inlinedAt: !10823)
!10830 = !DILocation(line: 160, column: 2, scope: !10710, inlinedAt: !10823)
!10831 = !DILocation(line: 0, scope: !10818)
!10832 = !DILocation(line: 252, column: 17, scope: !10818)
!10833 = !DILocation(line: 252, column: 29, scope: !10818)
!10834 = !DILocation(line: 0, scope: !10768, inlinedAt: !10835)
!10835 = distinct !DILocation(line: 254, column: 2, scope: !10818)
!10836 = !DILocation(line: 194, column: 2, scope: !10776, inlinedAt: !10835)
!10837 = !DILocation(line: 194, column: 2, scope: !10777, inlinedAt: !10835)
!10838 = !DILocation(line: 194, column: 2, scope: !10780, inlinedAt: !10835)
!10839 = !DILocation(line: 252, column: 27, scope: !10818)
!10840 = !DILocation(line: 0, scope: !10782, inlinedAt: !10841)
!10841 = distinct !DILocation(line: 215, column: 2, scope: !10768, inlinedAt: !10835)
!10842 = !DILocation(line: 95, column: 2, scope: !10782, inlinedAt: !10841)
!10843 = !DILocation(line: 255, column: 2, scope: !10818)
!10844 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1611, file: !1611, line: 258, type: !3070, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !2002)
!10845 = !DILocation(line: 260, column: 6, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10844, file: !1611, line: 260, column: 6)
!10847 = !DILocation(line: 260, column: 16, scope: !10846)
!10848 = !DILocation(line: 260, column: 6, scope: !10844)
!10849 = !DILocation(line: 261, column: 17, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10846, file: !1611, line: 260, column: 34)
!10851 = !DILocation(line: 262, column: 2, scope: !10850)
!10852 = !DILocation(line: 263, column: 1, scope: !10844)
!10853 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1611, file: !1611, line: 265, type: !3070, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1535, retainedNodes: !2002)
!10854 = !DILocation(line: 267, column: 16, scope: !10853)
!10855 = !DILocation(line: 268, column: 1, scope: !10853)
!10856 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10857, file: !10857, line: 9, type: !10858, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !10881)
!10857 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10858 = !DISubroutineType(types: !10859)
!10859 = !{!109, !10860, !180, !10880}
!10860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10861, size: 32)
!10861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10862)
!10862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1490, line: 60, size: 64, elements: !10863)
!10863 = !{!10864, !10879}
!10864 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10862, file: !1490, line: 69, baseType: !10865, size: 32)
!10865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10866, size: 32)
!10866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10867)
!10867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1490, line: 50, size: 64, elements: !10868)
!10868 = !{!10869, !10877, !10878}
!10869 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10867, file: !1490, line: 52, baseType: !10870, size: 32)
!10870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10871, size: 32)
!10871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10872)
!10872 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1501, line: 37, baseType: !10873)
!10873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1501, line: 32, size: 64, elements: !10874)
!10874 = !{!10875, !10876}
!10875 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10873, file: !1501, line: 34, baseType: !110, size: 32)
!10876 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10873, file: !1501, line: 36, baseType: !110, size: 32, offset: 32)
!10877 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10867, file: !1490, line: 54, baseType: !180, size: 8, offset: 32)
!10878 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10867, file: !1490, line: 56, baseType: !180, size: 8, offset: 40)
!10879 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10862, file: !1490, line: 71, baseType: !180, size: 8, offset: 32)
!10880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10865, size: 32)
!10881 = !{!10882, !10883, !10884}
!10882 = !DILocalVariable(name: "config", arg: 1, scope: !10856, file: !10857, line: 9, type: !10860)
!10883 = !DILocalVariable(name: "id", arg: 2, scope: !10856, file: !10857, line: 9, type: !180)
!10884 = !DILocalVariable(name: "state", arg: 3, scope: !10856, file: !10857, line: 10, type: !10880)
!10885 = !DILocation(line: 0, scope: !10856)
!10886 = !DILocation(line: 12, column: 20, scope: !10856)
!10887 = !DILocation(line: 13, column: 27, scope: !10856)
!10888 = !DILocation(line: 13, column: 42, scope: !10856)
!10889 = !DILocation(line: 13, column: 19, scope: !10856)
!10890 = !DILocation(line: 13, column: 16, scope: !10856)
!10891 = !DILocation(line: 13, column: 2, scope: !10856)
!10892 = distinct !{!10892, !10891, !10893}
!10893 = !DILocation(line: 19, column: 2, scope: !10856)
!10894 = !DILocation(line: 14, column: 23, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10896, file: !10857, line: 14, column: 7)
!10896 = distinct !DILexicalBlock(scope: !10856, file: !10857, line: 13, column: 54)
!10897 = !DILocation(line: 14, column: 10, scope: !10895)
!10898 = !DILocation(line: 18, column: 11, scope: !10896)
!10899 = !DILocation(line: 14, column: 7, scope: !10896)
!10900 = !DILocation(line: 22, column: 1, scope: !10856)
!10901 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1730, file: !1730, line: 193, type: !10902, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10911)
!10902 = !DISubroutineType(types: !10903)
!10903 = !{!109, !10904, !180, !22}
!10904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10905, size: 32)
!10905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10906)
!10906 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1501, line: 37, baseType: !10907)
!10907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1501, line: 32, size: 64, elements: !10908)
!10908 = !{!10909, !10910}
!10909 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10907, file: !1501, line: 34, baseType: !110, size: 32)
!10910 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10907, file: !1501, line: 36, baseType: !110, size: 32, offset: 32)
!10911 = !{!10912, !10913, !10914, !10915, !10916, !10917, !10918, !10919, !10921}
!10912 = !DILocalVariable(name: "pins", arg: 1, scope: !10901, file: !1730, line: 193, type: !10904)
!10913 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10901, file: !1730, line: 193, type: !180)
!10914 = !DILocalVariable(name: "reg", arg: 3, scope: !10901, file: !1730, line: 194, type: !22)
!10915 = !DILocalVariable(name: "pin", scope: !10901, file: !1730, line: 196, type: !110)
!10916 = !DILocalVariable(name: "mux", scope: !10901, file: !1730, line: 196, type: !110)
!10917 = !DILocalVariable(name: "pin_cgf", scope: !10901, file: !1730, line: 197, type: !110)
!10918 = !DILocalVariable(name: "ret", scope: !10901, file: !1730, line: 198, type: !109)
!10919 = !DILocalVariable(name: "i", scope: !10920, file: !1730, line: 209, type: !180)
!10920 = distinct !DILexicalBlock(scope: !10901, file: !1730, line: 209, column: 2)
!10921 = !DILocalVariable(name: "gpio_out", scope: !10922, file: !1730, line: 239, type: !110)
!10922 = distinct !DILexicalBlock(scope: !10923, file: !1730, line: 238, column: 55)
!10923 = distinct !DILexicalBlock(scope: !10924, file: !1730, line: 238, column: 14)
!10924 = distinct !DILexicalBlock(scope: !10925, file: !1730, line: 236, column: 14)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !1730, line: 234, column: 7)
!10926 = distinct !DILexicalBlock(scope: !10927, file: !1730, line: 209, column: 41)
!10927 = distinct !DILexicalBlock(scope: !10920, file: !1730, line: 209, column: 2)
!10928 = !DILocation(line: 0, scope: !10901)
!10929 = !DILocation(line: 0, scope: !10920)
!10930 = !DILocation(line: 209, column: 25, scope: !10927)
!10931 = !DILocation(line: 209, column: 2, scope: !10920)
!10932 = distinct !{!10932, !10931, !10933}
!10933 = !DILocation(line: 259, column: 2, scope: !10920)
!10934 = !DILocation(line: 210, column: 17, scope: !10926)
!10935 = !DILocation(line: 234, column: 7, scope: !10925)
!10936 = !DILocation(line: 234, column: 33, scope: !10925)
!10937 = !DILocation(line: 234, column: 7, scope: !10926)
!10938 = !DILocation(line: 235, column: 22, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10925, file: !1730, line: 234, column: 49)
!10940 = !DILocation(line: 235, column: 29, scope: !10939)
!10941 = !DILocation(line: 236, column: 3, scope: !10939)
!10942 = !DILocation(line: 236, column: 14, scope: !10925)
!10943 = !DILocation(line: 239, column: 32, scope: !10922)
!10944 = !DILocation(line: 0, scope: !10922)
!10945 = !DILocation(line: 241, column: 8, scope: !10922)
!10946 = !DILocation(line: 246, column: 3, scope: !10922)
!10947 = !DILocation(line: 252, column: 9, scope: !10926)
!10948 = !DILocation(line: 255, column: 9, scope: !10926)
!10949 = !DILocation(line: 256, column: 11, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10926, file: !1730, line: 256, column: 7)
!10951 = !DILocation(line: 209, column: 37, scope: !10927)
!10952 = !DILocation(line: 256, column: 7, scope: !10926)
!10953 = !DILocation(line: 262, column: 1, scope: !10901)
!10954 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1730, file: !1730, line: 176, type: !10955, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10957)
!10955 = !DISubroutineType(types: !10956)
!10956 = !{!109, !110, !110, !110}
!10957 = !{!10958, !10959, !10960, !10961}
!10958 = !DILocalVariable(name: "pin", arg: 1, scope: !10954, file: !1730, line: 176, type: !110)
!10959 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10954, file: !1730, line: 176, type: !110)
!10960 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10954, file: !1730, line: 176, type: !110)
!10961 = !DILocalVariable(name: "port_device", scope: !10954, file: !1730, line: 178, type: !1660)
!10962 = !DILocation(line: 0, scope: !10954)
!10963 = !DILocation(line: 180, column: 22, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10954, file: !1730, line: 180, column: 6)
!10965 = !DILocation(line: 180, column: 6, scope: !10954)
!10966 = !DILocation(line: 180, column: 6, scope: !10964)
!10967 = !DILocation(line: 184, column: 16, scope: !10954)
!10968 = !DILocation(line: 186, column: 19, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10954, file: !1730, line: 186, column: 6)
!10970 = !DILocation(line: 186, column: 28, scope: !10969)
!10971 = !DILocation(line: 186, column: 33, scope: !10969)
!10972 = !DILocation(line: 186, column: 6, scope: !10954)
!10973 = !DILocation(line: 190, column: 43, scope: !10954)
!10974 = !DILocation(line: 190, column: 9, scope: !10954)
!10975 = !DILocation(line: 190, column: 2, scope: !10954)
!10976 = !DILocation(line: 191, column: 1, scope: !10954)
!10977 = distinct !DISubprogram(name: "device_is_ready", scope: !8881, file: !8881, line: 47, type: !10978, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10980)
!10978 = !DISubroutineType(types: !10979)
!10979 = !{!347, !1660}
!10980 = !{!10981}
!10981 = !DILocalVariable(name: "dev", arg: 1, scope: !10977, file: !8881, line: 47, type: !1660)
!10982 = !DILocation(line: 0, scope: !10977)
!10983 = !DILocation(line: 55, column: 2, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10977, file: !8881, line: 55, column: 2)
!10985 = !{i64 2149163722}
!10986 = !DILocation(line: 56, column: 9, scope: !10977)
!10987 = !DILocation(line: 56, column: 2, scope: !10977)
!10988 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !10978, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !10989)
!10989 = !{!10990}
!10990 = !DILocalVariable(name: "dev", arg: 1, scope: !10988, file: !336, line: 730, type: !1660)
!10991 = !DILocation(line: 0, scope: !10988)
!10992 = !DILocation(line: 732, column: 9, scope: !10988)
!10993 = !DILocation(line: 732, column: 2, scope: !10988)
!10994 = distinct !DISubprogram(name: "SystemInit", scope: !1780, file: !1780, line: 167, type: !3070, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !2002)
!10995 = !DILocation(line: 182, column: 1, scope: !10994)
!10996 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1780, file: !1780, line: 220, type: !3070, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1738, retainedNodes: !10997)
!10997 = !{!10998, !10999, !11000, !11001, !11002}
!10998 = !DILocalVariable(name: "tmp", scope: !10996, file: !1780, line: 222, type: !110)
!10999 = !DILocalVariable(name: "pllvco", scope: !10996, file: !1780, line: 222, type: !110)
!11000 = !DILocalVariable(name: "pllp", scope: !10996, file: !1780, line: 222, type: !110)
!11001 = !DILocalVariable(name: "pllsource", scope: !10996, file: !1780, line: 222, type: !110)
!11002 = !DILocalVariable(name: "pllm", scope: !10996, file: !1780, line: 222, type: !110)
!11003 = !DILocation(line: 0, scope: !10996)
!11004 = !DILocation(line: 225, column: 14, scope: !10996)
!11005 = !DILocation(line: 225, column: 19, scope: !10996)
!11006 = !DILocation(line: 227, column: 3, scope: !10996)
!11007 = !DILocation(line: 234, column: 7, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !10996, file: !1780, line: 228, column: 3)
!11009 = !DILocation(line: 240, column: 25, scope: !11008)
!11010 = !DILocation(line: 241, column: 19, scope: !11008)
!11011 = !DILocation(line: 241, column: 27, scope: !11008)
!11012 = !DILocation(line: 243, column: 21, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11008, file: !1780, line: 243, column: 11)
!11014 = !DILocation(line: 0, scope: !11013)
!11015 = !DILocation(line: 254, column: 22, scope: !11008)
!11016 = !DILocation(line: 254, column: 62, scope: !11008)
!11017 = !DILocation(line: 255, column: 31, scope: !11008)
!11018 = !DILocation(line: 256, column: 7, scope: !11008)
!11019 = !DILocation(line: 0, scope: !11008)
!11020 = !DILocation(line: 263, column: 30, scope: !10996)
!11021 = !DILocation(line: 263, column: 52, scope: !10996)
!11022 = !DILocation(line: 263, column: 9, scope: !10996)
!11023 = !DILocation(line: 265, column: 19, scope: !10996)
!11024 = !DILocation(line: 266, column: 1, scope: !10996)
!11025 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11026, file: !11026, line: 200, type: !11027, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2002)
!11026 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11027 = !DISubroutineType(types: !11028)
!11028 = !{!11029}
!11029 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2883, line: 44, baseType: !2882)
!11030 = !DILocation(line: 202, column: 3, scope: !11025)
!11031 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11026, file: !11026, line: 219, type: !11032, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !11056)
!11032 = !DISubroutineType(types: !11033)
!11033 = !{!11029, !11034}
!11034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11035, size: 32)
!11035 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11036, line: 70, baseType: !11037)
!11036 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11036, line: 49, size: 384, elements: !11038)
!11038 = !{!11039, !11040, !11041, !11042, !11043, !11044, !11045}
!11039 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11037, file: !11036, line: 51, baseType: !110, size: 32)
!11040 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11037, file: !11036, line: 54, baseType: !110, size: 32, offset: 32)
!11041 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11037, file: !11036, line: 57, baseType: !110, size: 32, offset: 64)
!11042 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11037, file: !11036, line: 60, baseType: !110, size: 32, offset: 96)
!11043 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11037, file: !11036, line: 63, baseType: !110, size: 32, offset: 128)
!11044 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11037, file: !11036, line: 66, baseType: !110, size: 32, offset: 160)
!11045 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11037, file: !11036, line: 69, baseType: !11046, size: 192, offset: 192)
!11046 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11047, line: 73, baseType: !11048)
!11047 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11048 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11047, line: 45, size: 192, elements: !11049)
!11049 = !{!11050, !11051, !11052, !11053, !11054, !11055}
!11050 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11048, file: !11047, line: 47, baseType: !110, size: 32)
!11051 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11048, file: !11047, line: 50, baseType: !110, size: 32, offset: 32)
!11052 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11048, file: !11047, line: 53, baseType: !110, size: 32, offset: 64)
!11053 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11048, file: !11047, line: 56, baseType: !110, size: 32, offset: 96)
!11054 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11048, file: !11047, line: 60, baseType: !110, size: 32, offset: 128)
!11055 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11048, file: !11047, line: 63, baseType: !110, size: 32, offset: 160)
!11056 = !{!11057, !11058, !11059, !11060, !11064}
!11057 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11031, file: !11026, line: 219, type: !11034)
!11058 = !DILocalVariable(name: "tickstart", scope: !11031, file: !11026, line: 221, type: !110)
!11059 = !DILocalVariable(name: "pll_config", scope: !11031, file: !11026, line: 221, type: !110)
!11060 = !DILocalVariable(name: "pwrclkchanged", scope: !11061, file: !11026, line: 391, type: !11063)
!11061 = distinct !DILexicalBlock(scope: !11062, file: !11026, line: 390, column: 3)
!11062 = distinct !DILexicalBlock(scope: !11031, file: !11026, line: 389, column: 6)
!11063 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !808, line: 188, baseType: !2889)
!11064 = !DILocalVariable(name: "tmpreg", scope: !11065, file: !11026, line: 400, type: !316)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !11026, line: 400, column: 7)
!11066 = distinct !DILexicalBlock(scope: !11067, file: !11026, line: 399, column: 5)
!11067 = distinct !DILexicalBlock(scope: !11061, file: !11026, line: 398, column: 8)
!11068 = !DILocation(line: 0, scope: !11031)
!11069 = !DILocation(line: 224, column: 24, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11031, file: !11026, line: 224, column: 6)
!11071 = !DILocation(line: 224, column: 6, scope: !11031)
!11072 = !DILocation(line: 232, column: 27, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11031, file: !11026, line: 232, column: 6)
!11074 = !DILocation(line: 232, column: 43, scope: !11073)
!11075 = !DILocation(line: 232, column: 69, scope: !11073)
!11076 = !DILocation(line: 232, column: 6, scope: !11031)
!11077 = !DILocation(line: 237, column: 9, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11079, file: !11026, line: 237, column: 8)
!11079 = distinct !DILexicalBlock(scope: !11073, file: !11026, line: 233, column: 3)
!11080 = !DILocation(line: 237, column: 39, scope: !11078)
!11081 = !DILocation(line: 237, column: 60, scope: !11078)
!11082 = !DILocation(line: 238, column: 9, scope: !11078)
!11083 = !DILocation(line: 238, column: 39, scope: !11078)
!11084 = !DILocation(line: 238, column: 60, scope: !11078)
!11085 = !DILocation(line: 238, column: 70, scope: !11078)
!11086 = !DILocation(line: 238, column: 78, scope: !11078)
!11087 = !DILocation(line: 238, column: 100, scope: !11078)
!11088 = !DILocation(line: 237, column: 8, scope: !11079)
!11089 = !DILocation(line: 240, column: 11, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11091, file: !11026, line: 240, column: 10)
!11091 = distinct !DILexicalBlock(scope: !11078, file: !11026, line: 239, column: 5)
!11092 = !DILocation(line: 240, column: 57, scope: !11090)
!11093 = !DILocation(line: 240, column: 80, scope: !11090)
!11094 = !DILocation(line: 240, column: 89, scope: !11090)
!11095 = !DILocation(line: 240, column: 10, scope: !11091)
!11096 = !DILocation(line: 248, column: 7, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11098, file: !11026, line: 248, column: 7)
!11098 = distinct !DILexicalBlock(scope: !11099, file: !11026, line: 248, column: 7)
!11099 = distinct !DILexicalBlock(scope: !11078, file: !11026, line: 246, column: 5)
!11100 = !DILocation(line: 248, column: 7, scope: !11098)
!11101 = !DILocation(line: 248, column: 7, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11097, file: !11026, line: 248, column: 7)
!11103 = !DILocation(line: 248, column: 7, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11105, file: !11026, line: 248, column: 7)
!11105 = distinct !DILexicalBlock(scope: !11097, file: !11026, line: 248, column: 7)
!11106 = !DILocation(line: 248, column: 7, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11105, file: !11026, line: 248, column: 7)
!11108 = !DILocation(line: 0, scope: !11097)
!11109 = !DILocation(line: 251, column: 30, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11099, file: !11026, line: 251, column: 10)
!11111 = !DILocation(line: 251, column: 40, scope: !11110)
!11112 = !DILocation(line: 0, scope: !11110)
!11113 = !DILocation(line: 251, column: 10, scope: !11099)
!11114 = !DILocation(line: 257, column: 15, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11110, file: !11026, line: 252, column: 7)
!11116 = !DILocation(line: 257, column: 51, scope: !11115)
!11117 = !DILocation(line: 257, column: 9, scope: !11115)
!11118 = !DILocation(line: 259, column: 15, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !11026, line: 259, column: 14)
!11120 = distinct !DILexicalBlock(scope: !11115, file: !11026, line: 258, column: 9)
!11121 = !DILocation(line: 259, column: 29, scope: !11119)
!11122 = !DILocation(line: 259, column: 43, scope: !11119)
!11123 = !DILocation(line: 259, column: 14, scope: !11120)
!11124 = distinct !{!11124, !11117, !11125}
!11125 = !DILocation(line: 263, column: 9, scope: !11115)
!11126 = !DILocation(line: 271, column: 15, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11110, file: !11026, line: 266, column: 7)
!11128 = !DILocation(line: 271, column: 9, scope: !11127)
!11129 = !DILocation(line: 273, column: 15, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !11026, line: 273, column: 14)
!11131 = distinct !DILexicalBlock(scope: !11127, file: !11026, line: 272, column: 9)
!11132 = !DILocation(line: 273, column: 29, scope: !11130)
!11133 = !DILocation(line: 273, column: 43, scope: !11130)
!11134 = !DILocation(line: 273, column: 14, scope: !11131)
!11135 = distinct !{!11135, !11128, !11136}
!11136 = !DILocation(line: 277, column: 9, scope: !11127)
!11137 = !DILocation(line: 282, column: 27, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11031, file: !11026, line: 282, column: 6)
!11139 = !DILocation(line: 282, column: 43, scope: !11138)
!11140 = !DILocation(line: 282, column: 69, scope: !11138)
!11141 = !DILocation(line: 282, column: 6, scope: !11031)
!11142 = !DILocation(line: 289, column: 9, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11144, file: !11026, line: 289, column: 8)
!11144 = distinct !DILexicalBlock(scope: !11138, file: !11026, line: 283, column: 3)
!11145 = !DILocation(line: 289, column: 39, scope: !11143)
!11146 = !DILocation(line: 289, column: 60, scope: !11143)
!11147 = !DILocation(line: 290, column: 9, scope: !11143)
!11148 = !DILocation(line: 290, column: 39, scope: !11143)
!11149 = !DILocation(line: 290, column: 60, scope: !11143)
!11150 = !DILocation(line: 290, column: 70, scope: !11143)
!11151 = !DILocation(line: 290, column: 78, scope: !11143)
!11152 = !DILocation(line: 290, column: 100, scope: !11143)
!11153 = !DILocation(line: 289, column: 8, scope: !11144)
!11154 = !DILocation(line: 293, column: 11, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11156, file: !11026, line: 293, column: 10)
!11156 = distinct !DILexicalBlock(scope: !11143, file: !11026, line: 291, column: 5)
!11157 = !DILocation(line: 293, column: 57, scope: !11155)
!11158 = !DILocation(line: 293, column: 80, scope: !11155)
!11159 = !DILocation(line: 293, column: 89, scope: !11155)
!11160 = !DILocation(line: 293, column: 10, scope: !11156)
!11161 = !DILocation(line: 307, column: 30, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11163, file: !11026, line: 307, column: 10)
!11163 = distinct !DILexicalBlock(scope: !11143, file: !11026, line: 305, column: 5)
!11164 = !DILocation(line: 307, column: 39, scope: !11162)
!11165 = !DILocation(line: 307, column: 10, scope: !11163)
!11166 = !DILocation(line: 310, column: 9, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11162, file: !11026, line: 308, column: 7)
!11168 = !DILocation(line: 313, column: 21, scope: !11167)
!11169 = !DILocation(line: 316, column: 9, scope: !11167)
!11170 = !DILocation(line: 316, column: 15, scope: !11167)
!11171 = !DILocation(line: 316, column: 51, scope: !11167)
!11172 = !DILocation(line: 318, column: 15, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !11026, line: 318, column: 14)
!11174 = distinct !DILexicalBlock(scope: !11167, file: !11026, line: 317, column: 9)
!11175 = !DILocation(line: 318, column: 29, scope: !11173)
!11176 = !DILocation(line: 318, column: 43, scope: !11173)
!11177 = !DILocation(line: 318, column: 14, scope: !11174)
!11178 = distinct !{!11178, !11169, !11179}
!11179 = !DILocation(line: 322, column: 9, scope: !11167)
!11180 = !DILocation(line: 330, column: 9, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11162, file: !11026, line: 328, column: 7)
!11182 = !DILocation(line: 333, column: 21, scope: !11181)
!11183 = !DILocation(line: 336, column: 9, scope: !11181)
!11184 = !DILocation(line: 336, column: 15, scope: !11181)
!11185 = !DILocation(line: 338, column: 15, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11187, file: !11026, line: 338, column: 14)
!11187 = distinct !DILexicalBlock(scope: !11181, file: !11026, line: 337, column: 9)
!11188 = !DILocation(line: 338, column: 29, scope: !11186)
!11189 = !DILocation(line: 338, column: 43, scope: !11186)
!11190 = !DILocation(line: 338, column: 14, scope: !11187)
!11191 = distinct !{!11191, !11183, !11192}
!11192 = !DILocation(line: 342, column: 9, scope: !11181)
!11193 = !DILocation(line: 0, scope: !11143)
!11194 = !DILocation(line: 347, column: 27, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11031, file: !11026, line: 347, column: 6)
!11196 = !DILocation(line: 347, column: 43, scope: !11195)
!11197 = !DILocation(line: 347, column: 69, scope: !11195)
!11198 = !DILocation(line: 347, column: 6, scope: !11031)
!11199 = !DILocation(line: 353, column: 28, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11201, file: !11026, line: 353, column: 8)
!11201 = distinct !DILexicalBlock(scope: !11195, file: !11026, line: 348, column: 3)
!11202 = !DILocation(line: 353, column: 37, scope: !11200)
!11203 = !DILocation(line: 353, column: 8, scope: !11201)
!11204 = !DILocation(line: 356, column: 7, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11200, file: !11026, line: 354, column: 5)
!11206 = !DILocation(line: 359, column: 19, scope: !11205)
!11207 = !DILocation(line: 362, column: 7, scope: !11205)
!11208 = !DILocation(line: 362, column: 13, scope: !11205)
!11209 = !DILocation(line: 362, column: 49, scope: !11205)
!11210 = !DILocation(line: 364, column: 13, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11212, file: !11026, line: 364, column: 12)
!11212 = distinct !DILexicalBlock(scope: !11205, file: !11026, line: 363, column: 7)
!11213 = !DILocation(line: 364, column: 27, scope: !11211)
!11214 = !DILocation(line: 364, column: 41, scope: !11211)
!11215 = !DILocation(line: 364, column: 12, scope: !11212)
!11216 = distinct !{!11216, !11207, !11217}
!11217 = !DILocation(line: 368, column: 7, scope: !11205)
!11218 = !DILocation(line: 373, column: 7, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11200, file: !11026, line: 371, column: 5)
!11220 = !DILocation(line: 376, column: 19, scope: !11219)
!11221 = !DILocation(line: 379, column: 7, scope: !11219)
!11222 = !DILocation(line: 379, column: 13, scope: !11219)
!11223 = !DILocation(line: 381, column: 13, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11225, file: !11026, line: 381, column: 12)
!11225 = distinct !DILexicalBlock(scope: !11219, file: !11026, line: 380, column: 7)
!11226 = !DILocation(line: 381, column: 27, scope: !11224)
!11227 = !DILocation(line: 381, column: 41, scope: !11224)
!11228 = !DILocation(line: 381, column: 12, scope: !11225)
!11229 = distinct !{!11229, !11221, !11230}
!11230 = !DILocation(line: 385, column: 7, scope: !11219)
!11231 = !DILocation(line: 389, column: 27, scope: !11062)
!11232 = !DILocation(line: 389, column: 43, scope: !11062)
!11233 = !DILocation(line: 389, column: 69, scope: !11062)
!11234 = !DILocation(line: 389, column: 6, scope: !11031)
!11235 = !DILocation(line: 0, scope: !11061)
!11236 = !DILocation(line: 398, column: 8, scope: !11067)
!11237 = !DILocation(line: 398, column: 8, scope: !11061)
!11238 = !DILocation(line: 400, column: 7, scope: !11065)
!11239 = !DILocation(line: 400, column: 7, scope: !11066)
!11240 = !DILocation(line: 402, column: 5, scope: !11066)
!11241 = !DILocation(line: 404, column: 8, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11061, file: !11026, line: 404, column: 8)
!11243 = !DILocation(line: 404, column: 8, scope: !11061)
!11244 = !DILocation(line: 407, column: 7, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11242, file: !11026, line: 405, column: 5)
!11246 = !DILocation(line: 410, column: 19, scope: !11245)
!11247 = !DILocation(line: 412, column: 7, scope: !11245)
!11248 = !DILocation(line: 412, column: 13, scope: !11245)
!11249 = !DILocation(line: 414, column: 13, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !11026, line: 414, column: 12)
!11251 = distinct !DILexicalBlock(scope: !11245, file: !11026, line: 413, column: 7)
!11252 = !DILocation(line: 414, column: 27, scope: !11250)
!11253 = !DILocation(line: 414, column: 40, scope: !11250)
!11254 = !DILocation(line: 414, column: 12, scope: !11251)
!11255 = distinct !{!11255, !11247, !11256}
!11256 = !DILocation(line: 418, column: 7, scope: !11245)
!11257 = !DILocation(line: 422, column: 5, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11259, file: !11026, line: 422, column: 5)
!11259 = distinct !DILexicalBlock(scope: !11061, file: !11026, line: 422, column: 5)
!11260 = !DILocation(line: 422, column: 5, scope: !11259)
!11261 = !DILocation(line: 422, column: 5, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11258, file: !11026, line: 422, column: 5)
!11263 = !DILocation(line: 422, column: 5, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11265, file: !11026, line: 422, column: 5)
!11265 = distinct !DILexicalBlock(scope: !11258, file: !11026, line: 422, column: 5)
!11266 = !DILocation(line: 422, column: 5, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11265, file: !11026, line: 422, column: 5)
!11268 = !DILocation(line: 0, scope: !11258)
!11269 = !DILocation(line: 424, column: 28, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11061, file: !11026, line: 424, column: 8)
!11271 = !DILocation(line: 424, column: 38, scope: !11270)
!11272 = !DILocation(line: 0, scope: !11270)
!11273 = !DILocation(line: 424, column: 8, scope: !11061)
!11274 = !DILocation(line: 430, column: 13, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11270, file: !11026, line: 425, column: 5)
!11276 = !DILocation(line: 430, column: 49, scope: !11275)
!11277 = !DILocation(line: 430, column: 7, scope: !11275)
!11278 = !DILocation(line: 432, column: 13, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11280, file: !11026, line: 432, column: 12)
!11280 = distinct !DILexicalBlock(scope: !11275, file: !11026, line: 431, column: 7)
!11281 = !DILocation(line: 432, column: 27, scope: !11279)
!11282 = !DILocation(line: 432, column: 41, scope: !11279)
!11283 = !DILocation(line: 432, column: 12, scope: !11280)
!11284 = distinct !{!11284, !11277, !11285}
!11285 = !DILocation(line: 436, column: 7, scope: !11275)
!11286 = !DILocation(line: 444, column: 13, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11270, file: !11026, line: 439, column: 5)
!11288 = !DILocation(line: 444, column: 7, scope: !11287)
!11289 = !DILocation(line: 446, column: 13, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !11026, line: 446, column: 12)
!11291 = distinct !DILexicalBlock(scope: !11287, file: !11026, line: 445, column: 7)
!11292 = !DILocation(line: 446, column: 27, scope: !11290)
!11293 = !DILocation(line: 446, column: 41, scope: !11290)
!11294 = !DILocation(line: 446, column: 12, scope: !11291)
!11295 = distinct !{!11295, !11288, !11296}
!11296 = !DILocation(line: 450, column: 7, scope: !11287)
!11297 = !DILocation(line: 454, column: 8, scope: !11061)
!11298 = !DILocation(line: 456, column: 7, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11300, file: !11026, line: 455, column: 5)
!11300 = distinct !DILexicalBlock(scope: !11061, file: !11026, line: 454, column: 8)
!11301 = !DILocation(line: 457, column: 5, scope: !11299)
!11302 = !DILocation(line: 462, column: 31, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11031, file: !11026, line: 462, column: 7)
!11304 = !DILocation(line: 462, column: 41, scope: !11303)
!11305 = !DILocation(line: 462, column: 7, scope: !11031)
!11306 = !DILocation(line: 465, column: 8, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11308, file: !11026, line: 465, column: 8)
!11308 = distinct !DILexicalBlock(scope: !11303, file: !11026, line: 463, column: 3)
!11309 = !DILocation(line: 465, column: 38, scope: !11307)
!11310 = !DILocation(line: 465, column: 8, scope: !11308)
!11311 = !DILocation(line: 467, column: 44, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11313, file: !11026, line: 467, column: 10)
!11313 = distinct !DILexicalBlock(scope: !11307, file: !11026, line: 466, column: 5)
!11314 = !DILocation(line: 0, scope: !11312)
!11315 = !DILocation(line: 467, column: 10, scope: !11313)
!11316 = !DILocation(line: 483, column: 15, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11312, file: !11026, line: 468, column: 7)
!11318 = !DILocation(line: 483, column: 9, scope: !11317)
!11319 = !DILocation(line: 485, column: 15, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11321, file: !11026, line: 485, column: 14)
!11321 = distinct !DILexicalBlock(scope: !11317, file: !11026, line: 484, column: 9)
!11322 = !DILocation(line: 485, column: 29, scope: !11320)
!11323 = !DILocation(line: 485, column: 43, scope: !11320)
!11324 = !DILocation(line: 485, column: 14, scope: !11321)
!11325 = distinct !{!11325, !11318, !11326}
!11326 = !DILocation(line: 489, column: 9, scope: !11317)
!11327 = !DILocation(line: 492, column: 9, scope: !11317)
!11328 = !DILocation(line: 498, column: 9, scope: !11317)
!11329 = !DILocation(line: 501, column: 21, scope: !11317)
!11330 = !DILocation(line: 504, column: 9, scope: !11317)
!11331 = !DILocation(line: 504, column: 15, scope: !11317)
!11332 = !DILocation(line: 504, column: 51, scope: !11317)
!11333 = !DILocation(line: 506, column: 15, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !11026, line: 506, column: 14)
!11335 = distinct !DILexicalBlock(scope: !11317, file: !11026, line: 505, column: 9)
!11336 = !DILocation(line: 506, column: 29, scope: !11334)
!11337 = !DILocation(line: 506, column: 43, scope: !11334)
!11338 = !DILocation(line: 506, column: 14, scope: !11335)
!11339 = distinct !{!11339, !11330, !11340}
!11340 = !DILocation(line: 510, column: 9, scope: !11317)
!11341 = !DILocation(line: 521, column: 15, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11312, file: !11026, line: 513, column: 7)
!11343 = !DILocation(line: 521, column: 9, scope: !11342)
!11344 = !DILocation(line: 523, column: 15, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11346, file: !11026, line: 523, column: 14)
!11346 = distinct !DILexicalBlock(scope: !11342, file: !11026, line: 522, column: 9)
!11347 = !DILocation(line: 523, column: 29, scope: !11345)
!11348 = !DILocation(line: 523, column: 43, scope: !11345)
!11349 = !DILocation(line: 523, column: 14, scope: !11346)
!11350 = distinct !{!11350, !11343, !11351}
!11351 = !DILocation(line: 527, column: 9, scope: !11342)
!11352 = !DILocation(line: 533, column: 44, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11354, file: !11026, line: 533, column: 10)
!11354 = distinct !DILexicalBlock(scope: !11307, file: !11026, line: 531, column: 5)
!11355 = !DILocation(line: 533, column: 10, scope: !11354)
!11356 = !DILocation(line: 540, column: 27, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11353, file: !11026, line: 538, column: 7)
!11358 = !DILocation(line: 551, column: 14, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11357, file: !11026, line: 550, column: 13)
!11360 = !DILocation(line: 551, column: 81, scope: !11359)
!11361 = !DILocation(line: 551, column: 55, scope: !11359)
!11362 = !DILocation(line: 551, column: 92, scope: !11359)
!11363 = !DILocation(line: 552, column: 14, scope: !11359)
!11364 = !DILocation(line: 552, column: 80, scope: !11359)
!11365 = !DILocation(line: 552, column: 53, scope: !11359)
!11366 = !DILocation(line: 552, column: 111, scope: !11359)
!11367 = !DILocation(line: 553, column: 14, scope: !11359)
!11368 = !DILocation(line: 553, column: 80, scope: !11359)
!11369 = !DILocation(line: 553, column: 86, scope: !11359)
!11370 = !DILocation(line: 553, column: 53, scope: !11359)
!11371 = !DILocation(line: 553, column: 111, scope: !11359)
!11372 = !DILocation(line: 554, column: 14, scope: !11359)
!11373 = !DILocation(line: 554, column: 82, scope: !11359)
!11374 = !DILocation(line: 554, column: 101, scope: !11359)
!11375 = !DILocation(line: 554, column: 53, scope: !11359)
!11376 = !DILocation(line: 554, column: 126, scope: !11359)
!11377 = !DILocation(line: 555, column: 14, scope: !11359)
!11378 = !DILocation(line: 555, column: 80, scope: !11359)
!11379 = !DILocation(line: 555, column: 85, scope: !11359)
!11380 = !DILocation(line: 555, column: 53, scope: !11359)
!11381 = !DILocation(line: 550, column: 13, scope: !11357)
!11382 = !DILocation(line: 563, column: 3, scope: !11031)
!11383 = !DILocation(line: 564, column: 1, scope: !11031)
!11384 = !DISubprogram(name: "HAL_GetTick", scope: !11385, file: !11385, line: 234, type: !6470, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2002)
!11385 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11386 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11026, file: !11026, line: 591, type: !11387, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !11398)
!11387 = !DISubroutineType(types: !11388)
!11388 = !{!11029, !11389, !110}
!11389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11390, size: 32)
!11390 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11036, line: 92, baseType: !11391)
!11391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11036, line: 75, size: 160, elements: !11392)
!11392 = !{!11393, !11394, !11395, !11396, !11397}
!11393 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11391, file: !11036, line: 77, baseType: !110, size: 32)
!11394 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11391, file: !11036, line: 80, baseType: !110, size: 32, offset: 32)
!11395 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11391, file: !11036, line: 83, baseType: !110, size: 32, offset: 64)
!11396 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11391, file: !11036, line: 86, baseType: !110, size: 32, offset: 96)
!11397 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11391, file: !11036, line: 89, baseType: !110, size: 32, offset: 128)
!11398 = !{!11399, !11400, !11401}
!11399 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11386, file: !11026, line: 591, type: !11389)
!11400 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11386, file: !11026, line: 591, type: !110)
!11401 = !DILocalVariable(name: "tickstart", scope: !11386, file: !11026, line: 593, type: !110)
!11402 = !DILocation(line: 0, scope: !11386)
!11403 = !DILocation(line: 596, column: 24, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11386, file: !11026, line: 596, column: 6)
!11405 = !DILocation(line: 596, column: 6, scope: !11386)
!11406 = !DILocation(line: 610, column: 17, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11386, file: !11026, line: 610, column: 6)
!11408 = !DILocation(line: 610, column: 15, scope: !11407)
!11409 = !DILocation(line: 610, column: 6, scope: !11386)
!11410 = !DILocation(line: 613, column: 5, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11407, file: !11026, line: 611, column: 3)
!11412 = !DILocation(line: 617, column: 8, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11411, file: !11026, line: 617, column: 8)
!11414 = !DILocation(line: 617, column: 34, scope: !11413)
!11415 = !DILocation(line: 617, column: 8, scope: !11411)
!11416 = !DILocation(line: 624, column: 27, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11386, file: !11026, line: 624, column: 6)
!11418 = !DILocation(line: 624, column: 38, scope: !11417)
!11419 = !DILocation(line: 624, column: 60, scope: !11417)
!11420 = !DILocation(line: 624, column: 6, scope: !11386)
!11421 = !DILocation(line: 628, column: 40, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11423, file: !11026, line: 628, column: 8)
!11423 = distinct !DILexicalBlock(scope: !11417, file: !11026, line: 625, column: 3)
!11424 = !DILocation(line: 628, column: 63, scope: !11422)
!11425 = !DILocation(line: 628, column: 8, scope: !11423)
!11426 = !DILocation(line: 630, column: 7, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11422, file: !11026, line: 629, column: 5)
!11428 = !DILocation(line: 633, column: 29, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11423, file: !11026, line: 633, column: 8)
!11430 = !DILocation(line: 631, column: 5, scope: !11427)
!11431 = !DILocation(line: 633, column: 40, scope: !11429)
!11432 = !DILocation(line: 633, column: 63, scope: !11429)
!11433 = !DILocation(line: 633, column: 8, scope: !11423)
!11434 = !DILocation(line: 635, column: 7, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11429, file: !11026, line: 634, column: 5)
!11436 = !DILocation(line: 636, column: 5, scope: !11435)
!11437 = !DILocation(line: 639, column: 5, scope: !11423)
!11438 = !DILocation(line: 643, column: 27, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11386, file: !11026, line: 643, column: 6)
!11440 = !DILocation(line: 640, column: 3, scope: !11423)
!11441 = !DILocation(line: 643, column: 38, scope: !11439)
!11442 = !DILocation(line: 643, column: 62, scope: !11439)
!11443 = !DILocation(line: 643, column: 6, scope: !11386)
!11444 = !DILocation(line: 648, column: 27, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !11026, line: 648, column: 8)
!11446 = distinct !DILexicalBlock(scope: !11439, file: !11026, line: 644, column: 3)
!11447 = !DILocation(line: 648, column: 8, scope: !11446)
!11448 = !DILocation(line: 651, column: 10, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11450, file: !11026, line: 651, column: 10)
!11450 = distinct !DILexicalBlock(scope: !11445, file: !11026, line: 649, column: 5)
!11451 = !DILocation(line: 651, column: 46, scope: !11449)
!11452 = !DILocation(line: 651, column: 10, scope: !11450)
!11453 = !DILocation(line: 661, column: 10, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11455, file: !11026, line: 661, column: 10)
!11455 = distinct !DILexicalBlock(scope: !11456, file: !11026, line: 659, column: 5)
!11456 = distinct !DILexicalBlock(scope: !11445, file: !11026, line: 657, column: 13)
!11457 = !DILocation(line: 661, column: 46, scope: !11454)
!11458 = !DILocation(line: 661, column: 10, scope: !11455)
!11459 = !DILocation(line: 670, column: 10, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !11026, line: 670, column: 10)
!11461 = distinct !DILexicalBlock(scope: !11456, file: !11026, line: 668, column: 5)
!11462 = !DILocation(line: 670, column: 46, scope: !11460)
!11463 = !DILocation(line: 670, column: 10, scope: !11461)
!11464 = !DILocation(line: 676, column: 5, scope: !11446)
!11465 = !DILocation(line: 679, column: 17, scope: !11446)
!11466 = !DILocation(line: 681, column: 5, scope: !11446)
!11467 = !DILocation(line: 681, column: 12, scope: !11446)
!11468 = !DILocation(line: 681, column: 65, scope: !11446)
!11469 = !DILocation(line: 681, column: 78, scope: !11446)
!11470 = !DILocation(line: 681, column: 42, scope: !11446)
!11471 = !DILocation(line: 683, column: 12, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11473, file: !11026, line: 683, column: 11)
!11473 = distinct !DILexicalBlock(scope: !11446, file: !11026, line: 682, column: 5)
!11474 = !DILocation(line: 683, column: 26, scope: !11472)
!11475 = !DILocation(line: 683, column: 39, scope: !11472)
!11476 = !DILocation(line: 683, column: 11, scope: !11473)
!11477 = distinct !{!11477, !11466, !11478}
!11478 = !DILocation(line: 687, column: 5, scope: !11446)
!11479 = !DILocation(line: 691, column: 17, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11386, file: !11026, line: 691, column: 6)
!11481 = !DILocation(line: 691, column: 15, scope: !11480)
!11482 = !DILocation(line: 691, column: 6, scope: !11386)
!11483 = !DILocation(line: 694, column: 5, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11480, file: !11026, line: 692, column: 3)
!11485 = !DILocation(line: 698, column: 8, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11484, file: !11026, line: 698, column: 8)
!11487 = !DILocation(line: 698, column: 34, scope: !11486)
!11488 = !DILocation(line: 698, column: 8, scope: !11484)
!11489 = !DILocation(line: 705, column: 27, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11386, file: !11026, line: 705, column: 6)
!11491 = !DILocation(line: 705, column: 38, scope: !11490)
!11492 = !DILocation(line: 705, column: 61, scope: !11490)
!11493 = !DILocation(line: 705, column: 6, scope: !11386)
!11494 = !DILocation(line: 708, column: 5, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11490, file: !11026, line: 706, column: 3)
!11496 = !DILocation(line: 712, column: 27, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11386, file: !11026, line: 712, column: 6)
!11498 = !DILocation(line: 709, column: 3, scope: !11495)
!11499 = !DILocation(line: 712, column: 38, scope: !11497)
!11500 = !DILocation(line: 712, column: 61, scope: !11497)
!11501 = !DILocation(line: 712, column: 6, scope: !11386)
!11502 = !DILocation(line: 715, column: 5, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11497, file: !11026, line: 713, column: 3)
!11504 = !DILocation(line: 716, column: 3, scope: !11503)
!11505 = !DILocation(line: 719, column: 21, scope: !11386)
!11506 = !DILocation(line: 719, column: 70, scope: !11386)
!11507 = !DILocation(line: 719, column: 91, scope: !11386)
!11508 = !DILocation(line: 719, column: 50, scope: !11386)
!11509 = !DILocation(line: 719, column: 47, scope: !11386)
!11510 = !DILocation(line: 719, column: 19, scope: !11386)
!11511 = !DILocation(line: 722, column: 17, scope: !11386)
!11512 = !DILocation(line: 722, column: 3, scope: !11386)
!11513 = !DILocation(line: 724, column: 3, scope: !11386)
!11514 = !DILocation(line: 725, column: 1, scope: !11386)
!11515 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11026, file: !11026, line: 885, type: !6470, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !11516)
!11516 = !{!11517, !11518, !11519, !11520}
!11517 = !DILocalVariable(name: "pllm", scope: !11515, file: !11026, line: 887, type: !110)
!11518 = !DILocalVariable(name: "pllvco", scope: !11515, file: !11026, line: 887, type: !110)
!11519 = !DILocalVariable(name: "pllp", scope: !11515, file: !11026, line: 887, type: !110)
!11520 = !DILocalVariable(name: "sysclockfreq", scope: !11515, file: !11026, line: 888, type: !110)
!11521 = !DILocation(line: 0, scope: !11515)
!11522 = !DILocation(line: 891, column: 16, scope: !11515)
!11523 = !DILocation(line: 891, column: 21, scope: !11515)
!11524 = !DILocation(line: 891, column: 3, scope: !11515)
!11525 = !DILocation(line: 901, column: 7, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11527, file: !11026, line: 899, column: 5)
!11527 = distinct !DILexicalBlock(scope: !11515, file: !11026, line: 892, column: 3)
!11528 = !DILocation(line: 907, column: 19, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11527, file: !11026, line: 904, column: 5)
!11530 = !DILocation(line: 907, column: 27, scope: !11529)
!11531 = !DILocation(line: 908, column: 10, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11529, file: !11026, line: 908, column: 10)
!11533 = !DILocation(line: 908, column: 40, scope: !11532)
!11534 = !DILocation(line: 0, scope: !11532)
!11535 = !DILocation(line: 908, column: 10, scope: !11529)
!11536 = !DILocation(line: 911, column: 53, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11532, file: !11026, line: 909, column: 7)
!11538 = !DILocation(line: 911, column: 130, scope: !11537)
!11539 = !DILocation(line: 912, column: 7, scope: !11537)
!11540 = !DILocation(line: 916, column: 56, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11532, file: !11026, line: 914, column: 7)
!11542 = !DILocation(line: 916, column: 53, scope: !11541)
!11543 = !DILocation(line: 916, column: 132, scope: !11541)
!11544 = !DILocation(line: 916, column: 130, scope: !11541)
!11545 = !DILocation(line: 916, column: 18, scope: !11541)
!11546 = !DILocation(line: 918, column: 23, scope: !11529)
!11547 = !DILocation(line: 918, column: 82, scope: !11529)
!11548 = !DILocation(line: 920, column: 28, scope: !11529)
!11549 = !DILocation(line: 921, column: 7, scope: !11529)
!11550 = !DILocation(line: 0, scope: !11527)
!11551 = !DILocation(line: 929, column: 3, scope: !11515)
!11552 = !DISubprogram(name: "HAL_InitTick", scope: !11385, file: !11385, line: 223, type: !11553, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2002)
!11553 = !DISubroutineType(types: !11554)
!11554 = !{!11029, !110}
!11555 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11026, file: !11026, line: 775, type: !11556, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !11558)
!11556 = !DISubroutineType(types: !11557)
!11557 = !{null, !110, !110, !110}
!11558 = !{!11559, !11560, !11561, !11562, !11572, !11576}
!11559 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11555, file: !11026, line: 775, type: !110)
!11560 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11555, file: !11026, line: 775, type: !110)
!11561 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11555, file: !11026, line: 775, type: !110)
!11562 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11555, file: !11026, line: 777, type: !11563)
!11563 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11564, line: 62, baseType: !11565)
!11564 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11564, line: 46, size: 160, elements: !11566)
!11566 = !{!11567, !11568, !11569, !11570, !11571}
!11567 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11565, file: !11564, line: 48, baseType: !110, size: 32)
!11568 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11565, file: !11564, line: 51, baseType: !110, size: 32, offset: 32)
!11569 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11565, file: !11564, line: 54, baseType: !110, size: 32, offset: 64)
!11570 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11565, file: !11564, line: 57, baseType: !110, size: 32, offset: 96)
!11571 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11565, file: !11564, line: 60, baseType: !110, size: 32, offset: 128)
!11572 = !DILocalVariable(name: "tmpreg", scope: !11573, file: !11026, line: 787, type: !316)
!11573 = distinct !DILexicalBlock(scope: !11574, file: !11026, line: 787, column: 5)
!11574 = distinct !DILexicalBlock(scope: !11575, file: !11026, line: 783, column: 3)
!11575 = distinct !DILexicalBlock(scope: !11555, file: !11026, line: 782, column: 6)
!11576 = !DILocalVariable(name: "tmpreg", scope: !11577, file: !11026, line: 811, type: !316)
!11577 = distinct !DILexicalBlock(scope: !11578, file: !11026, line: 811, column: 5)
!11578 = distinct !DILexicalBlock(scope: !11575, file: !11026, line: 807, column: 3)
!11579 = !DILocation(line: 0, scope: !11555)
!11580 = !DILocation(line: 777, column: 3, scope: !11555)
!11581 = !DILocation(line: 777, column: 20, scope: !11555)
!11582 = !DILocation(line: 782, column: 15, scope: !11575)
!11583 = !DILocation(line: 782, column: 6, scope: !11555)
!11584 = !DILocation(line: 787, column: 5, scope: !11573)
!11585 = !DILocation(line: 787, column: 5, scope: !11574)
!11586 = !DILocation(line: 790, column: 21, scope: !11574)
!11587 = !DILocation(line: 790, column: 25, scope: !11574)
!11588 = !DILocation(line: 791, column: 21, scope: !11574)
!11589 = !DILocation(line: 791, column: 26, scope: !11574)
!11590 = !DILocation(line: 792, column: 21, scope: !11574)
!11591 = !DILocation(line: 792, column: 27, scope: !11574)
!11592 = !DILocation(line: 793, column: 21, scope: !11574)
!11593 = !DILocation(line: 793, column: 26, scope: !11574)
!11594 = !DILocation(line: 794, column: 21, scope: !11574)
!11595 = !DILocation(line: 794, column: 31, scope: !11574)
!11596 = !DILocation(line: 795, column: 5, scope: !11574)
!11597 = !DILocation(line: 798, column: 5, scope: !11574)
!11598 = !DILocation(line: 804, column: 3, scope: !11574)
!11599 = !DILocation(line: 811, column: 5, scope: !11577)
!11600 = !DILocation(line: 811, column: 5, scope: !11578)
!11601 = !DILocation(line: 814, column: 21, scope: !11578)
!11602 = !DILocation(line: 814, column: 25, scope: !11578)
!11603 = !DILocation(line: 815, column: 21, scope: !11578)
!11604 = !DILocation(line: 815, column: 26, scope: !11578)
!11605 = !DILocation(line: 816, column: 21, scope: !11578)
!11606 = !DILocation(line: 816, column: 27, scope: !11578)
!11607 = !DILocation(line: 817, column: 21, scope: !11578)
!11608 = !DILocation(line: 817, column: 26, scope: !11578)
!11609 = !DILocation(line: 818, column: 21, scope: !11578)
!11610 = !DILocation(line: 818, column: 31, scope: !11578)
!11611 = !DILocation(line: 819, column: 5, scope: !11578)
!11612 = !DILocation(line: 822, column: 5, scope: !11578)
!11613 = !DILocation(line: 0, scope: !11575)
!11614 = !DILocation(line: 830, column: 1, scope: !11555)
!11615 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11564, file: !11564, line: 224, type: !11616, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2002)
!11616 = !DISubroutineType(types: !11617)
!11617 = !{null, !2952, !11618}
!11618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11563, size: 32)
!11619 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11026, file: !11026, line: 841, type: !3070, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2002)
!11620 = !DILocation(line: 843, column: 38, scope: !11619)
!11621 = !DILocation(line: 844, column: 1, scope: !11619)
!11622 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11026, file: !11026, line: 850, type: !3070, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2002)
!11623 = !DILocation(line: 852, column: 38, scope: !11622)
!11624 = !DILocation(line: 853, column: 1, scope: !11622)
!11625 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11026, file: !11026, line: 941, type: !6470, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2002)
!11626 = !DILocation(line: 943, column: 10, scope: !11625)
!11627 = !DILocation(line: 943, column: 3, scope: !11625)
!11628 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11026, file: !11026, line: 952, type: !6470, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2002)
!11629 = !DILocation(line: 955, column: 11, scope: !11628)
!11630 = !DILocation(line: 955, column: 56, scope: !11628)
!11631 = !DILocation(line: 955, column: 78, scope: !11628)
!11632 = !DILocation(line: 955, column: 36, scope: !11628)
!11633 = !DILocation(line: 955, column: 33, scope: !11628)
!11634 = !DILocation(line: 955, column: 3, scope: !11628)
!11635 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11026, file: !11026, line: 964, type: !6470, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2002)
!11636 = !DILocation(line: 967, column: 11, scope: !11635)
!11637 = !DILocation(line: 967, column: 55, scope: !11635)
!11638 = !DILocation(line: 967, column: 77, scope: !11635)
!11639 = !DILocation(line: 967, column: 35, scope: !11635)
!11640 = !DILocation(line: 967, column: 32, scope: !11635)
!11641 = !DILocation(line: 967, column: 3, scope: !11635)
!11642 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11026, file: !11026, line: 977, type: !11643, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !11645)
!11643 = !DISubroutineType(types: !11644)
!11644 = !{null, !11034}
!11645 = !{!11646}
!11646 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11642, file: !11026, line: 977, type: !11034)
!11647 = !DILocation(line: 0, scope: !11642)
!11648 = !DILocation(line: 980, column: 22, scope: !11642)
!11649 = !DILocation(line: 980, column: 37, scope: !11642)
!11650 = !DILocation(line: 983, column: 12, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11642, file: !11026, line: 983, column: 6)
!11652 = !DILocation(line: 983, column: 15, scope: !11651)
!11653 = !DILocation(line: 983, column: 31, scope: !11651)
!11654 = !DILocation(line: 983, column: 6, scope: !11642)
!11655 = !DILocation(line: 985, column: 24, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11651, file: !11026, line: 984, column: 3)
!11657 = !DILocation(line: 985, column: 33, scope: !11656)
!11658 = !DILocation(line: 986, column: 3, scope: !11656)
!11659 = !DILocation(line: 987, column: 17, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11651, file: !11026, line: 987, column: 11)
!11661 = !DILocation(line: 987, column: 20, scope: !11660)
!11662 = !DILocation(line: 987, column: 35, scope: !11660)
!11663 = !DILocation(line: 0, scope: !11660)
!11664 = !DILocation(line: 987, column: 11, scope: !11651)
!11665 = !DILocation(line: 989, column: 33, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11660, file: !11026, line: 988, column: 3)
!11667 = !DILocation(line: 990, column: 3, scope: !11666)
!11668 = !DILocation(line: 993, column: 33, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11660, file: !11026, line: 992, column: 3)
!11670 = !DILocation(line: 997, column: 12, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11642, file: !11026, line: 997, column: 6)
!11672 = !DILocation(line: 997, column: 15, scope: !11671)
!11673 = !DILocation(line: 1003, column: 24, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11671, file: !11026, line: 1002, column: 3)
!11675 = !DILocation(line: 1003, column: 33, scope: !11674)
!11676 = !DILocation(line: 1006, column: 61, scope: !11642)
!11677 = !DILocation(line: 1006, column: 81, scope: !11642)
!11678 = !DILocation(line: 1006, column: 22, scope: !11642)
!11679 = !DILocation(line: 1006, column: 42, scope: !11642)
!11680 = !DILocation(line: 1009, column: 12, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11642, file: !11026, line: 1009, column: 6)
!11682 = !DILocation(line: 1009, column: 17, scope: !11681)
!11683 = !DILocation(line: 1009, column: 35, scope: !11681)
!11684 = !DILocation(line: 1009, column: 6, scope: !11642)
!11685 = !DILocation(line: 1011, column: 24, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11681, file: !11026, line: 1010, column: 3)
!11687 = !DILocation(line: 1011, column: 33, scope: !11686)
!11688 = !DILocation(line: 1012, column: 3, scope: !11686)
!11689 = !DILocation(line: 1013, column: 17, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11681, file: !11026, line: 1013, column: 11)
!11691 = !DILocation(line: 1013, column: 22, scope: !11690)
!11692 = !DILocation(line: 1013, column: 39, scope: !11690)
!11693 = !DILocation(line: 0, scope: !11690)
!11694 = !DILocation(line: 1013, column: 11, scope: !11681)
!11695 = !DILocation(line: 1015, column: 33, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11690, file: !11026, line: 1014, column: 3)
!11697 = !DILocation(line: 1016, column: 3, scope: !11696)
!11698 = !DILocation(line: 1019, column: 33, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11690, file: !11026, line: 1018, column: 3)
!11700 = !DILocation(line: 1023, column: 12, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11642, file: !11026, line: 1023, column: 6)
!11702 = !DILocation(line: 1023, column: 16, scope: !11701)
!11703 = !DILocation(line: 1029, column: 24, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11701, file: !11026, line: 1028, column: 3)
!11705 = !DILocation(line: 1029, column: 33, scope: !11704)
!11706 = !DILocation(line: 1033, column: 12, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11642, file: !11026, line: 1033, column: 6)
!11708 = !DILocation(line: 1033, column: 15, scope: !11707)
!11709 = !DILocation(line: 1033, column: 30, scope: !11707)
!11710 = !DILocation(line: 1033, column: 6, scope: !11642)
!11711 = !DILocation(line: 1039, column: 28, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11707, file: !11026, line: 1038, column: 3)
!11713 = !DILocation(line: 1039, column: 37, scope: !11712)
!11714 = !DILocation(line: 1041, column: 54, scope: !11642)
!11715 = !DILocation(line: 1041, column: 62, scope: !11642)
!11716 = !DILocation(line: 1041, column: 26, scope: !11642)
!11717 = !DILocation(line: 1041, column: 36, scope: !11642)
!11718 = !DILocation(line: 1042, column: 49, scope: !11642)
!11719 = !DILocation(line: 1042, column: 57, scope: !11642)
!11720 = !DILocation(line: 1042, column: 26, scope: !11642)
!11721 = !DILocation(line: 1042, column: 31, scope: !11642)
!11722 = !DILocation(line: 1043, column: 50, scope: !11642)
!11723 = !DILocation(line: 1043, column: 78, scope: !11642)
!11724 = !DILocation(line: 1043, column: 26, scope: !11642)
!11725 = !DILocation(line: 1043, column: 31, scope: !11642)
!11726 = !DILocation(line: 1044, column: 52, scope: !11642)
!11727 = !DILocation(line: 1044, column: 102, scope: !11642)
!11728 = !DILocation(line: 1044, column: 109, scope: !11642)
!11729 = !DILocation(line: 1044, column: 26, scope: !11642)
!11730 = !DILocation(line: 1044, column: 31, scope: !11642)
!11731 = !DILocation(line: 1045, column: 50, scope: !11642)
!11732 = !DILocation(line: 1045, column: 78, scope: !11642)
!11733 = !DILocation(line: 1045, column: 26, scope: !11642)
!11734 = !DILocation(line: 1045, column: 31, scope: !11642)
!11735 = !DILocation(line: 1046, column: 1, scope: !11642)
!11736 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11026, file: !11026, line: 1056, type: !11737, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !11739)
!11737 = !DISubroutineType(types: !11738)
!11738 = !{null, !11389, !864}
!11739 = !{!11740, !11741}
!11740 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11736, file: !11026, line: 1056, type: !11389)
!11741 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11736, file: !11026, line: 1056, type: !864)
!11742 = !DILocation(line: 0, scope: !11736)
!11743 = !DILocation(line: 1059, column: 22, scope: !11736)
!11744 = !DILocation(line: 1059, column: 32, scope: !11736)
!11745 = !DILocation(line: 1062, column: 53, scope: !11736)
!11746 = !DILocation(line: 1062, column: 58, scope: !11736)
!11747 = !DILocation(line: 1062, column: 22, scope: !11736)
!11748 = !DILocation(line: 1062, column: 35, scope: !11736)
!11749 = !DILocation(line: 1065, column: 54, scope: !11736)
!11750 = !DILocation(line: 1065, column: 59, scope: !11736)
!11751 = !DILocation(line: 1065, column: 22, scope: !11736)
!11752 = !DILocation(line: 1065, column: 36, scope: !11736)
!11753 = !DILocation(line: 1068, column: 55, scope: !11736)
!11754 = !DILocation(line: 1068, column: 60, scope: !11736)
!11755 = !DILocation(line: 1068, column: 22, scope: !11736)
!11756 = !DILocation(line: 1068, column: 37, scope: !11736)
!11757 = !DILocation(line: 1071, column: 56, scope: !11736)
!11758 = !DILocation(line: 1071, column: 79, scope: !11736)
!11759 = !DILocation(line: 1071, column: 22, scope: !11736)
!11760 = !DILocation(line: 1071, column: 37, scope: !11736)
!11761 = !DILocation(line: 1074, column: 34, scope: !11736)
!11762 = !DILocation(line: 1074, column: 38, scope: !11736)
!11763 = !DILocation(line: 1074, column: 14, scope: !11736)
!11764 = !DILocation(line: 1075, column: 1, scope: !11736)
!11765 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11026, file: !11026, line: 1082, type: !3070, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2002)
!11766 = !DILocation(line: 1085, column: 6, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11765, file: !11026, line: 1085, column: 6)
!11768 = !DILocation(line: 1085, column: 6, scope: !11765)
!11769 = !DILocation(line: 1088, column: 5, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11767, file: !11026, line: 1086, column: 3)
!11771 = !DILocation(line: 1091, column: 5, scope: !11770)
!11772 = !DILocation(line: 1092, column: 3, scope: !11770)
!11773 = !DILocation(line: 1093, column: 1, scope: !11765)
!11774 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11026, file: !11026, line: 1099, type: !3070, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !2002)
!11775 = !DILocation(line: 1104, column: 1, scope: !11774)
!11776 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11777, file: !11777, line: 257, type: !6480, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !11778)
!11777 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11778 = !{!11779}
!11779 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11776, file: !11777, line: 257, type: !110)
!11780 = !DILocation(line: 0, scope: !11776)
!11781 = !DILocation(line: 260, column: 3, scope: !11776)
!11782 = !DILocation(line: 261, column: 1, scope: !11776)
!11783 = distinct !DISubprogram(name: "LL_InitTick", scope: !11784, file: !11784, line: 260, type: !9383, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !11785)
!11784 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11785 = !{!11786, !11787}
!11786 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11783, file: !11784, line: 260, type: !110)
!11787 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11783, file: !11784, line: 260, type: !110)
!11788 = !DILocation(line: 0, scope: !11783)
!11789 = !DILocation(line: 263, column: 46, scope: !11783)
!11790 = !DILocation(line: 263, column: 55, scope: !11783)
!11791 = !DILocation(line: 263, column: 18, scope: !11783)
!11792 = !DILocation(line: 264, column: 18, scope: !11783)
!11793 = !DILocation(line: 265, column: 18, scope: !11783)
!11794 = !DILocation(line: 267, column: 1, scope: !11783)
!11795 = distinct !DISubprogram(name: "LL_mDelay", scope: !11777, file: !11777, line: 273, type: !6480, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !11796)
!11796 = !{!11797, !11798}
!11797 = !DILocalVariable(name: "Delay", arg: 1, scope: !11795, file: !11777, line: 273, type: !110)
!11798 = !DILocalVariable(name: "tmp", scope: !11795, file: !11777, line: 275, type: !316)
!11799 = !DILocation(line: 0, scope: !11795)
!11800 = !DILocation(line: 275, column: 3, scope: !11795)
!11801 = !DILocation(line: 275, column: 18, scope: !11795)
!11802 = !DILocation(line: 275, column: 33, scope: !11795)
!11803 = !DILocation(line: 277, column: 10, scope: !11795)
!11804 = !DILocation(line: 280, column: 12, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11795, file: !11777, line: 280, column: 6)
!11806 = !DILocation(line: 285, column: 3, scope: !11795)
!11807 = !DILocation(line: 287, column: 18, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11809, file: !11777, line: 287, column: 8)
!11809 = distinct !DILexicalBlock(scope: !11795, file: !11777, line: 286, column: 3)
!11810 = !DILocation(line: 292, column: 1, scope: !11795)
!11811 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11777, file: !11777, line: 323, type: !6480, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !11812)
!11812 = !{!11813}
!11813 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11811, file: !11777, line: 323, type: !110)
!11814 = !DILocation(line: 0, scope: !11811)
!11815 = !DILocation(line: 326, column: 19, scope: !11811)
!11816 = !DILocation(line: 327, column: 1, scope: !11811)
!11817 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11777, file: !11777, line: 338, type: !11818, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !11821)
!11818 = !DISubroutineType(types: !11819)
!11819 = !{!11820, !110}
!11820 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !808, line: 201, baseType: !807)
!11821 = !{!11822, !11823, !11824, !11825, !11826}
!11822 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11817, file: !11777, line: 338, type: !110)
!11823 = !DILocalVariable(name: "timeout", scope: !11817, file: !11777, line: 340, type: !110)
!11824 = !DILocalVariable(name: "getlatency", scope: !11817, file: !11777, line: 341, type: !110)
!11825 = !DILocalVariable(name: "latency", scope: !11817, file: !11777, line: 342, type: !110)
!11826 = !DILocalVariable(name: "status", scope: !11817, file: !11777, line: 343, type: !11820)
!11827 = !DILocation(line: 0, scope: !11817)
!11828 = !DILocation(line: 347, column: 21, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11817, file: !11777, line: 347, column: 6)
!11830 = !DILocation(line: 347, column: 6, scope: !11817)
!11831 = !DILocation(line: 353, column: 8, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11833, file: !11777, line: 353, column: 8)
!11833 = distinct !DILexicalBlock(scope: !11829, file: !11777, line: 352, column: 3)
!11834 = !DILocation(line: 353, column: 40, scope: !11832)
!11835 = !DILocation(line: 353, column: 8, scope: !11833)
!11836 = !DILocation(line: 374, column: 55, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11838, file: !11777, line: 374, column: 10)
!11838 = distinct !DILexicalBlock(scope: !11832, file: !11777, line: 354, column: 5)
!11839 = !DILocation(line: 368, column: 26, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11838, file: !11777, line: 368, column: 10)
!11841 = !DILocation(line: 368, column: 55, scope: !11840)
!11842 = !DILocation(line: 380, column: 57, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11844, file: !11777, line: 380, column: 12)
!11844 = distinct !DILexicalBlock(scope: !11837, file: !11777, line: 379, column: 7)
!11845 = !DILocation(line: 387, column: 8, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11833, file: !11777, line: 387, column: 8)
!11847 = !DILocation(line: 387, column: 40, scope: !11846)
!11848 = !DILocation(line: 387, column: 8, scope: !11833)
!11849 = !DILocation(line: 407, column: 26, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11851, file: !11777, line: 407, column: 10)
!11851 = distinct !DILexicalBlock(scope: !11846, file: !11777, line: 388, column: 5)
!11852 = !DILocation(line: 407, column: 55, scope: !11850)
!11853 = !DILocation(line: 413, column: 28, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !11777, line: 413, column: 12)
!11855 = distinct !DILexicalBlock(scope: !11850, file: !11777, line: 412, column: 7)
!11856 = !DILocation(line: 413, column: 57, scope: !11854)
!11857 = !DILocation(line: 0, scope: !11833)
!11858 = !DILocation(line: 420, column: 8, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11833, file: !11777, line: 420, column: 8)
!11860 = !DILocation(line: 420, column: 40, scope: !11859)
!11861 = !DILocation(line: 420, column: 8, scope: !11833)
!11862 = !DILocation(line: 429, column: 26, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11864, file: !11777, line: 429, column: 10)
!11864 = distinct !DILexicalBlock(scope: !11859, file: !11777, line: 421, column: 5)
!11865 = !DILocation(line: 429, column: 55, scope: !11863)
!11866 = !DILocation(line: 435, column: 28, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11868, file: !11777, line: 435, column: 12)
!11868 = distinct !DILexicalBlock(scope: !11863, file: !11777, line: 434, column: 7)
!11869 = !DILocation(line: 435, column: 57, scope: !11867)
!11870 = !DILocation(line: 444, column: 5, scope: !11833)
!11871 = !DILocation(line: 448, column: 5, scope: !11833)
!11872 = !DILocation(line: 451, column: 18, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11833, file: !11777, line: 449, column: 5)
!11874 = !DILocation(line: 452, column: 12, scope: !11873)
!11875 = !DILocation(line: 453, column: 26, scope: !11833)
!11876 = !DILocation(line: 453, column: 38, scope: !11833)
!11877 = !DILocation(line: 453, column: 5, scope: !11873)
!11878 = distinct !{!11878, !11871, !11879}
!11879 = !DILocation(line: 453, column: 54, scope: !11833)
!11880 = !DILocation(line: 0, scope: !11829)
!11881 = !DILocation(line: 464, column: 3, scope: !11817)
!11882 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11883, file: !11883, line: 519, type: !6470, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!11883 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11884 = !DILocation(line: 521, column: 21, scope: !11882)
!11885 = !DILocation(line: 521, column: 3, scope: !11882)
!11886 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6083, file: !6083, line: 1543, type: !6480, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !11887)
!11887 = !{!11888}
!11888 = !DILocalVariable(name: "Latency", arg: 1, scope: !11886, file: !6083, line: 1543, type: !110)
!11889 = !DILocation(line: 0, scope: !11886)
!11890 = !DILocation(line: 1545, column: 3, scope: !11886)
!11891 = !DILocation(line: 1546, column: 1, scope: !11886)
!11892 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6083, file: !6083, line: 1569, type: !6470, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!11893 = !DILocation(line: 1571, column: 21, scope: !11892)
!11894 = !DILocation(line: 1571, column: 3, scope: !11892)
!11895 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11777, file: !11777, line: 483, type: !11896, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !11912)
!11896 = !DISubroutineType(types: !11897)
!11897 = !{!11820, !11898, !11905}
!11898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11899, size: 32)
!11899 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11784, line: 114, baseType: !11900)
!11900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11784, line: 94, size: 96, elements: !11901)
!11901 = !{!11902, !11903, !11904}
!11902 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11900, file: !11784, line: 96, baseType: !110, size: 32)
!11903 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11900, file: !11784, line: 102, baseType: !110, size: 32, offset: 32)
!11904 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11900, file: !11784, line: 109, baseType: !110, size: 32, offset: 64)
!11905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11906, size: 32)
!11906 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11784, line: 139, baseType: !11907)
!11907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11784, line: 119, size: 96, elements: !11908)
!11908 = !{!11909, !11910, !11911}
!11909 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11907, file: !11784, line: 121, baseType: !110, size: 32)
!11910 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11907, file: !11784, line: 127, baseType: !110, size: 32, offset: 32)
!11911 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11907, file: !11784, line: 133, baseType: !110, size: 32, offset: 64)
!11912 = !{!11913, !11914, !11915, !11916}
!11913 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11895, file: !11777, line: 483, type: !11898)
!11914 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11895, file: !11777, line: 484, type: !11905)
!11915 = !DILocalVariable(name: "status", scope: !11895, file: !11777, line: 486, type: !11820)
!11916 = !DILocalVariable(name: "pllfreq", scope: !11895, file: !11777, line: 487, type: !110)
!11917 = !DILocation(line: 0, scope: !11895)
!11918 = !DILocation(line: 490, column: 6, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11895, file: !11777, line: 490, column: 6)
!11920 = !DILocation(line: 490, column: 25, scope: !11919)
!11921 = !DILocation(line: 490, column: 6, scope: !11895)
!11922 = !DILocation(line: 493, column: 15, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11919, file: !11777, line: 491, column: 3)
!11924 = !DILocation(line: 496, column: 8, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11923, file: !11777, line: 496, column: 8)
!11926 = !DILocation(line: 496, column: 29, scope: !11925)
!11927 = !DILocation(line: 496, column: 8, scope: !11923)
!11928 = !DILocation(line: 498, column: 7, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11925, file: !11777, line: 497, column: 5)
!11930 = !DILocation(line: 499, column: 7, scope: !11929)
!11931 = !DILocation(line: 499, column: 14, scope: !11929)
!11932 = !DILocation(line: 499, column: 35, scope: !11929)
!11933 = distinct !{!11933, !11930, !11934}
!11934 = !DILocation(line: 502, column: 7, scope: !11929)
!11935 = !DILocation(line: 506, column: 76, scope: !11923)
!11936 = !DILocation(line: 506, column: 103, scope: !11923)
!11937 = !DILocation(line: 507, column: 54, scope: !11923)
!11938 = !DILocation(line: 506, column: 5, scope: !11923)
!11939 = !DILocation(line: 510, column: 14, scope: !11923)
!11940 = !DILocation(line: 511, column: 3, scope: !11923)
!11941 = !DILocation(line: 0, scope: !11919)
!11942 = !DILocation(line: 518, column: 3, scope: !11895)
!11943 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11777, file: !11777, line: 642, type: !11944, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !11946)
!11944 = !DISubroutineType(types: !11945)
!11945 = !{!11820}
!11946 = !{!11947}
!11947 = !DILocalVariable(name: "status", scope: !11943, file: !11777, line: 644, type: !11820)
!11948 = !DILocation(line: 0, scope: !11943)
!11949 = !DILocation(line: 647, column: 6, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11943, file: !11777, line: 647, column: 6)
!11951 = !DILocation(line: 647, column: 27, scope: !11950)
!11952 = !DILocation(line: 663, column: 6, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11943, file: !11777, line: 663, column: 6)
!11954 = !DILocation(line: 663, column: 30, scope: !11953)
!11955 = !DILocation(line: 663, column: 6, scope: !11943)
!11956 = !DILocation(line: 669, column: 3, scope: !11943)
!11957 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11777, file: !11777, line: 611, type: !11958, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !11960)
!11958 = !DISubroutineType(types: !11959)
!11959 = !{!110, !110, !11898}
!11960 = !{!11961, !11962, !11963}
!11961 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11957, file: !11777, line: 611, type: !110)
!11962 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11957, file: !11777, line: 611, type: !11898)
!11963 = !DILocalVariable(name: "pllfreq", scope: !11957, file: !11777, line: 613, type: !110)
!11964 = !DILocation(line: 0, scope: !11957)
!11965 = !DILocation(line: 622, column: 56, scope: !11957)
!11966 = !DILocation(line: 622, column: 61, scope: !11957)
!11967 = !DILocation(line: 622, column: 32, scope: !11957)
!11968 = !DILocation(line: 626, column: 45, scope: !11957)
!11969 = !DILocation(line: 626, column: 50, scope: !11957)
!11970 = !DILocation(line: 626, column: 21, scope: !11957)
!11971 = !DILocation(line: 630, column: 47, scope: !11957)
!11972 = !DILocation(line: 630, column: 82, scope: !11957)
!11973 = !DILocation(line: 630, column: 21, scope: !11957)
!11974 = !DILocation(line: 633, column: 3, scope: !11957)
!11975 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8719, file: !8719, line: 3007, type: !6470, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!11976 = !DILocation(line: 3009, column: 11, scope: !11975)
!11977 = !DILocation(line: 3009, column: 44, scope: !11975)
!11978 = !DILocation(line: 3009, column: 3, scope: !11975)
!11979 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8719, file: !8719, line: 2987, type: !3070, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!11980 = !DILocation(line: 2989, column: 3, scope: !11979)
!11981 = !DILocation(line: 2990, column: 1, scope: !11979)
!11982 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8719, file: !8719, line: 4304, type: !8843, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !11983)
!11983 = !{!11984, !11985, !11986, !11987}
!11984 = !DILocalVariable(name: "Source", arg: 1, scope: !11982, file: !8719, line: 4304, type: !110)
!11985 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11982, file: !8719, line: 4304, type: !110)
!11986 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11982, file: !8719, line: 4304, type: !110)
!11987 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11982, file: !8719, line: 4304, type: !110)
!11988 = !DILocation(line: 0, scope: !11982)
!11989 = !DILocation(line: 4306, column: 3, scope: !11982)
!11990 = !DILocation(line: 4308, column: 3, scope: !11982)
!11991 = !DILocation(line: 4312, column: 1, scope: !11982)
!11992 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11777, file: !11777, line: 681, type: !11993, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !11995)
!11993 = !DISubroutineType(types: !11994)
!11994 = !{!11820, !110, !11905}
!11995 = !{!11996, !11997, !11998, !11999}
!11996 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11992, file: !11777, line: 681, type: !110)
!11997 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11992, file: !11777, line: 681, type: !11905)
!11998 = !DILocalVariable(name: "status", scope: !11992, file: !11777, line: 683, type: !11820)
!11999 = !DILocalVariable(name: "hclk_frequency", scope: !11992, file: !11777, line: 684, type: !110)
!12000 = !DILocation(line: 0, scope: !11992)
!12001 = !DILocation(line: 691, column: 20, scope: !11992)
!12002 = !DILocation(line: 694, column: 6, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !11992, file: !11777, line: 694, column: 6)
!12004 = !DILocation(line: 694, column: 22, scope: !12003)
!12005 = !DILocation(line: 694, column: 6, scope: !11992)
!12006 = !DILocation(line: 697, column: 14, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12003, file: !11777, line: 695, column: 3)
!12008 = !DILocation(line: 701, column: 13, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11992, file: !11777, line: 701, column: 6)
!12010 = !DILocation(line: 701, column: 6, scope: !11992)
!12011 = !DILocation(line: 704, column: 5, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12009, file: !11777, line: 702, column: 3)
!12013 = !DILocation(line: 705, column: 5, scope: !12012)
!12014 = !DILocation(line: 705, column: 12, scope: !12012)
!12015 = !DILocation(line: 705, column: 33, scope: !12012)
!12016 = distinct !{!12016, !12013, !12017}
!12017 = !DILocation(line: 708, column: 5, scope: !12012)
!12018 = !DILocation(line: 711, column: 49, scope: !12012)
!12019 = !DILocation(line: 711, column: 5, scope: !12012)
!12020 = !DILocation(line: 712, column: 5, scope: !12012)
!12021 = !DILocation(line: 713, column: 5, scope: !12012)
!12022 = !DILocation(line: 713, column: 12, scope: !12012)
!12023 = !DILocation(line: 713, column: 37, scope: !12012)
!12024 = distinct !{!12024, !12021, !12025}
!12025 = !DILocation(line: 716, column: 5, scope: !12012)
!12026 = !DILocation(line: 719, column: 50, scope: !12012)
!12027 = !DILocation(line: 719, column: 5, scope: !12012)
!12028 = !DILocation(line: 720, column: 50, scope: !12012)
!12029 = !DILocation(line: 720, column: 5, scope: !12012)
!12030 = !DILocation(line: 721, column: 3, scope: !12012)
!12031 = !DILocation(line: 724, column: 6, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !11992, file: !11777, line: 724, column: 6)
!12033 = !DILocation(line: 724, column: 22, scope: !12032)
!12034 = !DILocation(line: 724, column: 6, scope: !11992)
!12035 = !DILocation(line: 727, column: 14, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12032, file: !11777, line: 725, column: 3)
!12037 = !DILocation(line: 728, column: 3, scope: !12036)
!12038 = !DILocation(line: 731, column: 13, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !11992, file: !11777, line: 731, column: 6)
!12040 = !DILocation(line: 731, column: 6, scope: !11992)
!12041 = !DILocation(line: 733, column: 5, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12039, file: !11777, line: 732, column: 3)
!12043 = !DILocation(line: 734, column: 3, scope: !12042)
!12044 = !DILocation(line: 736, column: 3, scope: !11992)
!12045 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8719, file: !8719, line: 4184, type: !3070, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!12046 = !DILocation(line: 4186, column: 3, scope: !12045)
!12047 = !DILocation(line: 4187, column: 1, scope: !12045)
!12048 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8719, file: !8719, line: 4205, type: !6470, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!12049 = !DILocation(line: 4207, column: 11, scope: !12048)
!12050 = !DILocation(line: 4207, column: 44, scope: !12048)
!12051 = !DILocation(line: 4207, column: 3, scope: !12048)
!12052 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8719, file: !8719, line: 3224, type: !6480, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !12053)
!12053 = !{!12054}
!12054 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12052, file: !8719, line: 3224, type: !110)
!12055 = !DILocation(line: 0, scope: !12052)
!12056 = !DILocation(line: 3226, column: 3, scope: !12052)
!12057 = !DILocation(line: 3227, column: 1, scope: !12052)
!12058 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8719, file: !8719, line: 3188, type: !6480, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !12059)
!12059 = !{!12060}
!12060 = !DILocalVariable(name: "Source", arg: 1, scope: !12058, file: !8719, line: 3188, type: !110)
!12061 = !DILocation(line: 0, scope: !12058)
!12062 = !DILocation(line: 3190, column: 3, scope: !12058)
!12063 = !DILocation(line: 3191, column: 1, scope: !12058)
!12064 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8719, file: !8719, line: 3204, type: !6470, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!12065 = !DILocation(line: 3206, column: 21, scope: !12064)
!12066 = !DILocation(line: 3206, column: 3, scope: !12064)
!12067 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8719, file: !8719, line: 3240, type: !6480, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !12068)
!12068 = !{!12069}
!12069 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12067, file: !8719, line: 3240, type: !110)
!12070 = !DILocation(line: 0, scope: !12067)
!12071 = !DILocation(line: 3242, column: 3, scope: !12067)
!12072 = !DILocation(line: 3243, column: 1, scope: !12067)
!12073 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8719, file: !8719, line: 3256, type: !6480, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !12074)
!12074 = !{!12075}
!12075 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12073, file: !8719, line: 3256, type: !110)
!12076 = !DILocation(line: 0, scope: !12073)
!12077 = !DILocation(line: 3258, column: 3, scope: !12073)
!12078 = !DILocation(line: 3259, column: 1, scope: !12073)
!12079 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8719, file: !8719, line: 5153, type: !6470, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!12080 = !DILocation(line: 5155, column: 11, scope: !12079)
!12081 = !DILocation(line: 5155, column: 47, scope: !12079)
!12082 = !DILocation(line: 5155, column: 3, scope: !12079)
!12083 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11777, file: !11777, line: 540, type: !12084, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !12086)
!12084 = !DISubroutineType(types: !12085)
!12085 = !{!11820, !110, !110, !11898, !11905}
!12086 = !{!12087, !12088, !12089, !12090, !12091, !12092}
!12087 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12083, file: !11777, line: 540, type: !110)
!12088 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12083, file: !11777, line: 540, type: !110)
!12089 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12083, file: !11777, line: 541, type: !11898)
!12090 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12083, file: !11777, line: 541, type: !11905)
!12091 = !DILocalVariable(name: "status", scope: !12083, file: !11777, line: 543, type: !11820)
!12092 = !DILocalVariable(name: "pllfreq", scope: !12083, file: !11777, line: 544, type: !110)
!12093 = !DILocation(line: 0, scope: !12083)
!12094 = !DILocation(line: 551, column: 6, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12083, file: !11777, line: 551, column: 6)
!12096 = !DILocation(line: 551, column: 25, scope: !12095)
!12097 = !DILocation(line: 551, column: 6, scope: !12083)
!12098 = !DILocation(line: 554, column: 15, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12095, file: !11777, line: 552, column: 3)
!12100 = !DILocation(line: 557, column: 8, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12099, file: !11777, line: 557, column: 8)
!12102 = !DILocation(line: 557, column: 29, scope: !12101)
!12103 = !DILocation(line: 557, column: 8, scope: !12099)
!12104 = !DILocation(line: 560, column: 20, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12106, file: !11777, line: 560, column: 10)
!12106 = distinct !DILexicalBlock(scope: !12101, file: !11777, line: 558, column: 5)
!12107 = !DILocation(line: 560, column: 10, scope: !12106)
!12108 = !DILocation(line: 562, column: 9, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12105, file: !11777, line: 561, column: 7)
!12110 = !DILocation(line: 563, column: 7, scope: !12109)
!12111 = !DILocation(line: 566, column: 9, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12105, file: !11777, line: 565, column: 7)
!12113 = !DILocation(line: 570, column: 7, scope: !12106)
!12114 = !DILocation(line: 571, column: 7, scope: !12106)
!12115 = !DILocation(line: 571, column: 14, scope: !12106)
!12116 = !DILocation(line: 571, column: 35, scope: !12106)
!12117 = distinct !{!12117, !12114, !12118}
!12118 = !DILocation(line: 574, column: 7, scope: !12106)
!12119 = !DILocation(line: 578, column: 76, scope: !12099)
!12120 = !DILocation(line: 578, column: 103, scope: !12099)
!12121 = !DILocation(line: 579, column: 54, scope: !12099)
!12122 = !DILocation(line: 578, column: 5, scope: !12099)
!12123 = !DILocation(line: 582, column: 14, scope: !12099)
!12124 = !DILocation(line: 583, column: 3, scope: !12099)
!12125 = !DILocation(line: 0, scope: !12095)
!12126 = !DILocation(line: 590, column: 3, scope: !12083)
!12127 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8719, file: !8719, line: 2969, type: !6470, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!12128 = !DILocation(line: 2971, column: 11, scope: !12127)
!12129 = !DILocation(line: 2971, column: 44, scope: !12127)
!12130 = !DILocation(line: 2971, column: 3, scope: !12127)
!12131 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8719, file: !8719, line: 2929, type: !3070, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!12132 = !DILocation(line: 2931, column: 3, scope: !12131)
!12133 = !DILocation(line: 2932, column: 1, scope: !12131)
!12134 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8719, file: !8719, line: 2939, type: !3070, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!12135 = !DILocation(line: 2941, column: 3, scope: !12134)
!12136 = !DILocation(line: 2942, column: 1, scope: !12134)
!12137 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8719, file: !8719, line: 2949, type: !3070, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2965, retainedNodes: !2002)
!12138 = !DILocation(line: 2951, column: 3, scope: !12137)
!12139 = !DILocation(line: 2952, column: 1, scope: !12137)
!12140 = distinct !DISubprogram(name: "z_device_state_init", scope: !12141, file: !12141, line: 23, type: !3070, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !12142)
!12141 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12142 = !{!12143}
!12143 = !DILocalVariable(name: "dev", scope: !12140, file: !12141, line: 25, type: !12144)
!12144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12145, size: 32)
!12145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12146)
!12146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !12147)
!12147 = !{!12148, !12149, !12150, !12151, !12157, !12158}
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12146, file: !336, line: 380, baseType: !279, size: 32)
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12146, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!12150 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12146, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!12151 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12146, file: !336, line: 386, baseType: !12152, size: 32, offset: 96)
!12152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12153, size: 32)
!12153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !12154)
!12154 = !{!12155, !12156}
!12155 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12153, file: !336, line: 359, baseType: !180, size: 8)
!12156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12153, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12146, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12146, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!12159 = !DILocation(line: 0, scope: !12140)
!12160 = !DILocation(line: 31, column: 1, scope: !12140)
!12161 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12141, file: !12141, line: 33, type: !12162, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !12164)
!12162 = !DISubroutineType(types: !12163)
!12163 = !{!12144, !279}
!12164 = !{!12165, !12166}
!12165 = !DILocalVariable(name: "name", arg: 1, scope: !12161, file: !12141, line: 33, type: !279)
!12166 = !DILocalVariable(name: "dev", scope: !12161, file: !12141, line: 35, type: !12144)
!12167 = !DILocation(line: 0, scope: !12161)
!12168 = !DILocation(line: 40, column: 12, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12161, file: !12141, line: 40, column: 6)
!12170 = !DILocation(line: 40, column: 21, scope: !12169)
!12171 = !DILocation(line: 40, column: 25, scope: !12169)
!12172 = !DILocation(line: 40, column: 33, scope: !12169)
!12173 = !DILocation(line: 40, column: 6, scope: !12161)
!12174 = !DILocation(line: 55, column: 2, scope: !12175)
!12175 = distinct !DILexicalBlock(scope: !12161, file: !12141, line: 55, column: 2)
!12176 = !DILocation(line: 50, column: 7, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !12141, line: 50, column: 7)
!12178 = distinct !DILexicalBlock(scope: !12179, file: !12141, line: 49, column: 57)
!12179 = distinct !DILexicalBlock(scope: !12180, file: !12141, line: 49, column: 2)
!12180 = distinct !DILexicalBlock(scope: !12161, file: !12141, line: 49, column: 2)
!12181 = !DILocation(line: 50, column: 30, scope: !12177)
!12182 = !DILocation(line: 50, column: 39, scope: !12177)
!12183 = !DILocation(line: 50, column: 44, scope: !12177)
!12184 = !DILocation(line: 50, column: 7, scope: !12178)
!12185 = !DILocation(line: 49, column: 53, scope: !12179)
!12186 = !DILocation(line: 49, column: 33, scope: !12179)
!12187 = !DILocation(line: 49, column: 2, scope: !12180)
!12188 = distinct !{!12188, !12187, !12189}
!12189 = !DILocation(line: 53, column: 2, scope: !12180)
!12190 = !DILocation(line: 56, column: 7, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12192, file: !12141, line: 56, column: 7)
!12192 = distinct !DILexicalBlock(scope: !12193, file: !12141, line: 55, column: 57)
!12193 = distinct !DILexicalBlock(scope: !12175, file: !12141, line: 55, column: 2)
!12194 = !DILocation(line: 56, column: 30, scope: !12191)
!12195 = !DILocation(line: 56, column: 52, scope: !12191)
!12196 = !DILocation(line: 56, column: 34, scope: !12191)
!12197 = !DILocation(line: 56, column: 58, scope: !12191)
!12198 = !DILocation(line: 56, column: 7, scope: !12192)
!12199 = !DILocation(line: 55, column: 53, scope: !12193)
!12200 = !DILocation(line: 55, column: 33, scope: !12193)
!12201 = distinct !{!12201, !12174, !12202}
!12202 = !DILocation(line: 59, column: 2, scope: !12175)
!12203 = !DILocation(line: 62, column: 1, scope: !12161)
!12204 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12141, file: !12141, line: 93, type: !12205, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !12207)
!12205 = !DISubroutineType(types: !12206)
!12206 = !{!347, !12144}
!12207 = !{!12208}
!12208 = !DILocalVariable(name: "dev", arg: 1, scope: !12204, file: !12141, line: 93, type: !12144)
!12209 = !DILocation(line: 0, scope: !12204)
!12210 = !DILocation(line: 99, column: 10, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12204, file: !12141, line: 99, column: 6)
!12212 = !DILocation(line: 99, column: 6, scope: !12204)
!12213 = !DILocation(line: 103, column: 14, scope: !12204)
!12214 = !DILocation(line: 103, column: 21, scope: !12204)
!12215 = !DILocation(line: 103, column: 33, scope: !12204)
!12216 = !DILocation(line: 103, column: 49, scope: !12204)
!12217 = !DILocation(line: 103, column: 58, scope: !12204)
!12218 = !DILocation(line: 104, column: 1, scope: !12204)
!12219 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12141, file: !12141, line: 87, type: !12220, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !12223)
!12220 = !DISubroutineType(types: !12221)
!12221 = !{!234, !12222}
!12222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12144, size: 32)
!12223 = !{!12224}
!12224 = !DILocalVariable(name: "devices", arg: 1, scope: !12219, file: !12141, line: 87, type: !12222)
!12225 = !DILocation(line: 0, scope: !12219)
!12226 = !DILocation(line: 89, column: 11, scope: !12219)
!12227 = !DILocation(line: 90, column: 2, scope: !12219)
!12228 = distinct !DISubprogram(name: "device_required_foreach", scope: !12141, file: !12141, line: 125, type: !12229, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !12235)
!12229 = !DISubroutineType(types: !12230)
!12230 = !{!109, !12144, !12231, !107}
!12231 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !336, line: 471, baseType: !12232)
!12232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12233, size: 32)
!12233 = !DISubroutineType(types: !12234)
!12234 = !{!109, !12144, !107}
!12235 = !{!12236, !12237, !12238, !12239, !12240}
!12236 = !DILocalVariable(name: "dev", arg: 1, scope: !12228, file: !12141, line: 125, type: !12144)
!12237 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12228, file: !12141, line: 126, type: !12231)
!12238 = !DILocalVariable(name: "context", arg: 3, scope: !12228, file: !12141, line: 127, type: !107)
!12239 = !DILocalVariable(name: "handle_count", scope: !12228, file: !12141, line: 129, type: !234)
!12240 = !DILocalVariable(name: "handles", scope: !12228, file: !12141, line: 130, type: !350)
!12241 = !DILocation(line: 0, scope: !12228)
!12242 = !DILocation(line: 129, column: 2, scope: !12228)
!12243 = !DILocation(line: 129, column: 9, scope: !12228)
!12244 = !DILocation(line: 130, column: 35, scope: !12228)
!12245 = !DILocation(line: 132, column: 33, scope: !12228)
!12246 = !DILocation(line: 132, column: 9, scope: !12228)
!12247 = !DILocation(line: 133, column: 1, scope: !12228)
!12248 = !DILocation(line: 132, column: 2, scope: !12228)
!12249 = distinct !DISubprogram(name: "device_required_handles_get", scope: !336, file: !336, line: 493, type: !12250, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !12252)
!12250 = !DISubroutineType(types: !12251)
!12251 = !{!350, !12144, !2520}
!12252 = !{!12253, !12254, !12255, !12256}
!12253 = !DILocalVariable(name: "dev", arg: 1, scope: !12249, file: !336, line: 493, type: !12144)
!12254 = !DILocalVariable(name: "count", arg: 2, scope: !12249, file: !336, line: 493, type: !2520)
!12255 = !DILocalVariable(name: "rv", scope: !12249, file: !336, line: 495, type: !350)
!12256 = !DILocalVariable(name: "i", scope: !12257, file: !336, line: 498, type: !234)
!12257 = distinct !DILexicalBlock(scope: !12258, file: !336, line: 497, column: 18)
!12258 = distinct !DILexicalBlock(scope: !12249, file: !336, line: 497, column: 6)
!12259 = !DILocation(line: 0, scope: !12249)
!12260 = !DILocation(line: 495, column: 35, scope: !12249)
!12261 = !DILocation(line: 497, column: 9, scope: !12258)
!12262 = !DILocation(line: 497, column: 6, scope: !12249)
!12263 = !DILocation(line: 0, scope: !12257)
!12264 = !DILocation(line: 500, column: 11, scope: !12257)
!12265 = !DILocation(line: 500, column: 40, scope: !12257)
!12266 = !DILocation(line: 502, column: 4, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12257, file: !336, line: 501, column: 40)
!12268 = distinct !{!12268, !12269, !12270}
!12269 = !DILocation(line: 500, column: 3, scope: !12257)
!12270 = !DILocation(line: 503, column: 3, scope: !12257)
!12271 = !DILocation(line: 504, column: 10, scope: !12257)
!12272 = !DILocation(line: 505, column: 2, scope: !12257)
!12273 = !DILocation(line: 507, column: 2, scope: !12249)
!12274 = distinct !DISubprogram(name: "device_visitor", scope: !12141, file: !12141, line: 106, type: !12275, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !12277)
!12275 = !DISubroutineType(types: !12276)
!12276 = !{!109, !350, !234, !12231, !107}
!12277 = !{!12278, !12279, !12280, !12281, !12282, !12284, !12287, !12288}
!12278 = !DILocalVariable(name: "handles", arg: 1, scope: !12274, file: !12141, line: 106, type: !350)
!12279 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12274, file: !12141, line: 107, type: !234)
!12280 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12274, file: !12141, line: 108, type: !12231)
!12281 = !DILocalVariable(name: "context", arg: 4, scope: !12274, file: !12141, line: 109, type: !107)
!12282 = !DILocalVariable(name: "i", scope: !12283, file: !12141, line: 112, type: !234)
!12283 = distinct !DILexicalBlock(scope: !12274, file: !12141, line: 112, column: 2)
!12284 = !DILocalVariable(name: "dh", scope: !12285, file: !12141, line: 113, type: !352)
!12285 = distinct !DILexicalBlock(scope: !12286, file: !12141, line: 112, column: 44)
!12286 = distinct !DILexicalBlock(scope: !12283, file: !12141, line: 112, column: 2)
!12287 = !DILocalVariable(name: "rdev", scope: !12285, file: !12141, line: 114, type: !12144)
!12288 = !DILocalVariable(name: "rc", scope: !12285, file: !12141, line: 115, type: !109)
!12289 = !DILocation(line: 0, scope: !12274)
!12290 = !DILocation(line: 0, scope: !12283)
!12291 = !DILocation(line: 112, column: 23, scope: !12286)
!12292 = !DILocation(line: 112, column: 2, scope: !12283)
!12293 = distinct !{!12293, !12292, !12294}
!12294 = !DILocation(line: 120, column: 2, scope: !12283)
!12295 = !DILocation(line: 113, column: 24, scope: !12285)
!12296 = !DILocation(line: 0, scope: !12285)
!12297 = !DILocation(line: 114, column: 31, scope: !12285)
!12298 = !DILocation(line: 115, column: 12, scope: !12285)
!12299 = !DILocation(line: 117, column: 10, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12285, file: !12141, line: 117, column: 7)
!12301 = !DILocation(line: 112, column: 39, scope: !12286)
!12302 = !DILocation(line: 123, column: 1, scope: !12274)
!12303 = distinct !DISubprogram(name: "device_from_handle", scope: !336, file: !336, line: 439, type: !12304, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !12306)
!12304 = !DISubroutineType(types: !12305)
!12305 = !{!12144, !352}
!12306 = !{!12307, !12308, !12309}
!12307 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12303, file: !336, line: 439, type: !352)
!12308 = !DILocalVariable(name: "dev", scope: !12303, file: !336, line: 443, type: !12144)
!12309 = !DILocalVariable(name: "numdev", scope: !12303, file: !336, line: 444, type: !234)
!12310 = !DILocation(line: 0, scope: !12303)
!12311 = !DILocation(line: 446, column: 7, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12303, file: !336, line: 446, column: 6)
!12313 = !DILocation(line: 446, column: 18, scope: !12312)
!12314 = !DILocation(line: 446, column: 23, scope: !12312)
!12315 = !DILocation(line: 450, column: 2, scope: !12303)
!12316 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12141, file: !12141, line: 135, type: !12229, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !12317)
!12317 = !{!12318, !12319, !12320, !12321, !12322}
!12318 = !DILocalVariable(name: "dev", arg: 1, scope: !12316, file: !12141, line: 135, type: !12144)
!12319 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12316, file: !12141, line: 136, type: !12231)
!12320 = !DILocalVariable(name: "context", arg: 3, scope: !12316, file: !12141, line: 137, type: !107)
!12321 = !DILocalVariable(name: "handle_count", scope: !12316, file: !12141, line: 139, type: !234)
!12322 = !DILocalVariable(name: "handles", scope: !12316, file: !12141, line: 140, type: !350)
!12323 = !DILocation(line: 0, scope: !12316)
!12324 = !DILocation(line: 139, column: 2, scope: !12316)
!12325 = !DILocation(line: 139, column: 9, scope: !12316)
!12326 = !DILocation(line: 140, column: 35, scope: !12316)
!12327 = !DILocation(line: 142, column: 33, scope: !12316)
!12328 = !DILocation(line: 142, column: 9, scope: !12316)
!12329 = !DILocation(line: 143, column: 1, scope: !12316)
!12330 = !DILocation(line: 142, column: 2, scope: !12316)
!12331 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !336, file: !336, line: 573, type: !12250, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !12332)
!12332 = !{!12333, !12334, !12335, !12336, !12337}
!12333 = !DILocalVariable(name: "dev", arg: 1, scope: !12331, file: !336, line: 573, type: !12144)
!12334 = !DILocalVariable(name: "count", arg: 2, scope: !12331, file: !336, line: 573, type: !2520)
!12335 = !DILocalVariable(name: "rv", scope: !12331, file: !336, line: 575, type: !350)
!12336 = !DILocalVariable(name: "region", scope: !12331, file: !336, line: 576, type: !234)
!12337 = !DILocalVariable(name: "i", scope: !12331, file: !336, line: 577, type: !234)
!12338 = !DILocation(line: 0, scope: !12331)
!12339 = !DILocation(line: 575, column: 35, scope: !12331)
!12340 = !DILocation(line: 579, column: 9, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12331, file: !336, line: 579, column: 6)
!12342 = !DILocation(line: 579, column: 6, scope: !12331)
!12343 = !DILocation(line: 582, column: 8, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12345, file: !336, line: 582, column: 8)
!12345 = distinct !DILexicalBlock(scope: !12346, file: !336, line: 581, column: 23)
!12346 = distinct !DILexicalBlock(scope: !12341, file: !336, line: 579, column: 18)
!12347 = !DILocation(line: 582, column: 12, scope: !12344)
!12348 = !DILocation(line: 585, column: 6, scope: !12345)
!12349 = !DILocation(line: 0, scope: !12346)
!12350 = !DILocation(line: 581, column: 17, scope: !12346)
!12351 = !DILocation(line: 581, column: 3, scope: !12346)
!12352 = !DILocation(line: 588, column: 10, scope: !12346)
!12353 = !DILocation(line: 588, column: 16, scope: !12346)
!12354 = !DILocation(line: 589, column: 4, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12346, file: !336, line: 588, column: 39)
!12356 = !DILocation(line: 588, column: 3, scope: !12346)
!12357 = distinct !{!12357, !12356, !12358}
!12358 = !DILocation(line: 590, column: 3, scope: !12346)
!12359 = !DILocation(line: 591, column: 10, scope: !12346)
!12360 = !DILocation(line: 592, column: 2, scope: !12346)
!12361 = !DILocation(line: 575, column: 25, scope: !12331)
!12362 = !DILocation(line: 594, column: 2, scope: !12331)
!12363 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1793, file: !1793, line: 49, type: !12364, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1790, retainedNodes: !2002)
!12364 = !DISubroutineType(types: !12365)
!12365 = !{!281}
!12366 = !DILocation(line: 51, column: 10, scope: !12363)
!12367 = !DILocation(line: 51, column: 20, scope: !12363)
!12368 = !DILocation(line: 51, column: 2, scope: !12363)
!12369 = distinct !DISubprogram(name: "coredump", scope: !3037, file: !3037, line: 209, type: !12370, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12519)
!12370 = !DISubroutineType(types: !12371)
!12371 = !{null, !32, !12372, !12416}
!12372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12373, size: 32)
!12373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12374)
!12374 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2650, line: 141, baseType: !12375)
!12375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2650, line: 97, size: 256, elements: !12376)
!12376 = !{!12377}
!12377 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12375, file: !2650, line: 107, baseType: !12378, size: 256)
!12378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2650, line: 98, size: 256, elements: !12379)
!12379 = !{!12380, !12385, !12390, !12395, !12400, !12405, !12410, !12415}
!12380 = !DIDerivedType(tag: DW_TAG_member, scope: !12378, file: !2650, line: 99, baseType: !12381, size: 32)
!12381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12378, file: !2650, line: 99, size: 32, elements: !12382)
!12382 = !{!12383, !12384}
!12383 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12381, file: !2650, line: 99, baseType: !110, size: 32)
!12384 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12381, file: !2650, line: 99, baseType: !110, size: 32)
!12385 = !DIDerivedType(tag: DW_TAG_member, scope: !12378, file: !2650, line: 100, baseType: !12386, size: 32, offset: 32)
!12386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12378, file: !2650, line: 100, size: 32, elements: !12387)
!12387 = !{!12388, !12389}
!12388 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12386, file: !2650, line: 100, baseType: !110, size: 32)
!12389 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12386, file: !2650, line: 100, baseType: !110, size: 32)
!12390 = !DIDerivedType(tag: DW_TAG_member, scope: !12378, file: !2650, line: 101, baseType: !12391, size: 32, offset: 64)
!12391 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12378, file: !2650, line: 101, size: 32, elements: !12392)
!12392 = !{!12393, !12394}
!12393 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12391, file: !2650, line: 101, baseType: !110, size: 32)
!12394 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12391, file: !2650, line: 101, baseType: !110, size: 32)
!12395 = !DIDerivedType(tag: DW_TAG_member, scope: !12378, file: !2650, line: 102, baseType: !12396, size: 32, offset: 96)
!12396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12378, file: !2650, line: 102, size: 32, elements: !12397)
!12397 = !{!12398, !12399}
!12398 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12396, file: !2650, line: 102, baseType: !110, size: 32)
!12399 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12396, file: !2650, line: 102, baseType: !110, size: 32)
!12400 = !DIDerivedType(tag: DW_TAG_member, scope: !12378, file: !2650, line: 103, baseType: !12401, size: 32, offset: 128)
!12401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12378, file: !2650, line: 103, size: 32, elements: !12402)
!12402 = !{!12403, !12404}
!12403 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12401, file: !2650, line: 103, baseType: !110, size: 32)
!12404 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12401, file: !2650, line: 103, baseType: !110, size: 32)
!12405 = !DIDerivedType(tag: DW_TAG_member, scope: !12378, file: !2650, line: 104, baseType: !12406, size: 32, offset: 160)
!12406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12378, file: !2650, line: 104, size: 32, elements: !12407)
!12407 = !{!12408, !12409}
!12408 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12406, file: !2650, line: 104, baseType: !110, size: 32)
!12409 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12406, file: !2650, line: 104, baseType: !110, size: 32)
!12410 = !DIDerivedType(tag: DW_TAG_member, scope: !12378, file: !2650, line: 105, baseType: !12411, size: 32, offset: 192)
!12411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12378, file: !2650, line: 105, size: 32, elements: !12412)
!12412 = !{!12413, !12414}
!12413 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12411, file: !2650, line: 105, baseType: !110, size: 32)
!12414 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12411, file: !2650, line: 105, baseType: !110, size: 32)
!12415 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12378, file: !2650, line: 106, baseType: !110, size: 32, offset: 224)
!12416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12417, size: 32)
!12417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !12418)
!12418 = !{!12419, !12477, !12489, !12490, !12491, !12492, !12493, !12499, !12514}
!12419 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12417, file: !158, line: 247, baseType: !12420, size: 384)
!12420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !12421)
!12421 = !{!12422, !12446, !12453, !12454, !12455, !12464, !12465, !12466}
!12422 = !DIDerivedType(tag: DW_TAG_member, scope: !12420, file: !158, line: 60, baseType: !12423, size: 64)
!12423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12420, file: !158, line: 60, size: 64, elements: !12424)
!12424 = !{!12425, !12440}
!12425 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12423, file: !158, line: 61, baseType: !12426, size: 64)
!12426 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !12427)
!12427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !12428)
!12428 = !{!12429, !12435}
!12429 = !DIDerivedType(tag: DW_TAG_member, scope: !12427, file: !127, line: 38, baseType: !12430, size: 32)
!12430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12427, file: !127, line: 38, size: 32, elements: !12431)
!12431 = !{!12432, !12434}
!12432 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12430, file: !127, line: 39, baseType: !12433, size: 32)
!12433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12427, size: 32)
!12434 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12430, file: !127, line: 40, baseType: !12433, size: 32)
!12435 = !DIDerivedType(tag: DW_TAG_member, scope: !12427, file: !127, line: 42, baseType: !12436, size: 32, offset: 32)
!12436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12427, file: !127, line: 42, size: 32, elements: !12437)
!12437 = !{!12438, !12439}
!12438 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12436, file: !127, line: 43, baseType: !12433, size: 32)
!12439 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12436, file: !127, line: 44, baseType: !12433, size: 32)
!12440 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12423, file: !158, line: 62, baseType: !12441, size: 64)
!12441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !12442)
!12442 = !{!12443}
!12443 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12441, file: !170, line: 50, baseType: !12444, size: 64)
!12444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12445, size: 64, elements: !175)
!12445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12441, size: 32)
!12446 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12420, file: !158, line: 68, baseType: !12447, size: 32, offset: 64)
!12447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12448, size: 32)
!12448 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !12449)
!12449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !12450)
!12450 = !{!12451}
!12451 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12449, file: !122, line: 232, baseType: !12452, size: 64)
!12452 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !12427)
!12453 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12420, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!12454 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12420, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!12455 = !DIDerivedType(tag: DW_TAG_member, scope: !12420, file: !158, line: 90, baseType: !12456, size: 16, offset: 112)
!12456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12420, file: !158, line: 90, size: 16, elements: !12457)
!12457 = !{!12458, !12463}
!12458 = !DIDerivedType(tag: DW_TAG_member, scope: !12456, file: !158, line: 91, baseType: !12459, size: 16)
!12459 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12456, file: !158, line: 91, size: 16, elements: !12460)
!12460 = !{!12461, !12462}
!12461 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12459, file: !158, line: 96, baseType: !190, size: 8)
!12462 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12459, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!12463 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12456, file: !158, line: 100, baseType: !194, size: 16)
!12464 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12420, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!12465 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12420, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12420, file: !158, line: 131, baseType: !12467, size: 192, offset: 192)
!12467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !12468)
!12468 = !{!12469, !12470, !12476}
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12467, file: !122, line: 245, baseType: !12426, size: 64)
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12467, file: !122, line: 246, baseType: !12471, size: 32, offset: 64)
!12471 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !12472)
!12472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12473, size: 32)
!12473 = !DISubroutineType(types: !12474)
!12474 = !{null, !12475}
!12475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12467, size: 32)
!12476 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12467, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!12477 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12417, file: !158, line: 250, baseType: !12478, size: 288, offset: 384)
!12478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !12479)
!12479 = !{!12480, !12481, !12482, !12483, !12484, !12485, !12486, !12487, !12488}
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12478, file: !211, line: 26, baseType: !110, size: 32)
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12478, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!12482 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12478, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!12483 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12478, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!12484 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12478, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!12485 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12478, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!12486 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12478, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!12487 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12478, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!12488 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12478, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!12489 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12417, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12417, file: !158, line: 256, baseType: !12448, size: 64, offset: 704)
!12491 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12417, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!12492 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12417, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!12493 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12417, file: !158, line: 300, baseType: !12494, size: 96, offset: 1056)
!12494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !12495)
!12495 = !{!12496, !12497, !12498}
!12496 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12494, file: !158, line: 153, baseType: !22, size: 32)
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12494, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!12498 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12494, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!12499 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12417, file: !158, line: 325, baseType: !12500, size: 32, offset: 1152)
!12500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12501, size: 32)
!12501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !12502)
!12502 = !{!12503, !12509, !12510}
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12501, file: !118, line: 5074, baseType: !12504, size: 96)
!12504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !12505)
!12505 = !{!12506, !12507, !12508}
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12504, file: !243, line: 57, baseType: !246, size: 32)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12504, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12504, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!12509 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12501, file: !118, line: 5075, baseType: !12448, size: 64, offset: 96)
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12501, file: !118, line: 5076, baseType: !12511, size: 32, offset: 160)
!12511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !12512)
!12512 = !{!12513}
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12511, file: !253, line: 52, baseType: !22, size: 32)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12417, file: !158, line: 343, baseType: !12515, size: 64, offset: 1184)
!12515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !12516)
!12516 = !{!12517, !12518}
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12515, file: !211, line: 63, baseType: !110, size: 32)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12515, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!12519 = !{!12520, !12521, !12522}
!12520 = !DILocalVariable(name: "reason", arg: 1, scope: !12369, file: !3037, line: 209, type: !32)
!12521 = !DILocalVariable(name: "esf", arg: 2, scope: !12369, file: !3037, line: 209, type: !12372)
!12522 = !DILocalVariable(name: "thread", arg: 3, scope: !12369, file: !3037, line: 210, type: !12416)
!12523 = !DILocation(line: 0, scope: !12369)
!12524 = !DILocation(line: 212, column: 1, scope: !12369)
!12525 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3037, file: !3037, line: 214, type: !12526, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12528)
!12526 = !DISubroutineType(types: !12527)
!12527 = !{null, !22, !22}
!12528 = !{!12529, !12530}
!12529 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12525, file: !3037, line: 214, type: !22)
!12530 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12525, file: !3037, line: 214, type: !22)
!12531 = !DILocation(line: 0, scope: !12525)
!12532 = !DILocation(line: 216, column: 1, scope: !12525)
!12533 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3037, file: !3037, line: 218, type: !12534, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12536)
!12534 = !DISubroutineType(types: !12535)
!12535 = !{null, !286, !234}
!12536 = !{!12537, !12538}
!12537 = !DILocalVariable(name: "buf", arg: 1, scope: !12533, file: !3037, line: 218, type: !286)
!12538 = !DILocalVariable(name: "buflen", arg: 2, scope: !12533, file: !3037, line: 218, type: !234)
!12539 = !DILocation(line: 0, scope: !12533)
!12540 = !DILocation(line: 220, column: 1, scope: !12533)
!12541 = distinct !DISubprogram(name: "coredump_query", scope: !3037, file: !3037, line: 222, type: !12542, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12544)
!12542 = !DISubroutineType(types: !12543)
!12543 = !{!109, !3036, !107}
!12544 = !{!12545, !12546}
!12545 = !DILocalVariable(name: "query_id", arg: 1, scope: !12541, file: !3037, line: 222, type: !3036)
!12546 = !DILocalVariable(name: "arg", arg: 2, scope: !12541, file: !3037, line: 222, type: !107)
!12547 = !DILocation(line: 0, scope: !12541)
!12548 = !DILocation(line: 224, column: 2, scope: !12541)
!12549 = distinct !DISubprogram(name: "coredump_cmd", scope: !3037, file: !3037, line: 227, type: !12550, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12552)
!12550 = !DISubroutineType(types: !12551)
!12551 = !{!109, !3043, !107}
!12552 = !{!12553, !12554}
!12553 = !DILocalVariable(name: "query_id", arg: 1, scope: !12549, file: !3037, line: 227, type: !3043)
!12554 = !DILocalVariable(name: "arg", arg: 2, scope: !12549, file: !3037, line: 227, type: !107)
!12555 = !DILocation(line: 0, scope: !12549)
!12556 = !DILocation(line: 229, column: 2, scope: !12549)
!12557 = distinct !DISubprogram(name: "arch_system_halt", scope: !12558, file: !12558, line: 23, type: !6073, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12559)
!12558 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12559 = !{!12560}
!12560 = !DILocalVariable(name: "reason", arg: 1, scope: !12557, file: !12558, line: 23, type: !32)
!12561 = !DILocation(line: 0, scope: !12557)
!12562 = !DILocation(line: 55, column: 2, scope: !12563, inlinedAt: !12567)
!12563 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6062, file: !6062, line: 42, type: !6063, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12564)
!12564 = !{!12565, !12566}
!12565 = !DILocalVariable(name: "key", scope: !12563, file: !6062, line: 44, type: !32)
!12566 = !DILocalVariable(name: "tmp", scope: !12563, file: !6062, line: 53, type: !32)
!12567 = distinct !DILocation(line: 31, column: 8, scope: !12557)
!12568 = !{i64 1953612}
!12569 = !DILocation(line: 0, scope: !12563, inlinedAt: !12567)
!12570 = !DILocation(line: 32, column: 2, scope: !12557)
!12571 = !DILocation(line: 32, column: 2, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12573, file: !12558, line: 32, column: 2)
!12573 = distinct !DILexicalBlock(scope: !12557, file: !12558, line: 32, column: 2)
!12574 = distinct !{!12574, !12575, !12576}
!12575 = !DILocation(line: 32, column: 2, scope: !12573)
!12576 = !DILocation(line: 34, column: 2, scope: !12573)
!12577 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12558, file: !12558, line: 39, type: !12578, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12580)
!12578 = !DISubroutineType(types: !12579)
!12579 = !{null, !32, !12372}
!12580 = !{!12581, !12582}
!12581 = !DILocalVariable(name: "reason", arg: 1, scope: !12577, file: !12558, line: 39, type: !32)
!12582 = !DILocalVariable(name: "esf", arg: 2, scope: !12577, file: !12558, line: 40, type: !12372)
!12583 = !DILocation(line: 0, scope: !12577)
!12584 = !DILocation(line: 45, column: 2, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12586, file: !12558, line: 45, column: 2)
!12586 = distinct !DILexicalBlock(scope: !12587, file: !12558, line: 45, column: 2)
!12587 = distinct !DILexicalBlock(scope: !12588, file: !12558, line: 45, column: 2)
!12588 = distinct !DILexicalBlock(scope: !12577, file: !12558, line: 45, column: 2)
!12589 = !DILocation(line: 46, column: 2, scope: !12577)
!12590 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12558, file: !12558, line: 81, type: !6073, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12591)
!12591 = !{!12592}
!12592 = !DILocalVariable(name: "reason", arg: 1, scope: !12590, file: !12558, line: 81, type: !32)
!12593 = !DILocation(line: 0, scope: !12590)
!12594 = !DILocation(line: 83, column: 2, scope: !12590)
!12595 = distinct !DISubprogram(name: "z_fatal_error", scope: !12558, file: !12558, line: 96, type: !12578, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12596)
!12596 = !{!12597, !12598, !12599, !12600}
!12597 = !DILocalVariable(name: "reason", arg: 1, scope: !12595, file: !12558, line: 96, type: !32)
!12598 = !DILocalVariable(name: "esf", arg: 2, scope: !12595, file: !12558, line: 96, type: !12372)
!12599 = !DILocalVariable(name: "key", scope: !12595, file: !12558, line: 102, type: !32)
!12600 = !DILocalVariable(name: "thread", scope: !12595, file: !12558, line: 103, type: !12416)
!12601 = !DILocation(line: 0, scope: !12595)
!12602 = !DILocation(line: 55, column: 2, scope: !12563, inlinedAt: !12603)
!12603 = distinct !DILocation(line: 102, column: 21, scope: !12595)
!12604 = !DILocation(line: 0, scope: !12563, inlinedAt: !12603)
!12605 = !DILocation(line: 104, column: 4, scope: !12595)
!12606 = !DILocation(line: 109, column: 2, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12608, file: !12558, line: 109, column: 2)
!12608 = distinct !DILexicalBlock(scope: !12609, file: !12558, line: 109, column: 2)
!12609 = distinct !DILexicalBlock(scope: !12610, file: !12558, line: 109, column: 2)
!12610 = distinct !DILexicalBlock(scope: !12595, file: !12558, line: 109, column: 2)
!12611 = !DILocation(line: 119, column: 11, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12595, file: !12558, line: 119, column: 6)
!12613 = !DILocation(line: 119, column: 20, scope: !12612)
!12614 = !DILocalVariable(name: "esf", arg: 1, scope: !12615, file: !7435, line: 71, type: !12372)
!12615 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7435, file: !7435, line: 71, type: !12616, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12618)
!12616 = !DISubroutineType(types: !12617)
!12617 = !{!347, !12372}
!12618 = !{!12614}
!12619 = !DILocation(line: 0, scope: !12615, inlinedAt: !12620)
!12620 = distinct !DILocation(line: 119, column: 23, scope: !12612)
!12621 = !DILocation(line: 73, column: 21, scope: !12615, inlinedAt: !12620)
!12622 = !DILocation(line: 73, column: 26, scope: !12615, inlinedAt: !12620)
!12623 = !DILocation(line: 73, column: 9, scope: !12615, inlinedAt: !12620)
!12624 = !DILocation(line: 119, column: 6, scope: !12595)
!12625 = !DILocation(line: 120, column: 3, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !12558, line: 120, column: 3)
!12627 = distinct !DILexicalBlock(scope: !12628, file: !12558, line: 120, column: 3)
!12628 = distinct !DILexicalBlock(scope: !12629, file: !12558, line: 120, column: 3)
!12629 = distinct !DILexicalBlock(scope: !12630, file: !12558, line: 120, column: 3)
!12630 = distinct !DILexicalBlock(scope: !12612, file: !12558, line: 119, column: 57)
!12631 = !DILocation(line: 121, column: 2, scope: !12630)
!12632 = !DILocation(line: 124, column: 2, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !12558, line: 124, column: 2)
!12634 = distinct !DILexicalBlock(scope: !12635, file: !12558, line: 124, column: 2)
!12635 = distinct !DILexicalBlock(scope: !12636, file: !12558, line: 124, column: 2)
!12636 = distinct !DILexicalBlock(scope: !12595, file: !12558, line: 124, column: 2)
!12637 = !DILocation(line: 131, column: 2, scope: !12595)
!12638 = !DILocation(line: 0, scope: !12615, inlinedAt: !12639)
!12639 = distinct !DILocation(line: 163, column: 24, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12641, file: !12558, line: 163, column: 7)
!12641 = distinct !DILexicalBlock(scope: !12642, file: !12558, line: 160, column: 9)
!12642 = distinct !DILexicalBlock(scope: !12595, file: !12558, line: 146, column: 6)
!12643 = !DILocation(line: 73, column: 21, scope: !12615, inlinedAt: !12639)
!12644 = !DILocation(line: 73, column: 26, scope: !12615, inlinedAt: !12639)
!12645 = !DILocation(line: 73, column: 9, scope: !12615, inlinedAt: !12639)
!12646 = !DILocation(line: 163, column: 7, scope: !12641)
!12647 = !DILocalVariable(name: "key", arg: 1, scope: !12648, file: !6062, line: 84, type: !32)
!12648 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6062, file: !6062, line: 84, type: !6073, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12649)
!12649 = !{!12647}
!12650 = !DILocation(line: 0, scope: !12648, inlinedAt: !12651)
!12651 = distinct !DILocation(line: 171, column: 4, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12640, file: !12558, line: 163, column: 58)
!12653 = !DILocation(line: 95, column: 2, scope: !12648, inlinedAt: !12651)
!12654 = !{i64 1954429}
!12655 = !DILocation(line: 172, column: 4, scope: !12652)
!12656 = !DILocation(line: 163, column: 21, scope: !12640)
!12657 = !DILocation(line: 178, column: 15, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12659, file: !12558, line: 178, column: 8)
!12659 = distinct !DILexicalBlock(scope: !12640, file: !12558, line: 174, column: 10)
!12660 = !DILocation(line: 0, scope: !12648, inlinedAt: !12661)
!12661 = distinct !DILocation(line: 179, column: 5, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12658, file: !12558, line: 178, column: 38)
!12663 = !DILocation(line: 0, scope: !12648, inlinedAt: !12664)
!12664 = distinct !DILocation(line: 186, column: 2, scope: !12595)
!12665 = !DILocation(line: 178, column: 8, scope: !12659)
!12666 = !DILocation(line: 189, column: 3, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !12558, line: 188, column: 41)
!12668 = distinct !DILexicalBlock(scope: !12595, file: !12558, line: 188, column: 6)
!12669 = !DILocation(line: 191, column: 1, scope: !12595)
!12670 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !12671, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !2002)
!12671 = !DISubroutineType(types: !12672)
!12672 = !{!12673}
!12673 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !12416)
!12674 = !DILocation(line: 535, column: 9, scope: !12670)
!12675 = !DILocation(line: 535, column: 2, scope: !12670)
!12676 = distinct !DISubprogram(name: "reason_to_str", scope: !12558, file: !12558, line: 62, type: !12677, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12679)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{!279, !32}
!12679 = !{!12680}
!12680 = !DILocalVariable(name: "reason", arg: 1, scope: !12676, file: !12558, line: 62, type: !32)
!12681 = !DILocation(line: 0, scope: !12676)
!12682 = !DILocation(line: 64, column: 2, scope: !12676)
!12683 = !DILocation(line: 0, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12676, file: !12558, line: 64, column: 18)
!12685 = !DILocation(line: 78, column: 1, scope: !12676)
!12686 = distinct !DISubprogram(name: "thread_name_get", scope: !12558, file: !12558, line: 51, type: !12687, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12689)
!12687 = !DISubroutineType(types: !12688)
!12688 = !{!279, !12416}
!12689 = !{!12690, !12691}
!12690 = !DILocalVariable(name: "thread", arg: 1, scope: !12686, file: !12558, line: 51, type: !12416)
!12691 = !DILocalVariable(name: "thread_name", scope: !12686, file: !12558, line: 53, type: !279)
!12692 = !DILocation(line: 0, scope: !12686)
!12693 = !DILocation(line: 53, column: 36, scope: !12686)
!12694 = !DILocation(line: 53, column: 28, scope: !12686)
!12695 = !DILocation(line: 53, column: 47, scope: !12686)
!12696 = !DILocation(line: 55, column: 19, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12686, file: !12558, line: 55, column: 6)
!12698 = !DILocation(line: 55, column: 28, scope: !12697)
!12699 = !DILocation(line: 55, column: 32, scope: !12697)
!12700 = !DILocation(line: 55, column: 47, scope: !12697)
!12701 = !DILocation(line: 55, column: 6, scope: !12686)
!12702 = !DILocation(line: 57, column: 2, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12697, file: !12558, line: 55, column: 57)
!12704 = !DILocation(line: 59, column: 2, scope: !12686)
!12705 = distinct !DISubprogram(name: "k_thread_abort", scope: !3216, file: !3216, line: 188, type: !12706, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !12708)
!12706 = !DISubroutineType(types: !12707)
!12707 = !{null, !12673}
!12708 = !{!12709}
!12709 = !DILocalVariable(name: "thread", arg: 1, scope: !12705, file: !3216, line: 188, type: !12673)
!12710 = !DILocation(line: 0, scope: !12705)
!12711 = !DILocation(line: 197, column: 2, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12705, file: !3216, line: 197, column: 2)
!12713 = !{i64 2154073245}
!12714 = !DILocation(line: 198, column: 2, scope: !12705)
!12715 = !DILocation(line: 199, column: 1, scope: !12705)
!12716 = distinct !DISubprogram(name: "z_current_get", scope: !3216, file: !3216, line: 173, type: !12671, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3033, retainedNodes: !2002)
!12717 = !DILocation(line: 180, column: 2, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12716, file: !3216, line: 180, column: 2)
!12719 = !{i64 2154073177}
!12720 = !DILocation(line: 181, column: 9, scope: !12716)
!12721 = !DILocation(line: 181, column: 2, scope: !12716)
!12722 = distinct !DISubprogram(name: "z_early_memset", scope: !1801, file: !1801, line: 108, type: !12723, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12725)
!12723 = !DISubroutineType(types: !12724)
!12724 = !{null, !107, !109, !234}
!12725 = !{!12726, !12727, !12728}
!12726 = !DILocalVariable(name: "dst", arg: 1, scope: !12722, file: !1801, line: 108, type: !107)
!12727 = !DILocalVariable(name: "c", arg: 2, scope: !12722, file: !1801, line: 108, type: !109)
!12728 = !DILocalVariable(name: "n", arg: 3, scope: !12722, file: !1801, line: 108, type: !234)
!12729 = !DILocation(line: 0, scope: !12722)
!12730 = !DILocation(line: 110, column: 9, scope: !12722)
!12731 = !DILocation(line: 111, column: 1, scope: !12722)
!12732 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1801, file: !1801, line: 121, type: !12733, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12735)
!12733 = !DISubroutineType(types: !12734)
!12734 = !{null, !107, !13, !234}
!12735 = !{!12736, !12737, !12738}
!12736 = !DILocalVariable(name: "dst", arg: 1, scope: !12732, file: !1801, line: 121, type: !107)
!12737 = !DILocalVariable(name: "src", arg: 2, scope: !12732, file: !1801, line: 121, type: !13)
!12738 = !DILocalVariable(name: "n", arg: 3, scope: !12732, file: !1801, line: 121, type: !234)
!12739 = !DILocation(line: 0, scope: !12732)
!12740 = !DILocation(line: 123, column: 9, scope: !12732)
!12741 = !DILocation(line: 124, column: 1, scope: !12732)
!12742 = distinct !DISubprogram(name: "z_bss_zero", scope: !1801, file: !1801, line: 132, type: !3070, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !2002)
!12743 = !DILocation(line: 143, column: 2, scope: !12742)
!12744 = !DILocation(line: 168, column: 1, scope: !12742)
!12745 = distinct !DISubprogram(name: "z_init_cpu", scope: !1801, file: !1801, line: 372, type: !8323, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12746)
!12746 = !{!12747}
!12747 = !DILocalVariable(name: "id", arg: 1, scope: !12745, file: !1801, line: 372, type: !109)
!12748 = !DILocation(line: 0, scope: !12745)
!12749 = !DILocation(line: 374, column: 2, scope: !12745)
!12750 = !DILocation(line: 375, column: 34, scope: !12745)
!12751 = !DILocation(line: 375, column: 19, scope: !12745)
!12752 = !DILocation(line: 375, column: 31, scope: !12745)
!12753 = !DILocation(line: 376, column: 24, scope: !12745)
!12754 = !DILocation(line: 376, column: 19, scope: !12745)
!12755 = !DILocation(line: 376, column: 22, scope: !12745)
!12756 = !DILocation(line: 378, column: 26, scope: !12745)
!12757 = !DILocation(line: 378, column: 4, scope: !12745)
!12758 = !DILocation(line: 378, column: 50, scope: !12745)
!12759 = !DILocation(line: 377, column: 19, scope: !12745)
!12760 = !DILocation(line: 377, column: 29, scope: !12745)
!12761 = !DILocation(line: 384, column: 1, scope: !12745)
!12762 = distinct !DISubprogram(name: "init_idle_thread", scope: !1801, file: !1801, line: 343, type: !8323, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12763)
!12763 = !{!12764, !12765, !12766, !12769}
!12764 = !DILocalVariable(name: "i", arg: 1, scope: !12762, file: !1801, line: 343, type: !109)
!12765 = !DILocalVariable(name: "thread", scope: !12762, file: !1801, line: 345, type: !1893)
!12766 = !DILocalVariable(name: "stack", scope: !12762, file: !1801, line: 346, type: !12767)
!12767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12768, size: 32)
!12768 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3336, line: 44, baseType: !2011)
!12769 = !DILocalVariable(name: "tname", scope: !12762, file: !1801, line: 354, type: !285)
!12770 = !DILocation(line: 0, scope: !12762)
!12771 = !DILocation(line: 345, column: 29, scope: !12762)
!12772 = !DILocation(line: 346, column: 28, scope: !12762)
!12773 = !DILocation(line: 362, column: 37, scope: !12762)
!12774 = !DILocation(line: 362, column: 36, scope: !12762)
!12775 = !DILocation(line: 361, column: 2, scope: !12762)
!12776 = !DILocation(line: 365, column: 2, scope: !12762)
!12777 = !DILocation(line: 370, column: 1, scope: !12762)
!12778 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !12779, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12781)
!12779 = !DISubroutineType(types: !12780)
!12780 = !{!285, !12767}
!12781 = !{!12782}
!12782 = !DILocalVariable(name: "sym", arg: 1, scope: !12778, file: !147, line: 331, type: !12767)
!12783 = !DILocation(line: 0, scope: !12778)
!12784 = !DILocation(line: 333, column: 21, scope: !12778)
!12785 = !DILocation(line: 333, column: 2, scope: !12778)
!12786 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12787, file: !12787, line: 155, type: !12788, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12790)
!12787 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12788 = !DISubroutineType(types: !12789)
!12789 = !{null, !1893}
!12790 = !{!12791}
!12791 = !DILocalVariable(name: "thread", arg: 1, scope: !12786, file: !12787, line: 155, type: !1893)
!12792 = !DILocation(line: 0, scope: !12786)
!12793 = !DILocation(line: 157, column: 15, scope: !12786)
!12794 = !DILocation(line: 157, column: 28, scope: !12786)
!12795 = !DILocation(line: 158, column: 1, scope: !12786)
!12796 = distinct !DISubprogram(name: "z_cstart", scope: !1801, file: !1801, line: 501, type: !3070, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12797)
!12797 = !{!12798}
!12798 = !DILocalVariable(name: "dummy_thread", scope: !12796, file: !1801, line: 518, type: !1894)
!12799 = !DILocation(line: 507, column: 2, scope: !12796)
!12800 = !DILocation(line: 43, column: 14, scope: !12801, inlinedAt: !12805)
!12801 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12802, file: !12802, line: 40, type: !3070, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12803)
!12802 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12803 = !{!12804}
!12804 = !DILocalVariable(name: "msp", scope: !12801, file: !12802, line: 42, type: !110)
!12805 = distinct !DILocation(line: 44, column: 2, scope: !12806, inlinedAt: !12808)
!12806 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12807, file: !12807, line: 42, type: !3070, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !2002)
!12807 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12808 = distinct !DILocation(line: 510, column: 2, scope: !12796)
!12809 = !DILocation(line: 43, column: 3, scope: !12801, inlinedAt: !12805)
!12810 = !DILocation(line: 43, column: 60, scope: !12801, inlinedAt: !12805)
!12811 = !DILocation(line: 0, scope: !12801, inlinedAt: !12805)
!12812 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12813, file: !6383, line: 1153, type: !110)
!12813 = distinct !DISubprogram(name: "__set_MSP", scope: !6383, file: !6383, line: 1153, type: !6480, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12814)
!12814 = !{!12812}
!12815 = !DILocation(line: 0, scope: !12813, inlinedAt: !12816)
!12816 = distinct !DILocation(line: 46, column: 2, scope: !12801, inlinedAt: !12805)
!12817 = !DILocation(line: 1155, column: 3, scope: !12813, inlinedAt: !12816)
!12818 = !{i64 2850856}
!12819 = !DILocation(line: 62, column: 11, scope: !12801, inlinedAt: !12805)
!12820 = !DILocation(line: 102, column: 2, scope: !12821, inlinedAt: !12822)
!12821 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7435, file: !7435, line: 97, type: !3070, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !2002)
!12822 = distinct !DILocation(line: 45, column: 2, scope: !12806, inlinedAt: !12808)
!12823 = !DILocation(line: 108, column: 2, scope: !12821, inlinedAt: !12822)
!12824 = !DILocation(line: 112, column: 2, scope: !12821, inlinedAt: !12822)
!12825 = !DILocation(line: 113, column: 2, scope: !12821, inlinedAt: !12822)
!12826 = !DILocation(line: 114, column: 2, scope: !12821, inlinedAt: !12822)
!12827 = !DILocation(line: 116, column: 2, scope: !12821, inlinedAt: !12822)
!12828 = !DILocation(line: 123, column: 13, scope: !12821, inlinedAt: !12822)
!12829 = !DILocation(line: 46, column: 2, scope: !12806, inlinedAt: !12808)
!12830 = !DILocation(line: 47, column: 2, scope: !12806, inlinedAt: !12808)
!12831 = !DILocation(line: 174, column: 12, scope: !12832, inlinedAt: !12833)
!12832 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7435, file: !7435, line: 169, type: !3070, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !2002)
!12833 = distinct !DILocation(line: 48, column: 2, scope: !12806, inlinedAt: !12808)
!12834 = !DILocation(line: 179, column: 12, scope: !12832, inlinedAt: !12833)
!12835 = !DILocation(line: 50, column: 2, scope: !12806, inlinedAt: !12808)
!12836 = !DILocation(line: 57, column: 2, scope: !12806, inlinedAt: !12808)
!12837 = !DILocation(line: 518, column: 2, scope: !12796)
!12838 = !DILocation(line: 518, column: 18, scope: !12796)
!12839 = !DILocation(line: 520, column: 2, scope: !12796)
!12840 = !DILocation(line: 523, column: 2, scope: !12796)
!12841 = !DILocation(line: 526, column: 2, scope: !12796)
!12842 = !DILocation(line: 527, column: 2, scope: !12796)
!12843 = !DILocation(line: 543, column: 24, scope: !12796)
!12844 = !DILocation(line: 543, column: 2, scope: !12796)
!12845 = !DILocation(line: 0, scope: !2034)
!12846 = !DILocation(line: 246, column: 15, scope: !2052)
!12847 = !DILocation(line: 246, column: 36, scope: !2051)
!12848 = !DILocation(line: 246, column: 2, scope: !2052)
!12849 = !DILocation(line: 247, column: 37, scope: !2050)
!12850 = !DILocation(line: 0, scope: !2050)
!12851 = !DILocation(line: 248, column: 19, scope: !2050)
!12852 = !DILocation(line: 248, column: 12, scope: !2050)
!12853 = !DILocation(line: 250, column: 11, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !2050, file: !1801, line: 250, column: 7)
!12855 = !DILocation(line: 250, column: 7, scope: !2050)
!12856 = !DILocation(line: 254, column: 11, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !1801, line: 254, column: 8)
!12858 = distinct !DILexicalBlock(scope: !12854, file: !1801, line: 250, column: 20)
!12859 = !DILocation(line: 254, column: 8, scope: !12858)
!12860 = !DILocation(line: 255, column: 9, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12857, file: !1801, line: 254, column: 17)
!12862 = !DILocation(line: 258, column: 9, scope: !12861)
!12863 = !DILocation(line: 261, column: 28, scope: !12861)
!12864 = !DILocation(line: 261, column: 10, scope: !12861)
!12865 = !DILocation(line: 261, column: 17, scope: !12861)
!12866 = !DILocation(line: 261, column: 26, scope: !12861)
!12867 = !DILocation(line: 262, column: 4, scope: !12861)
!12868 = !DILocation(line: 263, column: 9, scope: !12858)
!12869 = !DILocation(line: 263, column: 16, scope: !12858)
!12870 = !DILocation(line: 263, column: 28, scope: !12858)
!12871 = !DILocation(line: 264, column: 3, scope: !12858)
!12872 = !DILocation(line: 246, column: 60, scope: !2051)
!12873 = distinct !{!12873, !12848, !12874}
!12874 = !DILocation(line: 265, column: 2, scope: !2052)
!12875 = !DILocation(line: 266, column: 1, scope: !2034)
!12876 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6423, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12877)
!12877 = !{!12878, !12879}
!12878 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12876, file: !535, line: 1814, type: !771)
!12879 = !DILocalVariable(name: "priority", arg: 2, scope: !12876, file: !535, line: 1814, type: !110)
!12880 = !DILocation(line: 0, scope: !12876)
!12881 = !DILocation(line: 1822, column: 48, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12883, file: !535, line: 1821, column: 3)
!12883 = distinct !DILexicalBlock(scope: !12876, file: !535, line: 1816, column: 7)
!12884 = !DILocation(line: 1822, column: 32, scope: !12882)
!12885 = !DILocation(line: 1822, column: 40, scope: !12882)
!12886 = !DILocation(line: 1822, column: 5, scope: !12882)
!12887 = !DILocation(line: 1822, column: 46, scope: !12882)
!12888 = !DILocation(line: 1824, column: 1, scope: !12876)
!12889 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12807, file: !12807, line: 32, type: !3070, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2002)
!12890 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12891, file: !12891, line: 215, type: !12788, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12892)
!12891 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12892 = !{!12893}
!12893 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12890, file: !12891, line: 215, type: !1893)
!12894 = !DILocation(line: 0, scope: !12890)
!12895 = !DILocation(line: 217, column: 21, scope: !12890)
!12896 = !DILocation(line: 217, column: 34, scope: !12890)
!12897 = !DILocation(line: 221, column: 21, scope: !12890)
!12898 = !DILocation(line: 221, column: 34, scope: !12890)
!12899 = !DILocation(line: 223, column: 27, scope: !12890)
!12900 = !DILocation(line: 223, column: 33, scope: !12890)
!12901 = !DILocation(line: 224, column: 27, scope: !12890)
!12902 = !DILocation(line: 224, column: 32, scope: !12890)
!12903 = !DILocation(line: 232, column: 16, scope: !12890)
!12904 = !DILocation(line: 232, column: 30, scope: !12890)
!12905 = !DILocation(line: 239, column: 24, scope: !12890)
!12906 = !DILocation(line: 240, column: 1, scope: !12890)
!12907 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1801, file: !1801, line: 399, type: !12908, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12910)
!12908 = !DISubroutineType(types: !12909)
!12909 = !{!285}
!12910 = !{!12911}
!12911 = !DILocalVariable(name: "stack_ptr", scope: !12907, file: !1801, line: 401, type: !285)
!12912 = !DILocation(line: 404, column: 2, scope: !12907)
!12913 = !DILocation(line: 416, column: 24, scope: !12907)
!12914 = !DILocation(line: 418, column: 14, scope: !12907)
!12915 = !DILocation(line: 0, scope: !12907)
!12916 = !DILocation(line: 423, column: 2, scope: !12907)
!12917 = !DILocation(line: 424, column: 2, scope: !12907)
!12918 = !DILocation(line: 426, column: 2, scope: !12907)
!12919 = !DILocation(line: 428, column: 2, scope: !12907)
!12920 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1801, file: !1801, line: 432, type: !12921, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12923)
!12921 = !DISubroutineType(types: !12922)
!12922 = !{null, !285}
!12923 = !{!12924}
!12924 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12920, file: !1801, line: 432, type: !285)
!12925 = !DILocation(line: 0, scope: !12920)
!12926 = !DILocation(line: 435, column: 2, scope: !12920)
!12927 = !DILocation(line: 445, column: 2, scope: !12920)
!12928 = distinct !DISubprogram(name: "bg_thread_main", scope: !1801, file: !1801, line: 277, type: !3182, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12929)
!12929 = !{!12930, !12931, !12932}
!12930 = !DILocalVariable(name: "unused1", arg: 1, scope: !12928, file: !1801, line: 277, type: !107)
!12931 = !DILocalVariable(name: "unused2", arg: 2, scope: !12928, file: !1801, line: 277, type: !107)
!12932 = !DILocalVariable(name: "unused3", arg: 3, scope: !12928, file: !1801, line: 277, type: !107)
!12933 = !DILocation(line: 0, scope: !12928)
!12934 = !DILocation(line: 291, column: 20, scope: !12928)
!12935 = !DILocation(line: 293, column: 2, scope: !12928)
!12936 = !DILocation(line: 297, column: 2, scope: !12928)
!12937 = !DILocation(line: 305, column: 2, scope: !12928)
!12938 = !DILocation(line: 307, column: 2, scope: !12928)
!12939 = !DILocation(line: 330, column: 8, scope: !12928)
!12940 = !DILocation(line: 333, column: 34, scope: !12928)
!12941 = !DILocation(line: 339, column: 1, scope: !12928)
!12942 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2065, file: !2065, line: 45, type: !12943, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !12951)
!12943 = !DISubroutineType(types: !12944)
!12944 = !{null, !12945, !107}
!12945 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !12946)
!12946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12947, size: 32)
!12947 = !DISubroutineType(types: !12948)
!12948 = !{null, !12949, !107}
!12949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12950, size: 32)
!12950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2070)
!12951 = !{!12952, !12953}
!12952 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12942, file: !2065, line: 45, type: !12945)
!12953 = !DILocalVariable(name: "user_data", arg: 2, scope: !12942, file: !2065, line: 45, type: !107)
!12954 = !DILocation(line: 0, scope: !12942)
!12955 = !DILocation(line: 71, column: 1, scope: !12942)
!12956 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2065, file: !2065, line: 73, type: !12943, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !12957)
!12957 = !{!12958, !12959}
!12958 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12956, file: !2065, line: 73, type: !12945)
!12959 = !DILocalVariable(name: "user_data", arg: 2, scope: !12956, file: !2065, line: 73, type: !107)
!12960 = !DILocation(line: 0, scope: !12956)
!12961 = !DILocation(line: 95, column: 1, scope: !12956)
!12962 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2065, file: !2065, line: 97, type: !7436, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !2002)
!12963 = !DILocation(line: 1031, column: 3, scope: !12964, inlinedAt: !12967)
!12964 = distinct !DISubprogram(name: "__get_IPSR", scope: !6383, file: !6383, line: 1027, type: !6470, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !12965)
!12965 = !{!12966}
!12966 = !DILocalVariable(name: "result", scope: !12964, file: !6383, line: 1029, type: !110)
!12967 = distinct !DILocation(line: 48, column: 10, scope: !12968, inlinedAt: !12969)
!12968 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7435, file: !7435, line: 46, type: !7436, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !2002)
!12969 = distinct !DILocation(line: 99, column: 9, scope: !12962)
!12970 = !{i64 2856507}
!12971 = !DILocation(line: 0, scope: !12964, inlinedAt: !12967)
!12972 = !DILocation(line: 48, column: 9, scope: !12968, inlinedAt: !12969)
!12973 = !DILocation(line: 99, column: 2, scope: !12962)
!12974 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2065, file: !2065, line: 106, type: !3070, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !2002)
!12975 = !DILocation(line: 108, column: 2, scope: !12974)
!12976 = !DILocation(line: 108, column: 17, scope: !12974)
!12977 = !DILocation(line: 108, column: 30, scope: !12974)
!12978 = !DILocation(line: 109, column: 1, scope: !12974)
!12979 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2065, file: !2065, line: 116, type: !3070, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !2002)
!12980 = !DILocation(line: 118, column: 2, scope: !12979)
!12981 = !DILocation(line: 118, column: 17, scope: !12979)
!12982 = !DILocation(line: 118, column: 30, scope: !12979)
!12983 = !DILocation(line: 119, column: 1, scope: !12979)
!12984 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2065, file: !2065, line: 126, type: !7436, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !2002)
!12985 = !DILocation(line: 128, column: 10, scope: !12984)
!12986 = !DILocation(line: 128, column: 25, scope: !12984)
!12987 = !DILocation(line: 128, column: 38, scope: !12984)
!12988 = !DILocation(line: 128, column: 53, scope: !12984)
!12989 = !DILocation(line: 128, column: 2, scope: !12984)
!12990 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2065, file: !2065, line: 187, type: !12991, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !12993)
!12991 = !DISubroutineType(types: !12992)
!12992 = !{!109, !2069, !279}
!12993 = !{!12994, !12995}
!12994 = !DILocalVariable(name: "thread", arg: 1, scope: !12990, file: !2065, line: 187, type: !2069)
!12995 = !DILocalVariable(name: "value", arg: 2, scope: !12990, file: !2065, line: 187, type: !279)
!12996 = !DILocation(line: 0, scope: !12990)
!12997 = !DILocation(line: 190, column: 13, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12990, file: !2065, line: 190, column: 6)
!12999 = !DILocation(line: 190, column: 6, scope: !12990)
!13000 = !DILocation(line: 194, column: 10, scope: !12990)
!13001 = !DILocation(line: 194, column: 2, scope: !12990)
!13002 = !DILocation(line: 195, column: 2, scope: !12990)
!13003 = !DILocation(line: 195, column: 47, scope: !12990)
!13004 = !DILocation(line: 199, column: 2, scope: !12990)
!13005 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2065, file: !2065, line: 238, type: !13006, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13008)
!13006 = !DISubroutineType(types: !13007)
!13007 = !{!279, !2069}
!13008 = !{!13009}
!13009 = !DILocalVariable(name: "thread", arg: 1, scope: !13005, file: !2065, line: 238, type: !2069)
!13010 = !DILocation(line: 0, scope: !13005)
!13011 = !DILocation(line: 241, column: 23, scope: !13005)
!13012 = !DILocation(line: 241, column: 2, scope: !13005)
!13013 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2065, file: !2065, line: 248, type: !13014, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13016)
!13014 = !DISubroutineType(types: !13015)
!13015 = !{!109, !2068, !285, !234}
!13016 = !{!13017, !13018, !13019}
!13017 = !DILocalVariable(name: "thread", arg: 1, scope: !13013, file: !2065, line: 248, type: !2068)
!13018 = !DILocalVariable(name: "buf", arg: 2, scope: !13013, file: !2065, line: 248, type: !285)
!13019 = !DILocalVariable(name: "size", arg: 3, scope: !13013, file: !2065, line: 248, type: !234)
!13020 = !DILocation(line: 0, scope: !13013)
!13021 = !DILocation(line: 251, column: 15, scope: !13013)
!13022 = !DILocation(line: 251, column: 2, scope: !13013)
!13023 = !DILocation(line: 252, column: 2, scope: !13013)
!13024 = !DILocation(line: 0, scope: !2064)
!13025 = !DILocation(line: 281, column: 11, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !2064, file: !2065, line: 281, column: 6)
!13027 = !DILocation(line: 281, column: 20, scope: !13026)
!13028 = !DILocation(line: 275, column: 45, scope: !2064)
!13029 = !DILocation(line: 285, column: 10, scope: !2064)
!13030 = !DILocation(line: 0, scope: !2188)
!13031 = !DILocation(line: 293, column: 39, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !2188, file: !2065, line: 293, column: 2)
!13033 = !DILocation(line: 293, column: 2, scope: !2188)
!13034 = !DILocation(line: 273, column: 14, scope: !2064)
!13035 = !DILocation(line: 309, column: 2, scope: !2064)
!13036 = !DILocation(line: 309, column: 11, scope: !2064)
!13037 = !DILocation(line: 311, column: 2, scope: !2064)
!13038 = !DILocation(line: 293, column: 26, scope: !13032)
!13039 = !DILocation(line: 294, column: 9, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13032, file: !2065, line: 293, column: 54)
!13041 = !DILocation(line: 295, column: 21, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13040, file: !2065, line: 295, column: 7)
!13043 = !DILocation(line: 295, column: 28, scope: !13042)
!13044 = !DILocation(line: 295, column: 7, scope: !13040)
!13045 = !DILocation(line: 299, column: 25, scope: !13040)
!13046 = !DILocation(line: 299, column: 41, scope: !13040)
!13047 = !DILocation(line: 300, column: 7, scope: !13040)
!13048 = !DILocation(line: 300, column: 26, scope: !13040)
!13049 = !DILocation(line: 299, column: 10, scope: !13040)
!13050 = !DILocation(line: 299, column: 7, scope: !13040)
!13051 = !DILocation(line: 302, column: 16, scope: !13040)
!13052 = !DILocation(line: 304, column: 20, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13040, file: !2065, line: 304, column: 7)
!13054 = !DILocation(line: 304, column: 7, scope: !13040)
!13055 = !DILocation(line: 305, column: 26, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13053, file: !2065, line: 304, column: 26)
!13057 = !DILocation(line: 305, column: 42, scope: !13056)
!13058 = !DILocation(line: 305, column: 11, scope: !13056)
!13059 = !DILocation(line: 305, column: 8, scope: !13056)
!13060 = !DILocation(line: 306, column: 3, scope: !13056)
!13061 = !DILocation(line: 293, column: 50, scope: !13032)
!13062 = !DILocation(line: 312, column: 1, scope: !2064)
!13063 = distinct !DISubprogram(name: "copy_bytes", scope: !2065, file: !2065, line: 261, type: !13064, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13066)
!13064 = !DISubroutineType(types: !13065)
!13065 = !{!234, !285, !234, !279, !234}
!13066 = !{!13067, !13068, !13069, !13070, !13071}
!13067 = !DILocalVariable(name: "dest", arg: 1, scope: !13063, file: !2065, line: 261, type: !285)
!13068 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13063, file: !2065, line: 261, type: !234)
!13069 = !DILocalVariable(name: "src", arg: 3, scope: !13063, file: !2065, line: 261, type: !279)
!13070 = !DILocalVariable(name: "src_size", arg: 4, scope: !13063, file: !2065, line: 261, type: !234)
!13071 = !DILocalVariable(name: "bytes_to_copy", scope: !13063, file: !2065, line: 263, type: !234)
!13072 = !DILocation(line: 0, scope: !13063)
!13073 = !DILocation(line: 265, column: 18, scope: !13063)
!13074 = !DILocation(line: 266, column: 2, scope: !13063)
!13075 = !DILocation(line: 268, column: 2, scope: !13063)
!13076 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2065, file: !2065, line: 383, type: !13077, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13079)
!13077 = !DISubroutineType(types: !13078)
!13078 = !{null, !2069}
!13079 = !{!13080}
!13080 = !DILocalVariable(name: "thread", arg: 1, scope: !13076, file: !2065, line: 383, type: !2069)
!13081 = !DILocation(line: 0, scope: !13076)
!13082 = !DILocation(line: 387, column: 2, scope: !13076)
!13083 = !DILocation(line: 388, column: 1, scope: !13076)
!13084 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2065, file: !2065, line: 528, type: !13085, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13092)
!13085 = !DISubroutineType(types: !13086)
!13086 = !{!285, !2069, !13087, !234, !3337, !107, !107, !107, !109, !110, !279}
!13087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13088, size: 32)
!13088 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3336, line: 44, baseType: !13089)
!13089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !13090)
!13090 = !{!13091}
!13091 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13089, file: !147, line: 48, baseType: !150, size: 8)
!13092 = !{!13093, !13094, !13095, !13096, !13097, !13098, !13099, !13100, !13101, !13102, !13103}
!13093 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13084, file: !2065, line: 528, type: !2069)
!13094 = !DILocalVariable(name: "stack", arg: 2, scope: !13084, file: !2065, line: 529, type: !13087)
!13095 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13084, file: !2065, line: 529, type: !234)
!13096 = !DILocalVariable(name: "entry", arg: 4, scope: !13084, file: !2065, line: 530, type: !3337)
!13097 = !DILocalVariable(name: "p1", arg: 5, scope: !13084, file: !2065, line: 531, type: !107)
!13098 = !DILocalVariable(name: "p2", arg: 6, scope: !13084, file: !2065, line: 531, type: !107)
!13099 = !DILocalVariable(name: "p3", arg: 7, scope: !13084, file: !2065, line: 531, type: !107)
!13100 = !DILocalVariable(name: "prio", arg: 8, scope: !13084, file: !2065, line: 532, type: !109)
!13101 = !DILocalVariable(name: "options", arg: 9, scope: !13084, file: !2065, line: 532, type: !110)
!13102 = !DILocalVariable(name: "name", arg: 10, scope: !13084, file: !2065, line: 532, type: !279)
!13103 = !DILocalVariable(name: "stack_ptr", scope: !13084, file: !2065, line: 534, type: !285)
!13104 = !DILocation(line: 0, scope: !13084)
!13105 = !DILocation(line: 536, column: 2, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13107, file: !2065, line: 536, column: 2)
!13107 = distinct !DILexicalBlock(scope: !13108, file: !2065, line: 536, column: 2)
!13108 = distinct !DILexicalBlock(scope: !13084, file: !2065, line: 536, column: 2)
!13109 = !DILocation(line: 536, column: 2, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13106, file: !2065, line: 536, column: 2)
!13111 = !DILocation(line: 550, column: 28, scope: !13084)
!13112 = !DILocation(line: 550, column: 2, scope: !13084)
!13113 = !DILocation(line: 553, column: 34, scope: !13084)
!13114 = !DILocation(line: 553, column: 2, scope: !13084)
!13115 = !DILocation(line: 554, column: 14, scope: !13084)
!13116 = !DILocation(line: 564, column: 2, scope: !13084)
!13117 = !DILocation(line: 567, column: 14, scope: !13084)
!13118 = !DILocation(line: 567, column: 24, scope: !13084)
!13119 = !DILocation(line: 594, column: 11, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13084, file: !2065, line: 594, column: 6)
!13121 = !DILocation(line: 0, scope: !13120)
!13122 = !DILocation(line: 594, column: 6, scope: !13084)
!13123 = !DILocation(line: 595, column: 3, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13120, file: !2065, line: 594, column: 20)
!13125 = !DILocation(line: 598, column: 3, scope: !13124)
!13126 = !DILocation(line: 598, column: 52, scope: !13124)
!13127 = !DILocation(line: 599, column: 2, scope: !13124)
!13128 = !DILocation(line: 600, column: 23, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13120, file: !2065, line: 599, column: 9)
!13130 = !DILocation(line: 612, column: 7, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13084, file: !2065, line: 612, column: 6)
!13132 = !DILocation(line: 612, column: 6, scope: !13084)
!13133 = !DILocation(line: 627, column: 40, scope: !13084)
!13134 = !DILocation(line: 637, column: 2, scope: !13084)
!13135 = !DILocation(line: 613, column: 15, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13131, file: !2065, line: 612, column: 17)
!13137 = !DILocation(line: 613, column: 29, scope: !13136)
!13138 = !DILocation(line: 638, column: 1, scope: !13084)
!13139 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12787, file: !12787, line: 78, type: !13140, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13142)
!13140 = !DISubroutineType(types: !13141)
!13141 = !{!347, !107}
!13142 = !{!13143}
!13143 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13139, file: !12787, line: 78, type: !107)
!13144 = !DILocation(line: 0, scope: !13139)
!13145 = !DILocation(line: 80, column: 21, scope: !13139)
!13146 = !DILocation(line: 80, column: 2, scope: !13139)
!13147 = distinct !DISubprogram(name: "z_waitq_init", scope: !13148, file: !13148, line: 47, type: !13149, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13151)
!13148 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13149 = !DISubroutineType(types: !13150)
!13150 = !{null, !2100}
!13151 = !{!13152}
!13152 = !DILocalVariable(name: "w", arg: 1, scope: !13147, file: !13148, line: 47, type: !2100)
!13153 = !DILocation(line: 0, scope: !13147)
!13154 = !DILocation(line: 49, column: 21, scope: !13147)
!13155 = !DILocation(line: 49, column: 2, scope: !13147)
!13156 = !DILocation(line: 50, column: 1, scope: !13147)
!13157 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2065, file: !2065, line: 791, type: !13158, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13161)
!13158 = !DISubroutineType(types: !13159)
!13159 = !{null, !13160, !109, !110, !32}
!13160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!13161 = !{!13162, !13163, !13164, !13165}
!13162 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13157, file: !2065, line: 791, type: !13160)
!13163 = !DILocalVariable(name: "priority", arg: 2, scope: !13157, file: !2065, line: 791, type: !109)
!13164 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13157, file: !2065, line: 792, type: !110)
!13165 = !DILocalVariable(name: "options", arg: 4, scope: !13157, file: !2065, line: 792, type: !32)
!13166 = !DILocation(line: 0, scope: !13157)
!13167 = !DILocation(line: 795, column: 15, scope: !13157)
!13168 = !DILocation(line: 795, column: 25, scope: !13157)
!13169 = !DILocation(line: 796, column: 30, scope: !13157)
!13170 = !DILocation(line: 796, column: 15, scope: !13157)
!13171 = !DILocation(line: 796, column: 28, scope: !13157)
!13172 = !DILocation(line: 797, column: 30, scope: !13157)
!13173 = !DILocation(line: 797, column: 15, scope: !13157)
!13174 = !DILocation(line: 797, column: 28, scope: !13157)
!13175 = !DILocation(line: 799, column: 22, scope: !13157)
!13176 = !DILocation(line: 799, column: 15, scope: !13157)
!13177 = !DILocation(line: 799, column: 20, scope: !13157)
!13178 = !DILocation(line: 801, column: 15, scope: !13157)
!13179 = !DILocation(line: 801, column: 28, scope: !13157)
!13180 = !DILocation(line: 814, column: 2, scope: !13157)
!13181 = !DILocation(line: 815, column: 1, scope: !13157)
!13182 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2065, file: !2065, line: 449, type: !13183, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13185)
!13183 = !DISubroutineType(types: !13184)
!13184 = !{!285, !2069, !13087, !234}
!13185 = !{!13186, !13187, !13188, !13189, !13190, !13191, !13192, !13193}
!13186 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13182, file: !2065, line: 449, type: !2069)
!13187 = !DILocalVariable(name: "stack", arg: 2, scope: !13182, file: !2065, line: 450, type: !13087)
!13188 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13182, file: !2065, line: 450, type: !234)
!13189 = !DILocalVariable(name: "stack_obj_size", scope: !13182, file: !2065, line: 452, type: !234)
!13190 = !DILocalVariable(name: "stack_buf_size", scope: !13182, file: !2065, line: 452, type: !234)
!13191 = !DILocalVariable(name: "stack_ptr", scope: !13182, file: !2065, line: 453, type: !285)
!13192 = !DILocalVariable(name: "stack_buf_start", scope: !13182, file: !2065, line: 453, type: !285)
!13193 = !DILocalVariable(name: "delta", scope: !13182, file: !2065, line: 454, type: !234)
!13194 = !DILocation(line: 0, scope: !13182)
!13195 = !DILocation(line: 465, column: 20, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13182, file: !2065, line: 463, column: 2)
!13197 = !DILocation(line: 466, column: 21, scope: !13196)
!13198 = !DILocation(line: 473, column: 28, scope: !13182)
!13199 = !DILocation(line: 514, column: 33, scope: !13182)
!13200 = !DILocation(line: 514, column: 25, scope: !13182)
!13201 = !DILocation(line: 514, column: 31, scope: !13182)
!13202 = !DILocation(line: 515, column: 25, scope: !13182)
!13203 = !DILocation(line: 515, column: 30, scope: !13182)
!13204 = !DILocation(line: 516, column: 25, scope: !13182)
!13205 = !DILocation(line: 516, column: 31, scope: !13182)
!13206 = !DILocation(line: 520, column: 2, scope: !13182)
!13207 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !13208, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13210)
!13208 = !DISubroutineType(types: !13209)
!13209 = !{!285, !13087}
!13210 = !{!13211}
!13211 = !DILocalVariable(name: "sym", arg: 1, scope: !13207, file: !147, line: 331, type: !13087)
!13212 = !DILocation(line: 0, scope: !13207)
!13213 = !DILocation(line: 333, column: 21, scope: !13207)
!13214 = !DILocation(line: 333, column: 2, scope: !13207)
!13215 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13216, file: !13216, line: 40, type: !13217, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13219)
!13216 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13217 = !DISubroutineType(types: !13218)
!13218 = !{null, !13160}
!13219 = !{!13220}
!13220 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13215, file: !13216, line: 40, type: !13160)
!13221 = !DILocation(line: 0, scope: !13215)
!13222 = !DILocation(line: 42, column: 31, scope: !13215)
!13223 = !DILocation(line: 42, column: 2, scope: !13215)
!13224 = !DILocation(line: 43, column: 1, scope: !13215)
!13225 = distinct !DISubprogram(name: "z_init_timeout", scope: !13216, file: !13216, line: 25, type: !2126, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13226)
!13226 = !{!13227}
!13227 = !DILocalVariable(name: "to", arg: 1, scope: !13225, file: !13216, line: 25, type: !2128)
!13228 = !DILocation(line: 0, scope: !13225)
!13229 = !DILocation(line: 27, column: 22, scope: !13225)
!13230 = !DILocation(line: 27, column: 2, scope: !13225)
!13231 = !DILocation(line: 28, column: 1, scope: !13225)
!13232 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13233, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13235)
!13233 = !DISubroutineType(types: !13234)
!13234 = !{null, !2175}
!13235 = !{!13236}
!13236 = !DILocalVariable(name: "node", arg: 1, scope: !13232, file: !127, line: 211, type: !2175)
!13237 = !DILocation(line: 0, scope: !13232)
!13238 = !DILocation(line: 213, column: 8, scope: !13232)
!13239 = !DILocation(line: 213, column: 13, scope: !13232)
!13240 = !DILocation(line: 214, column: 8, scope: !13232)
!13241 = !DILocation(line: 214, column: 13, scope: !13232)
!13242 = !DILocation(line: 215, column: 1, scope: !13232)
!13243 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13244, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13247)
!13244 = !DISubroutineType(types: !13245)
!13245 = !{null, !13246}
!13246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 32)
!13247 = !{!13248}
!13248 = !DILocalVariable(name: "list", arg: 1, scope: !13243, file: !127, line: 197, type: !13246)
!13249 = !DILocation(line: 0, scope: !13243)
!13250 = !DILocation(line: 199, column: 8, scope: !13243)
!13251 = !DILocation(line: 199, column: 13, scope: !13243)
!13252 = !DILocation(line: 200, column: 8, scope: !13243)
!13253 = !DILocation(line: 200, column: 13, scope: !13243)
!13254 = !DILocation(line: 201, column: 1, scope: !13243)
!13255 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2065, file: !2065, line: 641, type: !13256, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13262)
!13256 = !DISubroutineType(types: !13257)
!13257 = !{!2068, !2069, !13087, !234, !3337, !107, !107, !107, !109, !110, !13258}
!13258 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13259)
!13259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13260)
!13260 = !{!13261}
!13261 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13259, file: !104, line: 66, baseType: !103, size: 64)
!13262 = !{!13263, !13264, !13265, !13266, !13267, !13268, !13269, !13270, !13271, !13272}
!13263 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13255, file: !2065, line: 641, type: !2069)
!13264 = !DILocalVariable(name: "stack", arg: 2, scope: !13255, file: !2065, line: 642, type: !13087)
!13265 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13255, file: !2065, line: 643, type: !234)
!13266 = !DILocalVariable(name: "entry", arg: 4, scope: !13255, file: !2065, line: 643, type: !3337)
!13267 = !DILocalVariable(name: "p1", arg: 5, scope: !13255, file: !2065, line: 644, type: !107)
!13268 = !DILocalVariable(name: "p2", arg: 6, scope: !13255, file: !2065, line: 644, type: !107)
!13269 = !DILocalVariable(name: "p3", arg: 7, scope: !13255, file: !2065, line: 644, type: !107)
!13270 = !DILocalVariable(name: "prio", arg: 8, scope: !13255, file: !2065, line: 645, type: !109)
!13271 = !DILocalVariable(name: "options", arg: 9, scope: !13255, file: !2065, line: 645, type: !110)
!13272 = !DILocalVariable(name: "delay", arg: 10, scope: !13255, file: !2065, line: 645, type: !13258)
!13273 = !DILocation(line: 0, scope: !13255)
!13274 = !DILocation(line: 1031, column: 3, scope: !12964, inlinedAt: !13275)
!13275 = distinct !DILocation(line: 48, column: 10, scope: !12968, inlinedAt: !13276)
!13276 = distinct !DILocation(line: 647, column: 2, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13278, file: !2065, line: 647, column: 2)
!13278 = distinct !DILexicalBlock(scope: !13255, file: !2065, line: 647, column: 2)
!13279 = !DILocation(line: 0, scope: !12964, inlinedAt: !13275)
!13280 = !DILocation(line: 48, column: 9, scope: !12968, inlinedAt: !13276)
!13281 = !DILocation(line: 647, column: 2, scope: !13278)
!13282 = !DILocation(line: 647, column: 2, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13277, file: !2065, line: 647, column: 2)
!13284 = !DILocation(line: 649, column: 2, scope: !13255)
!13285 = !DILocation(line: 652, column: 7, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13255, file: !2065, line: 652, column: 6)
!13287 = !DILocation(line: 652, column: 6, scope: !13255)
!13288 = !DILocation(line: 653, column: 3, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13286, file: !2065, line: 652, column: 39)
!13290 = !DILocation(line: 654, column: 2, scope: !13289)
!13291 = !DILocation(line: 656, column: 2, scope: !13255)
!13292 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2065, file: !2065, line: 401, type: !13293, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13295)
!13293 = !DISubroutineType(types: !13294)
!13294 = !{null, !2069, !13258}
!13295 = !{!13296, !13297}
!13296 = !DILocalVariable(name: "thread", arg: 1, scope: !13292, file: !2065, line: 401, type: !2069)
!13297 = !DILocalVariable(name: "delay", arg: 2, scope: !13292, file: !2065, line: 401, type: !13258)
!13298 = !DILocation(line: 0, scope: !13292)
!13299 = !DILocation(line: 404, column: 6, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13292, file: !2065, line: 404, column: 6)
!13301 = !DILocation(line: 404, column: 6, scope: !13292)
!13302 = !DILocation(line: 405, column: 3, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13300, file: !2065, line: 404, column: 38)
!13304 = !DILocation(line: 406, column: 2, scope: !13303)
!13305 = !DILocation(line: 407, column: 3, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13300, file: !2065, line: 406, column: 9)
!13307 = !DILocation(line: 413, column: 1, scope: !13292)
!13308 = distinct !DISubprogram(name: "k_thread_start", scope: !3216, file: !3216, line: 205, type: !13309, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13311)
!13309 = !DISubroutineType(types: !13310)
!13310 = !{null, !2068}
!13311 = !{!13312}
!13312 = !DILocalVariable(name: "thread", arg: 1, scope: !13308, file: !3216, line: 205, type: !2068)
!13313 = !DILocation(line: 0, scope: !13308)
!13314 = !DILocation(line: 214, column: 2, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13308, file: !3216, line: 214, column: 2)
!13316 = !{i64 2154098469}
!13317 = !DILocation(line: 215, column: 2, scope: !13308)
!13318 = !DILocation(line: 216, column: 1, scope: !13308)
!13319 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13216, file: !13216, line: 47, type: !13293, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13320)
!13320 = !{!13321, !13322}
!13321 = !DILocalVariable(name: "thread", arg: 1, scope: !13319, file: !13216, line: 47, type: !2069)
!13322 = !DILocalVariable(name: "ticks", arg: 2, scope: !13319, file: !13216, line: 47, type: !13258)
!13323 = !DILocation(line: 0, scope: !13319)
!13324 = !DILocation(line: 49, column: 30, scope: !13319)
!13325 = !DILocation(line: 49, column: 2, scope: !13319)
!13326 = !DILocation(line: 50, column: 1, scope: !13319)
!13327 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2065, file: !2065, line: 748, type: !3070, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13328)
!13328 = !{!13329, !13347}
!13329 = !DILocalVariable(name: "thread_data", scope: !13330, file: !2065, line: 750, type: !13331)
!13330 = distinct !DILexicalBlock(scope: !13327, file: !2065, line: 750, column: 2)
!13331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13332, size: 32)
!13332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !13333)
!13333 = !{!13334, !13335, !13336, !13337, !13338, !13339, !13340, !13341, !13342, !13343, !13344, !13346}
!13334 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13332, file: !118, line: 621, baseType: !2069, size: 32)
!13335 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13332, file: !118, line: 622, baseType: !13087, size: 32, offset: 32)
!13336 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13332, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!13337 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13332, file: !118, line: 624, baseType: !3337, size: 32, offset: 96)
!13338 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13332, file: !118, line: 625, baseType: !107, size: 32, offset: 128)
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13332, file: !118, line: 626, baseType: !107, size: 32, offset: 160)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13332, file: !118, line: 627, baseType: !107, size: 32, offset: 192)
!13341 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13332, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!13342 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13332, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13332, file: !118, line: 630, baseType: !745, size: 32, offset: 288)
!13344 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13332, file: !118, line: 631, baseType: !13345, size: 32, offset: 320)
!13345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 32)
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13332, file: !118, line: 632, baseType: !279, size: 32, offset: 352)
!13347 = !DILocalVariable(name: "thread_data", scope: !13348, file: !2065, line: 781, type: !13331)
!13348 = distinct !DILexicalBlock(scope: !13327, file: !2065, line: 781, column: 2)
!13349 = !DILocation(line: 0, scope: !13330)
!13350 = !DILocation(line: 750, column: 2, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13352, file: !2065, line: 750, column: 2)
!13352 = distinct !DILexicalBlock(scope: !13353, file: !2065, line: 750, column: 2)
!13353 = distinct !DILexicalBlock(scope: !13330, file: !2065, line: 750, column: 2)
!13354 = !DILocation(line: 750, column: 2, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13356, file: !2065, line: 750, column: 2)
!13356 = distinct !DILexicalBlock(scope: !13351, file: !2065, line: 750, column: 2)
!13357 = !DILocation(line: 750, column: 2, scope: !13352)
!13358 = !DILocation(line: 750, column: 2, scope: !13330)
!13359 = !DILocation(line: 780, column: 2, scope: !13327)
!13360 = !DILocation(line: 0, scope: !13348)
!13361 = !DILocation(line: 781, column: 2, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13363, file: !2065, line: 781, column: 2)
!13363 = distinct !DILexicalBlock(scope: !13364, file: !2065, line: 781, column: 2)
!13364 = distinct !DILexicalBlock(scope: !13348, file: !2065, line: 781, column: 2)
!13365 = !DILocation(line: 752, column: 17, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13353, file: !2065, line: 750, column: 38)
!13367 = !DILocation(line: 753, column: 17, scope: !13366)
!13368 = !DILocation(line: 754, column: 17, scope: !13366)
!13369 = !DILocation(line: 755, column: 17, scope: !13366)
!13370 = !DILocation(line: 756, column: 17, scope: !13366)
!13371 = !DILocation(line: 757, column: 17, scope: !13366)
!13372 = !DILocation(line: 758, column: 17, scope: !13366)
!13373 = !DILocation(line: 759, column: 17, scope: !13366)
!13374 = !DILocation(line: 760, column: 17, scope: !13366)
!13375 = !DILocation(line: 761, column: 17, scope: !13366)
!13376 = !DILocation(line: 751, column: 3, scope: !13366)
!13377 = !DILocation(line: 763, column: 16, scope: !13366)
!13378 = !DILocation(line: 763, column: 29, scope: !13366)
!13379 = !DILocation(line: 763, column: 39, scope: !13366)
!13380 = !DILocation(line: 750, column: 2, scope: !13353)
!13381 = !DILocation(line: 750, column: 2, scope: !13356)
!13382 = distinct !{!13382, !13358, !13383}
!13383 = !DILocation(line: 764, column: 2, scope: !13330)
!13384 = !DILocation(line: 781, column: 2, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13386, file: !2065, line: 781, column: 2)
!13386 = distinct !DILexicalBlock(scope: !13362, file: !2065, line: 781, column: 2)
!13387 = !DILocation(line: 781, column: 2, scope: !13363)
!13388 = !DILocation(line: 781, column: 2, scope: !13348)
!13389 = !DILocation(line: 787, column: 2, scope: !13327)
!13390 = !DILocation(line: 788, column: 1, scope: !13327)
!13391 = !DILocation(line: 782, column: 20, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13393, file: !2065, line: 782, column: 7)
!13393 = distinct !DILexicalBlock(scope: !13364, file: !2065, line: 781, column: 38)
!13394 = !DILocation(line: 782, column: 31, scope: !13392)
!13395 = !DILocation(line: 782, column: 7, scope: !13393)
!13396 = !DILocation(line: 783, column: 37, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13392, file: !2065, line: 782, column: 51)
!13398 = !DILocation(line: 784, column: 10, scope: !13397)
!13399 = !DILocation(line: 783, column: 4, scope: !13397)
!13400 = !DILocation(line: 785, column: 3, scope: !13397)
!13401 = !DILocation(line: 781, column: 2, scope: !13364)
!13402 = !DILocation(line: 781, column: 2, scope: !13386)
!13403 = distinct !{!13403, !13388, !13404}
!13404 = !DILocation(line: 786, column: 2, scope: !13348)
!13405 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13406, file: !13406, line: 403, type: !13407, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13409)
!13406 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13407 = !DISubroutineType(types: !13408)
!13408 = !{!111, !111}
!13409 = !{!13410}
!13410 = !DILocalVariable(name: "t", arg: 1, scope: !13405, file: !13406, line: 403, type: !111)
!13411 = !DILocation(line: 0, scope: !13405)
!13412 = !DILocalVariable(name: "t", arg: 1, scope: !13413, file: !13406, line: 102, type: !111)
!13413 = distinct !DISubprogram(name: "z_tmcvt", scope: !13406, file: !13406, line: 102, type: !13414, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13416)
!13414 = !DISubroutineType(types: !13415)
!13415 = !{!111, !111, !110, !110, !347, !347, !347, !347}
!13416 = !{!13412, !13417, !13418, !13419, !13420, !13421, !13422, !13423, !13424, !13425, !13426}
!13417 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13413, file: !13406, line: 102, type: !110)
!13418 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13413, file: !13406, line: 103, type: !110)
!13419 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13413, file: !13406, line: 103, type: !347)
!13420 = !DILocalVariable(name: "result32", arg: 5, scope: !13413, file: !13406, line: 104, type: !347)
!13421 = !DILocalVariable(name: "round_up", arg: 6, scope: !13413, file: !13406, line: 104, type: !347)
!13422 = !DILocalVariable(name: "round_off", arg: 7, scope: !13413, file: !13406, line: 105, type: !347)
!13423 = !DILocalVariable(name: "mul_ratio", scope: !13413, file: !13406, line: 107, type: !347)
!13424 = !DILocalVariable(name: "div_ratio", scope: !13413, file: !13406, line: 109, type: !347)
!13425 = !DILocalVariable(name: "off", scope: !13413, file: !13406, line: 116, type: !111)
!13426 = !DILocalVariable(name: "rdivisor", scope: !13427, file: !13406, line: 119, type: !110)
!13427 = distinct !DILexicalBlock(scope: !13428, file: !13406, line: 118, column: 18)
!13428 = distinct !DILexicalBlock(scope: !13413, file: !13406, line: 118, column: 6)
!13429 = !DILocation(line: 0, scope: !13413, inlinedAt: !13430)
!13430 = distinct !DILocation(line: 406, column: 9, scope: !13405)
!13431 = !DILocation(line: 145, column: 13, scope: !13432, inlinedAt: !13430)
!13432 = distinct !DILexicalBlock(scope: !13433, file: !13406, line: 144, column: 10)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !13406, line: 142, column: 7)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !13406, line: 141, column: 24)
!13435 = distinct !DILexicalBlock(scope: !13436, file: !13406, line: 141, column: 13)
!13436 = distinct !DILexicalBlock(scope: !13413, file: !13406, line: 134, column: 6)
!13437 = !DILocation(line: 406, column: 2, scope: !13405)
!13438 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2065, file: !2065, line: 817, type: !4462, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13439)
!13439 = !{!13440, !13441, !13442, !13443}
!13440 = !DILocalVariable(name: "entry", arg: 1, scope: !13438, file: !2065, line: 817, type: !3337)
!13441 = !DILocalVariable(name: "p1", arg: 2, scope: !13438, file: !2065, line: 818, type: !107)
!13442 = !DILocalVariable(name: "p2", arg: 3, scope: !13438, file: !2065, line: 818, type: !107)
!13443 = !DILocalVariable(name: "p3", arg: 4, scope: !13438, file: !2065, line: 818, type: !107)
!13444 = !DILocation(line: 0, scope: !13438)
!13445 = !DILocation(line: 822, column: 2, scope: !13438)
!13446 = !DILocation(line: 822, column: 17, scope: !13438)
!13447 = !DILocation(line: 822, column: 30, scope: !13438)
!13448 = !DILocation(line: 823, column: 2, scope: !13438)
!13449 = !DILocation(line: 845, column: 2, scope: !13438)
!13450 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2065, file: !2065, line: 853, type: !13451, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13454)
!13451 = !DISubroutineType(types: !13452)
!13452 = !{!347, !13453}
!13453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 32)
!13454 = !{!13455, !13456}
!13455 = !DILocalVariable(name: "l", arg: 1, scope: !13450, file: !2065, line: 853, type: !13453)
!13456 = !DILocalVariable(name: "thread_cpu", scope: !13450, file: !2065, line: 855, type: !22)
!13457 = !DILocation(line: 0, scope: !13450)
!13458 = !DILocation(line: 855, column: 28, scope: !13450)
!13459 = !DILocation(line: 857, column: 17, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13450, file: !2065, line: 857, column: 6)
!13461 = !DILocation(line: 857, column: 6, scope: !13450)
!13462 = !DILocation(line: 858, column: 19, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13464, file: !2065, line: 858, column: 7)
!13464 = distinct !DILexicalBlock(scope: !13460, file: !2065, line: 857, column: 24)
!13465 = !DILocation(line: 858, column: 42, scope: !13463)
!13466 = !DILocation(line: 858, column: 28, scope: !13463)
!13467 = !DILocation(line: 858, column: 25, scope: !13463)
!13468 = !DILocation(line: 858, column: 7, scope: !13464)
!13469 = !DILocation(line: 862, column: 2, scope: !13450)
!13470 = !DILocation(line: 863, column: 1, scope: !13450)
!13471 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2065, file: !2065, line: 865, type: !13451, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13472)
!13472 = !{!13473}
!13473 = !DILocalVariable(name: "l", arg: 1, scope: !13471, file: !2065, line: 865, type: !13453)
!13474 = !DILocation(line: 0, scope: !13471)
!13475 = !DILocation(line: 867, column: 9, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13471, file: !2065, line: 867, column: 6)
!13477 = !DILocation(line: 867, column: 38, scope: !13476)
!13478 = !DILocation(line: 867, column: 24, scope: !13476)
!13479 = !DILocation(line: 867, column: 54, scope: !13476)
!13480 = !DILocation(line: 867, column: 43, scope: !13476)
!13481 = !DILocation(line: 867, column: 41, scope: !13476)
!13482 = !DILocation(line: 867, column: 20, scope: !13476)
!13483 = !DILocation(line: 867, column: 6, scope: !13471)
!13484 = !DILocation(line: 870, column: 16, scope: !13471)
!13485 = !DILocation(line: 871, column: 2, scope: !13471)
!13486 = !DILocation(line: 872, column: 1, scope: !13471)
!13487 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2065, file: !2065, line: 874, type: !13488, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13490)
!13488 = !DISubroutineType(types: !13489)
!13489 = !{null, !13453}
!13490 = !{!13491}
!13491 = !DILocalVariable(name: "l", arg: 1, scope: !13487, file: !2065, line: 874, type: !13453)
!13492 = !DILocation(line: 0, scope: !13487)
!13493 = !DILocation(line: 876, column: 32, scope: !13487)
!13494 = !DILocation(line: 876, column: 18, scope: !13487)
!13495 = !DILocation(line: 876, column: 48, scope: !13487)
!13496 = !DILocation(line: 876, column: 37, scope: !13487)
!13497 = !DILocation(line: 876, column: 35, scope: !13487)
!13498 = !DILocation(line: 876, column: 5, scope: !13487)
!13499 = !DILocation(line: 876, column: 16, scope: !13487)
!13500 = !DILocation(line: 877, column: 1, scope: !13487)
!13501 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2065, file: !2065, line: 888, type: !13502, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13504)
!13502 = !DISubroutineType(types: !13503)
!13503 = !{!109, !2069}
!13504 = !{!13505}
!13505 = !DILocalVariable(name: "thread", arg: 1, scope: !13501, file: !2065, line: 888, type: !2069)
!13506 = !DILocation(line: 0, scope: !13501)
!13507 = !DILocation(line: 893, column: 2, scope: !13501)
!13508 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2065, file: !2065, line: 897, type: !13509, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13511)
!13509 = !DISubroutineType(types: !13510)
!13510 = !{!109, !2069, !32}
!13511 = !{!13512, !13513}
!13512 = !DILocalVariable(name: "thread", arg: 1, scope: !13508, file: !2065, line: 897, type: !2069)
!13513 = !DILocalVariable(name: "options", arg: 2, scope: !13508, file: !2065, line: 897, type: !32)
!13514 = !DILocation(line: 0, scope: !13508)
!13515 = !DILocation(line: 902, column: 2, scope: !13508)
!13516 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2065, file: !2065, line: 1072, type: !13517, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13522)
!13517 = !DISubroutineType(types: !13518)
!13518 = !{!109, !2068, !13519}
!13519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13520, size: 32)
!13520 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !158, line: 234, baseType: !13521)
!13521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !158, line: 192, elements: !2002)
!13522 = !{!13523, !13524}
!13523 = !DILocalVariable(name: "thread", arg: 1, scope: !13516, file: !2065, line: 1072, type: !2068)
!13524 = !DILocalVariable(name: "stats", arg: 2, scope: !13516, file: !2065, line: 1073, type: !13519)
!13525 = !DILocation(line: 0, scope: !13516)
!13526 = !DILocation(line: 1075, column: 14, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13516, file: !2065, line: 1075, column: 6)
!13528 = !DILocation(line: 1075, column: 23, scope: !13527)
!13529 = !DILocation(line: 1086, column: 1, scope: !13516)
!13530 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2065, file: !2065, line: 1088, type: !13531, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !13533)
!13531 = !DISubroutineType(types: !13532)
!13532 = !{!109, !13519}
!13533 = !{!13534}
!13534 = !DILocalVariable(name: "stats", arg: 1, scope: !13530, file: !2065, line: 1088, type: !13519)
!13535 = !DILocation(line: 0, scope: !13530)
!13536 = !DILocation(line: 1094, column: 12, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13530, file: !2065, line: 1094, column: 6)
!13538 = !DILocation(line: 1120, column: 1, scope: !13530)
!13539 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13540, file: !13540, line: 20, type: !3070, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3051, retainedNodes: !2002)
!13540 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13541 = !DILocation(line: 30, column: 2, scope: !13539)
!13542 = !DILocation(line: 31, column: 1, scope: !13539)
!13543 = distinct !DISubprogram(name: "idle", scope: !13540, file: !13540, line: 33, type: !3182, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3051, retainedNodes: !13544)
!13544 = !{!13545, !13546, !13547}
!13545 = !DILocalVariable(name: "unused1", arg: 1, scope: !13543, file: !13540, line: 33, type: !107)
!13546 = !DILocalVariable(name: "unused2", arg: 2, scope: !13543, file: !13540, line: 33, type: !107)
!13547 = !DILocalVariable(name: "unused3", arg: 3, scope: !13543, file: !13540, line: 33, type: !107)
!13548 = !DILocation(line: 0, scope: !13543)
!13549 = !DILocation(line: 39, column: 2, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13551, file: !13540, line: 39, column: 2)
!13551 = distinct !DILexicalBlock(scope: !13543, file: !13540, line: 39, column: 2)
!13552 = !DILocation(line: 39, column: 2, scope: !13551)
!13553 = !DILocation(line: 39, column: 2, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13550, file: !13540, line: 39, column: 2)
!13555 = !DILocation(line: 55, column: 2, scope: !13556, inlinedAt: !13560)
!13556 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6062, file: !6062, line: 42, type: !6063, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3051, retainedNodes: !13557)
!13557 = !{!13558, !13559}
!13558 = !DILocalVariable(name: "key", scope: !13556, file: !6062, line: 44, type: !32)
!13559 = !DILocalVariable(name: "tmp", scope: !13556, file: !6062, line: 53, type: !32)
!13560 = distinct !DILocation(line: 62, column: 10, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13543, file: !13540, line: 41, column: 15)
!13562 = !{i64 1951954}
!13563 = !DILocation(line: 0, scope: !13556, inlinedAt: !13560)
!13564 = !DILocation(line: 86, column: 3, scope: !13561)
!13565 = !DILocation(line: 41, column: 2, scope: !13543)
!13566 = distinct !{!13566, !13565, !13567}
!13567 = !DILocation(line: 105, column: 2, scope: !13543)
!13568 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !3070, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3051, retainedNodes: !2002)
!13569 = !DILocation(line: 5629, column: 2, scope: !13568)
!13570 = !DILocation(line: 5630, column: 1, scope: !13568)
!13571 = !DISubprogram(name: "arch_cpu_idle", scope: !3336, file: !3336, line: 167, type: !3070, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2002)
!13572 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2300, file: !2300, line: 49, type: !13573, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13582)
!13573 = !DISubroutineType(types: !13574)
!13574 = !{!109, !13575}
!13575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13576, size: 32)
!13576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !13577)
!13577 = !{!13578, !13579, !13580, !13581}
!13578 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13576, file: !118, line: 2722, baseType: !2228, size: 64)
!13579 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13576, file: !118, line: 2724, baseType: !2210, size: 32, offset: 64)
!13580 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13576, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!13581 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13576, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!13582 = !{!13583}
!13583 = !DILocalVariable(name: "mutex", arg: 1, scope: !13572, file: !2300, line: 49, type: !13575)
!13584 = !DILocation(line: 0, scope: !13572)
!13585 = !DILocation(line: 51, column: 9, scope: !13572)
!13586 = !DILocation(line: 51, column: 15, scope: !13572)
!13587 = !DILocation(line: 52, column: 9, scope: !13572)
!13588 = !DILocation(line: 52, column: 20, scope: !13572)
!13589 = !DILocation(line: 54, column: 23, scope: !13572)
!13590 = !DILocation(line: 54, column: 2, scope: !13572)
!13591 = !DILocation(line: 60, column: 2, scope: !13572)
!13592 = distinct !DISubprogram(name: "z_waitq_init", scope: !13148, file: !13148, line: 47, type: !13593, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13595)
!13593 = !DISubroutineType(types: !13594)
!13594 = !{null, !2227}
!13595 = !{!13596}
!13596 = !DILocalVariable(name: "w", arg: 1, scope: !13592, file: !13148, line: 47, type: !2227)
!13597 = !DILocation(line: 0, scope: !13592)
!13598 = !DILocation(line: 49, column: 21, scope: !13592)
!13599 = !DILocation(line: 49, column: 2, scope: !13592)
!13600 = !DILocation(line: 50, column: 1, scope: !13592)
!13601 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13602, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13605)
!13602 = !DISubroutineType(types: !13603)
!13603 = !{null, !13604}
!13604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!13605 = !{!13606}
!13606 = !DILocalVariable(name: "list", arg: 1, scope: !13601, file: !127, line: 197, type: !13604)
!13607 = !DILocation(line: 0, scope: !13601)
!13608 = !DILocation(line: 199, column: 8, scope: !13601)
!13609 = !DILocation(line: 199, column: 13, scope: !13601)
!13610 = !DILocation(line: 200, column: 8, scope: !13601)
!13611 = !DILocation(line: 200, column: 13, scope: !13601)
!13612 = !DILocation(line: 201, column: 1, scope: !13601)
!13613 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2300, file: !2300, line: 95, type: !13614, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13620)
!13614 = !DISubroutineType(types: !13615)
!13615 = !{!109, !13575, !13616}
!13616 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13617)
!13617 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13618)
!13618 = !{!13619}
!13619 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13617, file: !104, line: 66, baseType: !103, size: 64)
!13620 = !{!13621, !13622, !13623, !13624, !13629, !13630, !13631}
!13621 = !DILocalVariable(name: "mutex", arg: 1, scope: !13613, file: !2300, line: 95, type: !13575)
!13622 = !DILocalVariable(name: "timeout", arg: 2, scope: !13613, file: !2300, line: 95, type: !13616)
!13623 = !DILocalVariable(name: "new_prio", scope: !13613, file: !2300, line: 97, type: !109)
!13624 = !DILocalVariable(name: "key", scope: !13613, file: !2300, line: 98, type: !13625)
!13625 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !13626)
!13626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !13627)
!13627 = !{!13628}
!13628 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13626, file: !253, line: 33, baseType: !109, size: 32)
!13629 = !DILocalVariable(name: "resched", scope: !13613, file: !2300, line: 99, type: !347)
!13630 = !DILocalVariable(name: "got_mutex", scope: !13613, file: !2300, line: 146, type: !109)
!13631 = !DILocalVariable(name: "waiter", scope: !13632, file: !2300, line: 169, type: !2210)
!13632 = distinct !DILexicalBlock(scope: !13633, file: !2300, line: 168, column: 36)
!13633 = distinct !DILexicalBlock(scope: !13613, file: !2300, line: 168, column: 6)
!13634 = !DILocation(line: 0, scope: !13613)
!13635 = !DILocation(line: 1031, column: 3, scope: !13636, inlinedAt: !13639)
!13636 = distinct !DISubprogram(name: "__get_IPSR", scope: !6383, file: !6383, line: 1027, type: !6470, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13637)
!13637 = !{!13638}
!13638 = !DILocalVariable(name: "result", scope: !13636, file: !6383, line: 1029, type: !110)
!13639 = distinct !DILocation(line: 48, column: 10, scope: !13640, inlinedAt: !13641)
!13640 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7435, file: !7435, line: 46, type: !7436, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !2002)
!13641 = distinct !DILocation(line: 101, column: 2, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13643, file: !2300, line: 101, column: 2)
!13643 = distinct !DILexicalBlock(scope: !13613, file: !2300, line: 101, column: 2)
!13644 = !{i64 2834101}
!13645 = !DILocation(line: 0, scope: !13636, inlinedAt: !13639)
!13646 = !DILocation(line: 48, column: 9, scope: !13640, inlinedAt: !13641)
!13647 = !DILocation(line: 101, column: 2, scope: !13643)
!13648 = !DILocation(line: 101, column: 2, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13642, file: !2300, line: 101, column: 2)
!13650 = !DILocalVariable(name: "l", arg: 1, scope: !13651, file: !253, line: 136, type: !13654)
!13651 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !13652, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13655)
!13652 = !DISubroutineType(types: !13653)
!13653 = !{!13625, !13654}
!13654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 32)
!13655 = !{!13650, !13656}
!13656 = !DILocalVariable(name: "k", scope: !13651, file: !253, line: 139, type: !13625)
!13657 = !DILocation(line: 0, scope: !13651, inlinedAt: !13658)
!13658 = distinct !DILocation(line: 105, column: 8, scope: !13613)
!13659 = !DILocation(line: 55, column: 2, scope: !13660, inlinedAt: !13664)
!13660 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6062, file: !6062, line: 42, type: !6063, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13661)
!13661 = !{!13662, !13663}
!13662 = !DILocalVariable(name: "key", scope: !13660, file: !6062, line: 44, type: !32)
!13663 = !DILocalVariable(name: "tmp", scope: !13660, file: !6062, line: 53, type: !32)
!13664 = distinct !DILocation(line: 145, column: 10, scope: !13651, inlinedAt: !13658)
!13665 = !{i64 1956362}
!13666 = !DILocation(line: 0, scope: !13660, inlinedAt: !13664)
!13667 = !DILocation(line: 148, column: 2, scope: !13668, inlinedAt: !13658)
!13668 = distinct !DILexicalBlock(scope: !13669, file: !253, line: 148, column: 2)
!13669 = distinct !DILexicalBlock(scope: !13651, file: !253, line: 148, column: 2)
!13670 = !DILocation(line: 148, column: 2, scope: !13669, inlinedAt: !13658)
!13671 = !DILocation(line: 148, column: 2, scope: !13672, inlinedAt: !13658)
!13672 = distinct !DILexicalBlock(scope: !13668, file: !253, line: 148, column: 2)
!13673 = !DILocation(line: 160, column: 2, scope: !13651, inlinedAt: !13658)
!13674 = !DILocation(line: 107, column: 6, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13613, file: !2300, line: 107, column: 6)
!13676 = !DILocation(line: 107, column: 6, scope: !13613)
!13677 = !{!"branch_weights", i32 2000, i32 1}
!13678 = !DILocation(line: 110, column: 6, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13675, file: !2300, line: 107, column: 71)
!13680 = !DILocation(line: 110, column: 21, scope: !13679)
!13681 = !DILocation(line: 109, column: 28, scope: !13679)
!13682 = !DILocation(line: 111, column: 13, scope: !13679)
!13683 = !DILocation(line: 114, column: 18, scope: !13679)
!13684 = !DILocation(line: 109, column: 10, scope: !13679)
!13685 = !DILocation(line: 109, column: 26, scope: !13679)
!13686 = !DILocation(line: 113, column: 20, scope: !13679)
!13687 = !DILocation(line: 114, column: 10, scope: !13679)
!13688 = !DILocation(line: 114, column: 16, scope: !13679)
!13689 = !DILocalVariable(name: "key", arg: 2, scope: !13690, file: !253, line: 190, type: !13625)
!13690 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !13691, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13693)
!13691 = !DISubroutineType(types: !13692)
!13692 = !{null, !13654, !13625}
!13693 = !{!13694, !13689}
!13694 = !DILocalVariable(name: "l", arg: 1, scope: !13690, file: !253, line: 189, type: !13654)
!13695 = !DILocation(line: 0, scope: !13690, inlinedAt: !13696)
!13696 = distinct !DILocation(line: 120, column: 3, scope: !13679)
!13697 = !DILocation(line: 194, column: 2, scope: !13698, inlinedAt: !13696)
!13698 = distinct !DILexicalBlock(scope: !13699, file: !253, line: 194, column: 2)
!13699 = distinct !DILexicalBlock(scope: !13690, file: !253, line: 194, column: 2)
!13700 = !DILocation(line: 194, column: 2, scope: !13699, inlinedAt: !13696)
!13701 = !DILocation(line: 194, column: 2, scope: !13702, inlinedAt: !13696)
!13702 = distinct !DILexicalBlock(scope: !13698, file: !253, line: 194, column: 2)
!13703 = !DILocalVariable(name: "key", arg: 1, scope: !13704, file: !6062, line: 84, type: !32)
!13704 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6062, file: !6062, line: 84, type: !6073, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13705)
!13705 = !{!13703}
!13706 = !DILocation(line: 0, scope: !13704, inlinedAt: !13707)
!13707 = distinct !DILocation(line: 215, column: 2, scope: !13690, inlinedAt: !13696)
!13708 = !DILocation(line: 95, column: 2, scope: !13704, inlinedAt: !13707)
!13709 = !{i64 1957179}
!13710 = !DILocation(line: 124, column: 3, scope: !13679)
!13711 = !DILocation(line: 127, column: 6, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13613, file: !2300, line: 127, column: 6)
!13713 = !DILocation(line: 127, column: 6, scope: !13613)
!13714 = !{!"branch_weights", i32 1, i32 2000}
!13715 = !DILocation(line: 0, scope: !13690, inlinedAt: !13716)
!13716 = distinct !DILocation(line: 128, column: 3, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13712, file: !2300, line: 127, column: 50)
!13718 = !DILocation(line: 194, column: 2, scope: !13698, inlinedAt: !13716)
!13719 = !DILocation(line: 194, column: 2, scope: !13699, inlinedAt: !13716)
!13720 = !DILocation(line: 194, column: 2, scope: !13702, inlinedAt: !13716)
!13721 = !DILocation(line: 0, scope: !13704, inlinedAt: !13722)
!13722 = distinct !DILocation(line: 215, column: 2, scope: !13690, inlinedAt: !13716)
!13723 = !DILocation(line: 95, column: 2, scope: !13704, inlinedAt: !13722)
!13724 = !DILocation(line: 132, column: 3, scope: !13717)
!13725 = !DILocation(line: 137, column: 53, scope: !13613)
!13726 = !DILocation(line: 137, column: 38, scope: !13613)
!13727 = !DILocation(line: 138, column: 29, scope: !13613)
!13728 = !DILocation(line: 138, column: 10, scope: !13613)
!13729 = !DILocation(line: 137, column: 13, scope: !13613)
!13730 = !DILocation(line: 142, column: 6, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13613, file: !2300, line: 142, column: 6)
!13732 = !DILocation(line: 142, column: 6, scope: !13613)
!13733 = !DILocation(line: 143, column: 13, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13731, file: !2300, line: 142, column: 59)
!13735 = !DILocation(line: 144, column: 2, scope: !13734)
!13736 = !DILocation(line: 146, column: 50, scope: !13613)
!13737 = !DILocation(line: 146, column: 18, scope: !13613)
!13738 = !DILocation(line: 153, column: 16, scope: !13739)
!13739 = distinct !DILexicalBlock(scope: !13613, file: !2300, line: 153, column: 6)
!13740 = !DILocation(line: 153, column: 6, scope: !13613)
!13741 = !DILocation(line: 0, scope: !13651, inlinedAt: !13742)
!13742 = distinct !DILocation(line: 162, column: 8, scope: !13613)
!13743 = !DILocation(line: 55, column: 2, scope: !13660, inlinedAt: !13744)
!13744 = distinct !DILocation(line: 145, column: 10, scope: !13651, inlinedAt: !13742)
!13745 = !DILocation(line: 0, scope: !13660, inlinedAt: !13744)
!13746 = !DILocation(line: 148, column: 2, scope: !13668, inlinedAt: !13742)
!13747 = !DILocation(line: 148, column: 2, scope: !13669, inlinedAt: !13742)
!13748 = !DILocation(line: 148, column: 2, scope: !13672, inlinedAt: !13742)
!13749 = !DILocation(line: 160, column: 2, scope: !13651, inlinedAt: !13742)
!13750 = !DILocation(line: 168, column: 6, scope: !13633)
!13751 = !DILocation(line: 168, column: 6, scope: !13613)
!13752 = !DILocation(line: 169, column: 29, scope: !13632)
!13753 = !DILocation(line: 0, scope: !13632)
!13754 = !DILocation(line: 171, column: 22, scope: !13632)
!13755 = !DILocation(line: 171, column: 14, scope: !13632)
!13756 = !DILocation(line: 172, column: 42, scope: !13632)
!13757 = !DILocation(line: 172, column: 29, scope: !13632)
!13758 = !DILocation(line: 172, column: 55, scope: !13632)
!13759 = !DILocation(line: 172, column: 4, scope: !13632)
!13760 = !DILocation(line: 173, column: 11, scope: !13632)
!13761 = !DILocation(line: 177, column: 13, scope: !13632)
!13762 = !DILocation(line: 177, column: 48, scope: !13632)
!13763 = !DILocation(line: 180, column: 6, scope: !13613)
!13764 = !DILocation(line: 181, column: 3, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13766, file: !2300, line: 180, column: 15)
!13766 = distinct !DILexicalBlock(scope: !13613, file: !2300, line: 180, column: 6)
!13767 = !DILocation(line: 182, column: 2, scope: !13765)
!13768 = !DILocation(line: 0, scope: !13690, inlinedAt: !13769)
!13769 = distinct !DILocation(line: 183, column: 3, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13766, file: !2300, line: 182, column: 9)
!13771 = !DILocation(line: 194, column: 2, scope: !13698, inlinedAt: !13769)
!13772 = !DILocation(line: 194, column: 2, scope: !13699, inlinedAt: !13769)
!13773 = !DILocation(line: 194, column: 2, scope: !13702, inlinedAt: !13769)
!13774 = !DILocation(line: 0, scope: !13704, inlinedAt: !13775)
!13775 = distinct !DILocation(line: 215, column: 2, scope: !13690, inlinedAt: !13769)
!13776 = !DILocation(line: 95, column: 2, scope: !13704, inlinedAt: !13775)
!13777 = !DILocation(line: 189, column: 1, scope: !13613)
!13778 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2300, file: !2300, line: 72, type: !13779, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13781)
!13779 = !DISubroutineType(types: !13780)
!13780 = !{!745, !745, !745}
!13781 = !{!13782, !13783, !13784}
!13782 = !DILocalVariable(name: "target", arg: 1, scope: !13778, file: !2300, line: 72, type: !745)
!13783 = !DILocalVariable(name: "limit", arg: 2, scope: !13778, file: !2300, line: 72, type: !745)
!13784 = !DILocalVariable(name: "new_prio", scope: !13778, file: !2300, line: 74, type: !109)
!13785 = !DILocation(line: 0, scope: !13778)
!13786 = !DILocation(line: 74, column: 17, scope: !13778)
!13787 = !DILocation(line: 76, column: 13, scope: !13778)
!13788 = !DILocation(line: 78, column: 2, scope: !13778)
!13789 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12787, file: !12787, line: 211, type: !13790, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13792)
!13790 = !DISubroutineType(types: !13791)
!13791 = !{!347, !109, !109}
!13792 = !{!13793, !13794}
!13793 = !DILocalVariable(name: "prio", arg: 1, scope: !13789, file: !12787, line: 211, type: !109)
!13794 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13789, file: !12787, line: 211, type: !109)
!13795 = !DILocation(line: 0, scope: !13789)
!13796 = !DILocation(line: 213, column: 9, scope: !13789)
!13797 = !DILocation(line: 213, column: 2, scope: !13789)
!13798 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2300, file: !2300, line: 81, type: !13799, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13801)
!13799 = !DISubroutineType(types: !13800)
!13800 = !{!347, !13575, !745}
!13801 = !{!13802, !13803}
!13802 = !DILocalVariable(name: "mutex", arg: 1, scope: !13798, file: !2300, line: 81, type: !13575)
!13803 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13798, file: !2300, line: 81, type: !745)
!13804 = !DILocation(line: 0, scope: !13798)
!13805 = !DILocation(line: 83, column: 13, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13798, file: !2300, line: 83, column: 6)
!13807 = !DILocation(line: 83, column: 25, scope: !13806)
!13808 = !DILocation(line: 83, column: 6, scope: !13806)
!13809 = !DILocation(line: 83, column: 30, scope: !13806)
!13810 = !DILocation(line: 83, column: 6, scope: !13798)
!13811 = !DILocation(line: 90, column: 10, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13806, file: !2300, line: 83, column: 43)
!13813 = !DILocation(line: 90, column: 3, scope: !13812)
!13814 = !DILocation(line: 93, column: 1, scope: !13798)
!13815 = distinct !DISubprogram(name: "z_waitq_head", scope: !13148, file: !13148, line: 52, type: !13816, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13818)
!13816 = !DISubroutineType(types: !13817)
!13817 = !{!2210, !2227}
!13818 = !{!13819}
!13819 = !DILocalVariable(name: "w", arg: 1, scope: !13815, file: !13148, line: 52, type: !2227)
!13820 = !DILocation(line: 0, scope: !13815)
!13821 = !DILocation(line: 54, column: 52, scope: !13815)
!13822 = !DILocation(line: 54, column: 28, scope: !13815)
!13823 = !DILocation(line: 54, column: 9, scope: !13815)
!13824 = !DILocation(line: 54, column: 2, scope: !13815)
!13825 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !13826, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13828)
!13826 = !DISubroutineType(types: !13827)
!13827 = !{!2195, !13604}
!13828 = !{!13829}
!13829 = !DILocalVariable(name: "list", arg: 1, scope: !13825, file: !127, line: 294, type: !13604)
!13830 = !DILocation(line: 0, scope: !13825)
!13831 = !DILocation(line: 296, column: 9, scope: !13825)
!13832 = !DILocation(line: 296, column: 49, scope: !13825)
!13833 = !DILocation(line: 296, column: 2, scope: !13825)
!13834 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !13835, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13837)
!13835 = !DISubroutineType(types: !13836)
!13836 = !{!347, !13604}
!13837 = !{!13838}
!13838 = !DILocalVariable(name: "list", arg: 1, scope: !13834, file: !127, line: 266, type: !13604)
!13839 = !DILocation(line: 0, scope: !13834)
!13840 = !DILocation(line: 268, column: 15, scope: !13834)
!13841 = !DILocation(line: 268, column: 20, scope: !13834)
!13842 = !DILocation(line: 268, column: 2, scope: !13834)
!13843 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12787, file: !12787, line: 206, type: !13790, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13844)
!13844 = !{!13845, !13846}
!13845 = !DILocalVariable(name: "prio1", arg: 1, scope: !13843, file: !12787, line: 206, type: !109)
!13846 = !DILocalVariable(name: "prio2", arg: 2, scope: !13843, file: !12787, line: 206, type: !109)
!13847 = !DILocation(line: 0, scope: !13843)
!13848 = !DILocation(line: 208, column: 15, scope: !13843)
!13849 = !DILocation(line: 208, column: 2, scope: !13843)
!13850 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12787, file: !12787, line: 186, type: !303, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13851)
!13851 = !{!13852}
!13852 = !DILocalVariable(name: "prio", arg: 1, scope: !13850, file: !12787, line: 186, type: !109)
!13853 = !DILocation(line: 0, scope: !13850)
!13854 = !DILocation(line: 188, column: 9, scope: !13850)
!13855 = !DILocation(line: 188, column: 2, scope: !13850)
!13856 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12787, file: !12787, line: 181, type: !13857, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13859)
!13857 = !DISubroutineType(types: !13858)
!13858 = !{!347, !109}
!13859 = !{!13860}
!13860 = !DILocalVariable(name: "prio", arg: 1, scope: !13856, file: !12787, line: 181, type: !109)
!13861 = !DILocation(line: 0, scope: !13856)
!13862 = !DILocation(line: 183, column: 14, scope: !13856)
!13863 = !DILocation(line: 183, column: 2, scope: !13856)
!13864 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2300, file: !2300, line: 201, type: !13573, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13865)
!13865 = !{!13866, !13867, !13868, !13869}
!13866 = !DILocalVariable(name: "mutex", arg: 1, scope: !13864, file: !2300, line: 201, type: !13575)
!13867 = !DILocalVariable(name: "new_owner", scope: !13864, file: !2300, line: 203, type: !2210)
!13868 = !DILocalVariable(name: "key", scope: !13864, file: !2300, line: 242, type: !13625)
!13869 = !DILabel(scope: !13864, name: "k_mutex_unlock_return", file: !2300, line: 270)
!13870 = !DILocation(line: 0, scope: !13864)
!13871 = !DILocation(line: 1031, column: 3, scope: !13636, inlinedAt: !13872)
!13872 = distinct !DILocation(line: 48, column: 10, scope: !13640, inlinedAt: !13873)
!13873 = distinct !DILocation(line: 205, column: 2, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13875, file: !2300, line: 205, column: 2)
!13875 = distinct !DILexicalBlock(scope: !13864, file: !2300, line: 205, column: 2)
!13876 = !DILocation(line: 0, scope: !13636, inlinedAt: !13872)
!13877 = !DILocation(line: 48, column: 9, scope: !13640, inlinedAt: !13873)
!13878 = !DILocation(line: 205, column: 2, scope: !13875)
!13879 = !DILocation(line: 205, column: 2, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13874, file: !2300, line: 205, column: 2)
!13881 = !DILocation(line: 209, column: 2, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13864, file: !2300, line: 209, column: 2)
!13883 = !DILocation(line: 209, column: 2, scope: !13864)
!13884 = !DILocation(line: 217, column: 2, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13864, file: !2300, line: 217, column: 2)
!13886 = !DILocation(line: 217, column: 2, scope: !13864)
!13887 = !DILocation(line: 229, column: 2, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13889, file: !2300, line: 229, column: 2)
!13889 = distinct !DILexicalBlock(scope: !13864, file: !2300, line: 229, column: 2)
!13890 = !DILocation(line: 229, column: 2, scope: !13889)
!13891 = !DILocation(line: 229, column: 2, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13888, file: !2300, line: 229, column: 2)
!13893 = !DILocation(line: 238, column: 20, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13895, file: !2300, line: 237, column: 30)
!13895 = distinct !DILexicalBlock(scope: !13864, file: !2300, line: 237, column: 6)
!13896 = !DILocation(line: 239, column: 3, scope: !13894)
!13897 = !DILocation(line: 0, scope: !13651, inlinedAt: !13898)
!13898 = distinct !DILocation(line: 242, column: 25, scope: !13864)
!13899 = !DILocation(line: 55, column: 2, scope: !13660, inlinedAt: !13900)
!13900 = distinct !DILocation(line: 145, column: 10, scope: !13651, inlinedAt: !13898)
!13901 = !DILocation(line: 0, scope: !13660, inlinedAt: !13900)
!13902 = !DILocation(line: 148, column: 2, scope: !13668, inlinedAt: !13898)
!13903 = !DILocation(line: 148, column: 2, scope: !13669, inlinedAt: !13898)
!13904 = !DILocation(line: 148, column: 2, scope: !13672, inlinedAt: !13898)
!13905 = !DILocation(line: 160, column: 2, scope: !13651, inlinedAt: !13898)
!13906 = !DILocation(line: 244, column: 34, scope: !13864)
!13907 = !DILocation(line: 244, column: 2, scope: !13864)
!13908 = !DILocation(line: 247, column: 44, scope: !13864)
!13909 = !DILocation(line: 247, column: 14, scope: !13864)
!13910 = !DILocation(line: 249, column: 15, scope: !13864)
!13911 = !DILocation(line: 254, column: 16, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13864, file: !2300, line: 254, column: 6)
!13913 = !DILocation(line: 254, column: 6, scope: !13864)
!13914 = !DILocation(line: 260, column: 44, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13912, file: !2300, line: 254, column: 25)
!13916 = !DILocation(line: 260, column: 28, scope: !13915)
!13917 = !DILocation(line: 260, column: 26, scope: !13915)
!13918 = !DILocalVariable(name: "thread", arg: 1, scope: !13919, file: !12807, line: 65, type: !2210)
!13919 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12807, file: !12807, line: 65, type: !13920, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13922)
!13920 = !DISubroutineType(types: !13921)
!13921 = !{null, !2210, !32}
!13922 = !{!13918, !13923}
!13923 = !DILocalVariable(name: "value", arg: 2, scope: !13919, file: !12807, line: 65, type: !32)
!13924 = !DILocation(line: 0, scope: !13919, inlinedAt: !13925)
!13925 = distinct !DILocation(line: 261, column: 3, scope: !13915)
!13926 = !DILocation(line: 67, column: 15, scope: !13919, inlinedAt: !13925)
!13927 = !DILocation(line: 67, column: 33, scope: !13919, inlinedAt: !13925)
!13928 = !DILocation(line: 262, column: 3, scope: !13915)
!13929 = !DILocation(line: 263, column: 3, scope: !13915)
!13930 = !DILocation(line: 264, column: 2, scope: !13915)
!13931 = !DILocation(line: 265, column: 21, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13912, file: !2300, line: 264, column: 9)
!13933 = !DILocation(line: 0, scope: !13690, inlinedAt: !13934)
!13934 = distinct !DILocation(line: 266, column: 3, scope: !13932)
!13935 = !DILocation(line: 194, column: 2, scope: !13698, inlinedAt: !13934)
!13936 = !DILocation(line: 194, column: 2, scope: !13699, inlinedAt: !13934)
!13937 = !DILocation(line: 194, column: 2, scope: !13702, inlinedAt: !13934)
!13938 = !DILocation(line: 0, scope: !13704, inlinedAt: !13939)
!13939 = distinct !DILocation(line: 215, column: 2, scope: !13690, inlinedAt: !13934)
!13940 = !DILocation(line: 95, column: 2, scope: !13704, inlinedAt: !13939)
!13941 = !DILocation(line: 274, column: 1, scope: !13864)
!13942 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2414, file: !2414, line: 93, type: !13943, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13945)
!13943 = !DISubroutineType(types: !13944)
!13944 = !{!745, !2306, !2306}
!13945 = !{!13946, !13947, !13948, !13949}
!13946 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13942, file: !2414, line: 93, type: !2306)
!13947 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13942, file: !2414, line: 94, type: !2306)
!13948 = !DILocalVariable(name: "b1", scope: !13942, file: !2414, line: 97, type: !745)
!13949 = !DILocalVariable(name: "b2", scope: !13942, file: !2414, line: 98, type: !745)
!13950 = !DILocation(line: 0, scope: !13942)
!13951 = !DILocation(line: 97, column: 30, scope: !13942)
!13952 = !DILocation(line: 98, column: 30, scope: !13942)
!13953 = !DILocation(line: 100, column: 9, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13942, file: !2414, line: 100, column: 6)
!13955 = !DILocation(line: 100, column: 6, scope: !13942)
!13956 = !DILocation(line: 125, column: 1, scope: !13942)
!13957 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2414, file: !2414, line: 428, type: !13958, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13960)
!13958 = !DISubroutineType(types: !13959)
!13959 = !{null, !2306}
!13960 = !{!13961}
!13961 = !DILocalVariable(name: "curr", arg: 1, scope: !13957, file: !2414, line: 428, type: !2306)
!13962 = !DILocation(line: 0, scope: !13957)
!13963 = !DILocation(line: 434, column: 6, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13957, file: !2414, line: 434, column: 6)
!13965 = !DILocation(line: 434, column: 23, scope: !13964)
!13966 = !DILocation(line: 434, column: 6, scope: !13957)
!13967 = !DILocation(line: 435, column: 50, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13964, file: !2414, line: 434, column: 29)
!13969 = !DILocation(line: 435, column: 48, scope: !13968)
!13970 = !DILocation(line: 435, column: 29, scope: !13968)
!13971 = !DILocation(line: 436, column: 24, scope: !13968)
!13972 = !DILocation(line: 436, column: 3, scope: !13968)
!13973 = !DILocation(line: 437, column: 2, scope: !13968)
!13974 = !DILocation(line: 438, column: 1, scope: !13957)
!13975 = distinct !DISubprogram(name: "slice_time", scope: !2414, file: !2414, line: 407, type: !13976, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13978)
!13976 = !DISubroutineType(types: !13977)
!13977 = !{!109, !2306}
!13978 = !{!13979, !13980}
!13979 = !DILocalVariable(name: "curr", arg: 1, scope: !13975, file: !2414, line: 407, type: !2306)
!13980 = !DILocalVariable(name: "ret", scope: !13975, file: !2414, line: 409, type: !109)
!13981 = !DILocation(line: 0, scope: !13975)
!13982 = !DILocation(line: 409, column: 12, scope: !13975)
!13983 = !DILocation(line: 416, column: 2, scope: !13975)
!13984 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2414, file: !2414, line: 440, type: !13985, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13987)
!13985 = !DISubroutineType(types: !13986)
!13986 = !{null, !745, !109}
!13987 = !{!13988, !13989, !13990, !13996}
!13988 = !DILocalVariable(name: "slice", arg: 1, scope: !13984, file: !2414, line: 440, type: !745)
!13989 = !DILocalVariable(name: "prio", arg: 2, scope: !13984, file: !2414, line: 440, type: !109)
!13990 = !DILocalVariable(name: "__i", scope: !13991, file: !2414, line: 442, type: !13992)
!13991 = distinct !DILexicalBlock(scope: !13984, file: !2414, line: 442, column: 2)
!13992 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !13993)
!13993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !13994)
!13994 = !{!13995}
!13995 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13993, file: !253, line: 33, baseType: !109, size: 32)
!13996 = !DILocalVariable(name: "__key", scope: !13991, file: !2414, line: 442, type: !13992)
!13997 = !DILocation(line: 0, scope: !13984)
!13998 = !DILocation(line: 0, scope: !13991)
!13999 = !DILocalVariable(name: "l", arg: 1, scope: !14000, file: !253, line: 136, type: !14003)
!14000 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !14001, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14004)
!14001 = !DISubroutineType(types: !14002)
!14002 = !{!13992, !14003}
!14003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 32)
!14004 = !{!13999, !14005}
!14005 = !DILocalVariable(name: "k", scope: !14000, file: !253, line: 139, type: !13992)
!14006 = !DILocation(line: 0, scope: !14000, inlinedAt: !14007)
!14007 = distinct !DILocation(line: 442, column: 2, scope: !13991)
!14008 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !14013)
!14009 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6062, file: !6062, line: 42, type: !6063, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14010)
!14010 = !{!14011, !14012}
!14011 = !DILocalVariable(name: "key", scope: !14009, file: !6062, line: 44, type: !32)
!14012 = !DILocalVariable(name: "tmp", scope: !14009, file: !6062, line: 53, type: !32)
!14013 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !14007)
!14014 = !{i64 1995925}
!14015 = !DILocation(line: 0, scope: !14009, inlinedAt: !14013)
!14016 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14007)
!14017 = distinct !DILexicalBlock(scope: !14018, file: !253, line: 148, column: 2)
!14018 = distinct !DILexicalBlock(scope: !14000, file: !253, line: 148, column: 2)
!14019 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !14007)
!14020 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !14007)
!14021 = distinct !DILexicalBlock(scope: !14017, file: !253, line: 148, column: 2)
!14022 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !14007)
!14023 = !DILocation(line: 443, column: 29, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !14025, file: !2414, line: 442, column: 26)
!14025 = distinct !DILexicalBlock(scope: !13991, file: !2414, line: 442, column: 2)
!14026 = !DILocation(line: 444, column: 17, scope: !14024)
!14027 = !DILocation(line: 445, column: 51, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14024, file: !2414, line: 445, column: 7)
!14029 = !DILocation(line: 445, column: 7, scope: !14024)
!14030 = !DILocation(line: 0, scope: !14024)
!14031 = !DILocation(line: 451, column: 18, scope: !14024)
!14032 = !DILocation(line: 452, column: 3, scope: !14024)
!14033 = !DILocalVariable(name: "key", arg: 2, scope: !14034, file: !253, line: 190, type: !13992)
!14034 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !14035, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14037)
!14035 = !DISubroutineType(types: !14036)
!14036 = !{null, !14003, !13992}
!14037 = !{!14038, !14033}
!14038 = !DILocalVariable(name: "l", arg: 1, scope: !14034, file: !253, line: 189, type: !14003)
!14039 = !DILocation(line: 0, scope: !14034, inlinedAt: !14040)
!14040 = distinct !DILocation(line: 442, column: 2, scope: !14025)
!14041 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14040)
!14042 = distinct !DILexicalBlock(scope: !14043, file: !253, line: 194, column: 2)
!14043 = distinct !DILexicalBlock(scope: !14034, file: !253, line: 194, column: 2)
!14044 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !14040)
!14045 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !14040)
!14046 = distinct !DILexicalBlock(scope: !14042, file: !253, line: 194, column: 2)
!14047 = !DILocalVariable(name: "key", arg: 1, scope: !14048, file: !6062, line: 84, type: !32)
!14048 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6062, file: !6062, line: 84, type: !6073, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14049)
!14049 = !{!14047}
!14050 = !DILocation(line: 0, scope: !14048, inlinedAt: !14051)
!14051 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !14040)
!14052 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !14051)
!14053 = !{i64 1996742}
!14054 = !DILocation(line: 454, column: 1, scope: !13984)
!14055 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13406, file: !13406, line: 389, type: !7670, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14056)
!14056 = !{!14057}
!14057 = !DILocalVariable(name: "t", arg: 1, scope: !14055, file: !13406, line: 389, type: !110)
!14058 = !DILocation(line: 0, scope: !14055)
!14059 = !DILocalVariable(name: "t", arg: 1, scope: !14060, file: !13406, line: 102, type: !111)
!14060 = distinct !DISubprogram(name: "z_tmcvt", scope: !13406, file: !13406, line: 102, type: !13414, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14061)
!14061 = !{!14059, !14062, !14063, !14064, !14065, !14066, !14067, !14068, !14069, !14070, !14071}
!14062 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14060, file: !13406, line: 102, type: !110)
!14063 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14060, file: !13406, line: 103, type: !110)
!14064 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14060, file: !13406, line: 103, type: !347)
!14065 = !DILocalVariable(name: "result32", arg: 5, scope: !14060, file: !13406, line: 104, type: !347)
!14066 = !DILocalVariable(name: "round_up", arg: 6, scope: !14060, file: !13406, line: 104, type: !347)
!14067 = !DILocalVariable(name: "round_off", arg: 7, scope: !14060, file: !13406, line: 105, type: !347)
!14068 = !DILocalVariable(name: "mul_ratio", scope: !14060, file: !13406, line: 107, type: !347)
!14069 = !DILocalVariable(name: "div_ratio", scope: !14060, file: !13406, line: 109, type: !347)
!14070 = !DILocalVariable(name: "off", scope: !14060, file: !13406, line: 116, type: !111)
!14071 = !DILocalVariable(name: "rdivisor", scope: !14072, file: !13406, line: 119, type: !110)
!14072 = distinct !DILexicalBlock(scope: !14073, file: !13406, line: 118, column: 18)
!14073 = distinct !DILexicalBlock(scope: !14060, file: !13406, line: 118, column: 6)
!14074 = !DILocation(line: 0, scope: !14060, inlinedAt: !14075)
!14075 = distinct !DILocation(line: 392, column: 9, scope: !14055)
!14076 = !DILocation(line: 143, column: 25, scope: !14077, inlinedAt: !14075)
!14077 = distinct !DILexicalBlock(scope: !14078, file: !13406, line: 142, column: 17)
!14078 = distinct !DILexicalBlock(scope: !14079, file: !13406, line: 142, column: 7)
!14079 = distinct !DILexicalBlock(scope: !14080, file: !13406, line: 141, column: 24)
!14080 = distinct !DILexicalBlock(scope: !14081, file: !13406, line: 141, column: 13)
!14081 = distinct !DILexicalBlock(scope: !14060, file: !13406, line: 134, column: 6)
!14082 = !DILocation(line: 392, column: 2, scope: !14055)
!14083 = distinct !DISubprogram(name: "z_time_slice", scope: !2414, file: !2414, line: 502, type: !8323, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14084)
!14084 = !{!14085, !14086}
!14085 = !DILocalVariable(name: "ticks", arg: 1, scope: !14083, file: !2414, line: 502, type: !109)
!14086 = !DILocalVariable(name: "key", scope: !14083, file: !2414, line: 511, type: !13992)
!14087 = !DILocation(line: 0, scope: !14083)
!14088 = !DILocation(line: 0, scope: !14000, inlinedAt: !14089)
!14089 = distinct !DILocation(line: 511, column: 25, scope: !14083)
!14090 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !14091)
!14091 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !14089)
!14092 = !DILocation(line: 0, scope: !14009, inlinedAt: !14091)
!14093 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14089)
!14094 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !14089)
!14095 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !14089)
!14096 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !14089)
!14097 = !DILocation(line: 514, column: 6, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14083, file: !2414, line: 514, column: 6)
!14099 = !DILocation(line: 514, column: 25, scope: !14098)
!14100 = !DILocation(line: 514, column: 22, scope: !14098)
!14101 = !DILocation(line: 514, column: 6, scope: !14083)
!14102 = !DILocation(line: 515, column: 3, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14098, file: !2414, line: 514, column: 35)
!14104 = !DILocation(line: 0, scope: !14034, inlinedAt: !14105)
!14105 = distinct !DILocation(line: 516, column: 3, scope: !14103)
!14106 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14105)
!14107 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !14105)
!14108 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !14105)
!14109 = !DILocation(line: 0, scope: !14048, inlinedAt: !14110)
!14110 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !14105)
!14111 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !14110)
!14112 = !DILocation(line: 517, column: 3, scope: !14103)
!14113 = !DILocation(line: 519, column: 18, scope: !14083)
!14114 = !DILocation(line: 522, column: 6, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !14083, file: !2414, line: 522, column: 6)
!14116 = !DILocation(line: 522, column: 27, scope: !14115)
!14117 = !DILocation(line: 522, column: 30, scope: !14115)
!14118 = !DILocation(line: 522, column: 6, scope: !14083)
!14119 = !DILocation(line: 523, column: 30, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14121, file: !2414, line: 523, column: 7)
!14121 = distinct !DILexicalBlock(scope: !14115, file: !2414, line: 522, column: 51)
!14122 = !DILocation(line: 523, column: 13, scope: !14120)
!14123 = !DILocation(line: 523, column: 7, scope: !14121)
!14124 = !DILocation(line: 530, column: 10, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14120, file: !2414, line: 523, column: 43)
!14126 = !DILocation(line: 531, column: 3, scope: !14125)
!14127 = !DILocation(line: 532, column: 30, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14120, file: !2414, line: 531, column: 10)
!14129 = !DILocation(line: 535, column: 29, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14115, file: !2414, line: 534, column: 9)
!14131 = !DILocation(line: 0, scope: !14034, inlinedAt: !14132)
!14132 = distinct !DILocation(line: 537, column: 2, scope: !14083)
!14133 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14132)
!14134 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !14132)
!14135 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !14132)
!14136 = !DILocation(line: 0, scope: !14048, inlinedAt: !14137)
!14137 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !14132)
!14138 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !14137)
!14139 = !DILocation(line: 538, column: 1, scope: !14083)
!14140 = distinct !DISubprogram(name: "sliceable", scope: !2414, file: !2414, line: 468, type: !14141, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14143)
!14141 = !DISubroutineType(types: !14142)
!14142 = !{!347, !2306}
!14143 = !{!14144, !14145}
!14144 = !DILocalVariable(name: "thread", arg: 1, scope: !14140, file: !2414, line: 468, type: !2306)
!14145 = !DILocalVariable(name: "ret", scope: !14140, file: !2414, line: 470, type: !347)
!14146 = !DILocation(line: 0, scope: !14140)
!14147 = !DILocation(line: 470, column: 13, scope: !14140)
!14148 = !DILocation(line: 471, column: 3, scope: !14140)
!14149 = !DILocation(line: 471, column: 7, scope: !14140)
!14150 = !DILocation(line: 472, column: 3, scope: !14140)
!14151 = !DILocation(line: 472, column: 37, scope: !14140)
!14152 = !DILocation(line: 472, column: 24, scope: !14140)
!14153 = !DILocation(line: 472, column: 43, scope: !14140)
!14154 = !DILocation(line: 472, column: 7, scope: !14140)
!14155 = !DILocation(line: 473, column: 3, scope: !14140)
!14156 = !DILocation(line: 473, column: 7, scope: !14140)
!14157 = !DILocation(line: 473, column: 6, scope: !14140)
!14158 = !DILocation(line: 479, column: 2, scope: !14140)
!14159 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2414, file: !2414, line: 482, type: !14160, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14162)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{!13992, !13992}
!14162 = !{!14163, !14164}
!14163 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14159, file: !2414, line: 482, type: !13992)
!14164 = !DILocalVariable(name: "curr", scope: !14159, file: !2414, line: 484, type: !2306)
!14165 = !DILocation(line: 0, scope: !14159)
!14166 = !DILocation(line: 484, column: 26, scope: !14159)
!14167 = !DILocation(line: 493, column: 7, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14159, file: !2414, line: 493, column: 6)
!14169 = !DILocation(line: 493, column: 6, scope: !14159)
!14170 = !DILocation(line: 494, column: 3, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14168, file: !2414, line: 493, column: 49)
!14172 = !DILocation(line: 495, column: 2, scope: !14171)
!14173 = !DILocation(line: 496, column: 2, scope: !14159)
!14174 = !DILocation(line: 499, column: 1, scope: !14159)
!14175 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12787, file: !12787, line: 106, type: !14141, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14176)
!14176 = !{!14177, !14178}
!14177 = !DILocalVariable(name: "thread", arg: 1, scope: !14175, file: !12787, line: 106, type: !2306)
!14178 = !DILocalVariable(name: "state", scope: !14175, file: !12787, line: 108, type: !180)
!14179 = !DILocation(line: 0, scope: !14175)
!14180 = !DILocation(line: 108, column: 31, scope: !14175)
!14181 = !DILocation(line: 110, column: 16, scope: !14175)
!14182 = !DILocation(line: 111, column: 41, scope: !14175)
!14183 = !DILocation(line: 110, column: 2, scope: !14175)
!14184 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2414, file: !2414, line: 393, type: !13958, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14185)
!14185 = !{!14186}
!14186 = !DILocalVariable(name: "thread", arg: 1, scope: !14184, file: !2414, line: 393, type: !2306)
!14187 = !DILocation(line: 0, scope: !14184)
!14188 = !DILocation(line: 395, column: 6, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14184, file: !2414, line: 395, column: 6)
!14190 = !DILocation(line: 395, column: 6, scope: !14184)
!14191 = !DILocalVariable(name: "thread", arg: 1, scope: !14192, file: !2414, line: 264, type: !2306)
!14192 = distinct !DISubprogram(name: "dequeue_thread", scope: !2414, file: !2414, line: 264, type: !13958, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14193)
!14193 = !{!14191}
!14194 = !DILocation(line: 0, scope: !14192, inlinedAt: !14195)
!14195 = distinct !DILocation(line: 396, column: 3, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14189, file: !2414, line: 395, column: 34)
!14197 = !DILocation(line: 266, column: 15, scope: !14192, inlinedAt: !14195)
!14198 = !DILocation(line: 266, column: 28, scope: !14192, inlinedAt: !14195)
!14199 = !DILocalVariable(name: "thread", arg: 1, scope: !14200, file: !2414, line: 232, type: !2306)
!14200 = distinct !DISubprogram(name: "runq_remove", scope: !2414, file: !2414, line: 232, type: !13958, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14201)
!14201 = !{!14199}
!14202 = !DILocation(line: 0, scope: !14200, inlinedAt: !14203)
!14203 = distinct !DILocation(line: 268, column: 3, scope: !14204, inlinedAt: !14195)
!14204 = distinct !DILexicalBlock(scope: !14205, file: !2414, line: 267, column: 35)
!14205 = distinct !DILexicalBlock(scope: !14192, file: !2414, line: 267, column: 6)
!14206 = !DILocation(line: 234, column: 2, scope: !14200, inlinedAt: !14203)
!14207 = !DILocation(line: 397, column: 2, scope: !14196)
!14208 = !DILocalVariable(name: "thread", arg: 1, scope: !14209, file: !2414, line: 250, type: !2306)
!14209 = distinct !DISubprogram(name: "queue_thread", scope: !2414, file: !2414, line: 250, type: !13958, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14210)
!14210 = !{!14208}
!14211 = !DILocation(line: 0, scope: !14209, inlinedAt: !14212)
!14212 = distinct !DILocation(line: 398, column: 2, scope: !14184)
!14213 = !DILocation(line: 252, column: 15, scope: !14209, inlinedAt: !14212)
!14214 = !DILocation(line: 252, column: 28, scope: !14209, inlinedAt: !14212)
!14215 = !DILocalVariable(name: "thread", arg: 1, scope: !14216, file: !2414, line: 227, type: !2306)
!14216 = distinct !DISubprogram(name: "runq_add", scope: !2414, file: !2414, line: 227, type: !13958, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14217)
!14217 = !{!14215}
!14218 = !DILocation(line: 0, scope: !14216, inlinedAt: !14219)
!14219 = distinct !DILocation(line: 254, column: 3, scope: !14220, inlinedAt: !14212)
!14220 = distinct !DILexicalBlock(scope: !14221, file: !2414, line: 253, column: 35)
!14221 = distinct !DILexicalBlock(scope: !14209, file: !2414, line: 253, column: 6)
!14222 = !DILocalVariable(name: "pq", arg: 1, scope: !14223, file: !2414, line: 181, type: !14226)
!14223 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2414, file: !2414, line: 181, type: !14224, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14227)
!14224 = !DISubroutineType(types: !14225)
!14225 = !{null, !14226, !2306}
!14226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!14227 = !{!14222, !14228, !14229}
!14228 = !DILocalVariable(name: "thread", arg: 2, scope: !14223, file: !2414, line: 182, type: !2306)
!14229 = !DILocalVariable(name: "t", scope: !14223, file: !2414, line: 184, type: !2306)
!14230 = !DILocation(line: 0, scope: !14223, inlinedAt: !14231)
!14231 = distinct !DILocation(line: 229, column: 2, scope: !14216, inlinedAt: !14219)
!14232 = !DILocation(line: 186, column: 2, scope: !14233, inlinedAt: !14231)
!14233 = distinct !DILexicalBlock(scope: !14234, file: !2414, line: 186, column: 2)
!14234 = distinct !DILexicalBlock(scope: !14223, file: !2414, line: 186, column: 2)
!14235 = !DILocation(line: 186, column: 2, scope: !14234, inlinedAt: !14231)
!14236 = !DILocation(line: 186, column: 2, scope: !14237, inlinedAt: !14231)
!14237 = distinct !DILexicalBlock(scope: !14233, file: !2414, line: 186, column: 2)
!14238 = !DILocation(line: 188, column: 2, scope: !14239, inlinedAt: !14231)
!14239 = distinct !DILexicalBlock(scope: !14223, file: !2414, line: 188, column: 2)
!14240 = !DILocation(line: 188, column: 2, scope: !14241, inlinedAt: !14231)
!14241 = distinct !DILexicalBlock(scope: !14239, file: !2414, line: 188, column: 2)
!14242 = !DILocation(line: 0, scope: !14239, inlinedAt: !14231)
!14243 = !DILocation(line: 189, column: 7, scope: !14244, inlinedAt: !14231)
!14244 = distinct !DILexicalBlock(scope: !14245, file: !2414, line: 189, column: 7)
!14245 = distinct !DILexicalBlock(scope: !14241, file: !2414, line: 188, column: 56)
!14246 = !DILocation(line: 189, column: 35, scope: !14244, inlinedAt: !14231)
!14247 = !DILocation(line: 189, column: 7, scope: !14245, inlinedAt: !14231)
!14248 = !DILocation(line: 191, column: 21, scope: !14249, inlinedAt: !14231)
!14249 = distinct !DILexicalBlock(scope: !14244, file: !2414, line: 189, column: 40)
!14250 = !DILocation(line: 190, column: 4, scope: !14249, inlinedAt: !14231)
!14251 = !DILocation(line: 192, column: 4, scope: !14249, inlinedAt: !14231)
!14252 = distinct !{!14252, !14238, !14253}
!14253 = !DILocation(line: 194, column: 2, scope: !14239, inlinedAt: !14231)
!14254 = !DILocation(line: 196, column: 37, scope: !14223, inlinedAt: !14231)
!14255 = !DILocation(line: 196, column: 2, scope: !14223, inlinedAt: !14231)
!14256 = !DILocation(line: 197, column: 1, scope: !14223, inlinedAt: !14231)
!14257 = !DILocation(line: 399, column: 25, scope: !14184)
!14258 = !DILocation(line: 399, column: 22, scope: !14184)
!14259 = !DILocation(line: 399, column: 2, scope: !14184)
!14260 = !DILocation(line: 400, column: 1, scope: !14184)
!14261 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12787, file: !12787, line: 136, type: !14141, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14262)
!14262 = !{!14263}
!14263 = !DILocalVariable(name: "thread", arg: 1, scope: !14261, file: !12787, line: 136, type: !2306)
!14264 = !DILocation(line: 0, scope: !14261)
!14265 = !DILocation(line: 138, column: 9, scope: !14261)
!14266 = !DILocation(line: 138, column: 2, scope: !14261)
!14267 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2414, file: !2414, line: 1137, type: !14224, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14268)
!14268 = !{!14269, !14270}
!14269 = !DILocalVariable(name: "pq", arg: 1, scope: !14267, file: !2414, line: 1137, type: !14226)
!14270 = !DILocalVariable(name: "thread", arg: 2, scope: !14267, file: !2414, line: 1137, type: !2306)
!14271 = !DILocation(line: 0, scope: !14267)
!14272 = !DILocation(line: 1139, column: 2, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14274, file: !2414, line: 1139, column: 2)
!14274 = distinct !DILexicalBlock(scope: !14267, file: !2414, line: 1139, column: 2)
!14275 = !DILocation(line: 1139, column: 2, scope: !14274)
!14276 = !DILocation(line: 1139, column: 2, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14273, file: !2414, line: 1139, column: 2)
!14278 = !DILocation(line: 1141, column: 33, scope: !14267)
!14279 = !DILocation(line: 1141, column: 2, scope: !14267)
!14280 = !DILocation(line: 1142, column: 1, scope: !14267)
!14281 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12787, file: !12787, line: 83, type: !14141, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14282)
!14282 = !{!14283}
!14283 = !DILocalVariable(name: "thread", arg: 1, scope: !14281, file: !12787, line: 83, type: !2306)
!14284 = !DILocation(line: 0, scope: !14281)
!14285 = !DILocation(line: 89, column: 16, scope: !14281)
!14286 = !DILocation(line: 89, column: 2, scope: !14281)
!14287 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14288, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14290)
!14288 = !DISubroutineType(types: !14289)
!14289 = !{!2410, !14226}
!14290 = !{!14291}
!14291 = !DILocalVariable(name: "list", arg: 1, scope: !14287, file: !127, line: 294, type: !14226)
!14292 = !DILocation(line: 0, scope: !14287)
!14293 = !DILocation(line: 296, column: 9, scope: !14287)
!14294 = !DILocation(line: 296, column: 49, scope: !14287)
!14295 = !DILocation(line: 296, column: 2, scope: !14287)
!14296 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14297, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14299)
!14297 = !DISubroutineType(types: !14298)
!14298 = !{null, !2410, !2410}
!14299 = !{!14300, !14301, !14302}
!14300 = !DILocalVariable(name: "successor", arg: 1, scope: !14296, file: !127, line: 443, type: !2410)
!14301 = !DILocalVariable(name: "node", arg: 2, scope: !14296, file: !127, line: 443, type: !2410)
!14302 = !DILocalVariable(name: "prev", scope: !14296, file: !127, line: 445, type: !14303)
!14303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2410)
!14304 = !DILocation(line: 0, scope: !14296)
!14305 = !DILocation(line: 445, column: 39, scope: !14296)
!14306 = !DILocation(line: 447, column: 8, scope: !14296)
!14307 = !DILocation(line: 447, column: 13, scope: !14296)
!14308 = !DILocation(line: 448, column: 8, scope: !14296)
!14309 = !DILocation(line: 448, column: 13, scope: !14296)
!14310 = !DILocation(line: 449, column: 8, scope: !14296)
!14311 = !DILocation(line: 449, column: 13, scope: !14296)
!14312 = !DILocation(line: 450, column: 18, scope: !14296)
!14313 = !DILocation(line: 451, column: 1, scope: !14296)
!14314 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !14315, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14317)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{!2410, !14226, !2410}
!14317 = !{!14318, !14319}
!14318 = !DILocalVariable(name: "list", arg: 1, scope: !14314, file: !127, line: 341, type: !14226)
!14319 = !DILocalVariable(name: "node", arg: 2, scope: !14314, file: !127, line: 342, type: !2410)
!14320 = !DILocation(line: 0, scope: !14314)
!14321 = !DILocation(line: 344, column: 15, scope: !14314)
!14322 = !DILocation(line: 344, column: 9, scope: !14314)
!14323 = !DILocation(line: 344, column: 26, scope: !14314)
!14324 = !DILocation(line: 344, column: 2, scope: !14314)
!14325 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !14326, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14328)
!14326 = !DISubroutineType(types: !14327)
!14327 = !{null, !14226, !2410}
!14328 = !{!14329, !14330, !14331}
!14329 = !DILocalVariable(name: "list", arg: 1, scope: !14325, file: !127, line: 404, type: !14226)
!14330 = !DILocalVariable(name: "node", arg: 2, scope: !14325, file: !127, line: 404, type: !2410)
!14331 = !DILocalVariable(name: "tail", scope: !14325, file: !127, line: 406, type: !14303)
!14332 = !DILocation(line: 0, scope: !14325)
!14333 = !DILocation(line: 406, column: 34, scope: !14325)
!14334 = !DILocation(line: 408, column: 8, scope: !14325)
!14335 = !DILocation(line: 408, column: 13, scope: !14325)
!14336 = !DILocation(line: 409, column: 8, scope: !14325)
!14337 = !DILocation(line: 409, column: 13, scope: !14325)
!14338 = !DILocation(line: 411, column: 8, scope: !14325)
!14339 = !DILocation(line: 411, column: 13, scope: !14325)
!14340 = !DILocation(line: 412, column: 13, scope: !14325)
!14341 = !DILocation(line: 413, column: 1, scope: !14325)
!14342 = distinct !DISubprogram(name: "update_cache", scope: !2414, file: !2414, line: 559, type: !8323, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14343)
!14343 = !{!14344, !14345}
!14344 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14342, file: !2414, line: 559, type: !109)
!14345 = !DILocalVariable(name: "thread", scope: !14342, file: !2414, line: 562, type: !2306)
!14346 = !DILocation(line: 0, scope: !14342)
!14347 = !DILocation(line: 239, column: 9, scope: !14348, inlinedAt: !14351)
!14348 = distinct !DISubprogram(name: "runq_best", scope: !2414, file: !2414, line: 237, type: !14349, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2002)
!14349 = !DISubroutineType(types: !14350)
!14350 = !{!2306}
!14351 = distinct !DILocation(line: 314, column: 28, scope: !14352, inlinedAt: !14355)
!14352 = distinct !DISubprogram(name: "next_up", scope: !2414, file: !2414, line: 312, type: !14349, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14353)
!14353 = !{!14354}
!14354 = !DILocalVariable(name: "thread", scope: !14352, file: !2414, line: 314, type: !2306)
!14355 = distinct !DILocation(line: 562, column: 28, scope: !14342)
!14356 = !DILocation(line: 0, scope: !14352, inlinedAt: !14355)
!14357 = !DILocation(line: 340, column: 17, scope: !14352, inlinedAt: !14355)
!14358 = !DILocation(line: 340, column: 9, scope: !14352, inlinedAt: !14355)
!14359 = !DILocalVariable(name: "thread", arg: 1, scope: !14360, file: !2414, line: 127, type: !2306)
!14360 = distinct !DISubprogram(name: "should_preempt", scope: !2414, file: !2414, line: 127, type: !14361, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14363)
!14361 = !DISubroutineType(types: !14362)
!14362 = !{!347, !2306, !109}
!14363 = !{!14359, !14364}
!14364 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14360, file: !2414, line: 128, type: !109)
!14365 = !DILocation(line: 0, scope: !14360, inlinedAt: !14366)
!14366 = distinct !DILocation(line: 564, column: 6, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !14342, file: !2414, line: 564, column: 6)
!14368 = !DILocation(line: 133, column: 17, scope: !14369, inlinedAt: !14366)
!14369 = distinct !DILexicalBlock(scope: !14360, file: !2414, line: 133, column: 6)
!14370 = !DILocation(line: 0, scope: !14367)
!14371 = !DILocation(line: 133, column: 6, scope: !14360, inlinedAt: !14366)
!14372 = !DILocation(line: 137, column: 2, scope: !14373, inlinedAt: !14366)
!14373 = distinct !DILexicalBlock(scope: !14374, file: !2414, line: 137, column: 2)
!14374 = distinct !DILexicalBlock(scope: !14360, file: !2414, line: 137, column: 2)
!14375 = !DILocation(line: 137, column: 2, scope: !14374, inlinedAt: !14366)
!14376 = !DILocation(line: 137, column: 2, scope: !14377, inlinedAt: !14366)
!14377 = distinct !DILexicalBlock(scope: !14373, file: !2414, line: 137, column: 2)
!14378 = !DILocation(line: 140, column: 6, scope: !14379, inlinedAt: !14366)
!14379 = distinct !DILexicalBlock(scope: !14360, file: !2414, line: 140, column: 6)
!14380 = !DILocation(line: 140, column: 6, scope: !14360, inlinedAt: !14366)
!14381 = !DILocation(line: 150, column: 9, scope: !14382, inlinedAt: !14366)
!14382 = distinct !DILexicalBlock(scope: !14360, file: !2414, line: 149, column: 6)
!14383 = !DILocation(line: 149, column: 6, scope: !14360, inlinedAt: !14366)
!14384 = !DILocation(line: 157, column: 6, scope: !14385, inlinedAt: !14366)
!14385 = distinct !DILexicalBlock(scope: !14360, file: !2414, line: 157, column: 6)
!14386 = !DILocation(line: 564, column: 6, scope: !14342)
!14387 = !DILocation(line: 566, column: 14, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14389, file: !2414, line: 566, column: 7)
!14389 = distinct !DILexicalBlock(scope: !14367, file: !2414, line: 564, column: 42)
!14390 = !DILocation(line: 566, column: 7, scope: !14389)
!14391 = !DILocation(line: 567, column: 4, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14388, file: !2414, line: 566, column: 27)
!14393 = !DILocation(line: 568, column: 3, scope: !14392)
!14394 = !DILocation(line: 585, column: 1, scope: !14342)
!14395 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2414, file: !2414, line: 1144, type: !14396, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14398)
!14396 = !DISubroutineType(types: !14397)
!14397 = !{!2306, !14226}
!14398 = !{!14399, !14400, !14401}
!14399 = !DILocalVariable(name: "pq", arg: 1, scope: !14395, file: !2414, line: 1144, type: !14226)
!14400 = !DILocalVariable(name: "thread", scope: !14395, file: !2414, line: 1146, type: !2306)
!14401 = !DILocalVariable(name: "n", scope: !14395, file: !2414, line: 1147, type: !2410)
!14402 = !DILocation(line: 0, scope: !14395)
!14403 = !DILocation(line: 1147, column: 19, scope: !14395)
!14404 = !DILocation(line: 1152, column: 2, scope: !14395)
!14405 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12787, file: !12787, line: 115, type: !14141, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14406)
!14406 = !{!14407}
!14407 = !DILocalVariable(name: "thread", arg: 1, scope: !14405, file: !12787, line: 115, type: !2306)
!14408 = !DILocation(line: 0, scope: !14405)
!14409 = !DILocation(line: 117, column: 46, scope: !14405)
!14410 = !DILocation(line: 117, column: 10, scope: !14405)
!14411 = !DILocation(line: 117, column: 9, scope: !14405)
!14412 = !DILocation(line: 117, column: 2, scope: !14405)
!14413 = distinct !DISubprogram(name: "is_preempt", scope: !2414, file: !2414, line: 62, type: !13976, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14414)
!14414 = !{!14415}
!14415 = !DILocalVariable(name: "thread", arg: 1, scope: !14413, file: !2414, line: 62, type: !2306)
!14416 = !DILocation(line: 0, scope: !14413)
!14417 = !DILocation(line: 65, column: 22, scope: !14413)
!14418 = !DILocation(line: 65, column: 30, scope: !14413)
!14419 = !DILocation(line: 65, column: 2, scope: !14413)
!14420 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13216, file: !13216, line: 35, type: !14421, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14425)
!14421 = !DISubroutineType(types: !14422)
!14422 = !{!347, !14423}
!14423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14424, size: 32)
!14424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2357)
!14425 = !{!14426}
!14426 = !DILocalVariable(name: "to", arg: 1, scope: !14420, file: !13216, line: 35, type: !14423)
!14427 = !DILocation(line: 0, scope: !14420)
!14428 = !DILocation(line: 37, column: 35, scope: !14420)
!14429 = !DILocation(line: 37, column: 10, scope: !14420)
!14430 = !DILocation(line: 37, column: 9, scope: !14420)
!14431 = !DILocation(line: 37, column: 2, scope: !14420)
!14432 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !14433, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14437)
!14433 = !DISubroutineType(types: !14434)
!14434 = !{!347, !14435}
!14435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14436, size: 32)
!14436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2316)
!14437 = !{!14438}
!14438 = !DILocalVariable(name: "node", arg: 1, scope: !14432, file: !127, line: 225, type: !14435)
!14439 = !DILocation(line: 0, scope: !14432)
!14440 = !DILocation(line: 227, column: 15, scope: !14432)
!14441 = !DILocation(line: 227, column: 20, scope: !14432)
!14442 = !DILocation(line: 227, column: 2, scope: !14432)
!14443 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !14315, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14444)
!14444 = !{!14445, !14446}
!14445 = !DILocalVariable(name: "list", arg: 1, scope: !14443, file: !127, line: 325, type: !14226)
!14446 = !DILocalVariable(name: "node", arg: 2, scope: !14443, file: !127, line: 326, type: !2410)
!14447 = !DILocation(line: 0, scope: !14443)
!14448 = !DILocation(line: 328, column: 24, scope: !14443)
!14449 = !DILocation(line: 328, column: 15, scope: !14443)
!14450 = !DILocation(line: 328, column: 9, scope: !14443)
!14451 = !DILocation(line: 328, column: 45, scope: !14443)
!14452 = !DILocation(line: 328, column: 2, scope: !14443)
!14453 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14454, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14456)
!14454 = !DISubroutineType(types: !14455)
!14455 = !{!347, !14226}
!14456 = !{!14457}
!14457 = !DILocalVariable(name: "list", arg: 1, scope: !14453, file: !127, line: 266, type: !14226)
!14458 = !DILocation(line: 0, scope: !14453)
!14459 = !DILocation(line: 268, column: 15, scope: !14453)
!14460 = !DILocation(line: 268, column: 20, scope: !14453)
!14461 = !DILocation(line: 268, column: 2, scope: !14453)
!14462 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !14463, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14465)
!14463 = !DISubroutineType(types: !14464)
!14464 = !{null, !2410}
!14465 = !{!14466, !14467, !14468}
!14466 = !DILocalVariable(name: "node", arg: 1, scope: !14462, file: !127, line: 496, type: !2410)
!14467 = !DILocalVariable(name: "prev", scope: !14462, file: !127, line: 498, type: !14303)
!14468 = !DILocalVariable(name: "next", scope: !14462, file: !127, line: 499, type: !14303)
!14469 = !DILocation(line: 0, scope: !14462)
!14470 = !DILocation(line: 498, column: 34, scope: !14462)
!14471 = !DILocation(line: 499, column: 34, scope: !14462)
!14472 = !DILocation(line: 501, column: 8, scope: !14462)
!14473 = !DILocation(line: 501, column: 13, scope: !14462)
!14474 = !DILocation(line: 502, column: 8, scope: !14462)
!14475 = !DILocation(line: 502, column: 13, scope: !14462)
!14476 = !DILocation(line: 503, column: 2, scope: !14462)
!14477 = !DILocation(line: 504, column: 1, scope: !14462)
!14478 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !14463, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14479)
!14479 = !{!14480}
!14480 = !DILocalVariable(name: "node", arg: 1, scope: !14478, file: !127, line: 211, type: !2410)
!14481 = !DILocation(line: 0, scope: !14478)
!14482 = !DILocation(line: 213, column: 8, scope: !14478)
!14483 = !DILocation(line: 213, column: 13, scope: !14478)
!14484 = !DILocation(line: 214, column: 8, scope: !14478)
!14485 = !DILocation(line: 214, column: 13, scope: !14478)
!14486 = !DILocation(line: 215, column: 1, scope: !14478)
!14487 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12787, file: !12787, line: 131, type: !14488, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14490)
!14488 = !DISubroutineType(types: !14489)
!14489 = !{!347, !2306, !110}
!14490 = !{!14491, !14492}
!14491 = !DILocalVariable(name: "thread", arg: 1, scope: !14487, file: !12787, line: 131, type: !2306)
!14492 = !DILocalVariable(name: "state", arg: 2, scope: !14487, file: !12787, line: 131, type: !110)
!14493 = !DILocation(line: 0, scope: !14487)
!14494 = !DILocation(line: 133, column: 23, scope: !14487)
!14495 = !DILocation(line: 133, column: 10, scope: !14487)
!14496 = !DILocation(line: 133, column: 36, scope: !14487)
!14497 = !DILocation(line: 133, column: 45, scope: !14487)
!14498 = !DILocation(line: 133, column: 2, scope: !14487)
!14499 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12787, file: !12787, line: 211, type: !13790, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14500)
!14500 = !{!14501, !14502}
!14501 = !DILocalVariable(name: "prio", arg: 1, scope: !14499, file: !12787, line: 211, type: !109)
!14502 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14499, file: !12787, line: 211, type: !109)
!14503 = !DILocation(line: 0, scope: !14499)
!14504 = !DILocation(line: 213, column: 9, scope: !14499)
!14505 = !DILocation(line: 213, column: 2, scope: !14499)
!14506 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12787, file: !12787, line: 206, type: !13790, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14507)
!14507 = !{!14508, !14509}
!14508 = !DILocalVariable(name: "prio1", arg: 1, scope: !14506, file: !12787, line: 206, type: !109)
!14509 = !DILocalVariable(name: "prio2", arg: 2, scope: !14506, file: !12787, line: 206, type: !109)
!14510 = !DILocation(line: 0, scope: !14506)
!14511 = !DILocation(line: 208, column: 15, scope: !14506)
!14512 = !DILocation(line: 208, column: 2, scope: !14506)
!14513 = distinct !DISubprogram(name: "z_ready_thread", scope: !2414, file: !2414, line: 635, type: !13958, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14514)
!14514 = !{!14515, !14516, !14518}
!14515 = !DILocalVariable(name: "thread", arg: 1, scope: !14513, file: !2414, line: 635, type: !2306)
!14516 = !DILocalVariable(name: "__i", scope: !14517, file: !2414, line: 637, type: !13992)
!14517 = distinct !DILexicalBlock(scope: !14513, file: !2414, line: 637, column: 2)
!14518 = !DILocalVariable(name: "__key", scope: !14517, file: !2414, line: 637, type: !13992)
!14519 = !DILocation(line: 0, scope: !14513)
!14520 = !DILocation(line: 0, scope: !14517)
!14521 = !DILocation(line: 0, scope: !14000, inlinedAt: !14522)
!14522 = distinct !DILocation(line: 637, column: 2, scope: !14517)
!14523 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !14524)
!14524 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !14522)
!14525 = !DILocation(line: 0, scope: !14009, inlinedAt: !14524)
!14526 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14522)
!14527 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !14522)
!14528 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !14522)
!14529 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !14522)
!14530 = !DILocation(line: 639, column: 4, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14532, file: !2414, line: 638, column: 41)
!14532 = distinct !DILexicalBlock(scope: !14533, file: !2414, line: 638, column: 7)
!14533 = distinct !DILexicalBlock(scope: !14534, file: !2414, line: 637, column: 26)
!14534 = distinct !DILexicalBlock(scope: !14517, file: !2414, line: 637, column: 2)
!14535 = !DILocation(line: 0, scope: !14034, inlinedAt: !14536)
!14536 = distinct !DILocation(line: 637, column: 2, scope: !14534)
!14537 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14536)
!14538 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !14536)
!14539 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !14536)
!14540 = !DILocation(line: 0, scope: !14048, inlinedAt: !14541)
!14541 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !14536)
!14542 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !14541)
!14543 = !DILocation(line: 642, column: 1, scope: !14513)
!14544 = distinct !DISubprogram(name: "ready_thread", scope: !2414, file: !2414, line: 617, type: !13958, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14545)
!14545 = !{!14546}
!14546 = !DILocalVariable(name: "thread", arg: 1, scope: !14544, file: !2414, line: 617, type: !2306)
!14547 = !DILocation(line: 0, scope: !14544)
!14548 = !DILocation(line: 626, column: 7, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14544, file: !2414, line: 626, column: 6)
!14550 = !DILocation(line: 626, column: 34, scope: !14549)
!14551 = !DILocation(line: 626, column: 37, scope: !14549)
!14552 = !DILocation(line: 626, column: 6, scope: !14544)
!14553 = !DILocation(line: 0, scope: !14209, inlinedAt: !14554)
!14554 = distinct !DILocation(line: 629, column: 3, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14549, file: !2414, line: 626, column: 64)
!14556 = !DILocation(line: 252, column: 15, scope: !14209, inlinedAt: !14554)
!14557 = !DILocation(line: 252, column: 28, scope: !14209, inlinedAt: !14554)
!14558 = !DILocation(line: 0, scope: !14216, inlinedAt: !14559)
!14559 = distinct !DILocation(line: 254, column: 3, scope: !14220, inlinedAt: !14554)
!14560 = !DILocation(line: 0, scope: !14223, inlinedAt: !14561)
!14561 = distinct !DILocation(line: 229, column: 2, scope: !14216, inlinedAt: !14559)
!14562 = !DILocation(line: 186, column: 2, scope: !14233, inlinedAt: !14561)
!14563 = !DILocation(line: 186, column: 2, scope: !14234, inlinedAt: !14561)
!14564 = !DILocation(line: 186, column: 2, scope: !14237, inlinedAt: !14561)
!14565 = !DILocation(line: 188, column: 2, scope: !14239, inlinedAt: !14561)
!14566 = !DILocation(line: 188, column: 2, scope: !14241, inlinedAt: !14561)
!14567 = !DILocation(line: 0, scope: !14239, inlinedAt: !14561)
!14568 = !DILocation(line: 189, column: 7, scope: !14244, inlinedAt: !14561)
!14569 = !DILocation(line: 189, column: 35, scope: !14244, inlinedAt: !14561)
!14570 = !DILocation(line: 189, column: 7, scope: !14245, inlinedAt: !14561)
!14571 = !DILocation(line: 191, column: 21, scope: !14249, inlinedAt: !14561)
!14572 = !DILocation(line: 190, column: 4, scope: !14249, inlinedAt: !14561)
!14573 = !DILocation(line: 192, column: 4, scope: !14249, inlinedAt: !14561)
!14574 = distinct !{!14574, !14565, !14575}
!14575 = !DILocation(line: 194, column: 2, scope: !14239, inlinedAt: !14561)
!14576 = !DILocation(line: 196, column: 37, scope: !14223, inlinedAt: !14561)
!14577 = !DILocation(line: 196, column: 2, scope: !14223, inlinedAt: !14561)
!14578 = !DILocation(line: 197, column: 1, scope: !14223, inlinedAt: !14561)
!14579 = !DILocation(line: 630, column: 3, scope: !14555)
!14580 = !DILocation(line: 632, column: 2, scope: !14555)
!14581 = !DILocation(line: 633, column: 1, scope: !14544)
!14582 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12787, file: !12787, line: 120, type: !14141, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14583)
!14583 = !{!14584}
!14584 = !DILocalVariable(name: "thread", arg: 1, scope: !14582, file: !12787, line: 120, type: !2306)
!14585 = !DILocation(line: 0, scope: !14582)
!14586 = !DILocation(line: 122, column: 12, scope: !14582)
!14587 = !DILocation(line: 122, column: 62, scope: !14582)
!14588 = !DILocation(line: 123, column: 4, scope: !14582)
!14589 = !DILocation(line: 122, column: 2, scope: !14582)
!14590 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2414, file: !2414, line: 644, type: !13958, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14591)
!14591 = !{!14592, !14593, !14595}
!14592 = !DILocalVariable(name: "thread", arg: 1, scope: !14590, file: !2414, line: 644, type: !2306)
!14593 = !DILocalVariable(name: "__i", scope: !14594, file: !2414, line: 646, type: !13992)
!14594 = distinct !DILexicalBlock(scope: !14590, file: !2414, line: 646, column: 2)
!14595 = !DILocalVariable(name: "__key", scope: !14594, file: !2414, line: 646, type: !13992)
!14596 = !DILocation(line: 0, scope: !14590)
!14597 = !DILocation(line: 0, scope: !14594)
!14598 = !DILocation(line: 0, scope: !14000, inlinedAt: !14599)
!14599 = distinct !DILocation(line: 646, column: 2, scope: !14594)
!14600 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !14601)
!14601 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !14599)
!14602 = !DILocation(line: 0, scope: !14009, inlinedAt: !14601)
!14603 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14599)
!14604 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !14599)
!14605 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !14599)
!14606 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !14599)
!14607 = !DILocation(line: 647, column: 3, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14609, file: !2414, line: 646, column: 26)
!14609 = distinct !DILexicalBlock(scope: !14594, file: !2414, line: 646, column: 2)
!14610 = !DILocation(line: 0, scope: !14034, inlinedAt: !14611)
!14611 = distinct !DILocation(line: 646, column: 2, scope: !14609)
!14612 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14611)
!14613 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !14611)
!14614 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !14611)
!14615 = !DILocation(line: 0, scope: !14048, inlinedAt: !14616)
!14616 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !14611)
!14617 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !14616)
!14618 = !DILocation(line: 649, column: 1, scope: !14590)
!14619 = distinct !DISubprogram(name: "z_sched_start", scope: !2414, file: !2414, line: 651, type: !13958, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14620)
!14620 = !{!14621, !14622}
!14621 = !DILocalVariable(name: "thread", arg: 1, scope: !14619, file: !2414, line: 651, type: !2306)
!14622 = !DILocalVariable(name: "key", scope: !14619, file: !2414, line: 653, type: !13992)
!14623 = !DILocation(line: 0, scope: !14619)
!14624 = !DILocation(line: 0, scope: !14000, inlinedAt: !14625)
!14625 = distinct !DILocation(line: 653, column: 25, scope: !14619)
!14626 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !14627)
!14627 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !14625)
!14628 = !DILocation(line: 0, scope: !14009, inlinedAt: !14627)
!14629 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14625)
!14630 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !14625)
!14631 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !14625)
!14632 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !14625)
!14633 = !DILocation(line: 655, column: 6, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14619, file: !2414, line: 655, column: 6)
!14635 = !DILocation(line: 655, column: 6, scope: !14619)
!14636 = !DILocation(line: 0, scope: !14034, inlinedAt: !14637)
!14637 = distinct !DILocation(line: 656, column: 3, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14634, file: !2414, line: 655, column: 36)
!14639 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14637)
!14640 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !14637)
!14641 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !14637)
!14642 = !DILocation(line: 0, scope: !14048, inlinedAt: !14643)
!14643 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !14637)
!14644 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !14643)
!14645 = !DILocation(line: 657, column: 3, scope: !14638)
!14646 = !DILocation(line: 660, column: 2, scope: !14619)
!14647 = !DILocation(line: 661, column: 2, scope: !14619)
!14648 = !DILocation(line: 662, column: 2, scope: !14619)
!14649 = !DILocation(line: 663, column: 1, scope: !14619)
!14650 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12787, file: !12787, line: 126, type: !14141, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14651)
!14651 = !{!14652}
!14652 = !DILocalVariable(name: "thread", arg: 1, scope: !14650, file: !12787, line: 126, type: !2306)
!14653 = !DILocation(line: 0, scope: !14650)
!14654 = !DILocation(line: 128, column: 23, scope: !14650)
!14655 = !DILocation(line: 128, column: 36, scope: !14650)
!14656 = !DILocation(line: 128, column: 56, scope: !14650)
!14657 = !DILocation(line: 128, column: 2, scope: !14650)
!14658 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12787, file: !12787, line: 155, type: !13958, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14659)
!14659 = !{!14660}
!14660 = !DILocalVariable(name: "thread", arg: 1, scope: !14658, file: !12787, line: 155, type: !2306)
!14661 = !DILocation(line: 0, scope: !14658)
!14662 = !DILocation(line: 157, column: 15, scope: !14658)
!14663 = !DILocation(line: 157, column: 28, scope: !14658)
!14664 = !DILocation(line: 158, column: 1, scope: !14658)
!14665 = distinct !DISubprogram(name: "z_reschedule", scope: !2414, file: !2414, line: 967, type: !14035, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14666)
!14666 = !{!14667, !14668}
!14667 = !DILocalVariable(name: "lock", arg: 1, scope: !14665, file: !2414, line: 967, type: !14003)
!14668 = !DILocalVariable(name: "key", arg: 2, scope: !14665, file: !2414, line: 967, type: !13992)
!14669 = !DILocation(line: 0, scope: !14665)
!14670 = !DILocation(line: 969, column: 6, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14665, file: !2414, line: 969, column: 6)
!14672 = !DILocation(line: 969, column: 23, scope: !14671)
!14673 = !DILocation(line: 969, column: 26, scope: !14671)
!14674 = !DILocation(line: 969, column: 6, scope: !14665)
!14675 = !DILocalVariable(name: "key", arg: 2, scope: !14676, file: !12891, line: 193, type: !13992)
!14676 = distinct !DISubprogram(name: "z_swap", scope: !12891, file: !12891, line: 193, type: !14677, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14679)
!14677 = !DISubroutineType(types: !14678)
!14678 = !{!109, !14003, !13992}
!14679 = !{!14680, !14675}
!14680 = !DILocalVariable(name: "lock", arg: 1, scope: !14676, file: !12891, line: 193, type: !14003)
!14681 = !DILocation(line: 0, scope: !14676, inlinedAt: !14682)
!14682 = distinct !DILocation(line: 970, column: 3, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14671, file: !2414, line: 969, column: 39)
!14684 = !DILocalVariable(name: "l", arg: 1, scope: !14685, file: !253, line: 221, type: !14003)
!14685 = distinct !DISubprogram(name: "k_spin_release", scope: !253, file: !253, line: 221, type: !14686, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14688)
!14686 = !DISubroutineType(types: !14687)
!14687 = !{null, !14003}
!14688 = !{!14684}
!14689 = !DILocation(line: 0, scope: !14685, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 195, column: 2, scope: !14676, inlinedAt: !14682)
!14691 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !14690)
!14692 = distinct !DILexicalBlock(scope: !14693, file: !253, line: 225, column: 2)
!14693 = distinct !DILexicalBlock(scope: !14685, file: !253, line: 225, column: 2)
!14694 = !DILocation(line: 225, column: 2, scope: !14693, inlinedAt: !14690)
!14695 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !14690)
!14696 = distinct !DILexicalBlock(scope: !14692, file: !253, line: 225, column: 2)
!14697 = !DILocation(line: 196, column: 9, scope: !14676, inlinedAt: !14682)
!14698 = !DILocation(line: 971, column: 2, scope: !14683)
!14699 = !DILocation(line: 0, scope: !14034, inlinedAt: !14700)
!14700 = distinct !DILocation(line: 972, column: 3, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14671, file: !2414, line: 971, column: 9)
!14702 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14700)
!14703 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !14700)
!14704 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !14700)
!14705 = !DILocation(line: 0, scope: !14048, inlinedAt: !14706)
!14706 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !14700)
!14707 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !14706)
!14708 = !DILocation(line: 975, column: 1, scope: !14665)
!14709 = distinct !DISubprogram(name: "resched", scope: !2414, file: !2414, line: 940, type: !14710, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14712)
!14710 = !DISubroutineType(types: !14711)
!14711 = !{!347, !110}
!14712 = !{!14713}
!14713 = !DILocalVariable(name: "key", arg: 1, scope: !14709, file: !2414, line: 940, type: !110)
!14714 = !DILocation(line: 0, scope: !14709)
!14715 = !DILocalVariable(name: "key", arg: 1, scope: !14716, file: !6062, line: 112, type: !32)
!14716 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6062, file: !6062, line: 112, type: !14717, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14719)
!14717 = !DISubroutineType(types: !14718)
!14718 = !{!347, !32}
!14719 = !{!14715}
!14720 = !DILocation(line: 0, scope: !14716, inlinedAt: !14721)
!14721 = distinct !DILocation(line: 946, column: 9, scope: !14709)
!14722 = !DILocation(line: 115, column: 13, scope: !14716, inlinedAt: !14721)
!14723 = !DILocation(line: 946, column: 32, scope: !14709)
!14724 = !DILocation(line: 1031, column: 3, scope: !14725, inlinedAt: !14728)
!14725 = distinct !DISubprogram(name: "__get_IPSR", scope: !6383, file: !6383, line: 1027, type: !6470, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14726)
!14726 = !{!14727}
!14727 = !DILocalVariable(name: "result", scope: !14725, file: !6383, line: 1029, type: !110)
!14728 = distinct !DILocation(line: 48, column: 10, scope: !14729, inlinedAt: !14730)
!14729 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7435, file: !7435, line: 46, type: !7436, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2002)
!14730 = distinct !DILocation(line: 946, column: 36, scope: !14709)
!14731 = !{i64 2873664}
!14732 = !DILocation(line: 0, scope: !14725, inlinedAt: !14728)
!14733 = !DILocation(line: 48, column: 9, scope: !14729, inlinedAt: !14730)
!14734 = !DILocation(line: 946, column: 2, scope: !14709)
!14735 = distinct !DISubprogram(name: "need_swap", scope: !2414, file: !2414, line: 953, type: !7436, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14736)
!14736 = !{!14737}
!14737 = !DILocalVariable(name: "new_thread", scope: !14735, file: !2414, line: 959, type: !2306)
!14738 = !DILocation(line: 962, column: 31, scope: !14735)
!14739 = !DILocation(line: 0, scope: !14735)
!14740 = !DILocation(line: 963, column: 23, scope: !14735)
!14741 = !DILocation(line: 963, column: 20, scope: !14735)
!14742 = !DILocation(line: 963, column: 2, scope: !14735)
!14743 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12891, file: !12891, line: 181, type: !6393, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14744)
!14744 = !{!14745, !14746}
!14745 = !DILocalVariable(name: "key", arg: 1, scope: !14743, file: !12891, line: 181, type: !32)
!14746 = !DILocalVariable(name: "ret", scope: !14743, file: !12891, line: 183, type: !109)
!14747 = !DILocation(line: 0, scope: !14743)
!14748 = !DILocation(line: 185, column: 8, scope: !14743)
!14749 = !DILocation(line: 186, column: 2, scope: !14743)
!14750 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2414, file: !2414, line: 665, type: !13958, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14751)
!14751 = !{!14752, !14753, !14755}
!14752 = !DILocalVariable(name: "thread", arg: 1, scope: !14750, file: !2414, line: 665, type: !2306)
!14753 = !DILocalVariable(name: "__i", scope: !14754, file: !2414, line: 671, type: !13992)
!14754 = distinct !DILexicalBlock(scope: !14750, file: !2414, line: 671, column: 2)
!14755 = !DILocalVariable(name: "__key", scope: !14754, file: !2414, line: 671, type: !13992)
!14756 = !DILocation(line: 0, scope: !14750)
!14757 = !DILocation(line: 669, column: 8, scope: !14750)
!14758 = !DILocation(line: 0, scope: !14754)
!14759 = !DILocation(line: 0, scope: !14000, inlinedAt: !14760)
!14760 = distinct !DILocation(line: 671, column: 2, scope: !14754)
!14761 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !14762)
!14762 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !14760)
!14763 = !DILocation(line: 0, scope: !14009, inlinedAt: !14762)
!14764 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14760)
!14765 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !14760)
!14766 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !14760)
!14767 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !14760)
!14768 = !DILocation(line: 672, column: 7, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14770, file: !2414, line: 672, column: 7)
!14770 = distinct !DILexicalBlock(scope: !14771, file: !2414, line: 671, column: 26)
!14771 = distinct !DILexicalBlock(scope: !14754, file: !2414, line: 671, column: 2)
!14772 = !DILocation(line: 672, column: 7, scope: !14770)
!14773 = !DILocation(line: 0, scope: !14192, inlinedAt: !14774)
!14774 = distinct !DILocation(line: 673, column: 4, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14769, file: !2414, line: 672, column: 35)
!14776 = !DILocation(line: 266, column: 15, scope: !14192, inlinedAt: !14774)
!14777 = !DILocation(line: 266, column: 28, scope: !14192, inlinedAt: !14774)
!14778 = !DILocation(line: 0, scope: !14200, inlinedAt: !14779)
!14779 = distinct !DILocation(line: 268, column: 3, scope: !14204, inlinedAt: !14774)
!14780 = !DILocation(line: 234, column: 2, scope: !14200, inlinedAt: !14779)
!14781 = !DILocation(line: 674, column: 3, scope: !14775)
!14782 = !DILocation(line: 675, column: 3, scope: !14770)
!14783 = !DILocation(line: 676, column: 26, scope: !14770)
!14784 = !DILocation(line: 676, column: 23, scope: !14770)
!14785 = !DILocation(line: 676, column: 3, scope: !14770)
!14786 = !DILocation(line: 0, scope: !14034, inlinedAt: !14787)
!14787 = distinct !DILocation(line: 671, column: 2, scope: !14771)
!14788 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14787)
!14789 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !14787)
!14790 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !14787)
!14791 = !DILocation(line: 0, scope: !14048, inlinedAt: !14792)
!14792 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !14787)
!14793 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !14792)
!14794 = !DILocation(line: 679, column: 16, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14750, file: !2414, line: 679, column: 6)
!14796 = !DILocation(line: 679, column: 13, scope: !14795)
!14797 = !DILocation(line: 679, column: 6, scope: !14750)
!14798 = !DILocation(line: 680, column: 3, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14795, file: !2414, line: 679, column: 26)
!14800 = !DILocation(line: 681, column: 2, scope: !14799)
!14801 = !DILocation(line: 684, column: 1, scope: !14750)
!14802 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13216, file: !13216, line: 52, type: !13976, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14803)
!14803 = !{!14804}
!14804 = !DILocalVariable(name: "thread", arg: 1, scope: !14802, file: !13216, line: 52, type: !2306)
!14805 = !DILocation(line: 0, scope: !14802)
!14806 = !DILocation(line: 54, column: 39, scope: !14802)
!14807 = !DILocation(line: 54, column: 9, scope: !14802)
!14808 = !DILocation(line: 54, column: 2, scope: !14802)
!14809 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12787, file: !12787, line: 141, type: !13958, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14810)
!14810 = !{!14811}
!14811 = !DILocalVariable(name: "thread", arg: 1, scope: !14809, file: !12787, line: 141, type: !2306)
!14812 = !DILocation(line: 0, scope: !14809)
!14813 = !DILocation(line: 143, column: 15, scope: !14809)
!14814 = !DILocation(line: 143, column: 28, scope: !14809)
!14815 = !DILocation(line: 146, column: 1, scope: !14809)
!14816 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12787, file: !12787, line: 73, type: !3070, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2002)
!14817 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !14818)
!14818 = distinct !DILocation(line: 75, column: 30, scope: !14816)
!14819 = !DILocation(line: 0, scope: !14009, inlinedAt: !14818)
!14820 = !DILocation(line: 75, column: 9, scope: !14816)
!14821 = !DILocation(line: 76, column: 1, scope: !14816)
!14822 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2414, file: !2414, line: 977, type: !6480, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14823)
!14823 = !{!14824}
!14824 = !DILocalVariable(name: "key", arg: 1, scope: !14822, file: !2414, line: 977, type: !110)
!14825 = !DILocation(line: 0, scope: !14822)
!14826 = !DILocation(line: 979, column: 6, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14822, file: !2414, line: 979, column: 6)
!14828 = !DILocation(line: 979, column: 6, scope: !14822)
!14829 = !DILocation(line: 980, column: 3, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14827, file: !2414, line: 979, column: 20)
!14831 = !DILocation(line: 981, column: 2, scope: !14830)
!14832 = !DILocation(line: 0, scope: !14048, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 982, column: 3, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14827, file: !2414, line: 981, column: 9)
!14835 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !14833)
!14836 = !DILocation(line: 985, column: 1, scope: !14822)
!14837 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2414, file: !2414, line: 695, type: !13958, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14838)
!14838 = !{!14839, !14840}
!14839 = !DILocalVariable(name: "thread", arg: 1, scope: !14837, file: !2414, line: 695, type: !2306)
!14840 = !DILocalVariable(name: "key", scope: !14837, file: !2414, line: 699, type: !13992)
!14841 = !DILocation(line: 0, scope: !14837)
!14842 = !DILocation(line: 0, scope: !14000, inlinedAt: !14843)
!14843 = distinct !DILocation(line: 699, column: 25, scope: !14837)
!14844 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !14845)
!14845 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !14843)
!14846 = !DILocation(line: 0, scope: !14009, inlinedAt: !14845)
!14847 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14843)
!14848 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !14843)
!14849 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !14843)
!14850 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !14843)
!14851 = !DILocation(line: 702, column: 7, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14837, file: !2414, line: 702, column: 6)
!14853 = !DILocation(line: 702, column: 6, scope: !14837)
!14854 = !DILocation(line: 0, scope: !14034, inlinedAt: !14855)
!14855 = distinct !DILocation(line: 703, column: 3, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14852, file: !2414, line: 702, column: 38)
!14857 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14855)
!14858 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !14855)
!14859 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !14855)
!14860 = !DILocation(line: 0, scope: !14048, inlinedAt: !14861)
!14861 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !14855)
!14862 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !14861)
!14863 = !DILocation(line: 704, column: 3, scope: !14856)
!14864 = !DILocation(line: 707, column: 2, scope: !14837)
!14865 = !DILocation(line: 708, column: 2, scope: !14837)
!14866 = !DILocation(line: 710, column: 2, scope: !14837)
!14867 = !DILocation(line: 713, column: 1, scope: !14837)
!14868 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12787, file: !12787, line: 96, type: !14141, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14869)
!14869 = !{!14870}
!14870 = !DILocalVariable(name: "thread", arg: 1, scope: !14868, file: !12787, line: 96, type: !2306)
!14871 = !DILocation(line: 0, scope: !14868)
!14872 = !DILocation(line: 98, column: 23, scope: !14868)
!14873 = !DILocation(line: 98, column: 36, scope: !14868)
!14874 = !DILocation(line: 98, column: 57, scope: !14868)
!14875 = !DILocation(line: 98, column: 2, scope: !14868)
!14876 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12787, file: !12787, line: 148, type: !13958, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14877)
!14877 = !{!14878}
!14878 = !DILocalVariable(name: "thread", arg: 1, scope: !14876, file: !12787, line: 148, type: !2306)
!14879 = !DILocation(line: 0, scope: !14876)
!14880 = !DILocation(line: 150, column: 15, scope: !14876)
!14881 = !DILocation(line: 150, column: 28, scope: !14876)
!14882 = !DILocation(line: 153, column: 1, scope: !14876)
!14883 = distinct !DISubprogram(name: "z_pend_thread", scope: !2414, file: !2414, line: 770, type: !14884, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14890)
!14884 = !DISubroutineType(types: !14885)
!14885 = !{null, !2306, !2337, !14886}
!14886 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14887)
!14887 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14888)
!14888 = !{!14889}
!14889 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14887, file: !104, line: 66, baseType: !103, size: 64)
!14890 = !{!14891, !14892, !14893, !14894, !14896}
!14891 = !DILocalVariable(name: "thread", arg: 1, scope: !14883, file: !2414, line: 770, type: !2306)
!14892 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14883, file: !2414, line: 770, type: !2337)
!14893 = !DILocalVariable(name: "timeout", arg: 3, scope: !14883, file: !2414, line: 771, type: !14886)
!14894 = !DILocalVariable(name: "__i", scope: !14895, file: !2414, line: 774, type: !13992)
!14895 = distinct !DILexicalBlock(scope: !14883, file: !2414, line: 774, column: 2)
!14896 = !DILocalVariable(name: "__key", scope: !14895, file: !2414, line: 774, type: !13992)
!14897 = !DILocation(line: 0, scope: !14883)
!14898 = !DILocation(line: 773, column: 2, scope: !14899)
!14899 = distinct !DILexicalBlock(scope: !14900, file: !2414, line: 773, column: 2)
!14900 = distinct !DILexicalBlock(scope: !14883, file: !2414, line: 773, column: 2)
!14901 = !DILocation(line: 773, column: 2, scope: !14900)
!14902 = !DILocation(line: 773, column: 2, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14899, file: !2414, line: 773, column: 2)
!14904 = !DILocation(line: 0, scope: !14895)
!14905 = !DILocation(line: 0, scope: !14000, inlinedAt: !14906)
!14906 = distinct !DILocation(line: 774, column: 2, scope: !14895)
!14907 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !14908)
!14908 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !14906)
!14909 = !DILocation(line: 0, scope: !14009, inlinedAt: !14908)
!14910 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14906)
!14911 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !14906)
!14912 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !14906)
!14913 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !14906)
!14914 = !DILocation(line: 775, column: 3, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14916, file: !2414, line: 774, column: 26)
!14916 = distinct !DILexicalBlock(scope: !14895, file: !2414, line: 774, column: 2)
!14917 = !DILocation(line: 0, scope: !14034, inlinedAt: !14918)
!14918 = distinct !DILocation(line: 774, column: 2, scope: !14916)
!14919 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14918)
!14920 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !14918)
!14921 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !14918)
!14922 = !DILocation(line: 0, scope: !14048, inlinedAt: !14923)
!14923 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !14918)
!14924 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !14923)
!14925 = !DILocation(line: 777, column: 1, scope: !14883)
!14926 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2414, file: !2414, line: 79, type: !14141, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14927)
!14927 = !{!14928}
!14928 = !DILocalVariable(name: "thread", arg: 1, scope: !14926, file: !2414, line: 79, type: !2306)
!14929 = !DILocation(line: 0, scope: !14926)
!14930 = !DILocation(line: 81, column: 23, scope: !14926)
!14931 = !DILocation(line: 81, column: 36, scope: !14926)
!14932 = !DILocation(line: 81, column: 53, scope: !14926)
!14933 = !DILocation(line: 81, column: 2, scope: !14926)
!14934 = distinct !DISubprogram(name: "pend_locked", scope: !2414, file: !2414, line: 760, type: !14884, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14935)
!14935 = !{!14936, !14937, !14938}
!14936 = !DILocalVariable(name: "thread", arg: 1, scope: !14934, file: !2414, line: 760, type: !2306)
!14937 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14934, file: !2414, line: 760, type: !2337)
!14938 = !DILocalVariable(name: "timeout", arg: 3, scope: !14934, file: !2414, line: 761, type: !14886)
!14939 = !DILocation(line: 0, scope: !14934)
!14940 = !DILocation(line: 766, column: 2, scope: !14934)
!14941 = !DILocation(line: 767, column: 2, scope: !14934)
!14942 = !DILocation(line: 768, column: 1, scope: !14934)
!14943 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2414, file: !2414, line: 740, type: !14944, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14946)
!14944 = !DISubroutineType(types: !14945)
!14945 = !{null, !2306, !2337}
!14946 = !{!14947, !14948}
!14947 = !DILocalVariable(name: "thread", arg: 1, scope: !14943, file: !2414, line: 740, type: !2306)
!14948 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14943, file: !2414, line: 740, type: !2337)
!14949 = !DILocation(line: 0, scope: !14943)
!14950 = !DILocation(line: 742, column: 2, scope: !14943)
!14951 = !DILocation(line: 743, column: 2, scope: !14943)
!14952 = !DILocation(line: 747, column: 13, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14943, file: !2414, line: 747, column: 6)
!14954 = !DILocation(line: 747, column: 6, scope: !14943)
!14955 = !DILocation(line: 748, column: 16, scope: !14956)
!14956 = distinct !DILexicalBlock(scope: !14953, file: !2414, line: 747, column: 22)
!14957 = !DILocation(line: 748, column: 26, scope: !14956)
!14958 = !DILocation(line: 749, column: 28, scope: !14956)
!14959 = !DILocation(line: 0, scope: !14223, inlinedAt: !14960)
!14960 = distinct !DILocation(line: 749, column: 3, scope: !14956)
!14961 = !DILocation(line: 186, column: 2, scope: !14233, inlinedAt: !14960)
!14962 = !DILocation(line: 186, column: 2, scope: !14234, inlinedAt: !14960)
!14963 = !DILocation(line: 186, column: 2, scope: !14237, inlinedAt: !14960)
!14964 = !DILocation(line: 188, column: 2, scope: !14239, inlinedAt: !14960)
!14965 = !DILocation(line: 188, column: 2, scope: !14241, inlinedAt: !14960)
!14966 = !DILocation(line: 0, scope: !14239, inlinedAt: !14960)
!14967 = !DILocation(line: 189, column: 7, scope: !14244, inlinedAt: !14960)
!14968 = !DILocation(line: 189, column: 35, scope: !14244, inlinedAt: !14960)
!14969 = !DILocation(line: 189, column: 7, scope: !14245, inlinedAt: !14960)
!14970 = !DILocation(line: 191, column: 21, scope: !14249, inlinedAt: !14960)
!14971 = !DILocation(line: 190, column: 4, scope: !14249, inlinedAt: !14960)
!14972 = !DILocation(line: 192, column: 4, scope: !14249, inlinedAt: !14960)
!14973 = distinct !{!14973, !14964, !14974}
!14974 = !DILocation(line: 194, column: 2, scope: !14239, inlinedAt: !14960)
!14975 = !DILocation(line: 196, column: 37, scope: !14223, inlinedAt: !14960)
!14976 = !DILocation(line: 196, column: 2, scope: !14223, inlinedAt: !14960)
!14977 = !DILocation(line: 197, column: 1, scope: !14223, inlinedAt: !14960)
!14978 = !DILocation(line: 751, column: 1, scope: !14943)
!14979 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2414, file: !2414, line: 753, type: !14980, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14982)
!14980 = !DISubroutineType(types: !14981)
!14981 = !{null, !2306, !14886}
!14982 = !{!14983, !14984}
!14983 = !DILocalVariable(name: "thread", arg: 1, scope: !14979, file: !2414, line: 753, type: !2306)
!14984 = !DILocalVariable(name: "timeout", arg: 2, scope: !14979, file: !2414, line: 753, type: !14886)
!14985 = !DILocation(line: 0, scope: !14979)
!14986 = !DILocation(line: 755, column: 7, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14979, file: !2414, line: 755, column: 6)
!14988 = !DILocation(line: 755, column: 6, scope: !14979)
!14989 = !DILocation(line: 756, column: 3, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14987, file: !2414, line: 755, column: 41)
!14991 = !DILocation(line: 757, column: 2, scope: !14990)
!14992 = !DILocation(line: 758, column: 1, scope: !14979)
!14993 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13216, file: !13216, line: 47, type: !14980, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14994)
!14994 = !{!14995, !14996}
!14995 = !DILocalVariable(name: "thread", arg: 1, scope: !14993, file: !13216, line: 47, type: !2306)
!14996 = !DILocalVariable(name: "ticks", arg: 2, scope: !14993, file: !13216, line: 47, type: !14886)
!14997 = !DILocation(line: 0, scope: !14993)
!14998 = !DILocation(line: 49, column: 30, scope: !14993)
!14999 = !DILocation(line: 49, column: 2, scope: !14993)
!15000 = !DILocation(line: 50, column: 1, scope: !14993)
!15001 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2414, file: !2414, line: 795, type: !2363, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15002)
!15002 = !{!15003, !15004, !15005, !15007, !15008}
!15003 = !DILocalVariable(name: "timeout", arg: 1, scope: !15001, file: !2414, line: 795, type: !2365)
!15004 = !DILocalVariable(name: "thread", scope: !15001, file: !2414, line: 797, type: !2306)
!15005 = !DILocalVariable(name: "__i", scope: !15006, file: !2414, line: 800, type: !13992)
!15006 = distinct !DILexicalBlock(scope: !15001, file: !2414, line: 800, column: 2)
!15007 = !DILocalVariable(name: "__key", scope: !15006, file: !2414, line: 800, type: !13992)
!15008 = !DILocalVariable(name: "killed", scope: !15009, file: !2414, line: 801, type: !347)
!15009 = distinct !DILexicalBlock(scope: !15010, file: !2414, line: 800, column: 26)
!15010 = distinct !DILexicalBlock(scope: !15006, file: !2414, line: 800, column: 2)
!15011 = !DILocation(line: 0, scope: !15001)
!15012 = !DILocation(line: 797, column: 28, scope: !15001)
!15013 = !DILocation(line: 0, scope: !15006)
!15014 = !DILocation(line: 0, scope: !14000, inlinedAt: !15015)
!15015 = distinct !DILocation(line: 800, column: 2, scope: !15006)
!15016 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15017)
!15017 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15015)
!15018 = !DILocation(line: 0, scope: !14009, inlinedAt: !15017)
!15019 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15015)
!15020 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15015)
!15021 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15015)
!15022 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15015)
!15023 = !DILocation(line: 801, column: 27, scope: !15009)
!15024 = !DILocation(line: 801, column: 32, scope: !15009)
!15025 = !DILocation(line: 801, column: 61, scope: !15009)
!15026 = !DILocation(line: 0, scope: !15009)
!15027 = !DILocation(line: 804, column: 7, scope: !15009)
!15028 = !DILocation(line: 805, column: 21, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15030, file: !2414, line: 805, column: 8)
!15030 = distinct !DILexicalBlock(scope: !15031, file: !2414, line: 804, column: 16)
!15031 = distinct !DILexicalBlock(scope: !15009, file: !2414, line: 804, column: 7)
!15032 = !DILocation(line: 805, column: 31, scope: !15029)
!15033 = !DILocation(line: 805, column: 8, scope: !15030)
!15034 = !DILocation(line: 806, column: 5, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15029, file: !2414, line: 805, column: 40)
!15036 = !DILocation(line: 807, column: 4, scope: !15035)
!15037 = !DILocation(line: 808, column: 4, scope: !15030)
!15038 = !DILocation(line: 809, column: 4, scope: !15030)
!15039 = !DILocation(line: 810, column: 4, scope: !15030)
!15040 = !DILocation(line: 811, column: 3, scope: !15030)
!15041 = !DILocation(line: 0, scope: !14034, inlinedAt: !15042)
!15042 = distinct !DILocation(line: 800, column: 2, scope: !15010)
!15043 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15042)
!15044 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !15042)
!15045 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !15042)
!15046 = !DILocation(line: 0, scope: !14048, inlinedAt: !15047)
!15047 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !15042)
!15048 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !15047)
!15049 = !DILocation(line: 813, column: 1, scope: !15001)
!15050 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2414, file: !2414, line: 779, type: !13958, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15051)
!15051 = !{!15052}
!15052 = !DILocalVariable(name: "thread", arg: 1, scope: !15050, file: !2414, line: 779, type: !2306)
!15053 = !DILocation(line: 0, scope: !15050)
!15054 = !DILocation(line: 781, column: 21, scope: !15050)
!15055 = !DILocation(line: 781, column: 2, scope: !15050)
!15056 = !DILocation(line: 782, column: 2, scope: !15050)
!15057 = !DILocation(line: 783, column: 15, scope: !15050)
!15058 = !DILocation(line: 783, column: 25, scope: !15050)
!15059 = !DILocation(line: 784, column: 1, scope: !15050)
!15060 = distinct !DISubprogram(name: "pended_on_thread", scope: !2414, file: !2414, line: 724, type: !15061, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15063)
!15061 = !DISubroutineType(types: !15062)
!15062 = !{!2337, !2306}
!15063 = !{!15064}
!15064 = !DILocalVariable(name: "thread", arg: 1, scope: !15060, file: !2414, line: 724, type: !2306)
!15065 = !DILocation(line: 0, scope: !15060)
!15066 = !DILocation(line: 726, column: 2, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15068, file: !2414, line: 726, column: 2)
!15068 = distinct !DILexicalBlock(scope: !15060, file: !2414, line: 726, column: 2)
!15069 = !DILocation(line: 726, column: 2, scope: !15068)
!15070 = !DILocation(line: 726, column: 2, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15067, file: !2414, line: 726, column: 2)
!15072 = !DILocation(line: 728, column: 2, scope: !15060)
!15073 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12787, file: !12787, line: 165, type: !13958, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15074)
!15074 = !{!15075}
!15075 = !DILocalVariable(name: "thread", arg: 1, scope: !15073, file: !12787, line: 165, type: !2306)
!15076 = !DILocation(line: 0, scope: !15073)
!15077 = !DILocation(line: 167, column: 15, scope: !15073)
!15078 = !DILocation(line: 167, column: 28, scope: !15073)
!15079 = !DILocation(line: 168, column: 1, scope: !15073)
!15080 = distinct !DISubprogram(name: "unready_thread", scope: !2414, file: !2414, line: 731, type: !13958, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15081)
!15081 = !{!15082}
!15082 = !DILocalVariable(name: "thread", arg: 1, scope: !15080, file: !2414, line: 731, type: !2306)
!15083 = !DILocation(line: 0, scope: !15080)
!15084 = !DILocation(line: 733, column: 6, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15080, file: !2414, line: 733, column: 6)
!15086 = !DILocation(line: 733, column: 6, scope: !15080)
!15087 = !DILocation(line: 0, scope: !14192, inlinedAt: !15088)
!15088 = distinct !DILocation(line: 734, column: 3, scope: !15089)
!15089 = distinct !DILexicalBlock(scope: !15085, file: !2414, line: 733, column: 34)
!15090 = !DILocation(line: 266, column: 15, scope: !14192, inlinedAt: !15088)
!15091 = !DILocation(line: 266, column: 28, scope: !14192, inlinedAt: !15088)
!15092 = !DILocation(line: 0, scope: !14200, inlinedAt: !15093)
!15093 = distinct !DILocation(line: 268, column: 3, scope: !14204, inlinedAt: !15088)
!15094 = !DILocation(line: 234, column: 2, scope: !14200, inlinedAt: !15093)
!15095 = !DILocation(line: 735, column: 2, scope: !15089)
!15096 = !DILocation(line: 736, column: 25, scope: !15080)
!15097 = !DILocation(line: 736, column: 22, scope: !15080)
!15098 = !DILocation(line: 736, column: 2, scope: !15080)
!15099 = !DILocation(line: 737, column: 1, scope: !15080)
!15100 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12787, file: !12787, line: 160, type: !13958, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15101)
!15101 = !{!15102}
!15102 = !DILocalVariable(name: "thread", arg: 1, scope: !15100, file: !12787, line: 160, type: !2306)
!15103 = !DILocation(line: 0, scope: !15100)
!15104 = !DILocation(line: 162, column: 15, scope: !15100)
!15105 = !DILocation(line: 162, column: 28, scope: !15100)
!15106 = !DILocation(line: 163, column: 1, scope: !15100)
!15107 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2414, file: !2414, line: 786, type: !13958, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15108)
!15108 = !{!15109, !15110, !15112}
!15109 = !DILocalVariable(name: "thread", arg: 1, scope: !15107, file: !2414, line: 786, type: !2306)
!15110 = !DILocalVariable(name: "__i", scope: !15111, file: !2414, line: 788, type: !13992)
!15111 = distinct !DILexicalBlock(scope: !15107, file: !2414, line: 788, column: 2)
!15112 = !DILocalVariable(name: "__key", scope: !15111, file: !2414, line: 788, type: !13992)
!15113 = !DILocation(line: 0, scope: !15107)
!15114 = !DILocation(line: 0, scope: !15111)
!15115 = !DILocation(line: 0, scope: !14000, inlinedAt: !15116)
!15116 = distinct !DILocation(line: 788, column: 2, scope: !15111)
!15117 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15118)
!15118 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15116)
!15119 = !DILocation(line: 0, scope: !14009, inlinedAt: !15118)
!15120 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15116)
!15121 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15116)
!15122 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15116)
!15123 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15116)
!15124 = !DILocation(line: 789, column: 3, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15126, file: !2414, line: 788, column: 26)
!15126 = distinct !DILexicalBlock(scope: !15111, file: !2414, line: 788, column: 2)
!15127 = !DILocation(line: 0, scope: !14034, inlinedAt: !15128)
!15128 = distinct !DILocation(line: 788, column: 2, scope: !15126)
!15129 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15128)
!15130 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !15128)
!15131 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !15128)
!15132 = !DILocation(line: 0, scope: !14048, inlinedAt: !15133)
!15133 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !15128)
!15134 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !15133)
!15135 = !DILocation(line: 791, column: 1, scope: !15107)
!15136 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2414, file: !2414, line: 816, type: !15137, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15139)
!15137 = !DISubroutineType(types: !15138)
!15138 = !{!109, !110, !2337, !14886}
!15139 = !{!15140, !15141, !15142, !15143, !15144, !15146}
!15140 = !DILocalVariable(name: "key", arg: 1, scope: !15136, file: !2414, line: 816, type: !110)
!15141 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15136, file: !2414, line: 816, type: !2337)
!15142 = !DILocalVariable(name: "timeout", arg: 3, scope: !15136, file: !2414, line: 816, type: !14886)
!15143 = !DILocalVariable(name: "ret", scope: !15136, file: !2414, line: 828, type: !109)
!15144 = !DILocalVariable(name: "__i", scope: !15145, file: !2414, line: 829, type: !13992)
!15145 = distinct !DILexicalBlock(scope: !15136, file: !2414, line: 829, column: 2)
!15146 = !DILocalVariable(name: "__key", scope: !15145, file: !2414, line: 829, type: !13992)
!15147 = !DILocation(line: 0, scope: !15136)
!15148 = !DILocation(line: 823, column: 14, scope: !15136)
!15149 = !DILocation(line: 823, column: 2, scope: !15136)
!15150 = !DILocation(line: 826, column: 20, scope: !15136)
!15151 = !DILocation(line: 826, column: 18, scope: !15136)
!15152 = !DILocation(line: 828, column: 12, scope: !15136)
!15153 = !DILocation(line: 0, scope: !15145)
!15154 = !DILocation(line: 0, scope: !14000, inlinedAt: !15155)
!15155 = distinct !DILocation(line: 829, column: 2, scope: !15145)
!15156 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15157)
!15157 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15155)
!15158 = !DILocation(line: 0, scope: !14009, inlinedAt: !15157)
!15159 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15155)
!15160 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15155)
!15161 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15155)
!15162 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15155)
!15163 = !DILocation(line: 830, column: 7, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15165, file: !2414, line: 830, column: 7)
!15165 = distinct !DILexicalBlock(scope: !15166, file: !2414, line: 829, column: 26)
!15166 = distinct !DILexicalBlock(scope: !15145, file: !2414, line: 829, column: 2)
!15167 = !DILocation(line: 830, column: 26, scope: !15164)
!15168 = !DILocation(line: 830, column: 23, scope: !15164)
!15169 = !DILocation(line: 830, column: 7, scope: !15165)
!15170 = !DILocation(line: 831, column: 20, scope: !15171)
!15171 = distinct !DILexicalBlock(scope: !15164, file: !2414, line: 830, column: 36)
!15172 = !DILocation(line: 832, column: 3, scope: !15171)
!15173 = !DILocation(line: 0, scope: !14034, inlinedAt: !15174)
!15174 = distinct !DILocation(line: 829, column: 2, scope: !15166)
!15175 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15174)
!15176 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !15174)
!15177 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !15174)
!15178 = !DILocation(line: 0, scope: !14048, inlinedAt: !15179)
!15179 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !15174)
!15180 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !15179)
!15181 = !DILocation(line: 834, column: 2, scope: !15136)
!15182 = distinct !DISubprogram(name: "z_pend_curr", scope: !2414, file: !2414, line: 840, type: !15183, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15185)
!15183 = !DISubroutineType(types: !15184)
!15184 = !{!109, !14003, !13992, !2337, !14886}
!15185 = !{!15186, !15187, !15188, !15189}
!15186 = !DILocalVariable(name: "lock", arg: 1, scope: !15182, file: !2414, line: 840, type: !14003)
!15187 = !DILocalVariable(name: "key", arg: 2, scope: !15182, file: !2414, line: 840, type: !13992)
!15188 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15182, file: !2414, line: 841, type: !2337)
!15189 = !DILocalVariable(name: "timeout", arg: 4, scope: !15182, file: !2414, line: 841, type: !14886)
!15190 = !DILocation(line: 0, scope: !15182)
!15191 = !DILocation(line: 844, column: 20, scope: !15182)
!15192 = !DILocation(line: 844, column: 18, scope: !15182)
!15193 = !DILocation(line: 846, column: 2, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15195, file: !2414, line: 846, column: 2)
!15195 = distinct !DILexicalBlock(scope: !15182, file: !2414, line: 846, column: 2)
!15196 = !DILocation(line: 846, column: 2, scope: !15195)
!15197 = !DILocation(line: 846, column: 2, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15194, file: !2414, line: 846, column: 2)
!15199 = !DILocation(line: 0, scope: !14000, inlinedAt: !15200)
!15200 = distinct !DILocation(line: 856, column: 9, scope: !15182)
!15201 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15200)
!15203 = !DILocation(line: 0, scope: !14009, inlinedAt: !15202)
!15204 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15200)
!15205 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15200)
!15206 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15200)
!15207 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15200)
!15208 = !DILocation(line: 857, column: 14, scope: !15182)
!15209 = !DILocation(line: 857, column: 2, scope: !15182)
!15210 = !DILocation(line: 0, scope: !14685, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 858, column: 2, scope: !15182)
!15212 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !15211)
!15213 = !DILocation(line: 225, column: 2, scope: !14693, inlinedAt: !15211)
!15214 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !15211)
!15215 = !DILocation(line: 0, scope: !14676, inlinedAt: !15216)
!15216 = distinct !DILocation(line: 859, column: 9, scope: !15182)
!15217 = !DILocation(line: 0, scope: !14685, inlinedAt: !15218)
!15218 = distinct !DILocation(line: 195, column: 2, scope: !14676, inlinedAt: !15216)
!15219 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !15218)
!15220 = !DILocation(line: 225, column: 2, scope: !14693, inlinedAt: !15218)
!15221 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !15218)
!15222 = !DILocation(line: 196, column: 9, scope: !14676, inlinedAt: !15216)
!15223 = !DILocation(line: 859, column: 2, scope: !15182)
!15224 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2414, file: !2414, line: 862, type: !15225, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15227)
!15225 = !DISubroutineType(types: !15226)
!15226 = !{!2306, !2337}
!15227 = !{!15228, !15229, !15230, !15232}
!15228 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15224, file: !2414, line: 862, type: !2337)
!15229 = !DILocalVariable(name: "thread", scope: !15224, file: !2414, line: 864, type: !2306)
!15230 = !DILocalVariable(name: "__i", scope: !15231, file: !2414, line: 866, type: !13992)
!15231 = distinct !DILexicalBlock(scope: !15224, file: !2414, line: 866, column: 2)
!15232 = !DILocalVariable(name: "__key", scope: !15231, file: !2414, line: 866, type: !13992)
!15233 = !DILocation(line: 0, scope: !15224)
!15234 = !DILocation(line: 0, scope: !15231)
!15235 = !DILocation(line: 0, scope: !14000, inlinedAt: !15236)
!15236 = distinct !DILocation(line: 866, column: 2, scope: !15231)
!15237 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15238)
!15238 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15236)
!15239 = !DILocation(line: 0, scope: !14009, inlinedAt: !15238)
!15240 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15236)
!15241 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15236)
!15242 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15236)
!15243 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15236)
!15244 = !DILocation(line: 867, column: 12, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15246, file: !2414, line: 866, column: 26)
!15246 = distinct !DILexicalBlock(scope: !15231, file: !2414, line: 866, column: 2)
!15247 = !DILocation(line: 869, column: 14, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15245, file: !2414, line: 869, column: 7)
!15249 = !DILocation(line: 869, column: 7, scope: !15245)
!15250 = !DILocation(line: 870, column: 4, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15248, file: !2414, line: 869, column: 23)
!15252 = !DILocation(line: 871, column: 3, scope: !15251)
!15253 = !DILocation(line: 0, scope: !14034, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 866, column: 2, scope: !15246)
!15255 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15254)
!15256 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !15254)
!15257 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !15254)
!15258 = !DILocation(line: 0, scope: !14048, inlinedAt: !15259)
!15259 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !15254)
!15260 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !15259)
!15261 = !DILocation(line: 874, column: 2, scope: !15224)
!15262 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2414, file: !2414, line: 877, type: !15225, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15263)
!15263 = !{!15264, !15265, !15266, !15268}
!15264 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15262, file: !2414, line: 877, type: !2337)
!15265 = !DILocalVariable(name: "thread", scope: !15262, file: !2414, line: 879, type: !2306)
!15266 = !DILocalVariable(name: "__i", scope: !15267, file: !2414, line: 881, type: !13992)
!15267 = distinct !DILexicalBlock(scope: !15262, file: !2414, line: 881, column: 2)
!15268 = !DILocalVariable(name: "__key", scope: !15267, file: !2414, line: 881, type: !13992)
!15269 = !DILocation(line: 0, scope: !15262)
!15270 = !DILocation(line: 0, scope: !15267)
!15271 = !DILocation(line: 0, scope: !14000, inlinedAt: !15272)
!15272 = distinct !DILocation(line: 881, column: 2, scope: !15267)
!15273 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15274)
!15274 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15272)
!15275 = !DILocation(line: 0, scope: !14009, inlinedAt: !15274)
!15276 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15272)
!15277 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15272)
!15278 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15272)
!15279 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15272)
!15280 = !DILocation(line: 882, column: 12, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15282, file: !2414, line: 881, column: 26)
!15282 = distinct !DILexicalBlock(scope: !15267, file: !2414, line: 881, column: 2)
!15283 = !DILocation(line: 884, column: 14, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15281, file: !2414, line: 884, column: 7)
!15285 = !DILocation(line: 884, column: 7, scope: !15281)
!15286 = !DILocation(line: 885, column: 4, scope: !15287)
!15287 = distinct !DILexicalBlock(scope: !15284, file: !2414, line: 884, column: 23)
!15288 = !DILocation(line: 886, column: 10, scope: !15287)
!15289 = !DILocation(line: 887, column: 3, scope: !15287)
!15290 = !DILocation(line: 0, scope: !14034, inlinedAt: !15291)
!15291 = distinct !DILocation(line: 881, column: 2, scope: !15282)
!15292 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15291)
!15293 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !15291)
!15294 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !15291)
!15295 = !DILocation(line: 0, scope: !14048, inlinedAt: !15296)
!15296 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !15291)
!15297 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !15296)
!15298 = !DILocation(line: 890, column: 2, scope: !15262)
!15299 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2414, file: !2414, line: 893, type: !13958, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15300)
!15300 = !{!15301}
!15301 = !DILocalVariable(name: "thread", arg: 1, scope: !15299, file: !2414, line: 893, type: !2306)
!15302 = !DILocation(line: 0, scope: !15299)
!15303 = !DILocation(line: 0, scope: !15107, inlinedAt: !15304)
!15304 = distinct !DILocation(line: 895, column: 2, scope: !15299)
!15305 = !DILocation(line: 0, scope: !15111, inlinedAt: !15304)
!15306 = !DILocation(line: 0, scope: !14000, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 788, column: 2, scope: !15111, inlinedAt: !15304)
!15308 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15309)
!15309 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15307)
!15310 = !DILocation(line: 0, scope: !14009, inlinedAt: !15309)
!15311 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15307)
!15312 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15307)
!15313 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15307)
!15314 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15307)
!15315 = !DILocation(line: 789, column: 3, scope: !15125, inlinedAt: !15304)
!15316 = !DILocation(line: 0, scope: !14034, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 788, column: 2, scope: !15126, inlinedAt: !15304)
!15318 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15317)
!15319 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !15317)
!15320 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !15317)
!15321 = !DILocation(line: 0, scope: !14048, inlinedAt: !15322)
!15322 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !15317)
!15323 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !15322)
!15324 = !DILocation(line: 896, column: 8, scope: !15299)
!15325 = !DILocation(line: 897, column: 1, scope: !15299)
!15326 = distinct !DISubprogram(name: "z_set_prio", scope: !2414, file: !2414, line: 902, type: !14361, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15327)
!15327 = !{!15328, !15329, !15330, !15331, !15333}
!15328 = !DILocalVariable(name: "thread", arg: 1, scope: !15326, file: !2414, line: 902, type: !2306)
!15329 = !DILocalVariable(name: "prio", arg: 2, scope: !15326, file: !2414, line: 902, type: !109)
!15330 = !DILocalVariable(name: "need_sched", scope: !15326, file: !2414, line: 904, type: !347)
!15331 = !DILocalVariable(name: "__i", scope: !15332, file: !2414, line: 906, type: !13992)
!15332 = distinct !DILexicalBlock(scope: !15326, file: !2414, line: 906, column: 2)
!15333 = !DILocalVariable(name: "__key", scope: !15332, file: !2414, line: 906, type: !13992)
!15334 = !DILocation(line: 0, scope: !15326)
!15335 = !DILocation(line: 0, scope: !15332)
!15336 = !DILocation(line: 0, scope: !14000, inlinedAt: !15337)
!15337 = distinct !DILocation(line: 906, column: 2, scope: !15332)
!15338 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15339)
!15339 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15337)
!15340 = !DILocation(line: 0, scope: !14009, inlinedAt: !15339)
!15341 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15337)
!15342 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15337)
!15343 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15337)
!15344 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15337)
!15345 = !DILocation(line: 907, column: 16, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15347, file: !2414, line: 906, column: 26)
!15347 = distinct !DILexicalBlock(scope: !15332, file: !2414, line: 906, column: 2)
!15348 = !DILocation(line: 909, column: 7, scope: !15346)
!15349 = !DILocation(line: 0, scope: !14192, inlinedAt: !15350)
!15350 = distinct !DILocation(line: 912, column: 5, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15352, file: !2414, line: 911, column: 63)
!15352 = distinct !DILexicalBlock(scope: !15353, file: !2414, line: 911, column: 8)
!15353 = distinct !DILexicalBlock(scope: !15354, file: !2414, line: 909, column: 19)
!15354 = distinct !DILexicalBlock(scope: !15346, file: !2414, line: 909, column: 7)
!15355 = !DILocation(line: 266, column: 28, scope: !14192, inlinedAt: !15350)
!15356 = !DILocation(line: 0, scope: !14200, inlinedAt: !15357)
!15357 = distinct !DILocation(line: 268, column: 3, scope: !14204, inlinedAt: !15350)
!15358 = !DILocation(line: 234, column: 2, scope: !14200, inlinedAt: !15357)
!15359 = !DILocation(line: 913, column: 23, scope: !15351)
!15360 = !DILocation(line: 0, scope: !14209, inlinedAt: !15361)
!15361 = distinct !DILocation(line: 914, column: 5, scope: !15351)
!15362 = !DILocation(line: 252, column: 28, scope: !14209, inlinedAt: !15361)
!15363 = !DILocation(line: 0, scope: !14216, inlinedAt: !15364)
!15364 = distinct !DILocation(line: 254, column: 3, scope: !14220, inlinedAt: !15361)
!15365 = !DILocation(line: 0, scope: !14223, inlinedAt: !15366)
!15366 = distinct !DILocation(line: 229, column: 2, scope: !14216, inlinedAt: !15364)
!15367 = !DILocation(line: 186, column: 2, scope: !14233, inlinedAt: !15366)
!15368 = !DILocation(line: 186, column: 2, scope: !14234, inlinedAt: !15366)
!15369 = !DILocation(line: 186, column: 2, scope: !14237, inlinedAt: !15366)
!15370 = !DILocation(line: 188, column: 2, scope: !14239, inlinedAt: !15366)
!15371 = !DILocation(line: 188, column: 2, scope: !14241, inlinedAt: !15366)
!15372 = !DILocation(line: 0, scope: !14239, inlinedAt: !15366)
!15373 = !DILocation(line: 189, column: 7, scope: !14244, inlinedAt: !15366)
!15374 = !DILocation(line: 189, column: 35, scope: !14244, inlinedAt: !15366)
!15375 = !DILocation(line: 189, column: 7, scope: !14245, inlinedAt: !15366)
!15376 = !DILocation(line: 190, column: 4, scope: !14249, inlinedAt: !15366)
!15377 = !DILocation(line: 192, column: 4, scope: !14249, inlinedAt: !15366)
!15378 = distinct !{!15378, !15370, !15379}
!15379 = !DILocation(line: 194, column: 2, scope: !14239, inlinedAt: !15366)
!15380 = !DILocation(line: 196, column: 2, scope: !14223, inlinedAt: !15366)
!15381 = !DILocation(line: 197, column: 1, scope: !14223, inlinedAt: !15366)
!15382 = !DILocation(line: 918, column: 4, scope: !15353)
!15383 = !DILocation(line: 919, column: 3, scope: !15353)
!15384 = !DILocation(line: 920, column: 22, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15354, file: !2414, line: 919, column: 10)
!15386 = !DILocation(line: 0, scope: !14034, inlinedAt: !15387)
!15387 = distinct !DILocation(line: 906, column: 2, scope: !15347)
!15388 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15387)
!15389 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !15387)
!15390 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !15387)
!15391 = !DILocation(line: 0, scope: !14048, inlinedAt: !15392)
!15392 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !15387)
!15393 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !15392)
!15394 = !DILocation(line: 926, column: 2, scope: !15326)
!15395 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2414, file: !2414, line: 929, type: !15396, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15398)
!15396 = !DISubroutineType(types: !15397)
!15397 = !{null, !2306, !109}
!15398 = !{!15399, !15400, !15401}
!15399 = !DILocalVariable(name: "thread", arg: 1, scope: !15395, file: !2414, line: 929, type: !2306)
!15400 = !DILocalVariable(name: "prio", arg: 2, scope: !15395, file: !2414, line: 929, type: !109)
!15401 = !DILocalVariable(name: "need_sched", scope: !15395, file: !2414, line: 931, type: !347)
!15402 = !DILocation(line: 0, scope: !15395)
!15403 = !DILocation(line: 931, column: 20, scope: !15395)
!15404 = !DILocation(line: 935, column: 17, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15395, file: !2414, line: 935, column: 6)
!15406 = !DILocation(line: 935, column: 20, scope: !15405)
!15407 = !DILocation(line: 935, column: 35, scope: !15405)
!15408 = !DILocation(line: 935, column: 48, scope: !15405)
!15409 = !DILocation(line: 935, column: 6, scope: !15395)
!15410 = !DILocation(line: 936, column: 3, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15405, file: !2414, line: 935, column: 55)
!15412 = !DILocation(line: 937, column: 2, scope: !15411)
!15413 = !DILocation(line: 938, column: 1, scope: !15395)
!15414 = distinct !DISubprogram(name: "k_sched_lock", scope: !2414, file: !2414, line: 987, type: !3070, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15415)
!15415 = !{!15416, !15418}
!15416 = !DILocalVariable(name: "__i", scope: !15417, file: !2414, line: 989, type: !13992)
!15417 = distinct !DILexicalBlock(scope: !15414, file: !2414, line: 989, column: 2)
!15418 = !DILocalVariable(name: "__key", scope: !15417, file: !2414, line: 989, type: !13992)
!15419 = !DILocation(line: 0, scope: !15417)
!15420 = !DILocation(line: 0, scope: !14000, inlinedAt: !15421)
!15421 = distinct !DILocation(line: 989, column: 2, scope: !15417)
!15422 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15423)
!15423 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15421)
!15424 = !DILocation(line: 0, scope: !14009, inlinedAt: !15423)
!15425 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15421)
!15426 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15421)
!15427 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15421)
!15428 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15421)
!15429 = !DILocation(line: 992, column: 3, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15431, file: !2414, line: 989, column: 26)
!15431 = distinct !DILexicalBlock(scope: !15417, file: !2414, line: 989, column: 2)
!15432 = !DILocation(line: 0, scope: !14034, inlinedAt: !15433)
!15433 = distinct !DILocation(line: 989, column: 2, scope: !15431)
!15434 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15433)
!15435 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !15433)
!15436 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !15433)
!15437 = !DILocation(line: 0, scope: !14048, inlinedAt: !15438)
!15438 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !15433)
!15439 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !15438)
!15440 = !DILocation(line: 994, column: 1, scope: !15414)
!15441 = distinct !DISubprogram(name: "z_sched_lock", scope: !12787, file: !12787, line: 251, type: !3070, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2002)
!15442 = !DILocation(line: 1031, column: 3, scope: !14725, inlinedAt: !15443)
!15443 = distinct !DILocation(line: 48, column: 10, scope: !14729, inlinedAt: !15444)
!15444 = distinct !DILocation(line: 253, column: 2, scope: !15445)
!15445 = distinct !DILexicalBlock(scope: !15446, file: !12787, line: 253, column: 2)
!15446 = distinct !DILexicalBlock(scope: !15441, file: !12787, line: 253, column: 2)
!15447 = !DILocation(line: 0, scope: !14725, inlinedAt: !15443)
!15448 = !DILocation(line: 48, column: 9, scope: !14729, inlinedAt: !15444)
!15449 = !DILocation(line: 253, column: 2, scope: !15446)
!15450 = !DILocation(line: 253, column: 2, scope: !15451)
!15451 = distinct !DILexicalBlock(scope: !15445, file: !12787, line: 253, column: 2)
!15452 = !DILocation(line: 254, column: 2, scope: !15453)
!15453 = distinct !DILexicalBlock(scope: !15454, file: !12787, line: 254, column: 2)
!15454 = distinct !DILexicalBlock(scope: !15441, file: !12787, line: 254, column: 2)
!15455 = !DILocation(line: 254, column: 2, scope: !15454)
!15456 = !DILocation(line: 254, column: 2, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15453, file: !12787, line: 254, column: 2)
!15458 = !DILocation(line: 256, column: 2, scope: !15441)
!15459 = !DILocation(line: 258, column: 2, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15441, file: !12787, line: 258, column: 2)
!15461 = !{i64 2154199876}
!15462 = !DILocation(line: 259, column: 1, scope: !15441)
!15463 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2414, file: !2414, line: 996, type: !3070, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15464)
!15464 = !{!15465, !15467}
!15465 = !DILocalVariable(name: "__i", scope: !15466, file: !2414, line: 998, type: !13992)
!15466 = distinct !DILexicalBlock(scope: !15463, file: !2414, line: 998, column: 2)
!15467 = !DILocalVariable(name: "__key", scope: !15466, file: !2414, line: 998, type: !13992)
!15468 = !DILocation(line: 0, scope: !15466)
!15469 = !DILocation(line: 0, scope: !14000, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 998, column: 2, scope: !15466)
!15471 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15470)
!15473 = !DILocation(line: 0, scope: !14009, inlinedAt: !15472)
!15474 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15470)
!15475 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15470)
!15476 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15470)
!15477 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15470)
!15478 = !DILocation(line: 999, column: 3, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15480, file: !2414, line: 999, column: 3)
!15480 = distinct !DILexicalBlock(scope: !15481, file: !2414, line: 999, column: 3)
!15481 = distinct !DILexicalBlock(scope: !15482, file: !2414, line: 998, column: 26)
!15482 = distinct !DILexicalBlock(scope: !15466, file: !2414, line: 998, column: 2)
!15483 = !DILocation(line: 999, column: 3, scope: !15480)
!15484 = !DILocation(line: 999, column: 3, scope: !15485)
!15485 = distinct !DILexicalBlock(scope: !15479, file: !2414, line: 999, column: 3)
!15486 = !DILocation(line: 1031, column: 3, scope: !14725, inlinedAt: !15487)
!15487 = distinct !DILocation(line: 48, column: 10, scope: !14729, inlinedAt: !15488)
!15488 = distinct !DILocation(line: 1000, column: 3, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15490, file: !2414, line: 1000, column: 3)
!15490 = distinct !DILexicalBlock(scope: !15481, file: !2414, line: 1000, column: 3)
!15491 = !DILocation(line: 0, scope: !14725, inlinedAt: !15487)
!15492 = !DILocation(line: 48, column: 9, scope: !14729, inlinedAt: !15488)
!15493 = !DILocation(line: 1000, column: 3, scope: !15490)
!15494 = !DILocation(line: 1000, column: 3, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15489, file: !2414, line: 1000, column: 3)
!15496 = !DILocation(line: 1002, column: 5, scope: !15481)
!15497 = !DILocation(line: 1002, column: 20, scope: !15481)
!15498 = !DILocation(line: 1002, column: 3, scope: !15481)
!15499 = !DILocation(line: 1003, column: 3, scope: !15481)
!15500 = !DILocation(line: 0, scope: !14034, inlinedAt: !15501)
!15501 = distinct !DILocation(line: 998, column: 2, scope: !15482)
!15502 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15501)
!15503 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !15501)
!15504 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !15501)
!15505 = !DILocation(line: 0, scope: !14048, inlinedAt: !15506)
!15506 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !15501)
!15507 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !15506)
!15508 = !DILocation(line: 1011, column: 2, scope: !15463)
!15509 = !DILocation(line: 1012, column: 1, scope: !15463)
!15510 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2414, file: !2414, line: 1014, type: !14349, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2002)
!15511 = !DILocation(line: 1028, column: 25, scope: !15510)
!15512 = !DILocation(line: 1028, column: 2, scope: !15510)
!15513 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2414, file: !2414, line: 1155, type: !15514, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15516)
!15514 = !DISubroutineType(types: !15515)
!15515 = !{!347, !2335, !2335}
!15516 = !{!15517, !15518, !15519, !15520, !15521}
!15517 = !DILocalVariable(name: "a", arg: 1, scope: !15513, file: !2414, line: 1155, type: !2335)
!15518 = !DILocalVariable(name: "b", arg: 2, scope: !15513, file: !2414, line: 1155, type: !2335)
!15519 = !DILocalVariable(name: "thread_a", scope: !15513, file: !2414, line: 1157, type: !2306)
!15520 = !DILocalVariable(name: "thread_b", scope: !15513, file: !2414, line: 1157, type: !2306)
!15521 = !DILocalVariable(name: "cmp", scope: !15513, file: !2414, line: 1158, type: !745)
!15522 = !DILocation(line: 0, scope: !15513)
!15523 = !DILocation(line: 1160, column: 13, scope: !15513)
!15524 = !DILocation(line: 1161, column: 13, scope: !15513)
!15525 = !DILocation(line: 1163, column: 8, scope: !15513)
!15526 = !DILocation(line: 1165, column: 10, scope: !15527)
!15527 = distinct !DILexicalBlock(scope: !15513, file: !2414, line: 1165, column: 6)
!15528 = !DILocation(line: 1165, column: 6, scope: !15513)
!15529 = !DILocation(line: 1167, column: 17, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15527, file: !2414, line: 1167, column: 13)
!15531 = !DILocation(line: 1167, column: 13, scope: !15527)
!15532 = !DILocation(line: 1170, column: 25, scope: !15533)
!15533 = distinct !DILexicalBlock(scope: !15530, file: !2414, line: 1169, column: 9)
!15534 = !DILocation(line: 1170, column: 52, scope: !15533)
!15535 = !DILocation(line: 1170, column: 35, scope: !15533)
!15536 = !DILocation(line: 1170, column: 3, scope: !15533)
!15537 = !DILocation(line: 0, scope: !15527)
!15538 = !DILocation(line: 1173, column: 1, scope: !15513)
!15539 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2414, file: !2414, line: 1175, type: !15540, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15555)
!15540 = !DISubroutineType(types: !15541)
!15541 = !{null, !15542, !2306}
!15542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15543, size: 32)
!15543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15544, line: 37, size: 128, elements: !15545)
!15544 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15545 = !{!15546, !15554}
!15546 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15543, file: !15544, line: 38, baseType: !15547, size: 96)
!15547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !170, line: 83, size: 96, elements: !15548)
!15548 = !{!15549, !15550, !15553}
!15549 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15547, file: !170, line: 84, baseType: !2335, size: 32)
!15550 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15547, file: !170, line: 85, baseType: !15551, size: 32, offset: 32)
!15551 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !170, line: 81, baseType: !15552)
!15552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15514, size: 32)
!15553 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15547, file: !170, line: 86, baseType: !109, size: 32, offset: 64)
!15554 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15543, file: !15544, line: 39, baseType: !109, size: 32, offset: 96)
!15555 = !{!15556, !15557, !15558, !15559, !15568}
!15556 = !DILocalVariable(name: "pq", arg: 1, scope: !15539, file: !2414, line: 1175, type: !15542)
!15557 = !DILocalVariable(name: "thread", arg: 2, scope: !15539, file: !2414, line: 1175, type: !2306)
!15558 = !DILocalVariable(name: "t", scope: !15539, file: !2414, line: 1177, type: !2306)
!15559 = !DILocalVariable(name: "__f", scope: !15560, file: !2414, line: 1190, type: !15563)
!15560 = distinct !DILexicalBlock(scope: !15561, file: !2414, line: 1190, column: 3)
!15561 = distinct !DILexicalBlock(scope: !15562, file: !2414, line: 1189, column: 27)
!15562 = distinct !DILexicalBlock(scope: !15539, file: !2414, line: 1189, column: 6)
!15563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !170, line: 155, size: 96, elements: !15564)
!15564 = !{!15565, !15566, !15567}
!15565 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15563, file: !170, line: 156, baseType: !2409, size: 32)
!15566 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15563, file: !170, line: 157, baseType: !286, size: 32, offset: 32)
!15567 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15563, file: !170, line: 158, baseType: !745, size: 32, offset: 64)
!15568 = !DILocalVariable(name: "n", scope: !15569, file: !2414, line: 1190, type: !2335)
!15569 = distinct !DILexicalBlock(scope: !15570, file: !2414, line: 1190, column: 3)
!15570 = distinct !DILexicalBlock(scope: !15560, file: !2414, line: 1190, column: 3)
!15571 = !DILocation(line: 0, scope: !15539)
!15572 = !DILocation(line: 1179, column: 2, scope: !15573)
!15573 = distinct !DILexicalBlock(scope: !15574, file: !2414, line: 1179, column: 2)
!15574 = distinct !DILexicalBlock(scope: !15539, file: !2414, line: 1179, column: 2)
!15575 = !DILocation(line: 1179, column: 2, scope: !15574)
!15576 = !DILocation(line: 1179, column: 2, scope: !15577)
!15577 = distinct !DILexicalBlock(scope: !15573, file: !2414, line: 1179, column: 2)
!15578 = !DILocation(line: 1181, column: 31, scope: !15539)
!15579 = !DILocation(line: 1181, column: 45, scope: !15539)
!15580 = !DILocation(line: 1181, column: 15, scope: !15539)
!15581 = !DILocation(line: 1181, column: 25, scope: !15539)
!15582 = !DILocation(line: 1189, column: 11, scope: !15562)
!15583 = !DILocation(line: 1189, column: 7, scope: !15562)
!15584 = !DILocation(line: 1189, column: 6, scope: !15539)
!15585 = !DILocation(line: 1190, column: 3, scope: !15560)
!15586 = !DILocation(line: 1190, column: 3, scope: !15569)
!15587 = !DILocation(line: 0, scope: !15569)
!15588 = !DILocation(line: 1190, column: 3, scope: !15570)
!15589 = !DILocation(line: 1193, column: 2, scope: !15561)
!15590 = !DILocation(line: 1191, column: 42, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15570, file: !2414, line: 1190, column: 54)
!15592 = !DILocation(line: 1191, column: 12, scope: !15591)
!15593 = !DILocation(line: 1191, column: 22, scope: !15591)
!15594 = distinct !{!15594, !15585, !15595}
!15595 = !DILocation(line: 1192, column: 3, scope: !15560)
!15596 = !DILocation(line: 1195, column: 17, scope: !15539)
!15597 = !DILocation(line: 1195, column: 37, scope: !15539)
!15598 = !DILocation(line: 1195, column: 2, scope: !15539)
!15599 = !DILocation(line: 1196, column: 1, scope: !15539)
!15600 = !DISubprogram(name: "z_rb_foreach_next", scope: !170, file: !170, line: 176, type: !15601, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2002)
!15601 = !DISubroutineType(types: !15602)
!15602 = !{!2335, !15603, !15604}
!15603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15547, size: 32)
!15604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15563, size: 32)
!15605 = !DISubprogram(name: "rb_insert", scope: !170, file: !170, line: 105, type: !15606, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2002)
!15606 = !DISubroutineType(types: !15607)
!15607 = !{null, !15603, !2335}
!15608 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2414, file: !2414, line: 1198, type: !15540, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15609)
!15609 = !{!15610, !15611}
!15610 = !DILocalVariable(name: "pq", arg: 1, scope: !15608, file: !2414, line: 1198, type: !15542)
!15611 = !DILocalVariable(name: "thread", arg: 2, scope: !15608, file: !2414, line: 1198, type: !2306)
!15612 = !DILocation(line: 0, scope: !15608)
!15613 = !DILocation(line: 1200, column: 2, scope: !15614)
!15614 = distinct !DILexicalBlock(scope: !15615, file: !2414, line: 1200, column: 2)
!15615 = distinct !DILexicalBlock(scope: !15608, file: !2414, line: 1200, column: 2)
!15616 = !DILocation(line: 1200, column: 2, scope: !15615)
!15617 = !DILocation(line: 1200, column: 2, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15614, file: !2414, line: 1200, column: 2)
!15619 = !DILocation(line: 1202, column: 17, scope: !15608)
!15620 = !DILocation(line: 1202, column: 37, scope: !15608)
!15621 = !DILocation(line: 1202, column: 2, scope: !15608)
!15622 = !DILocation(line: 1204, column: 16, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15608, file: !2414, line: 1204, column: 6)
!15624 = !DILocation(line: 1204, column: 7, scope: !15623)
!15625 = !DILocation(line: 1204, column: 6, scope: !15608)
!15626 = !DILocation(line: 1205, column: 7, scope: !15627)
!15627 = distinct !DILexicalBlock(scope: !15623, file: !2414, line: 1204, column: 22)
!15628 = !DILocation(line: 1205, column: 22, scope: !15627)
!15629 = !DILocation(line: 1206, column: 2, scope: !15627)
!15630 = !DILocation(line: 1207, column: 1, scope: !15608)
!15631 = !DISubprogram(name: "rb_remove", scope: !170, file: !170, line: 110, type: !15606, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2002)
!15632 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2414, file: !2414, line: 1209, type: !15633, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15635)
!15633 = !DISubroutineType(types: !15634)
!15634 = !{!2306, !15542}
!15635 = !{!15636, !15637, !15638}
!15636 = !DILocalVariable(name: "pq", arg: 1, scope: !15632, file: !2414, line: 1209, type: !15542)
!15637 = !DILocalVariable(name: "thread", scope: !15632, file: !2414, line: 1211, type: !2306)
!15638 = !DILocalVariable(name: "n", scope: !15632, file: !2414, line: 1212, type: !2335)
!15639 = !DILocation(line: 0, scope: !15632)
!15640 = !DILocation(line: 1212, column: 37, scope: !15632)
!15641 = !DILocation(line: 1212, column: 21, scope: !15632)
!15642 = !DILocation(line: 1217, column: 2, scope: !15632)
!15643 = distinct !DISubprogram(name: "rb_get_min", scope: !170, file: !170, line: 115, type: !15644, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15646)
!15644 = !DISubroutineType(types: !15645)
!15645 = !{!2335, !15603}
!15646 = !{!15647}
!15647 = !DILocalVariable(name: "tree", arg: 1, scope: !15643, file: !170, line: 115, type: !15603)
!15648 = !DILocation(line: 0, scope: !15643)
!15649 = !DILocation(line: 117, column: 9, scope: !15643)
!15650 = !DILocation(line: 117, column: 2, scope: !15643)
!15651 = !DISubprogram(name: "z_rb_get_minmax", scope: !170, file: !170, line: 100, type: !15652, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2002)
!15652 = !DISubroutineType(types: !15653)
!15653 = !{!2335, !15603, !180}
!15654 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2414, file: !2414, line: 1246, type: !15655, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15663)
!15655 = !DISubroutineType(types: !15656)
!15656 = !{!2306, !15657}
!15657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15658, size: 32)
!15658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15544, line: 53, size: 2080, elements: !15659)
!15659 = !{!15660, !15662}
!15660 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15658, file: !15544, line: 54, baseType: !15661, size: 2048)
!15661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2342, size: 2048, elements: !226)
!15662 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15658, file: !15544, line: 55, baseType: !32, size: 32, offset: 2048)
!15663 = !{!15664, !15665, !15666, !15667}
!15664 = !DILocalVariable(name: "pq", arg: 1, scope: !15654, file: !2414, line: 1246, type: !15657)
!15665 = !DILocalVariable(name: "thread", scope: !15654, file: !2414, line: 1252, type: !2306)
!15666 = !DILocalVariable(name: "l", scope: !15654, file: !2414, line: 1253, type: !14226)
!15667 = !DILocalVariable(name: "n", scope: !15654, file: !2414, line: 1254, type: !2410)
!15668 = !DILocation(line: 0, scope: !15654)
!15669 = !DILocation(line: 1248, column: 11, scope: !15670)
!15670 = distinct !DILexicalBlock(scope: !15654, file: !2414, line: 1248, column: 6)
!15671 = !DILocation(line: 1248, column: 7, scope: !15670)
!15672 = !DILocation(line: 1248, column: 6, scope: !15654)
!15673 = !DILocation(line: 1253, column: 31, scope: !15654)
!15674 = !DILocation(line: 1253, column: 20, scope: !15654)
!15675 = !DILocation(line: 1254, column: 19, scope: !15654)
!15676 = !DILocation(line: 1260, column: 1, scope: !15654)
!15677 = distinct !DISubprogram(name: "z_unpend_all", scope: !2414, file: !2414, line: 1262, type: !15678, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15680)
!15678 = !DISubroutineType(types: !15679)
!15679 = !{!109, !2337}
!15680 = !{!15681, !15682, !15683}
!15681 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15677, file: !2414, line: 1262, type: !2337)
!15682 = !DILocalVariable(name: "need_sched", scope: !15677, file: !2414, line: 1264, type: !109)
!15683 = !DILocalVariable(name: "thread", scope: !15677, file: !2414, line: 1265, type: !2306)
!15684 = !DILocation(line: 0, scope: !15677)
!15685 = !DILocation(line: 1267, column: 19, scope: !15677)
!15686 = !DILocation(line: 1267, column: 41, scope: !15677)
!15687 = !DILocation(line: 1267, column: 2, scope: !15677)
!15688 = !DILocation(line: 1268, column: 3, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !15677, file: !2414, line: 1267, column: 50)
!15690 = !DILocation(line: 1269, column: 3, scope: !15689)
!15691 = distinct !{!15691, !15687, !15692}
!15692 = !DILocation(line: 1271, column: 2, scope: !15677)
!15693 = !DILocation(line: 1273, column: 2, scope: !15677)
!15694 = distinct !DISubprogram(name: "z_waitq_head", scope: !13148, file: !13148, line: 52, type: !15225, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15695)
!15695 = !{!15696}
!15696 = !DILocalVariable(name: "w", arg: 1, scope: !15694, file: !13148, line: 52, type: !2337)
!15697 = !DILocation(line: 0, scope: !15694)
!15698 = !DILocation(line: 54, column: 52, scope: !15694)
!15699 = !DILocation(line: 54, column: 28, scope: !15694)
!15700 = !DILocation(line: 54, column: 9, scope: !15694)
!15701 = !DILocation(line: 54, column: 2, scope: !15694)
!15702 = distinct !DISubprogram(name: "init_ready_q", scope: !2414, file: !2414, line: 1276, type: !15703, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15710)
!15703 = !DISubroutineType(types: !15704)
!15704 = !{null, !15705}
!15705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15706, size: 32)
!15706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !15707)
!15707 = !{!15708, !15709}
!15708 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15706, file: !122, line: 86, baseType: !2306, size: 32)
!15709 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15706, file: !122, line: 90, baseType: !2342, size: 64, offset: 32)
!15710 = !{!15711}
!15711 = !DILocalVariable(name: "rq", arg: 1, scope: !15702, file: !2414, line: 1276, type: !15705)
!15712 = !DILocation(line: 0, scope: !15702)
!15713 = !DILocation(line: 1289, column: 22, scope: !15702)
!15714 = !DILocation(line: 1289, column: 2, scope: !15702)
!15715 = !DILocation(line: 1291, column: 1, scope: !15702)
!15716 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !15717, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15719)
!15717 = !DISubroutineType(types: !15718)
!15718 = !{null, !14226}
!15719 = !{!15720}
!15720 = !DILocalVariable(name: "list", arg: 1, scope: !15716, file: !127, line: 197, type: !14226)
!15721 = !DILocation(line: 0, scope: !15716)
!15722 = !DILocation(line: 199, column: 8, scope: !15716)
!15723 = !DILocation(line: 199, column: 13, scope: !15716)
!15724 = !DILocation(line: 200, column: 8, scope: !15716)
!15725 = !DILocation(line: 200, column: 13, scope: !15716)
!15726 = !DILocation(line: 201, column: 1, scope: !15716)
!15727 = distinct !DISubprogram(name: "z_sched_init", scope: !2414, file: !2414, line: 1293, type: !3070, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2002)
!15728 = !DILocation(line: 1302, column: 2, scope: !15727)
!15729 = !DILocation(line: 1306, column: 2, scope: !15727)
!15730 = !DILocation(line: 1309, column: 1, scope: !15727)
!15731 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2414, file: !2414, line: 1311, type: !15732, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15735)
!15732 = !DISubroutineType(types: !15733)
!15733 = !{!109, !15734}
!15734 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2306)
!15735 = !{!15736}
!15736 = !DILocalVariable(name: "thread", arg: 1, scope: !15731, file: !2414, line: 1311, type: !15734)
!15737 = !DILocation(line: 0, scope: !15731)
!15738 = !DILocation(line: 1313, column: 22, scope: !15731)
!15739 = !DILocation(line: 1313, column: 9, scope: !15731)
!15740 = !DILocation(line: 1313, column: 2, scope: !15731)
!15741 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2414, file: !2414, line: 1325, type: !15742, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15744)
!15742 = !DISubroutineType(types: !15743)
!15743 = !{null, !15734, !109}
!15744 = !{!15745, !15746, !15747}
!15745 = !DILocalVariable(name: "thread", arg: 1, scope: !15741, file: !2414, line: 1325, type: !15734)
!15746 = !DILocalVariable(name: "prio", arg: 2, scope: !15741, file: !2414, line: 1325, type: !109)
!15747 = !DILocalVariable(name: "th", scope: !15741, file: !2414, line: 1334, type: !2306)
!15748 = !DILocation(line: 0, scope: !15741)
!15749 = !DILocation(line: 1331, column: 2, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15751, file: !2414, line: 1331, column: 2)
!15751 = distinct !DILexicalBlock(scope: !15752, file: !2414, line: 1331, column: 2)
!15752 = distinct !DILexicalBlock(scope: !15741, file: !2414, line: 1331, column: 2)
!15753 = !DILocation(line: 1331, column: 2, scope: !15754)
!15754 = distinct !DILexicalBlock(scope: !15750, file: !2414, line: 1331, column: 2)
!15755 = !DILocation(line: 1031, column: 3, scope: !14725, inlinedAt: !15756)
!15756 = distinct !DILocation(line: 48, column: 10, scope: !14729, inlinedAt: !15757)
!15757 = distinct !DILocation(line: 1332, column: 2, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15759, file: !2414, line: 1332, column: 2)
!15759 = distinct !DILexicalBlock(scope: !15741, file: !2414, line: 1332, column: 2)
!15760 = !DILocation(line: 0, scope: !14725, inlinedAt: !15756)
!15761 = !DILocation(line: 48, column: 9, scope: !14729, inlinedAt: !15757)
!15762 = !DILocation(line: 1332, column: 2, scope: !15759)
!15763 = !DILocation(line: 1332, column: 2, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15758, file: !2414, line: 1332, column: 2)
!15765 = !DILocation(line: 1336, column: 2, scope: !15741)
!15766 = !DILocation(line: 1337, column: 1, scope: !15741)
!15767 = distinct !DISubprogram(name: "k_can_yield", scope: !2414, file: !2414, line: 1384, type: !7436, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2002)
!15768 = !DILocation(line: 1386, column: 11, scope: !15767)
!15769 = !DILocation(line: 1386, column: 29, scope: !15767)
!15770 = !DILocation(line: 1386, column: 32, scope: !15767)
!15771 = !DILocation(line: 1386, column: 46, scope: !15767)
!15772 = !DILocation(line: 1387, column: 28, scope: !15767)
!15773 = !DILocation(line: 1387, column: 4, scope: !15767)
!15774 = !DILocation(line: 1386, column: 2, scope: !15767)
!15775 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !7436, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2002)
!15776 = !DILocation(line: 993, column: 10, scope: !15775)
!15777 = !DILocation(line: 993, column: 2, scope: !15775)
!15778 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2414, file: !2414, line: 1390, type: !3070, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15779)
!15779 = !{!15780}
!15780 = !DILocalVariable(name: "key", scope: !15778, file: !2414, line: 1396, type: !13992)
!15781 = !DILocation(line: 1031, column: 3, scope: !14725, inlinedAt: !15782)
!15782 = distinct !DILocation(line: 48, column: 10, scope: !14729, inlinedAt: !15783)
!15783 = distinct !DILocation(line: 1392, column: 2, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15785, file: !2414, line: 1392, column: 2)
!15785 = distinct !DILexicalBlock(scope: !15778, file: !2414, line: 1392, column: 2)
!15786 = !DILocation(line: 0, scope: !14725, inlinedAt: !15782)
!15787 = !DILocation(line: 48, column: 9, scope: !14729, inlinedAt: !15783)
!15788 = !DILocation(line: 1392, column: 2, scope: !15785)
!15789 = !DILocation(line: 1392, column: 2, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15784, file: !2414, line: 1392, column: 2)
!15791 = !DILocation(line: 0, scope: !14000, inlinedAt: !15792)
!15792 = distinct !DILocation(line: 1396, column: 25, scope: !15778)
!15793 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15794)
!15794 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15792)
!15795 = !DILocation(line: 0, scope: !14009, inlinedAt: !15794)
!15796 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15792)
!15797 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15792)
!15798 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15792)
!15799 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15792)
!15800 = !DILocation(line: 0, scope: !15778)
!15801 = !DILocation(line: 1400, column: 18, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15803, file: !2414, line: 1399, column: 36)
!15803 = distinct !DILexicalBlock(scope: !15778, file: !2414, line: 1398, column: 6)
!15804 = !DILocation(line: 0, scope: !14192, inlinedAt: !15805)
!15805 = distinct !DILocation(line: 1400, column: 3, scope: !15802)
!15806 = !DILocation(line: 266, column: 15, scope: !14192, inlinedAt: !15805)
!15807 = !DILocation(line: 266, column: 28, scope: !14192, inlinedAt: !15805)
!15808 = !DILocation(line: 0, scope: !14200, inlinedAt: !15809)
!15809 = distinct !DILocation(line: 268, column: 3, scope: !14204, inlinedAt: !15805)
!15810 = !DILocation(line: 234, column: 2, scope: !14200, inlinedAt: !15809)
!15811 = !DILocation(line: 1402, column: 15, scope: !15778)
!15812 = !DILocation(line: 0, scope: !14209, inlinedAt: !15813)
!15813 = distinct !DILocation(line: 1402, column: 2, scope: !15778)
!15814 = !DILocation(line: 252, column: 15, scope: !14209, inlinedAt: !15813)
!15815 = !DILocation(line: 252, column: 28, scope: !14209, inlinedAt: !15813)
!15816 = !DILocation(line: 0, scope: !14216, inlinedAt: !15817)
!15817 = distinct !DILocation(line: 254, column: 3, scope: !14220, inlinedAt: !15813)
!15818 = !DILocation(line: 0, scope: !14223, inlinedAt: !15819)
!15819 = distinct !DILocation(line: 229, column: 2, scope: !14216, inlinedAt: !15817)
!15820 = !DILocation(line: 186, column: 2, scope: !14233, inlinedAt: !15819)
!15821 = !DILocation(line: 186, column: 2, scope: !14234, inlinedAt: !15819)
!15822 = !DILocation(line: 186, column: 2, scope: !14237, inlinedAt: !15819)
!15823 = !DILocation(line: 188, column: 2, scope: !14239, inlinedAt: !15819)
!15824 = !DILocation(line: 188, column: 2, scope: !14241, inlinedAt: !15819)
!15825 = !DILocation(line: 0, scope: !14239, inlinedAt: !15819)
!15826 = !DILocation(line: 189, column: 7, scope: !14244, inlinedAt: !15819)
!15827 = !DILocation(line: 189, column: 35, scope: !14244, inlinedAt: !15819)
!15828 = !DILocation(line: 189, column: 7, scope: !14245, inlinedAt: !15819)
!15829 = !DILocation(line: 191, column: 21, scope: !14249, inlinedAt: !15819)
!15830 = !DILocation(line: 190, column: 4, scope: !14249, inlinedAt: !15819)
!15831 = !DILocation(line: 192, column: 4, scope: !14249, inlinedAt: !15819)
!15832 = distinct !{!15832, !15823, !15833}
!15833 = !DILocation(line: 194, column: 2, scope: !14239, inlinedAt: !15819)
!15834 = !DILocation(line: 196, column: 37, scope: !14223, inlinedAt: !15819)
!15835 = !DILocation(line: 196, column: 2, scope: !14223, inlinedAt: !15819)
!15836 = !DILocation(line: 197, column: 1, scope: !14223, inlinedAt: !15819)
!15837 = !DILocation(line: 1403, column: 2, scope: !15778)
!15838 = !DILocation(line: 0, scope: !14676, inlinedAt: !15839)
!15839 = distinct !DILocation(line: 1404, column: 2, scope: !15778)
!15840 = !DILocation(line: 0, scope: !14685, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 195, column: 2, scope: !14676, inlinedAt: !15839)
!15842 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !15841)
!15843 = !DILocation(line: 225, column: 2, scope: !14693, inlinedAt: !15841)
!15844 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !15841)
!15845 = !DILocation(line: 196, column: 9, scope: !14676, inlinedAt: !15839)
!15846 = !DILocation(line: 1405, column: 1, scope: !15778)
!15847 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2414, file: !2414, line: 1459, type: !15848, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15850)
!15848 = !DISubroutineType(types: !15849)
!15849 = !{!745, !14886}
!15850 = !{!15851, !15852, !15853}
!15851 = !DILocalVariable(name: "timeout", arg: 1, scope: !15847, file: !2414, line: 1459, type: !14886)
!15852 = !DILocalVariable(name: "ticks", scope: !15847, file: !2414, line: 1461, type: !103)
!15853 = !DILocalVariable(name: "ret", scope: !15847, file: !2414, line: 1480, type: !745)
!15854 = !DILocation(line: 0, scope: !15847)
!15855 = !DILocation(line: 1031, column: 3, scope: !14725, inlinedAt: !15856)
!15856 = distinct !DILocation(line: 48, column: 10, scope: !14729, inlinedAt: !15857)
!15857 = distinct !DILocation(line: 1463, column: 2, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15859, file: !2414, line: 1463, column: 2)
!15859 = distinct !DILexicalBlock(scope: !15847, file: !2414, line: 1463, column: 2)
!15860 = !DILocation(line: 0, scope: !14725, inlinedAt: !15856)
!15861 = !DILocation(line: 48, column: 9, scope: !14729, inlinedAt: !15857)
!15862 = !DILocation(line: 1463, column: 2, scope: !15859)
!15863 = !DILocation(line: 1463, column: 2, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15858, file: !2414, line: 1463, column: 2)
!15865 = !DILocation(line: 1468, column: 6, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15847, file: !2414, line: 1468, column: 6)
!15867 = !DILocation(line: 1468, column: 6, scope: !15847)
!15868 = !DILocation(line: 1469, column: 20, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15866, file: !2414, line: 1468, column: 40)
!15870 = !DILocation(line: 1469, column: 3, scope: !15869)
!15871 = !DILocation(line: 1473, column: 3, scope: !15869)
!15872 = !DILocation(line: 1478, column: 10, scope: !15847)
!15873 = !DILocation(line: 1480, column: 16, scope: !15847)
!15874 = !DILocation(line: 1485, column: 1, scope: !15847)
!15875 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3216, file: !3216, line: 310, type: !15876, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15878)
!15876 = !DISubroutineType(types: !15877)
!15877 = !{null, !15734}
!15878 = !{!15879}
!15879 = !DILocalVariable(name: "thread", arg: 1, scope: !15875, file: !3216, line: 310, type: !15734)
!15880 = !DILocation(line: 0, scope: !15875)
!15881 = !DILocation(line: 319, column: 2, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15875, file: !3216, line: 319, column: 2)
!15883 = !{i64 2154116034}
!15884 = !DILocation(line: 320, column: 2, scope: !15875)
!15885 = !DILocation(line: 321, column: 1, scope: !15875)
!15886 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2414, file: !2414, line: 1415, type: !15887, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15889)
!15887 = !DISubroutineType(types: !15888)
!15888 = !{!745, !103}
!15889 = !{!15890, !15891, !15892, !15893}
!15890 = !DILocalVariable(name: "ticks", arg: 1, scope: !15886, file: !2414, line: 1415, type: !103)
!15891 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15886, file: !2414, line: 1418, type: !110)
!15892 = !DILocalVariable(name: "timeout", scope: !15886, file: !2414, line: 1430, type: !14886)
!15893 = !DILocalVariable(name: "key", scope: !15886, file: !2414, line: 1437, type: !13992)
!15894 = !DILocation(line: 0, scope: !15886)
!15895 = !DILocation(line: 1031, column: 3, scope: !14725, inlinedAt: !15896)
!15896 = distinct !DILocation(line: 48, column: 10, scope: !14729, inlinedAt: !15897)
!15897 = distinct !DILocation(line: 1420, column: 2, scope: !15898)
!15898 = distinct !DILexicalBlock(scope: !15899, file: !2414, line: 1420, column: 2)
!15899 = distinct !DILexicalBlock(scope: !15886, file: !2414, line: 1420, column: 2)
!15900 = !DILocation(line: 0, scope: !14725, inlinedAt: !15896)
!15901 = !DILocation(line: 48, column: 9, scope: !14729, inlinedAt: !15897)
!15902 = !DILocation(line: 1420, column: 2, scope: !15899)
!15903 = !DILocation(line: 1420, column: 2, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15898, file: !2414, line: 1420, column: 2)
!15905 = !DILocation(line: 1425, column: 12, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15886, file: !2414, line: 1425, column: 6)
!15907 = !DILocation(line: 1425, column: 6, scope: !15886)
!15908 = !DILocation(line: 1426, column: 3, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15906, file: !2414, line: 1425, column: 18)
!15910 = !DILocation(line: 1427, column: 3, scope: !15909)
!15911 = !DILocation(line: 1431, column: 24, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !15886, file: !2414, line: 1431, column: 6)
!15913 = !DILocation(line: 1431, column: 6, scope: !15886)
!15914 = !DILocation(line: 1432, column: 35, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15912, file: !2414, line: 1431, column: 30)
!15916 = !DILocation(line: 1432, column: 27, scope: !15915)
!15917 = !DILocation(line: 1433, column: 2, scope: !15915)
!15918 = !DILocation(line: 1434, column: 27, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15912, file: !2414, line: 1433, column: 9)
!15920 = !DILocation(line: 0, scope: !15912)
!15921 = !DILocation(line: 0, scope: !14000, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 1437, column: 25, scope: !15886)
!15923 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !15922)
!15925 = !DILocation(line: 0, scope: !14009, inlinedAt: !15924)
!15926 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15922)
!15927 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !15922)
!15928 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !15922)
!15929 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !15922)
!15930 = !DILocation(line: 1440, column: 20, scope: !15886)
!15931 = !DILocation(line: 1440, column: 18, scope: !15886)
!15932 = !DILocation(line: 1442, column: 2, scope: !15886)
!15933 = !DILocation(line: 1443, column: 23, scope: !15886)
!15934 = !DILocation(line: 1443, column: 2, scope: !15886)
!15935 = !DILocation(line: 1444, column: 29, scope: !15886)
!15936 = !DILocation(line: 1444, column: 2, scope: !15886)
!15937 = !DILocation(line: 0, scope: !14676, inlinedAt: !15938)
!15938 = distinct !DILocation(line: 1446, column: 8, scope: !15886)
!15939 = !DILocation(line: 0, scope: !14685, inlinedAt: !15940)
!15940 = distinct !DILocation(line: 195, column: 2, scope: !14676, inlinedAt: !15938)
!15941 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !15940)
!15942 = !DILocation(line: 225, column: 2, scope: !14693, inlinedAt: !15940)
!15943 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !15940)
!15944 = !DILocation(line: 196, column: 9, scope: !14676, inlinedAt: !15938)
!15945 = !DILocation(line: 1448, column: 2, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15947, file: !2414, line: 1448, column: 2)
!15947 = distinct !DILexicalBlock(scope: !15886, file: !2414, line: 1448, column: 2)
!15948 = !DILocation(line: 1448, column: 2, scope: !15947)
!15949 = !DILocation(line: 1448, column: 2, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15946, file: !2414, line: 1448, column: 2)
!15951 = !DILocation(line: 1450, column: 10, scope: !15886)
!15952 = !DILocation(line: 1450, column: 45, scope: !15886)
!15953 = !DILocation(line: 1450, column: 43, scope: !15886)
!15954 = !DILocation(line: 1451, column: 6, scope: !15886)
!15955 = !DILocation(line: 1457, column: 1, scope: !15886)
!15956 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13406, file: !13406, line: 1103, type: !13407, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15957)
!15957 = !{!15958}
!15958 = !DILocalVariable(name: "t", arg: 1, scope: !15956, file: !13406, line: 1103, type: !111)
!15959 = !DILocation(line: 0, scope: !15956)
!15960 = !DILocation(line: 0, scope: !14060, inlinedAt: !15961)
!15961 = distinct !DILocation(line: 1106, column: 9, scope: !15956)
!15962 = !DILocation(line: 139, column: 13, scope: !15963, inlinedAt: !15961)
!15963 = distinct !DILexicalBlock(scope: !15964, file: !13406, line: 138, column: 10)
!15964 = distinct !DILexicalBlock(scope: !15965, file: !13406, line: 136, column: 7)
!15965 = distinct !DILexicalBlock(scope: !14081, file: !13406, line: 134, column: 17)
!15966 = !DILocation(line: 1106, column: 2, scope: !15956)
!15967 = distinct !DISubprogram(name: "k_yield", scope: !3216, file: !3216, line: 140, type: !3070, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2002)
!15968 = !DILocation(line: 148, column: 2, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15967, file: !3216, line: 148, column: 2)
!15970 = !{i64 2154115354}
!15971 = !DILocation(line: 149, column: 2, scope: !15967)
!15972 = !DILocation(line: 150, column: 1, scope: !15967)
!15973 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2414, file: !2414, line: 1495, type: !15974, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15976)
!15974 = !DISubroutineType(types: !15975)
!15975 = !{!745, !109}
!15976 = !{!15977, !15978}
!15977 = !DILocalVariable(name: "us", arg: 1, scope: !15973, file: !2414, line: 1495, type: !109)
!15978 = !DILocalVariable(name: "ticks", scope: !15973, file: !2414, line: 1497, type: !745)
!15979 = !DILocation(line: 0, scope: !15973)
!15980 = !DILocation(line: 1501, column: 31, scope: !15973)
!15981 = !DILocation(line: 1501, column: 10, scope: !15973)
!15982 = !DILocation(line: 1502, column: 23, scope: !15973)
!15983 = !DILocation(line: 1502, column: 10, scope: !15973)
!15984 = !DILocation(line: 1506, column: 31, scope: !15973)
!15985 = !DILocation(line: 1506, column: 9, scope: !15973)
!15986 = !DILocation(line: 1506, column: 2, scope: !15973)
!15987 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13406, file: !13406, line: 571, type: !13407, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15988)
!15988 = !{!15989}
!15989 = !DILocalVariable(name: "t", arg: 1, scope: !15987, file: !13406, line: 571, type: !111)
!15990 = !DILocation(line: 0, scope: !15987)
!15991 = !DILocation(line: 0, scope: !14060, inlinedAt: !15992)
!15992 = distinct !DILocation(line: 574, column: 9, scope: !15987)
!15993 = !DILocation(line: 135, column: 5, scope: !15965, inlinedAt: !15992)
!15994 = !DILocation(line: 139, column: 13, scope: !15963, inlinedAt: !15992)
!15995 = !DILocation(line: 574, column: 2, scope: !15987)
!15996 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13406, file: !13406, line: 1187, type: !13407, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !15997)
!15997 = !{!15998}
!15998 = !DILocalVariable(name: "t", arg: 1, scope: !15996, file: !13406, line: 1187, type: !111)
!15999 = !DILocation(line: 0, scope: !15996)
!16000 = !DILocation(line: 0, scope: !14060, inlinedAt: !16001)
!16001 = distinct !DILocation(line: 1190, column: 9, scope: !15996)
!16002 = !DILocation(line: 145, column: 13, scope: !16003, inlinedAt: !16001)
!16003 = distinct !DILexicalBlock(scope: !14078, file: !13406, line: 144, column: 10)
!16004 = !DILocation(line: 1190, column: 2, scope: !15996)
!16005 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2414, file: !2414, line: 1517, type: !15876, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !16006)
!16006 = !{!16007}
!16007 = !DILocalVariable(name: "thread", arg: 1, scope: !16005, file: !2414, line: 1517, type: !15734)
!16008 = !DILocation(line: 0, scope: !16005)
!16009 = !DILocation(line: 1521, column: 6, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16005, file: !2414, line: 1521, column: 6)
!16011 = !DILocation(line: 1521, column: 6, scope: !16005)
!16012 = !DILocation(line: 1525, column: 6, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !16005, file: !2414, line: 1525, column: 6)
!16014 = !DILocation(line: 1525, column: 37, scope: !16013)
!16015 = !DILocation(line: 1525, column: 6, scope: !16005)
!16016 = !DILocation(line: 1527, column: 20, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16018, file: !2414, line: 1527, column: 7)
!16018 = distinct !DILexicalBlock(scope: !16013, file: !2414, line: 1525, column: 42)
!16019 = !DILocation(line: 1527, column: 33, scope: !16017)
!16020 = !DILocation(line: 1527, column: 7, scope: !16018)
!16021 = !DILocation(line: 1532, column: 2, scope: !16005)
!16022 = !DILocation(line: 1533, column: 2, scope: !16005)
!16023 = !DILocation(line: 1031, column: 3, scope: !14725, inlinedAt: !16024)
!16024 = distinct !DILocation(line: 48, column: 10, scope: !14729, inlinedAt: !16025)
!16025 = distinct !DILocation(line: 1537, column: 7, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !16005, file: !2414, line: 1537, column: 6)
!16027 = !DILocation(line: 0, scope: !14725, inlinedAt: !16024)
!16028 = !DILocation(line: 48, column: 9, scope: !14729, inlinedAt: !16025)
!16029 = !DILocation(line: 1537, column: 6, scope: !16005)
!16030 = !DILocation(line: 1538, column: 3, scope: !16031)
!16031 = distinct !DILexicalBlock(scope: !16026, file: !2414, line: 1537, column: 25)
!16032 = !DILocation(line: 1539, column: 2, scope: !16031)
!16033 = !DILocation(line: 1540, column: 1, scope: !16005)
!16034 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12787, file: !12787, line: 101, type: !14141, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !16035)
!16035 = !{!16036}
!16036 = !DILocalVariable(name: "thread", arg: 1, scope: !16034, file: !12787, line: 101, type: !2306)
!16037 = !DILocation(line: 0, scope: !16034)
!16038 = !DILocation(line: 103, column: 23, scope: !16034)
!16039 = !DILocation(line: 103, column: 36, scope: !16034)
!16040 = !DILocation(line: 103, column: 55, scope: !16034)
!16041 = !DILocation(line: 103, column: 2, scope: !16034)
!16042 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2414, file: !2414, line: 1567, type: !16043, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !16045)
!16043 = !DISubroutineType(types: !16044)
!16044 = !{!15734}
!16045 = !{!16046}
!16046 = !DILocalVariable(name: "ret", scope: !16042, file: !2414, line: 1577, type: !15734)
!16047 = !DILocation(line: 1577, column: 30, scope: !16042)
!16048 = !DILocation(line: 0, scope: !16042)
!16049 = !DILocation(line: 1582, column: 2, scope: !16042)
!16050 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2414, file: !2414, line: 1593, type: !7739, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2002)
!16051 = !DILocation(line: 1031, column: 3, scope: !14725, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 48, column: 10, scope: !14729, inlinedAt: !16053)
!16053 = distinct !DILocation(line: 1595, column: 10, scope: !16050)
!16054 = !DILocation(line: 0, scope: !14725, inlinedAt: !16052)
!16055 = !DILocation(line: 48, column: 9, scope: !14729, inlinedAt: !16053)
!16056 = !DILocation(line: 1595, column: 27, scope: !16050)
!16057 = !DILocation(line: 1595, column: 41, scope: !16050)
!16058 = !DILocation(line: 1595, column: 30, scope: !16050)
!16059 = !DILocation(line: 1595, column: 2, scope: !16050)
!16060 = distinct !DISubprogram(name: "z_thread_abort", scope: !2414, file: !2414, line: 1725, type: !13958, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !16061)
!16061 = !{!16062, !16063}
!16062 = !DILocalVariable(name: "thread", arg: 1, scope: !16060, file: !2414, line: 1725, type: !2306)
!16063 = !DILocalVariable(name: "key", scope: !16060, file: !2414, line: 1727, type: !13992)
!16064 = !DILocation(line: 0, scope: !16060)
!16065 = !DILocation(line: 0, scope: !14000, inlinedAt: !16066)
!16066 = distinct !DILocation(line: 1727, column: 25, scope: !16060)
!16067 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !16068)
!16068 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !16066)
!16069 = !DILocation(line: 0, scope: !14009, inlinedAt: !16068)
!16070 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !16066)
!16071 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !16066)
!16072 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !16066)
!16073 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !16066)
!16074 = !DILocation(line: 1729, column: 20, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16060, file: !2414, line: 1729, column: 6)
!16076 = !DILocation(line: 1729, column: 33, scope: !16075)
!16077 = !DILocation(line: 1729, column: 48, scope: !16075)
!16078 = !DILocation(line: 1729, column: 6, scope: !16060)
!16079 = !DILocation(line: 0, scope: !14034, inlinedAt: !16080)
!16080 = distinct !DILocation(line: 1730, column: 3, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16075, file: !2414, line: 1729, column: 54)
!16082 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !16080)
!16083 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !16080)
!16084 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !16080)
!16085 = !DILocation(line: 0, scope: !14048, inlinedAt: !16086)
!16086 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !16080)
!16087 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !16086)
!16088 = !DILocation(line: 1731, column: 3, scope: !16089)
!16089 = distinct !DILexicalBlock(scope: !16090, file: !2414, line: 1731, column: 3)
!16090 = distinct !DILexicalBlock(scope: !16091, file: !2414, line: 1731, column: 3)
!16091 = distinct !DILexicalBlock(scope: !16081, file: !2414, line: 1731, column: 3)
!16092 = !DILocation(line: 1736, column: 20, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16060, file: !2414, line: 1736, column: 6)
!16094 = !DILocation(line: 1736, column: 33, scope: !16093)
!16095 = !DILocation(line: 1736, column: 49, scope: !16093)
!16096 = !DILocation(line: 1736, column: 6, scope: !16060)
!16097 = !DILocation(line: 0, scope: !14034, inlinedAt: !16098)
!16098 = distinct !DILocation(line: 1737, column: 3, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16093, file: !2414, line: 1736, column: 56)
!16100 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !16098)
!16101 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !16098)
!16102 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !16098)
!16103 = !DILocation(line: 0, scope: !14048, inlinedAt: !16104)
!16104 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !16098)
!16105 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !16104)
!16106 = !DILocation(line: 1738, column: 3, scope: !16099)
!16107 = !DILocation(line: 1775, column: 2, scope: !16060)
!16108 = !DILocation(line: 1776, column: 16, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !16060, file: !2414, line: 1776, column: 6)
!16110 = !DILocation(line: 1776, column: 13, scope: !16109)
!16111 = !DILocation(line: 1776, column: 25, scope: !16109)
!16112 = !DILocation(line: 1031, column: 3, scope: !14725, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 48, column: 10, scope: !14729, inlinedAt: !16114)
!16114 = distinct !DILocation(line: 1776, column: 29, scope: !16109)
!16115 = !DILocation(line: 0, scope: !14725, inlinedAt: !16113)
!16116 = !DILocation(line: 48, column: 9, scope: !14729, inlinedAt: !16114)
!16117 = !DILocation(line: 1776, column: 6, scope: !16060)
!16118 = !DILocation(line: 0, scope: !14676, inlinedAt: !16119)
!16119 = distinct !DILocation(line: 1777, column: 3, scope: !16120)
!16120 = distinct !DILexicalBlock(scope: !16109, file: !2414, line: 1776, column: 47)
!16121 = !DILocation(line: 0, scope: !14685, inlinedAt: !16122)
!16122 = distinct !DILocation(line: 195, column: 2, scope: !14676, inlinedAt: !16119)
!16123 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !16122)
!16124 = !DILocation(line: 225, column: 2, scope: !14693, inlinedAt: !16122)
!16125 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !16122)
!16126 = !DILocation(line: 196, column: 9, scope: !14676, inlinedAt: !16119)
!16127 = !DILocation(line: 1778, column: 3, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16129, file: !2414, line: 1778, column: 3)
!16129 = distinct !DILexicalBlock(scope: !16130, file: !2414, line: 1778, column: 3)
!16130 = distinct !DILexicalBlock(scope: !16120, file: !2414, line: 1778, column: 3)
!16131 = !DILocation(line: 0, scope: !14034, inlinedAt: !16132)
!16132 = distinct !DILocation(line: 1780, column: 2, scope: !16060)
!16133 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !16132)
!16134 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !16132)
!16135 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !16132)
!16136 = !DILocation(line: 0, scope: !14048, inlinedAt: !16137)
!16137 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !16132)
!16138 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !16137)
!16139 = !DILocation(line: 1781, column: 1, scope: !16060)
!16140 = distinct !DISubprogram(name: "end_thread", scope: !2414, file: !2414, line: 1690, type: !13958, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !16141)
!16141 = !{!16142}
!16142 = !DILocalVariable(name: "thread", arg: 1, scope: !16140, file: !2414, line: 1690, type: !2306)
!16143 = !DILocation(line: 0, scope: !16140)
!16144 = !DILocation(line: 1695, column: 20, scope: !16145)
!16145 = distinct !DILexicalBlock(scope: !16140, file: !2414, line: 1695, column: 6)
!16146 = !DILocation(line: 1695, column: 33, scope: !16145)
!16147 = !DILocation(line: 1695, column: 49, scope: !16145)
!16148 = !DILocation(line: 1695, column: 6, scope: !16140)
!16149 = !DILocation(line: 1697, column: 29, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16145, file: !2414, line: 1695, column: 56)
!16151 = !DILocation(line: 1698, column: 7, scope: !16152)
!16152 = distinct !DILexicalBlock(scope: !16150, file: !2414, line: 1698, column: 7)
!16153 = !DILocation(line: 1698, column: 7, scope: !16150)
!16154 = !DILocation(line: 0, scope: !14192, inlinedAt: !16155)
!16155 = distinct !DILocation(line: 1699, column: 4, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !16152, file: !2414, line: 1698, column: 35)
!16157 = !DILocation(line: 266, column: 28, scope: !14192, inlinedAt: !16155)
!16158 = !DILocation(line: 0, scope: !14200, inlinedAt: !16159)
!16159 = distinct !DILocation(line: 268, column: 3, scope: !14204, inlinedAt: !16155)
!16160 = !DILocation(line: 234, column: 2, scope: !14200, inlinedAt: !16159)
!16161 = !DILocation(line: 1700, column: 3, scope: !16156)
!16162 = !DILocation(line: 1701, column: 20, scope: !16163)
!16163 = distinct !DILexicalBlock(scope: !16150, file: !2414, line: 1701, column: 7)
!16164 = !DILocation(line: 1701, column: 30, scope: !16163)
!16165 = !DILocation(line: 1701, column: 7, scope: !16150)
!16166 = !DILocation(line: 1702, column: 4, scope: !16167)
!16167 = distinct !DILexicalBlock(scope: !16163, file: !2414, line: 1701, column: 39)
!16168 = !DILocation(line: 1703, column: 3, scope: !16167)
!16169 = !DILocation(line: 1704, column: 9, scope: !16150)
!16170 = !DILocation(line: 1705, column: 23, scope: !16150)
!16171 = !DILocation(line: 1705, column: 3, scope: !16150)
!16172 = !DILocation(line: 1706, column: 3, scope: !16150)
!16173 = !DILocation(line: 1722, column: 2, scope: !16150)
!16174 = !DILocation(line: 1723, column: 1, scope: !16140)
!16175 = distinct !DISubprogram(name: "unpend_all", scope: !2414, file: !2414, line: 1674, type: !16176, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !16178)
!16176 = !DISubroutineType(types: !16177)
!16177 = !{null, !2337}
!16178 = !{!16179, !16180}
!16179 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16175, file: !2414, line: 1674, type: !2337)
!16180 = !DILocalVariable(name: "thread", scope: !16175, file: !2414, line: 1676, type: !2306)
!16181 = !DILocation(line: 0, scope: !16175)
!16182 = !DILocation(line: 1678, column: 19, scope: !16175)
!16183 = !DILocation(line: 1678, column: 41, scope: !16175)
!16184 = !DILocation(line: 1678, column: 2, scope: !16175)
!16185 = !DILocation(line: 1679, column: 3, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16175, file: !2414, line: 1678, column: 50)
!16187 = !DILocation(line: 1680, column: 9, scope: !16186)
!16188 = !DILocalVariable(name: "thread", arg: 1, scope: !16189, file: !12807, line: 65, type: !2306)
!16189 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12807, file: !12807, line: 65, type: !16190, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !16192)
!16190 = !DISubroutineType(types: !16191)
!16191 = !{null, !2306, !32}
!16192 = !{!16188, !16193}
!16193 = !DILocalVariable(name: "value", arg: 2, scope: !16189, file: !12807, line: 65, type: !32)
!16194 = !DILocation(line: 0, scope: !16189, inlinedAt: !16195)
!16195 = distinct !DILocation(line: 1681, column: 3, scope: !16186)
!16196 = !DILocation(line: 67, column: 15, scope: !16189, inlinedAt: !16195)
!16197 = !DILocation(line: 67, column: 33, scope: !16189, inlinedAt: !16195)
!16198 = !DILocation(line: 1682, column: 3, scope: !16186)
!16199 = distinct !{!16199, !16184, !16200}
!16200 = !DILocation(line: 1683, column: 2, scope: !16175)
!16201 = !DILocation(line: 1684, column: 1, scope: !16175)
!16202 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2414, file: !2414, line: 1794, type: !16203, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !16205)
!16203 = !DISubroutineType(types: !16204)
!16204 = !{!109, !2306, !14886}
!16205 = !{!16206, !16207, !16208, !16209}
!16206 = !DILocalVariable(name: "thread", arg: 1, scope: !16202, file: !2414, line: 1794, type: !2306)
!16207 = !DILocalVariable(name: "timeout", arg: 2, scope: !16202, file: !2414, line: 1794, type: !14886)
!16208 = !DILocalVariable(name: "key", scope: !16202, file: !2414, line: 1796, type: !13992)
!16209 = !DILocalVariable(name: "ret", scope: !16202, file: !2414, line: 1797, type: !109)
!16210 = !DILocation(line: 0, scope: !16202)
!16211 = !DILocation(line: 0, scope: !14000, inlinedAt: !16212)
!16212 = distinct !DILocation(line: 1796, column: 25, scope: !16202)
!16213 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !16214)
!16214 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !16212)
!16215 = !DILocation(line: 0, scope: !14009, inlinedAt: !16214)
!16216 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !16212)
!16217 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !16212)
!16218 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !16212)
!16219 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !16212)
!16220 = !DILocation(line: 1801, column: 20, scope: !16221)
!16221 = distinct !DILexicalBlock(scope: !16202, file: !2414, line: 1801, column: 6)
!16222 = !DILocation(line: 1801, column: 33, scope: !16221)
!16223 = !DILocation(line: 1801, column: 49, scope: !16221)
!16224 = !DILocation(line: 1801, column: 6, scope: !16202)
!16225 = !DILocation(line: 1803, column: 13, scope: !16226)
!16226 = distinct !DILexicalBlock(scope: !16221, file: !2414, line: 1803, column: 13)
!16227 = !DILocation(line: 1803, column: 13, scope: !16221)
!16228 = !DILocation(line: 1805, column: 24, scope: !16229)
!16229 = distinct !DILexicalBlock(scope: !16226, file: !2414, line: 1805, column: 13)
!16230 = !DILocation(line: 1805, column: 21, scope: !16229)
!16231 = !DILocation(line: 1805, column: 34, scope: !16229)
!16232 = !DILocation(line: 1806, column: 20, scope: !16229)
!16233 = !DILocation(line: 1806, column: 44, scope: !16229)
!16234 = !DILocation(line: 1806, column: 30, scope: !16229)
!16235 = !DILocation(line: 1805, column: 13, scope: !16226)
!16236 = !DILocation(line: 1031, column: 3, scope: !14725, inlinedAt: !16237)
!16237 = distinct !DILocation(line: 48, column: 10, scope: !14729, inlinedAt: !16238)
!16238 = distinct !DILocation(line: 1809, column: 3, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16240, file: !2414, line: 1809, column: 3)
!16240 = distinct !DILexicalBlock(scope: !16241, file: !2414, line: 1809, column: 3)
!16241 = distinct !DILexicalBlock(scope: !16229, file: !2414, line: 1808, column: 9)
!16242 = !DILocation(line: 0, scope: !14725, inlinedAt: !16237)
!16243 = !DILocation(line: 48, column: 9, scope: !14729, inlinedAt: !16238)
!16244 = !DILocation(line: 1809, column: 3, scope: !16240)
!16245 = !DILocation(line: 1809, column: 3, scope: !16246)
!16246 = distinct !DILexicalBlock(scope: !16239, file: !2414, line: 1809, column: 3)
!16247 = !DILocation(line: 1810, column: 23, scope: !16241)
!16248 = !DILocation(line: 1810, column: 42, scope: !16241)
!16249 = !DILocation(line: 1810, column: 3, scope: !16241)
!16250 = !DILocation(line: 1811, column: 22, scope: !16241)
!16251 = !DILocation(line: 1811, column: 3, scope: !16241)
!16252 = !DILocation(line: 0, scope: !14676, inlinedAt: !16253)
!16253 = distinct !DILocation(line: 1814, column: 9, scope: !16241)
!16254 = !DILocation(line: 0, scope: !14685, inlinedAt: !16255)
!16255 = distinct !DILocation(line: 195, column: 2, scope: !14676, inlinedAt: !16253)
!16256 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !16255)
!16257 = !DILocation(line: 225, column: 2, scope: !14693, inlinedAt: !16255)
!16258 = !DILocation(line: 225, column: 2, scope: !14696, inlinedAt: !16255)
!16259 = !DILocation(line: 196, column: 9, scope: !14676, inlinedAt: !16253)
!16260 = !DILocation(line: 1817, column: 3, scope: !16241)
!16261 = !DILocation(line: 0, scope: !16221)
!16262 = !DILocation(line: 0, scope: !14034, inlinedAt: !16263)
!16263 = distinct !DILocation(line: 1822, column: 2, scope: !16202)
!16264 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !16263)
!16265 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !16263)
!16266 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !16263)
!16267 = !DILocation(line: 0, scope: !14048, inlinedAt: !16268)
!16268 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !16263)
!16269 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !16268)
!16270 = !DILocation(line: 1823, column: 2, scope: !16202)
!16271 = !DILocation(line: 1824, column: 1, scope: !16202)
!16272 = distinct !DISubprogram(name: "z_sched_wake", scope: !2414, file: !2414, line: 1882, type: !16273, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !16275)
!16273 = !DISubroutineType(types: !16274)
!16274 = !{!347, !2337, !109, !107}
!16275 = !{!16276, !16277, !16278, !16279, !16280, !16281, !16283}
!16276 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16272, file: !2414, line: 1882, type: !2337)
!16277 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16272, file: !2414, line: 1882, type: !109)
!16278 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16272, file: !2414, line: 1882, type: !107)
!16279 = !DILocalVariable(name: "thread", scope: !16272, file: !2414, line: 1884, type: !2306)
!16280 = !DILocalVariable(name: "ret", scope: !16272, file: !2414, line: 1885, type: !347)
!16281 = !DILocalVariable(name: "__i", scope: !16282, file: !2414, line: 1887, type: !13992)
!16282 = distinct !DILexicalBlock(scope: !16272, file: !2414, line: 1887, column: 2)
!16283 = !DILocalVariable(name: "__key", scope: !16282, file: !2414, line: 1887, type: !13992)
!16284 = !DILocation(line: 0, scope: !16272)
!16285 = !DILocation(line: 0, scope: !16282)
!16286 = !DILocation(line: 0, scope: !14000, inlinedAt: !16287)
!16287 = distinct !DILocation(line: 1887, column: 2, scope: !16282)
!16288 = !DILocation(line: 55, column: 2, scope: !14009, inlinedAt: !16289)
!16289 = distinct !DILocation(line: 145, column: 10, scope: !14000, inlinedAt: !16287)
!16290 = !DILocation(line: 0, scope: !14009, inlinedAt: !16289)
!16291 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !16287)
!16292 = !DILocation(line: 148, column: 2, scope: !14018, inlinedAt: !16287)
!16293 = !DILocation(line: 148, column: 2, scope: !14021, inlinedAt: !16287)
!16294 = !DILocation(line: 160, column: 2, scope: !14000, inlinedAt: !16287)
!16295 = !DILocation(line: 1888, column: 12, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !16297, file: !2414, line: 1887, column: 26)
!16297 = distinct !DILexicalBlock(scope: !16282, file: !2414, line: 1887, column: 2)
!16298 = !DILocation(line: 1890, column: 14, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16296, file: !2414, line: 1890, column: 7)
!16300 = !DILocation(line: 1890, column: 7, scope: !16296)
!16301 = !DILocalVariable(name: "thread", arg: 1, scope: !16302, file: !16303, line: 134, type: !2306)
!16302 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16303, file: !16303, line: 134, type: !16304, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !16306)
!16303 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16304 = !DISubroutineType(types: !16305)
!16305 = !{null, !2306, !32, !107}
!16306 = !{!16301, !16307, !16308}
!16307 = !DILocalVariable(name: "value", arg: 2, scope: !16302, file: !16303, line: 135, type: !32)
!16308 = !DILocalVariable(name: "data", arg: 3, scope: !16302, file: !16303, line: 136, type: !107)
!16309 = !DILocation(line: 0, scope: !16302, inlinedAt: !16310)
!16310 = distinct !DILocation(line: 1891, column: 4, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !16299, file: !2414, line: 1890, column: 23)
!16312 = !DILocation(line: 0, scope: !16189, inlinedAt: !16313)
!16313 = distinct !DILocation(line: 138, column: 2, scope: !16302, inlinedAt: !16310)
!16314 = !DILocation(line: 67, column: 15, scope: !16189, inlinedAt: !16313)
!16315 = !DILocation(line: 67, column: 33, scope: !16189, inlinedAt: !16313)
!16316 = !DILocation(line: 139, column: 15, scope: !16302, inlinedAt: !16310)
!16317 = !DILocation(line: 139, column: 25, scope: !16302, inlinedAt: !16310)
!16318 = !DILocation(line: 1894, column: 4, scope: !16311)
!16319 = !DILocation(line: 1895, column: 10, scope: !16311)
!16320 = !DILocation(line: 1896, column: 4, scope: !16311)
!16321 = !DILocation(line: 1898, column: 3, scope: !16311)
!16322 = !DILocation(line: 0, scope: !14034, inlinedAt: !16323)
!16323 = distinct !DILocation(line: 1887, column: 2, scope: !16297)
!16324 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !16323)
!16325 = !DILocation(line: 194, column: 2, scope: !14043, inlinedAt: !16323)
!16326 = !DILocation(line: 194, column: 2, scope: !14046, inlinedAt: !16323)
!16327 = !DILocation(line: 0, scope: !14048, inlinedAt: !16328)
!16328 = distinct !DILocation(line: 215, column: 2, scope: !14034, inlinedAt: !16323)
!16329 = !DILocation(line: 95, column: 2, scope: !14048, inlinedAt: !16328)
!16330 = !DILocation(line: 1901, column: 2, scope: !16272)
!16331 = distinct !DISubprogram(name: "z_sched_wait", scope: !2414, file: !2414, line: 1904, type: !16332, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !16335)
!16332 = !DISubroutineType(types: !16333)
!16333 = !{!109, !14003, !13992, !2337, !14886, !16334}
!16334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!16335 = !{!16336, !16337, !16338, !16339, !16340, !16341}
!16336 = !DILocalVariable(name: "lock", arg: 1, scope: !16331, file: !2414, line: 1904, type: !14003)
!16337 = !DILocalVariable(name: "key", arg: 2, scope: !16331, file: !2414, line: 1904, type: !13992)
!16338 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16331, file: !2414, line: 1905, type: !2337)
!16339 = !DILocalVariable(name: "timeout", arg: 4, scope: !16331, file: !2414, line: 1905, type: !14886)
!16340 = !DILocalVariable(name: "data", arg: 5, scope: !16331, file: !2414, line: 1905, type: !16334)
!16341 = !DILocalVariable(name: "ret", scope: !16331, file: !2414, line: 1907, type: !109)
!16342 = !DILocation(line: 0, scope: !16331)
!16343 = !DILocation(line: 1907, column: 12, scope: !16331)
!16344 = !DILocation(line: 1909, column: 11, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16331, file: !2414, line: 1909, column: 6)
!16346 = !DILocation(line: 1909, column: 6, scope: !16331)
!16347 = !DILocation(line: 1910, column: 11, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16345, file: !2414, line: 1909, column: 20)
!16349 = !DILocation(line: 1910, column: 26, scope: !16348)
!16350 = !DILocation(line: 1910, column: 9, scope: !16348)
!16351 = !DILocation(line: 1911, column: 2, scope: !16348)
!16352 = !DILocation(line: 1912, column: 2, scope: !16331)
!16353 = distinct !DISubprogram(name: "z_impl_k_condvar_init", scope: !2440, file: !2440, line: 16, type: !16354, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16365)
!16354 = !DISubroutineType(types: !16355)
!16355 = !{!109, !16356}
!16356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16357, size: 32)
!16357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !16358)
!16358 = !{!16359}
!16359 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16357, file: !118, line: 2829, baseType: !16360, size: 64)
!16360 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !16361)
!16361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !16362)
!16362 = !{!16363}
!16363 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16361, file: !122, line: 232, baseType: !16364, size: 64)
!16364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2426)
!16365 = !{!16366}
!16366 = !DILocalVariable(name: "condvar", arg: 1, scope: !16353, file: !2440, line: 16, type: !16356)
!16367 = !DILocation(line: 0, scope: !16353)
!16368 = !DILocation(line: 18, column: 25, scope: !16353)
!16369 = !DILocation(line: 18, column: 2, scope: !16353)
!16370 = !DILocation(line: 23, column: 2, scope: !16353)
!16371 = distinct !DISubprogram(name: "z_waitq_init", scope: !13148, file: !13148, line: 47, type: !16372, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16375)
!16372 = !DISubroutineType(types: !16373)
!16373 = !{null, !16374}
!16374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16360, size: 32)
!16375 = !{!16376}
!16376 = !DILocalVariable(name: "w", arg: 1, scope: !16371, file: !13148, line: 47, type: !16374)
!16377 = !DILocation(line: 0, scope: !16371)
!16378 = !DILocation(line: 49, column: 21, scope: !16371)
!16379 = !DILocation(line: 49, column: 2, scope: !16371)
!16380 = !DILocation(line: 50, column: 1, scope: !16371)
!16381 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !16382, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16385)
!16382 = !DISubroutineType(types: !16383)
!16383 = !{null, !16384}
!16384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16364, size: 32)
!16385 = !{!16386}
!16386 = !DILocalVariable(name: "list", arg: 1, scope: !16381, file: !127, line: 197, type: !16384)
!16387 = !DILocation(line: 0, scope: !16381)
!16388 = !DILocation(line: 199, column: 8, scope: !16381)
!16389 = !DILocation(line: 199, column: 13, scope: !16381)
!16390 = !DILocation(line: 200, column: 8, scope: !16381)
!16391 = !DILocation(line: 200, column: 13, scope: !16381)
!16392 = !DILocation(line: 201, column: 1, scope: !16381)
!16393 = distinct !DISubprogram(name: "z_impl_k_condvar_signal", scope: !2440, file: !2440, line: 35, type: !16354, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16394)
!16394 = !{!16395, !16396, !16401}
!16395 = !DILocalVariable(name: "condvar", arg: 1, scope: !16393, file: !2440, line: 35, type: !16356)
!16396 = !DILocalVariable(name: "key", scope: !16393, file: !2440, line: 37, type: !16397)
!16397 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !16398)
!16398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !16399)
!16399 = !{!16400}
!16400 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16398, file: !253, line: 33, baseType: !109, size: 32)
!16401 = !DILocalVariable(name: "thread", scope: !16393, file: !2440, line: 41, type: !16402)
!16402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16403, size: 32)
!16403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !16404)
!16404 = !{!16405, !16443, !16455, !16456, !16457, !16458, !16459, !16465, !16477}
!16405 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16403, file: !158, line: 247, baseType: !16406, size: 384)
!16406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !16407)
!16407 = !{!16408, !16418, !16419, !16420, !16421, !16430, !16431, !16432}
!16408 = !DIDerivedType(tag: DW_TAG_member, scope: !16406, file: !158, line: 60, baseType: !16409, size: 64)
!16409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16406, file: !158, line: 60, size: 64, elements: !16410)
!16410 = !{!16411, !16412}
!16411 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16409, file: !158, line: 61, baseType: !2425, size: 64)
!16412 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16409, file: !158, line: 62, baseType: !16413, size: 64)
!16413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !16414)
!16414 = !{!16415}
!16415 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16413, file: !170, line: 50, baseType: !16416, size: 64)
!16416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16417, size: 64, elements: !175)
!16417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16413, size: 32)
!16418 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16406, file: !158, line: 68, baseType: !16374, size: 32, offset: 64)
!16419 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16406, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!16420 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16406, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!16421 = !DIDerivedType(tag: DW_TAG_member, scope: !16406, file: !158, line: 90, baseType: !16422, size: 16, offset: 112)
!16422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16406, file: !158, line: 90, size: 16, elements: !16423)
!16423 = !{!16424, !16429}
!16424 = !DIDerivedType(tag: DW_TAG_member, scope: !16422, file: !158, line: 91, baseType: !16425, size: 16)
!16425 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16422, file: !158, line: 91, size: 16, elements: !16426)
!16426 = !{!16427, !16428}
!16427 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16425, file: !158, line: 96, baseType: !190, size: 8)
!16428 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16425, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!16429 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16422, file: !158, line: 100, baseType: !194, size: 16)
!16430 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16406, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!16431 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16406, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!16432 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16406, file: !158, line: 131, baseType: !16433, size: 192, offset: 192)
!16433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !16434)
!16434 = !{!16435, !16436, !16442}
!16435 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16433, file: !122, line: 245, baseType: !2425, size: 64)
!16436 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16433, file: !122, line: 246, baseType: !16437, size: 32, offset: 64)
!16437 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !16438)
!16438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16439, size: 32)
!16439 = !DISubroutineType(types: !16440)
!16440 = !{null, !16441}
!16441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16433, size: 32)
!16442 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16433, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!16443 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16403, file: !158, line: 250, baseType: !16444, size: 288, offset: 384)
!16444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !16445)
!16445 = !{!16446, !16447, !16448, !16449, !16450, !16451, !16452, !16453, !16454}
!16446 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16444, file: !211, line: 26, baseType: !110, size: 32)
!16447 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16444, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!16448 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16444, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!16449 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16444, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!16450 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16444, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!16451 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16444, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!16452 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16444, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!16453 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16444, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!16454 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16444, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!16455 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16403, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!16456 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16403, file: !158, line: 256, baseType: !16360, size: 64, offset: 704)
!16457 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16403, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!16458 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16403, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!16459 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !16403, file: !158, line: 300, baseType: !16460, size: 96, offset: 1056)
!16460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !16461)
!16461 = !{!16462, !16463, !16464}
!16462 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16460, file: !158, line: 153, baseType: !22, size: 32)
!16463 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16460, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!16464 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !16460, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!16465 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16403, file: !158, line: 325, baseType: !16466, size: 32, offset: 1152)
!16466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16467, size: 32)
!16467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !16468)
!16468 = !{!16469, !16475, !16476}
!16469 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16467, file: !118, line: 5074, baseType: !16470, size: 96)
!16470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !16471)
!16471 = !{!16472, !16473, !16474}
!16472 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16470, file: !243, line: 57, baseType: !246, size: 32)
!16473 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16470, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!16474 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16470, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!16475 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16467, file: !118, line: 5075, baseType: !16360, size: 64, offset: 96)
!16476 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16467, file: !118, line: 5076, baseType: !2441, size: 32, offset: 160)
!16477 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16403, file: !158, line: 343, baseType: !16478, size: 64, offset: 1184)
!16478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !16479)
!16479 = !{!16480, !16481}
!16480 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16478, file: !211, line: 63, baseType: !110, size: 32)
!16481 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16478, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!16482 = !DILocation(line: 0, scope: !16393)
!16483 = !DILocalVariable(name: "l", arg: 1, scope: !16484, file: !253, line: 136, type: !16487)
!16484 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !16485, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16488)
!16485 = !DISubroutineType(types: !16486)
!16486 = !{!16397, !16487}
!16487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 32)
!16488 = !{!16483, !16489}
!16489 = !DILocalVariable(name: "k", scope: !16484, file: !253, line: 139, type: !16397)
!16490 = !DILocation(line: 0, scope: !16484, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 37, column: 25, scope: !16393)
!16492 = !DILocation(line: 55, column: 2, scope: !16493, inlinedAt: !16497)
!16493 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6062, file: !6062, line: 42, type: !6063, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16494)
!16494 = !{!16495, !16496}
!16495 = !DILocalVariable(name: "key", scope: !16493, file: !6062, line: 44, type: !32)
!16496 = !DILocalVariable(name: "tmp", scope: !16493, file: !6062, line: 53, type: !32)
!16497 = distinct !DILocation(line: 145, column: 10, scope: !16484, inlinedAt: !16491)
!16498 = !{i64 1951861}
!16499 = !DILocation(line: 0, scope: !16493, inlinedAt: !16497)
!16500 = !DILocation(line: 148, column: 2, scope: !16501, inlinedAt: !16491)
!16501 = distinct !DILexicalBlock(scope: !16502, file: !253, line: 148, column: 2)
!16502 = distinct !DILexicalBlock(scope: !16484, file: !253, line: 148, column: 2)
!16503 = !DILocation(line: 148, column: 2, scope: !16502, inlinedAt: !16491)
!16504 = !DILocation(line: 148, column: 2, scope: !16505, inlinedAt: !16491)
!16505 = distinct !DILexicalBlock(scope: !16501, file: !253, line: 148, column: 2)
!16506 = !DILocation(line: 160, column: 2, scope: !16484, inlinedAt: !16491)
!16507 = !DILocation(line: 41, column: 60, scope: !16393)
!16508 = !DILocation(line: 41, column: 28, scope: !16393)
!16509 = !DILocation(line: 43, column: 13, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16393, file: !2440, line: 43, column: 6)
!16511 = !DILocation(line: 43, column: 6, scope: !16393)
!16512 = !DILocalVariable(name: "thread", arg: 1, scope: !16513, file: !12807, line: 65, type: !16402)
!16513 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12807, file: !12807, line: 65, type: !16514, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16516)
!16514 = !DISubroutineType(types: !16515)
!16515 = !{null, !16402, !32}
!16516 = !{!16512, !16517}
!16517 = !DILocalVariable(name: "value", arg: 2, scope: !16513, file: !12807, line: 65, type: !32)
!16518 = !DILocation(line: 0, scope: !16513, inlinedAt: !16519)
!16519 = distinct !DILocation(line: 46, column: 3, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16510, file: !2440, line: 43, column: 22)
!16521 = !DILocation(line: 67, column: 15, scope: !16513, inlinedAt: !16519)
!16522 = !DILocation(line: 67, column: 33, scope: !16513, inlinedAt: !16519)
!16523 = !DILocation(line: 47, column: 3, scope: !16520)
!16524 = !DILocation(line: 48, column: 3, scope: !16520)
!16525 = !DILocation(line: 49, column: 2, scope: !16520)
!16526 = !DILocalVariable(name: "key", arg: 2, scope: !16527, file: !253, line: 190, type: !16397)
!16527 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !16528, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16530)
!16528 = !DISubroutineType(types: !16529)
!16529 = !{null, !16487, !16397}
!16530 = !{!16531, !16526}
!16531 = !DILocalVariable(name: "l", arg: 1, scope: !16527, file: !253, line: 189, type: !16487)
!16532 = !DILocation(line: 0, scope: !16527, inlinedAt: !16533)
!16533 = distinct !DILocation(line: 50, column: 3, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16510, file: !2440, line: 49, column: 9)
!16535 = !DILocation(line: 194, column: 2, scope: !16536, inlinedAt: !16533)
!16536 = distinct !DILexicalBlock(scope: !16537, file: !253, line: 194, column: 2)
!16537 = distinct !DILexicalBlock(scope: !16527, file: !253, line: 194, column: 2)
!16538 = !DILocation(line: 194, column: 2, scope: !16537, inlinedAt: !16533)
!16539 = !DILocation(line: 194, column: 2, scope: !16540, inlinedAt: !16533)
!16540 = distinct !DILexicalBlock(scope: !16536, file: !253, line: 194, column: 2)
!16541 = !DILocalVariable(name: "key", arg: 1, scope: !16542, file: !6062, line: 84, type: !32)
!16542 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6062, file: !6062, line: 84, type: !6073, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16543)
!16543 = !{!16541}
!16544 = !DILocation(line: 0, scope: !16542, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 215, column: 2, scope: !16527, inlinedAt: !16533)
!16546 = !DILocation(line: 95, column: 2, scope: !16542, inlinedAt: !16545)
!16547 = !{i64 1952678}
!16548 = !DILocation(line: 55, column: 2, scope: !16393)
!16549 = distinct !DISubprogram(name: "z_impl_k_condvar_broadcast", scope: !2440, file: !2440, line: 67, type: !16354, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16550)
!16550 = !{!16551, !16552, !16553, !16554}
!16551 = !DILocalVariable(name: "condvar", arg: 1, scope: !16549, file: !2440, line: 67, type: !16356)
!16552 = !DILocalVariable(name: "pending_thread", scope: !16549, file: !2440, line: 69, type: !16402)
!16553 = !DILocalVariable(name: "key", scope: !16549, file: !2440, line: 70, type: !16397)
!16554 = !DILocalVariable(name: "woken", scope: !16549, file: !2440, line: 71, type: !109)
!16555 = !DILocation(line: 0, scope: !16549)
!16556 = !DILocation(line: 0, scope: !16484, inlinedAt: !16557)
!16557 = distinct !DILocation(line: 73, column: 8, scope: !16549)
!16558 = !DILocation(line: 55, column: 2, scope: !16493, inlinedAt: !16559)
!16559 = distinct !DILocation(line: 145, column: 10, scope: !16484, inlinedAt: !16557)
!16560 = !DILocation(line: 0, scope: !16493, inlinedAt: !16559)
!16561 = !DILocation(line: 148, column: 2, scope: !16501, inlinedAt: !16557)
!16562 = !DILocation(line: 148, column: 2, scope: !16502, inlinedAt: !16557)
!16563 = !DILocation(line: 148, column: 2, scope: !16505, inlinedAt: !16557)
!16564 = !DILocation(line: 160, column: 2, scope: !16484, inlinedAt: !16557)
!16565 = !DILocation(line: 78, column: 27, scope: !16549)
!16566 = !DILocation(line: 78, column: 68, scope: !16549)
!16567 = !DILocation(line: 78, column: 2, scope: !16549)
!16568 = !DILocation(line: 80, column: 8, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16549, file: !2440, line: 79, column: 15)
!16570 = !DILocation(line: 0, scope: !16513, inlinedAt: !16571)
!16571 = distinct !DILocation(line: 81, column: 3, scope: !16569)
!16572 = !DILocation(line: 67, column: 15, scope: !16513, inlinedAt: !16571)
!16573 = !DILocation(line: 67, column: 33, scope: !16513, inlinedAt: !16571)
!16574 = !DILocation(line: 82, column: 3, scope: !16569)
!16575 = distinct !{!16575, !16567, !16576}
!16576 = !DILocation(line: 83, column: 2, scope: !16549)
!16577 = !DILocation(line: 87, column: 2, scope: !16549)
!16578 = !DILocation(line: 89, column: 2, scope: !16549)
!16579 = distinct !DISubprogram(name: "z_impl_k_condvar_wait", scope: !2440, file: !2440, line: 100, type: !16580, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16593)
!16580 = !DISubroutineType(types: !16581)
!16581 = !{!109, !16356, !16582, !16589}
!16582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16583, size: 32)
!16583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !16584)
!16584 = !{!16585, !16586, !16587, !16588}
!16585 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16583, file: !118, line: 2722, baseType: !16360, size: 64)
!16586 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16583, file: !118, line: 2724, baseType: !16402, size: 32, offset: 64)
!16587 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !16583, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!16588 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !16583, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!16589 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16590)
!16590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16591)
!16591 = !{!16592}
!16592 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16590, file: !104, line: 66, baseType: !103, size: 64)
!16593 = !{!16594, !16595, !16596, !16597, !16598}
!16594 = !DILocalVariable(name: "condvar", arg: 1, scope: !16579, file: !2440, line: 100, type: !16356)
!16595 = !DILocalVariable(name: "mutex", arg: 2, scope: !16579, file: !2440, line: 100, type: !16582)
!16596 = !DILocalVariable(name: "timeout", arg: 3, scope: !16579, file: !2440, line: 101, type: !16589)
!16597 = !DILocalVariable(name: "key", scope: !16579, file: !2440, line: 103, type: !16397)
!16598 = !DILocalVariable(name: "ret", scope: !16579, file: !2440, line: 104, type: !109)
!16599 = !DILocation(line: 0, scope: !16579)
!16600 = !DILocation(line: 0, scope: !16484, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 108, column: 8, scope: !16579)
!16602 = !DILocation(line: 55, column: 2, scope: !16493, inlinedAt: !16603)
!16603 = distinct !DILocation(line: 145, column: 10, scope: !16484, inlinedAt: !16601)
!16604 = !DILocation(line: 0, scope: !16493, inlinedAt: !16603)
!16605 = !DILocation(line: 148, column: 2, scope: !16501, inlinedAt: !16601)
!16606 = !DILocation(line: 148, column: 2, scope: !16502, inlinedAt: !16601)
!16607 = !DILocation(line: 148, column: 2, scope: !16505, inlinedAt: !16601)
!16608 = !DILocation(line: 160, column: 2, scope: !16484, inlinedAt: !16601)
!16609 = !DILocation(line: 109, column: 2, scope: !16579)
!16610 = !DILocation(line: 111, column: 42, scope: !16579)
!16611 = !DILocation(line: 111, column: 8, scope: !16579)
!16612 = !DILocation(line: 112, column: 2, scope: !16579)
!16613 = !DILocation(line: 116, column: 2, scope: !16579)
!16614 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3216, file: !3216, line: 944, type: !16615, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16617)
!16615 = !DISubroutineType(types: !16616)
!16616 = !{!109, !16582}
!16617 = !{!16618}
!16618 = !DILocalVariable(name: "mutex", arg: 1, scope: !16614, file: !3216, line: 944, type: !16582)
!16619 = !DILocation(line: 0, scope: !16614)
!16620 = !DILocation(line: 952, column: 2, scope: !16621)
!16621 = distinct !DILexicalBlock(scope: !16614, file: !3216, line: 952, column: 2)
!16622 = !{i64 2154074522}
!16623 = !DILocation(line: 953, column: 9, scope: !16614)
!16624 = !DILocation(line: 953, column: 2, scope: !16614)
!16625 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3216, file: !3216, line: 927, type: !16626, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !16628)
!16626 = !DISubroutineType(types: !16627)
!16627 = !{!109, !16582, !16589}
!16628 = !{!16629, !16630}
!16629 = !DILocalVariable(name: "mutex", arg: 1, scope: !16625, file: !3216, line: 927, type: !16582)
!16630 = !DILocalVariable(name: "timeout", arg: 2, scope: !16625, file: !3216, line: 927, type: !16589)
!16631 = !DILocation(line: 0, scope: !16625)
!16632 = !DILocation(line: 936, column: 2, scope: !16633)
!16633 = distinct !DILexicalBlock(scope: !16625, file: !3216, line: 936, column: 2)
!16634 = !{i64 2154074454}
!16635 = !DILocation(line: 937, column: 9, scope: !16625)
!16636 = !DILocation(line: 937, column: 2, scope: !16625)
!16637 = distinct !DISubprogram(name: "z_data_copy", scope: !16638, file: !16638, line: 22, type: !3070, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !2002)
!16638 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16639 = !DILocation(line: 24, column: 2, scope: !16637)
!16640 = !DILocation(line: 27, column: 2, scope: !16637)
!16641 = !DILocation(line: 71, column: 1, scope: !16637)
!16642 = distinct !DISubprogram(name: "z_add_timeout", scope: !2476, file: !2476, line: 88, type: !16643, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16649)
!16643 = !DISubroutineType(types: !16644)
!16644 = !{null, !2449, !2468, !16645}
!16645 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16646)
!16646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16647)
!16647 = !{!16648}
!16648 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16646, file: !104, line: 66, baseType: !103, size: 64)
!16649 = !{!16650, !16651, !16652, !16653, !16659, !16660, !16663, !16666}
!16650 = !DILocalVariable(name: "to", arg: 1, scope: !16642, file: !2476, line: 88, type: !2449)
!16651 = !DILocalVariable(name: "fn", arg: 2, scope: !16642, file: !2476, line: 88, type: !2468)
!16652 = !DILocalVariable(name: "timeout", arg: 3, scope: !16642, file: !2476, line: 89, type: !16645)
!16653 = !DILocalVariable(name: "__i", scope: !16654, file: !2476, line: 102, type: !16655)
!16654 = distinct !DILexicalBlock(scope: !16642, file: !2476, line: 102, column: 2)
!16655 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !16656)
!16656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !16657)
!16657 = !{!16658}
!16658 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16656, file: !253, line: 33, baseType: !109, size: 32)
!16659 = !DILocalVariable(name: "__key", scope: !16654, file: !2476, line: 102, type: !16655)
!16660 = !DILocalVariable(name: "t", scope: !16661, file: !2476, line: 103, type: !2449)
!16661 = distinct !DILexicalBlock(scope: !16662, file: !2476, line: 102, column: 24)
!16662 = distinct !DILexicalBlock(scope: !16654, file: !2476, line: 102, column: 2)
!16663 = !DILocalVariable(name: "ticks", scope: !16664, file: !2476, line: 107, type: !103)
!16664 = distinct !DILexicalBlock(scope: !16665, file: !2476, line: 106, column: 39)
!16665 = distinct !DILexicalBlock(scope: !16661, file: !2476, line: 105, column: 7)
!16666 = !DILocalVariable(name: "next_time", scope: !16667, file: !2476, line: 137, type: !745)
!16667 = distinct !DILexicalBlock(scope: !16668, file: !2476, line: 127, column: 22)
!16668 = distinct !DILexicalBlock(scope: !16661, file: !2476, line: 127, column: 7)
!16669 = !DILocation(line: 0, scope: !16642)
!16670 = !DILocation(line: 91, column: 6, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16642, file: !2476, line: 91, column: 6)
!16672 = !DILocation(line: 91, column: 6, scope: !16642)
!16673 = !DILocation(line: 99, column: 2, scope: !16674)
!16674 = distinct !DILexicalBlock(scope: !16675, file: !2476, line: 99, column: 2)
!16675 = distinct !DILexicalBlock(scope: !16642, file: !2476, line: 99, column: 2)
!16676 = !DILocation(line: 99, column: 2, scope: !16675)
!16677 = !DILocation(line: 99, column: 2, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16674, file: !2476, line: 99, column: 2)
!16679 = !DILocation(line: 100, column: 6, scope: !16642)
!16680 = !DILocation(line: 100, column: 9, scope: !16642)
!16681 = !DILocation(line: 0, scope: !16654)
!16682 = !DILocalVariable(name: "l", arg: 1, scope: !16683, file: !253, line: 136, type: !16686)
!16683 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !16684, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16687)
!16684 = !DISubroutineType(types: !16685)
!16685 = !{!16655, !16686}
!16686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 32)
!16687 = !{!16682, !16688}
!16688 = !DILocalVariable(name: "k", scope: !16683, file: !253, line: 139, type: !16655)
!16689 = !DILocation(line: 0, scope: !16683, inlinedAt: !16690)
!16690 = distinct !DILocation(line: 102, column: 2, scope: !16654)
!16691 = !DILocation(line: 55, column: 2, scope: !16692, inlinedAt: !16696)
!16692 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6062, file: !6062, line: 42, type: !6063, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16693)
!16693 = !{!16694, !16695}
!16694 = !DILocalVariable(name: "key", scope: !16692, file: !6062, line: 44, type: !32)
!16695 = !DILocalVariable(name: "tmp", scope: !16692, file: !6062, line: 53, type: !32)
!16696 = distinct !DILocation(line: 145, column: 10, scope: !16683, inlinedAt: !16690)
!16697 = !{i64 1957467}
!16698 = !DILocation(line: 0, scope: !16692, inlinedAt: !16696)
!16699 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !16690)
!16700 = distinct !DILexicalBlock(scope: !16701, file: !253, line: 148, column: 2)
!16701 = distinct !DILexicalBlock(scope: !16683, file: !253, line: 148, column: 2)
!16702 = !DILocation(line: 148, column: 2, scope: !16701, inlinedAt: !16690)
!16703 = !DILocation(line: 148, column: 2, scope: !16704, inlinedAt: !16690)
!16704 = distinct !DILexicalBlock(scope: !16700, file: !253, line: 148, column: 2)
!16705 = !DILocation(line: 160, column: 2, scope: !16683, inlinedAt: !16690)
!16706 = !DILocation(line: 106, column: 33, scope: !16665)
!16707 = !DILocation(line: 105, column: 7, scope: !16661)
!16708 = !DILocation(line: 107, column: 50, scope: !16664)
!16709 = !DILocation(line: 107, column: 48, scope: !16664)
!16710 = !DILocation(line: 0, scope: !16664)
!16711 = !DILocation(line: 109, column: 17, scope: !16664)
!16712 = !DILocation(line: 110, column: 3, scope: !16664)
!16713 = !DILocation(line: 111, column: 31, scope: !16714)
!16714 = distinct !DILexicalBlock(scope: !16665, file: !2476, line: 110, column: 10)
!16715 = !DILocation(line: 111, column: 37, scope: !16714)
!16716 = !DILocation(line: 111, column: 35, scope: !16714)
!16717 = !DILocation(line: 0, scope: !16665)
!16718 = !DILocation(line: 109, column: 8, scope: !16664)
!16719 = !DILocation(line: 109, column: 15, scope: !16664)
!16720 = !DILocation(line: 114, column: 12, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16661, file: !2476, line: 114, column: 3)
!16722 = !DILocation(line: 0, scope: !16661)
!16723 = !DILocation(line: 114, column: 3, scope: !16721)
!16724 = !DILocation(line: 115, column: 24, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16726, file: !2476, line: 115, column: 8)
!16726 = distinct !DILexicalBlock(scope: !16727, file: !2476, line: 114, column: 45)
!16727 = distinct !DILexicalBlock(scope: !16721, file: !2476, line: 114, column: 3)
!16728 = !DILocation(line: 115, column: 11, scope: !16725)
!16729 = !DILocation(line: 115, column: 18, scope: !16725)
!16730 = !DILocation(line: 115, column: 8, scope: !16726)
!16731 = !DILocation(line: 116, column: 15, scope: !16732)
!16732 = distinct !DILexicalBlock(scope: !16725, file: !2476, line: 115, column: 32)
!16733 = !DILocation(line: 117, column: 26, scope: !16732)
!16734 = !DILocation(line: 117, column: 5, scope: !16732)
!16735 = !DILocation(line: 123, column: 7, scope: !16661)
!16736 = !DILocation(line: 120, column: 15, scope: !16726)
!16737 = !DILocation(line: 114, column: 36, scope: !16727)
!16738 = distinct !{!16738, !16723, !16739}
!16739 = !DILocation(line: 121, column: 3, scope: !16721)
!16740 = !DILocation(line: 124, column: 4, scope: !16741)
!16741 = distinct !DILexicalBlock(scope: !16742, file: !2476, line: 123, column: 18)
!16742 = distinct !DILexicalBlock(scope: !16661, file: !2476, line: 123, column: 7)
!16743 = !DILocation(line: 125, column: 3, scope: !16741)
!16744 = !DILocation(line: 127, column: 13, scope: !16668)
!16745 = !DILocation(line: 127, column: 10, scope: !16668)
!16746 = !DILocation(line: 127, column: 7, scope: !16661)
!16747 = !DILocation(line: 137, column: 24, scope: !16667)
!16748 = !DILocation(line: 0, scope: !16667)
!16749 = !DILocation(line: 139, column: 18, scope: !16750)
!16750 = distinct !DILexicalBlock(scope: !16667, file: !2476, line: 139, column: 8)
!16751 = !DILocation(line: 139, column: 23, scope: !16750)
!16752 = !DILocation(line: 141, column: 5, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16750, file: !2476, line: 140, column: 48)
!16754 = !DILocation(line: 142, column: 4, scope: !16753)
!16755 = !DILocalVariable(name: "key", arg: 2, scope: !16756, file: !253, line: 190, type: !16655)
!16756 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !16757, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16759)
!16757 = !DISubroutineType(types: !16758)
!16758 = !{null, !16686, !16655}
!16759 = !{!16760, !16755}
!16760 = !DILocalVariable(name: "l", arg: 1, scope: !16756, file: !253, line: 189, type: !16686)
!16761 = !DILocation(line: 0, scope: !16756, inlinedAt: !16762)
!16762 = distinct !DILocation(line: 102, column: 2, scope: !16662)
!16763 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !16762)
!16764 = distinct !DILexicalBlock(scope: !16765, file: !253, line: 194, column: 2)
!16765 = distinct !DILexicalBlock(scope: !16756, file: !253, line: 194, column: 2)
!16766 = !DILocation(line: 194, column: 2, scope: !16765, inlinedAt: !16762)
!16767 = !DILocation(line: 194, column: 2, scope: !16768, inlinedAt: !16762)
!16768 = distinct !DILexicalBlock(scope: !16764, file: !253, line: 194, column: 2)
!16769 = !DILocalVariable(name: "key", arg: 1, scope: !16770, file: !6062, line: 84, type: !32)
!16770 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6062, file: !6062, line: 84, type: !6073, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16771)
!16771 = !{!16769}
!16772 = !DILocation(line: 0, scope: !16770, inlinedAt: !16773)
!16773 = distinct !DILocation(line: 215, column: 2, scope: !16756, inlinedAt: !16762)
!16774 = !DILocation(line: 95, column: 2, scope: !16770, inlinedAt: !16773)
!16775 = !{i64 1958284}
!16776 = !DILocation(line: 148, column: 1, scope: !16642)
!16777 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !16778, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16782)
!16778 = !DISubroutineType(types: !16779)
!16779 = !{!347, !16780}
!16780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16781, size: 32)
!16781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2453)
!16782 = !{!16783}
!16783 = !DILocalVariable(name: "node", arg: 1, scope: !16777, file: !127, line: 225, type: !16780)
!16784 = !DILocation(line: 0, scope: !16777)
!16785 = !DILocation(line: 227, column: 15, scope: !16777)
!16786 = !DILocation(line: 227, column: 20, scope: !16777)
!16787 = !DILocation(line: 227, column: 2, scope: !16777)
!16788 = distinct !DISubprogram(name: "elapsed", scope: !2476, file: !2476, line: 62, type: !16789, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !2002)
!16789 = !DISubroutineType(types: !16790)
!16790 = !{!745}
!16791 = !DILocation(line: 64, column: 9, scope: !16788)
!16792 = !DILocation(line: 64, column: 28, scope: !16788)
!16793 = !DILocation(line: 64, column: 35, scope: !16788)
!16794 = !DILocation(line: 64, column: 2, scope: !16788)
!16795 = distinct !DISubprogram(name: "first", scope: !2476, file: !2476, line: 39, type: !16796, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16798)
!16796 = !DISubroutineType(types: !16797)
!16797 = !{!2449}
!16798 = !{!16799}
!16799 = !DILocalVariable(name: "t", scope: !16795, file: !2476, line: 41, type: !16800)
!16800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!16801 = !DILocation(line: 41, column: 19, scope: !16795)
!16802 = !DILocation(line: 0, scope: !16795)
!16803 = !DILocation(line: 43, column: 9, scope: !16795)
!16804 = !DILocation(line: 43, column: 2, scope: !16795)
!16805 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !16806, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16808)
!16806 = !DISubroutineType(types: !16807)
!16807 = !{null, !16800, !16800}
!16808 = !{!16809, !16810, !16811}
!16809 = !DILocalVariable(name: "successor", arg: 1, scope: !16805, file: !127, line: 443, type: !16800)
!16810 = !DILocalVariable(name: "node", arg: 2, scope: !16805, file: !127, line: 443, type: !16800)
!16811 = !DILocalVariable(name: "prev", scope: !16805, file: !127, line: 445, type: !16812)
!16812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16800)
!16813 = !DILocation(line: 0, scope: !16805)
!16814 = !DILocation(line: 445, column: 39, scope: !16805)
!16815 = !DILocation(line: 447, column: 8, scope: !16805)
!16816 = !DILocation(line: 447, column: 13, scope: !16805)
!16817 = !DILocation(line: 448, column: 8, scope: !16805)
!16818 = !DILocation(line: 448, column: 13, scope: !16805)
!16819 = !DILocation(line: 449, column: 8, scope: !16805)
!16820 = !DILocation(line: 449, column: 13, scope: !16805)
!16821 = !DILocation(line: 450, column: 18, scope: !16805)
!16822 = !DILocation(line: 451, column: 1, scope: !16805)
!16823 = distinct !DISubprogram(name: "next", scope: !2476, file: !2476, line: 46, type: !16824, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16826)
!16824 = !DISubroutineType(types: !16825)
!16825 = !{!2449, !2449}
!16826 = !{!16827, !16828}
!16827 = !DILocalVariable(name: "t", arg: 1, scope: !16823, file: !2476, line: 46, type: !2449)
!16828 = !DILocalVariable(name: "n", scope: !16823, file: !2476, line: 48, type: !16800)
!16829 = !DILocation(line: 0, scope: !16823)
!16830 = !DILocation(line: 48, column: 58, scope: !16823)
!16831 = !DILocation(line: 48, column: 19, scope: !16823)
!16832 = !DILocation(line: 50, column: 9, scope: !16823)
!16833 = !DILocation(line: 50, column: 2, scope: !16823)
!16834 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !16835, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16838)
!16835 = !DISubroutineType(types: !16836)
!16836 = !{null, !16837, !16800}
!16837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!16838 = !{!16839, !16840, !16841}
!16839 = !DILocalVariable(name: "list", arg: 1, scope: !16834, file: !127, line: 404, type: !16837)
!16840 = !DILocalVariable(name: "node", arg: 2, scope: !16834, file: !127, line: 404, type: !16800)
!16841 = !DILocalVariable(name: "tail", scope: !16834, file: !127, line: 406, type: !16812)
!16842 = !DILocation(line: 0, scope: !16834)
!16843 = !DILocation(line: 406, column: 34, scope: !16834)
!16844 = !DILocation(line: 408, column: 8, scope: !16834)
!16845 = !DILocation(line: 408, column: 13, scope: !16834)
!16846 = !DILocation(line: 409, column: 8, scope: !16834)
!16847 = !DILocation(line: 409, column: 13, scope: !16834)
!16848 = !DILocation(line: 411, column: 8, scope: !16834)
!16849 = !DILocation(line: 411, column: 13, scope: !16834)
!16850 = !DILocation(line: 412, column: 13, scope: !16834)
!16851 = !DILocation(line: 413, column: 1, scope: !16834)
!16852 = distinct !DISubprogram(name: "next_timeout", scope: !2476, file: !2476, line: 67, type: !16789, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16853)
!16853 = !{!16854, !16855, !16856}
!16854 = !DILocalVariable(name: "to", scope: !16852, file: !2476, line: 69, type: !2449)
!16855 = !DILocalVariable(name: "ticks_elapsed", scope: !16852, file: !2476, line: 70, type: !745)
!16856 = !DILocalVariable(name: "ret", scope: !16852, file: !2476, line: 71, type: !745)
!16857 = !DILocation(line: 69, column: 24, scope: !16852)
!16858 = !DILocation(line: 0, scope: !16852)
!16859 = !DILocation(line: 70, column: 26, scope: !16852)
!16860 = !DILocation(line: 73, column: 10, scope: !16861)
!16861 = distinct !DILexicalBlock(scope: !16852, file: !2476, line: 73, column: 6)
!16862 = !DILocation(line: 73, column: 19, scope: !16861)
!16863 = !DILocation(line: 74, column: 21, scope: !16861)
!16864 = !DILocation(line: 74, column: 30, scope: !16861)
!16865 = !DILocation(line: 74, column: 28, scope: !16861)
!16866 = !DILocation(line: 74, column: 45, scope: !16861)
!16867 = !DILocation(line: 73, column: 6, scope: !16852)
!16868 = !DILocation(line: 77, column: 9, scope: !16869)
!16869 = distinct !DILexicalBlock(scope: !16861, file: !2476, line: 76, column: 9)
!16870 = !DILocation(line: 0, scope: !16861)
!16871 = !DILocation(line: 81, column: 20, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16852, file: !2476, line: 81, column: 6)
!16873 = !DILocation(line: 81, column: 6, scope: !16872)
!16874 = !DILocation(line: 81, column: 32, scope: !16872)
!16875 = !DILocation(line: 85, column: 2, scope: !16852)
!16876 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !16877, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16879)
!16877 = !DISubroutineType(types: !16878)
!16878 = !{!16800, !16837, !16800}
!16879 = !{!16880, !16881}
!16880 = !DILocalVariable(name: "list", arg: 1, scope: !16876, file: !127, line: 341, type: !16837)
!16881 = !DILocalVariable(name: "node", arg: 2, scope: !16876, file: !127, line: 342, type: !16800)
!16882 = !DILocation(line: 0, scope: !16876)
!16883 = !DILocation(line: 344, column: 15, scope: !16876)
!16884 = !DILocation(line: 344, column: 9, scope: !16876)
!16885 = !DILocation(line: 344, column: 26, scope: !16876)
!16886 = !DILocation(line: 344, column: 2, scope: !16876)
!16887 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !16877, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16888)
!16888 = !{!16889, !16890}
!16889 = !DILocalVariable(name: "list", arg: 1, scope: !16887, file: !127, line: 325, type: !16837)
!16890 = !DILocalVariable(name: "node", arg: 2, scope: !16887, file: !127, line: 326, type: !16800)
!16891 = !DILocation(line: 0, scope: !16887)
!16892 = !DILocation(line: 328, column: 24, scope: !16887)
!16893 = !DILocation(line: 328, column: 15, scope: !16887)
!16894 = !DILocation(line: 328, column: 9, scope: !16887)
!16895 = !DILocation(line: 328, column: 45, scope: !16887)
!16896 = !DILocation(line: 328, column: 2, scope: !16887)
!16897 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !16898, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16900)
!16898 = !DISubroutineType(types: !16899)
!16899 = !{!16800, !16837}
!16900 = !{!16901}
!16901 = !DILocalVariable(name: "list", arg: 1, scope: !16897, file: !127, line: 294, type: !16837)
!16902 = !DILocation(line: 0, scope: !16897)
!16903 = !DILocation(line: 296, column: 9, scope: !16897)
!16904 = !DILocation(line: 296, column: 2, scope: !16897)
!16905 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !16906, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16908)
!16906 = !DISubroutineType(types: !16907)
!16907 = !{!347, !16837}
!16908 = !{!16909}
!16909 = !DILocalVariable(name: "list", arg: 1, scope: !16905, file: !127, line: 266, type: !16837)
!16910 = !DILocation(line: 0, scope: !16905)
!16911 = !DILocation(line: 268, column: 15, scope: !16905)
!16912 = !DILocation(line: 268, column: 20, scope: !16905)
!16913 = !DILocation(line: 268, column: 2, scope: !16905)
!16914 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2476, file: !2476, line: 150, type: !16915, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16917)
!16915 = !DISubroutineType(types: !16916)
!16916 = !{!109, !2449}
!16917 = !{!16918, !16919, !16920, !16922}
!16918 = !DILocalVariable(name: "to", arg: 1, scope: !16914, file: !2476, line: 150, type: !2449)
!16919 = !DILocalVariable(name: "ret", scope: !16914, file: !2476, line: 152, type: !109)
!16920 = !DILocalVariable(name: "__i", scope: !16921, file: !2476, line: 154, type: !16655)
!16921 = distinct !DILexicalBlock(scope: !16914, file: !2476, line: 154, column: 2)
!16922 = !DILocalVariable(name: "__key", scope: !16921, file: !2476, line: 154, type: !16655)
!16923 = !DILocation(line: 0, scope: !16914)
!16924 = !DILocation(line: 0, scope: !16921)
!16925 = !DILocation(line: 0, scope: !16683, inlinedAt: !16926)
!16926 = distinct !DILocation(line: 154, column: 2, scope: !16921)
!16927 = !DILocation(line: 55, column: 2, scope: !16692, inlinedAt: !16928)
!16928 = distinct !DILocation(line: 145, column: 10, scope: !16683, inlinedAt: !16926)
!16929 = !DILocation(line: 0, scope: !16692, inlinedAt: !16928)
!16930 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !16926)
!16931 = !DILocation(line: 148, column: 2, scope: !16701, inlinedAt: !16926)
!16932 = !DILocation(line: 148, column: 2, scope: !16704, inlinedAt: !16926)
!16933 = !DILocation(line: 160, column: 2, scope: !16683, inlinedAt: !16926)
!16934 = !DILocation(line: 155, column: 7, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16936, file: !2476, line: 155, column: 7)
!16936 = distinct !DILexicalBlock(scope: !16937, file: !2476, line: 154, column: 24)
!16937 = distinct !DILexicalBlock(scope: !16921, file: !2476, line: 154, column: 2)
!16938 = !DILocation(line: 155, column: 7, scope: !16936)
!16939 = !DILocation(line: 156, column: 4, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16935, file: !2476, line: 155, column: 39)
!16941 = !DILocation(line: 158, column: 3, scope: !16940)
!16942 = !DILocation(line: 0, scope: !16756, inlinedAt: !16943)
!16943 = distinct !DILocation(line: 154, column: 2, scope: !16937)
!16944 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !16943)
!16945 = !DILocation(line: 194, column: 2, scope: !16765, inlinedAt: !16943)
!16946 = !DILocation(line: 194, column: 2, scope: !16768, inlinedAt: !16943)
!16947 = !DILocation(line: 0, scope: !16770, inlinedAt: !16948)
!16948 = distinct !DILocation(line: 215, column: 2, scope: !16756, inlinedAt: !16943)
!16949 = !DILocation(line: 95, column: 2, scope: !16770, inlinedAt: !16948)
!16950 = !DILocation(line: 161, column: 2, scope: !16914)
!16951 = distinct !DISubprogram(name: "remove_timeout", scope: !2476, file: !2476, line: 53, type: !2470, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16952)
!16952 = !{!16953}
!16953 = !DILocalVariable(name: "t", arg: 1, scope: !16951, file: !2476, line: 53, type: !2449)
!16954 = !DILocation(line: 0, scope: !16951)
!16955 = !DILocation(line: 55, column: 6, scope: !16956)
!16956 = distinct !DILexicalBlock(scope: !16951, file: !2476, line: 55, column: 6)
!16957 = !DILocation(line: 55, column: 14, scope: !16956)
!16958 = !DILocation(line: 55, column: 6, scope: !16951)
!16959 = !DILocation(line: 56, column: 25, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16956, file: !2476, line: 55, column: 23)
!16961 = !DILocation(line: 56, column: 12, scope: !16960)
!16962 = !DILocation(line: 56, column: 19, scope: !16960)
!16963 = !DILocation(line: 57, column: 2, scope: !16960)
!16964 = !DILocation(line: 59, column: 23, scope: !16951)
!16965 = !DILocation(line: 59, column: 2, scope: !16951)
!16966 = !DILocation(line: 60, column: 1, scope: !16951)
!16967 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !16968, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16970)
!16968 = !DISubroutineType(types: !16969)
!16969 = !{null, !16800}
!16970 = !{!16971, !16972, !16973}
!16971 = !DILocalVariable(name: "node", arg: 1, scope: !16967, file: !127, line: 496, type: !16800)
!16972 = !DILocalVariable(name: "prev", scope: !16967, file: !127, line: 498, type: !16812)
!16973 = !DILocalVariable(name: "next", scope: !16967, file: !127, line: 499, type: !16812)
!16974 = !DILocation(line: 0, scope: !16967)
!16975 = !DILocation(line: 498, column: 34, scope: !16967)
!16976 = !DILocation(line: 499, column: 34, scope: !16967)
!16977 = !DILocation(line: 501, column: 8, scope: !16967)
!16978 = !DILocation(line: 501, column: 13, scope: !16967)
!16979 = !DILocation(line: 502, column: 8, scope: !16967)
!16980 = !DILocation(line: 502, column: 13, scope: !16967)
!16981 = !DILocation(line: 503, column: 2, scope: !16967)
!16982 = !DILocation(line: 504, column: 1, scope: !16967)
!16983 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !16968, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16984)
!16984 = !{!16985}
!16985 = !DILocalVariable(name: "node", arg: 1, scope: !16983, file: !127, line: 211, type: !16800)
!16986 = !DILocation(line: 0, scope: !16983)
!16987 = !DILocation(line: 213, column: 8, scope: !16983)
!16988 = !DILocation(line: 213, column: 13, scope: !16983)
!16989 = !DILocation(line: 214, column: 8, scope: !16983)
!16990 = !DILocation(line: 214, column: 13, scope: !16983)
!16991 = !DILocation(line: 215, column: 1, scope: !16983)
!16992 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2476, file: !2476, line: 183, type: !16993, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !16997)
!16993 = !DISubroutineType(types: !16994)
!16994 = !{!103, !16995}
!16995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16996, size: 32)
!16996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2450)
!16997 = !{!16998, !16999, !17000, !17002}
!16998 = !DILocalVariable(name: "timeout", arg: 1, scope: !16992, file: !2476, line: 183, type: !16995)
!16999 = !DILocalVariable(name: "ticks", scope: !16992, file: !2476, line: 185, type: !103)
!17000 = !DILocalVariable(name: "__i", scope: !17001, file: !2476, line: 187, type: !16655)
!17001 = distinct !DILexicalBlock(scope: !16992, file: !2476, line: 187, column: 2)
!17002 = !DILocalVariable(name: "__key", scope: !17001, file: !2476, line: 187, type: !16655)
!17003 = !DILocation(line: 0, scope: !16992)
!17004 = !DILocation(line: 0, scope: !17001)
!17005 = !DILocation(line: 0, scope: !16683, inlinedAt: !17006)
!17006 = distinct !DILocation(line: 187, column: 2, scope: !17001)
!17007 = !DILocation(line: 55, column: 2, scope: !16692, inlinedAt: !17008)
!17008 = distinct !DILocation(line: 145, column: 10, scope: !16683, inlinedAt: !17006)
!17009 = !DILocation(line: 0, scope: !16692, inlinedAt: !17008)
!17010 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17006)
!17011 = !DILocation(line: 148, column: 2, scope: !16701, inlinedAt: !17006)
!17012 = !DILocation(line: 148, column: 2, scope: !16704, inlinedAt: !17006)
!17013 = !DILocation(line: 160, column: 2, scope: !16683, inlinedAt: !17006)
!17014 = !DILocation(line: 188, column: 11, scope: !17015)
!17015 = distinct !DILexicalBlock(scope: !17016, file: !2476, line: 187, column: 24)
!17016 = distinct !DILexicalBlock(scope: !17001, file: !2476, line: 187, column: 2)
!17017 = !DILocation(line: 0, scope: !16756, inlinedAt: !17018)
!17018 = distinct !DILocation(line: 187, column: 2, scope: !17016)
!17019 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17018)
!17020 = !DILocation(line: 194, column: 2, scope: !16765, inlinedAt: !17018)
!17021 = !DILocation(line: 194, column: 2, scope: !16768, inlinedAt: !17018)
!17022 = !DILocation(line: 0, scope: !16770, inlinedAt: !17023)
!17023 = distinct !DILocation(line: 215, column: 2, scope: !16756, inlinedAt: !17018)
!17024 = !DILocation(line: 95, column: 2, scope: !16770, inlinedAt: !17023)
!17025 = !DILocation(line: 191, column: 2, scope: !16992)
!17026 = distinct !DISubprogram(name: "timeout_rem", scope: !2476, file: !2476, line: 165, type: !16993, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !17027)
!17027 = !{!17028, !17029, !17030}
!17028 = !DILocalVariable(name: "timeout", arg: 1, scope: !17026, file: !2476, line: 165, type: !16995)
!17029 = !DILocalVariable(name: "ticks", scope: !17026, file: !2476, line: 167, type: !103)
!17030 = !DILocalVariable(name: "t", scope: !17031, file: !2476, line: 173, type: !2449)
!17031 = distinct !DILexicalBlock(scope: !17026, file: !2476, line: 173, column: 2)
!17032 = !DILocation(line: 0, scope: !17026)
!17033 = !DILocation(line: 169, column: 6, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !17026, file: !2476, line: 169, column: 6)
!17035 = !DILocation(line: 169, column: 6, scope: !17026)
!17036 = !DILocation(line: 173, column: 28, scope: !17031)
!17037 = !DILocation(line: 0, scope: !17031)
!17038 = !DILocation(line: 173, column: 39, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17031, file: !2476, line: 173, column: 2)
!17040 = !DILocation(line: 173, column: 2, scope: !17031)
!17041 = !DILocation(line: 174, column: 15, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !17039, file: !2476, line: 173, column: 61)
!17043 = !DILocation(line: 174, column: 9, scope: !17042)
!17044 = !DILocation(line: 175, column: 15, scope: !17045)
!17045 = distinct !DILexicalBlock(scope: !17042, file: !2476, line: 175, column: 7)
!17046 = !DILocation(line: 175, column: 7, scope: !17042)
!17047 = !DILocation(line: 173, column: 52, scope: !17039)
!17048 = distinct !{!17048, !17040, !17049}
!17049 = !DILocation(line: 178, column: 2, scope: !17031)
!17050 = !DILocation(line: 180, column: 17, scope: !17026)
!17051 = !DILocation(line: 180, column: 15, scope: !17026)
!17052 = !DILocation(line: 180, column: 2, scope: !17026)
!17053 = !DILocation(line: 181, column: 1, scope: !17026)
!17054 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13216, file: !13216, line: 35, type: !17055, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !17057)
!17055 = !DISubroutineType(types: !17056)
!17056 = !{!347, !16995}
!17057 = !{!17058}
!17058 = !DILocalVariable(name: "to", arg: 1, scope: !17054, file: !13216, line: 35, type: !16995)
!17059 = !DILocation(line: 0, scope: !17054)
!17060 = !DILocation(line: 37, column: 35, scope: !17054)
!17061 = !DILocation(line: 37, column: 10, scope: !17054)
!17062 = !DILocation(line: 37, column: 9, scope: !17054)
!17063 = !DILocation(line: 37, column: 2, scope: !17054)
!17064 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2476, file: !2476, line: 194, type: !16993, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !17065)
!17065 = !{!17066, !17067, !17068, !17070}
!17066 = !DILocalVariable(name: "timeout", arg: 1, scope: !17064, file: !2476, line: 194, type: !16995)
!17067 = !DILocalVariable(name: "ticks", scope: !17064, file: !2476, line: 196, type: !103)
!17068 = !DILocalVariable(name: "__i", scope: !17069, file: !2476, line: 198, type: !16655)
!17069 = distinct !DILexicalBlock(scope: !17064, file: !2476, line: 198, column: 2)
!17070 = !DILocalVariable(name: "__key", scope: !17069, file: !2476, line: 198, type: !16655)
!17071 = !DILocation(line: 0, scope: !17064)
!17072 = !DILocation(line: 0, scope: !17069)
!17073 = !DILocation(line: 0, scope: !16683, inlinedAt: !17074)
!17074 = distinct !DILocation(line: 198, column: 2, scope: !17069)
!17075 = !DILocation(line: 55, column: 2, scope: !16692, inlinedAt: !17076)
!17076 = distinct !DILocation(line: 145, column: 10, scope: !16683, inlinedAt: !17074)
!17077 = !DILocation(line: 0, scope: !16692, inlinedAt: !17076)
!17078 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17074)
!17079 = !DILocation(line: 148, column: 2, scope: !16701, inlinedAt: !17074)
!17080 = !DILocation(line: 148, column: 2, scope: !16704, inlinedAt: !17074)
!17081 = !DILocation(line: 160, column: 2, scope: !16683, inlinedAt: !17074)
!17082 = !DILocation(line: 199, column: 11, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17084, file: !2476, line: 198, column: 24)
!17084 = distinct !DILexicalBlock(scope: !17069, file: !2476, line: 198, column: 2)
!17085 = !DILocation(line: 199, column: 23, scope: !17083)
!17086 = !DILocation(line: 0, scope: !16756, inlinedAt: !17087)
!17087 = distinct !DILocation(line: 198, column: 2, scope: !17084)
!17088 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17087)
!17089 = !DILocation(line: 194, column: 2, scope: !16765, inlinedAt: !17087)
!17090 = !DILocation(line: 194, column: 2, scope: !16768, inlinedAt: !17087)
!17091 = !DILocation(line: 0, scope: !16770, inlinedAt: !17092)
!17092 = distinct !DILocation(line: 215, column: 2, scope: !16756, inlinedAt: !17087)
!17093 = !DILocation(line: 95, column: 2, scope: !16770, inlinedAt: !17092)
!17094 = !DILocation(line: 199, column: 21, scope: !17083)
!17095 = !DILocation(line: 202, column: 2, scope: !17064)
!17096 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2476, file: !2476, line: 205, type: !16789, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !17097)
!17097 = !{!17098, !17099, !17101}
!17098 = !DILocalVariable(name: "ret", scope: !17096, file: !2476, line: 207, type: !745)
!17099 = !DILocalVariable(name: "__i", scope: !17100, file: !2476, line: 209, type: !16655)
!17100 = distinct !DILexicalBlock(scope: !17096, file: !2476, line: 209, column: 2)
!17101 = !DILocalVariable(name: "__key", scope: !17100, file: !2476, line: 209, type: !16655)
!17102 = !DILocation(line: 0, scope: !17096)
!17103 = !DILocation(line: 0, scope: !17100)
!17104 = !DILocation(line: 0, scope: !16683, inlinedAt: !17105)
!17105 = distinct !DILocation(line: 209, column: 2, scope: !17100)
!17106 = !DILocation(line: 55, column: 2, scope: !16692, inlinedAt: !17107)
!17107 = distinct !DILocation(line: 145, column: 10, scope: !16683, inlinedAt: !17105)
!17108 = !DILocation(line: 0, scope: !16692, inlinedAt: !17107)
!17109 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17105)
!17110 = !DILocation(line: 148, column: 2, scope: !16701, inlinedAt: !17105)
!17111 = !DILocation(line: 148, column: 2, scope: !16704, inlinedAt: !17105)
!17112 = !DILocation(line: 160, column: 2, scope: !16683, inlinedAt: !17105)
!17113 = !DILocation(line: 210, column: 9, scope: !17114)
!17114 = distinct !DILexicalBlock(scope: !17115, file: !2476, line: 209, column: 24)
!17115 = distinct !DILexicalBlock(scope: !17100, file: !2476, line: 209, column: 2)
!17116 = !DILocation(line: 0, scope: !16756, inlinedAt: !17117)
!17117 = distinct !DILocation(line: 209, column: 2, scope: !17115)
!17118 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17117)
!17119 = !DILocation(line: 194, column: 2, scope: !16765, inlinedAt: !17117)
!17120 = !DILocation(line: 194, column: 2, scope: !16768, inlinedAt: !17117)
!17121 = !DILocation(line: 0, scope: !16770, inlinedAt: !17122)
!17122 = distinct !DILocation(line: 215, column: 2, scope: !16756, inlinedAt: !17117)
!17123 = !DILocation(line: 95, column: 2, scope: !16770, inlinedAt: !17122)
!17124 = !DILocation(line: 212, column: 2, scope: !17096)
!17125 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2476, file: !2476, line: 215, type: !10683, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !17126)
!17126 = !{!17127, !17128, !17129, !17131, !17132, !17135, !17136}
!17127 = !DILocalVariable(name: "ticks", arg: 1, scope: !17125, file: !2476, line: 215, type: !745)
!17128 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17125, file: !2476, line: 215, type: !347)
!17129 = !DILocalVariable(name: "__i", scope: !17130, file: !2476, line: 217, type: !16655)
!17130 = distinct !DILexicalBlock(scope: !17125, file: !2476, line: 217, column: 2)
!17131 = !DILocalVariable(name: "__key", scope: !17130, file: !2476, line: 217, type: !16655)
!17132 = !DILocalVariable(name: "next_to", scope: !17133, file: !2476, line: 218, type: !109)
!17133 = distinct !DILexicalBlock(scope: !17134, file: !2476, line: 217, column: 24)
!17134 = distinct !DILexicalBlock(scope: !17130, file: !2476, line: 217, column: 2)
!17135 = !DILocalVariable(name: "sooner", scope: !17133, file: !2476, line: 219, type: !347)
!17136 = !DILocalVariable(name: "imminent", scope: !17133, file: !2476, line: 221, type: !347)
!17137 = !DILocation(line: 0, scope: !17125)
!17138 = !DILocation(line: 0, scope: !17130)
!17139 = !DILocation(line: 0, scope: !16683, inlinedAt: !17140)
!17140 = distinct !DILocation(line: 217, column: 2, scope: !17130)
!17141 = !DILocation(line: 55, column: 2, scope: !16692, inlinedAt: !17142)
!17142 = distinct !DILocation(line: 145, column: 10, scope: !16683, inlinedAt: !17140)
!17143 = !DILocation(line: 0, scope: !16692, inlinedAt: !17142)
!17144 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17140)
!17145 = !DILocation(line: 148, column: 2, scope: !16701, inlinedAt: !17140)
!17146 = !DILocation(line: 148, column: 2, scope: !16704, inlinedAt: !17140)
!17147 = !DILocation(line: 160, column: 2, scope: !16683, inlinedAt: !17140)
!17148 = !DILocation(line: 218, column: 17, scope: !17133)
!17149 = !DILocation(line: 0, scope: !17133)
!17150 = !DILocation(line: 221, column: 27, scope: !17133)
!17151 = !DILocation(line: 233, column: 17, scope: !17152)
!17152 = distinct !DILexicalBlock(scope: !17133, file: !2476, line: 233, column: 7)
!17153 = !DILocation(line: 234, column: 26, scope: !17154)
!17154 = distinct !DILexicalBlock(scope: !17152, file: !2476, line: 233, column: 56)
!17155 = !DILocation(line: 234, column: 4, scope: !17154)
!17156 = !DILocation(line: 235, column: 3, scope: !17154)
!17157 = !DILocation(line: 0, scope: !16756, inlinedAt: !17158)
!17158 = distinct !DILocation(line: 217, column: 2, scope: !17134)
!17159 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17158)
!17160 = !DILocation(line: 194, column: 2, scope: !16765, inlinedAt: !17158)
!17161 = !DILocation(line: 194, column: 2, scope: !16768, inlinedAt: !17158)
!17162 = !DILocation(line: 0, scope: !16770, inlinedAt: !17163)
!17163 = distinct !DILocation(line: 215, column: 2, scope: !16756, inlinedAt: !17158)
!17164 = !DILocation(line: 95, column: 2, scope: !16770, inlinedAt: !17163)
!17165 = !DILocation(line: 237, column: 1, scope: !17125)
!17166 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2476, file: !2476, line: 239, type: !17167, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !17169)
!17167 = !DISubroutineType(types: !17168)
!17168 = !{null, !745}
!17169 = !{!17170, !17171, !17172, !17174}
!17170 = !DILocalVariable(name: "ticks", arg: 1, scope: !17166, file: !2476, line: 239, type: !745)
!17171 = !DILocalVariable(name: "key", scope: !17166, file: !2476, line: 245, type: !16655)
!17172 = !DILocalVariable(name: "t", scope: !17173, file: !2476, line: 262, type: !2449)
!17173 = distinct !DILexicalBlock(scope: !17166, file: !2476, line: 261, column: 67)
!17174 = !DILocalVariable(name: "dt", scope: !17173, file: !2476, line: 263, type: !109)
!17175 = !DILocation(line: 0, scope: !17166)
!17176 = !DILocation(line: 242, column: 2, scope: !17166)
!17177 = !DILocation(line: 0, scope: !16683, inlinedAt: !17178)
!17178 = distinct !DILocation(line: 245, column: 25, scope: !17166)
!17179 = !DILocation(line: 55, column: 2, scope: !16692, inlinedAt: !17180)
!17180 = distinct !DILocation(line: 145, column: 10, scope: !16683, inlinedAt: !17178)
!17181 = !DILocation(line: 0, scope: !16692, inlinedAt: !17180)
!17182 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17178)
!17183 = !DILocation(line: 148, column: 2, scope: !16701, inlinedAt: !17178)
!17184 = !DILocation(line: 148, column: 2, scope: !16704, inlinedAt: !17178)
!17185 = !DILocation(line: 160, column: 2, scope: !16683, inlinedAt: !17178)
!17186 = !DILocation(line: 261, column: 9, scope: !17166)
!17187 = !DILocation(line: 261, column: 17, scope: !17166)
!17188 = !DILocation(line: 261, column: 25, scope: !17166)
!17189 = !DILocation(line: 261, column: 37, scope: !17166)
!17190 = !DILocation(line: 261, column: 47, scope: !17166)
!17191 = !DILocation(line: 261, column: 44, scope: !17166)
!17192 = !DILocation(line: 261, column: 2, scope: !17166)
!17193 = !DILocation(line: 0, scope: !17173)
!17194 = !DILocation(line: 263, column: 12, scope: !17173)
!17195 = !DILocation(line: 265, column: 16, scope: !17173)
!17196 = !DILocation(line: 265, column: 13, scope: !17173)
!17197 = !DILocation(line: 266, column: 13, scope: !17173)
!17198 = !DILocation(line: 267, column: 3, scope: !17173)
!17199 = !DILocation(line: 0, scope: !16756, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 269, column: 3, scope: !17173)
!17201 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17200)
!17202 = !DILocation(line: 194, column: 2, scope: !16765, inlinedAt: !17200)
!17203 = !DILocation(line: 194, column: 2, scope: !16768, inlinedAt: !17200)
!17204 = !DILocation(line: 0, scope: !16770, inlinedAt: !17205)
!17205 = distinct !DILocation(line: 215, column: 2, scope: !16756, inlinedAt: !17200)
!17206 = !DILocation(line: 95, column: 2, scope: !16770, inlinedAt: !17205)
!17207 = !DILocation(line: 270, column: 6, scope: !17173)
!17208 = !DILocation(line: 270, column: 3, scope: !17173)
!17209 = !DILocation(line: 0, scope: !16683, inlinedAt: !17210)
!17210 = distinct !DILocation(line: 271, column: 9, scope: !17173)
!17211 = !DILocation(line: 55, column: 2, scope: !16692, inlinedAt: !17212)
!17212 = distinct !DILocation(line: 145, column: 10, scope: !16683, inlinedAt: !17210)
!17213 = !DILocation(line: 0, scope: !16692, inlinedAt: !17212)
!17214 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17210)
!17215 = !DILocation(line: 148, column: 2, scope: !16701, inlinedAt: !17210)
!17216 = !DILocation(line: 148, column: 2, scope: !16704, inlinedAt: !17210)
!17217 = !DILocation(line: 160, column: 2, scope: !16683, inlinedAt: !17210)
!17218 = !DILocation(line: 272, column: 22, scope: !17173)
!17219 = distinct !{!17219, !17192, !17220}
!17220 = !DILocation(line: 273, column: 2, scope: !17166)
!17221 = !DILocation(line: 276, column: 19, scope: !17222)
!17222 = distinct !DILexicalBlock(scope: !17223, file: !2476, line: 275, column: 23)
!17223 = distinct !DILexicalBlock(scope: !17166, file: !2476, line: 275, column: 6)
!17224 = !DILocation(line: 277, column: 2, scope: !17222)
!17225 = !DILocation(line: 279, column: 15, scope: !17166)
!17226 = !DILocation(line: 279, column: 12, scope: !17166)
!17227 = !DILocation(line: 280, column: 21, scope: !17166)
!17228 = !DILocation(line: 282, column: 24, scope: !17166)
!17229 = !DILocation(line: 282, column: 2, scope: !17166)
!17230 = !DILocation(line: 0, scope: !16756, inlinedAt: !17231)
!17231 = distinct !DILocation(line: 284, column: 2, scope: !17166)
!17232 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17231)
!17233 = !DILocation(line: 194, column: 2, scope: !16765, inlinedAt: !17231)
!17234 = !DILocation(line: 194, column: 2, scope: !16768, inlinedAt: !17231)
!17235 = !DILocation(line: 0, scope: !16770, inlinedAt: !17236)
!17236 = distinct !DILocation(line: 215, column: 2, scope: !16756, inlinedAt: !17231)
!17237 = !DILocation(line: 95, column: 2, scope: !16770, inlinedAt: !17236)
!17238 = !DILocation(line: 285, column: 1, scope: !17166)
!17239 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2476, file: !2476, line: 287, type: !17240, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !17242)
!17240 = !DISubroutineType(types: !17241)
!17241 = !{!105}
!17242 = !{!17243, !17244, !17246}
!17243 = !DILocalVariable(name: "t", scope: !17239, file: !2476, line: 289, type: !111)
!17244 = !DILocalVariable(name: "__i", scope: !17245, file: !2476, line: 291, type: !16655)
!17245 = distinct !DILexicalBlock(scope: !17239, file: !2476, line: 291, column: 2)
!17246 = !DILocalVariable(name: "__key", scope: !17245, file: !2476, line: 291, type: !16655)
!17247 = !DILocation(line: 0, scope: !17239)
!17248 = !DILocation(line: 0, scope: !17245)
!17249 = !DILocation(line: 0, scope: !16683, inlinedAt: !17250)
!17250 = distinct !DILocation(line: 291, column: 2, scope: !17245)
!17251 = !DILocation(line: 55, column: 2, scope: !16692, inlinedAt: !17252)
!17252 = distinct !DILocation(line: 145, column: 10, scope: !16683, inlinedAt: !17250)
!17253 = !DILocation(line: 0, scope: !16692, inlinedAt: !17252)
!17254 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17250)
!17255 = !DILocation(line: 148, column: 2, scope: !16701, inlinedAt: !17250)
!17256 = !DILocation(line: 148, column: 2, scope: !16704, inlinedAt: !17250)
!17257 = !DILocation(line: 160, column: 2, scope: !16683, inlinedAt: !17250)
!17258 = !DILocation(line: 292, column: 7, scope: !17259)
!17259 = distinct !DILexicalBlock(scope: !17260, file: !2476, line: 291, column: 24)
!17260 = distinct !DILexicalBlock(scope: !17245, file: !2476, line: 291, column: 2)
!17261 = !DILocation(line: 292, column: 19, scope: !17259)
!17262 = !DILocation(line: 0, scope: !16756, inlinedAt: !17263)
!17263 = distinct !DILocation(line: 291, column: 2, scope: !17260)
!17264 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17263)
!17265 = !DILocation(line: 194, column: 2, scope: !16765, inlinedAt: !17263)
!17266 = !DILocation(line: 194, column: 2, scope: !16768, inlinedAt: !17263)
!17267 = !DILocation(line: 0, scope: !16770, inlinedAt: !17268)
!17268 = distinct !DILocation(line: 215, column: 2, scope: !16756, inlinedAt: !17263)
!17269 = !DILocation(line: 95, column: 2, scope: !16770, inlinedAt: !17268)
!17270 = !DILocation(line: 292, column: 17, scope: !17259)
!17271 = !DILocation(line: 294, column: 2, scope: !17239)
!17272 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2476, file: !2476, line: 297, type: !6470, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !2002)
!17273 = !DILocation(line: 300, column: 19, scope: !17272)
!17274 = !DILocation(line: 300, column: 9, scope: !17272)
!17275 = !DILocation(line: 300, column: 2, scope: !17272)
!17276 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2476, file: !2476, line: 306, type: !17240, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !2002)
!17277 = !DILocation(line: 308, column: 9, scope: !17276)
!17278 = !DILocation(line: 308, column: 2, scope: !17276)
!17279 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2476, file: !2476, line: 319, type: !6480, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !17280)
!17280 = !{!17281, !17282, !17283, !17284}
!17281 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17279, file: !2476, line: 319, type: !110)
!17282 = !DILocalVariable(name: "start_cycles", scope: !17279, file: !2476, line: 328, type: !110)
!17283 = !DILocalVariable(name: "cycles_to_wait", scope: !17279, file: !2476, line: 331, type: !110)
!17284 = !DILocalVariable(name: "current_cycles", scope: !17285, file: !2476, line: 338, type: !110)
!17285 = distinct !DILexicalBlock(scope: !17286, file: !2476, line: 337, column: 11)
!17286 = distinct !DILexicalBlock(scope: !17287, file: !2476, line: 337, column: 2)
!17287 = distinct !DILexicalBlock(scope: !17279, file: !2476, line: 337, column: 2)
!17288 = !DILocation(line: 0, scope: !17279)
!17289 = !DILocation(line: 322, column: 19, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17279, file: !2476, line: 322, column: 6)
!17291 = !DILocation(line: 322, column: 6, scope: !17279)
!17292 = !DILocation(line: 328, column: 26, scope: !17279)
!17293 = !DILocation(line: 333, column: 43, scope: !17279)
!17294 = !DILocation(line: 337, column: 2, scope: !17279)
!17295 = !DILocation(line: 338, column: 29, scope: !17285)
!17296 = !DILocation(line: 0, scope: !17285)
!17297 = !DILocation(line: 341, column: 23, scope: !17298)
!17298 = distinct !DILexicalBlock(scope: !17285, file: !2476, line: 341, column: 7)
!17299 = !DILocation(line: 341, column: 39, scope: !17298)
!17300 = !DILocation(line: 349, column: 1, scope: !17279)
!17301 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !6470, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !2002)
!17302 = !DILocation(line: 1677, column: 9, scope: !17301)
!17303 = !DILocation(line: 1677, column: 2, scope: !17301)
!17304 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17305, file: !17305, line: 24, type: !6470, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !2002)
!17305 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17306 = !DILocation(line: 26, column: 9, scope: !17304)
!17307 = !DILocation(line: 26, column: 2, scope: !17304)
!17308 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2476, file: !2476, line: 364, type: !17309, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2446, retainedNodes: !17311)
!17309 = !DISubroutineType(types: !17310)
!17310 = !{!111, !16645}
!17311 = !{!17312, !17313}
!17312 = !DILocalVariable(name: "timeout", arg: 1, scope: !17308, file: !2476, line: 364, type: !16645)
!17313 = !DILocalVariable(name: "dt", scope: !17308, file: !2476, line: 366, type: !103)
!17314 = !DILocation(line: 0, scope: !17308)
!17315 = !DILocation(line: 368, column: 6, scope: !17308)
!17316 = !DILocation(line: 371, column: 10, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17318, file: !2476, line: 370, column: 47)
!17318 = distinct !DILexicalBlock(scope: !17319, file: !2476, line: 370, column: 13)
!17319 = distinct !DILexicalBlock(scope: !17308, file: !2476, line: 368, column: 6)
!17320 = !DILocation(line: 371, column: 3, scope: !17317)
!17321 = !DILocation(line: 376, column: 58, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !17323, file: !2476, line: 376, column: 7)
!17323 = distinct !DILexicalBlock(scope: !17318, file: !2476, line: 372, column: 9)
!17324 = !DILocation(line: 376, column: 7, scope: !17323)
!17325 = !DILocation(line: 376, column: 43, scope: !17322)
!17326 = !DILocation(line: 377, column: 4, scope: !17327)
!17327 = distinct !DILexicalBlock(scope: !17322, file: !2476, line: 376, column: 64)
!17328 = !DILocation(line: 379, column: 10, scope: !17323)
!17329 = !DILocation(line: 379, column: 33, scope: !17323)
!17330 = !DILocation(line: 379, column: 31, scope: !17323)
!17331 = !DILocation(line: 379, column: 3, scope: !17323)
!17332 = !DILocation(line: 0, scope: !17319)
!17333 = !DILocation(line: 381, column: 1, scope: !17308)
!17334 = distinct !DISubprogram(name: "boot_banner", scope: !17335, file: !17335, line: 26, type: !3070, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3056, retainedNodes: !2002)
!17335 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17336 = !DILocation(line: 34, column: 2, scope: !17334)
!17337 = !DILocation(line: 36, column: 1, scope: !17334)
