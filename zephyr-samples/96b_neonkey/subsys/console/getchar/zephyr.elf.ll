; ModuleID = 'build/96b_neonkey/getchar/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.tty_serial = type { %struct.device*, %struct.k_sem, i8*, i32, i16, i16, i32, %struct.k_sem, i8*, i32, i16, i16, i32 }
%struct.k_sem = type { %union.anon, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.k_spinlock = type {}
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232492 to i8*), void (i8*)* inttoptr (i32 134230079 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232492 to i8*), void (i8*)* inttoptr (i32 134230059 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232492 to i8*), void (i8*)* inttoptr (i32 134230049 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232492 to i8*), void (i8*)* inttoptr (i32 134230149 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232492 to i8*), void (i8*)* inttoptr (i32 134230139 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232492 to i8*), void (i8*)* inttoptr (i32 134230129 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232492 to i8*), void (i8*)* inttoptr (i32 134230119 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232492 to i8*), void (i8*)* inttoptr (i32 134230109 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232492 to i8*), void (i8*)* inttoptr (i32 134230099 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232708 to i8*), void (i8*)* inttoptr (i32 134231427 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232492 to i8*), void (i8*)* inttoptr (i32 134230089 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232492 to i8*), void (i8*)* inttoptr (i32 134230069 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [56 x i8] c"Start typing characters to see their hex codes printed\0A\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"char: [0x%x] %c\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [39 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@console_serial = internal global %struct.tty_serial zeroinitializer, align 4, !dbg !195
@console_txbuf = internal global [16 x i8] zeroinitializer, align 1, !dbg !292
@console_rxbuf = internal global [16 x i8] zeroinitializer, align 1, !dbg !286
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !339
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !347
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !488
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !524
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.33, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !534
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !539
@.str.32 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.33 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !559
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !731
@.str.34 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !693
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !676
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !649
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !665
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !695
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !708
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !710
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !712
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !714
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !716
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !718
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !720
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !722
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !724
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !726
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !736
@.str.36 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !763
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !860
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !849
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@debug_hook_in = internal unnamed_addr global i32 (i8)* null, align 4, !dbg !901
@debug_hook_out = internal unnamed_addr global i32 (i8)* @debug_hook_out_nop, align 4, !dbg !1052
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1002
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1044
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1046
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !995
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1062
@esc_state = internal global i32 0, align 4, !dbg !1087
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1095
@end = internal unnamed_addr global i8 0, align 1, !dbg !1097
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1091
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1093
@.str.59 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.58 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !756
@.str.63 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1103
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1379
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1349
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1335
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1280
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !754
@.str.1.64 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1381
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1353
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1351
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1297
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !752
@.str.2.65 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1394
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1357
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1355
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1303
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !750
@.str.3.66 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1396
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1361
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1359
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1309
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !748
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1398
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1365
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1363
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1315
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !746
@.str.5.67 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1400
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1369
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1367
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1321
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !744
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1402
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1373
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1371
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1327
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !742
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1404
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1377
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1375
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1333
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !758
@.str.73 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1406
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1642
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1592
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1644
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1583
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1585
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1594
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1602
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1625
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1628
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1631
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !833
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1670
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1779
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1781
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1777
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1748
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1783
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1278
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.64, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1295
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.65, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1301
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.66, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1307
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1313
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1319
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1325
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1331
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1873
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1915
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1918
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1922
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1928
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2137
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2146
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2153
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2158
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.122 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.127, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.128, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.129, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.130, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.131, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.125, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.132, i32 0, i32 0)], align 4, !dbg !2186
@.str.126 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.127 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.128 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.129 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.130 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.131 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.125 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.132 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2298
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2311
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2334
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2442
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2445
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2447
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2151
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2148
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2449
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2485
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2015
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2483
@.str.202 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2488
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3218 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !3222, !srcloc !3223
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !3224, !srcloc !3225
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !3226, !srcloc !3227
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !3228, !srcloc !3229
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3230, !srcloc !3231
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !3232, !srcloc !3233
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !3234, !srcloc !3235
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !3236, !srcloc !3237
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !3238, !srcloc !3239
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !3240, !srcloc !3241
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !3242, !srcloc !3243
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !3244, !srcloc !3245
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !3246, !srcloc !3247
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !3248, !srcloc !3249
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !3250, !srcloc !3251
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !3252, !srcloc !3253
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !3254, !srcloc !3255
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !3256, !srcloc !3257
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3258, !srcloc !3259
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !3260, !srcloc !3261
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !3262, !srcloc !3263
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3264, !srcloc !3265
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !3266, !srcloc !3267
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3268, !srcloc !3269
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3270, !srcloc !3271
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3272, !srcloc !3273
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3274, !srcloc !3275
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3276, !srcloc !3279
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3280, !srcloc !3281
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3282, !srcloc !3283
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3284, !srcloc !3285
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3286, !srcloc !3287
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3288, !srcloc !3289
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3290, !srcloc !3291
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3292, !srcloc !3293
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3294, !srcloc !3295
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3296, !srcloc !3297
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3298, !srcloc !3299
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3300, !srcloc !3301
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3302, !srcloc !3303
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3304, !srcloc !3305
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3306, !srcloc !3307
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3308, !srcloc !3309
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3310, !srcloc !3311
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3312, !srcloc !3313
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3314, !srcloc !3315
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3316, !srcloc !3317
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3326, !srcloc !3327
  ret void, !dbg !3328
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3331 {
  %1 = tail call i32 @console_init() #25, !dbg !3336
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i32 0, i32 0)) #25, !dbg !3337
  br label %2, !dbg !3338

2:                                                ; preds = %0, %2
  %3 = tail call i32 @console_getchar() #25, !dbg !3339
  %4 = and i32 %3, 255, !dbg !3340
  call void @llvm.dbg.value(metadata i32 %3, metadata !3334, metadata !DIExpression()), !dbg !3341
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 noundef %4, i32 noundef %4) #25, !dbg !3342
  br label %2, !dbg !3338, !llvm.loop !3343
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3347, metadata !DIExpression()), !dbg !3348
  ret i32 0, !dbg !3349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3350 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3354, metadata !DIExpression()), !dbg !3355
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3356
  ret void, !dbg !3357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3358 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3361
  ret i8* %1, !dbg !3362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3363 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3375, metadata !DIExpression()), !dbg !3384
  call void @llvm.dbg.value(metadata i8* %0, metadata !3374, metadata !DIExpression()), !dbg !3384
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3385
  ret void, !dbg !3387
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3392, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata i8* %1, metadata !3393, metadata !DIExpression()), !dbg !3394
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3395
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3395
  ret i32 %4, !dbg !3396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3397 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3409, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3406, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i8* %1, metadata !3407, metadata !DIExpression()), !dbg !3410
  call void @llvm.dbg.value(metadata i8* %2, metadata !3408, metadata !DIExpression()), !dbg !3410
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3411
  ret void, !dbg !3412
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3413 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3417, metadata !DIExpression()), !dbg !3420
  call void @llvm.dbg.value(metadata i32 %1, metadata !3418, metadata !DIExpression()), !dbg !3420
  call void @llvm.dbg.value(metadata i32 0, metadata !3419, metadata !DIExpression()), !dbg !3420
  %3 = icmp eq i32 %1, 0, !dbg !3421
  br i1 %3, label %13, label %4, !dbg !3424

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3419, metadata !DIExpression()), !dbg !3420
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3425
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3427
  %8 = load i8, i8* %7, align 1, !dbg !3427
  %9 = zext i8 %8 to i32, !dbg !3427
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3425
  %11 = add nuw i32 %5, 1, !dbg !3428
  call void @llvm.dbg.value(metadata i32 %11, metadata !3419, metadata !DIExpression()), !dbg !3420
  %12 = icmp eq i32 %11, %1, !dbg !3421
  br i1 %12, label %13, label %4, !dbg !3424, !llvm.loop !3429

13:                                               ; preds = %4, %2
  ret void, !dbg !3431
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3432 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3436, metadata !DIExpression()), !dbg !3438
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3439
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3439
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3437, metadata !DIExpression()), !dbg !3440
  call void @llvm.va_start(i8* nonnull %3), !dbg !3441
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3442
  %5 = load i32, i32* %4, align 4, !dbg !3442
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3442
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3442
  call void @llvm.va_end(i8* nonnull %3), !dbg !3443
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3444
  ret void, !dbg !3444
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3445 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3449, metadata !DIExpression()), !dbg !3454
  call void @llvm.dbg.value(metadata i32 %1, metadata !3450, metadata !DIExpression()), !dbg !3454
  call void @llvm.dbg.value(metadata i8* %2, metadata !3451, metadata !DIExpression()), !dbg !3454
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3455
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3455
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3452, metadata !DIExpression()), !dbg !3456
  call void @llvm.va_start(i8* nonnull %5), !dbg !3457
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3458
  %7 = load i32, i32* %6, align 4, !dbg !3458
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3458
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3458
  call void @llvm.dbg.value(metadata i32 %9, metadata !3453, metadata !DIExpression()), !dbg !3454
  call void @llvm.va_end(i8* nonnull %5), !dbg !3459
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3460
  ret i32 %9, !dbg !3461
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3462 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3469, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata i8* %0, metadata !3466, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata i32 %1, metadata !3467, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.value(metadata i8* %2, metadata !3468, metadata !DIExpression()), !dbg !3476
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3477
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3477
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3470, metadata !DIExpression()), !dbg !3478
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3479
  store i8* %0, i8** %7, align 4, !dbg !3479
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3479
  store i32 %1, i32* %8, align 4, !dbg !3479
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3479
  store i32 0, i32* %9, align 4, !dbg !3479
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3480
  %10 = load i32, i32* %9, align 4, !dbg !3481
  %11 = load i32, i32* %8, align 4, !dbg !3483
  %12 = icmp slt i32 %10, %11, !dbg !3484
  br i1 %12, label %13, label %15, !dbg !3485

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3486
  store i8 0, i8* %14, align 1, !dbg !3488
  br label %15, !dbg !3489

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3490
  ret i32 %10, !dbg !3491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3497, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3498, metadata !DIExpression()), !dbg !3499
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3500
  %4 = load i8*, i8** %3, align 4, !dbg !3500
  %5 = icmp eq i8* %4, null, !dbg !3502
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3503
  br i1 %5, label %12, label %8, !dbg !3504

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3505
  %10 = load i32, i32* %9, align 4, !dbg !3505
  %11 = icmp slt i32 %7, %10, !dbg !3506
  br i1 %11, label %15, label %12, !dbg !3507

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3508
  %14 = add nsw i32 %7, 1, !dbg !3510
  store i32 %14, i32* %13, align 4, !dbg !3510
  br label %25, !dbg !3511

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3512
  %17 = icmp eq i32 %7, %16, !dbg !3514
  br i1 %17, label %18, label %21, !dbg !3515

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3516
  store i32 %19, i32* %6, align 4, !dbg !3516
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3518
  store i8 0, i8* %20, align 1, !dbg !3519
  br label %25, !dbg !3520

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3521
  %23 = add nsw i32 %7, 1, !dbg !3523
  store i32 %23, i32* %6, align 4, !dbg !3523
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3524
  store i8 %22, i8* %24, align 1, !dbg !3525
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3526
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3527 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3537, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata i8* %1, metadata !3538, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata i8* %2, metadata !3539, metadata !DIExpression()), !dbg !3541
  call void @llvm.dbg.value(metadata i8* %3, metadata !3540, metadata !DIExpression()), !dbg !3541
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3542
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3543
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3544
  unreachable, !dbg !3545
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3546 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3650
  ret %struct.k_thread* %1, !dbg !3651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3657, metadata !DIExpression()), !dbg !3658
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3659, !srcloc !3661
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3662
  ret void, !dbg !3663
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3664 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3665, !srcloc !3667
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3668
  ret %struct.k_thread* %1, !dbg !3669
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3670 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3681, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8* %1, metadata !3682, metadata !DIExpression()), !dbg !3685
  %3 = icmp eq i8* %1, null, !dbg !3686
  br i1 %3, label %8, label %4, !dbg !3688

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3689
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3689
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3683, metadata !DIExpression()), !dbg !3685
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3690, !range !3691
  call void @llvm.dbg.value(metadata i32 %7, metadata !3684, metadata !DIExpression()), !dbg !3685
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3692
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3693
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3695 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3699, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i8* %1, metadata !3700, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i8* %1, metadata !3701, metadata !DIExpression()), !dbg !3703
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3704
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3702, metadata !DIExpression()), !dbg !3703
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3705
  %5 = ptrtoint i8* %4 to i32, !dbg !3706
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3706
  %7 = sub i32 %5, %6, !dbg !3706
  %8 = lshr i32 %7, 3, !dbg !3707
  ret i32 %8, !dbg !3708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3709 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3713, metadata !DIExpression()), !dbg !3718
  call void @llvm.dbg.value(metadata i32 %1, metadata !3714, metadata !DIExpression()), !dbg !3718
  call void @llvm.dbg.value(metadata i1 %2, metadata !3715, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3718
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3719
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3716, metadata !DIExpression()), !dbg !3718
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3718
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3720
  %6 = bitcast i8* %5 to i16*, !dbg !3720
  %7 = load i16, i16* %6, align 2, !dbg !3720
  %8 = and i16 %7, -2, !dbg !3724
  %9 = zext i1 %2 to i16, !dbg !3724
  %10 = or i16 %8, %9, !dbg !3724
  store i16 %10, i16* %6, align 2, !dbg !3720
  ret void, !dbg !3725
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3726 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3730, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i32 %1, metadata !3731, metadata !DIExpression()), !dbg !3732
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3733
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3735
  br i1 %4, label %7, label %5, !dbg !3736

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3737
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3739
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3740
  br label %7, !dbg !3741

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3742, !range !3744
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3745
  br i1 %9, label %13, label %10, !dbg !3746

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3747
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3749, !range !3744
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3750
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3751
  call void @llvm.dbg.value(metadata i32 %12, metadata !3731, metadata !DIExpression()), !dbg !3732
  br label %13, !dbg !3752

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3731, metadata !DIExpression()), !dbg !3732
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3753
  ret void, !dbg !3754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3755 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3759, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %1, metadata !3760, metadata !DIExpression()), !dbg !3761
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3762
  %4 = add i32 %3, %1, !dbg !3763
  ret i32 %4, !dbg !3764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3765 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3769, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %1, metadata !3770, metadata !DIExpression()), !dbg !3771
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3772
  %4 = and i32 %3, 1, !dbg !3773
  %5 = icmp ne i32 %4, 0, !dbg !3772
  ret i1 %5, !dbg !3774
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3775 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3777, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.value(metadata i32 %1, metadata !3778, metadata !DIExpression()), !dbg !3782
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3783, !range !3784
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3785
  call void @llvm.dbg.value(metadata i32 %4, metadata !3779, metadata !DIExpression()), !dbg !3786
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3787
  ret void, !dbg !3788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3789 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3793, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %1, metadata !3794, metadata !DIExpression()), !dbg !3798
  call void @llvm.dbg.value(metadata i32 %2, metadata !3795, metadata !DIExpression()), !dbg !3798
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3799
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3800
  %6 = add i32 %5, %4, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %6, metadata !3796, metadata !DIExpression()), !dbg !3798
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3802
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3803
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3804
  ret void, !dbg !3805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3806 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3808, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata i32 %1, metadata !3809, metadata !DIExpression()), !dbg !3810
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3811
  %4 = sub i32 %1, %3, !dbg !3812
  ret i32 %4, !dbg !3813
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3814 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3816, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.value(metadata i32 %1, metadata !3817, metadata !DIExpression()), !dbg !3821
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3822, !range !3784
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3823
  call void @llvm.dbg.value(metadata i32 %4, metadata !3818, metadata !DIExpression()), !dbg !3824
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3825
  ret void, !dbg !3826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3827 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3831, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata i32 %1, metadata !3832, metadata !DIExpression()), !dbg !3833
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3834
  %4 = lshr i32 %3, 1, !dbg !3835
  ret i32 %4, !dbg !3836
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3837 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3841, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i32 %1, metadata !3842, metadata !DIExpression()), !dbg !3844
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3845
  %4 = add i32 %1, 1, !dbg !3846
  %5 = sub i32 %4, %3, !dbg !3847
  call void @llvm.dbg.value(metadata i32 %5, metadata !3843, metadata !DIExpression()), !dbg !3844
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3848, !range !3849
  %7 = sub nsw i32 31, %6, !dbg !3850
  ret i32 %7, !dbg !3851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3852 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3856, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata i32 %1, metadata !3857, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata i32 %2, metadata !3858, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3859, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3865
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3866
  %5 = load i32, i32* %4, align 4, !dbg !3866
  %6 = icmp eq i32 %5, 0, !dbg !3867
  br i1 %6, label %7, label %12, !dbg !3868

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3869
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3871
  %10 = load i32, i32* %9, align 4, !dbg !3872
  %11 = or i32 %10, %8, !dbg !3872
  store i32 %11, i32* %9, align 4, !dbg !3872
  store i32 %1, i32* %4, align 4, !dbg !3873
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3874
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3875
  br label %14, !dbg !3876

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3861, metadata !DIExpression()), !dbg !3877
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3878, !range !3879
  call void @llvm.dbg.value(metadata i32 %13, metadata !3864, metadata !DIExpression()), !dbg !3877
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3880
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3881
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3882
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3883
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3885 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3887, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.value(metadata i32 %1, metadata !3888, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.value(metadata i32 %2, metadata !3889, metadata !DIExpression()), !dbg !3890
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3891
  ret void, !dbg !3892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3893 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3895, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata i32 %1, metadata !3896, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata i32 %2, metadata !3897, metadata !DIExpression()), !dbg !3898
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3899
  ret void, !dbg !3900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3901 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3903, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.value(metadata i32 %1, metadata !3904, metadata !DIExpression()), !dbg !3905
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3906
  ret i32 %3, !dbg !3907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3908 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3912, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata i32 %1, metadata !3913, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata i32 %2, metadata !3914, metadata !DIExpression()), !dbg !3917
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3918
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3915, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3916, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3917
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3916, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3917
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3919
  call void @llvm.dbg.value(metadata i8* %5, metadata !3916, metadata !DIExpression()), !dbg !3917
  %6 = bitcast i8* %5 to i16*, !dbg !3920
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3923
  %8 = load i16, i16* %7, align 2, !dbg !3923
  %9 = zext i16 %8 to i32, !dbg !3923
  ret i32 %9, !dbg !3924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3925 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3929, metadata !DIExpression()), !dbg !3930
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3931
  ret %struct.chunk_unit_t* %2, !dbg !3932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3933 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3937, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 %1, metadata !3938, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 %2, metadata !3939, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 %3, metadata !3940, metadata !DIExpression()), !dbg !3943
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3944
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3941, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3942, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3943
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3945
  call void @llvm.dbg.value(metadata i8* %6, metadata !3942, metadata !DIExpression()), !dbg !3943
  %7 = trunc i32 %3 to i16, !dbg !3946
  %8 = bitcast i8* %6 to i16*, !dbg !3949
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3950
  store i16 %7, i16* %9, align 2, !dbg !3951
  ret void, !dbg !3952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3953 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3957, metadata !DIExpression()), !dbg !3958
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3959
  ret i32 %2, !dbg !3960
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3961 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3965, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata i32 %1, metadata !3966, metadata !DIExpression()), !dbg !3967
  %3 = add i32 %1, 4, !dbg !3968
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3969
  ret i32 %4, !dbg !3970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3975, metadata !DIExpression()), !dbg !3976
  %2 = add i32 %0, 7, !dbg !3977
  %3 = lshr i32 %2, 3, !dbg !3978
  ret i32 %3, !dbg !3979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3980 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3984, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i32 %1, metadata !3985, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i32 %2, metadata !3986, metadata !DIExpression()), !dbg !3987
  %4 = shl i32 %2, 1, !dbg !3988
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !3989
  ret void, !dbg !3990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3991 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3993, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i32 %1, metadata !3994, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i32 %2, metadata !3995, metadata !DIExpression()), !dbg !3996
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !3997
  ret void, !dbg !3998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3999 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4001, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.value(metadata i32 %1, metadata !4002, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.value(metadata i32 %2, metadata !4003, metadata !DIExpression()), !dbg !4009
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4010
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4004, metadata !DIExpression()), !dbg !4009
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4011
  %6 = icmp eq i32 %5, %1, !dbg !4012
  br i1 %6, label %7, label %14, !dbg !4013

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4014
  %9 = xor i32 %8, -1, !dbg !4016
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4017
  %11 = load i32, i32* %10, align 4, !dbg !4018
  %12 = and i32 %11, %9, !dbg !4018
  store i32 %12, i32* %10, align 4, !dbg !4018
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4019
  store i32 0, i32* %13, align 4, !dbg !4020
  br label %17, !dbg !4021

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4022
  call void @llvm.dbg.value(metadata i32 %15, metadata !4005, metadata !DIExpression()), !dbg !4023
  call void @llvm.dbg.value(metadata i32 %5, metadata !4008, metadata !DIExpression()), !dbg !4023
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4024
  store i32 %5, i32* %16, align 4, !dbg !4025
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4026
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4027
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4029 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4031, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata i32 %1, metadata !4032, metadata !DIExpression()), !dbg !4033
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4034
  ret i32 %3, !dbg !4035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4036 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4040, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8* %1, metadata !4041, metadata !DIExpression()), !dbg !4047
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4048
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4048
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4042, metadata !DIExpression()), !dbg !4047
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4049
  call void @llvm.dbg.value(metadata i32 %5, metadata !4043, metadata !DIExpression()), !dbg !4047
  %6 = ptrtoint i8* %1 to i32, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %6, metadata !4044, metadata !DIExpression()), !dbg !4047
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4051
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4051
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4052
  call void @llvm.dbg.value(metadata i32 %9, metadata !4045, metadata !DIExpression()), !dbg !4047
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4053
  %11 = shl i32 %10, 3, !dbg !4054
  call void @llvm.dbg.value(metadata i32 %11, metadata !4046, metadata !DIExpression()), !dbg !4047
  %12 = sub i32 %9, %6, !dbg !4055
  %13 = add i32 %12, %11, !dbg !4056
  ret i32 %13, !dbg !4057
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4058 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4062, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i32 %1, metadata !4063, metadata !DIExpression()), !dbg !4068
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4069
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4069
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4064, metadata !DIExpression()), !dbg !4068
  %5 = icmp eq i32 %1, 0, !dbg !4070
  br i1 %5, label %19, label %6, !dbg !4072

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4073
  br i1 %7, label %19, label %8, !dbg !4074

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4075, !range !3691
  call void @llvm.dbg.value(metadata i32 %9, metadata !4066, metadata !DIExpression()), !dbg !4068
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4076
  call void @llvm.dbg.value(metadata i32 %10, metadata !4067, metadata !DIExpression()), !dbg !4068
  %11 = icmp eq i32 %10, 0, !dbg !4077
  br i1 %11, label %19, label %12, !dbg !4079

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4080
  %14 = icmp ugt i32 %13, %9, !dbg !4082
  br i1 %14, label %15, label %17, !dbg !4083

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4084
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4086
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4087
  br label %17, !dbg !4088

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4089
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4090
  call void @llvm.dbg.value(metadata i8* %18, metadata !4065, metadata !DIExpression()), !dbg !4068
  br label %19, !dbg !4091

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4068
  ret i8* %20, !dbg !4092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4093 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4097, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i32 %1, metadata !4098, metadata !DIExpression()), !dbg !4099
  %3 = lshr i32 %1, 3, !dbg !4100
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4101
  %5 = load i32, i32* %4, align 4, !dbg !4101
  %6 = icmp uge i32 %3, %5, !dbg !4102
  ret i1 %6, !dbg !4103
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4104 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4108, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata i32 %1, metadata !4109, metadata !DIExpression()), !dbg !4123
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4124
  call void @llvm.dbg.value(metadata i32 %3, metadata !4110, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4111, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4123
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4125
  %5 = load i32, i32* %4, align 4, !dbg !4125
  %6 = icmp eq i32 %5, 0, !dbg !4126
  br i1 %6, label %19, label %7, !dbg !4127

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4128
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4129
  call void @llvm.dbg.value(metadata i32 %9, metadata !4115, metadata !DIExpression()), !dbg !4129
  call void @llvm.dbg.value(metadata i32 %8, metadata !4116, metadata !DIExpression()), !dbg !4130
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4131
  %11 = icmp ult i32 %10, %1, !dbg !4133
  br i1 %11, label %13, label %12, !dbg !4134

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4135
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4137
  store i32 %14, i32* %4, align 4, !dbg !4138
  %15 = add nsw i32 %9, -1, !dbg !4139
  call void @llvm.dbg.value(metadata i32 %15, metadata !4115, metadata !DIExpression()), !dbg !4129
  %16 = icmp eq i32 %15, 0, !dbg !4139
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4140
  br i1 %18, label %19, label %7, !dbg !4140, !llvm.loop !4141

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4144
  %21 = load i32, i32* %20, align 4, !dbg !4144
  %22 = add nsw i32 %3, 1, !dbg !4145
  %23 = shl nsw i32 -1, %22, !dbg !4145
  %24 = and i32 %21, %23, !dbg !4146
  call void @llvm.dbg.value(metadata i32 %24, metadata !4118, metadata !DIExpression()), !dbg !4123
  %25 = icmp eq i32 %24, 0, !dbg !4147
  br i1 %25, label %30, label %26, !dbg !4148

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4149, !range !3849
  call void @llvm.dbg.value(metadata i32 %27, metadata !4119, metadata !DIExpression()), !dbg !4150
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4151
  %29 = load i32, i32* %28, align 4, !dbg !4151
  call void @llvm.dbg.value(metadata i32 %29, metadata !4122, metadata !DIExpression()), !dbg !4150
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4152
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4123
  ret i32 %31, !dbg !4153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4154 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4156, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i32 %1, metadata !4157, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i32 %2, metadata !4158, metadata !DIExpression()), !dbg !4162
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %4, metadata !4159, metadata !DIExpression()), !dbg !4162
  %5 = sub i32 %2, %1, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %5, metadata !4160, metadata !DIExpression()), !dbg !4162
  %6 = sub i32 %4, %5, !dbg !4165
  call void @llvm.dbg.value(metadata i32 %6, metadata !4161, metadata !DIExpression()), !dbg !4162
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4166
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4167
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4168
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4169
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4170
  ret void, !dbg !4171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4172 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4176, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata i32 %1, metadata !4177, metadata !DIExpression()), !dbg !4180
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4181
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4178, metadata !DIExpression()), !dbg !4180
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4182
  call void @llvm.dbg.value(metadata i8* %4, metadata !4179, metadata !DIExpression()), !dbg !4180
  ret i8* %4, !dbg !4183
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4184 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4188, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %1, metadata !4189, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %2, metadata !4190, metadata !DIExpression()), !dbg !4200
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4201
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4201
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4191, metadata !DIExpression()), !dbg !4200
  %6 = sub i32 0, %1, !dbg !4202
  %7 = and i32 %6, %1, !dbg !4203
  call void @llvm.dbg.value(metadata i32 %7, metadata !4193, metadata !DIExpression()), !dbg !4200
  %8 = icmp eq i32 %7, %1, !dbg !4204
  br i1 %8, label %13, label %9, !dbg !4206

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %10, metadata !4189, metadata !DIExpression()), !dbg !4200
  %11 = icmp ult i32 %7, 4, !dbg !4209
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4209
  br label %17, !dbg !4209

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4210
  br i1 %14, label %15, label %17, !dbg !4213

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4214
  br label %57, !dbg !4216

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4200
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4217
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4189, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %19, metadata !4192, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %18, metadata !4193, metadata !DIExpression()), !dbg !4200
  %21 = icmp eq i32 %2, 0, !dbg !4218
  br i1 %21, label %57, label %22, !dbg !4220

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4221
  br i1 %23, label %57, label %24, !dbg !4222

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4223
  %26 = add i32 %25, %20, !dbg !4224
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4225, !range !3691
  call void @llvm.dbg.value(metadata i32 %27, metadata !4194, metadata !DIExpression()), !dbg !4200
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %28, metadata !4195, metadata !DIExpression()), !dbg !4200
  %29 = icmp eq i32 %28, 0, !dbg !4227
  br i1 %29, label %57, label %30, !dbg !4229

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4230
  call void @llvm.dbg.value(metadata i8* %31, metadata !4196, metadata !DIExpression()), !dbg !4200
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4231
  %33 = ptrtoint i8* %32 to i32, !dbg !4231
  %34 = add i32 %20, -1, !dbg !4231
  %35 = add i32 %34, %33, !dbg !4231
  %36 = sub i32 0, %20, !dbg !4231
  %37 = and i32 %35, %36, !dbg !4231
  %38 = inttoptr i32 %37 to i8*, !dbg !4232
  %39 = sub i32 0, %18, !dbg !4233
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4233
  call void @llvm.dbg.value(metadata i8* %40, metadata !4196, metadata !DIExpression()), !dbg !4200
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4234
  %42 = ptrtoint i8* %41 to i32, !dbg !4234
  %43 = add i32 %42, 7, !dbg !4234
  %44 = and i32 %43, -8, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %44, metadata !4197, metadata !DIExpression()), !dbg !4200
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %45, metadata !4198, metadata !DIExpression()), !dbg !4200
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4236
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4237
  %48 = sub i32 %44, %47, !dbg !4237
  %49 = ashr exact i32 %48, 3, !dbg !4237
  call void @llvm.dbg.value(metadata i32 %49, metadata !4199, metadata !DIExpression()), !dbg !4200
  %50 = icmp ugt i32 %45, %28, !dbg !4238
  br i1 %50, label %51, label %52, !dbg !4240

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4241
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4243
  br label %52, !dbg !4244

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4245
  %54 = icmp ugt i32 %53, %49, !dbg !4247
  br i1 %54, label %55, label %56, !dbg !4248

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4249
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4251
  br label %56, !dbg !4252

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4253
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4200
  ret i8* %58, !dbg !4254
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4255 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4259, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %1, metadata !4260, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %2, metadata !4261, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %3, metadata !4262, metadata !DIExpression()), !dbg !4278
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4279
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4279
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4263, metadata !DIExpression()), !dbg !4278
  %7 = icmp eq i8* %1, null, !dbg !4280
  br i1 %7, label %8, label %10, !dbg !4282

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4283
  br label %59, !dbg !4285

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4286
  br i1 %11, label %12, label %13, !dbg !4288

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4289
  br label %59, !dbg !4291

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4292
  br i1 %14, label %59, label %15, !dbg !4294

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4295, !range !3691
  call void @llvm.dbg.value(metadata i32 %16, metadata !4264, metadata !DIExpression()), !dbg !4278
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4296
  call void @llvm.dbg.value(metadata i32 %17, metadata !4265, metadata !DIExpression()), !dbg !4278
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4297
  %19 = ptrtoint i8* %1 to i32, !dbg !4298
  %20 = ptrtoint i8* %18 to i32, !dbg !4298
  %21 = sub i32 %19, %20, !dbg !4298
  call void @llvm.dbg.value(metadata i32 %21, metadata !4266, metadata !DIExpression()), !dbg !4278
  %22 = add i32 %21, %3, !dbg !4299
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4300
  call void @llvm.dbg.value(metadata i32 %23, metadata !4267, metadata !DIExpression()), !dbg !4278
  %24 = icmp eq i32 %2, 0, !dbg !4301
  br i1 %24, label %29, label %25, !dbg !4302

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4303
  %27 = and i32 %26, %19, !dbg !4304
  %28 = icmp eq i32 %27, 0, !dbg !4304
  br i1 %28, label %29, label %49, !dbg !4305

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4306
  %31 = icmp eq i32 %23, %30, !dbg !4307
  br i1 %31, label %59, label %32, !dbg !4308

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4309
  br i1 %33, label %34, label %36, !dbg !4310

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4311
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4313
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4314
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4315
  br label %59, !dbg !4316

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4317
  br i1 %37, label %49, label %38, !dbg !4318

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4319
  %40 = add i32 %39, %30, !dbg !4320
  %41 = icmp ult i32 %40, %23, !dbg !4321
  br i1 %41, label %49, label %42, !dbg !4322

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4323
  call void @llvm.dbg.value(metadata i32 %43, metadata !4268, metadata !DIExpression()), !dbg !4324
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4325
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4326
  %45 = icmp ult i32 %43, %44, !dbg !4328
  br i1 %45, label %46, label %48, !dbg !4329

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4330
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4332
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4333
  br label %48, !dbg !4334

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4335
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4336
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4337
  call void @llvm.dbg.value(metadata i8* %50, metadata !4274, metadata !DIExpression()), !dbg !4278
  %51 = icmp eq i8* %50, null, !dbg !4338
  br i1 %51, label %59, label %52, !dbg !4339

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4340, !range !3784
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4341
  %55 = sub i32 %54, %21, !dbg !4342
  call void @llvm.dbg.value(metadata i32 %55, metadata !4275, metadata !DIExpression()), !dbg !4343
  %56 = icmp ult i32 %55, %3, !dbg !4344
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4344
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !4345
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4346
  br label %59, !dbg !4347

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4278
  ret i8* %60, !dbg !4348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4349 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4353, metadata !DIExpression()), !dbg !4355
  call void @llvm.dbg.value(metadata i32 %1, metadata !4354, metadata !DIExpression()), !dbg !4355
  %3 = shl i32 %1, 3, !dbg !4356
  %4 = add i32 %3, -4, !dbg !4357
  ret i32 %4, !dbg !4358
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4359 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4363, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata i8* %1, metadata !4364, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata i32 %2, metadata !4365, metadata !DIExpression()), !dbg !4374
  %4 = add i32 %2, -4, !dbg !4375
  call void @llvm.dbg.value(metadata i32 %4, metadata !4365, metadata !DIExpression()), !dbg !4374
  %5 = ptrtoint i8* %1 to i32, !dbg !4376
  %6 = add i32 %5, 7, !dbg !4376
  %7 = and i32 %6, -8, !dbg !4376
  call void @llvm.dbg.value(metadata i32 %7, metadata !4366, metadata !DIExpression()), !dbg !4374
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4377
  %9 = ptrtoint i8* %8 to i32, !dbg !4377
  %10 = and i32 %9, -8, !dbg !4377
  call void @llvm.dbg.value(metadata i32 %10, metadata !4367, metadata !DIExpression()), !dbg !4374
  %11 = sub i32 %10, %7, !dbg !4378
  %12 = lshr exact i32 %11, 3, !dbg !4379
  call void @llvm.dbg.value(metadata i32 %12, metadata !4368, metadata !DIExpression()), !dbg !4374
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4380
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4369, metadata !DIExpression()), !dbg !4374
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4381
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4382
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4383
  store i32 %12, i32* %15, align 8, !dbg !4384
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4385
  store i32 0, i32* %16, align 4, !dbg !4386
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4387
  call void @llvm.dbg.value(metadata i32 %17, metadata !4370, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4374
  %18 = shl i32 %17, 2, !dbg !4388
  %19 = add i32 %18, 20, !dbg !4389
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %20, metadata !4371, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata i32 0, metadata !4372, metadata !DIExpression()), !dbg !4391
  %21 = icmp slt i32 %17, 0, !dbg !4392
  br i1 %21, label %22, label %24, !dbg !4394

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4395
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4396
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4397
  %23 = sub i32 %12, %20, !dbg !4398
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4399
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4400
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4401
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4402
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4403
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4404
  ret void, !dbg !4405

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4372, metadata !DIExpression()), !dbg !4391
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4406
  store i32 0, i32* %26, align 4, !dbg !4408
  %27 = add nuw i32 %25, 1, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %27, metadata !4372, metadata !DIExpression()), !dbg !4391
  %28 = icmp eq i32 %25, %17, !dbg !4392
  br i1 %28, label %22, label %24, !dbg !4394, !llvm.loop !4410
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4412 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4425, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4422, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8* %1, metadata !4423, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8* %2, metadata !4424, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %4, metadata !4426, metadata !DIExpression()), !dbg !4553
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4554
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4554
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4427, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.value(metadata i32 0, metadata !4431, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i1 undef, metadata !4433, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4553
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4556

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4556

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4557
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4425, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8* %30, metadata !4424, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %29, metadata !4431, metadata !DIExpression()), !dbg !4553
  %31 = load i8, i8* %30, align 1, !dbg !4558
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4556

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4558
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4559
  call void @llvm.dbg.value(metadata i8* %34, metadata !4424, metadata !DIExpression()), !dbg !4553
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %35, metadata !4435, metadata !DIExpression()), !dbg !4560
  %36 = icmp slt i32 %35, 0, !dbg !4561
  %37 = add i32 %29, 1, !dbg !4559
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression()), !dbg !4553
  br i1 %36, label %365, label %28, !llvm.loop !4563

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4565
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4440, metadata !DIExpression()), !dbg !4566
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4566
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4485, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4488, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i8* %30, metadata !4491, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 -1, metadata !4492, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 -1, metadata !4493, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i8* null, metadata !4494, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i8* %14, metadata !4495, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i8 0, metadata !4496, metadata !DIExpression()), !dbg !4567
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4568
  call void @llvm.dbg.value(metadata i8* %39, metadata !4424, metadata !DIExpression()), !dbg !4553
  %40 = load i24, i24* %15, align 8, !dbg !4569
  %41 = and i24 %40, 256, !dbg !4569
  %42 = icmp eq i24 %41, 0, !dbg !4569
  br i1 %42, label %51, label %43, !dbg !4571

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4572
  call void @llvm.dbg.value(metadata i8* %44, metadata !4425, metadata !DIExpression()), !dbg !4553
  %45 = bitcast i8* %27 to i32*, !dbg !4572
  %46 = load i32, i32* %45, align 4, !dbg !4572
  call void @llvm.dbg.value(metadata i32 %46, metadata !4492, metadata !DIExpression()), !dbg !4567
  %47 = icmp slt i32 %46, 0, !dbg !4574
  br i1 %47, label %48, label %56, !dbg !4576

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4577
  store i24 %49, i24* %15, align 8, !dbg !4577
  %50 = sub nsw i32 0, %46, !dbg !4579
  call void @llvm.dbg.value(metadata i32 %50, metadata !4492, metadata !DIExpression()), !dbg !4567
  br label %56, !dbg !4580

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4581
  %53 = icmp eq i24 %52, 0, !dbg !4581
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4583
  br label %56, !dbg !4583

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4584
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4567
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4425, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %58, metadata !4492, metadata !DIExpression()), !dbg !4567
  %60 = and i24 %57, 1024, !dbg !4584
  %61 = icmp eq i24 %60, 0, !dbg !4584
  br i1 %61, label %69, label %62, !dbg !4585

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4586
  call void @llvm.dbg.value(metadata i8* %63, metadata !4425, metadata !DIExpression()), !dbg !4553
  %64 = bitcast i8* %59 to i32*, !dbg !4586
  %65 = load i32, i32* %64, align 4, !dbg !4586
  call void @llvm.dbg.value(metadata i32 %65, metadata !4497, metadata !DIExpression()), !dbg !4587
  %66 = icmp slt i32 %65, 0, !dbg !4588
  br i1 %66, label %67, label %74, !dbg !4590

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4591
  store i24 %68, i24* %15, align 8, !dbg !4591
  br label %74, !dbg !4593

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4594
  %71 = icmp eq i24 %70, 0, !dbg !4594
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4596
  br label %74, !dbg !4596

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4597
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4567
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4567
  call void @llvm.dbg.value(metadata i8* %77, metadata !4425, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %76, metadata !4493, metadata !DIExpression()), !dbg !4567
  store i32 0, i32* %16, align 4, !dbg !4598
  store i32 0, i32* %17, align 8, !dbg !4599
  %78 = lshr i24 %75, 16, !dbg !4597
  call void @llvm.dbg.value(metadata i24 %78, metadata !4500, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4567
  %79 = lshr i24 %75, 11, !dbg !4600
  %80 = and i24 %79, 15, !dbg !4600
  %81 = zext i24 %80 to i32, !dbg !4600
  call void @llvm.dbg.value(metadata i32 %81, metadata !4501, metadata !DIExpression()), !dbg !4567
  %82 = trunc i24 %78 to i3, !dbg !4601
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4601

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4602

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4605
  call void @llvm.dbg.value(metadata i8* %85, metadata !4425, metadata !DIExpression()), !dbg !4553
  %86 = bitcast i8* %77 to i32*, !dbg !4605
  %87 = load i32, i32* %86, align 4, !dbg !4605
  %88 = sext i32 %87 to i64, !dbg !4605
  store i64 %88, i64* %20, align 8, !dbg !4607
  br label %115, !dbg !4608

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4609
  call void @llvm.dbg.value(metadata i8* %90, metadata !4425, metadata !DIExpression()), !dbg !4553
  %91 = bitcast i8* %77 to i32*, !dbg !4609
  %92 = load i32, i32* %91, align 4, !dbg !4609
  %93 = sext i32 %92 to i64, !dbg !4609
  store i64 %93, i64* %20, align 8, !dbg !4612
  br label %115, !dbg !4613

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4614
  %96 = add i32 %95, 7, !dbg !4614
  %97 = and i32 %96, -8, !dbg !4614
  %98 = inttoptr i32 %97 to i8*, !dbg !4614
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4614
  call void @llvm.dbg.value(metadata i8* %99, metadata !4425, metadata !DIExpression()), !dbg !4553
  %100 = inttoptr i32 %97 to i64*, !dbg !4614
  %101 = load i64, i64* %100, align 8, !dbg !4614
  store i64 %101, i64* %20, align 8, !dbg !4615
  br label %115, !dbg !4616

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4617
  %104 = add i32 %103, 7, !dbg !4617
  %105 = and i32 %104, -8, !dbg !4617
  %106 = inttoptr i32 %105 to i8*, !dbg !4617
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4617
  call void @llvm.dbg.value(metadata i8* %107, metadata !4425, metadata !DIExpression()), !dbg !4553
  %108 = inttoptr i32 %105 to i64*, !dbg !4617
  %109 = load i64, i64* %108, align 8, !dbg !4617
  store i64 %109, i64* %20, align 8, !dbg !4618
  br label %115, !dbg !4619

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4620
  call void @llvm.dbg.value(metadata i8* %111, metadata !4425, metadata !DIExpression()), !dbg !4553
  %112 = bitcast i8* %77 to i32*, !dbg !4620
  %113 = load i32, i32* %112, align 4, !dbg !4620
  %114 = sext i32 %113 to i64, !dbg !4621
  store i64 %114, i64* %20, align 8, !dbg !4622
  br label %115, !dbg !4623

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4624
  call void @llvm.dbg.value(metadata i8* %117, metadata !4425, metadata !DIExpression()), !dbg !4553
  %118 = trunc i24 %79 to i4, !dbg !4625
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4625

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4626
  %121 = ashr exact i64 %120, 56, !dbg !4626
  store i64 %121, i64* %20, align 8, !dbg !4629
  br label %177, !dbg !4630

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4631
  %124 = ashr exact i64 %123, 48, !dbg !4631
  store i64 %124, i64* %20, align 8, !dbg !4634
  br label %177, !dbg !4635

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4636

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4639
  call void @llvm.dbg.value(metadata i8* %127, metadata !4425, metadata !DIExpression()), !dbg !4553
  %128 = bitcast i8* %77 to i32*, !dbg !4639
  %129 = load i32, i32* %128, align 4, !dbg !4639
  %130 = zext i32 %129 to i64, !dbg !4639
  store i64 %130, i64* %20, align 8, !dbg !4641
  br label %157, !dbg !4642

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4643
  call void @llvm.dbg.value(metadata i8* %132, metadata !4425, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8* %132, metadata !4425, metadata !DIExpression()), !dbg !4553
  %133 = bitcast i8* %77 to i32*, !dbg !4643
  %134 = load i32, i32* %133, align 4, !dbg !4643
  %135 = zext i32 %134 to i64, !dbg !4643
  store i64 %135, i64* %20, align 8, !dbg !4643
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4645
  %138 = add i32 %137, 7, !dbg !4645
  %139 = and i32 %138, -8, !dbg !4645
  %140 = inttoptr i32 %139 to i8*, !dbg !4645
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4645
  call void @llvm.dbg.value(metadata i8* %141, metadata !4425, metadata !DIExpression()), !dbg !4553
  %142 = inttoptr i32 %139 to i64*, !dbg !4645
  %143 = load i64, i64* %142, align 8, !dbg !4645
  store i64 %143, i64* %20, align 8, !dbg !4646
  br label %157, !dbg !4647

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4648
  %146 = add i32 %145, 7, !dbg !4648
  %147 = and i32 %146, -8, !dbg !4648
  %148 = inttoptr i32 %147 to i8*, !dbg !4648
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4648
  call void @llvm.dbg.value(metadata i8* %149, metadata !4425, metadata !DIExpression()), !dbg !4553
  %150 = inttoptr i32 %147 to i64*, !dbg !4648
  %151 = load i64, i64* %150, align 8, !dbg !4648
  store i64 %151, i64* %20, align 8, !dbg !4649
  br label %157, !dbg !4650

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4651
  call void @llvm.dbg.value(metadata i8* %153, metadata !4425, metadata !DIExpression()), !dbg !4553
  %154 = bitcast i8* %77 to i32*, !dbg !4651
  %155 = load i32, i32* %154, align 4, !dbg !4651
  %156 = zext i32 %155 to i64, !dbg !4652
  store i64 %156, i64* %20, align 8, !dbg !4653
  br label %157, !dbg !4654

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4655
  call void @llvm.dbg.value(metadata i8* %159, metadata !4425, metadata !DIExpression()), !dbg !4553
  %160 = trunc i24 %79 to i4, !dbg !4656
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4656

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4657
  store i64 %162, i64* %20, align 8, !dbg !4660
  br label %177, !dbg !4661

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4662
  store i64 %164, i64* %20, align 8, !dbg !4665
  br label %177, !dbg !4666

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4667
  %167 = add i32 %166, 7, !dbg !4667
  %168 = and i32 %167, -8, !dbg !4667
  %169 = inttoptr i32 %168 to i8*, !dbg !4667
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4667
  call void @llvm.dbg.value(metadata i8* %170, metadata !4425, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8* %170, metadata !4425, metadata !DIExpression()), !dbg !4553
  %171 = inttoptr i32 %168 to double*, !dbg !4667
  %172 = load double, double* %171, align 8, !dbg !4667
  store double %172, double* %19, align 8, !dbg !4667
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4671
  call void @llvm.dbg.value(metadata i8* %174, metadata !4425, metadata !DIExpression()), !dbg !4553
  %175 = bitcast i8* %77 to i8**, !dbg !4671
  %176 = load i8*, i8** %175, align 4, !dbg !4671
  store i8* %176, i8** %18, align 8, !dbg !4674
  br label %177, !dbg !4675

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4567
  call void @llvm.dbg.value(metadata i8* %178, metadata !4425, metadata !DIExpression()), !dbg !4553
  %179 = and i24 %75, 3, !dbg !4676
  %180 = icmp eq i24 %179, 0, !dbg !4676
  br i1 %180, label %185, label %181, !dbg !4676

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4677
  call void @llvm.dbg.value(metadata i32 %182, metadata !4502, metadata !DIExpression()), !dbg !4678
  %183 = icmp slt i32 %182, 0, !dbg !4679
  %184 = add i32 %182, %29, !dbg !4677
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression()), !dbg !4553
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4681
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4682

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4683
  call void @llvm.dbg.value(metadata i32 %188, metadata !4506, metadata !DIExpression()), !dbg !4684
  %189 = icmp slt i32 %188, 0, !dbg !4685
  %190 = add i32 %29, 1, !dbg !4683
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression()), !dbg !4553
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4687
  call void @llvm.dbg.value(metadata i8* %192, metadata !4494, metadata !DIExpression()), !dbg !4567
  %193 = icmp sgt i32 %76, -1, !dbg !4688
  br i1 %193, label %194, label %196, !dbg !4690

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4691
  call void @llvm.dbg.value(metadata i32 %195, metadata !4509, metadata !DIExpression()), !dbg !4693
  br label %241, !dbg !4694

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4695
  call void @llvm.dbg.value(metadata i32 %197, metadata !4509, metadata !DIExpression()), !dbg !4693
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4494, metadata !DIExpression()), !dbg !4567
  %199 = load i64, i64* %20, align 8, !dbg !4697
  %200 = trunc i64 %199 to i8, !dbg !4698
  store i8 %200, i8* %10, align 1, !dbg !4699
  call void @llvm.dbg.value(metadata i8* %23, metadata !4495, metadata !DIExpression()), !dbg !4567
  br label %245, !dbg !4700

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4701
  %203 = icmp eq i24 %202, 0, !dbg !4701
  %204 = trunc i24 %75 to i8, !dbg !4703
  %205 = shl i8 %204, 1, !dbg !4703
  %206 = and i8 %205, 32, !dbg !4703
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4703
  call void @llvm.dbg.value(metadata i8 %207, metadata !4496, metadata !DIExpression()), !dbg !4567
  %208 = load i64, i64* %20, align 8, !dbg !4704
  call void @llvm.dbg.value(metadata i64 %208, metadata !4432, metadata !DIExpression()), !dbg !4553
  %209 = icmp slt i64 %208, 0, !dbg !4705
  br i1 %209, label %210, label %212, !dbg !4707

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4496, metadata !DIExpression()), !dbg !4567
  %211 = sub nsw i64 0, %208, !dbg !4708
  store i64 %211, i64* %20, align 8, !dbg !4710
  br label %212, !dbg !4711

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4567
  call void @llvm.dbg.value(metadata i8 %213, metadata !4496, metadata !DIExpression()), !dbg !4567
  %214 = load i64, i64* %20, align 8, !dbg !4712
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4713
  call void @llvm.dbg.value(metadata i8* %215, metadata !4494, metadata !DIExpression()), !dbg !4567
  br label %216, !dbg !4714

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4715
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4716
  call void @llvm.dbg.value(metadata i8* %218, metadata !4494, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i8 %217, metadata !4496, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.label(metadata !4552), !dbg !4717
  %219 = icmp sgt i32 %76, -1, !dbg !4718
  br i1 %219, label %222, label %220, !dbg !4719

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4720
  br label %245, !dbg !4719

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4722
  %224 = sub i32 %22, %223, !dbg !4722
  call void @llvm.dbg.value(metadata i32 %224, metadata !4511, metadata !DIExpression()), !dbg !4723
  %225 = load i24, i24* %15, align 8, !dbg !4724
  %226 = and i24 %225, -65, !dbg !4724
  store i24 %226, i24* %15, align 8, !dbg !4724
  %227 = icmp ugt i32 %76, %224, !dbg !4725
  br i1 %227, label %228, label %245, !dbg !4727

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4728
  store i32 %229, i32* %16, align 4, !dbg !4730
  br label %245, !dbg !4731

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4732
  %232 = icmp eq i8* %231, null, !dbg !4734
  br i1 %232, label %245, label %233, !dbg !4735

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4736
  %235 = zext i32 %234 to i64, !dbg !4736
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4738
  call void @llvm.dbg.value(metadata i8* %236, metadata !4494, metadata !DIExpression()), !dbg !4567
  %237 = load i24, i24* %15, align 8, !dbg !4739
  %238 = or i24 %237, 1048576, !dbg !4739
  store i24 %238, i24* %15, align 8, !dbg !4739
  store i8 120, i8* %21, align 1, !dbg !4740
  br label %216, !dbg !4741

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4742
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4745
  br label %363, !dbg !4746

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %242, metadata !4509, metadata !DIExpression()), !dbg !4693
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4748
  call void @llvm.dbg.value(metadata i32 -1, metadata !4493, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 %29, metadata !4431, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8* %192, metadata !4494, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i8* %243, metadata !4495, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i8 0, metadata !4496, metadata !DIExpression()), !dbg !4567
  %244 = icmp eq i8* %192, null, !dbg !4749
  br i1 %244, label %363, label %245, !dbg !4751, !llvm.loop !4563

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4720
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4514, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4567
  call void @llvm.dbg.value(metadata i32 0, metadata !4515, metadata !DIExpression()), !dbg !4567
  %250 = zext i8 %249 to i32, !dbg !4752
  %251 = icmp eq i8 %249, 0, !dbg !4754
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4514, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4567
  call void @llvm.dbg.value(metadata i32 undef, metadata !4514, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4514, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4567
  call void @llvm.dbg.value(metadata i32 undef, metadata !4514, metadata !DIExpression()), !dbg !4567
  %252 = icmp sgt i32 %58, 0, !dbg !4755
  br i1 %252, label %253, label %302, !dbg !4756

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4720
  %255 = icmp eq i24 %254, 0, !dbg !4720
  %256 = ptrtoint i8* %248 to i32, !dbg !4757
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4514, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4567
  %257 = ptrtoint i8* %247 to i32, !dbg !4757
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4514, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4567
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4514, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4567
  %258 = xor i1 %251, true, !dbg !4758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4514, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4567
  %259 = sext i1 %258 to i32, !dbg !4758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4514, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4567
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4514, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4567
  %260 = lshr i24 %246, 19, !dbg !4759
  %261 = and i24 %260, 1, !dbg !4759
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4759
  %263 = zext i24 %262 to i32, !dbg !4759
  %264 = add i32 %257, %259, !dbg !4759
  %265 = add i32 %256, %263, !dbg !4759
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4514, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4567
  %266 = and i24 %246, 4194304, !dbg !4760
  %267 = icmp eq i24 %266, 0, !dbg !4760
  %268 = load i32, i32* %16, align 4, !dbg !4762
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4514, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4567
  call void @llvm.dbg.value(metadata i32 undef, metadata !4514, metadata !DIExpression()), !dbg !4567
  %269 = load i32, i32* %17, align 8, !dbg !4763
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4763
  call void @llvm.dbg.value(metadata i32 undef, metadata !4514, metadata !DIExpression()), !dbg !4567
  %271 = add i32 %264, %58, !dbg !4763
  %272 = add i32 %265, %268, !dbg !4763
  %273 = add i32 %272, %270, !dbg !4764
  %274 = sub i32 %271, %273, !dbg !4764
  call void @llvm.dbg.value(metadata i32 %274, metadata !4492, metadata !DIExpression()), !dbg !4567
  %275 = and i24 %246, 4, !dbg !4765
  %276 = icmp eq i24 %275, 0, !dbg !4765
  br i1 %276, label %277, label %302, !dbg !4766

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4516, metadata !DIExpression()), !dbg !4767
  %278 = and i24 %246, 64, !dbg !4768
  %279 = icmp eq i24 %278, 0, !dbg !4768
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4769
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4769
  %282 = select i1 %279, i32 32, i32 48, !dbg !4769
  br i1 %280, label %287, label %283, !dbg !4769

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4770
  call void @llvm.dbg.value(metadata i32 %284, metadata !4521, metadata !DIExpression()), !dbg !4771
  %285 = icmp slt i32 %284, 0, !dbg !4772
  %286 = add i32 %29, 1, !dbg !4770
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression()), !dbg !4553
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4567
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4557
  call void @llvm.dbg.value(metadata i32 %290, metadata !4431, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i8 undef, metadata !4516, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i8 %288, metadata !4496, metadata !DIExpression()), !dbg !4567
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4774
  %292 = add i32 %291, -1, !dbg !4774
  br label %293, !dbg !4774

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4775
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4557
  call void @llvm.dbg.value(metadata i32 %295, metadata !4431, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %294, metadata !4492, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 %294, metadata !4492, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4567
  %296 = icmp sgt i32 %294, 0, !dbg !4776
  br i1 %296, label %297, label %302, !dbg !4774

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4777
  call void @llvm.dbg.value(metadata i32 %298, metadata !4492, metadata !DIExpression()), !dbg !4567
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4778
  call void @llvm.dbg.value(metadata i32 %299, metadata !4527, metadata !DIExpression()), !dbg !4779
  %300 = icmp slt i32 %299, 0, !dbg !4780
  %301 = add i32 %295, 1, !dbg !4778
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression()), !dbg !4553
  br i1 %300, label %361, label %293, !llvm.loop !4782

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4567
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4567
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4557
  call void @llvm.dbg.value(metadata i32 %305, metadata !4431, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %304, metadata !4492, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i8 %303, metadata !4496, metadata !DIExpression()), !dbg !4567
  %306 = icmp eq i8 %303, 0, !dbg !4784
  br i1 %306, label %312, label %307, !dbg !4785

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4786
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4787
  call void @llvm.dbg.value(metadata i32 %309, metadata !4530, metadata !DIExpression()), !dbg !4788
  %310 = icmp slt i32 %309, 0, !dbg !4789
  %311 = add i32 %305, 1, !dbg !4787
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression()), !dbg !4553
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4557
  call void @llvm.dbg.value(metadata i32 %313, metadata !4431, metadata !DIExpression()), !dbg !4553
  %314 = lshr i24 %246, 20, !dbg !4791
  %315 = lshr i24 %246, 19, !dbg !4792
  %316 = or i24 %314, %315, !dbg !4793
  %317 = and i24 %316, 1, !dbg !4793
  %318 = icmp eq i24 %317, 0, !dbg !4793
  br i1 %318, label %323, label %319, !dbg !4794

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4795
  call void @llvm.dbg.value(metadata i32 %320, metadata !4534, metadata !DIExpression()), !dbg !4796
  %321 = icmp slt i32 %320, 0, !dbg !4797
  %322 = add i32 %313, 1, !dbg !4795
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression()), !dbg !4553
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4557
  call void @llvm.dbg.value(metadata i32 %324, metadata !4431, metadata !DIExpression()), !dbg !4553
  %325 = and i24 %246, 1048576, !dbg !4799
  %326 = icmp eq i24 %325, 0, !dbg !4799
  br i1 %326, label %333, label %327, !dbg !4800

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4801
  %329 = zext i8 %328 to i32, !dbg !4801
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4801
  call void @llvm.dbg.value(metadata i32 %330, metadata !4540, metadata !DIExpression()), !dbg !4802
  %331 = icmp slt i32 %330, 0, !dbg !4803
  %332 = add i32 %324, 1, !dbg !4801
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression()), !dbg !4553
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4557
  call void @llvm.dbg.value(metadata i32 %334, metadata !4431, metadata !DIExpression()), !dbg !4553
  %335 = load i32, i32* %16, align 4, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %335, metadata !4515, metadata !DIExpression()), !dbg !4567
  br label %336, !dbg !4806

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4807
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4557
  call void @llvm.dbg.value(metadata i32 %338, metadata !4431, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %337, metadata !4515, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4567
  %339 = icmp sgt i32 %337, 0, !dbg !4808
  br i1 %339, label %340, label %345, !dbg !4806

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4809
  call void @llvm.dbg.value(metadata i32 %341, metadata !4515, metadata !DIExpression()), !dbg !4567
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %342, metadata !4544, metadata !DIExpression()), !dbg !4811
  %343 = icmp slt i32 %342, 0, !dbg !4812
  %344 = add i32 %338, 1, !dbg !4810
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression()), !dbg !4553
  br i1 %343, label %361, label %336, !llvm.loop !4814

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4816
  call void @llvm.dbg.value(metadata i32 %346, metadata !4547, metadata !DIExpression()), !dbg !4817
  %347 = icmp slt i32 %346, 0, !dbg !4818
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression()), !dbg !4553
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4816
  call void @llvm.dbg.value(metadata i32 %349, metadata !4431, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %304, metadata !4492, metadata !DIExpression()), !dbg !4567
  %350 = icmp sgt i32 %304, 0, !dbg !4820
  br i1 %350, label %351, label %363, !dbg !4821

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4821
  %353 = add i32 %352, %338, !dbg !4821
  br label %354, !dbg !4821

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %355, metadata !4492, metadata !DIExpression()), !dbg !4567
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %356, metadata !4549, metadata !DIExpression()), !dbg !4823
  %357 = icmp slt i32 %356, 0, !dbg !4824
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4826
  call void @llvm.dbg.value(metadata i32 undef, metadata !4431, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4553
  call void @llvm.dbg.value(metadata i32 %359, metadata !4492, metadata !DIExpression()), !dbg !4567
  %360 = icmp sgt i32 %355, 1, !dbg !4820
  br i1 %360, label %354, label %363, !dbg !4821, !llvm.loop !4827

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4431, metadata !DIExpression()), !dbg !4553
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4564
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4557
  call void @llvm.dbg.value(metadata i32 %364, metadata !4431, metadata !DIExpression()), !dbg !4553
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4564
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4553
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4829
  ret i32 %366, !dbg !4829
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4830 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4834, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i8* %1, metadata !4835, metadata !DIExpression()), !dbg !4836
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4837
  store i24 0, i24* %3, align 4, !dbg !4837
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4837
  store i8 0, i8* %4, align 1, !dbg !4837
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4837
  store i32 0, i32* %5, align 4, !dbg !4837
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4837
  store i32 0, i32* %6, align 4, !dbg !4837
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4838
  call void @llvm.dbg.value(metadata i8* %7, metadata !4835, metadata !DIExpression()), !dbg !4836
  %8 = load i8, i8* %7, align 1, !dbg !4839
  %9 = icmp eq i8 %8, 37, !dbg !4841
  br i1 %9, label %10, label %12, !dbg !4842

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4843
  call void @llvm.dbg.value(metadata i8* %11, metadata !4835, metadata !DIExpression()), !dbg !4836
  store i8 37, i8* %4, align 1, !dbg !4845
  br label %18, !dbg !4846

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4847
  call void @llvm.dbg.value(metadata i8* %13, metadata !4835, metadata !DIExpression()), !dbg !4836
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4848
  call void @llvm.dbg.value(metadata i8* %14, metadata !4835, metadata !DIExpression()), !dbg !4836
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4849
  call void @llvm.dbg.value(metadata i8* %15, metadata !4835, metadata !DIExpression()), !dbg !4836
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %16, metadata !4835, metadata !DIExpression()), !dbg !4836
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %17, metadata !4835, metadata !DIExpression()), !dbg !4836
  br label %18, !dbg !4852

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4836
  ret i8* %19, !dbg !4853
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4854 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4858, metadata !DIExpression()), !dbg !4865
  call void @llvm.dbg.value(metadata i8* %1, metadata !4859, metadata !DIExpression()), !dbg !4865
  call void @llvm.dbg.value(metadata i8* %2, metadata !4860, metadata !DIExpression()), !dbg !4865
  call void @llvm.dbg.value(metadata i8* %3, metadata !4861, metadata !DIExpression()), !dbg !4865
  call void @llvm.dbg.value(metadata i32 0, metadata !4862, metadata !DIExpression()), !dbg !4865
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4866

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4867
  call void @llvm.dbg.value(metadata i32 %9, metadata !4862, metadata !DIExpression()), !dbg !4865
  call void @llvm.dbg.value(metadata i8* %8, metadata !4860, metadata !DIExpression()), !dbg !4865
  %10 = icmp ult i8* %8, %3, !dbg !4868
  br i1 %10, label %11, label %13, !dbg !4869

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4870
  br label %17, !dbg !4869

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4871

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4872
  %16 = icmp eq i8 %15, 0, !dbg !4871
  br i1 %16, label %24, label %17, !dbg !4866

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4870
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4873
  call void @llvm.dbg.value(metadata i8* %19, metadata !4860, metadata !DIExpression()), !dbg !4865
  %20 = zext i8 %18 to i32, !dbg !4874
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4875
  call void @llvm.dbg.value(metadata i32 %21, metadata !4863, metadata !DIExpression()), !dbg !4876
  %22 = icmp slt i32 %21, 0, !dbg !4877
  %23 = add i32 %9, 1, !dbg !4879
  call void @llvm.dbg.value(metadata i32 undef, metadata !4862, metadata !DIExpression()), !dbg !4865
  br i1 %22, label %24, label %7, !llvm.loop !4880

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4865
  ret i32 %25, !dbg !4882
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4883 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4887, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4888, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i8* %2, metadata !4889, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i8* %3, metadata !4890, metadata !DIExpression()), !dbg !4897
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4898
  %6 = load i8, i8* %5, align 1, !dbg !4898
  %7 = zext i8 %6 to i32, !dbg !4899
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !4900
  %9 = icmp eq i32 %8, 0, !dbg !4900
  call void @llvm.dbg.value(metadata i1 %9, metadata !4891, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4897
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %10, metadata !4892, metadata !DIExpression()), !dbg !4897
  %11 = ptrtoint i8* %3 to i32, !dbg !4902
  %12 = ptrtoint i8* %2 to i32, !dbg !4902
  %13 = sub i32 %11, %12, !dbg !4902
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4903
  call void @llvm.dbg.value(metadata i8* %14, metadata !4894, metadata !DIExpression()), !dbg !4897
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4904

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4897
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4887, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i8* %18, metadata !4894, metadata !DIExpression()), !dbg !4897
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4905
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4906
  call void @llvm.dbg.value(metadata i32 %25, metadata !4895, metadata !DIExpression()), !dbg !4907
  %26 = icmp ult i32 %25, 10, !dbg !4908
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4909
  %28 = add i32 %27, %25, !dbg !4907
  %29 = trunc i32 %28 to i8, !dbg !4909
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4910
  call void @llvm.dbg.value(metadata i8* %30, metadata !4894, metadata !DIExpression()), !dbg !4897
  store i8 %29, i8* %30, align 1, !dbg !4911
  call void @llvm.dbg.value(metadata i64 %22, metadata !4887, metadata !DIExpression()), !dbg !4897
  %31 = icmp uge i64 %19, %15, !dbg !4912
  %32 = icmp ugt i8* %30, %2, !dbg !4913
  %33 = and i1 %31, %32, !dbg !4913
  br i1 %33, label %17, label %34, !dbg !4914, !llvm.loop !4915

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4917
  %36 = load i24, i24* %35, align 4, !dbg !4917
  %37 = and i24 %36, 32, !dbg !4917
  %38 = icmp eq i24 %37, 0, !dbg !4917
  br i1 %38, label %44, label %39, !dbg !4919

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4920

40:                                               ; preds = %39
  br label %41, !dbg !4922

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4926
  store i24 %43, i24* %35, align 4, !dbg !4926
  br label %44, !dbg !4927

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4927
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4928 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4934, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.value(metadata i8* %1, metadata !4935, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.value(metadata i32 %2, metadata !4936, metadata !DIExpression()), !dbg !4937
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4938
  %5 = load i24, i24* %4, align 4, !dbg !4938
  %6 = lshr i24 %5, 11, !dbg !4938
  %7 = and i24 %6, 15, !dbg !4938
  %8 = zext i24 %7 to i32, !dbg !4938
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4939

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4940
  store i32 %2, i32* %10, align 4, !dbg !4942
  br label %28, !dbg !4943

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4944
  store i8 %12, i8* %1, align 1, !dbg !4945
  br label %28, !dbg !4946

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4947
  %15 = bitcast i8* %1 to i16*, !dbg !4948
  store i16 %14, i16* %15, align 2, !dbg !4949
  br label %28, !dbg !4950

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4951
  store i32 %2, i32* %17, align 4, !dbg !4952
  br label %28, !dbg !4953

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4954
  %20 = bitcast i8* %1 to i64*, !dbg !4955
  store i64 %19, i64* %20, align 8, !dbg !4956
  br label %28, !dbg !4957

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4958
  %23 = bitcast i8* %1 to i64*, !dbg !4959
  store i64 %22, i64* %23, align 8, !dbg !4960
  br label %28, !dbg !4961

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4962
  store i32 %2, i32* %25, align 4, !dbg !4963
  br label %28, !dbg !4964

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4965
  store i32 %2, i32* %27, align 4, !dbg !4966
  br label %28, !dbg !4967

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4968
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4972, metadata !DIExpression()), !dbg !4973
  %2 = add i32 %0, -65, !dbg !4974
  %3 = icmp ult i32 %2, 26, !dbg !4975
  %4 = zext i1 %3 to i32, !dbg !4975
  ret i32 %4, !dbg !4976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4977 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4981, metadata !DIExpression()), !dbg !4982
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4983

2:                                                ; preds = %1
  br label %4, !dbg !4984

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4986

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4987
  ret i32 %5, !dbg !4988
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !4989 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4991, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i8* %1, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i8 1, metadata !4993, metadata !DIExpression()), !dbg !4994
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4995

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4993, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i8* %5, metadata !4992, metadata !DIExpression()), !dbg !4994
  %6 = load i8, i8* %5, align 1, !dbg !4996
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4998

7:                                                ; preds = %4
  br label %11, !dbg !4999

8:                                                ; preds = %4
  br label %11, !dbg !5001

9:                                                ; preds = %4
  br label %11, !dbg !5002

10:                                               ; preds = %4
  br label %11, !dbg !5003

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5004
  %14 = or i24 %13, %12, !dbg !5004
  store i24 %14, i24* %3, align 4, !dbg !5004
  call void @llvm.dbg.value(metadata i8 poison, metadata !4993, metadata !DIExpression()), !dbg !4994
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4992, metadata !DIExpression()), !dbg !4994
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4993, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i8* %15, metadata !4992, metadata !DIExpression()), !dbg !4994
  %17 = load i24, i24* %3, align 4, !dbg !5005
  %18 = and i24 %17, 68, !dbg !5007
  %19 = icmp eq i24 %18, 68, !dbg !5007
  br i1 %19, label %20, label %22, !dbg !5007

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5008
  store i24 %21, i24* %3, align 4, !dbg !5008
  br label %22, !dbg !5010

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5011
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5012 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5014, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata i8* %1, metadata !5015, metadata !DIExpression()), !dbg !5018
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5019
  %5 = load i24, i24* %4, align 4, !dbg !5020
  %6 = or i24 %5, 128, !dbg !5020
  store i24 %6, i24* %4, align 4, !dbg !5020
  call void @llvm.dbg.value(metadata i8* %1, metadata !5015, metadata !DIExpression()), !dbg !5018
  %7 = load i8, i8* %1, align 1, !dbg !5021
  %8 = icmp eq i8 %7, 42, !dbg !5023
  br i1 %8, label %9, label %12, !dbg !5024

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5025
  store i24 %10, i24* %4, align 4, !dbg !5025
  call void @llvm.dbg.value(metadata i8* %1, metadata !5015, metadata !DIExpression()), !dbg !5018
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5027
  call void @llvm.dbg.value(metadata i8* %11, metadata !5015, metadata !DIExpression()), !dbg !5018
  store i8* %11, i8** %3, align 4, !dbg !5027
  br label %29, !dbg !5028

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5016, metadata !DIExpression()), !dbg !5018
  call void @llvm.dbg.value(metadata i8** %3, metadata !5015, metadata !DIExpression(DW_OP_deref)), !dbg !5018
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %13, metadata !5017, metadata !DIExpression()), !dbg !5018
  %14 = load i8*, i8** %3, align 4, !dbg !5030
  call void @llvm.dbg.value(metadata i8* %14, metadata !5015, metadata !DIExpression()), !dbg !5018
  %15 = icmp eq i8* %14, %1, !dbg !5032
  br i1 %15, label %29, label %16, !dbg !5033

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5034
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5036
  store i32 %13, i32* %18, align 4, !dbg !5037
  %19 = lshr i32 %13, 31, !dbg !5038
  %20 = lshr i24 %17, 1, !dbg !5039
  %21 = and i24 %20, 1, !dbg !5039
  %22 = zext i24 %21 to i32, !dbg !5039
  %23 = or i32 %19, %22, !dbg !5039
  %24 = trunc i32 %23 to i24, !dbg !5039
  %25 = shl nuw nsw i24 %24, 1, !dbg !5039
  %26 = and i24 %17, -131, !dbg !5039
  %27 = or i24 %26, 128, !dbg !5039
  %28 = or i24 %25, %27, !dbg !5039
  store i24 %28, i24* %4, align 4, !dbg !5039
  br label %29, !dbg !5040

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5018
  ret i8* %30, !dbg !5041
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5042 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5044, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %1, metadata !5045, metadata !DIExpression()), !dbg !5047
  %4 = load i8, i8* %1, align 1, !dbg !5048
  %5 = icmp eq i8 %4, 46, !dbg !5049
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5050
  %7 = load i24, i24* %6, align 4, !dbg !5051
  %8 = select i1 %5, i24 512, i24 0, !dbg !5051
  %9 = and i24 %7, -513, !dbg !5051
  %10 = or i24 %9, %8, !dbg !5051
  store i24 %10, i24* %6, align 4, !dbg !5051
  br i1 %5, label %11, label %32, !dbg !5052

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5045, metadata !DIExpression()), !dbg !5047
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5053
  call void @llvm.dbg.value(metadata i8* %12, metadata !5045, metadata !DIExpression()), !dbg !5047
  store i8* %12, i8** %3, align 4, !dbg !5053
  %13 = load i8, i8* %12, align 1, !dbg !5054
  %14 = icmp eq i8 %13, 42, !dbg !5056
  br i1 %14, label %15, label %18, !dbg !5057

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5058
  store i24 %16, i24* %6, align 4, !dbg !5058
  call void @llvm.dbg.value(metadata i8* %12, metadata !5045, metadata !DIExpression()), !dbg !5047
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5060
  call void @llvm.dbg.value(metadata i8* %17, metadata !5045, metadata !DIExpression()), !dbg !5047
  store i8* %17, i8** %3, align 4, !dbg !5060
  br label %32, !dbg !5061

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5045, metadata !DIExpression(DW_OP_deref)), !dbg !5047
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5062
  call void @llvm.dbg.value(metadata i32 %19, metadata !5046, metadata !DIExpression()), !dbg !5047
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5063
  store i32 %19, i32* %20, align 4, !dbg !5064
  %21 = lshr i32 %19, 31, !dbg !5065
  %22 = load i24, i24* %6, align 4, !dbg !5066
  %23 = lshr i24 %22, 1, !dbg !5066
  %24 = and i24 %23, 1, !dbg !5066
  %25 = zext i24 %24 to i32, !dbg !5066
  %26 = or i32 %21, %25, !dbg !5066
  %27 = trunc i32 %26 to i24, !dbg !5066
  %28 = shl nuw nsw i24 %27, 1, !dbg !5066
  %29 = and i24 %22, -3, !dbg !5066
  %30 = or i24 %28, %29, !dbg !5066
  store i24 %30, i24* %6, align 4, !dbg !5066
  %31 = load i8*, i8** %3, align 4, !dbg !5067
  call void @llvm.dbg.value(metadata i8* %31, metadata !5045, metadata !DIExpression()), !dbg !5047
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5047
  ret i8* %33, !dbg !5068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5069 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5071, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i8* %1, metadata !5072, metadata !DIExpression()), !dbg !5073
  %3 = load i8, i8* %1, align 1, !dbg !5074
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5075

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5076
  call void @llvm.dbg.value(metadata i8* %5, metadata !5072, metadata !DIExpression()), !dbg !5073
  %6 = load i8, i8* %5, align 1, !dbg !5079
  %7 = icmp eq i8 %6, 104, !dbg !5080
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5081
  %9 = load i24, i24* %8, align 4, !dbg !5081
  %10 = and i24 %9, -30721, !dbg !5081
  br i1 %7, label %11, label %14, !dbg !5082

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5083
  store i24 %12, i24* %8, align 4, !dbg !5083
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5085
  call void @llvm.dbg.value(metadata i8* %13, metadata !5072, metadata !DIExpression()), !dbg !5073
  br label %56, !dbg !5086

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5087
  store i24 %15, i24* %8, align 4, !dbg !5087
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5089
  call void @llvm.dbg.value(metadata i8* %17, metadata !5072, metadata !DIExpression()), !dbg !5073
  %18 = load i8, i8* %17, align 1, !dbg !5091
  %19 = icmp eq i8 %18, 108, !dbg !5092
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5093
  %21 = load i24, i24* %20, align 4, !dbg !5093
  %22 = and i24 %21, -30721, !dbg !5093
  br i1 %19, label %23, label %26, !dbg !5094

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5095
  store i24 %24, i24* %20, align 4, !dbg !5095
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5097
  call void @llvm.dbg.value(metadata i8* %25, metadata !5072, metadata !DIExpression()), !dbg !5073
  br label %56, !dbg !5098

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5099
  store i24 %27, i24* %20, align 4, !dbg !5099
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5101
  %30 = load i24, i24* %29, align 4, !dbg !5102
  %31 = and i24 %30, -30721, !dbg !5102
  %32 = or i24 %31, 10240, !dbg !5102
  store i24 %32, i24* %29, align 4, !dbg !5102
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %33, metadata !5072, metadata !DIExpression()), !dbg !5073
  br label %56, !dbg !5104

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5105
  %36 = load i24, i24* %35, align 4, !dbg !5106
  %37 = and i24 %36, -30721, !dbg !5106
  %38 = or i24 %37, 12288, !dbg !5106
  store i24 %38, i24* %35, align 4, !dbg !5106
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5107
  call void @llvm.dbg.value(metadata i8* %39, metadata !5072, metadata !DIExpression()), !dbg !5073
  br label %56, !dbg !5108

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5109
  %42 = load i24, i24* %41, align 4, !dbg !5110
  %43 = and i24 %42, -30721, !dbg !5110
  %44 = or i24 %43, 14336, !dbg !5110
  store i24 %44, i24* %41, align 4, !dbg !5110
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5111
  call void @llvm.dbg.value(metadata i8* %45, metadata !5072, metadata !DIExpression()), !dbg !5073
  br label %56, !dbg !5112

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5113
  %48 = load i24, i24* %47, align 4, !dbg !5114
  %49 = and i24 %48, -30723, !dbg !5114
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5115
  call void @llvm.dbg.value(metadata i8* %50, metadata !5072, metadata !DIExpression()), !dbg !5073
  %51 = or i24 %49, 16386, !dbg !5116
  store i24 %51, i24* %47, align 4, !dbg !5116
  br label %56, !dbg !5117

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5118
  %54 = load i24, i24* %53, align 4, !dbg !5119
  %55 = and i24 %54, -30721, !dbg !5119
  store i24 %55, i24* %53, align 4, !dbg !5119
  br label %56, !dbg !5120

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5072, metadata !DIExpression()), !dbg !5073
  ret i8* %57, !dbg !5121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5122 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5124, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8* %1, metadata !5125, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8 0, metadata !5126, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8* %1, metadata !5125, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5129
  %3 = load i8, i8* %1, align 1, !dbg !5130
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5131
  store i8 %3, i8* %4, align 1, !dbg !5132
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5133

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5134

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5135
  %9 = load i24, i24* %8, align 4, !dbg !5135
  %10 = and i24 %9, -458753, !dbg !5135
  %11 = or i24 %10, %7, !dbg !5135
  call void @llvm.dbg.label(metadata !5127), !dbg !5136
  %12 = and i24 %9, 30720, !dbg !5137
  %13 = icmp eq i24 %12, 16384, !dbg !5137
  %14 = zext i1 %13 to i24, !dbg !5139
  %15 = or i24 %11, %14, !dbg !5139
  %16 = icmp eq i8 %3, 99, !dbg !5140
  br i1 %16, label %17, label %43, !dbg !5142

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5143
  %19 = icmp ne i24 %18, 0, !dbg !5143
  call void @llvm.dbg.value(metadata i1 %19, metadata !5126, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5129
  br label %43, !dbg !5145

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5146
  %22 = load i24, i24* %21, align 4, !dbg !5147
  %23 = and i24 %22, -458753, !dbg !5147
  %24 = or i24 %23, 262144, !dbg !5147
  call void @llvm.dbg.value(metadata i8 1, metadata !5126, metadata !DIExpression()), !dbg !5129
  br label %43, !dbg !5148

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5151
  %27 = load i24, i24* %26, align 4, !dbg !5152
  %28 = and i24 %27, -458753, !dbg !5152
  %29 = or i24 %28, 196608, !dbg !5152
  %30 = and i24 %27, 30720, !dbg !5153
  %31 = icmp eq i24 %30, 16384, !dbg !5153
  br label %43, !dbg !5155

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5156
  %34 = load i24, i24* %33, align 4, !dbg !5157
  %35 = and i24 %34, -458753, !dbg !5157
  %36 = or i24 %35, 196608, !dbg !5157
  %37 = and i24 %34, 30720, !dbg !5158
  %38 = icmp ne i24 %37, 0, !dbg !5158
  br label %43, !dbg !5160

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5161
  %41 = load i24, i24* %40, align 4, !dbg !5162
  %42 = or i24 %41, 1, !dbg !5162
  br label %43, !dbg !5163

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5164
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5165
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5166
  call void @llvm.dbg.value(metadata i8* %48, metadata !5125, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8 poison, metadata !5126, metadata !DIExpression()), !dbg !5129
  %49 = lshr i24 %44, 1, !dbg !5164
  %50 = and i24 %49, 1, !dbg !5164
  %51 = zext i24 %50 to i32, !dbg !5164
  %52 = or i32 %51, %47, !dbg !5164
  %53 = trunc i32 %52 to i24, !dbg !5164
  %54 = shl nuw nsw i24 %53, 1, !dbg !5164
  %55 = and i24 %44, -3, !dbg !5164
  %56 = or i24 %54, %55, !dbg !5164
  store i24 %56, i24* %46, align 4, !dbg !5164
  ret i8* %48, !dbg !5167
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5168 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5173, metadata !DIExpression()), !dbg !5176
  %2 = load i8*, i8** %0, align 4, !dbg !5177
  call void @llvm.dbg.value(metadata i8* %2, metadata !5174, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata i32 0, metadata !5175, metadata !DIExpression()), !dbg !5176
  %3 = load i8, i8* %2, align 1, !dbg !5178
  %4 = zext i8 %3 to i32, !dbg !5179
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5180
  %6 = icmp eq i32 %5, 0, !dbg !5181
  br i1 %6, label %19, label %7, !dbg !5181

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5175, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata i8* %10, metadata !5174, metadata !DIExpression()), !dbg !5176
  %11 = mul i32 %9, 10, !dbg !5182
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5184
  call void @llvm.dbg.value(metadata i8* %12, metadata !5174, metadata !DIExpression()), !dbg !5176
  %13 = add i32 %11, -48, !dbg !5185
  %14 = add i32 %13, %8, !dbg !5186
  call void @llvm.dbg.value(metadata i32 %14, metadata !5175, metadata !DIExpression()), !dbg !5176
  %15 = load i8, i8* %12, align 1, !dbg !5178
  %16 = zext i8 %15 to i32, !dbg !5179
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5180
  %18 = icmp eq i32 %17, 0, !dbg !5181
  br i1 %18, label %19, label %7, !dbg !5181, !llvm.loop !5187

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5176
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5176
  store i8* %20, i8** %0, align 4, !dbg !5189
  ret i32 %21, !dbg !5190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5193, metadata !DIExpression()), !dbg !5194
  %2 = add i32 %0, -48, !dbg !5195
  %3 = icmp ult i32 %2, 10, !dbg !5196
  %4 = zext i1 %3 to i32, !dbg !5196
  ret i32 %4, !dbg !5197
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5198 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5200, !srcloc !5201
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5202, !srcloc !5203
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !5204, !srcloc !5205
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5206, !srcloc !5207
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5208, !srcloc !5209
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5210, !srcloc !5211
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5212, !srcloc !5213
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5214, !srcloc !5215
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5216, !srcloc !5217
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5218, !srcloc !5219
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5220, !srcloc !5221
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5222, !srcloc !5223
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #24, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #24, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #24, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #24, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #24, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS\0A\09.equ\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,1\0A\09.type\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,%object", ""() #24, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #24, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR\0A\09.equ\09CONFIG_CONSOLE_GETCHAR,1\0A\09.type\09CONFIG_CONSOLE_GETCHAR,%object", ""() #24, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,16\0A\09.type\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,%object", ""() #24, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,16\0A\09.type\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,%object", ""() #24, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !5758, !srcloc !5759
  ret void, !dbg !5760
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5761 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5763, metadata !DIExpression()), !dbg !5765
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5766
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5767
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5768, !srcloc !5777
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5768
  call void @llvm.dbg.value(metadata i32 %3, metadata !5774, metadata !DIExpression()) #24, !dbg !5778
  call void @llvm.dbg.value(metadata i32 undef, metadata !5775, metadata !DIExpression()) #24, !dbg !5778
  call void @llvm.dbg.value(metadata i32 %3, metadata !5764, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata i32 %3, metadata !5779, metadata !DIExpression()) #24, !dbg !5784
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !5786, !srcloc !5787
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5788
  ret i32 0, !dbg !5789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5790 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5792
  %2 = or i32 %1, 512, !dbg !5792
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5792
  ret void, !dbg !5793
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5794 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5795
  %2 = or i32 %1, 1024, !dbg !5795
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5795
  ret void, !dbg !5796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5797 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5799, metadata !DIExpression()), !dbg !5800
  ret i32 0, !dbg !5801
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_write(%struct.tty_serial* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5802 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5848, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %1, metadata !5849, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %2, metadata !5850, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %1, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 0, metadata !5852, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 0, metadata !5853, metadata !DIExpression()), !dbg !5854
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5855
  %5 = load i32, i32* %4, align 4, !dbg !5855
  %6 = icmp eq i32 %5, 0, !dbg !5857
  %7 = icmp eq i32 %2, 0, !dbg !5854
  br i1 %6, label %9, label %8, !dbg !5858

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5852, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %1, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %2, metadata !5850, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %2, metadata !5850, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5854
  br i1 %7, label %37, label %20, !dbg !5859

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %2, metadata !5850, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %2, metadata !5850, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5854
  br i1 %7, label %37, label %10, !dbg !5860

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %12, !dbg !5860

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %1, %10 ], [ %17, %12 ]
  %14 = phi i32 [ %2, %10 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %14, metadata !5850, metadata !DIExpression()), !dbg !5854
  %15 = add i32 %14, -1, !dbg !5862
  call void @llvm.dbg.value(metadata i32 %15, metadata !5850, metadata !DIExpression()), !dbg !5854
  %16 = load %struct.device*, %struct.device** %11, align 4, !dbg !5863
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5865
  call void @llvm.dbg.value(metadata i8* %17, metadata !5851, metadata !DIExpression()), !dbg !5854
  %18 = load i8, i8* %13, align 1, !dbg !5866
  tail call fastcc void @uart_poll_out(%struct.device* noundef %16, i8 noundef zeroext %18) #26, !dbg !5867
  call void @llvm.dbg.value(metadata i32 %15, metadata !5850, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5854
  %19 = icmp eq i32 %15, 0, !dbg !5860
  br i1 %19, label %37, label %12, !dbg !5860, !llvm.loop !5868

20:                                               ; preds = %8, %33
  %21 = phi i32 [ %24, %33 ], [ %2, %8 ]
  %22 = phi i32 [ %35, %33 ], [ 0, %8 ]
  %23 = phi i8* [ %34, %33 ], [ %1, %8 ]
  %24 = add i32 %21, -1, !dbg !5870
  call void @llvm.dbg.value(metadata i32 %22, metadata !5852, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %23, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %23, metadata !5851, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5854
  %25 = load i8, i8* %23, align 1, !dbg !5871
  %26 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %25) #26, !dbg !5873
  call void @llvm.dbg.value(metadata i32 %26, metadata !5853, metadata !DIExpression()), !dbg !5854
  %27 = icmp slt i32 %26, 0, !dbg !5874
  br i1 %27, label %28, label %33, !dbg !5876

28:                                               ; preds = %20
  %29 = icmp eq i32 %22, 0, !dbg !5877
  br i1 %29, label %30, label %37, !dbg !5880

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %26, !dbg !5881
  %32 = tail call fastcc i32* @z_errno() #26, !dbg !5883
  store i32 %31, i32* %32, align 4, !dbg !5884
  br label %37, !dbg !5885

33:                                               ; preds = %20
  %34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5886
  call void @llvm.dbg.value(metadata i8* %34, metadata !5851, metadata !DIExpression()), !dbg !5854
  %35 = add nuw i32 %22, 1, !dbg !5887
  call void @llvm.dbg.value(metadata i32 %35, metadata !5852, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %24, metadata !5850, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %24, metadata !5850, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5854
  %36 = icmp eq i32 %24, 0, !dbg !5859
  br i1 %36, label %37, label %20, !dbg !5859, !llvm.loop !5888

37:                                               ; preds = %33, %12, %8, %9, %28, %30
  %38 = phi i32 [ %26, %30 ], [ %22, %28 ], [ 0, %9 ], [ 0, %8 ], [ %2, %12 ], [ %2, %33 ], !dbg !5854
  ret i32 %38, !dbg !5890
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5894, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata i8 %1, metadata !5895, metadata !DIExpression()), !dbg !5896
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5897, !srcloc !5899
  tail call fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) #26, !dbg !5900
  ret void, !dbg !5901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5902 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5906, metadata !DIExpression()), !dbg !5911
  call void @llvm.dbg.value(metadata i8 %1, metadata !5907, metadata !DIExpression()), !dbg !5911
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !5912
  %4 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !5913
  br i1 %4, label %14, label %5, !dbg !5913

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !5914
  %7 = load i32, i32* %6, align 4, !dbg !5914
  %8 = icmp eq i32 %7, -1, !dbg !5914
  br i1 %8, label %14, label %9, !dbg !5914

9:                                                ; preds = %5
  %10 = icmp sgt i32 %7, 0, !dbg !5914
  %11 = select i1 %10, i32 %7, i32 0, !dbg !5914
  %12 = zext i32 %11 to i64, !dbg !5914
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #26, !dbg !5914
  br label %14, !dbg !5914

14:                                               ; preds = %5, %2, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ], [ -1, %5 ], !dbg !5911
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !5915
  %17 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %3, [1 x i64] %16) #26, !dbg !5915
  call void @llvm.dbg.value(metadata i32 %17, metadata !5910, metadata !DIExpression()), !dbg !5911
  %18 = icmp slt i32 %17, 0, !dbg !5916
  br i1 %18, label %42, label %19, !dbg !5918

19:                                               ; preds = %14
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5919, !srcloc !5925
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !5919
  call void @llvm.dbg.value(metadata i32 %21, metadata !5922, metadata !DIExpression()) #24, !dbg !5926
  call void @llvm.dbg.value(metadata i32 undef, metadata !5923, metadata !DIExpression()) #24, !dbg !5926
  call void @llvm.dbg.value(metadata i32 %21, metadata !5908, metadata !DIExpression()), !dbg !5911
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !5927
  %23 = load i16, i16* %22, align 2, !dbg !5927
  %24 = zext i16 %23 to i32, !dbg !5928
  %25 = add nuw nsw i32 %24, 1, !dbg !5929
  call void @llvm.dbg.value(metadata i32 %25, metadata !5909, metadata !DIExpression()), !dbg !5911
  %26 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5930
  %27 = load i32, i32* %26, align 4, !dbg !5930
  %28 = icmp ult i32 %25, %27, !dbg !5932
  %29 = select i1 %28, i32 %25, i32 0, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %29, metadata !5909, metadata !DIExpression()), !dbg !5911
  %30 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !5934
  %31 = load i16, i16* %30, align 4, !dbg !5934
  %32 = zext i16 %31 to i32, !dbg !5936
  %33 = icmp eq i32 %29, %32, !dbg !5937
  br i1 %33, label %34, label %35, !dbg !5938

34:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %21, metadata !5939, metadata !DIExpression()) #24, !dbg !5942
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5945, !srcloc !5946
  br label %42, !dbg !5947

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !5948
  %37 = load i8*, i8** %36, align 4, !dbg !5948
  %38 = getelementptr inbounds i8, i8* %37, i32 %24, !dbg !5949
  store i8 %1, i8* %38, align 1, !dbg !5950
  %39 = trunc i32 %29 to i16, !dbg !5951
  store i16 %39, i16* %22, align 2, !dbg !5952
  call void @llvm.dbg.value(metadata i32 %21, metadata !5939, metadata !DIExpression()) #24, !dbg !5953
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5955, !srcloc !5946
  %40 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !5956
  %41 = load %struct.device*, %struct.device** %40, align 4, !dbg !5956
  tail call fastcc void @uart_irq_tx_enable(%struct.device* noundef %41) #26, !dbg !5957
  br label %42, !dbg !5958

42:                                               ; preds = %14, %35, %34
  %43 = phi i32 [ -28, %34 ], [ 0, %35 ], [ %17, %14 ], !dbg !5911
  ret i32 %43, !dbg !5959
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !5960 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5964, !srcloc !5966
  %1 = tail call i32* @z_impl_z_errno() #25, !dbg !5967
  ret i32* %1, !dbg !5968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !5969 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5974, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata i64 %0, metadata !5976, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i32 1000, metadata !5981, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i32 10000, metadata !5982, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i8 1, metadata !5983, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i8 0, metadata !5984, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i8 1, metadata !5985, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i8 0, metadata !5986, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i8 1, metadata !5987, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i8 0, metadata !5988, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i64 0, metadata !5989, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i64 0, metadata !5989, metadata !DIExpression()), !dbg !5993
  %2 = mul i64 %0, 10, !dbg !5995
  ret i64 %2, !dbg !6001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !6002 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6012, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6011, metadata !DIExpression()), !dbg !6013
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6014, !srcloc !6016
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #25, !dbg !6017
  ret i32 %3, !dbg !6018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6021, metadata !DIExpression()), !dbg !6022
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6023, !srcloc !6025
  tail call fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) #26, !dbg !6026
  ret void, !dbg !6027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6030, metadata !DIExpression()), !dbg !6032
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6033
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6033
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6033
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6031, metadata !DIExpression()), !dbg !6032
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 7, !dbg !6034
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6034
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6036
  br i1 %7, label %9, label %8, !dbg !6037

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6038
  br label %9, !dbg !6040

9:                                                ; preds = %8, %1
  ret void, !dbg !6041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6042 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6044, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.value(metadata i8 %1, metadata !6045, metadata !DIExpression()), !dbg !6047
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6048
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6048
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6048
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6046, metadata !DIExpression()), !dbg !6047
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 1, !dbg !6049
  %7 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %6, align 4, !dbg !6049
  tail call void %7(%struct.device* noundef %0, i8 noundef zeroext %1) #25, !dbg !6050
  ret void, !dbg !6051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_read(%struct.tty_serial* noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6052 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6056, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i8* %1, metadata !6057, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i32 %2, metadata !6058, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i8* %1, metadata !6059, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i32 0, metadata !6060, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i32 0, metadata !6061, metadata !DIExpression()), !dbg !6062
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6063
  %5 = load i32, i32* %4, align 4, !dbg !6063
  %6 = icmp eq i32 %5, 0, !dbg !6065
  br i1 %6, label %9, label %7, !dbg !6066

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !6060, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i8* %1, metadata !6059, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i32 %2, metadata !6058, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i32 %2, metadata !6058, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6062
  %8 = icmp eq i32 %2, 0, !dbg !6067
  br i1 %8, label %28, label %11, !dbg !6067

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @tty_read_unbuf(%struct.tty_serial* noundef nonnull %0, i8* noundef %1, i32 noundef %2) #26, !dbg !6068
  br label %28, !dbg !6070

11:                                               ; preds = %7, %23
  %12 = phi i32 [ %15, %23 ], [ %2, %7 ]
  %13 = phi i32 [ %26, %23 ], [ 0, %7 ]
  %14 = phi i8* [ %25, %23 ], [ %1, %7 ]
  %15 = add i32 %12, -1, !dbg !6071
  call void @llvm.dbg.value(metadata i32 %13, metadata !6060, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i8* %14, metadata !6059, metadata !DIExpression()), !dbg !6062
  %16 = tail call fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) #26, !dbg !6072
  call void @llvm.dbg.value(metadata i32 %16, metadata !6061, metadata !DIExpression()), !dbg !6062
  %17 = icmp slt i32 %16, 0, !dbg !6074
  br i1 %17, label %18, label %23, !dbg !6076

18:                                               ; preds = %11
  %19 = icmp eq i32 %13, 0, !dbg !6077
  br i1 %19, label %20, label %28, !dbg !6080

20:                                               ; preds = %18
  %21 = sub nsw i32 0, %16, !dbg !6081
  %22 = tail call fastcc i32* @z_errno() #26, !dbg !6083
  store i32 %21, i32* %22, align 4, !dbg !6084
  br label %28, !dbg !6085

23:                                               ; preds = %11
  %24 = trunc i32 %16 to i8, !dbg !6086
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6087
  call void @llvm.dbg.value(metadata i8* %25, metadata !6059, metadata !DIExpression()), !dbg !6062
  store i8 %24, i8* %14, align 1, !dbg !6088
  %26 = add nuw i32 %13, 1, !dbg !6089
  call void @llvm.dbg.value(metadata i32 %26, metadata !6060, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i32 %15, metadata !6058, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i32 %15, metadata !6058, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6062
  %27 = icmp eq i32 %15, 0, !dbg !6067
  br i1 %27, label %28, label %11, !dbg !6067, !llvm.loop !6090

28:                                               ; preds = %23, %7, %18, %20, %9
  %29 = phi i32 [ %10, %9 ], [ %16, %20 ], [ %13, %18 ], [ 0, %7 ], [ %2, %23 ], !dbg !6062
  ret i32 %29, !dbg !6092
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_read_unbuf(%struct.tty_serial* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #1 !dbg !6093 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6095, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8* %1, metadata !6096, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 %2, metadata !6097, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8* %1, metadata !6098, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 0, metadata !6099, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 0, metadata !6100, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 undef, metadata !6101, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 0, metadata !6099, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8* %1, metadata !6098, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 %2, metadata !6097, metadata !DIExpression()), !dbg !6104
  %5 = icmp eq i32 %2, 0, !dbg !6105
  br i1 %5, label %48, label %6, !dbg !6105

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6106
  %8 = load i32, i32* %7, align 4, !dbg !6106
  call void @llvm.dbg.value(metadata i32 %8, metadata !6101, metadata !DIExpression()), !dbg !6104
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %10, !dbg !6105

10:                                               ; preds = %6, %46
  %11 = phi i32 [ %8, %6 ], [ %39, %46 ]
  %12 = phi i32 [ 0, %6 ], [ %31, %46 ]
  %13 = phi i8* [ %1, %6 ], [ %32, %46 ]
  %14 = phi i32 [ %2, %6 ], [ %33, %46 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6101, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 %12, metadata !6099, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8* %13, metadata !6098, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 %14, metadata !6097, metadata !DIExpression()), !dbg !6104
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6107
  %15 = load %struct.device*, %struct.device** %9, align 4, !dbg !6108
  call void @llvm.dbg.value(metadata i8* %4, metadata !6102, metadata !DIExpression(DW_OP_deref)), !dbg !6109
  %16 = call fastcc i32 @uart_poll_in(%struct.device* noundef %15, i8* noundef nonnull %4) #26, !dbg !6110
  call void @llvm.dbg.value(metadata i32 %16, metadata !6100, metadata !DIExpression()), !dbg !6104
  %17 = icmp slt i32 %16, -1, !dbg !6111
  br i1 %17, label %18, label %22, !dbg !6113

18:                                               ; preds = %10
  %19 = icmp eq i32 %12, 0, !dbg !6114
  br i1 %19, label %20, label %44, !dbg !6117

20:                                               ; preds = %18
  %21 = call fastcc i32* @z_errno() #26, !dbg !6118
  store i32 %16, i32* %21, align 4, !dbg !6120
  call void @llvm.dbg.value(metadata i32 %39, metadata !6101, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8* %32, metadata !6098, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 %33, metadata !6097, metadata !DIExpression()), !dbg !6104
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6121
  br label %48

22:                                               ; preds = %10
  %23 = icmp eq i32 %16, 0, !dbg !6122
  br i1 %23, label %24, label %30, !dbg !6124

24:                                               ; preds = %22
  %25 = load i8, i8* %4, align 1, !dbg !6125
  call void @llvm.dbg.value(metadata i8 %25, metadata !6102, metadata !DIExpression()), !dbg !6109
  %26 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6127
  call void @llvm.dbg.value(metadata i8* %26, metadata !6098, metadata !DIExpression()), !dbg !6104
  store i8 %25, i8* %13, align 1, !dbg !6128
  %27 = add i32 %12, 1, !dbg !6129
  call void @llvm.dbg.value(metadata i32 %27, metadata !6099, metadata !DIExpression()), !dbg !6104
  %28 = add i32 %14, -1, !dbg !6130
  call void @llvm.dbg.value(metadata i32 %28, metadata !6097, metadata !DIExpression()), !dbg !6104
  %29 = icmp eq i32 %28, 0, !dbg !6131
  br i1 %29, label %44, label %30, !dbg !6133

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %27, %24 ], [ %12, %22 ]
  %32 = phi i8* [ %26, %24 ], [ %13, %22 ]
  %33 = phi i32 [ %28, %24 ], [ %14, %22 ]
  %34 = icmp eq i32 %11, -1, !dbg !6134
  br i1 %34, label %38, label %35, !dbg !6135

35:                                               ; preds = %30
  %36 = add i32 %11, -1, !dbg !6136
  call void @llvm.dbg.value(metadata i32 %36, metadata !6101, metadata !DIExpression()), !dbg !6104
  %37 = icmp eq i32 %11, 0, !dbg !6137
  br i1 %37, label %44, label %38, !dbg !6138

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %36, %35 ], [ -1, %30 ], !dbg !6104
  call void @llvm.dbg.value(metadata i32 %39, metadata !6101, metadata !DIExpression()), !dbg !6104
  %40 = icmp eq i32 %16, -1, !dbg !6139
  br i1 %40, label %41, label %46, !dbg !6141

41:                                               ; preds = %38
  %42 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1) #26, !dbg !6142
  %43 = insertvalue [1 x i64] poison, i64 %42, 0, !dbg !6144
  call fastcc void @k_sleep([1 x i64] %43) #26, !dbg !6144
  br label %46, !dbg !6145

44:                                               ; preds = %35, %24, %18
  %45 = phi i32 [ %12, %18 ], [ %31, %35 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !6101, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 undef, metadata !6099, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8* %32, metadata !6098, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 %33, metadata !6097, metadata !DIExpression()), !dbg !6104
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6121
  br label %48

46:                                               ; preds = %38, %41
  call void @llvm.dbg.value(metadata i32 %39, metadata !6101, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 %31, metadata !6099, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i8* %32, metadata !6098, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.value(metadata i32 %33, metadata !6097, metadata !DIExpression()), !dbg !6104
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6121
  %47 = icmp eq i32 %33, 0, !dbg !6105
  br i1 %47, label %48, label %10, !dbg !6105

48:                                               ; preds = %46, %3, %44, %20
  %49 = phi i32 [ -1, %20 ], [ %45, %44 ], [ 0, %3 ], [ %31, %46 ], !dbg !6104
  ret i32 %49, !dbg !6146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) unnamed_addr #1 !dbg !6147 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6151, metadata !DIExpression()), !dbg !6155
  %2 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6156
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6157
  %4 = load i32, i32* %3, align 4, !dbg !6157
  %5 = icmp eq i32 %4, -1, !dbg !6157
  br i1 %5, label %11, label %6, !dbg !6157

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0, !dbg !6157
  %8 = select i1 %7, i32 %4, i32 0, !dbg !6157
  %9 = zext i32 %8 to i64, !dbg !6157
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %9) #26, !dbg !6157
  br label %11, !dbg !6157

11:                                               ; preds = %1, %6
  %12 = phi i64 [ %10, %6 ], [ -1, %1 ], !dbg !6157
  %13 = insertvalue [1 x i64] poison, i64 %12, 0, !dbg !6158
  %14 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %2, [1 x i64] %13) #26, !dbg !6158
  call void @llvm.dbg.value(metadata i32 %14, metadata !6154, metadata !DIExpression()), !dbg !6155
  %15 = icmp slt i32 %14, 0, !dbg !6159
  br i1 %15, label %33, label %16, !dbg !6161

16:                                               ; preds = %11
  %17 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6162, !srcloc !5925
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !6162
  call void @llvm.dbg.value(metadata i32 %18, metadata !5922, metadata !DIExpression()) #24, !dbg !6164
  call void @llvm.dbg.value(metadata i32 undef, metadata !5923, metadata !DIExpression()) #24, !dbg !6164
  call void @llvm.dbg.value(metadata i32 %18, metadata !6152, metadata !DIExpression()), !dbg !6155
  %19 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6165
  %20 = load i8*, i8** %19, align 4, !dbg !6165
  %21 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6166
  %22 = load i16, i16* %21, align 4, !dbg !6167
  %23 = add i16 %22, 1, !dbg !6167
  store i16 %23, i16* %21, align 4, !dbg !6167
  %24 = zext i16 %22 to i32, !dbg !6168
  %25 = getelementptr inbounds i8, i8* %20, i32 %24, !dbg !6168
  %26 = load i8, i8* %25, align 1, !dbg !6168
  call void @llvm.dbg.value(metadata i8 %26, metadata !6153, metadata !DIExpression()), !dbg !6155
  %27 = zext i16 %23 to i32, !dbg !6169
  %28 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6171
  %29 = load i32, i32* %28, align 4, !dbg !6171
  %30 = icmp ugt i32 %29, %27, !dbg !6172
  %31 = select i1 %30, i16 %23, i16 0, !dbg !6173
  store i16 %31, i16* %21, align 4, !dbg !6155
  call void @llvm.dbg.value(metadata i32 %18, metadata !5939, metadata !DIExpression()) #24, !dbg !6174
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !6176, !srcloc !5946
  %32 = zext i8 %26 to i32, !dbg !6177
  br label %33, !dbg !6178

33:                                               ; preds = %11, %16
  %34 = phi i32 [ %32, %16 ], [ %14, %11 ], !dbg !6155
  ret i32 %34, !dbg !6179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6180 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6182, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.value(metadata i8* %1, metadata !6183, metadata !DIExpression()), !dbg !6184
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6185, !srcloc !6187
  %3 = tail call fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !6188
  ret i32 %3, !dbg !6189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !6190 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6194, metadata !DIExpression()), !dbg !6195
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6196, !srcloc !6198
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !6199
  ret void, !dbg !6200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6201 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6203, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.value(metadata i8* %1, metadata !6204, metadata !DIExpression()), !dbg !6206
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6207
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6207
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6207
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6205, metadata !DIExpression()), !dbg !6206
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 0, !dbg !6208
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !6208
  %8 = icmp eq i32 (%struct.device*, i8*)* %7, null, !dbg !6210
  br i1 %8, label %11, label %9, !dbg !6211

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1) #25, !dbg !6212
  br label %11, !dbg !6213

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6206
  ret i32 %12, !dbg !6214
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_init(%struct.tty_serial* noundef %0, %struct.device* noundef %1) local_unnamed_addr #1 !dbg !6215 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6219, metadata !DIExpression()), !dbg !6221
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !6220, metadata !DIExpression()), !dbg !6221
  %3 = icmp eq %struct.device* %1, null, !dbg !6222
  br i1 %3, label %17, label %4, !dbg !6224

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6225
  store %struct.device* %1, %struct.device** %5, align 4, !dbg !6226
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6227
  store i8* null, i8** %6, align 4, !dbg !6228
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6229
  store i32 0, i32* %7, align 4, !dbg !6230
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6231
  store i8* null, i8** %8, align 4, !dbg !6232
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6233
  store i32 0, i32* %9, align 4, !dbg !6234
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6235
  store i16 0, i16* %10, align 2, !dbg !6236
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6237
  store i16 0, i16* %11, align 4, !dbg !6238
  %12 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6239
  store i16 0, i16* %12, align 2, !dbg !6240
  %13 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6241
  store i16 0, i16* %13, align 4, !dbg !6242
  %14 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6243
  store i32 -1, i32* %14, align 4, !dbg !6244
  %15 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6245
  store i32 -1, i32* %15, align 4, !dbg !6246
  %16 = bitcast %struct.tty_serial* %0 to i8*, !dbg !6247
  tail call fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef nonnull %1, i8* noundef %16) #26, !dbg !6248
  br label %17, !dbg !6249

17:                                               ; preds = %2, %4
  %18 = phi i32 [ 0, %4 ], [ -19, %2 ], !dbg !6221
  ret i32 %18, !dbg !6250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6251 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6253, metadata !DIExpression()), !dbg !6257
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @tty_uart_isr, metadata !6254, metadata !DIExpression()), !dbg !6257
  call void @llvm.dbg.value(metadata i8* %1, metadata !6255, metadata !DIExpression()), !dbg !6257
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6258
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6258
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6258
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6256, metadata !DIExpression()), !dbg !6257
  %6 = icmp eq %struct.uart_driver_api* %5, null, !dbg !6259
  br i1 %6, label %12, label %7, !dbg !6261

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 18, !dbg !6262
  %9 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %8, align 4, !dbg !6262
  %10 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %9, null, !dbg !6263
  br i1 %10, label %12, label %11, !dbg !6264

11:                                               ; preds = %7
  tail call void %9(%struct.device* noundef nonnull %0, void (%struct.device*, i8*)* noundef nonnull @tty_uart_isr, i8* noundef %1) #25, !dbg !6265
  br label %12, !dbg !6267

12:                                               ; preds = %11, %7, %2
  ret void, !dbg !6268
}

; Function Attrs: noinline nounwind optsize
define internal void @tty_uart_isr(%struct.device* noundef %0, i8* noundef %1) #1 !dbg !6269 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6271, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i8* %1, metadata !6272, metadata !DIExpression()), !dbg !6277
  %4 = bitcast i8* %1 to %struct.tty_serial*, !dbg !6278
  call void @llvm.dbg.value(metadata %struct.tty_serial* %4, metadata !6273, metadata !DIExpression()), !dbg !6277
  tail call fastcc void @uart_irq_update(%struct.device* noundef %0) #26, !dbg !6279
  %5 = tail call fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) #26, !dbg !6280
  %6 = icmp eq i32 %5, 0, !dbg !6280
  br i1 %6, label %15, label %7, !dbg !6281

7:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6282
  call void @llvm.dbg.value(metadata i8* %3, metadata !6274, metadata !DIExpression(DW_OP_deref)), !dbg !6283
  %8 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6284
  %9 = icmp eq i32 %8, 0, !dbg !6287
  br i1 %9, label %14, label %10, !dbg !6288

10:                                               ; preds = %7, %10
  %11 = load i8, i8* %3, align 1, !dbg !6289
  call void @llvm.dbg.value(metadata i8 %11, metadata !6274, metadata !DIExpression()), !dbg !6283
  call fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %4, i8 noundef zeroext %11) #26, !dbg !6290
  call void @llvm.dbg.value(metadata i8* %3, metadata !6274, metadata !DIExpression(DW_OP_deref)), !dbg !6283
  %12 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6284
  %13 = icmp eq i32 %12, 0, !dbg !6287
  br i1 %13, label %14, label %10, !dbg !6288, !llvm.loop !6291

14:                                               ; preds = %10, %7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6294
  br label %15, !dbg !6295

15:                                               ; preds = %14, %2
  %16 = call fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) #26, !dbg !6296
  %17 = icmp eq i32 %16, 0, !dbg !6296
  br i1 %17, label %44, label %18, !dbg !6298

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !6299
  %20 = bitcast i8* %19 to i16*, !dbg !6299
  %21 = load i16, i16* %20, align 4, !dbg !6299
  %22 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !6302
  %23 = bitcast i8* %22 to i16*, !dbg !6302
  %24 = load i16, i16* %23, align 2, !dbg !6302
  %25 = icmp eq i16 %21, %24, !dbg !6303
  br i1 %25, label %26, label %27, !dbg !6304

26:                                               ; preds = %18
  call fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6305
  br label %44, !dbg !6307

27:                                               ; preds = %18
  %28 = zext i16 %21 to i32, !dbg !6308
  %29 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !6309
  %30 = bitcast i8* %29 to i8**, !dbg !6309
  %31 = load i8*, i8** %30, align 4, !dbg !6309
  %32 = add i16 %21, 1, !dbg !6311
  store i16 %32, i16* %20, align 4, !dbg !6311
  %33 = getelementptr inbounds i8, i8* %31, i32 %28, !dbg !6312
  call fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %33) #26, !dbg !6313
  %34 = load i16, i16* %20, align 4, !dbg !6314
  %35 = zext i16 %34 to i32, !dbg !6316
  %36 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !6317
  %37 = bitcast i8* %36 to i32*, !dbg !6317
  %38 = load i32, i32* %37, align 4, !dbg !6317
  %39 = icmp ugt i32 %38, %35, !dbg !6318
  br i1 %39, label %41, label %40, !dbg !6319

40:                                               ; preds = %27
  store i16 0, i16* %20, align 4, !dbg !6320
  br label %41, !dbg !6322

41:                                               ; preds = %40, %27
  %42 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !6323
  %43 = bitcast i8* %42 to %struct.k_sem*, !dbg !6323
  call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %43) #26, !dbg !6324
  br label %44

44:                                               ; preds = %26, %41, %15
  ret void, !dbg !6325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6326 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6328, metadata !DIExpression()), !dbg !6329
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6330, !srcloc !6332
  tail call fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) #26, !dbg !6333
  ret void, !dbg !6334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6335 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6337, metadata !DIExpression()), !dbg !6339
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6340
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6340
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6340
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6338, metadata !DIExpression()), !dbg !6339
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 13, !dbg !6341
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6341
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6343
  br i1 %7, label %10, label %8, !dbg !6344

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6345
  br label %10, !dbg !6346

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6339
  ret i32 %11, !dbg !6347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6348 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6350, metadata !DIExpression()), !dbg !6354
  call void @llvm.dbg.value(metadata i8* %1, metadata !6351, metadata !DIExpression()), !dbg !6354
  call void @llvm.dbg.value(metadata i32 1, metadata !6352, metadata !DIExpression()), !dbg !6354
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6355
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6355
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6355
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6353, metadata !DIExpression()), !dbg !6354
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 6, !dbg !6356
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6356
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6358
  br i1 %8, label %11, label %9, !dbg !6359

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6360
  br label %11, !dbg !6361

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6354
  ret i32 %12, !dbg !6362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6363 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6365, metadata !DIExpression()), !dbg !6368
  call void @llvm.dbg.value(metadata i8 %1, metadata !6366, metadata !DIExpression()), !dbg !6368
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6369
  %4 = load i16, i16* %3, align 2, !dbg !6369
  %5 = zext i16 %4 to i32, !dbg !6370
  %6 = add nuw nsw i32 %5, 1, !dbg !6371
  call void @llvm.dbg.value(metadata i32 %6, metadata !6367, metadata !DIExpression()), !dbg !6368
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6372
  %8 = load i32, i32* %7, align 4, !dbg !6372
  %9 = icmp ult i32 %6, %8, !dbg !6374
  %10 = select i1 %9, i32 %6, i32 0, !dbg !6375
  call void @llvm.dbg.value(metadata i32 %10, metadata !6367, metadata !DIExpression()), !dbg !6368
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6376
  %12 = load i16, i16* %11, align 4, !dbg !6376
  %13 = zext i16 %12 to i32, !dbg !6378
  %14 = icmp eq i32 %10, %13, !dbg !6379
  br i1 %14, label %15, label %17, !dbg !6380

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef nonnull %0, i8 noundef zeroext 126) #26, !dbg !6381
  br label %23, !dbg !6383

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6384
  %19 = load i8*, i8** %18, align 4, !dbg !6384
  %20 = getelementptr inbounds i8, i8* %19, i32 %5, !dbg !6385
  store i8 %1, i8* %20, align 1, !dbg !6386
  %21 = trunc i32 %10 to i16, !dbg !6387
  store i16 %21, i16* %3, align 2, !dbg !6388
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6389
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %22) #26, !dbg !6390
  br label %23, !dbg !6391

23:                                               ; preds = %17, %15
  ret void, !dbg !6392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6393 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6395, metadata !DIExpression()), !dbg !6397
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6398
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6398
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6398
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6396, metadata !DIExpression()), !dbg !6397
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 9, !dbg !6399
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6399
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6401
  br i1 %7, label %10, label %8, !dbg !6402

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6403
  br label %10, !dbg !6404

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6397
  ret i32 %11, !dbg !6405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6408, metadata !DIExpression()), !dbg !6409
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6410, !srcloc !6412
  tail call fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6413
  ret void, !dbg !6414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6415 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6417, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i8* %1, metadata !6418, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i32 1, metadata !6419, metadata !DIExpression()), !dbg !6421
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6422
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6422
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6422
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6420, metadata !DIExpression()), !dbg !6421
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 5, !dbg !6423
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6423
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6425
  br i1 %8, label %11, label %9, !dbg !6426

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6427
  br label %11, !dbg !6428

11:                                               ; preds = %2, %9
  ret void, !dbg !6429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !6430 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6434, metadata !DIExpression()), !dbg !6435
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6436, !srcloc !6438
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #25, !dbg !6439
  ret void, !dbg !6440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6441 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6443, metadata !DIExpression()), !dbg !6445
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6446
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6446
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6446
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6444, metadata !DIExpression()), !dbg !6445
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 8, !dbg !6447
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6447
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6449
  br i1 %7, label %9, label %8, !dbg !6450

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6451
  br label %9, !dbg !6453

9:                                                ; preds = %8, %1
  ret void, !dbg !6454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6455 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6457, metadata !DIExpression()), !dbg !6459
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6460
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6460
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6460
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6458, metadata !DIExpression()), !dbg !6459
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 17, !dbg !6461
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6461
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6463
  br i1 %7, label %10, label %8, !dbg !6464

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6465
  br label %10, !dbg !6466

10:                                               ; preds = %1, %8
  ret void, !dbg !6467
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_rx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6468 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6472, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i8* %1, metadata !6473, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i32 %2, metadata !6474, metadata !DIExpression()), !dbg !6475
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6476
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6476
  tail call fastcc void @uart_irq_rx_disable(%struct.device* noundef %5) #26, !dbg !6477
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6478
  store i8* %1, i8** %6, align 4, !dbg !6479
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6480
  store i32 %2, i32* %7, align 4, !dbg !6481
  %8 = icmp eq i32 %2, 0, !dbg !6482
  br i1 %8, label %12, label %9, !dbg !6484

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6485
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %10, i32 noundef 0) #26, !dbg !6487
  %11 = load %struct.device*, %struct.device** %4, align 4, !dbg !6488
  tail call fastcc void @uart_irq_rx_enable(%struct.device* noundef %11) #26, !dbg !6489
  br label %12, !dbg !6490

12:                                               ; preds = %9, %3
  ret i32 0, !dbg !6491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6492 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6494, metadata !DIExpression()), !dbg !6495
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6496, !srcloc !6498
  tail call fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) #26, !dbg !6499
  ret void, !dbg !6500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6501 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6505, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i32 %1, metadata !6506, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata i32 -1, metadata !6507, metadata !DIExpression()), !dbg !6508
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6509, !srcloc !6511
  %3 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef -1) #25, !dbg !6512
  ret void, !dbg !6513
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6514 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6516, metadata !DIExpression()), !dbg !6517
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6518, !srcloc !6520
  tail call fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) #26, !dbg !6521
  ret void, !dbg !6522
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6523 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6525, metadata !DIExpression()), !dbg !6527
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6528
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6528
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6528
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6526, metadata !DIExpression()), !dbg !6527
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 10, !dbg !6529
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6529
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6531
  br i1 %7, label %9, label %8, !dbg !6532

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6533
  br label %9, !dbg !6535

9:                                                ; preds = %8, %1
  ret void, !dbg !6536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6537 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6539, metadata !DIExpression()), !dbg !6541
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6542
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6542
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6542
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6540, metadata !DIExpression()), !dbg !6541
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 11, !dbg !6543
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6543
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6545
  br i1 %7, label %9, label %8, !dbg !6546

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6547
  br label %9, !dbg !6549

9:                                                ; preds = %8, %1
  ret void, !dbg !6550
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_tx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6551 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6553, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata i8* %1, metadata !6554, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata i32 %2, metadata !6555, metadata !DIExpression()), !dbg !6556
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6557
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6557
  tail call fastcc void @uart_irq_tx_disable(%struct.device* noundef %5) #26, !dbg !6558
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6559
  store i8* %1, i8** %6, align 4, !dbg !6560
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6561
  store i32 %2, i32* %7, align 4, !dbg !6562
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6563
  %9 = add i32 %2, -1, !dbg !6564
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %8, i32 noundef %9) #26, !dbg !6565
  ret i32 0, !dbg !6566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_write(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6567 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6571, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.value(metadata i8* %1, metadata !6572, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.value(metadata i32 %2, metadata !6573, metadata !DIExpression()), !dbg !6574
  %4 = tail call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6575
  ret i32 %4, !dbg !6576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_read(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6577 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6581, metadata !DIExpression()), !dbg !6584
  call void @llvm.dbg.value(metadata i8* %1, metadata !6582, metadata !DIExpression()), !dbg !6584
  call void @llvm.dbg.value(metadata i32 %2, metadata !6583, metadata !DIExpression()), !dbg !6584
  %4 = tail call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6585
  ret i32 %4, !dbg !6586
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_putchar(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !6587 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !6589, metadata !DIExpression()), !dbg !6590
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6589, metadata !DIExpression(DW_OP_deref)), !dbg !6590
  %3 = call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %2, i32 noundef 1) #25, !dbg !6591
  ret i32 %3, !dbg !6592
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_getchar() local_unnamed_addr #1 !dbg !6593 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6599
  call void @llvm.dbg.value(metadata i8* %1, metadata !6597, metadata !DIExpression(DW_OP_deref)), !dbg !6600
  %2 = call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %1, i32 noundef 1) #25, !dbg !6601
  call void @llvm.dbg.value(metadata i32 %2, metadata !6598, metadata !DIExpression()), !dbg !6600
  %3 = icmp slt i32 %2, 0, !dbg !6602
  %4 = load i8, i8* %1, align 1, !dbg !6604
  %5 = zext i8 %4 to i32, !dbg !6604
  %6 = select i1 %3, i32 %2, i32 %5, !dbg !6604
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6605
  ret i32 %6, !dbg !6605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_init() local_unnamed_addr #1 !dbg !6606 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6608, metadata !DIExpression()), !dbg !6613
  %1 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !6614
  br i1 %1, label %2, label %13, !dbg !6616

2:                                                ; preds = %0
  %3 = tail call i32 @tty_init(%struct.tty_serial* noundef nonnull @console_serial, %struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !6617
  call void @llvm.dbg.value(metadata i32 %3, metadata !6609, metadata !DIExpression()), !dbg !6613
  %4 = icmp eq i32 %3, 0, !dbg !6618
  br i1 %4, label %5, label %13, !dbg !6620

5:                                                ; preds = %2
  %6 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6621
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %6, metadata !6610, metadata !DIExpression()), !dbg !6622
  %7 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %6, i32 0, i32 18, !dbg !6623
  %8 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %7, align 4, !dbg !6623
  %9 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %8, null, !dbg !6625
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @tty_set_tx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @console_txbuf, i32 0, i32 0), i32 noundef 16) #25, !dbg !6626
  %12 = tail call i32 @tty_set_rx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @console_rxbuf, i32 0, i32 0), i32 noundef 16) #25, !dbg !6627
  br label %13, !dbg !6628

13:                                               ; preds = %2, %0, %5, %10
  %14 = phi i32 [ 0, %10 ], [ -134, %5 ], [ -19, %0 ], [ %3, %2 ]
  ret i32 %14, !dbg !6629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6630 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6635, metadata !DIExpression()), !dbg !6636
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6637, !srcloc !6639
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !6640
  ret i1 %1, !dbg !6641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6642 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6644, metadata !DIExpression()), !dbg !6645
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !6646
  ret i1 %1, !dbg !6647
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6697, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6698, metadata !DIExpression()), !dbg !6699
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6700
  ret void, !dbg !6701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6702 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6719, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6720, metadata !DIExpression()), !dbg !6722
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6723
  %4 = load i32, i32* %3, align 4, !dbg !6723
  call void @llvm.dbg.value(metadata i32 %4, metadata !6721, metadata !DIExpression()), !dbg !6722
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6724
  ret void, !dbg !6725
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6726 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6730, metadata !DIExpression()), !dbg !6733
  call void @llvm.dbg.value(metadata i8* %0, metadata !6731, metadata !DIExpression()), !dbg !6733
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6734
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6734
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6732, metadata !DIExpression()), !dbg !6735
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6735
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6736
  %5 = bitcast i8* %4 to i32*, !dbg !6736
  %6 = load i32, i32* %5, align 4, !dbg !6736
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6737
  store i32 %6, i32* %7, align 4, !dbg !6738
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6739
  unreachable, !dbg !6740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6744, metadata !DIExpression()), !dbg !6745
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6746
  ret void, !dbg !6747
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6752, metadata !DIExpression()), !dbg !6753
  %2 = icmp sgt i32 %0, -1, !dbg !6754
  br i1 %2, label %3, label %8, !dbg !6756

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6757, !srcloc !6759
  %4 = and i32 %0, 31, !dbg !6760
  %5 = shl nuw i32 1, %4, !dbg !6761
  %6 = lshr i32 %0, 5, !dbg !6762
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6763
  store volatile i32 %5, i32* %7, align 4, !dbg !6764
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6765, !srcloc !6766
  br label %8, !dbg !6767

8:                                                ; preds = %3, %1
  ret void, !dbg !6768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6771, metadata !DIExpression()), !dbg !6772
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6773
  ret void, !dbg !6774
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6777, metadata !DIExpression()), !dbg !6778
  %2 = icmp sgt i32 %0, -1, !dbg !6779
  br i1 %2, label %3, label %8, !dbg !6781

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6782
  %5 = shl nuw i32 1, %4, !dbg !6784
  %6 = lshr i32 %0, 5, !dbg !6785
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6786
  store volatile i32 %5, i32* %7, align 4, !dbg !6787
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6788, !srcloc !6792
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6793, !srcloc !6796
  br label %8, !dbg !6797

8:                                                ; preds = %3, %1
  ret void, !dbg !6798
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6803, metadata !DIExpression()), !dbg !6804
  %2 = lshr i32 %0, 5, !dbg !6805
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6806
  %4 = load volatile i32, i32* %3, align 4, !dbg !6806
  %5 = and i32 %0, 31, !dbg !6807
  %6 = shl nuw i32 1, %5, !dbg !6807
  %7 = and i32 %4, %6, !dbg !6808
  ret i32 %7, !dbg !6809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6814, metadata !DIExpression()), !dbg !6817
  call void @llvm.dbg.value(metadata i32 %1, metadata !6815, metadata !DIExpression()), !dbg !6817
  call void @llvm.dbg.value(metadata i32 %2, metadata !6816, metadata !DIExpression()), !dbg !6817
  %4 = add i32 %1, 1, !dbg !6818
  call void @llvm.dbg.value(metadata i32 %4, metadata !6815, metadata !DIExpression()), !dbg !6817
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6821
  ret void, !dbg !6822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6827, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.value(metadata i32 %1, metadata !6828, metadata !DIExpression()), !dbg !6829
  %3 = trunc i32 %1 to i8, !dbg !6830
  %4 = shl i8 %3, 4, !dbg !6830
  %5 = and i32 %0, 15, !dbg !6832
  %6 = add nsw i32 %5, -4, !dbg !6832
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6832
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6832
  %9 = icmp slt i32 %0, 0, !dbg !6832
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6832
  store volatile i8 %4, i8* %10, align 1, !dbg !6830
  ret void, !dbg !6833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6834 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6836, metadata !DIExpression()), !dbg !6837
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6838
  ret void, !dbg !6839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6840 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6842
  tail call void @z_arm_int_exit() #25, !dbg !6843
  ret void, !dbg !6844
}

; Function Attrs: optsize
declare !dbg !6845 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6846 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6848 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6850
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6851
  tail call void @z_bss_zero() #25, !dbg !6852
  tail call void @z_data_copy() #25, !dbg !6853
  tail call void @z_arm_interrupt_init() #25, !dbg !6854
  tail call void @z_cstart() #28, !dbg !6855
  unreachable, !dbg !6855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6856 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6857
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6858, !srcloc !6861
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6862, !srcloc !6865
  ret void, !dbg !6866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6867 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6868
  %2 = and i32 %1, -15728641, !dbg !6868
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6868
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6869, !srcloc !6876
  call void @llvm.dbg.value(metadata i32 %3, metadata !6874, metadata !DIExpression()) #24, !dbg !6877
  %4 = and i32 %3, -5, !dbg !6878
  call void @llvm.dbg.value(metadata i32 %4, metadata !6879, metadata !DIExpression()) #24, !dbg !6884
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6888, !srcloc !6865
  ret void, !dbg !6890
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6894, metadata !DIExpression()), !dbg !6895
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6896
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6897
  store i32 %0, i32* %3, align 4, !dbg !6898
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6899
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6900
  store i32 %4, i32* %5, align 4, !dbg !6901
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6902
  %7 = or i32 %6, 268435456, !dbg !6902
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6902
  call void @llvm.dbg.value(metadata i32 0, metadata !6903, metadata !DIExpression()) #24, !dbg !6906
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6908, !srcloc !6909
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6910
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6911
  %10 = load i32, i32* %9, align 4, !dbg !6911
  ret i32 %10, !dbg !6912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6913 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7023, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7024, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.value(metadata i8* %2, metadata !7025, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7026, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.value(metadata i8* %4, metadata !7027, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.value(metadata i8* %5, metadata !7028, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.value(metadata i8* %6, metadata !7029, metadata !DIExpression()), !dbg !7031
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7032
  call void @llvm.dbg.value(metadata i8* %8, metadata !7030, metadata !DIExpression()), !dbg !7031
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7033
  %10 = bitcast i8* %9 to i32*, !dbg !7033
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7034
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7035
  %12 = bitcast i8* %8 to i32*, !dbg !7036
  store i32 %11, i32* %12, align 4, !dbg !7037
  %13 = ptrtoint i8* %4 to i32, !dbg !7038
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7039
  %15 = bitcast i8* %14 to i32*, !dbg !7039
  store i32 %13, i32* %15, align 4, !dbg !7040
  %16 = ptrtoint i8* %5 to i32, !dbg !7041
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7042
  %18 = bitcast i8* %17 to i32*, !dbg !7042
  store i32 %16, i32* %18, align 4, !dbg !7043
  %19 = ptrtoint i8* %6 to i32, !dbg !7044
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7045
  %21 = bitcast i8* %20 to i32*, !dbg !7045
  store i32 %19, i32* %21, align 4, !dbg !7046
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7047
  %23 = bitcast i8* %22 to i32*, !dbg !7047
  store i32 16777216, i32* %23, align 4, !dbg !7048
  %24 = ptrtoint i8* %8 to i32, !dbg !7049
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7050
  store i32 %24, i32* %25, align 8, !dbg !7051
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7052
  store i32 0, i32* %26, align 4, !dbg !7053
  ret void, !dbg !7054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !7055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7060, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata i32 %1, metadata !7061, metadata !DIExpression()), !dbg !7066
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7067
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7062, metadata !DIExpression()), !dbg !7066
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7068
  br i1 %4, label %19, label %5, !dbg !7070

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7065, metadata !DIExpression()), !dbg !7066
  %6 = icmp eq i32 %0, -22, !dbg !7071
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7071
  %8 = load i32, i32* %7, align 4, !dbg !7071
  br i1 %6, label %16, label %9, !dbg !7073

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7071
  %11 = icmp ule i32 %10, %0, !dbg !7071
  %12 = icmp ugt i32 %8, %0, !dbg !7071
  %13 = and i1 %12, %11, !dbg !7071
  %14 = icmp ugt i32 %8, %1, !dbg !7071
  %15 = and i1 %14, %13, !dbg !7071
  br i1 %15, label %18, label %19, !dbg !7071

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7071
  br i1 %17, label %18, label %19, !dbg !7073

18:                                               ; preds = %9, %16
  br label %19, !dbg !7074

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7066
  ret i32 %20, !dbg !7076
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7077 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7081, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i8* %1, metadata !7082, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7083, metadata !DIExpression()), !dbg !7084
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7085
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7086
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7087, !srcloc !7088
  unreachable, !dbg !7089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7090 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7108, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata i32 %1, metadata !7109, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata i32 %2, metadata !7110, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7111, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata i32 0, metadata !7112, metadata !DIExpression()), !dbg !7118
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7119
  %9 = and i32 %8, 511, !dbg !7120
  call void @llvm.dbg.value(metadata i32 %9, metadata !7113, metadata !DIExpression()), !dbg !7118
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7121
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7121
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7122
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7122
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7117, metadata !DIExpression()), !dbg !7123
  call void @llvm.dbg.value(metadata i32 0, metadata !7124, metadata !DIExpression()) #24, !dbg !7127
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7129, !srcloc !7130
  call void @llvm.dbg.value(metadata i8* %6, metadata !7115, metadata !DIExpression(DW_OP_deref)), !dbg !7118
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7131
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7116, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata i8* %5, metadata !7114, metadata !DIExpression(DW_OP_deref)), !dbg !7118
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7132
  call void @llvm.dbg.value(metadata i32 %12, metadata !7112, metadata !DIExpression()), !dbg !7118
  %13 = load i8, i8* %5, align 1, !dbg !7133, !range !7135
  call void @llvm.dbg.value(metadata i8 %13, metadata !7114, metadata !DIExpression()), !dbg !7118
  %14 = icmp eq i8 %13, 0, !dbg !7133
  br i1 %14, label %15, label %32, !dbg !7136

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7137
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7138
  %18 = load i8, i8* %6, align 1, !dbg !7139, !range !7135
  call void @llvm.dbg.value(metadata i8 %18, metadata !7115, metadata !DIExpression()), !dbg !7118
  %19 = icmp eq i8 %18, 0, !dbg !7139
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7141
  %21 = load i32, i32* %20, align 4, !dbg !7141
  br i1 %19, label %27, label %22, !dbg !7142

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7143
  %24 = icmp eq i32 %23, 0, !dbg !7146
  br i1 %24, label %25, label %31, !dbg !7147

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7148
  br label %29, !dbg !7150

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7151
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7141
  br label %31, !dbg !7153

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7153
  br label %32, !dbg !7154

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7154
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7154
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7154
  ret void, !dbg !7154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !7155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7160, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata i32 %1, metadata !7161, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata i32 %2, metadata !7162, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata i8* %3, metadata !7163, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata i8 0, metadata !7164, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7165, metadata !DIExpression()), !dbg !7166
  store i8 0, i8* %3, align 1, !dbg !7167
  %5 = icmp ult i32 %2, -16777216, !dbg !7168
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !7170
  br i1 %8, label %16, label %9, !dbg !7170

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !7171
  %11 = icmp eq i32 %10, 0, !dbg !7171
  br i1 %11, label %12, label %13, !dbg !7173

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !7165, metadata !DIExpression()), !dbg !7166
  store i8 1, i8* %3, align 1, !dbg !7176
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !7166
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !7165, metadata !DIExpression()), !dbg !7166
  br label %16, !dbg !7179

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !7166
  ret %struct.__esf* %17, !dbg !7180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7181 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7185, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 %1, metadata !7186, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8* %2, metadata !7187, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7188, metadata !DIExpression()), !dbg !7189
  store i8 0, i8* %2, align 1, !dbg !7190
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7191

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7192
  call void @llvm.dbg.value(metadata i32 %5, metadata !7188, metadata !DIExpression()), !dbg !7189
  br label %11, !dbg !7194

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7195
  call void @llvm.dbg.value(metadata i32 %7, metadata !7188, metadata !DIExpression()), !dbg !7189
  br label %11, !dbg !7196

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7197
  call void @llvm.dbg.value(metadata i32 0, metadata !7188, metadata !DIExpression()), !dbg !7189
  br label %11, !dbg !7198

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7199
  call void @llvm.dbg.value(metadata i32 0, metadata !7188, metadata !DIExpression()), !dbg !7189
  br label %11, !dbg !7200

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7201
  br label %11, !dbg !7202

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !7203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7204 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7208, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.value(metadata i8* %1, metadata !7209, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.value(metadata i32 0, metadata !7210, metadata !DIExpression()), !dbg !7211
  store i8 0, i8* %1, align 1, !dbg !7212
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7213
  %4 = and i32 %3, 2, !dbg !7215
  %5 = icmp eq i32 %4, 0, !dbg !7216
  br i1 %5, label %6, label %33, !dbg !7217

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7218
  %8 = icmp sgt i32 %7, -1, !dbg !7220
  br i1 %8, label %9, label %33, !dbg !7221

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7222
  %11 = and i32 %10, 1073741824, !dbg !7224
  %12 = icmp eq i32 %11, 0, !dbg !7225
  br i1 %12, label %33, label %13, !dbg !7226

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7227
  br i1 %14, label %15, label %18, !dbg !7230

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7231
  %17 = load i32, i32* %16, align 4, !dbg !7231
  call void @llvm.dbg.value(metadata i32 %17, metadata !7210, metadata !DIExpression()), !dbg !7211
  br label %33, !dbg !7233

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7234
  %20 = and i32 %19, 255, !dbg !7236
  %21 = icmp eq i32 %20, 0, !dbg !7237
  br i1 %21, label %24, label %22, !dbg !7238

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7239
  call void @llvm.dbg.value(metadata i32 %23, metadata !7210, metadata !DIExpression()), !dbg !7211
  br label %33, !dbg !7241

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7242
  %26 = and i32 %25, 65280, !dbg !7244
  %27 = icmp eq i32 %26, 0, !dbg !7245
  br i1 %27, label %29, label %28, !dbg !7246

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7247
  call void @llvm.dbg.value(metadata i32 0, metadata !7210, metadata !DIExpression()), !dbg !7211
  br label %33, !dbg !7249

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7250
  %31 = icmp ult i32 %30, 65536, !dbg !7252
  br i1 %31, label %33, label %32, !dbg !7253

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !7254
  call void @llvm.dbg.value(metadata i32 0, metadata !7210, metadata !DIExpression()), !dbg !7211
  br label %33, !dbg !7256

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !7211
  call void @llvm.dbg.value(metadata i32 %34, metadata !7210, metadata !DIExpression()), !dbg !7211
  ret i32 %34, !dbg !7257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7258 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7260, metadata !DIExpression()), !dbg !7273
  call void @llvm.dbg.value(metadata i32 %1, metadata !7261, metadata !DIExpression()), !dbg !7273
  call void @llvm.dbg.value(metadata i8* %2, metadata !7262, metadata !DIExpression()), !dbg !7273
  call void @llvm.dbg.value(metadata i32 0, metadata !7263, metadata !DIExpression()), !dbg !7273
  call void @llvm.dbg.value(metadata i32 -22, metadata !7264, metadata !DIExpression()), !dbg !7273
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7274
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7276
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7278
  %7 = and i32 %6, 2, !dbg !7279
  %8 = icmp eq i32 %7, 0, !dbg !7280
  br i1 %8, label %19, label %9, !dbg !7281

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7282
  call void @llvm.dbg.value(metadata i32 %10, metadata !7265, metadata !DIExpression()), !dbg !7283
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7284
  %12 = and i32 %11, 128, !dbg !7286
  %13 = icmp eq i32 %12, 0, !dbg !7287
  br i1 %13, label %19, label %14, !dbg !7288

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !7264, metadata !DIExpression()), !dbg !7273
  %15 = icmp eq i32 %1, 0, !dbg !7289
  br i1 %15, label %19, label %16, !dbg !7292

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7293
  %18 = and i32 %17, -129, !dbg !7293
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7293
  br label %19, !dbg !7295

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !7273
  call void @llvm.dbg.value(metadata i32 %20, metadata !7264, metadata !DIExpression()), !dbg !7273
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7296
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7298
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7300
  %24 = and i32 %23, 16, !dbg !7301
  %25 = icmp eq i32 %24, 0, !dbg !7301
  br i1 %25, label %26, label %30, !dbg !7302

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7303
  %28 = and i32 %27, 2, !dbg !7304
  %29 = icmp eq i32 %28, 0, !dbg !7304
  br i1 %29, label %39, label %30, !dbg !7305

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7306
  %32 = and i32 %31, 2048, !dbg !7307
  %33 = icmp eq i32 %32, 0, !dbg !7307
  br i1 %33, label %39, label %34, !dbg !7308

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !7309
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !7310
  call void @llvm.dbg.value(metadata i32 %36, metadata !7268, metadata !DIExpression()), !dbg !7311
  %37 = icmp eq i32 %36, 0, !dbg !7312
  br i1 %37, label %39, label %38, !dbg !7314

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !7315, metadata !DIExpression()) #24, !dbg !7318
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !7321, !srcloc !7322
  call void @llvm.dbg.value(metadata i32 2, metadata !7263, metadata !DIExpression()), !dbg !7273
  br label %39, !dbg !7323

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !7273
  call void @llvm.dbg.value(metadata i32 %40, metadata !7263, metadata !DIExpression()), !dbg !7273
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7324
  %42 = and i32 %41, 32, !dbg !7326
  %43 = icmp eq i32 %42, 0, !dbg !7327
  br i1 %43, label %47, label %44, !dbg !7328

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7329
  %46 = and i32 %45, -8193, !dbg !7329
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7329
  br label %47, !dbg !7331

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7332
  %49 = or i32 %48, 255, !dbg !7332
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7332
  store i8 0, i8* %2, align 1, !dbg !7333
  ret i32 %40, !dbg !7334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !7335 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7339, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i32 %0, metadata !7340, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i8* %1, metadata !7341, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i32 0, metadata !7342, metadata !DIExpression()), !dbg !7346
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7347
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7349
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7351
  %6 = and i32 %5, 512, !dbg !7352
  %7 = icmp eq i32 %6, 0, !dbg !7352
  br i1 %7, label %18, label %8, !dbg !7353

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7354
  call void @llvm.dbg.value(metadata i32 %9, metadata !7343, metadata !DIExpression()), !dbg !7355
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7356
  %11 = and i32 %10, 32768, !dbg !7358
  %12 = icmp ne i32 %11, 0, !dbg !7359
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7360
  br i1 %14, label %15, label %18, !dbg !7360

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7361
  %17 = and i32 %16, -32769, !dbg !7361
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7361
  br label %18, !dbg !7365

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7366
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7368
  %21 = and i32 %20, 256, !dbg !7370
  %22 = icmp eq i32 %21, 0, !dbg !7371
  br i1 %22, label %23, label %25, !dbg !7372

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7373
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7375
  %27 = or i32 %26, 65280, !dbg !7375
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7375
  store i8 0, i8* %1, align 1, !dbg !7376
  ret void, !dbg !7377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7378 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7384, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata i32 0, metadata !7385, metadata !DIExpression()), !dbg !7386
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7387
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7389
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7391
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7393
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7395
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7397
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7399
  %8 = or i32 %7, -65536, !dbg !7399
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7399
  ret void, !dbg !7400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7401 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7405, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata i8* %0, metadata !7406, metadata !DIExpression()), !dbg !7407
  store i8 0, i8* %0, align 1, !dbg !7408
  ret void, !dbg !7409
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7410 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7414, metadata !DIExpression()), !dbg !7417
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7418
  %3 = load i32, i32* %2, align 4, !dbg !7418
  %4 = inttoptr i32 %3 to i16*, !dbg !7419
  call void @llvm.dbg.value(metadata i16* %4, metadata !7415, metadata !DIExpression()), !dbg !7417
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7420
  %6 = or i32 %5, 256, !dbg !7420
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7420
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7421, !srcloc !7424
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7425, !srcloc !7428
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7429
  %8 = load i16, i16* %7, align 2, !dbg !7430
  call void @llvm.dbg.value(metadata i16 %8, metadata !7416, metadata !DIExpression()), !dbg !7417
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7431
  %10 = and i32 %9, -257, !dbg !7431
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7431
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7432, !srcloc !7424
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7434, !srcloc !7428
  %11 = icmp eq i16 %8, -8446, !dbg !7436
  ret i1 %11, !dbg !7438
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7439 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7440
  %2 = or i32 %1, 16, !dbg !7440
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7440
  ret void, !dbg !7441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7442 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7445, metadata !DIExpression()), !dbg !7446
  br label %1, !dbg !7447

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7445, metadata !DIExpression()), !dbg !7446
  tail call fastcc void @__NVIC_SetPriority.15(i32 noundef %2) #26, !dbg !7449
  %3 = add nuw nsw i32 %2, 1, !dbg !7452
  call void @llvm.dbg.value(metadata i32 %3, metadata !7445, metadata !DIExpression()), !dbg !7446
  %4 = icmp eq i32 %3, 86, !dbg !7453
  br i1 %4, label %5, label %1, !dbg !7447, !llvm.loop !7454

5:                                                ; preds = %1
  ret void, !dbg !7456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.15(i32 noundef %0) unnamed_addr #15 !dbg !7457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7459, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.value(metadata i32 1, metadata !7460, metadata !DIExpression()), !dbg !7461
  %2 = and i32 %0, 15, !dbg !7462
  %3 = add nsw i32 %2, -4, !dbg !7462
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7462
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7462
  %6 = icmp slt i32 %0, 0, !dbg !7462
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7462
  store volatile i8 16, i8* %7, align 1, !dbg !7463
  ret void, !dbg !7465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7466 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7572, metadata !DIExpression()), !dbg !7573
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7574
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7576
  br i1 %3, label %4, label %12, !dbg !7577

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7578, !srcloc !7590
  call void @llvm.dbg.value(metadata i32 %5, metadata !7581, metadata !DIExpression()) #24, !dbg !7591
  %6 = icmp eq i32 %5, 0, !dbg !7592
  br i1 %6, label %12, label %7, !dbg !7593

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7594
  %9 = or i32 %8, 268435456, !dbg !7594
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7594
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7596
  %11 = and i32 %10, -32769, !dbg !7596
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7596
  br label %12, !dbg !7597

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7598
  ret void, !dbg !7599
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7600 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7601
  ret void, !dbg !7602
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !468, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i8 0, metadata !469, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i32 64, metadata !471, metadata !DIExpression()), !dbg !7603
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7604
  %3 = load i32, i32* %2, align 4, !dbg !7604
  %4 = add i32 %3, -64, !dbg !7606
  call void @llvm.dbg.value(metadata i32 %4, metadata !470, metadata !DIExpression()), !dbg !7603
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7607
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7608
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7609
  call void @llvm.dbg.value(metadata i8 1, metadata !469, metadata !DIExpression()), !dbg !7603
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7610
  ret void, !dbg !7611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7612 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7613
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7614, !srcloc !7617
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7618, !srcloc !7621
  ret void, !dbg !7622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7623 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7624, !srcloc !7627
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7628
  ret void, !dbg !7629
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7630 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7645, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i8 %1, metadata !7646, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i32 %2, metadata !7647, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i32 %3, metadata !7648, metadata !DIExpression()), !dbg !7649
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7650
  ret void, !dbg !7652
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7653 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7658, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata i8 %1, metadata !7659, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata i32 undef, metadata !7660, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata i32 undef, metadata !7661, metadata !DIExpression()), !dbg !7663
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7664
  call void @llvm.dbg.value(metadata i8 %3, metadata !7662, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7663
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7665
  call void @llvm.dbg.value(metadata i32 %4, metadata !7662, metadata !DIExpression()), !dbg !7663
  %5 = trunc i32 %4 to i8, !dbg !7666
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7667
  ret void, !dbg !7668
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7669 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7673, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i8 %1, metadata !7674, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i8 %2, metadata !7675, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i1 %3, metadata !7676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7679
  %5 = zext i8 %2 to i32, !dbg !7680
  call void @llvm.dbg.value(metadata i32 %5, metadata !7678, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i32 0, metadata !7677, metadata !DIExpression()), !dbg !7679
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7678, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i32 0, metadata !7677, metadata !DIExpression()), !dbg !7679
  %7 = icmp eq i8 %1, 0, !dbg !7681
  br i1 %7, label %29, label %8, !dbg !7684

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7678, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i32 %10, metadata !7677, metadata !DIExpression()), !dbg !7679
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7685
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7688
  %13 = load i32, i32* %12, align 4, !dbg !7688
  %14 = icmp eq i32 %13, 0, !dbg !7689
  br i1 %14, label %25, label %15, !dbg !7690

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7691

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7693
  %18 = icmp eq i32 %17, 0, !dbg !7693
  br i1 %18, label %29, label %19, !dbg !7694

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7695
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7696
  call void @llvm.dbg.value(metadata i32 %21, metadata !7678, metadata !DIExpression()), !dbg !7679
  %22 = icmp eq i32 %21, -22, !dbg !7697
  br i1 %22, label %29, label %23, !dbg !7699

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7700
  call void @llvm.dbg.value(metadata i32 %24, metadata !7678, metadata !DIExpression()), !dbg !7679
  br label %25, !dbg !7701

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7679
  call void @llvm.dbg.value(metadata i32 %26, metadata !7678, metadata !DIExpression()), !dbg !7679
  %27 = add nuw nsw i32 %10, 1, !dbg !7702
  call void @llvm.dbg.value(metadata i32 %27, metadata !7677, metadata !DIExpression()), !dbg !7679
  %28 = icmp eq i32 %27, %6, !dbg !7681
  br i1 %28, label %29, label %8, !dbg !7684, !llvm.loop !7703

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7679
  ret i32 %30, !dbg !7705
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7706 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7710, metadata !DIExpression()), !dbg !7712
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7713
  %3 = load i32, i32* %2, align 4, !dbg !7713
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7714, !range !3849
  %5 = icmp ult i32 %4, 2, !dbg !7714
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7715
  br i1 %7, label %8, label %15, !dbg !7715

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7716
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7717
  %11 = load i32, i32* %10, align 4, !dbg !7717
  %12 = and i32 %11, %9, !dbg !7718
  %13 = icmp eq i32 %12, 0, !dbg !7719
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7711, metadata !DIExpression()), !dbg !7712
  ret i32 %16, !dbg !7720
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7721 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7725, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7726, metadata !DIExpression()), !dbg !7728
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7729
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7729
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7727, metadata !DIExpression()), !dbg !7730
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7731
  %6 = load i32, i32* %5, align 4, !dbg !7731
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7732
  store i32 %6, i32* %7, align 4, !dbg !7733
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7734
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7735
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7736
  %11 = load i32, i32* %10, align 4, !dbg !7736
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7737
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7738
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7739
  ret i32 %12, !dbg !7740
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7741 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7748, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7749, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata i32 undef, metadata !7750, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata i32 %2, metadata !7751, metadata !DIExpression()), !dbg !7752
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7753
  %5 = load i32, i32* %4, align 4, !dbg !7753
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7754
  %7 = or i32 %6, %5, !dbg !7755
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7756
  store i32 %7, i32* %8, align 4, !dbg !7757
  ret void, !dbg !7758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7759 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7763, metadata !DIExpression()), !dbg !7765
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7764, metadata !DIExpression()), !dbg !7765
  %3 = zext i8 %0 to i32, !dbg !7766
  %4 = icmp ugt i8 %0, 7, !dbg !7768
  br i1 %4, label %6, label %5, !dbg !7769

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7770
  br label %6, !dbg !7771

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7765
  ret i32 %7, !dbg !7772
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7777, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7778, metadata !DIExpression()), !dbg !7779
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7780
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7781
  %4 = load i32, i32* %3, align 4, !dbg !7781
  %5 = and i32 %4, -32, !dbg !7782
  %6 = or i32 %5, %0, !dbg !7783
  %7 = or i32 %6, 16, !dbg !7783
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7784
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7785
  %9 = load i32, i32* %8, align 4, !dbg !7785
  %10 = or i32 %9, 1, !dbg !7786
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7787
  ret void, !dbg !7788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7792, metadata !DIExpression()), !dbg !7793
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7794
  ret void, !dbg !7795
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7800, metadata !DIExpression()), !dbg !7801
  %2 = icmp ult i32 %0, 33, !dbg !7802
  br i1 %2, label %11, label %3, !dbg !7804

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7805
  br i1 %4, label %11, label %5, !dbg !7807

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7808
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7809, !range !3849
  %8 = mul nsw i32 %7, -2, !dbg !7810
  %9 = add nsw i32 %8, 62, !dbg !7810
  %10 = and i32 %9, 62, !dbg !7811
  br label %11, !dbg !7812

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7801
  ret i32 %12, !dbg !7813
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7814 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7818, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i8 %1, metadata !7819, metadata !DIExpression()), !dbg !7820
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7821
  ret void, !dbg !7823
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7824 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7828, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i8 %1, metadata !7829, metadata !DIExpression()), !dbg !7835
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7836
  call void @llvm.dbg.value(metadata i8 %3, metadata !7830, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7835
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7837
  call void @llvm.dbg.value(metadata i32 %4, metadata !7830, metadata !DIExpression()), !dbg !7835
  %5 = icmp ne i32 %4, -22, !dbg !7838
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7839
  call void @llvm.dbg.value(metadata i32 %4, metadata !7831, metadata !DIExpression()), !dbg !7840
  br i1 %7, label %8, label %12, !dbg !7839

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7831, metadata !DIExpression()), !dbg !7840
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7841
  %10 = add i32 %9, 1, !dbg !7844
  call void @llvm.dbg.value(metadata i32 %10, metadata !7831, metadata !DIExpression()), !dbg !7840
  %11 = icmp eq i32 %10, 8, !dbg !7845
  br i1 %11, label %12, label %8, !dbg !7846, !llvm.loop !7847

12:                                               ; preds = %8, %2
  ret void, !dbg !7849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7853, metadata !DIExpression()), !dbg !7854
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7855
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7856
  ret void, !dbg !7857
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7858 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7861
  %2 = icmp ugt i32 %1, 8, !dbg !7863
  br i1 %2, label %14, label %3, !dbg !7864

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7865
  call void @llvm.dbg.value(metadata i32 0, metadata !7860, metadata !DIExpression()), !dbg !7866
  %4 = icmp eq i32 %1, 0, !dbg !7867
  br i1 %4, label %12, label %5, !dbg !7870

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7870

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7860, metadata !DIExpression()), !dbg !7866
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7871
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7873
  %10 = add nuw i32 %8, 1, !dbg !7874
  call void @llvm.dbg.value(metadata i32 %10, metadata !7860, metadata !DIExpression()), !dbg !7866
  %11 = icmp eq i32 %10, %1, !dbg !7867
  br i1 %11, label %12, label %7, !dbg !7870, !llvm.loop !7875

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7877
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7878
  tail call void @arm_core_mpu_enable() #26, !dbg !7879
  br label %14, !dbg !7880

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7866
  ret i32 %15, !dbg !7881
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7882 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7889, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8* %1, metadata !7890, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8* %0, metadata !7891, metadata !DIExpression()), !dbg !7892
  %3 = load i8, i8* %1, align 1, !dbg !7893
  %4 = icmp eq i8 %3, 0, !dbg !7894
  br i1 %4, label %13, label %5, !dbg !7895

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7889, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8* %8, metadata !7890, metadata !DIExpression()), !dbg !7892
  store i8 %6, i8* %7, align 1, !dbg !7896
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7898
  call void @llvm.dbg.value(metadata i8* %9, metadata !7889, metadata !DIExpression()), !dbg !7892
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7899
  call void @llvm.dbg.value(metadata i8* %10, metadata !7890, metadata !DIExpression()), !dbg !7892
  %11 = load i8, i8* %10, align 1, !dbg !7893
  %12 = icmp eq i8 %11, 0, !dbg !7894
  br i1 %12, label %13, label %5, !dbg !7895, !llvm.loop !7900

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7902
  ret i8* %0, !dbg !7903
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7904 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7908, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.value(metadata i8* %1, metadata !7909, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.value(metadata i32 %2, metadata !7910, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.value(metadata i8* %0, metadata !7911, metadata !DIExpression()), !dbg !7912
  %4 = icmp eq i32 %2, 0, !dbg !7913
  br i1 %4, label %22, label %5, !dbg !7914

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7908, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.value(metadata i32 %7, metadata !7910, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.value(metadata i8* %8, metadata !7909, metadata !DIExpression()), !dbg !7912
  %9 = load i8, i8* %8, align 1, !dbg !7915
  %10 = icmp eq i8 %9, 0, !dbg !7916
  br i1 %10, label %16, label %11, !dbg !7917

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7918
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7920
  call void @llvm.dbg.value(metadata i8* %12, metadata !7909, metadata !DIExpression()), !dbg !7912
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7921
  call void @llvm.dbg.value(metadata i8* %13, metadata !7908, metadata !DIExpression()), !dbg !7912
  %14 = add i32 %7, -1, !dbg !7922
  call void @llvm.dbg.value(metadata i32 %14, metadata !7910, metadata !DIExpression()), !dbg !7912
  %15 = icmp eq i32 %14, 0, !dbg !7913
  br i1 %15, label %22, label %5, !dbg !7914, !llvm.loop !7923

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7908, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.value(metadata i32 %18, metadata !7910, metadata !DIExpression()), !dbg !7912
  store i8 0, i8* %17, align 1, !dbg !7925
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7927
  call void @llvm.dbg.value(metadata i8* %19, metadata !7908, metadata !DIExpression()), !dbg !7912
  %20 = add i32 %18, -1, !dbg !7928
  call void @llvm.dbg.value(metadata i32 %20, metadata !7910, metadata !DIExpression()), !dbg !7912
  %21 = icmp eq i32 %20, 0, !dbg !7929
  br i1 %21, label %22, label %16, !dbg !7930, !llvm.loop !7931

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7933
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7934 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7938, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i32 %1, metadata !7939, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.value(metadata i32 %1, metadata !7940, metadata !DIExpression()), !dbg !7941
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7942

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7938, metadata !DIExpression()), !dbg !7941
  %6 = load i8, i8* %5, align 1, !dbg !7943
  %7 = icmp eq i8 %6, %3, !dbg !7944
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7945
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7946
  call void @llvm.dbg.value(metadata i8* %10, metadata !7938, metadata !DIExpression()), !dbg !7941
  br i1 %9, label %11, label %4, !dbg !7945, !llvm.loop !7948

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7950
  ret i8* %12, !dbg !7951
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7952 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7954, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %1, metadata !7955, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i8* null, metadata !7956, metadata !DIExpression()), !dbg !7957
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7958

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7957
  call void @llvm.dbg.value(metadata i8* %6, metadata !7956, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i8* %5, metadata !7954, metadata !DIExpression()), !dbg !7957
  %7 = load i8, i8* %5, align 1, !dbg !7959
  %8 = icmp eq i8 %7, %3, !dbg !7962
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7963
  call void @llvm.dbg.value(metadata i8* %9, metadata !7956, metadata !DIExpression()), !dbg !7957
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7964
  call void @llvm.dbg.value(metadata i8* %10, metadata !7954, metadata !DIExpression()), !dbg !7957
  %11 = icmp eq i8 %7, 0, !dbg !7965
  br i1 %11, label %12, label %4, !dbg !7965, !llvm.loop !7966

12:                                               ; preds = %4
  ret i8* %9, !dbg !7968
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7973, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32 0, metadata !7974, metadata !DIExpression()), !dbg !7975
  %2 = load i8, i8* %0, align 1, !dbg !7976
  %3 = icmp eq i8 %2, 0, !dbg !7977
  br i1 %3, label %11, label %4, !dbg !7978

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7974, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i8* %6, metadata !7973, metadata !DIExpression()), !dbg !7975
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7979
  call void @llvm.dbg.value(metadata i8* %7, metadata !7973, metadata !DIExpression()), !dbg !7975
  %8 = add i32 %5, 1, !dbg !7981
  call void @llvm.dbg.value(metadata i32 %8, metadata !7974, metadata !DIExpression()), !dbg !7975
  %9 = load i8, i8* %7, align 1, !dbg !7976
  %10 = icmp eq i8 %9, 0, !dbg !7977
  br i1 %10, label %11, label %4, !dbg !7978, !llvm.loop !7982

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7975
  ret i32 %12, !dbg !7984
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7985 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7989, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32 %1, metadata !7990, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32 0, metadata !7991, metadata !DIExpression()), !dbg !7992
  %3 = load i8, i8* %0, align 1, !dbg !7993
  %4 = icmp ne i8 %3, 0, !dbg !7994
  %5 = icmp ne i32 %1, 0, !dbg !7995
  %6 = and i1 %4, %5, !dbg !7995
  br i1 %6, label %7, label %16, !dbg !7996

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7991, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i8* %9, metadata !7989, metadata !DIExpression()), !dbg !7992
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7997
  call void @llvm.dbg.value(metadata i8* %10, metadata !7989, metadata !DIExpression()), !dbg !7992
  %11 = add nuw i32 %8, 1, !dbg !7999
  call void @llvm.dbg.value(metadata i32 %11, metadata !7991, metadata !DIExpression()), !dbg !7992
  %12 = load i8, i8* %10, align 1, !dbg !7993
  %13 = icmp ne i8 %12, 0, !dbg !7994
  %14 = icmp ult i32 %11, %1, !dbg !7995
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7995
  br i1 %15, label %7, label %16, !dbg !7996, !llvm.loop !8000

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7992
  ret i32 %17, !dbg !8002
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !8003 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8007, metadata !DIExpression()), !dbg !8009
  call void @llvm.dbg.value(metadata i8* %1, metadata !8008, metadata !DIExpression()), !dbg !8009
  %3 = load i8, i8* %0, align 1, !dbg !8010
  %4 = load i8, i8* %1, align 1, !dbg !8011
  %5 = icmp ne i8 %3, %4, !dbg !8012
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8013
  br i1 %7, label %18, label %8, !dbg !8013

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8008, metadata !DIExpression()), !dbg !8009
  call void @llvm.dbg.value(metadata i8* %10, metadata !8007, metadata !DIExpression()), !dbg !8009
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8014
  call void @llvm.dbg.value(metadata i8* %11, metadata !8007, metadata !DIExpression()), !dbg !8009
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8016
  call void @llvm.dbg.value(metadata i8* %12, metadata !8008, metadata !DIExpression()), !dbg !8009
  %13 = load i8, i8* %11, align 1, !dbg !8010
  %14 = load i8, i8* %12, align 1, !dbg !8011
  %15 = icmp ne i8 %13, %14, !dbg !8012
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8013
  br i1 %17, label %18, label %8, !dbg !8013, !llvm.loop !8017

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8010
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8011
  %21 = zext i8 %19 to i32, !dbg !8020
  %22 = zext i8 %20 to i32, !dbg !8021
  %23 = sub nsw i32 %21, %22, !dbg !8022
  ret i32 %23, !dbg !8023
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8024 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8028, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %1, metadata !8029, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i32 %2, metadata !8030, metadata !DIExpression()), !dbg !8031
  %4 = icmp eq i32 %2, 0, !dbg !8032
  br i1 %4, label %23, label %5, !dbg !8032

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8030, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %7, metadata !8029, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %8, metadata !8028, metadata !DIExpression()), !dbg !8031
  %9 = load i8, i8* %8, align 1, !dbg !8033
  %10 = load i8, i8* %7, align 1, !dbg !8034
  %11 = icmp ne i8 %9, %10, !dbg !8035
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8036
  br i1 %13, label %19, label %14, !dbg !8036

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8037
  call void @llvm.dbg.value(metadata i8* %15, metadata !8028, metadata !DIExpression()), !dbg !8031
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8039
  call void @llvm.dbg.value(metadata i8* %16, metadata !8029, metadata !DIExpression()), !dbg !8031
  %17 = add i32 %6, -1, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %17, metadata !8030, metadata !DIExpression()), !dbg !8031
  %18 = icmp eq i32 %17, 0, !dbg !8032
  br i1 %18, label %23, label %5, !dbg !8032, !llvm.loop !8041

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8044
  %21 = zext i8 %10 to i32, !dbg !8045
  %22 = sub nsw i32 %20, %21, !dbg !8046
  br label %23, !dbg !8047

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8047
  ret i32 %24, !dbg !8048
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8049 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8054, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8* %1, metadata !8055, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8** %2, metadata !8056, metadata !DIExpression()), !dbg !8059
  %4 = icmp eq i8* %0, null, !dbg !8060
  br i1 %4, label %5, label %7, !dbg !8060

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8061
  br label %7, !dbg !8060

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8060
  call void @llvm.dbg.value(metadata i8* %8, metadata !8057, metadata !DIExpression()), !dbg !8059
  %9 = load i8, i8* %8, align 1, !dbg !8062
  %10 = icmp eq i8 %9, 0, !dbg !8062
  br i1 %10, label %33, label %11, !dbg !8063

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8057, metadata !DIExpression()), !dbg !8059
  %14 = zext i8 %12 to i32, !dbg !8062
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8064
  %16 = icmp eq i8* %15, null, !dbg !8063
  br i1 %16, label %21, label %17, !dbg !8065

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8066
  call void @llvm.dbg.value(metadata i8* %18, metadata !8057, metadata !DIExpression()), !dbg !8059
  %19 = load i8, i8* %18, align 1, !dbg !8062
  %20 = icmp eq i8 %19, 0, !dbg !8062
  br i1 %20, label %33, label %11, !dbg !8063, !llvm.loop !8068

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8058, metadata !DIExpression()), !dbg !8059
  %24 = zext i8 %22 to i32, !dbg !8070
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8071
  %26 = icmp eq i8* %25, null, !dbg !8072
  br i1 %26, label %27, label %31, !dbg !8073

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8074
  call void @llvm.dbg.value(metadata i8* %28, metadata !8058, metadata !DIExpression()), !dbg !8059
  %29 = load i8, i8* %28, align 1, !dbg !8070
  %30 = icmp eq i8 %29, 0, !dbg !8070
  br i1 %30, label %33, label %21, !dbg !8076, !llvm.loop !8077

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8079
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8082
  br label %33, !dbg !8083

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8059
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8059
  store i8* %34, i8** %2, align 4, !dbg !8059
  ret i8* %35, !dbg !8084
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8085 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8087, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i8* %1, metadata !8088, metadata !DIExpression()), !dbg !8089
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8090
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8091
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8092
  ret i8* %0, !dbg !8093
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8094 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8096, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i8* %1, metadata !8097, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %2, metadata !8098, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i8* %0, metadata !8099, metadata !DIExpression()), !dbg !8101
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8102
  call void @llvm.dbg.value(metadata i32 %4, metadata !8100, metadata !DIExpression()), !dbg !8101
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8103
  call void @llvm.dbg.value(metadata i8* %5, metadata !8096, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i8* %1, metadata !8097, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %2, metadata !8098, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %2, metadata !8098, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8101
  %6 = icmp eq i32 %2, 0, !dbg !8104
  br i1 %6, label %18, label %7, !dbg !8105

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8106
  call void @llvm.dbg.value(metadata i8* %9, metadata !8096, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i8* %10, metadata !8097, metadata !DIExpression()), !dbg !8101
  %12 = load i8, i8* %10, align 1, !dbg !8107
  %13 = icmp eq i8 %12, 0, !dbg !8108
  br i1 %13, label %18, label %14, !dbg !8109

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8110
  call void @llvm.dbg.value(metadata i8* %15, metadata !8097, metadata !DIExpression()), !dbg !8101
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8112
  call void @llvm.dbg.value(metadata i8* %16, metadata !8096, metadata !DIExpression()), !dbg !8101
  store i8 %12, i8* %9, align 1, !dbg !8113
  call void @llvm.dbg.value(metadata i32 %11, metadata !8098, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %11, metadata !8098, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8101
  %17 = icmp eq i32 %11, 0, !dbg !8104
  br i1 %17, label %18, label %7, !dbg !8105, !llvm.loop !8114

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8101
  store i8 0, i8* %19, align 1, !dbg !8116
  ret i8* %0, !dbg !8117
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8118 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8122, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i8* %1, metadata !8123, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i32 %2, metadata !8124, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i8* %0, metadata !8125, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i8* %1, metadata !8126, metadata !DIExpression()), !dbg !8127
  %4 = icmp eq i32 %2, 0, !dbg !8128
  br i1 %4, label %31, label %5, !dbg !8130

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8126, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i8* %0, metadata !8125, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i32 %2, metadata !8124, metadata !DIExpression()), !dbg !8127
  %6 = add i32 %2, -1, !dbg !8131
  call void @llvm.dbg.value(metadata i32 %6, metadata !8124, metadata !DIExpression()), !dbg !8127
  %7 = icmp eq i32 %6, 0, !dbg !8132
  br i1 %7, label %23, label %8, !dbg !8133

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8134
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8134
  br label %11, !dbg !8134

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8126, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i8* %14, metadata !8125, metadata !DIExpression()), !dbg !8127
  %15 = load i8, i8* %14, align 1, !dbg !8135
  %16 = load i8, i8* %13, align 1, !dbg !8136
  %17 = icmp eq i8 %15, %16, !dbg !8137
  br i1 %17, label %18, label %23, !dbg !8134

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8138
  call void @llvm.dbg.value(metadata i8* %19, metadata !8125, metadata !DIExpression()), !dbg !8127
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8140
  call void @llvm.dbg.value(metadata i8* %20, metadata !8126, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i32 %12, metadata !8124, metadata !DIExpression()), !dbg !8127
  %21 = add i32 %12, -1, !dbg !8131
  call void @llvm.dbg.value(metadata i32 %21, metadata !8124, metadata !DIExpression()), !dbg !8127
  %22 = icmp eq i32 %21, 0, !dbg !8132
  br i1 %22, label %23, label %11, !dbg !8133, !llvm.loop !8141

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8127
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8127
  %26 = load i8, i8* %24, align 1, !dbg !8143
  %27 = zext i8 %26 to i32, !dbg !8143
  %28 = load i8, i8* %25, align 1, !dbg !8144
  %29 = zext i8 %28 to i32, !dbg !8144
  %30 = sub nsw i32 %27, %29, !dbg !8145
  br label %31, !dbg !8146

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8127
  ret i32 %32, !dbg !8147
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8148 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8152, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i8* %1, metadata !8153, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i32 %2, metadata !8154, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i8* %0, metadata !8155, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i8* %1, metadata !8156, metadata !DIExpression()), !dbg !8157
  %4 = ptrtoint i8* %0 to i32, !dbg !8158
  %5 = ptrtoint i8* %1 to i32, !dbg !8158
  %6 = sub i32 %4, %5, !dbg !8158
  %7 = icmp ult i32 %6, %2, !dbg !8160
  br i1 %7, label %10, label %8, !dbg !8161

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8156, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i8* %0, metadata !8155, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i32 %2, metadata !8154, metadata !DIExpression()), !dbg !8157
  %9 = icmp eq i32 %2, 0, !dbg !8162
  br i1 %9, label %26, label %17, !dbg !8164

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8154, metadata !DIExpression()), !dbg !8157
  %12 = add i32 %11, -1, !dbg !8165
  call void @llvm.dbg.value(metadata i32 %12, metadata !8154, metadata !DIExpression()), !dbg !8157
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8168
  %14 = load i8, i8* %13, align 1, !dbg !8168
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8169
  store i8 %14, i8* %15, align 1, !dbg !8170
  %16 = icmp eq i32 %12, 0, !dbg !8171
  br i1 %16, label %26, label %10, !dbg !8172, !llvm.loop !8173

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8156, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i8* %19, metadata !8155, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i32 %20, metadata !8154, metadata !DIExpression()), !dbg !8157
  %21 = load i8, i8* %18, align 1, !dbg !8175
  store i8 %21, i8* %19, align 1, !dbg !8177
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8178
  call void @llvm.dbg.value(metadata i8* %22, metadata !8155, metadata !DIExpression()), !dbg !8157
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8179
  call void @llvm.dbg.value(metadata i8* %23, metadata !8156, metadata !DIExpression()), !dbg !8157
  %24 = add i32 %20, -1, !dbg !8180
  call void @llvm.dbg.value(metadata i32 %24, metadata !8154, metadata !DIExpression()), !dbg !8157
  %25 = icmp eq i32 %24, 0, !dbg !8162
  br i1 %25, label %26, label %17, !dbg !8164, !llvm.loop !8181

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8183
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8184 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8190, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i8* %1, metadata !8191, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i32 %2, metadata !8192, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i8* %0, metadata !8193, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i8* %1, metadata !8194, metadata !DIExpression()), !dbg !8195
  %4 = icmp eq i32 %2, 0, !dbg !8196
  br i1 %4, label %14, label %5, !dbg !8197

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8194, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i8* %7, metadata !8193, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i32 %8, metadata !8192, metadata !DIExpression()), !dbg !8195
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8198
  call void @llvm.dbg.value(metadata i8* %9, metadata !8194, metadata !DIExpression()), !dbg !8195
  %10 = load i8, i8* %6, align 1, !dbg !8200
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8201
  call void @llvm.dbg.value(metadata i8* %11, metadata !8193, metadata !DIExpression()), !dbg !8195
  store i8 %10, i8* %7, align 1, !dbg !8202
  %12 = add i32 %8, -1, !dbg !8203
  call void @llvm.dbg.value(metadata i32 %12, metadata !8192, metadata !DIExpression()), !dbg !8195
  %13 = icmp eq i32 %12, 0, !dbg !8196
  br i1 %13, label %14, label %5, !dbg !8197, !llvm.loop !8204

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8206
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8207 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8211, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i32 %1, metadata !8212, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i32 %2, metadata !8213, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i8* %0, metadata !8214, metadata !DIExpression()), !dbg !8216
  %4 = trunc i32 %1 to i8, !dbg !8217
  call void @llvm.dbg.value(metadata i8 %4, metadata !8215, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i32 %2, metadata !8213, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i8* %0, metadata !8214, metadata !DIExpression()), !dbg !8216
  %5 = icmp eq i32 %2, 0, !dbg !8218
  br i1 %5, label %12, label %6, !dbg !8219

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8213, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i8* %8, metadata !8214, metadata !DIExpression()), !dbg !8216
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8220
  call void @llvm.dbg.value(metadata i8* %9, metadata !8214, metadata !DIExpression()), !dbg !8216
  store i8 %4, i8* %8, align 1, !dbg !8222
  %10 = add i32 %7, -1, !dbg !8223
  call void @llvm.dbg.value(metadata i32 %10, metadata !8213, metadata !DIExpression()), !dbg !8216
  %11 = icmp eq i32 %10, 0, !dbg !8218
  br i1 %11, label %12, label %6, !dbg !8219, !llvm.loop !8224

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8226
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8227 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8231, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i32 %1, metadata !8232, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i32 %2, metadata !8233, metadata !DIExpression()), !dbg !8237
  %4 = icmp eq i32 %2, 0, !dbg !8238
  br i1 %4, label %17, label %5, !dbg !8239

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8240

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8241
  call void @llvm.dbg.value(metadata i8* %9, metadata !8234, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %8, metadata !8233, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i8* %9, metadata !8234, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8241
  %10 = load i8, i8* %9, align 1, !dbg !8242
  %11 = icmp eq i8 %10, %6, !dbg !8245
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8246
  call void @llvm.dbg.value(metadata i8* %12, metadata !8234, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %13, metadata !8233, metadata !DIExpression()), !dbg !8237
  br i1 %15, label %16, label %7, !dbg !8246, !llvm.loop !8247

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8249

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8237
  ret i8* %19, !dbg !8250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !8251 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8253, metadata !DIExpression()), !dbg !8254
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8255
  ret void, !dbg !8256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !8257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8259, metadata !DIExpression()), !dbg !8260
  ret i32 -1, !dbg !8261
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8266, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32* %1, metadata !8267, metadata !DIExpression()), !dbg !8268
  %3 = ptrtoint i32* %1 to i32, !dbg !8269
  %4 = and i32 %3, -2, !dbg !8269
  %5 = icmp eq i32 %4, 2, !dbg !8269
  br i1 %5, label %6, label %9, !dbg !8269

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8270
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8270
  br label %9, !dbg !8271

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8271
  ret i32 %10, !dbg !8272
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8275, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.value(metadata i32* %1, metadata !8276, metadata !DIExpression()), !dbg !8277
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8278
  ret i32 %3, !dbg !8279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8283, metadata !DIExpression()), !dbg !8285
  call void @llvm.dbg.value(metadata i32* %1, metadata !8284, metadata !DIExpression()), !dbg !8285
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8286, !srcloc !8288
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8289
  ret i32 %3, !dbg !8290
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8291 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8296, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.value(metadata i32* %1, metadata !8297, metadata !DIExpression()), !dbg !8300
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8301
  call void @llvm.dbg.value(metadata i32 %3, metadata !8298, metadata !DIExpression()), !dbg !8300
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8302
  call void @llvm.dbg.value(metadata i32 %4, metadata !8299, metadata !DIExpression()), !dbg !8300
  %5 = icmp ne i32 %3, %4, !dbg !8303
  %6 = sext i1 %5 to i32, !dbg !8304
  ret i32 %6, !dbg !8305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8306 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8310, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i32 %1, metadata !8311, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i32 %2, metadata !8312, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.value(metadata i32* %3, metadata !8313, metadata !DIExpression()), !dbg !8314
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8315
  ret i32 %5, !dbg !8316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8319, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.value(metadata i32 %1, metadata !8320, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.value(metadata i32 %2, metadata !8321, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.value(metadata i32* %3, metadata !8322, metadata !DIExpression()), !dbg !8323
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8324, !srcloc !8326
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8327
  ret i32 %5, !dbg !8328
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8329 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8331, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.value(metadata i32 %1, metadata !8332, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.value(metadata i32 %2, metadata !8333, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.value(metadata i32* %3, metadata !8334, metadata !DIExpression()), !dbg !8339
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8340
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8342
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8342
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8342
  br i1 %11, label %33, label %12, !dbg !8342

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8339
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8339
  call void @llvm.dbg.value(metadata i8* %14, metadata !8337, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.value(metadata i32 %13, metadata !8335, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.value(metadata i32 %1, metadata !8336, metadata !DIExpression()), !dbg !8339
  br label %15, !dbg !8343

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8345
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8339
  call void @llvm.dbg.value(metadata i8* %17, metadata !8337, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.value(metadata i32 %16, metadata !8336, metadata !DIExpression()), !dbg !8339
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8346
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8349
  call void @llvm.dbg.value(metadata i8* %19, metadata !8337, metadata !DIExpression()), !dbg !8339
  %20 = load i8, i8* %17, align 1, !dbg !8350
  %21 = zext i8 %20 to i32, !dbg !8351
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8346
  %23 = icmp eq i32 %22, -1, !dbg !8352
  br i1 %23, label %30, label %24, !dbg !8353

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8354
  call void @llvm.dbg.value(metadata i32 %25, metadata !8336, metadata !DIExpression()), !dbg !8339
  %26 = icmp eq i32 %25, 0, !dbg !8355
  br i1 %26, label %27, label %15, !dbg !8356, !llvm.loop !8357

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8359
  call void @llvm.dbg.value(metadata i32 %28, metadata !8335, metadata !DIExpression()), !dbg !8339
  %29 = icmp eq i32 %28, 0, !dbg !8360
  br i1 %29, label %30, label %12, !dbg !8361, !llvm.loop !8362

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8339
  call void @llvm.dbg.value(metadata i32 %31, metadata !8335, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.label(metadata !8338), !dbg !8365
  %32 = sub i32 %2, %31, !dbg !8366
  br label %33, !dbg !8367

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8339
  ret i32 %34, !dbg !8368
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8369 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8373, metadata !DIExpression()), !dbg !8374
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8375
  %3 = icmp eq i32 %2, -1, !dbg !8377
  br i1 %3, label %8, label %4, !dbg !8378

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8379
  %6 = icmp eq i32 %5, -1, !dbg !8380
  %7 = sext i1 %6 to i32, !dbg !8379
  br label %8, !dbg !8381

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8374
  ret i32 %9, !dbg !8382
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8383 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8385, metadata !DIExpression()), !dbg !8386
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8387
  ret void, !dbg !8388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8393, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 %1, metadata !8394, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8395, metadata !DIExpression()), !dbg !8399
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8400
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8400
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8400
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8396, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 %0, metadata !8398, metadata !DIExpression()), !dbg !8399
  %7 = icmp slt i32 %0, %1, !dbg !8401
  br i1 %7, label %8, label %22, !dbg !8404

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8398, metadata !DIExpression()), !dbg !8399
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8405
  %11 = icmp eq i32 %10, 0, !dbg !8405
  br i1 %11, label %19, label %12, !dbg !8408

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8409
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8411
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8411
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8413
  br i1 %15, label %19, label %16, !dbg !8414

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8415
  %18 = load i8*, i8** %17, align 4, !dbg !8415
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8416
  br label %19, !dbg !8417

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8418
  call void @llvm.dbg.value(metadata i32 %20, metadata !8398, metadata !DIExpression()), !dbg !8399
  %21 = icmp eq i32 %20, %1, !dbg !8401
  br i1 %21, label %22, label %8, !dbg !8404, !llvm.loop !8419

22:                                               ; preds = %19, %3
  ret void, !dbg !8421
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8424, metadata !DIExpression()), !dbg !8425
  %2 = shl nuw i32 1, %0, !dbg !8426
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8429
  ret i32 %3, !dbg !8430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8435, metadata !DIExpression()), !dbg !8436
  %2 = shl nuw i32 1, %0, !dbg !8437
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8440
  ret void, !dbg !8441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8445, metadata !DIExpression()), !dbg !8446
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8447
  ret void, !dbg !8448
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8451, metadata !DIExpression()), !dbg !8452
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8453
  %3 = and i32 %2, %0, !dbg !8453
  %4 = icmp eq i32 %3, %0, !dbg !8454
  %5 = zext i1 %4 to i32, !dbg !8454
  ret i32 %5, !dbg !8455
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8458, metadata !DIExpression()), !dbg !8459
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8460
  ret void, !dbg !8461
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8462 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8464, metadata !DIExpression()), !dbg !8465
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8466
  ret void, !dbg !8467
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8468 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8470, metadata !DIExpression()), !dbg !8471
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8472
  ret void, !dbg !8473
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8476, metadata !DIExpression()), !dbg !8477
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8478
  ret void, !dbg !8479
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8482, metadata !DIExpression()), !dbg !8483
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8484
  ret void, !dbg !8485
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8486 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8488, metadata !DIExpression()), !dbg !8489
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8490
  ret void, !dbg !8491
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8492 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8494, metadata !DIExpression()), !dbg !8495
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8496
  ret void, !dbg !8497
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8498 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8500, metadata !DIExpression()), !dbg !8501
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8502
  ret void, !dbg !8503
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8504 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8506, metadata !DIExpression()), !dbg !8507
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8508
  ret void, !dbg !8509
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8510 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8512, metadata !DIExpression()), !dbg !8513
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8514
  ret void, !dbg !8515
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8516 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8518, metadata !DIExpression()), !dbg !8519
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8520
  ret i32 0, !dbg !8521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !697 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !701, metadata !DIExpression()), !dbg !8522
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8523
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8525
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8527
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8529
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8531
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8533
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8535
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8537
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8539
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8541
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8543
  ret void, !dbg !8545
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8548, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata i32 0, metadata !8549, metadata !DIExpression()), !dbg !8550
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8551
  %3 = load i32, i32* %2, align 4, !dbg !8551
  call void @llvm.dbg.value(metadata i32 %3, metadata !8549, metadata !DIExpression()), !dbg !8550
  %4 = shl nuw i32 1, %0, !dbg !8552
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8553
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8554
  ret void, !dbg !8555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8558, metadata !DIExpression()), !dbg !8559
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8560
  %3 = or i32 %2, %0, !dbg !8560
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8560
  ret void, !dbg !8561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8564, metadata !DIExpression()), !dbg !8565
  %2 = icmp slt i32 %0, 32, !dbg !8566
  br i1 %2, label %3, label %5, !dbg !8568

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8569
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8571
  br label %5, !dbg !8572

5:                                                ; preds = %1, %3
  ret void, !dbg !8573
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8576, metadata !DIExpression()), !dbg !8577
  %2 = xor i32 %0, -1, !dbg !8578
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8578
  %4 = and i32 %3, %2, !dbg !8578
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8578
  ret void, !dbg !8579
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8584, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i32 %1, metadata !8585, metadata !DIExpression()), !dbg !8586
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8587

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8588
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8590
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8591
  br label %11, !dbg !8592

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8593
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8594
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8595
  br label %11, !dbg !8596

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8597
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8598
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8599
  br label %11, !dbg !8600

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8601
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8602
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8603
  br label %11, !dbg !8604

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8608, metadata !DIExpression()), !dbg !8609
  %2 = xor i32 %0, -1, !dbg !8610
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8610
  %4 = and i32 %3, %2, !dbg !8610
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8610
  ret void, !dbg !8611
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8614, metadata !DIExpression()), !dbg !8615
  %2 = xor i32 %0, -1, !dbg !8616
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8616
  %4 = and i32 %3, %2, !dbg !8616
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8616
  ret void, !dbg !8617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8620, metadata !DIExpression()), !dbg !8621
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8622
  %3 = or i32 %2, %0, !dbg !8622
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8622
  ret void, !dbg !8623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8626, metadata !DIExpression()), !dbg !8627
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8628
  %3 = or i32 %2, %0, !dbg !8628
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8628
  ret void, !dbg !8629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !8630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8634, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8635, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %2, metadata !8636, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8637, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8639, metadata !DIExpression()), !dbg !8640
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8641
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8641
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8643
  br i1 %6, label %7, label %9, !dbg !8644

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8645
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8646
  store i8* %2, i8** %8, align 4, !dbg !8647
  br label %9, !dbg !8648

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8640
  ret i32 %10, !dbg !8649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8652, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8653, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8654, metadata !DIExpression()), !dbg !8655
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8656
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8657
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8658
  store i8* null, i8** %3, align 4, !dbg !8659
  ret void, !dbg !8660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8661 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8663, metadata !DIExpression()), !dbg !8668
  call void @llvm.dbg.value(metadata i8* %1, metadata !8664, metadata !DIExpression()), !dbg !8668
  call void @llvm.dbg.value(metadata i8* %1, metadata !8665, metadata !DIExpression()), !dbg !8668
  %3 = bitcast i8* %1 to i32*, !dbg !8669
  %4 = load i32, i32* %3, align 4, !dbg !8669
  %5 = add i32 %4, -169, !dbg !8669
  %6 = icmp ult i32 %5, -121, !dbg !8669
  br i1 %6, label %15, label %7, !dbg !8671

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8672
  %9 = inttoptr i32 %8 to i32*, !dbg !8673
  call void @llvm.dbg.value(metadata i32* %9, metadata !8666, metadata !DIExpression()), !dbg !8668
  %10 = load volatile i32, i32* %9, align 4, !dbg !8674
  call void @llvm.dbg.value(metadata i32 %10, metadata !8667, metadata !DIExpression()), !dbg !8668
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8675
  %12 = bitcast i8* %11 to i32*, !dbg !8675
  %13 = load i32, i32* %12, align 4, !dbg !8675
  %14 = or i32 %13, %10, !dbg !8676
  call void @llvm.dbg.value(metadata i32 %14, metadata !8667, metadata !DIExpression()), !dbg !8668
  store volatile i32 %14, i32* %9, align 4, !dbg !8677
  br label %15, !dbg !8678

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8668
  ret i32 %16, !dbg !8679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8682, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.value(metadata i8* %1, metadata !8683, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.value(metadata i8* %1, metadata !8684, metadata !DIExpression()), !dbg !8687
  %3 = bitcast i8* %1 to i32*, !dbg !8688
  %4 = load i32, i32* %3, align 4, !dbg !8688
  %5 = add i32 %4, -169, !dbg !8688
  %6 = icmp ult i32 %5, -121, !dbg !8688
  br i1 %6, label %16, label %7, !dbg !8690

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8691
  %9 = inttoptr i32 %8 to i32*, !dbg !8692
  call void @llvm.dbg.value(metadata i32* %9, metadata !8685, metadata !DIExpression()), !dbg !8687
  %10 = load volatile i32, i32* %9, align 4, !dbg !8693
  call void @llvm.dbg.value(metadata i32 %10, metadata !8686, metadata !DIExpression()), !dbg !8687
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8694
  %12 = bitcast i8* %11 to i32*, !dbg !8694
  %13 = load i32, i32* %12, align 4, !dbg !8694
  %14 = xor i32 %13, -1, !dbg !8695
  %15 = and i32 %10, %14, !dbg !8696
  call void @llvm.dbg.value(metadata i32 %15, metadata !8686, metadata !DIExpression()), !dbg !8687
  store volatile i32 %15, i32* %9, align 4, !dbg !8697
  br label %16, !dbg !8698

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8687
  ret i32 %17, !dbg !8699
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8700 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8702, metadata !DIExpression()), !dbg !8710
  call void @llvm.dbg.value(metadata i8* %1, metadata !8703, metadata !DIExpression()), !dbg !8710
  call void @llvm.dbg.value(metadata i32* %2, metadata !8704, metadata !DIExpression()), !dbg !8710
  call void @llvm.dbg.value(metadata i8* %1, metadata !8705, metadata !DIExpression()), !dbg !8710
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8711
  call void @llvm.dbg.value(metadata i32 %4, metadata !8706, metadata !DIExpression()), !dbg !8710
  call void @llvm.dbg.value(metadata i32 undef, metadata !8707, metadata !DIExpression()), !dbg !8710
  call void @llvm.dbg.value(metadata i32 undef, metadata !8708, metadata !DIExpression()), !dbg !8710
  call void @llvm.dbg.value(metadata i32 %4, metadata !8709, metadata !DIExpression()), !dbg !8710
  %5 = bitcast i8* %1 to i32*, !dbg !8712
  %6 = load i32, i32* %5, align 4, !dbg !8712
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !8713

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8714
  call void @llvm.dbg.value(metadata i32 %8, metadata !8707, metadata !DIExpression()), !dbg !8710
  br label %16, !dbg !8715

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8717
  call void @llvm.dbg.value(metadata i32 %10, metadata !8708, metadata !DIExpression()), !dbg !8710
  br label %16, !dbg !8718

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8719
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #26, !dbg !8720
  br label %16, !dbg !8721

14:                                               ; preds = %3
  br label %16, !dbg !8722

15:                                               ; preds = %3
  br label %16, !dbg !8723

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !8724
  br label %18, !dbg !8725

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !8710
  ret i32 %19, !dbg !8725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8726 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8728, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i8* %1, metadata !8729, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i8* %2, metadata !8730, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata i8* %1, metadata !8731, metadata !DIExpression()), !dbg !8736
  %4 = bitcast i8* %1 to i32*, !dbg !8737
  %5 = load i32, i32* %4, align 4, !dbg !8737
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8738
  call void @llvm.dbg.value(metadata i32 %6, metadata !8735, metadata !DIExpression()), !dbg !8736
  %7 = icmp slt i32 %6, 0, !dbg !8739
  br i1 %7, label %22, label %8, !dbg !8741

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8731, metadata !DIExpression()), !dbg !8736
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8742
  %10 = bitcast i8* %9 to i32*, !dbg !8742
  %11 = load i32, i32* %10, align 4, !dbg !8742
  %12 = lshr i32 %11, 16, !dbg !8742
  %13 = and i32 %12, 7, !dbg !8742
  %14 = lshr i32 %11, 8, !dbg !8743
  %15 = and i32 %14, 31, !dbg !8743
  %16 = shl i32 %13, %15, !dbg !8744
  call void @llvm.dbg.value(metadata i32 %16, metadata !8734, metadata !DIExpression()), !dbg !8736
  %17 = and i32 %11, 255, !dbg !8745
  %18 = or i32 %17, 1073887232, !dbg !8746
  %19 = inttoptr i32 %18 to i32*, !dbg !8747
  call void @llvm.dbg.value(metadata i32* %19, metadata !8732, metadata !DIExpression()), !dbg !8736
  %20 = load volatile i32, i32* %19, align 4, !dbg !8748
  call void @llvm.dbg.value(metadata i32 %20, metadata !8733, metadata !DIExpression()), !dbg !8736
  %21 = or i32 %16, %20, !dbg !8749
  call void @llvm.dbg.value(metadata i32 %21, metadata !8733, metadata !DIExpression()), !dbg !8736
  store volatile i32 %21, i32* %19, align 4, !dbg !8750
  br label %22, !dbg !8751

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8736
  ret i32 %23, !dbg !8752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8757, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.value(metadata i32 0, metadata !8758, metadata !DIExpression()), !dbg !8759
  %2 = add i32 %0, -1, !dbg !8760
  %3 = icmp ult i32 %2, 6, !dbg !8760
  br i1 %3, label %4, label %7, !dbg !8760

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8760
  %6 = load i32, i32* %5, align 4, !dbg !8760
  call void @llvm.dbg.value(metadata i32 %6, metadata !8758, metadata !DIExpression()), !dbg !8759
  br label %7, !dbg !8761

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8759
  ret i32 %8, !dbg !8762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8767, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata i32 %1, metadata !8768, metadata !DIExpression()), !dbg !8769
  %3 = udiv i32 %0, %1, !dbg !8770
  ret i32 %3, !dbg !8771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #11 !dbg !8772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8776, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i32 16, metadata !8777, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i32 336, metadata !8778, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i32 4, metadata !8779, metadata !DIExpression()), !dbg !8780
  %2 = mul i32 %0, 336, !dbg !8781
  %3 = lshr i32 %2, 6, !dbg !8782
  ret i32 %3, !dbg !8783
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8784 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8786, metadata !DIExpression()), !dbg !8789
  tail call void @config_enable_default_clocks() #25, !dbg !8790
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8791
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8791
  %4 = lshr i32 %3, 4, !dbg !8791
  %5 = and i32 %4, 15, !dbg !8791
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8791
  %7 = load i8, i8* %6, align 1, !dbg !8791
  %8 = zext i8 %7 to i32, !dbg !8791
  %9 = lshr i32 %2, %8, !dbg !8791
  call void @llvm.dbg.value(metadata i32 %9, metadata !8787, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8788, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8789
  %10 = icmp ult i32 %9, 84000000, !dbg !8792
  br i1 %10, label %11, label %13, !dbg !8794

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8795
  br label %13, !dbg !8797

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8798
  tail call fastcc void @set_up_plls() #26, !dbg !8799
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8800
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8803
  br label %14, !dbg !8804

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8805
  %16 = icmp eq i32 %15, 8, !dbg !8806
  br i1 %16, label %17, label %14, !dbg !8804, !llvm.loop !8807

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8809
  br i1 %18, label %19, label %21, !dbg !8811

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8812
  br label %21, !dbg !8814

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8815
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8816
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8817
  ret i32 0, !dbg !8818
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8819 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8821
  %2 = and i32 %1, 240, !dbg !8821
  ret i32 %2, !dbg !8822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8823 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8824
  %2 = icmp eq i32 %1, 1, !dbg !8828
  br i1 %2, label %7, label %3, !dbg !8829

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8830
  br label %4, !dbg !8832

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8833
  %6 = icmp eq i32 %5, 1, !dbg !8834
  br i1 %6, label %7, label %4, !dbg !8832, !llvm.loop !8835

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8837
  br label %8, !dbg !8840

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8841
  %10 = icmp eq i32 %9, 1, !dbg !8842
  br i1 %10, label %11, label %8, !dbg !8840, !llvm.loop !8843

11:                                               ; preds = %8
  ret void, !dbg !8845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8846 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8847
  %2 = icmp eq i32 %1, 8, !dbg !8849
  br i1 %2, label %3, label %4, !dbg !8850

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8851
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8853
  br label %4, !dbg !8854

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8855
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8856
  %6 = and i32 %5, -196609, !dbg !8856
  %7 = or i32 %6, 65536, !dbg !8856
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8856
  tail call void @config_pll_sysclock() #25, !dbg !8857
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8858
  br label %8, !dbg !8859

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8860
  %10 = icmp eq i32 %9, 1, !dbg !8861
  br i1 %10, label %11, label %8, !dbg !8859, !llvm.loop !8862

11:                                               ; preds = %8
  ret void, !dbg !8864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8865 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8867, metadata !DIExpression()), !dbg !8868
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8869
  %2 = and i32 %1, -241, !dbg !8869
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8869
  ret void, !dbg !8870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8873, metadata !DIExpression()), !dbg !8874
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8875
  %3 = and i32 %2, -4, !dbg !8875
  %4 = or i32 %3, %0, !dbg !8875
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8875
  ret void, !dbg !8876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8877 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8878
  %2 = and i32 %1, 12, !dbg !8878
  ret i32 %2, !dbg !8879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8880 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8882, metadata !DIExpression()), !dbg !8883
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8884
  %2 = and i32 %1, -7169, !dbg !8884
  %3 = or i32 %2, 4096, !dbg !8884
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8884
  ret void, !dbg !8885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8886 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8888, metadata !DIExpression()), !dbg !8889
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8890
  %2 = and i32 %1, -57345, !dbg !8890
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8890
  ret void, !dbg !8891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8892 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8893
  %2 = icmp eq i32 %1, 1, !dbg !8895
  br i1 %2, label %7, label %3, !dbg !8896

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8897
  br label %4, !dbg !8899

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8900
  %6 = icmp eq i32 %5, 1, !dbg !8901
  br i1 %6, label %7, label %4, !dbg !8899, !llvm.loop !8902

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8904
  br label %8, !dbg !8905

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8906
  %10 = icmp eq i32 %9, 0, !dbg !8907
  br i1 %10, label %11, label %8, !dbg !8905, !llvm.loop !8908

11:                                               ; preds = %8
  ret void, !dbg !8910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8911 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8912
  %2 = and i32 %1, -16777217, !dbg !8912
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8912
  ret void, !dbg !8913
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8914 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8915
  %2 = or i32 %1, 16777216, !dbg !8915
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8915
  ret void, !dbg !8916
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8917 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8918
  %2 = lshr i32 %1, 25, !dbg !8919
  %3 = and i32 %2, 1, !dbg !8919
  ret i32 %3, !dbg !8920
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8921 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8922
  %2 = lshr i32 %1, 1, !dbg !8923
  %3 = and i32 %2, 1, !dbg !8923
  ret i32 %3, !dbg !8924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8925 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8926
  %2 = or i32 %1, 1, !dbg !8926
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8926
  ret void, !dbg !8927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8928 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8929
  %2 = or i32 %1, 1, !dbg !8929
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8929
  ret void, !dbg !8930
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8931 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8932
  %2 = lshr i32 %1, 1, !dbg !8933
  %3 = and i32 %2, 1, !dbg !8933
  ret i32 %3, !dbg !8934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8935 {
  ret i32 16000000, !dbg !8937
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8940 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8941
  ret void, !dbg !8942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8943 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8947, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 16, metadata !8948, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 336, metadata !8949, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 65536, metadata !8950, metadata !DIExpression()), !dbg !8951
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8952
  %2 = and i32 %1, -4227072, !dbg !8952
  %3 = or i32 %2, 21520, !dbg !8952
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8952
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8953
  %5 = and i32 %4, -196609, !dbg !8953
  %6 = or i32 %5, 65536, !dbg !8953
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8953
  ret void, !dbg !8954
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8955 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8956
  ret void, !dbg !8957
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8958 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8961, metadata !DIExpression()), !dbg !8963
  %2 = bitcast i32* %1 to i8*, !dbg !8964
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8964
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8962, metadata !DIExpression()), !dbg !8965
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8966
  %4 = or i32 %3, 268435456, !dbg !8966
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8966
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8967
  %6 = and i32 %5, 268435456, !dbg !8967
  store volatile i32 %6, i32* %1, align 4, !dbg !8968
  %7 = load volatile i32, i32* %1, align 4, !dbg !8969
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8970
  ret void, !dbg !8970
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8971 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8973, metadata !DIExpression()), !dbg !8974
  %2 = tail call fastcc zeroext i1 @device_is_ready.45() #26, !dbg !8975
  br i1 %2, label %3, label %4, !dbg !8977

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8978
  br label %4, !dbg !8979

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8974
  ret i32 %5, !dbg !8980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.45() unnamed_addr #1 !dbg !8981 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8985, metadata !DIExpression()), !dbg !8986
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8987, !srcloc !8989
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.48() #26, !dbg !8990
  ret i1 %1, !dbg !8991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8992 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8993
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8994
  ret void, !dbg !8995
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8998, metadata !DIExpression()), !dbg !9000
  %2 = load i32 (i8)*, i32 (i8)** @debug_hook_out, align 4, !dbg !9001
  %3 = trunc i32 %0 to i8, !dbg !9001
  %4 = tail call i32 %2(i8 noundef zeroext %3) #25, !dbg !9001
  %5 = icmp eq i32 %4, 1, !dbg !9001
  call void @llvm.dbg.value(metadata i1 %5, metadata !8999, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9000
  br i1 %5, label %10, label %6, !dbg !9002

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 10, !dbg !9003
  br i1 %7, label %8, label %9, !dbg !9005

8:                                                ; preds = %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 13) #26, !dbg !9006
  br label %9, !dbg !9008

9:                                                ; preds = %8, %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %3) #26, !dbg !9009
  br label %10, !dbg !9010

10:                                               ; preds = %1, %9
  ret i32 %0, !dbg !9011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.46(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9012 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9014, metadata !DIExpression()), !dbg !9016
  call void @llvm.dbg.value(metadata i8 %0, metadata !9015, metadata !DIExpression()), !dbg !9016
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9017, !srcloc !9019
  tail call fastcc void @z_impl_uart_poll_out.47(i8 noundef zeroext %0) #26, !dbg !9020
  ret void, !dbg !9021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.47(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9022 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9024, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i8 %0, metadata !9025, metadata !DIExpression()), !dbg !9027
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9028
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9026, metadata !DIExpression()), !dbg !9027
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9029
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9029
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !9030
  ret void, !dbg !9031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @debug_hook_out_nop(i8 noundef zeroext %0) #11 !dbg !9032 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9034, metadata !DIExpression()), !dbg !9035
  ret i32 0, !dbg !9036
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.48() unnamed_addr #1 !dbg !9037 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9039, metadata !DIExpression()), !dbg !9040
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9041
  ret i1 %1, !dbg !9042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_in_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9043 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9047, metadata !DIExpression()), !dbg !9048
  store i32 (i8)* %0, i32 (i8)** @debug_hook_in, align 4, !dbg !9049
  ret void, !dbg !9050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_out_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9051 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9055, metadata !DIExpression()), !dbg !9056
  store i32 (i8)* %0, i32 (i8)** @debug_hook_out, align 4, !dbg !9057
  ret void, !dbg !9058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !9059 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9063, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9064, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9065, metadata !DIExpression()), !dbg !9066
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !9067
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !9068
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9069
  tail call fastcc void @console_input_init() #26, !dbg !9070
  ret void, !dbg !9071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !9072 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9075
  tail call fastcc void @uart_irq_rx_disable.49() #26, !dbg !9076
  tail call fastcc void @uart_irq_tx_disable.50() #26, !dbg !9077
  tail call fastcc void @uart_irq_callback_set() #26, !dbg !9078
  %2 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9079
  %3 = icmp eq i32 %2, 0, !dbg !9080
  br i1 %3, label %8, label %4, !dbg !9080

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !9074, metadata !DIExpression(DW_OP_deref)), !dbg !9081
  %5 = call fastcc i32 @uart_fifo_read.52(i8* noundef nonnull %1) #26, !dbg !9082
  %6 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9079
  %7 = icmp eq i32 %6, 0, !dbg !9080
  br i1 %7, label %8, label %4, !dbg !9080, !llvm.loop !9084

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable.53() #26, !dbg !9086
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9087
  ret void, !dbg !9087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable.49() unnamed_addr #1 !dbg !9088 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9090, metadata !DIExpression()), !dbg !9091
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9092, !srcloc !9094
  tail call fastcc void @z_impl_uart_irq_rx_disable.62() #26, !dbg !9095
  ret void, !dbg !9096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable.50() unnamed_addr #1 !dbg !9097 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9099, metadata !DIExpression()), !dbg !9100
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9101, !srcloc !9103
  tail call fastcc void @z_impl_uart_irq_tx_disable.61() #26, !dbg !9104
  ret void, !dbg !9105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !9106 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9110, metadata !DIExpression()), !dbg !9112
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9111, metadata !DIExpression()), !dbg !9112
  tail call fastcc void @uart_irq_callback_user_data_set.55() #26, !dbg !9113
  ret void, !dbg !9114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready.51() unnamed_addr #1 !dbg !9115 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9117, metadata !DIExpression()), !dbg !9119
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9120
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9118, metadata !DIExpression()), !dbg !9119
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !9121
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9121
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9123
  br i1 %4, label %7, label %5, !dbg !9124

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9125
  br label %7, !dbg !9126

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9119
  ret i32 %8, !dbg !9127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read.52(i8* noundef %0) unnamed_addr #1 !dbg !9128 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9130, metadata !DIExpression()), !dbg !9134
  call void @llvm.dbg.value(metadata i8* %0, metadata !9131, metadata !DIExpression()), !dbg !9134
  call void @llvm.dbg.value(metadata i32 1, metadata !9132, metadata !DIExpression()), !dbg !9134
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9135
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9133, metadata !DIExpression()), !dbg !9134
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !9136
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !9136
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !9138
  br i1 %5, label %8, label %6, !dbg !9139

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8* noundef %0, i32 noundef 1) #25, !dbg !9140
  br label %8, !dbg !9141

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !9134
  ret i32 %9, !dbg !9142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable.53() unnamed_addr #1 !dbg !9143 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9145, metadata !DIExpression()), !dbg !9146
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9147, !srcloc !9149
  tail call fastcc void @z_impl_uart_irq_rx_enable.54() #26, !dbg !9150
  ret void, !dbg !9151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable.54() unnamed_addr #1 !dbg !9152 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9154, metadata !DIExpression()), !dbg !9156
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9157
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9155, metadata !DIExpression()), !dbg !9156
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !9158
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9158
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9160
  br i1 %4, label %6, label %5, !dbg !9161

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9162
  br label %6, !dbg !9164

6:                                                ; preds = %5, %0
  ret void, !dbg !9165
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1064 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1066, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i8* %1, metadata !1067, metadata !DIExpression()), !dbg !9166
  %4 = call fastcc i32 @uart_irq_update.56() #26, !dbg !9167
  %5 = icmp eq i32 %4, 0, !dbg !9167
  br i1 %5, label %96, label %6, !dbg !9168

6:                                                ; preds = %2, %93
  %7 = call fastcc i32 @uart_irq_is_pending() #26, !dbg !9169
  %8 = icmp eq i32 %7, 0, !dbg !9168
  br i1 %8, label %96, label %9, !dbg !9170

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9171
  %10 = call fastcc i32 @uart_irq_rx_ready.51() #26, !dbg !9172
  %11 = icmp eq i32 %10, 0, !dbg !9172
  br i1 %11, label %93, label %12, !dbg !9174, !llvm.loop !9175

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1068, metadata !DIExpression(DW_OP_deref)), !dbg !9177
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #26, !dbg !9178
  call void @llvm.dbg.value(metadata i32 %13, metadata !1070, metadata !DIExpression()), !dbg !9177
  %14 = icmp slt i32 %13, 0, !dbg !9179
  br i1 %14, label %92, label %15, !dbg !9181

15:                                               ; preds = %12
  %16 = load i32 (i8)*, i32 (i8)** @debug_hook_in, align 4, !dbg !9182
  %17 = icmp eq i32 (i8)* %16, null, !dbg !9184
  br i1 %17, label %22, label %18, !dbg !9185

18:                                               ; preds = %15
  %19 = load i8, i8* %3, align 1, !dbg !9186
  call void @llvm.dbg.value(metadata i8 %19, metadata !1068, metadata !DIExpression()), !dbg !9177
  %20 = call i32 %16(i8 noundef zeroext %19) #25, !dbg !9187
  %21 = icmp eq i32 %20, 0, !dbg !9188
  br i1 %21, label %22, label %92, !dbg !9189

22:                                               ; preds = %18, %15
  %23 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9190
  %24 = icmp eq %struct.console_input* %23, null, !dbg !9190
  br i1 %24, label %25, label %30, !dbg !9191

25:                                               ; preds = %22
  %26 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !9192
  %27 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %26, i32 0, i32 0, !dbg !9192
  %28 = call fastcc i8* @k_queue_get(%struct.k_queue* noundef %27) #26, !dbg !9192
  call void @llvm.dbg.value(metadata i8* %28, metadata !1071, metadata !DIExpression()), !dbg !9193
  store i8* %28, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9194
  %29 = icmp eq i8* %28, null, !dbg !9195
  br i1 %29, label %92, label %30, !dbg !9197

30:                                               ; preds = %25, %22
  %31 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #26, !dbg !9198
  br i1 %31, label %32, label %36, !dbg !9200

32:                                               ; preds = %30
  %33 = load i8, i8* %3, align 1, !dbg !9201
  call void @llvm.dbg.value(metadata i8 %33, metadata !1068, metadata !DIExpression()), !dbg !9177
  %34 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9203
  %35 = getelementptr inbounds %struct.console_input, %struct.console_input* %34, i32 0, i32 2, i32 0, !dbg !9203
  call fastcc void @handle_ansi(i8 noundef zeroext %33, i8* noundef nonnull %35) #26, !dbg !9204
  br label %93, !dbg !9205, !llvm.loop !9175

36:                                               ; preds = %30
  %37 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #26, !dbg !9206
  %38 = load i8, i8* %3, align 1, !dbg !9177
  call void @llvm.dbg.value(metadata i8 %38, metadata !1068, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.value(metadata i8 %38, metadata !1068, metadata !DIExpression()), !dbg !9177
  br i1 %37, label %39, label %42, !dbg !9208

39:                                               ; preds = %36
  %40 = icmp eq i8 %38, 91, !dbg !9209
  br i1 %40, label %41, label %93, !dbg !9212, !llvm.loop !9175

41:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 1) #26, !dbg !9213
  call fastcc void @atomic_set_bit(i32 noundef 2) #26, !dbg !9215
  br label %93, !dbg !9216, !llvm.loop !9175

42:                                               ; preds = %36
  %43 = zext i8 %38 to i32, !dbg !9217
  %44 = call fastcc i32 @isprint(i32 noundef %43) #26, !dbg !9219
  %45 = icmp eq i32 %44, 0, !dbg !9219
  br i1 %45, label %46, label %81, !dbg !9220

46:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i8 undef, metadata !1068, metadata !DIExpression()), !dbg !9177
  switch i8 %38, label %93 [
    i8 8, label %47
    i8 127, label %47
    i8 27, label %56
    i8 13, label %57
    i8 9, label %68
  ], !dbg !9221, !llvm.loop !9175

47:                                               ; preds = %46, %46
  %48 = load i8, i8* @cur, align 1, !dbg !9223
  %49 = icmp eq i8 %48, 0, !dbg !9226
  br i1 %49, label %93, label %50, !dbg !9227, !llvm.loop !9175

50:                                               ; preds = %47
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9228
  %52 = add i8 %48, -1, !dbg !9230
  store i8 %52, i8* @cur, align 1, !dbg !9230
  %53 = zext i8 %52 to i32, !dbg !9228
  %54 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %53, !dbg !9228
  %55 = load i8, i8* @end, align 1, !dbg !9231
  call fastcc void @del_char(i8* noundef nonnull %54, i8 noundef zeroext %55) #26, !dbg !9232
  br label %93, !dbg !9233, !llvm.loop !9175

56:                                               ; preds = %46
  call fastcc void @atomic_set_bit(i32 noundef 0) #26, !dbg !9234
  br label %93, !dbg !9235, !llvm.loop !9175

57:                                               ; preds = %46
  %58 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9236
  %59 = load i8, i8* @cur, align 1, !dbg !9237
  %60 = zext i8 %59 to i32, !dbg !9237
  %61 = load i8, i8* @end, align 1, !dbg !9238
  %62 = zext i8 %61 to i32, !dbg !9238
  %63 = add nuw nsw i32 %62, %60, !dbg !9239
  %64 = getelementptr inbounds %struct.console_input, %struct.console_input* %58, i32 0, i32 2, i32 %63, !dbg !9236
  store i8 0, i8* %64, align 1, !dbg !9240
  call fastcc void @uart_poll_out.46(i8 noundef zeroext 13) #26, !dbg !9241
  call fastcc void @uart_poll_out.46(i8 noundef zeroext 10) #26, !dbg !9242
  store i8 0, i8* @cur, align 1, !dbg !9243
  store i8 0, i8* @end, align 1, !dbg !9244
  %65 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !9245
  %66 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %65, i32 0, i32 0, !dbg !9245
  %67 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9245
  call void @k_queue_append(%struct.k_queue* noundef %66, i8* noundef %67) #25, !dbg !9245
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9247
  br label %93, !dbg !9248, !llvm.loop !9175

68:                                               ; preds = %46
  %69 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9249
  %70 = icmp eq i8 (i8*, i8)* %69, null, !dbg !9249
  %71 = load i8, i8* @end, align 1
  %72 = icmp ne i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72, !dbg !9251
  br i1 %73, label %93, label %74, !dbg !9251, !llvm.loop !9175

74:                                               ; preds = %68
  %75 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9252
  %76 = getelementptr inbounds %struct.console_input, %struct.console_input* %75, i32 0, i32 2, i32 0, !dbg !9252
  %77 = load i8, i8* @cur, align 1, !dbg !9254
  %78 = call zeroext i8 %69(i8* noundef nonnull %76, i8 noundef zeroext %77) #25, !dbg !9255
  %79 = load i8, i8* @cur, align 1, !dbg !9256
  %80 = add i8 %79, %78, !dbg !9256
  store i8 %80, i8* @cur, align 1, !dbg !9256
  br label %93, !dbg !9257, !llvm.loop !9175

81:                                               ; preds = %42
  %82 = load i8, i8* @cur, align 1, !dbg !9258
  %83 = zext i8 %82 to i32, !dbg !9258
  %84 = load i8, i8* @end, align 1, !dbg !9260
  %85 = zext i8 %84 to i32, !dbg !9260
  %86 = add nuw nsw i32 %85, %83, !dbg !9261
  %87 = icmp ult i32 %86, 127, !dbg !9262
  br i1 %87, label %88, label %93, !dbg !9263

88:                                               ; preds = %81
  %89 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9264
  %90 = add i8 %82, 1, !dbg !9266
  store i8 %90, i8* @cur, align 1, !dbg !9266
  %91 = getelementptr inbounds %struct.console_input, %struct.console_input* %89, i32 0, i32 2, i32 %83, !dbg !9264
  call void @llvm.dbg.value(metadata i8 %38, metadata !1068, metadata !DIExpression()), !dbg !9177
  call fastcc void @insert_char(i8* noundef nonnull %91, i8 noundef zeroext %38, i8 noundef zeroext %84) #26, !dbg !9267
  br label %93, !dbg !9268

92:                                               ; preds = %12, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9176
  br label %96

93:                                               ; preds = %81, %88, %56, %57, %50, %47, %74, %68, %46, %39, %41, %9, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9176
  %94 = call fastcc i32 @uart_irq_update.56() #26, !dbg !9167
  %95 = icmp eq i32 %94, 0, !dbg !9167
  br i1 %95, label %96, label %6, !dbg !9168

96:                                               ; preds = %6, %93, %2, %92
  ret void, !dbg !9269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set.55() unnamed_addr #1 !dbg !9270 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9272, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9273, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.value(metadata i8* null, metadata !9274, metadata !DIExpression()), !dbg !9276
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9277
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9275, metadata !DIExpression()), !dbg !9276
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !9278
  br i1 %2, label %8, label %3, !dbg !9280

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !9281
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !9281
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !9282
  br i1 %6, label %8, label %7, !dbg !9283

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_45, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #25, !dbg !9284
  br label %8, !dbg !9286

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !9287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update.56() unnamed_addr #1 !dbg !9288 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9290, metadata !DIExpression()), !dbg !9291
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9292, !srcloc !9294
  %1 = tail call fastcc i32 @z_impl_uart_irq_update.60() #26, !dbg !9295
  ret i32 %1, !dbg !9296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !9297 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9299, metadata !DIExpression()), !dbg !9300
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9301, !srcloc !9303
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #26, !dbg !9304
  ret i32 %1, !dbg !9305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !9306 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9310, metadata !DIExpression()), !dbg !9314
  call void @llvm.dbg.value(metadata i8* %0, metadata !9311, metadata !DIExpression()), !dbg !9314
  call void @llvm.dbg.value(metadata i32 1, metadata !9312, metadata !DIExpression()), !dbg !9314
  %2 = tail call fastcc i32 @uart_fifo_read.52(i8* noundef %0) #26, !dbg !9315
  call void @llvm.dbg.value(metadata i32 %2, metadata !9313, metadata !DIExpression()), !dbg !9314
  %3 = icmp slt i32 %2, 0, !dbg !9316
  br i1 %3, label %4, label %5, !dbg !9318

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable.49() #26, !dbg !9319
  br label %5, !dbg !9321

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !9314
  ret i32 %6, !dbg !9322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !9323 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9333, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9332, metadata !DIExpression()), !dbg !9334
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9335, !srcloc !9337
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !9338
  ret i8* %2, !dbg !9339
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !9340 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9346, metadata !DIExpression()), !dbg !9350
  call void @llvm.dbg.value(metadata i32 %0, metadata !9347, metadata !DIExpression()), !dbg !9350
  %2 = tail call fastcc i32 @atomic_get() #26, !dbg !9351
  call void @llvm.dbg.value(metadata i32 %2, metadata !9348, metadata !DIExpression()), !dbg !9350
  %3 = and i32 %0, 31, !dbg !9352
  %4 = shl nuw i32 1, %3, !dbg !9353
  %5 = and i32 %2, %4, !dbg !9353
  %6 = icmp ne i32 %5, 0, !dbg !9353
  ret i1 %6, !dbg !9354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !9355 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9359, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.value(metadata i8* %1, metadata !9360, metadata !DIExpression()), !dbg !9362
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #26, !dbg !9363
  br i1 %3, label %4, label %11, !dbg !9365

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9366
  %6 = tail call fastcc i32 @isdigit.57(i32 noundef %5) #26, !dbg !9369
  %7 = icmp eq i32 %6, 0, !dbg !9369
  br i1 %7, label %8, label %9, !dbg !9370

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !9371
  br label %34, !dbg !9373

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #26, !dbg !9374
  %10 = add nsw i32 %5, -48, !dbg !9375
  store i32 %10, i32* @ansi_val, align 4, !dbg !9376
  store i32 0, i32* @ansi_val_2, align 4, !dbg !9377
  br label %81, !dbg !9378

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #26, !dbg !9379
  br i1 %12, label %13, label %34, !dbg !9381

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !9382
  %15 = tail call fastcc i32 @isdigit.57(i32 noundef %14) #26, !dbg !9385
  %16 = icmp eq i32 %15, 0, !dbg !9385
  br i1 %16, label %29, label %17, !dbg !9386

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #26, !dbg !9387
  br i1 %18, label %19, label %24, !dbg !9390

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !9391
  %21 = mul i32 %20, 10, !dbg !9391
  %22 = add nsw i32 %14, -48, !dbg !9393
  %23 = add i32 %22, %21, !dbg !9394
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !9394
  br label %81, !dbg !9395

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !9396
  %26 = mul i32 %25, 10, !dbg !9396
  %27 = add nsw i32 %14, -48, !dbg !9398
  %28 = add i32 %27, %26, !dbg !9399
  store i32 %28, i32* @ansi_val, align 4, !dbg !9399
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !9400
  br i1 %30, label %31, label %33, !dbg !9402

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #26, !dbg !9403
  br i1 %32, label %33, label %81, !dbg !9404

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #26, !dbg !9405
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #26, !dbg !9406
  br label %34, !dbg !9407

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !9361), !dbg !9408
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !9409

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !9410
  %37 = load i8, i8* @cur, align 1, !dbg !9413
  %38 = zext i8 %37 to i32, !dbg !9413
  %39 = icmp ugt i32 %36, %38, !dbg !9414
  br i1 %39, label %80, label %40, !dbg !9415

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !9416
  %42 = trunc i32 %36 to i8, !dbg !9416
  %43 = add i8 %41, %42, !dbg !9416
  store i8 %43, i8* @end, align 1, !dbg !9416
  %44 = sub i8 %37, %42, !dbg !9417
  store i8 %44, i8* @cur, align 1, !dbg !9417
  tail call fastcc void @cursor_backward(i32 noundef %36) #26, !dbg !9418
  br label %80, !dbg !9419

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !9420
  %47 = load i8, i8* @end, align 1, !dbg !9422
  %48 = zext i8 %47 to i32, !dbg !9422
  %49 = icmp ugt i32 %46, %48, !dbg !9423
  br i1 %49, label %80, label %50, !dbg !9424

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !9425
  %52 = sub i8 %47, %51, !dbg !9425
  store i8 %52, i8* @end, align 1, !dbg !9425
  %53 = load i8, i8* @cur, align 1, !dbg !9426
  %54 = add i8 %53, %51, !dbg !9426
  store i8 %54, i8* @cur, align 1, !dbg !9426
  tail call fastcc void @cursor_forward(i32 noundef %46) #26, !dbg !9427
  br label %80, !dbg !9428

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !9429
  %57 = icmp eq i8 %56, 0, !dbg !9429
  br i1 %57, label %80, label %58, !dbg !9431

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !9432
  tail call fastcc void @cursor_backward(i32 noundef %59) #26, !dbg !9433
  %60 = load i8, i8* @cur, align 1, !dbg !9434
  %61 = load i8, i8* @end, align 1, !dbg !9435
  %62 = add i8 %61, %60, !dbg !9435
  store i8 %62, i8* @end, align 1, !dbg !9435
  store i8 0, i8* @cur, align 1, !dbg !9436
  br label %80, !dbg !9437

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !9438
  %65 = icmp eq i8 %64, 0, !dbg !9438
  br i1 %65, label %80, label %66, !dbg !9440

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !9441
  tail call fastcc void @cursor_forward(i32 noundef %67) #26, !dbg !9442
  %68 = load i8, i8* @end, align 1, !dbg !9443
  %69 = load i8, i8* @cur, align 1, !dbg !9444
  %70 = add i8 %69, %68, !dbg !9444
  store i8 %70, i8* @cur, align 1, !dbg !9444
  store i8 0, i8* @end, align 1, !dbg !9445
  br label %80, !dbg !9446

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !9447
  %73 = icmp eq i8 %72, 0, !dbg !9447
  br i1 %73, label %80, label %74, !dbg !9449

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #26, !dbg !9450
  %75 = load i8, i8* @cur, align 1, !dbg !9451
  %76 = zext i8 %75 to i32, !dbg !9452
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !9452
  %78 = load i8, i8* @end, align 1, !dbg !9453
  %79 = add i8 %78, -1, !dbg !9453
  store i8 %79, i8* @end, align 1, !dbg !9453
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #26, !dbg !9454
  br label %80, !dbg !9455

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #26, !dbg !9456
  br label %81, !dbg !9457

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !9457
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9458 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9463, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata i32 %0, metadata !9464, metadata !DIExpression()), !dbg !9467
  %2 = and i32 %0, 31, !dbg !9468
  %3 = shl nuw i32 1, %2, !dbg !9468
  call void @llvm.dbg.value(metadata i32 %3, metadata !9465, metadata !DIExpression()), !dbg !9467
  %4 = xor i32 %3, -1, !dbg !9469
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %5, metadata !9466, metadata !DIExpression()), !dbg !9467
  %6 = and i32 %5, %3, !dbg !9471
  %7 = icmp ne i32 %6, 0, !dbg !9472
  ret i1 %7, !dbg !9473
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !9474 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9478, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata i32 %0, metadata !9479, metadata !DIExpression()), !dbg !9481
  %2 = and i32 %0, 31, !dbg !9482
  %3 = shl nuw i32 1, %2, !dbg !9482
  call void @llvm.dbg.value(metadata i32 %3, metadata !9480, metadata !DIExpression()), !dbg !9481
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #26, !dbg !9483
  ret void, !dbg !9484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !9485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9487, metadata !DIExpression()), !dbg !9488
  %2 = add i32 %0, -32, !dbg !9489
  %3 = icmp ult i32 %2, 95, !dbg !9489
  %4 = zext i1 %3 to i32, !dbg !9489
  ret i32 %4, !dbg !9490
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9491 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9495, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i8 %1, metadata !9496, metadata !DIExpression()), !dbg !9497
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 8) #26, !dbg !9498
  %3 = icmp eq i8 %1, 0, !dbg !9499
  br i1 %3, label %4, label %5, !dbg !9501

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 32) #26, !dbg !9502
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 8) #26, !dbg !9504
  br label %14, !dbg !9505

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #26, !dbg !9506
  call void @llvm.dbg.value(metadata i8 %1, metadata !9496, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i8* %0, metadata !9495, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i8 %1, metadata !9496, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9497
  br label %6, !dbg !9507

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !9496, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i8* %8, metadata !9495, metadata !DIExpression()), !dbg !9497
  %9 = add i8 %7, -1, !dbg !9508
  call void @llvm.dbg.value(metadata i8 %9, metadata !9496, metadata !DIExpression()), !dbg !9497
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9509
  %11 = load i8, i8* %10, align 1, !dbg !9511
  store i8 %11, i8* %8, align 1, !dbg !9512
  call void @llvm.dbg.value(metadata i8* %10, metadata !9495, metadata !DIExpression()), !dbg !9497
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %11) #26, !dbg !9513
  call void @llvm.dbg.value(metadata i8 %9, metadata !9496, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9497
  %12 = icmp eq i8 %9, 0, !dbg !9514
  br i1 %12, label %13, label %6, !dbg !9507, !llvm.loop !9515

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext 32) #26, !dbg !9517
  tail call fastcc void @cursor_restore() #26, !dbg !9518
  br label %14, !dbg !9519

14:                                               ; preds = %13, %4
  ret void, !dbg !9519
}

; Function Attrs: optsize
declare !dbg !9520 dso_local void @k_queue_append(%struct.k_queue* noundef, i8* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !9523 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9527, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.value(metadata i8 %1, metadata !9528, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.value(metadata i8 %2, metadata !9529, metadata !DIExpression()), !dbg !9531
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %1) #26, !dbg !9532
  %4 = icmp eq i8 %2, 0, !dbg !9533
  br i1 %4, label %5, label %6, !dbg !9535

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !9536
  br label %17, !dbg !9538

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !9539
  call void @llvm.dbg.value(metadata i8 %7, metadata !9530, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.value(metadata i8* %0, metadata !9527, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9531
  store i8 %1, i8* %0, align 1, !dbg !9540
  tail call fastcc void @cursor_save() #26, !dbg !9541
  call void @llvm.dbg.value(metadata i8 %7, metadata !9530, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.value(metadata i8 %2, metadata !9529, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.value(metadata i8* %0, metadata !9527, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9531
  call void @llvm.dbg.value(metadata i8 %2, metadata !9529, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9531
  br label %8, !dbg !9542

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9531
  call void @llvm.dbg.value(metadata i8 %10, metadata !9530, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.value(metadata i8 %11, metadata !9529, metadata !DIExpression()), !dbg !9531
  %13 = add i8 %11, -1, !dbg !9543
  call void @llvm.dbg.value(metadata i8 %13, metadata !9529, metadata !DIExpression()), !dbg !9531
  tail call fastcc void @uart_poll_out.46(i8 noundef zeroext %10) #26, !dbg !9544
  %14 = load i8, i8* %12, align 1, !dbg !9546
  call void @llvm.dbg.value(metadata i8 %14, metadata !9528, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.value(metadata i8* %12, metadata !9527, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9531
  store i8 %10, i8* %12, align 1, !dbg !9547
  call void @llvm.dbg.value(metadata i8 %14, metadata !9530, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.value(metadata i8* %12, metadata !9527, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9531
  call void @llvm.dbg.value(metadata i8 %13, metadata !9529, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9531
  %15 = icmp eq i8 %13, 0, !dbg !9548
  br i1 %15, label %16, label %8, !dbg !9542, !llvm.loop !9549

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #26, !dbg !9551
  br label %17, !dbg !9552

17:                                               ; preds = %16, %5
  ret void, !dbg !9552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !9553 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #25, !dbg !9554
  ret void, !dbg !9555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !9556 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !9557
  ret void, !dbg !9558
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !9559 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9564, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32 %0, metadata !9565, metadata !DIExpression()), !dbg !9566
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9567
  ret i32 %2, !dbg !9568
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !9569 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9571, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i32 %0, metadata !9572, metadata !DIExpression()), !dbg !9573
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9574
  ret i32 %2, !dbg !9575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.57(i32 noundef %0) unnamed_addr #11 !dbg !9576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9578, metadata !DIExpression()), !dbg !9579
  %2 = add i32 %0, -48, !dbg !9580
  %3 = icmp ult i32 %2, 10, !dbg !9581
  %4 = zext i1 %3 to i32, !dbg !9581
  ret i32 %4, !dbg !9582
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !9583 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9585, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.value(metadata i32 4, metadata !9586, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.value(metadata i32 16, metadata !9587, metadata !DIExpression()), !dbg !9589
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #26, !dbg !9590
  call void @llvm.dbg.value(metadata i32 %1, metadata !9588, metadata !DIExpression()), !dbg !9589
  %2 = and i32 %1, 16, !dbg !9591
  %3 = icmp ne i32 %2, 0, !dbg !9592
  ret i1 %3, !dbg !9593
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9594 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9596, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.value(metadata i32 %0, metadata !9597, metadata !DIExpression()), !dbg !9599
  %2 = and i32 %0, 31, !dbg !9600
  %3 = shl nuw i32 1, %2, !dbg !9600
  call void @llvm.dbg.value(metadata i32 %3, metadata !9598, metadata !DIExpression()), !dbg !9599
  %4 = xor i32 %3, -1, !dbg !9601
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9602
  ret void, !dbg !9603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !9604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9606, metadata !DIExpression()), !dbg !9607
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), i32 noundef %0) #25, !dbg !9608
  ret void, !dbg !9609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !9610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9612, metadata !DIExpression()), !dbg !9613
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef %0) #25, !dbg !9614
  ret void, !dbg !9615
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !9616 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9620, metadata !DIExpression()), !dbg !9621
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !9622
  ret i32 %1, !dbg !9623
}

; Function Attrs: optsize
declare !dbg !9624 dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef, [1 x i64]) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !9625 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9627, metadata !DIExpression()), !dbg !9629
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9630
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9628, metadata !DIExpression()), !dbg !9629
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !9631
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9631
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9633
  br i1 %4, label %7, label %5, !dbg !9634

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9635
  br label %7, !dbg !9636

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9629
  ret i32 %8, !dbg !9637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update.60() unnamed_addr #1 !dbg !9638 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9640, metadata !DIExpression()), !dbg !9642
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9643
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9641, metadata !DIExpression()), !dbg !9642
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !9644
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9644
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9646
  br i1 %4, label %7, label %5, !dbg !9647

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9648
  br label %7, !dbg !9649

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9642
  ret i32 %8, !dbg !9650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable.61() unnamed_addr #1 !dbg !9651 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9653, metadata !DIExpression()), !dbg !9655
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9656
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9654, metadata !DIExpression()), !dbg !9655
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !9657
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9657
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9659
  br i1 %4, label %6, label %5, !dbg !9660

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9661
  br label %6, !dbg !9663

6:                                                ; preds = %5, %0
  ret void, !dbg !9664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable.62() unnamed_addr #1 !dbg !9665 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9667, metadata !DIExpression()), !dbg !9669
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9670
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9668, metadata !DIExpression()), !dbg !9669
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !9671
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9671
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9673
  br i1 %4, label %6, label %5, !dbg !9674

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9675
  br label %6, !dbg !9677

6:                                                ; preds = %5, %0
  ret void, !dbg !9678
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9679 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9681, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i8 %1, metadata !9682, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i32 %2, metadata !9683, metadata !DIExpression()), !dbg !9686
  %5 = bitcast i32* %4 to i8*, !dbg !9687
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9687
  call void @llvm.dbg.value(metadata i32* %4, metadata !9685, metadata !DIExpression(DW_OP_deref)), !dbg !9686
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !9688
  call void @llvm.dbg.value(metadata i32 %6, metadata !9684, metadata !DIExpression()), !dbg !9686
  %7 = icmp eq i32 %6, 0, !dbg !9689
  br i1 %7, label %8, label %31, !dbg !9691

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9684, metadata !DIExpression()), !dbg !9686
  %9 = and i32 %2, 131072, !dbg !9692
  %10 = icmp eq i32 %9, 0, !dbg !9694
  br i1 %10, label %28, label %11, !dbg !9695

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9696
  %13 = icmp eq i32 %12, 0, !dbg !9699
  br i1 %13, label %18, label %14, !dbg !9700

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9701
  %16 = shl nuw i32 1, %15, !dbg !9701
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !9703
  br label %25, !dbg !9704

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9705
  %20 = icmp eq i32 %19, 0, !dbg !9707
  %21 = zext i8 %1 to i32, !dbg !9686
  br i1 %20, label %25, label %22, !dbg !9708

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9709
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !9711
  br label %25, !dbg !9712

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9713
  %27 = load i32, i32* %4, align 4, !dbg !9714
  call void @llvm.dbg.value(metadata i32 %30, metadata !9685, metadata !DIExpression()), !dbg !9686
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !9715
  br label %31, !dbg !9716

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9713
  %30 = load i32, i32* %4, align 4, !dbg !9714
  call void @llvm.dbg.value(metadata i32 %30, metadata !9685, metadata !DIExpression()), !dbg !9686
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !9715
  call void @llvm.dbg.value(metadata i32 0, metadata !9684, metadata !DIExpression()), !dbg !9686
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9717
  ret i32 %6, !dbg !9717
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9718 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9722, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32* %1, metadata !9723, metadata !DIExpression()), !dbg !9727
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9728
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9728
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9728
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9724, metadata !DIExpression()), !dbg !9727
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9729
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9729
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9729
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9726, metadata !DIExpression()), !dbg !9727
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !9730
  store i32 %9, i32* %1, align 4, !dbg !9731
  ret i32 0, !dbg !9732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9733 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9735, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i32 %1, metadata !9736, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i32 %2, metadata !9737, metadata !DIExpression()), !dbg !9741
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9742
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9742
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9742
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9738, metadata !DIExpression()), !dbg !9741
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9743
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9743
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9743
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9739, metadata !DIExpression()), !dbg !9741
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !9744
  call void @llvm.dbg.value(metadata i32 %10, metadata !9740, metadata !DIExpression()), !dbg !9741
  %11 = xor i32 %1, -1, !dbg !9745
  %12 = and i32 %10, %11, !dbg !9746
  %13 = and i32 %2, %1, !dbg !9747
  %14 = or i32 %12, %13, !dbg !9748
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !9749
  ret i32 0, !dbg !9750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9751 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9753, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.value(metadata i32 %1, metadata !9754, metadata !DIExpression()), !dbg !9757
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9758
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9758
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9758
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9755, metadata !DIExpression()), !dbg !9757
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9759
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9759
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9759
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9756, metadata !DIExpression()), !dbg !9757
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9760
  store volatile i32 %1, i32* %9, align 4, !dbg !9760
  ret i32 0, !dbg !9761
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9762 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9764, metadata !DIExpression()), !dbg !9768
  call void @llvm.dbg.value(metadata i32 %1, metadata !9765, metadata !DIExpression()), !dbg !9768
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9769
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9769
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9769
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9766, metadata !DIExpression()), !dbg !9768
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9770
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9770
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9770
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9767, metadata !DIExpression()), !dbg !9768
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !9771
  ret i32 0, !dbg !9772
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9773 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9775, metadata !DIExpression()), !dbg !9779
  call void @llvm.dbg.value(metadata i32 %1, metadata !9776, metadata !DIExpression()), !dbg !9779
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9780
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9780
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9780
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9777, metadata !DIExpression()), !dbg !9779
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9781
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9781
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9781
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9778, metadata !DIExpression()), !dbg !9779
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9782
  %10 = load volatile i32, i32* %9, align 4, !dbg !9782
  %11 = xor i32 %10, %1, !dbg !9782
  store volatile i32 %11, i32* %9, align 4, !dbg !9782
  ret i32 0, !dbg !9783
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9784 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9786, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata i8 %1, metadata !9787, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata i32 %2, metadata !9788, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata i32 %3, metadata !9789, metadata !DIExpression()), !dbg !9796
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9797
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9797
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9797
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9790, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata i8* undef, metadata !9791, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata i32 0, metadata !9793, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata i32 0, metadata !9794, metadata !DIExpression()), !dbg !9796
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9798

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9799
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !9803
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9804
  %12 = load i32, i32* %11, align 4, !dbg !9804
  %13 = icmp eq i32 %10, %12, !dbg !9805
  br i1 %13, label %14, label %29, !dbg !9806

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9807
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9809
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9810
  br label %29, !dbg !9811

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9812
  %17 = load i8*, i8** %16, align 4, !dbg !9812
  call void @llvm.dbg.value(metadata i8* %17, metadata !9791, metadata !DIExpression()), !dbg !9796
  %18 = zext i8 %1 to i32, !dbg !9813
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9815
  %20 = icmp eq i32 %19, 0, !dbg !9816
  br i1 %20, label %21, label %29, !dbg !9817

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9818
  %23 = load i32, i32* %22, align 4, !dbg !9818
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !9819
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9820

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9793, metadata !DIExpression()), !dbg !9796
  br label %27, !dbg !9821

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9793, metadata !DIExpression()), !dbg !9796
  br label %27, !dbg !9823

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9793, metadata !DIExpression()), !dbg !9796
  br label %27, !dbg !9824

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9796
  call void @llvm.dbg.value(metadata i32 %28, metadata !9793, metadata !DIExpression()), !dbg !9796
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9825
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9826
  br label %29, !dbg !9826

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9796
  call void @llvm.dbg.value(metadata i32 %30, metadata !9794, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.label(metadata !9795), !dbg !9827
  ret i32 %30, !dbg !9828
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9829 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9831, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9832, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.value(metadata i1 %2, metadata !9833, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9835
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9836
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9836
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9836
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9834, metadata !DIExpression()), !dbg !9835
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9837
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !9838
  ret i32 %8, !dbg !9839
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9840 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9846, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9847, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.value(metadata i1 %2, metadata !9848, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9849
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !9850
  br i1 %4, label %10, label %5, !dbg !9852

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9853
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !9856
  %8 = or i1 %7, %2, !dbg !9857
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9857
  br i1 %2, label %11, label %13, !dbg !9857

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9858

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9859
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !9862
  br label %13, !dbg !9863

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9849
  ret i32 %14, !dbg !9864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9865 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9869, metadata !DIExpression()), !dbg !9870
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9871
  %3 = icmp eq %struct._snode* %2, null, !dbg !9871
  ret i1 %3, !dbg !9871
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9872 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9876, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9877, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9878, metadata !DIExpression()), !dbg !9880
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9881
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9879, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9878, metadata !DIExpression()), !dbg !9880
  %4 = icmp eq %struct._snode* %3, null, !dbg !9883
  br i1 %4, label %15, label %5, !dbg !9881

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9879, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9878, metadata !DIExpression()), !dbg !9880
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9885
  br i1 %6, label %9, label %11, !dbg !9888

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9879, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9878, metadata !DIExpression()), !dbg !9880
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9885
  br i1 %8, label %9, label %11, !dbg !9888, !llvm.loop !9889

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !9890
  br label %15, !dbg !9890

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9879, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9878, metadata !DIExpression()), !dbg !9880
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !9883
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9879, metadata !DIExpression()), !dbg !9880
  %14 = icmp eq %struct._snode* %13, null, !dbg !9883
  br i1 %14, label %15, label %7, !dbg !9881, !llvm.loop !9889

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9893 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9897, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9898, metadata !DIExpression()), !dbg !9899
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9900
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !9900
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !9900
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9901
  %5 = icmp eq %struct._snode* %4, null, !dbg !9901
  br i1 %5, label %6, label %8, !dbg !9900

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9903
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !9903
  br label %8, !dbg !9903

8:                                                ; preds = %6, %2
  ret void, !dbg !9900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9905 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9909, metadata !DIExpression()), !dbg !9910
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9911
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9911
  ret %struct._snode* %3, !dbg !9912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9913 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9917, metadata !DIExpression()), !dbg !9919
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9918, metadata !DIExpression()), !dbg !9919
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9920
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9921
  ret void, !dbg !9922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9923 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9925, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9926, metadata !DIExpression()), !dbg !9927
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9928
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9929
  ret void, !dbg !9930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9931 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9933, metadata !DIExpression()), !dbg !9934
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9935
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9935
  ret %struct._snode* %3, !dbg !9936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9937 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9939, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9940, metadata !DIExpression()), !dbg !9941
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9942
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9943
  ret void, !dbg !9944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9945 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9949, metadata !DIExpression()), !dbg !9952
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9950, metadata !DIExpression()), !dbg !9952
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9951, metadata !DIExpression()), !dbg !9952
  %4 = icmp eq %struct._snode* %1, null, !dbg !9953
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !9955
  br i1 %4, label %6, label %11, !dbg !9956

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !9957
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9959
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9959
  br i1 %8, label %9, label %15, !dbg !9957

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9961
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !9961
  br label %15, !dbg !9961

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !9963
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9965
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9965
  br i1 %13, label %14, label %15, !dbg !9963

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !9967
  br label %15, !dbg !9967

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !9956
  ret void, !dbg !9956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9969 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9973, metadata !DIExpression()), !dbg !9974
  %2 = icmp eq %struct._snode* %0, null, !dbg !9975
  br i1 %2, label %5, label %3, !dbg !9975

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !9975
  br label %5, !dbg !9975

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9975
  ret %struct._snode* %6, !dbg !9975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9976 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9978, metadata !DIExpression()), !dbg !9979
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !9980
  ret %struct._snode* %2, !dbg !9980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9981 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9983, metadata !DIExpression()), !dbg !9984
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9985
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9985
  ret %struct._snode* %3, !dbg !9986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9989, metadata !DIExpression()), !dbg !9992
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !9993, !range !9994
  call void @llvm.dbg.value(metadata i32 %2, metadata !9990, metadata !DIExpression()), !dbg !9992
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !9995
  call void @llvm.dbg.value(metadata i32 %3, metadata !9991, metadata !DIExpression()), !dbg !9992
  ret i32 %3, !dbg !9996
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9999, metadata !DIExpression()), !dbg !10002
  call void @llvm.dbg.value(metadata i8* %1, metadata !10000, metadata !DIExpression()), !dbg !10002
  call void @llvm.dbg.value(metadata i8* %1, metadata !10001, metadata !DIExpression()), !dbg !10002
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10003
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10003
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10004
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10004
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10004
  %8 = shl nuw i32 1, %0, !dbg !10005
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10006
  ret void, !dbg !10007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10008 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10012, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata i32 %1, metadata !10013, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10014, metadata !DIExpression()), !dbg !10018
  %4 = bitcast i64* %3 to i8*, !dbg !10019
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10019
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10016, metadata !DIExpression()), !dbg !10018
  store i64 70368744177732, i64* %3, align 8, !dbg !10020
  call void @llvm.dbg.value(metadata i64* %3, metadata !10016, metadata !DIExpression(DW_OP_deref)), !dbg !10018
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10021
  call void @llvm.dbg.value(metadata i32 %5, metadata !10017, metadata !DIExpression()), !dbg !10018
  %6 = icmp eq i32 %5, 0, !dbg !10022
  br i1 %6, label %7, label %8, !dbg !10024

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10025
  br label %8, !dbg !10026

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10027
  ret void, !dbg !10027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10028 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10030, metadata !DIExpression()), !dbg !10033
  call void @llvm.dbg.value(metadata i8* %0, metadata !10031, metadata !DIExpression()), !dbg !10033
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10034
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10032, metadata !DIExpression()), !dbg !10033
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10035
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10035
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10036
  ret i32 %5, !dbg !10037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10040, metadata !DIExpression()), !dbg !10043
  call void @llvm.dbg.value(metadata i32 %1, metadata !10041, metadata !DIExpression()), !dbg !10043
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10044
  call void @llvm.dbg.value(metadata i32 %3, metadata !10042, metadata !DIExpression()), !dbg !10043
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10045
  ret void, !dbg !10046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !10047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10051, metadata !DIExpression()), !dbg !10052
  %2 = sdiv i32 %0, 4, !dbg !10053
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10054
  %6 = add nsw i32 %5, 16, !dbg !10055
  %7 = shl i32 15, %6, !dbg !10056
  %8 = or i32 %7, %2, !dbg !10057
  ret i32 %8, !dbg !10058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10063, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.value(metadata i32 %1, metadata !10064, metadata !DIExpression()), !dbg !10065
  %3 = and i32 %1, 255, !dbg !10066
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10066
  %5 = load volatile i32, i32* %4, align 4, !dbg !10066
  %6 = lshr i32 %1, 16, !dbg !10066
  %7 = xor i32 %6, -1, !dbg !10066
  %8 = and i32 %5, %7, !dbg !10066
  call void @llvm.dbg.value(metadata i32 %6, metadata !10067, metadata !DIExpression()) #24, !dbg !10071
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10073, !srcloc !10074
  call void @llvm.dbg.value(metadata i32 %9, metadata !10070, metadata !DIExpression()) #24, !dbg !10071
  call void @llvm.dbg.value(metadata i32 %9, metadata !10075, metadata !DIExpression()) #24, !dbg !10080
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !10082, !range !3849
  %11 = shl i32 %0, %10, !dbg !10066
  %12 = or i32 %11, %8, !dbg !10066
  store volatile i32 %12, i32* %4, align 4, !dbg !10066
  ret void, !dbg !10083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10084 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10088, metadata !DIExpression()), !dbg !10093
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10089, metadata !DIExpression()), !dbg !10093
  call void @llvm.dbg.value(metadata i32 %2, metadata !10090, metadata !DIExpression()), !dbg !10093
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10094
  %5 = icmp eq %struct._snode* %4, null, !dbg !10094
  br i1 %5, label %21, label %6, !dbg !10094

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10096
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10092, metadata !DIExpression()), !dbg !10093
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10091, metadata !DIExpression()), !dbg !10093
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10097
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10097
  %11 = load i32, i32* %10, align 4, !dbg !10097
  %12 = and i32 %11, %2, !dbg !10101
  %13 = icmp eq i32 %12, 0, !dbg !10101
  br i1 %13, label %19, label %14, !dbg !10102

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10091, metadata !DIExpression()), !dbg !10093
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10103
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10103
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10103
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10105
  br label %19, !dbg !10106

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10091, metadata !DIExpression()), !dbg !10093
  %20 = icmp eq %struct._snode* %8, null, !dbg !10107
  br i1 %20, label %21, label %6, !dbg !10107

21:                                               ; preds = %19, %3
  ret void, !dbg !10108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10111, metadata !DIExpression()), !dbg !10112
  %2 = and i32 %0, 255, !dbg !10113
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10113
  %4 = load volatile i32, i32* %3, align 4, !dbg !10113
  %5 = lshr i32 %0, 16, !dbg !10113
  %6 = and i32 %4, %5, !dbg !10113
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #24, !dbg !10114
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !10116, !srcloc !10074
  call void @llvm.dbg.value(metadata i32 %7, metadata !10070, metadata !DIExpression()) #24, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %7, metadata !10075, metadata !DIExpression()) #24, !dbg !10117
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10119, !range !3849
  %9 = lshr i32 %6, %8, !dbg !10120
  ret i32 %9, !dbg !10121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10122 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10127, metadata !DIExpression()), !dbg !10129
  call void @llvm.dbg.value(metadata i32 %1, metadata !10128, metadata !DIExpression()), !dbg !10129
  %3 = shl i32 %1, 16, !dbg !10130
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10130
  store volatile i32 %3, i32* %4, align 4, !dbg !10130
  ret void, !dbg !10131
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10132 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10136, metadata !DIExpression()), !dbg !10137
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10138
  %3 = load volatile i32, i32* %2, align 4, !dbg !10138
  ret i32 %3, !dbg !10139
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10140 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10142, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.value(metadata i32 %1, metadata !10143, metadata !DIExpression()), !dbg !10144
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10145
  store volatile i32 %1, i32* %3, align 4, !dbg !10145
  ret void, !dbg !10146
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10147 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10149, metadata !DIExpression()), !dbg !10150
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10151
  %3 = load volatile i32, i32* %2, align 4, !dbg !10151
  ret i32 %3, !dbg !10152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !10153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10157, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.value(metadata i32* %1, metadata !10158, metadata !DIExpression()), !dbg !10159
  %3 = and i32 %0, 131072, !dbg !10160
  %4 = icmp eq i32 %3, 0, !dbg !10162
  br i1 %4, label %22, label %5, !dbg !10163

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10164
  %6 = and i32 %0, 2, !dbg !10166
  %7 = icmp eq i32 %6, 0, !dbg !10168
  br i1 %7, label %11, label %8, !dbg !10169

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10170
  %10 = icmp eq i32 %9, 0, !dbg !10170
  br i1 %10, label %33, label %11, !dbg !10173

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10174
  store i32 %12, i32* %1, align 4, !dbg !10174
  %13 = and i32 %0, 16, !dbg !10175
  %14 = icmp eq i32 %13, 0, !dbg !10177
  br i1 %14, label %17, label %15, !dbg !10178

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10179
  br label %31, !dbg !10181

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10182
  %19 = icmp eq i32 %18, 0, !dbg !10184
  br i1 %19, label %33, label %20, !dbg !10185

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10186
  br label %31, !dbg !10188

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10189
  %24 = icmp eq i32 %23, 0, !dbg !10191
  br i1 %24, label %31, label %25, !dbg !10192

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10193
  %27 = icmp eq i32 %26, 0, !dbg !10196
  br i1 %27, label %28, label %31, !dbg !10197

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10198
  br label %33, !dbg !10199

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10159
  ret i32 %34, !dbg !10199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10200 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10204, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 %1, metadata !10205, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 %2, metadata !10206, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 %3, metadata !10207, metadata !DIExpression()), !dbg !10215
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10216
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10216
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10216
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10208, metadata !DIExpression()), !dbg !10215
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10217
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10217
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10217
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10209, metadata !DIExpression()), !dbg !10215
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10218
  call void @llvm.dbg.value(metadata i32 %11, metadata !10210, metadata !DIExpression()), !dbg !10215
  %12 = and i32 %2, 48, !dbg !10219
  call void @llvm.dbg.value(metadata i32 %12, metadata !10211, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 %2, metadata !10212, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10215
  call void @llvm.dbg.value(metadata i32 %2, metadata !10213, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10215
  call void @llvm.dbg.value(metadata i32 %2, metadata !10214, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10215
  %13 = lshr i32 %2, 6, !dbg !10220
  %14 = and i32 %13, 1, !dbg !10220
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10221
  %15 = lshr i32 %2, 7, !dbg !10222
  %16 = and i32 %15, 3, !dbg !10222
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10223
  %17 = lshr i32 %2, 9, !dbg !10224
  %18 = and i32 %17, 3, !dbg !10224
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10225
  %19 = icmp eq i32 %12, 32, !dbg !10226
  br i1 %19, label %20, label %24, !dbg !10228

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10229
  br i1 %21, label %22, label %23, !dbg !10232

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10233
  br label %24, !dbg !10235

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10236
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10238
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10239
  ret void, !dbg !10240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !10241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10243, metadata !DIExpression()), !dbg !10245
  %2 = shl nuw i32 1, %0, !dbg !10246
  call void @llvm.dbg.value(metadata i32 %2, metadata !10244, metadata !DIExpression()), !dbg !10245
  ret i32 %2, !dbg !10247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10248 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10252, metadata !DIExpression()), !dbg !10255
  call void @llvm.dbg.value(metadata i32 %1, metadata !10253, metadata !DIExpression()), !dbg !10255
  call void @llvm.dbg.value(metadata i32 %2, metadata !10254, metadata !DIExpression()), !dbg !10255
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10256
  %5 = load volatile i32, i32* %4, align 4, !dbg !10256
  %6 = xor i32 %1, -1, !dbg !10256
  %7 = and i32 %5, %6, !dbg !10256
  %8 = mul i32 %2, %1, !dbg !10256
  %9 = or i32 %7, %8, !dbg !10256
  store volatile i32 %9, i32* %4, align 4, !dbg !10256
  ret void, !dbg !10257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10258 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10260, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %1, metadata !10261, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %2, metadata !10262, metadata !DIExpression()), !dbg !10263
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10264
  %5 = load volatile i32, i32* %4, align 4, !dbg !10264
  call void @llvm.dbg.value(metadata i32 %1, metadata !10067, metadata !DIExpression()) #24, !dbg !10265
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10267, !srcloc !10074
  call void @llvm.dbg.value(metadata i32 %6, metadata !10070, metadata !DIExpression()) #24, !dbg !10265
  call void @llvm.dbg.value(metadata i32 %6, metadata !10075, metadata !DIExpression()) #24, !dbg !10268
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10270, !range !3849
  %8 = shl nuw nsw i32 %7, 1, !dbg !10264
  %9 = shl i32 3, %8, !dbg !10264
  %10 = xor i32 %9, -1, !dbg !10264
  %11 = and i32 %5, %10, !dbg !10264
  call void @llvm.dbg.value(metadata i32 %1, metadata !10067, metadata !DIExpression()) #24, !dbg !10271
  call void @llvm.dbg.value(metadata i32 %6, metadata !10070, metadata !DIExpression()) #24, !dbg !10271
  call void @llvm.dbg.value(metadata i32 %6, metadata !10075, metadata !DIExpression()) #24, !dbg !10273
  %12 = shl i32 %2, %8, !dbg !10264
  %13 = or i32 %11, %12, !dbg !10264
  store volatile i32 %13, i32* %4, align 4, !dbg !10264
  ret void, !dbg !10275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10276 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10278, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i32 %1, metadata !10279, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i32 %2, metadata !10280, metadata !DIExpression()), !dbg !10281
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10282
  %5 = load volatile i32, i32* %4, align 4, !dbg !10282
  call void @llvm.dbg.value(metadata i32 %1, metadata !10067, metadata !DIExpression()) #24, !dbg !10283
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10285, !srcloc !10074
  call void @llvm.dbg.value(metadata i32 %6, metadata !10070, metadata !DIExpression()) #24, !dbg !10283
  call void @llvm.dbg.value(metadata i32 %6, metadata !10075, metadata !DIExpression()) #24, !dbg !10286
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10288, !range !3849
  %8 = shl nuw nsw i32 %7, 1, !dbg !10282
  %9 = shl i32 3, %8, !dbg !10282
  %10 = xor i32 %9, -1, !dbg !10282
  %11 = and i32 %5, %10, !dbg !10282
  call void @llvm.dbg.value(metadata i32 %1, metadata !10067, metadata !DIExpression()) #24, !dbg !10289
  call void @llvm.dbg.value(metadata i32 %6, metadata !10070, metadata !DIExpression()) #24, !dbg !10289
  call void @llvm.dbg.value(metadata i32 %6, metadata !10075, metadata !DIExpression()) #24, !dbg !10291
  %12 = shl i32 %2, %8, !dbg !10282
  %13 = or i32 %11, %12, !dbg !10282
  store volatile i32 %13, i32* %4, align 4, !dbg !10282
  ret void, !dbg !10293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10294 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10296, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i32 %1, metadata !10297, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i32 %2, metadata !10298, metadata !DIExpression()), !dbg !10299
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10300
  %5 = load volatile i32, i32* %4, align 4, !dbg !10300
  call void @llvm.dbg.value(metadata i32 %1, metadata !10067, metadata !DIExpression()) #24, !dbg !10301
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10303, !srcloc !10074
  call void @llvm.dbg.value(metadata i32 %6, metadata !10070, metadata !DIExpression()) #24, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %6, metadata !10075, metadata !DIExpression()) #24, !dbg !10304
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10306, !range !3849
  %8 = shl nuw nsw i32 %7, 2, !dbg !10300
  %9 = shl i32 15, %8, !dbg !10300
  %10 = xor i32 %9, -1, !dbg !10300
  %11 = and i32 %5, %10, !dbg !10300
  call void @llvm.dbg.value(metadata i32 %1, metadata !10067, metadata !DIExpression()) #24, !dbg !10307
  call void @llvm.dbg.value(metadata i32 %6, metadata !10070, metadata !DIExpression()) #24, !dbg !10307
  call void @llvm.dbg.value(metadata i32 %6, metadata !10075, metadata !DIExpression()) #24, !dbg !10309
  %12 = shl i32 %2, %8, !dbg !10300
  %13 = or i32 %11, %12, !dbg !10300
  store volatile i32 %13, i32* %4, align 4, !dbg !10300
  ret void, !dbg !10311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10312 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10314, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 %1, metadata !10315, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 %2, metadata !10316, metadata !DIExpression()), !dbg !10317
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10318
  %5 = load volatile i32, i32* %4, align 4, !dbg !10318
  %6 = lshr i32 %1, 8, !dbg !10318
  call void @llvm.dbg.value(metadata i32 %6, metadata !10067, metadata !DIExpression()) #24, !dbg !10319
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10321, !srcloc !10074
  call void @llvm.dbg.value(metadata i32 %7, metadata !10070, metadata !DIExpression()) #24, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %7, metadata !10075, metadata !DIExpression()) #24, !dbg !10322
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10324, !range !3849
  %9 = shl nuw nsw i32 %8, 2, !dbg !10318
  %10 = shl i32 15, %9, !dbg !10318
  %11 = xor i32 %10, -1, !dbg !10318
  %12 = and i32 %5, %11, !dbg !10318
  call void @llvm.dbg.value(metadata i32 %6, metadata !10067, metadata !DIExpression()) #24, !dbg !10325
  call void @llvm.dbg.value(metadata i32 %7, metadata !10070, metadata !DIExpression()) #24, !dbg !10325
  call void @llvm.dbg.value(metadata i32 %7, metadata !10075, metadata !DIExpression()) #24, !dbg !10327
  %13 = shl i32 %2, %9, !dbg !10318
  %14 = or i32 %12, %13, !dbg !10318
  store volatile i32 %14, i32* %4, align 4, !dbg !10318
  ret void, !dbg !10329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10330 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10332, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 %1, metadata !10333, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 %2, metadata !10334, metadata !DIExpression()), !dbg !10335
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10336
  %5 = load volatile i32, i32* %4, align 4, !dbg !10336
  call void @llvm.dbg.value(metadata i32 %1, metadata !10067, metadata !DIExpression()) #24, !dbg !10337
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10339, !srcloc !10074
  call void @llvm.dbg.value(metadata i32 %6, metadata !10070, metadata !DIExpression()) #24, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %6, metadata !10075, metadata !DIExpression()) #24, !dbg !10340
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10342, !range !3849
  %8 = shl nuw nsw i32 %7, 1, !dbg !10336
  %9 = shl i32 3, %8, !dbg !10336
  %10 = xor i32 %9, -1, !dbg !10336
  %11 = and i32 %5, %10, !dbg !10336
  call void @llvm.dbg.value(metadata i32 %1, metadata !10067, metadata !DIExpression()) #24, !dbg !10343
  call void @llvm.dbg.value(metadata i32 %6, metadata !10070, metadata !DIExpression()) #24, !dbg !10343
  call void @llvm.dbg.value(metadata i32 %6, metadata !10075, metadata !DIExpression()) #24, !dbg !10345
  %12 = shl i32 %2, %8, !dbg !10336
  %13 = or i32 %11, %12, !dbg !10336
  store volatile i32 %13, i32* %4, align 4, !dbg !10336
  ret void, !dbg !10347
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10348 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10350, metadata !DIExpression()), !dbg !10353
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10354
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10354
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10354
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10351, metadata !DIExpression()), !dbg !10353
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10355
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10356
  %6 = tail call fastcc zeroext i1 @device_is_ready.69() #26, !dbg !10357
  br i1 %6, label %7, label %11, !dbg !10359

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10360
  call void @llvm.dbg.value(metadata i32 %8, metadata !10352, metadata !DIExpression()), !dbg !10353
  %9 = icmp slt i32 %8, 0, !dbg !10361
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10363
  br label %11, !dbg !10363

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10353
  ret i32 %12, !dbg !10364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.69() unnamed_addr #1 !dbg !10365 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10369, metadata !DIExpression()), !dbg !10370
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10371, !srcloc !10373
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.70() #26, !dbg !10374
  ret i1 %1, !dbg !10375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10376 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10380, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.value(metadata i8 1, metadata !10381, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10382, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.value(metadata i32 0, metadata !10383, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10384, metadata !DIExpression()), !dbg !10385
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10386
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10386
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10386
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10382, metadata !DIExpression()), !dbg !10385
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10387
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10390
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10391
  call void @llvm.dbg.value(metadata i32 %7, metadata !10383, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.value(metadata i32 %7, metadata !10383, metadata !DIExpression()), !dbg !10385
  ret i32 %7, !dbg !10392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.70() unnamed_addr #1 !dbg !10393 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10395, metadata !DIExpression()), !dbg !10396
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10397
  ret i1 %1, !dbg !10398
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10399 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10403, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32 %1, metadata !10404, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32 %2, metadata !10405, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32 %3, metadata !10406, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32 0, metadata !10407, metadata !DIExpression()), !dbg !10411
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10412
  %5 = icmp eq i32 %3, 17, !dbg !10413
  br i1 %5, label %6, label %14, !dbg !10414

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10415
  call void @llvm.dbg.value(metadata i32 %7, metadata !10408, metadata !DIExpression()), !dbg !10416
  %8 = icmp eq i32 %7, 0, !dbg !10417
  %9 = shl nuw i32 1, %1, !dbg !10419
  br i1 %8, label %12, label %10, !dbg !10420

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10421
  br label %14, !dbg !10423

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10424
  br label %14, !dbg !10427

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10428
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !10429 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10431, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.value(metadata i8* %1, metadata !10432, metadata !DIExpression()), !dbg !10435
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10436
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10436
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10436
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10433, metadata !DIExpression()), !dbg !10435
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10437
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10437
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10439
  %9 = icmp eq i32 %8, 0, !dbg !10439
  br i1 %9, label %12, label %10, !dbg !10440

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10441
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10443
  br label %12, !dbg !10444

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10445
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10447
  %15 = icmp eq i32 %14, 0, !dbg !10447
  br i1 %15, label %19, label %16, !dbg !10448

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10449
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10450
  store i8 %18, i8* %1, align 1, !dbg !10451
  br label %19, !dbg !10452

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10435
  ret i32 %20, !dbg !10453
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10454 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10456, metadata !DIExpression()), !dbg !10460
  call void @llvm.dbg.value(metadata i8 %1, metadata !10457, metadata !DIExpression()), !dbg !10460
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10461
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10461
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10461
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10458, metadata !DIExpression()), !dbg !10460
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10462

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10463
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10466
  %10 = icmp eq i32 %9, 0, !dbg !10466
  br i1 %10, label %18, label %11, !dbg !10467

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10468, !srcloc !10475
  call void @llvm.dbg.value(metadata i32 undef, metadata !10471, metadata !DIExpression()) #24, !dbg !10476
  call void @llvm.dbg.value(metadata i32 undef, metadata !10472, metadata !DIExpression()) #24, !dbg !10476
  call void @llvm.dbg.value(metadata i32 undef, metadata !10459, metadata !DIExpression()), !dbg !10460
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10477
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10479
  %15 = icmp eq i32 %14, 0, !dbg !10479
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10468
  br i1 %15, label %17, label %19, !dbg !10480

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10471, metadata !DIExpression()) #24, !dbg !10476
  call void @llvm.dbg.value(metadata i32 %16, metadata !10459, metadata !DIExpression()), !dbg !10460
  call void @llvm.dbg.value(metadata i32 undef, metadata !10481, metadata !DIExpression()) #24, !dbg !10484
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !10486, !srcloc !10487
  br label %18, !dbg !10488

18:                                               ; preds = %17, %7
  br label %7, !dbg !10463, !llvm.loop !10489

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10468
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10491
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !10492
  call void @llvm.dbg.value(metadata i32 %20, metadata !10481, metadata !DIExpression()) #24, !dbg !10493
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !10495, !srcloc !10487
  ret void, !dbg !10496
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !10497 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10499, metadata !DIExpression()), !dbg !10502
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10503
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10503
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10503
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10500, metadata !DIExpression()), !dbg !10502
  call void @llvm.dbg.value(metadata i32 0, metadata !10501, metadata !DIExpression()), !dbg !10502
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10504
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10504
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10506
  %8 = icmp ne i32 %7, 0, !dbg !10506
  %9 = zext i1 %8 to i32, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %9, metadata !10501, metadata !DIExpression()), !dbg !10502
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10508
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10510
  %12 = icmp eq i32 %11, 0, !dbg !10510
  %13 = or i32 %9, 2, !dbg !10511
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10511
  call void @llvm.dbg.value(metadata i32 %14, metadata !10501, metadata !DIExpression()), !dbg !10502
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10512
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !10514
  %17 = icmp eq i32 %16, 0, !dbg !10514
  %18 = or i32 %14, 4, !dbg !10515
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10515
  call void @llvm.dbg.value(metadata i32 %19, metadata !10501, metadata !DIExpression()), !dbg !10502
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10516
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !10518
  %22 = icmp eq i32 %21, 0, !dbg !10518
  %23 = or i32 %19, 8, !dbg !10519
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10519
  call void @llvm.dbg.value(metadata i32 %24, metadata !10501, metadata !DIExpression()), !dbg !10502
  %25 = and i32 %24, 8, !dbg !10520
  %26 = icmp eq i32 %25, 0, !dbg !10520
  br i1 %26, label %29, label %27, !dbg !10522

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10523
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !10525
  br label %29, !dbg !10526

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10527
  %31 = icmp eq i32 %30, 0, !dbg !10527
  br i1 %31, label %34, label %32, !dbg !10529

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10530
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !10532
  br label %34, !dbg !10533

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10534
  %36 = icmp eq i32 %35, 0, !dbg !10534
  br i1 %36, label %39, label %37, !dbg !10536

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10537
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !10539
  br label %39, !dbg !10540

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10541
  %41 = icmp eq i32 %40, 0, !dbg !10541
  br i1 %41, label %44, label %42, !dbg !10543

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10544
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !10546
  br label %44, !dbg !10547

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10548
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !10549
  ret i32 %24, !dbg !10550
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10553, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10554, metadata !DIExpression()), !dbg !10562
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10563
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10563
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10563
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10555, metadata !DIExpression()), !dbg !10562
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10564
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10564
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10564
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10556, metadata !DIExpression()), !dbg !10562
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10565
  %10 = load i8, i8* %9, align 4, !dbg !10565
  %11 = zext i8 %10 to i32, !dbg !10566
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !10567
  call void @llvm.dbg.value(metadata i32 %12, metadata !10558, metadata !DIExpression()), !dbg !10562
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10568
  %14 = load i8, i8* %13, align 1, !dbg !10568
  %15 = zext i8 %14 to i32, !dbg !10569
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !10570
  call void @llvm.dbg.value(metadata i32 %16, metadata !10559, metadata !DIExpression()), !dbg !10562
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10571
  %18 = load i8, i8* %17, align 2, !dbg !10571
  %19 = zext i8 %18 to i32, !dbg !10572
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !10573
  call void @llvm.dbg.value(metadata i32 %20, metadata !10560, metadata !DIExpression()), !dbg !10562
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10574
  %22 = load i8, i8* %21, align 1, !dbg !10574
  %23 = zext i8 %22 to i32, !dbg !10575
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !10576
  call void @llvm.dbg.value(metadata i32 %24, metadata !10561, metadata !DIExpression()), !dbg !10562
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10577

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10579
  br i1 %26, label %69, label %27, !dbg !10581

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10582

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10583
  br i1 %29, label %65, label %30, !dbg !10583

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10585
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10562
  br i1 %31, label %38, label %34, !dbg !10587

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10588
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !10588

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10591
  br i1 %37, label %38, label %69, !dbg !10592

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10593
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !10594
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !10595
  %41 = icmp eq i32 %12, %40, !dbg !10597
  br i1 %41, label %43, label %42, !dbg !10598

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !10599
  br label %43, !dbg !10601

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !10602
  %45 = icmp eq i32 %16, %44, !dbg !10604
  br i1 %45, label %47, label %46, !dbg !10605

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !10606
  br label %47, !dbg !10608

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !10609
  %49 = icmp eq i32 %20, %48, !dbg !10611
  br i1 %49, label %51, label %50, !dbg !10612

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !10613
  br label %51, !dbg !10615

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !10616
  %53 = icmp eq i32 %24, %52, !dbg !10618
  br i1 %53, label %55, label %54, !dbg !10619

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !10620
  br label %55, !dbg !10622

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10623
  %57 = load i32, i32* %56, align 4, !dbg !10623
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10625
  %59 = load i32, i32* %58, align 4, !dbg !10625
  %60 = icmp eq i32 %57, %59, !dbg !10626
  br i1 %60, label %63, label %61, !dbg !10627

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !10628
  %62 = load i32, i32* %56, align 4, !dbg !10630
  store i32 %62, i32* %58, align 4, !dbg !10631
  br label %63, !dbg !10632

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10633
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !10634
  br label %69, !dbg !10635

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10583
  %67 = and i8 %66, 1, !dbg !10583
  %68 = icmp eq i8 %67, 0, !dbg !10583
  br i1 %68, label %30, label %69, !dbg !10583

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10562
  ret i32 %70, !dbg !10636
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !10637 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10639, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10640, metadata !DIExpression()), !dbg !10642
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10643
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10643
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10643
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10641, metadata !DIExpression()), !dbg !10642
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10644
  %7 = load i32, i32* %6, align 4, !dbg !10644
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10645
  store i32 %7, i32* %8, align 4, !dbg !10646
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10647, !range !10648
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !10649
  %11 = trunc i32 %10 to i8, !dbg !10649
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10650
  store i8 %11, i8* %12, align 4, !dbg !10651
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !10652, !range !10653
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !10654
  %15 = trunc i32 %14 to i8, !dbg !10654
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10655
  store i8 %15, i8* %16, align 1, !dbg !10656
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !10657
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10658, !range !10648
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !10659
  %20 = trunc i32 %19 to i8, !dbg !10659
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10660
  store i8 %20, i8* %21, align 2, !dbg !10661
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !10662, !range !10663
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !10664
  %24 = trunc i32 %23 to i8, !dbg !10664
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10665
  store i8 %24, i8* %25, align 1, !dbg !10666
  ret i32 0, !dbg !10667
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !10668 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10670, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.value(metadata i8* %1, metadata !10671, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.value(metadata i32 %2, metadata !10672, metadata !DIExpression()), !dbg !10676
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10677
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10677
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10677
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10673, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.value(metadata i8 0, metadata !10674, metadata !DIExpression()), !dbg !10676
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10678
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10678
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10680
  %10 = icmp eq i32 %9, 0, !dbg !10680
  br i1 %10, label %30, label %11, !dbg !10681

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10682, !srcloc !10475
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !10682
  call void @llvm.dbg.value(metadata i32 %13, metadata !10471, metadata !DIExpression()) #24, !dbg !10684
  call void @llvm.dbg.value(metadata i32 undef, metadata !10472, metadata !DIExpression()) #24, !dbg !10684
  call void @llvm.dbg.value(metadata i32 %13, metadata !10675, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.value(metadata i8 0, metadata !10674, metadata !DIExpression()), !dbg !10676
  %14 = icmp sgt i32 %2, 0, !dbg !10685
  br i1 %14, label %15, label %28, !dbg !10686

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !10674, metadata !DIExpression()), !dbg !10676
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10687
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !10688
  %20 = icmp eq i32 %19, 0, !dbg !10686
  br i1 %20, label %28, label %21, !dbg !10689

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10690
  %23 = add i8 %17, 1, !dbg !10692
  call void @llvm.dbg.value(metadata i8 %23, metadata !10674, metadata !DIExpression()), !dbg !10676
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !10693
  %25 = load i8, i8* %24, align 1, !dbg !10693
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !10694
  %26 = zext i8 %23 to i32, !dbg !10695
  %27 = icmp slt i32 %26, %2, !dbg !10685
  br i1 %27, label %15, label %28, !dbg !10686, !llvm.loop !10696

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !10695
  call void @llvm.dbg.value(metadata i32 %13, metadata !10481, metadata !DIExpression()) #24, !dbg !10698
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !10700, !srcloc !10487
  br label %30, !dbg !10701

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !10676
  ret i32 %31, !dbg !10702
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !10703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10705, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.value(metadata i8* %1, metadata !10706, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.value(metadata i32 %2, metadata !10707, metadata !DIExpression()), !dbg !10710
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10711
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10711
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10711
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10708, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.value(metadata i8 0, metadata !10709, metadata !DIExpression()), !dbg !10710
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10712
  call void @llvm.dbg.value(metadata i8 0, metadata !10709, metadata !DIExpression()), !dbg !10710
  %8 = icmp sgt i32 %2, 0, !dbg !10713
  br i1 %8, label %9, label %28, !dbg !10714

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !10709, metadata !DIExpression()), !dbg !10710
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10712
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10715
  %14 = icmp eq i32 %13, 0, !dbg !10714
  br i1 %14, label %28, label %15, !dbg !10716

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10717
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !10719
  %18 = add i8 %11, 1, !dbg !10720
  call void @llvm.dbg.value(metadata i8 %18, metadata !10709, metadata !DIExpression()), !dbg !10710
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !10721
  store i8 %17, i8* %19, align 1, !dbg !10722
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10723
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !10725
  %22 = icmp eq i32 %21, 0, !dbg !10725
  br i1 %22, label %25, label %23, !dbg !10726

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10727
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !10729
  br label %25, !dbg !10730

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !10709, metadata !DIExpression()), !dbg !10710
  %26 = zext i8 %18 to i32, !dbg !10731
  %27 = icmp slt i32 %26, %2, !dbg !10713
  br i1 %27, label %9, label %28, !dbg !10714, !llvm.loop !10732

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !10731
  ret i32 %29, !dbg !10734
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10737, metadata !DIExpression()), !dbg !10739
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10740
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10740
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10740
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10738, metadata !DIExpression()), !dbg !10739
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10741
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10741
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10742
  ret void, !dbg !10743
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10746, metadata !DIExpression()), !dbg !10748
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10749
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10749
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10749
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10747, metadata !DIExpression()), !dbg !10748
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10750
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10750
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10751
  ret void, !dbg !10752
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10753 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10755, metadata !DIExpression()), !dbg !10757
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10758
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10758
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10758
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10756, metadata !DIExpression()), !dbg !10757
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10759
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10759
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10760
  %8 = icmp eq i32 %7, 0, !dbg !10760
  br i1 %8, label %14, label %9, !dbg !10761

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10762
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !10763
  %12 = icmp ne i32 %11, 0, !dbg !10761
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !10764
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10767, metadata !DIExpression()), !dbg !10769
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10770
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10770
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10770
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10768, metadata !DIExpression()), !dbg !10769
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10771
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10771
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10772
  ret void, !dbg !10773
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10774 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10776, metadata !DIExpression()), !dbg !10778
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10779
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10779
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10779
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10777, metadata !DIExpression()), !dbg !10778
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10780
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10780
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10781
  ret void, !dbg !10782
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !10783 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10785, metadata !DIExpression()), !dbg !10787
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10788
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10788
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10788
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10786, metadata !DIExpression()), !dbg !10787
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10789
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10789
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10790
  ret i32 %7, !dbg !10791
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10794, metadata !DIExpression()), !dbg !10796
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10797
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10797
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10797
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10795, metadata !DIExpression()), !dbg !10796
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10798
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10798
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10799
  ret i32 %7, !dbg !10800
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10801 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10803, metadata !DIExpression()), !dbg !10805
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10806
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10806
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10806
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10804, metadata !DIExpression()), !dbg !10805
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10807
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10807
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10808
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10809
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10809
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !10809

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10811
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10813
  br label %11, !dbg !10814

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10813
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10815
  ret void, !dbg !10816
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10817 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10819, metadata !DIExpression()), !dbg !10821
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10822
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10822
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10822
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10820, metadata !DIExpression()), !dbg !10821
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10823
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10823
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10824
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10825
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10825
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !10825

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10827
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10829
  br label %11, !dbg !10830

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10829
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10831
  ret void, !dbg !10832
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !10833 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10835, metadata !DIExpression()), !dbg !10837
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10838
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10838
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10838
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10836, metadata !DIExpression()), !dbg !10837
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10839
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10839
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10840
  %8 = icmp eq i32 %7, 0, !dbg !10840
  br i1 %8, label %13, label %9, !dbg !10841

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10842
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10843
  %12 = icmp eq i32 %11, 0, !dbg !10843
  br i1 %12, label %13, label %22, !dbg !10844

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10845
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !10846
  %16 = icmp eq i32 %15, 0, !dbg !10846
  br i1 %16, label %22, label %17, !dbg !10847

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10848
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !10849
  %20 = icmp ne i32 %19, 0, !dbg !10847
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10851 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10853, metadata !DIExpression()), !dbg !10854
  ret i32 1, !dbg !10855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10856 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10858, metadata !DIExpression()), !dbg !10862
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10859, metadata !DIExpression()), !dbg !10862
  call void @llvm.dbg.value(metadata i8* %2, metadata !10860, metadata !DIExpression()), !dbg !10862
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10863
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10863
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10863
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10861, metadata !DIExpression()), !dbg !10862
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10864
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10865
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10866
  store i8* %2, i8** %8, align 4, !dbg !10867
  ret void, !dbg !10868
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10869 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10874, metadata !DIExpression()), !dbg !10875
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10876
  %3 = load volatile i32, i32* %2, align 4, !dbg !10876
  %4 = lshr i32 %3, 5, !dbg !10877
  %5 = and i32 %4, 1, !dbg !10877
  ret i32 %5, !dbg !10878
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10879 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10881, metadata !DIExpression()), !dbg !10882
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10883
  %3 = load volatile i32, i32* %2, align 4, !dbg !10883
  %4 = lshr i32 %3, 5, !dbg !10884
  %5 = and i32 %4, 1, !dbg !10884
  ret i32 %5, !dbg !10885
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10886 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10888, metadata !DIExpression()), !dbg !10889
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10890
  %3 = load volatile i32, i32* %2, align 4, !dbg !10890
  %4 = lshr i32 %3, 6, !dbg !10891
  %5 = and i32 %4, 1, !dbg !10891
  ret i32 %5, !dbg !10892
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10893 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10895, metadata !DIExpression()), !dbg !10896
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10897
  %3 = load volatile i32, i32* %2, align 4, !dbg !10897
  %4 = lshr i32 %3, 6, !dbg !10898
  %5 = and i32 %4, 1, !dbg !10898
  ret i32 %5, !dbg !10899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10900 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10904, metadata !DIExpression()), !dbg !10907
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10908

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10909, metadata !DIExpression()) #24, !dbg !10915
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10918, !srcloc !10919
  call void @llvm.dbg.value(metadata i32 %4, metadata !10914, metadata !DIExpression()) #24, !dbg !10915
  %5 = and i32 %4, -2, !dbg !10920
  call void @llvm.dbg.value(metadata i32 %5, metadata !10905, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.value(metadata i32 %5, metadata !10922, metadata !DIExpression()) #24, !dbg !10929
  call void @llvm.dbg.value(metadata i32* %2, metadata !10927, metadata !DIExpression()) #24, !dbg !10929
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10931, !srcloc !10932
  call void @llvm.dbg.value(metadata i32 %6, metadata !10928, metadata !DIExpression()) #24, !dbg !10929
  %7 = icmp eq i32 %6, 0, !dbg !10908
  br i1 %7, label %8, label %3, !dbg !10920, !llvm.loop !10933

8:                                                ; preds = %3
  ret void, !dbg !10934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10935 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10937, metadata !DIExpression()), !dbg !10938
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10939
  %3 = load volatile i32, i32* %2, align 4, !dbg !10939
  %4 = and i32 %3, -65, !dbg !10939
  store volatile i32 %4, i32* %2, align 4, !dbg !10939
  ret void, !dbg !10940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10941 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10943, metadata !DIExpression()), !dbg !10946
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10947

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10909, metadata !DIExpression()) #24, !dbg !10948
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10951, !srcloc !10919
  call void @llvm.dbg.value(metadata i32 %4, metadata !10914, metadata !DIExpression()) #24, !dbg !10948
  %5 = and i32 %4, -257, !dbg !10952
  call void @llvm.dbg.value(metadata i32 %5, metadata !10944, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %5, metadata !10922, metadata !DIExpression()) #24, !dbg !10954
  call void @llvm.dbg.value(metadata i32* %2, metadata !10927, metadata !DIExpression()) #24, !dbg !10954
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10956, !srcloc !10932
  call void @llvm.dbg.value(metadata i32 %6, metadata !10928, metadata !DIExpression()) #24, !dbg !10954
  %7 = icmp eq i32 %6, 0, !dbg !10947
  br i1 %7, label %8, label %3, !dbg !10952, !llvm.loop !10957

8:                                                ; preds = %3
  ret void, !dbg !10958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10959 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10961, metadata !DIExpression()), !dbg !10964
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10965

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10909, metadata !DIExpression()) #24, !dbg !10966
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10969, !srcloc !10919
  call void @llvm.dbg.value(metadata i32 %4, metadata !10914, metadata !DIExpression()) #24, !dbg !10966
  %5 = or i32 %4, 1, !dbg !10970
  call void @llvm.dbg.value(metadata i32 %5, metadata !10962, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %5, metadata !10922, metadata !DIExpression()) #24, !dbg !10972
  call void @llvm.dbg.value(metadata i32* %2, metadata !10927, metadata !DIExpression()) #24, !dbg !10972
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10974, !srcloc !10932
  call void @llvm.dbg.value(metadata i32 %6, metadata !10928, metadata !DIExpression()) #24, !dbg !10972
  %7 = icmp eq i32 %6, 0, !dbg !10965
  br i1 %7, label %8, label %3, !dbg !10970, !llvm.loop !10975

8:                                                ; preds = %3
  ret void, !dbg !10976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10977 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10979, metadata !DIExpression()), !dbg !10980
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10981
  %3 = load volatile i32, i32* %2, align 4, !dbg !10981
  %4 = or i32 %3, 64, !dbg !10981
  store volatile i32 %4, i32* %2, align 4, !dbg !10981
  ret void, !dbg !10982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10983 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10985, metadata !DIExpression()), !dbg !10988
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10989

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10909, metadata !DIExpression()) #24, !dbg !10990
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10993, !srcloc !10919
  call void @llvm.dbg.value(metadata i32 %4, metadata !10914, metadata !DIExpression()) #24, !dbg !10990
  %5 = or i32 %4, 256, !dbg !10994
  call void @llvm.dbg.value(metadata i32 %5, metadata !10986, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.value(metadata i32 %5, metadata !10922, metadata !DIExpression()) #24, !dbg !10996
  call void @llvm.dbg.value(metadata i32* %2, metadata !10927, metadata !DIExpression()) #24, !dbg !10996
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10998, !srcloc !10932
  call void @llvm.dbg.value(metadata i32 %6, metadata !10928, metadata !DIExpression()) #24, !dbg !10996
  %7 = icmp eq i32 %6, 0, !dbg !10989
  br i1 %7, label %8, label %3, !dbg !10994, !llvm.loop !10999

8:                                                ; preds = %3
  ret void, !dbg !11000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11001 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11003, metadata !DIExpression()), !dbg !11006
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11007

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10909, metadata !DIExpression()) #24, !dbg !11008
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11011, !srcloc !10919
  call void @llvm.dbg.value(metadata i32 %4, metadata !10914, metadata !DIExpression()) #24, !dbg !11008
  %5 = and i32 %4, -33, !dbg !11012
  call void @llvm.dbg.value(metadata i32 %5, metadata !11004, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.value(metadata i32 %5, metadata !10922, metadata !DIExpression()) #24, !dbg !11014
  call void @llvm.dbg.value(metadata i32* %2, metadata !10927, metadata !DIExpression()) #24, !dbg !11014
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11016, !srcloc !10932
  call void @llvm.dbg.value(metadata i32 %6, metadata !10928, metadata !DIExpression()) #24, !dbg !11014
  %7 = icmp eq i32 %6, 0, !dbg !11007
  br i1 %7, label %8, label %3, !dbg !11012, !llvm.loop !11017

8:                                                ; preds = %3
  ret void, !dbg !11018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11019 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11021, metadata !DIExpression()), !dbg !11024
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11025

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10909, metadata !DIExpression()) #24, !dbg !11026
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11029, !srcloc !10919
  call void @llvm.dbg.value(metadata i32 %4, metadata !10914, metadata !DIExpression()) #24, !dbg !11026
  %5 = or i32 %4, 32, !dbg !11030
  call void @llvm.dbg.value(metadata i32 %5, metadata !11022, metadata !DIExpression()), !dbg !11031
  call void @llvm.dbg.value(metadata i32 %5, metadata !10922, metadata !DIExpression()) #24, !dbg !11032
  call void @llvm.dbg.value(metadata i32* %2, metadata !10927, metadata !DIExpression()) #24, !dbg !11032
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11034, !srcloc !10932
  call void @llvm.dbg.value(metadata i32 %6, metadata !10928, metadata !DIExpression()) #24, !dbg !11032
  %7 = icmp eq i32 %6, 0, !dbg !11025
  br i1 %7, label %8, label %3, !dbg !11030, !llvm.loop !11035

8:                                                ; preds = %3
  ret void, !dbg !11036
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11037 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11039, metadata !DIExpression()), !dbg !11040
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11041
  %3 = load volatile i32, i32* %2, align 4, !dbg !11041
  %4 = lshr i32 %3, 7, !dbg !11042
  %5 = and i32 %4, 1, !dbg !11042
  ret i32 %5, !dbg !11043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11044 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11046, metadata !DIExpression()), !dbg !11049
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11050

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10909, metadata !DIExpression()) #24, !dbg !11051
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11054, !srcloc !10919
  call void @llvm.dbg.value(metadata i32 %4, metadata !10914, metadata !DIExpression()) #24, !dbg !11051
  %5 = and i32 %4, -65, !dbg !11055
  call void @llvm.dbg.value(metadata i32 %5, metadata !11047, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.value(metadata i32 %5, metadata !10922, metadata !DIExpression()) #24, !dbg !11057
  call void @llvm.dbg.value(metadata i32* %2, metadata !10927, metadata !DIExpression()) #24, !dbg !11057
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11059, !srcloc !10932
  call void @llvm.dbg.value(metadata i32 %6, metadata !10928, metadata !DIExpression()) #24, !dbg !11057
  %7 = icmp eq i32 %6, 0, !dbg !11050
  br i1 %7, label %8, label %3, !dbg !11055, !llvm.loop !11060

8:                                                ; preds = %3
  ret void, !dbg !11061
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11062 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11064, metadata !DIExpression()), !dbg !11067
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11068

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10909, metadata !DIExpression()) #24, !dbg !11069
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11072, !srcloc !10919
  call void @llvm.dbg.value(metadata i32 %4, metadata !10914, metadata !DIExpression()) #24, !dbg !11069
  %5 = or i32 %4, 64, !dbg !11073
  call void @llvm.dbg.value(metadata i32 %5, metadata !11065, metadata !DIExpression()), !dbg !11074
  call void @llvm.dbg.value(metadata i32 %5, metadata !10922, metadata !DIExpression()) #24, !dbg !11075
  call void @llvm.dbg.value(metadata i32* %2, metadata !10927, metadata !DIExpression()) #24, !dbg !11075
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11077, !srcloc !10932
  call void @llvm.dbg.value(metadata i32 %6, metadata !10928, metadata !DIExpression()) #24, !dbg !11075
  %7 = icmp eq i32 %6, 0, !dbg !11068
  br i1 %7, label %8, label %3, !dbg !11073, !llvm.loop !11078

8:                                                ; preds = %3
  ret void, !dbg !11079
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11080 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11084, metadata !DIExpression()), !dbg !11085
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11086
  %3 = load volatile i32, i32* %2, align 4, !dbg !11086
  %4 = trunc i32 %3 to i8, !dbg !11087
  ret i8 %4, !dbg !11088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11089 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11091, metadata !DIExpression()), !dbg !11092
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11093
  %3 = load volatile i32, i32* %2, align 4, !dbg !11093
  %4 = lshr i32 %3, 3, !dbg !11094
  %5 = and i32 %4, 1, !dbg !11094
  ret i32 %5, !dbg !11095
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11096 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11098, metadata !DIExpression()), !dbg !11100
  %3 = bitcast i32* %2 to i8*, !dbg !11101
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11101
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11099, metadata !DIExpression()), !dbg !11102
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11103
  %5 = load volatile i32, i32* %4, align 4, !dbg !11103
  store volatile i32 %5, i32* %2, align 4, !dbg !11104
  %6 = load volatile i32, i32* %2, align 4, !dbg !11105
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11106
  %8 = load volatile i32, i32* %7, align 4, !dbg !11106
  store volatile i32 %8, i32* %2, align 4, !dbg !11107
  %9 = load volatile i32, i32* %2, align 4, !dbg !11108
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11109
  ret void, !dbg !11109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11110 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11114, metadata !DIExpression()), !dbg !11116
  call void @llvm.dbg.value(metadata i8 %1, metadata !11115, metadata !DIExpression()), !dbg !11116
  %3 = zext i8 %1 to i32, !dbg !11117
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11118
  store volatile i32 %3, i32* %4, align 4, !dbg !11119
  ret void, !dbg !11120
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11121 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11125, metadata !DIExpression()), !dbg !11127
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11128
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11128
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11128
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11126, metadata !DIExpression()), !dbg !11127
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11129
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11129
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11130
  ret i32 %7, !dbg !11131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !11132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11136, metadata !DIExpression()), !dbg !11137
  %2 = icmp eq i32 %0, 1024, !dbg !11138
  %3 = select i1 %2, i32 2, i32 0, !dbg !11138
  %4 = icmp eq i32 %0, 1536, !dbg !11138
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11138
  ret i32 %5, !dbg !11139
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11140 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11142, metadata !DIExpression()), !dbg !11144
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11145
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11145
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11145
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11143, metadata !DIExpression()), !dbg !11144
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11146
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11146
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11147
  ret i32 %7, !dbg !11148
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !11149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11153, metadata !DIExpression()), !dbg !11154
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11155
  %3 = icmp ult i32 %2, 4, !dbg !11155
  br i1 %3, label %4, label %7, !dbg !11155

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11155
  %6 = load i32, i32* %5, align 4, !dbg !11155
  br label %7, !dbg !11155

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11156
  ret i32 %8, !dbg !11158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11159 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11161, metadata !DIExpression()), !dbg !11163
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11164
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11164
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11164
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11162, metadata !DIExpression()), !dbg !11163
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11165
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11165
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11166
  ret i32 %7, !dbg !11167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11172, metadata !DIExpression()), !dbg !11174
  call void @llvm.dbg.value(metadata i32 %1, metadata !11173, metadata !DIExpression()), !dbg !11174
  %3 = icmp eq i32 %0, 4096, !dbg !11175
  %4 = icmp eq i32 %1, 0, !dbg !11175
  %5 = select i1 %4, i32 4, i32 3, !dbg !11175
  %6 = select i1 %4, i32 3, i32 2, !dbg !11175
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11175
  ret i32 %7, !dbg !11176
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11177 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11179, metadata !DIExpression()), !dbg !11181
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11182
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11182
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11182
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11180, metadata !DIExpression()), !dbg !11181
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11183
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11183
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11184
  ret i32 %7, !dbg !11185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11190, metadata !DIExpression()), !dbg !11191
  %2 = icmp eq i32 %0, 768, !dbg !11192
  %3 = zext i1 %2 to i32, !dbg !11191
  ret i32 %3, !dbg !11194
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11195 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11197, metadata !DIExpression()), !dbg !11198
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11199
  %3 = load volatile i32, i32* %2, align 4, !dbg !11199
  %4 = and i32 %3, 768, !dbg !11199
  ret i32 %4, !dbg !11200
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11201 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11203, metadata !DIExpression()), !dbg !11204
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11205
  %3 = load volatile i32, i32* %2, align 4, !dbg !11205
  %4 = and i32 %3, 4096, !dbg !11205
  ret i32 %4, !dbg !11206
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11207 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11209, metadata !DIExpression()), !dbg !11210
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11211
  %3 = load volatile i32, i32* %2, align 4, !dbg !11211
  %4 = and i32 %3, 12288, !dbg !11211
  ret i32 %4, !dbg !11212
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11213 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11215, metadata !DIExpression()), !dbg !11216
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11217
  %3 = load volatile i32, i32* %2, align 4, !dbg !11217
  %4 = and i32 %3, 1536, !dbg !11217
  ret i32 %4, !dbg !11218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !11219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11223, metadata !DIExpression()), !dbg !11224
  %2 = icmp eq i32 %0, 2, !dbg !11225
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11225
  %4 = icmp eq i32 %0, 1, !dbg !11225
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11225
  ret i32 %5, !dbg !11226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11231, metadata !DIExpression()), !dbg !11232
  %2 = icmp ult i32 %0, 3, !dbg !11233
  br i1 %2, label %3, label %6, !dbg !11233

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11233
  %5 = load i32, i32* %4, align 4, !dbg !11233
  br label %6, !dbg !11233

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11234
  ret i32 %7, !dbg !11236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11241, metadata !DIExpression()), !dbg !11243
  call void @llvm.dbg.value(metadata i32 %1, metadata !11242, metadata !DIExpression()), !dbg !11243
  %3 = icmp eq i32 %0, 4, !dbg !11244
  %4 = icmp eq i32 %1, 0, !dbg !11244
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11244
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11244
  ret i32 %6, !dbg !11245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11250, metadata !DIExpression()), !dbg !11251
  %2 = icmp eq i32 %0, 1, !dbg !11252
  %3 = select i1 %2, i32 768, i32 0, !dbg !11251
  ret i32 %3, !dbg !11254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11255 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11257, metadata !DIExpression()), !dbg !11258
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11259
  %3 = load volatile i32, i32* %2, align 4, !dbg !11259
  %4 = and i32 %3, -8193, !dbg !11259
  store volatile i32 %4, i32* %2, align 4, !dbg !11259
  ret void, !dbg !11260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11261 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11265, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.value(metadata i32 %1, metadata !11266, metadata !DIExpression()), !dbg !11268
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11269
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11269
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11269
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11267, metadata !DIExpression()), !dbg !11268
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11270
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11270
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11271
  ret void, !dbg !11272
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11273 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11275, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata i32 %1, metadata !11276, metadata !DIExpression()), !dbg !11278
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11279
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11279
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11279
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11277, metadata !DIExpression()), !dbg !11278
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11280
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11280
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11281
  ret void, !dbg !11282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11283 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11285, metadata !DIExpression()), !dbg !11288
  call void @llvm.dbg.value(metadata i32 %1, metadata !11286, metadata !DIExpression()), !dbg !11288
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11289
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11289
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11289
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11287, metadata !DIExpression()), !dbg !11288
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11290
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11290
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11291
  ret void, !dbg !11292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11293 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11295, metadata !DIExpression()), !dbg !11298
  call void @llvm.dbg.value(metadata i32 %1, metadata !11296, metadata !DIExpression()), !dbg !11298
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11299
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11299
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11299
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11297, metadata !DIExpression()), !dbg !11298
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11300
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11300
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11301
  ret void, !dbg !11302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11303 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11305, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i32 %1, metadata !11306, metadata !DIExpression()), !dbg !11310
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11311
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11311
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11311
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11307, metadata !DIExpression()), !dbg !11310
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11312
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11312
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11312
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11308, metadata !DIExpression()), !dbg !11310
  %10 = bitcast i32* %3 to i8*, !dbg !11313
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11313
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11314
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11314
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11318
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11318
  %15 = load i8*, i8** %14, align 4, !dbg !11318
  call void @llvm.dbg.value(metadata i32* %3, metadata !11309, metadata !DIExpression(DW_OP_deref)), !dbg !11310
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11319
  %17 = icmp slt i32 %16, 0, !dbg !11320
  br i1 %17, label %23, label %18, !dbg !11321

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11322
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11322
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !11323
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11324
  %22 = load i32, i32* %3, align 4, !dbg !11325
  call void @llvm.dbg.value(metadata i32 %22, metadata !11309, metadata !DIExpression()), !dbg !11310
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !11326
  br label %23, !dbg !11327

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11327
  ret void, !dbg !11327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11328 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11330, metadata !DIExpression()), !dbg !11331
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11332
  %3 = load volatile i32, i32* %2, align 4, !dbg !11332
  %4 = or i32 %3, 8192, !dbg !11332
  store volatile i32 %4, i32* %2, align 4, !dbg !11332
  ret void, !dbg !11333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11334 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11336, metadata !DIExpression()), !dbg !11340
  call void @llvm.dbg.value(metadata i8* %1, metadata !11337, metadata !DIExpression()), !dbg !11340
  call void @llvm.dbg.value(metadata i32* %2, metadata !11338, metadata !DIExpression()), !dbg !11340
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11341
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11341
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11341
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11339, metadata !DIExpression()), !dbg !11340
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11342
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11342
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11344
  br i1 %9, label %12, label %10, !dbg !11345

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11346
  br label %12, !dbg !11347

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11340
  ret i32 %13, !dbg !11348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11349 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11353, metadata !DIExpression()), !dbg !11355
  call void @llvm.dbg.value(metadata i32 0, metadata !11354, metadata !DIExpression()), !dbg !11355
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11356
  %3 = load volatile i32, i32* %2, align 4, !dbg !11356
  %4 = and i32 %3, -32769, !dbg !11356
  store volatile i32 %4, i32* %2, align 4, !dbg !11356
  ret void, !dbg !11357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11358 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11362, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i32 %1, metadata !11363, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i32 0, metadata !11364, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i32 %2, metadata !11365, metadata !DIExpression()), !dbg !11366
  %4 = zext i32 %1 to i64, !dbg !11367
  %5 = mul nuw nsw i64 %4, 25, !dbg !11367
  %6 = zext i32 %2 to i64, !dbg !11367
  %7 = shl nuw nsw i64 %6, 2, !dbg !11367
  %8 = udiv i64 %5, %7, !dbg !11367
  %9 = trunc i64 %8 to i32, !dbg !11367
  %10 = udiv i32 %9, 100, !dbg !11367
  %11 = shl nuw nsw i32 %10, 4, !dbg !11367
  %12 = mul i32 %10, -100, !dbg !11367
  %13 = add i32 %12, %9, !dbg !11367
  %14 = shl i32 %13, 4, !dbg !11367
  %15 = add i32 %14, 50, !dbg !11367
  %16 = udiv i32 %15, 100, !dbg !11367
  %17 = and i32 %16, 240, !dbg !11367
  %18 = add nuw nsw i32 %17, %11, !dbg !11367
  %19 = and i32 %16, 15, !dbg !11367
  %20 = and i32 %18, 65520, !dbg !11370
  %21 = or i32 %20, %19, !dbg !11370
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11371
  store volatile i32 %21, i32* %22, align 4, !dbg !11372
  ret void, !dbg !11373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11374 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11376, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 %1, metadata !11377, metadata !DIExpression()), !dbg !11378
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11379
  %4 = load volatile i32, i32* %3, align 4, !dbg !11379
  %5 = and i32 %4, -769, !dbg !11379
  %6 = or i32 %5, %1, !dbg !11379
  store volatile i32 %6, i32* %3, align 4, !dbg !11379
  ret void, !dbg !11380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11381 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11383, metadata !DIExpression()), !dbg !11385
  call void @llvm.dbg.value(metadata i32 %1, metadata !11384, metadata !DIExpression()), !dbg !11385
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11386
  %4 = load volatile i32, i32* %3, align 4, !dbg !11386
  %5 = and i32 %4, -4097, !dbg !11386
  %6 = or i32 %5, %1, !dbg !11386
  store volatile i32 %6, i32* %3, align 4, !dbg !11386
  ret void, !dbg !11387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11388 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11390, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.value(metadata i32 %1, metadata !11391, metadata !DIExpression()), !dbg !11392
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11393
  %4 = load volatile i32, i32* %3, align 4, !dbg !11393
  %5 = and i32 %4, -12289, !dbg !11393
  %6 = or i32 %5, %1, !dbg !11393
  store volatile i32 %6, i32* %3, align 4, !dbg !11393
  ret void, !dbg !11394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11395 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11397, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.value(metadata i32 %1, metadata !11398, metadata !DIExpression()), !dbg !11399
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11400
  %4 = load volatile i32, i32* %3, align 4, !dbg !11400
  %5 = and i32 %4, -1537, !dbg !11400
  %6 = or i32 %5, %1, !dbg !11400
  store volatile i32 %6, i32* %3, align 4, !dbg !11400
  ret void, !dbg !11401
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11402 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11404, metadata !DIExpression()), !dbg !11405
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11406
  %3 = load volatile i32, i32* %2, align 4, !dbg !11406
  %4 = and i32 %3, 1, !dbg !11406
  ret i32 %4, !dbg !11407
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11408 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11410, metadata !DIExpression()), !dbg !11411
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11412
  %3 = load volatile i32, i32* %2, align 4, !dbg !11412
  %4 = lshr i32 %3, 1, !dbg !11413
  %5 = and i32 %4, 1, !dbg !11413
  ret i32 %5, !dbg !11414
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11415 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11417, metadata !DIExpression()), !dbg !11418
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11419
  %3 = load volatile i32, i32* %2, align 4, !dbg !11419
  %4 = lshr i32 %3, 8, !dbg !11420
  %5 = and i32 %4, 1, !dbg !11420
  ret i32 %5, !dbg !11421
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11422 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11424, metadata !DIExpression()), !dbg !11425
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11426
  store volatile i32 -257, i32* %2, align 4, !dbg !11426
  ret void, !dbg !11427
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11428 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11430, metadata !DIExpression()), !dbg !11432
  %3 = bitcast i32* %2 to i8*, !dbg !11433
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11433
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11431, metadata !DIExpression()), !dbg !11434
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11435
  %5 = load volatile i32, i32* %4, align 4, !dbg !11435
  store volatile i32 %5, i32* %2, align 4, !dbg !11436
  %6 = load volatile i32, i32* %2, align 4, !dbg !11437
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11438
  %8 = load volatile i32, i32* %7, align 4, !dbg !11438
  store volatile i32 %8, i32* %2, align 4, !dbg !11439
  %9 = load volatile i32, i32* %2, align 4, !dbg !11440
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11441
  ret void, !dbg !11441
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11442 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11444, metadata !DIExpression()), !dbg !11446
  %3 = bitcast i32* %2 to i8*, !dbg !11447
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11447
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11445, metadata !DIExpression()), !dbg !11448
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11449
  %5 = load volatile i32, i32* %4, align 4, !dbg !11449
  store volatile i32 %5, i32* %2, align 4, !dbg !11450
  %6 = load volatile i32, i32* %2, align 4, !dbg !11451
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11452
  %8 = load volatile i32, i32* %7, align 4, !dbg !11452
  store volatile i32 %8, i32* %2, align 4, !dbg !11453
  %9 = load volatile i32, i32* %2, align 4, !dbg !11454
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11455
  ret void, !dbg !11455
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11456 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11458, metadata !DIExpression()), !dbg !11460
  %3 = bitcast i32* %2 to i8*, !dbg !11461
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11461
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11459, metadata !DIExpression()), !dbg !11462
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11463
  %5 = load volatile i32, i32* %4, align 4, !dbg !11463
  store volatile i32 %5, i32* %2, align 4, !dbg !11464
  %6 = load volatile i32, i32* %2, align 4, !dbg !11465
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11466
  %8 = load volatile i32, i32* %7, align 4, !dbg !11466
  store volatile i32 %8, i32* %2, align 4, !dbg !11467
  %9 = load volatile i32, i32* %2, align 4, !dbg !11468
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11469
  ret void, !dbg !11469
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1635, metadata !DIExpression()), !dbg !11470
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #25, !dbg !11471
  tail call void @arch_irq_enable(i32 noundef 37) #25, !dbg !11473
  ret void, !dbg !11473
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !11474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11476, metadata !DIExpression()), !dbg !11478
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11479
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11479
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11479
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11477, metadata !DIExpression()), !dbg !11478
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !11480
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !11480
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !11482
  br i1 %7, label %11, label %8, !dbg !11483

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !11484
  %10 = load i8*, i8** %9, align 4, !dbg !11484
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !11486
  br label %11, !dbg !11487

11:                                               ; preds = %8, %1
  ret void, !dbg !11488
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !11489 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11491, metadata !DIExpression()), !dbg !11497
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11498
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11498
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11498
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11492, metadata !DIExpression()), !dbg !11497
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11499
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11499
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11499
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11493, metadata !DIExpression()), !dbg !11497
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11500
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11501
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11501
  %10 = tail call fastcc zeroext i1 @device_is_ready.75(%struct.device* noundef %9) #26, !dbg !11503
  br i1 %10, label %11, label %51, !dbg !11504

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !11505
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11506
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11506
  %15 = load i8*, i8** %14, align 4, !dbg !11506
  %16 = tail call fastcc i32 @clock_control_on.76(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !11507
  call void @llvm.dbg.value(metadata i32 %16, metadata !11496, metadata !DIExpression()), !dbg !11497
  %17 = icmp eq i32 %16, 0, !dbg !11508
  br i1 %17, label %18, label %51, !dbg !11510

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11511
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !11511
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !11512
  call void @llvm.dbg.value(metadata i32 %21, metadata !11496, metadata !DIExpression()), !dbg !11497
  %22 = icmp slt i32 %21, 0, !dbg !11513
  br i1 %22, label %51, label %23, !dbg !11515

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11516
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11516
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !11517
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11518
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !11519
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11520
  %28 = load i32, i32* %27, align 4, !dbg !11520
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !11522

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !11494, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.value(metadata i32 4096, metadata !11495, metadata !DIExpression()), !dbg !11497
  br label %31, !dbg !11523

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !11494, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.value(metadata i32 0, metadata !11495, metadata !DIExpression()), !dbg !11497
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !11526
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !11526
  call void @llvm.dbg.value(metadata i32 %33, metadata !11495, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.value(metadata i32 %32, metadata !11494, metadata !DIExpression()), !dbg !11497
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11527
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !11528
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11529
  %36 = load i8, i8* %35, align 4, !dbg !11529, !range !7135
  %37 = icmp eq i8 %36, 0, !dbg !11529
  br i1 %37, label %39, label %38, !dbg !11531

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11532
  br label %39, !dbg !11534

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11535
  %41 = load i32, i32* %40, align 4, !dbg !11535
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !11536
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11537
  %43 = load i8, i8* %42, align 4, !dbg !11537, !range !7135
  %44 = icmp eq i8 %43, 0, !dbg !11537
  br i1 %44, label %47, label %45, !dbg !11539

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11540
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !11542
  br label %47, !dbg !11543

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11544
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !11545
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !11546
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !11546
  tail call void %50(%struct.device* noundef nonnull %0) #25, !dbg !11547
  br label %51, !dbg !11548

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !11497
  ret i32 %52, !dbg !11549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11552, metadata !DIExpression()), !dbg !11556
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11557
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11557
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11557
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11553, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11554, metadata !DIExpression()), !dbg !11556
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11558
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11559
  ret void, !dbg !11560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.75(%struct.device* noundef %0) unnamed_addr #1 !dbg !11561 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11565, metadata !DIExpression()), !dbg !11566
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11567, !srcloc !11569
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.77(%struct.device* noundef %0) #26, !dbg !11570
  ret i1 %2, !dbg !11571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.76(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11572 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11574, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata i8* %1, metadata !11575, metadata !DIExpression()), !dbg !11577
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11578
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11578
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11578
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11576, metadata !DIExpression()), !dbg !11577
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11579
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11579
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11580
  ret i32 %8, !dbg !11581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11582 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11586, metadata !DIExpression()), !dbg !11590
  call void @llvm.dbg.value(metadata i8 0, metadata !11587, metadata !DIExpression()), !dbg !11590
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11591
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11591
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11589, metadata !DIExpression(DW_OP_deref)), !dbg !11590
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11592
  call void @llvm.dbg.value(metadata i32 %4, metadata !11588, metadata !DIExpression()), !dbg !11590
  %5 = icmp slt i32 %4, 0, !dbg !11593
  br i1 %5, label %9, label %6, !dbg !11595

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11596
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11589, metadata !DIExpression()), !dbg !11590
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11597
  br label %9, !dbg !11598

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11590
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11599
  ret i32 %10, !dbg !11599
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11600 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11602, metadata !DIExpression()), !dbg !11606
  call void @llvm.dbg.value(metadata i32 12, metadata !11603, metadata !DIExpression()), !dbg !11606
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11607

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10909, metadata !DIExpression()) #24, !dbg !11608
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11611, !srcloc !10919
  call void @llvm.dbg.value(metadata i32 %4, metadata !10914, metadata !DIExpression()) #24, !dbg !11608
  %5 = or i32 %4, 12, !dbg !11612
  call void @llvm.dbg.value(metadata i32 %5, metadata !11604, metadata !DIExpression()), !dbg !11613
  call void @llvm.dbg.value(metadata i32 %5, metadata !10922, metadata !DIExpression()) #24, !dbg !11614
  call void @llvm.dbg.value(metadata i32* %2, metadata !10927, metadata !DIExpression()) #24, !dbg !11614
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11616, !srcloc !10932
  call void @llvm.dbg.value(metadata i32 %6, metadata !10928, metadata !DIExpression()) #24, !dbg !11614
  %7 = icmp eq i32 %6, 0, !dbg !11607
  br i1 %7, label %8, label %3, !dbg !11612, !llvm.loop !11617

8:                                                ; preds = %3
  ret void, !dbg !11618
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11619 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11621, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i32 %1, metadata !11622, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i32 %2, metadata !11623, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i32 0, metadata !11624, metadata !DIExpression()), !dbg !11625
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11626
  %5 = load volatile i32, i32* %4, align 4, !dbg !11626
  %6 = and i32 %5, -5633, !dbg !11626
  %7 = or i32 %2, %1, !dbg !11626
  %8 = or i32 %7, %6, !dbg !11626
  store volatile i32 %8, i32* %4, align 4, !dbg !11626
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11627
  %10 = load volatile i32, i32* %9, align 4, !dbg !11627
  %11 = and i32 %10, -12289, !dbg !11627
  store volatile i32 %11, i32* %9, align 4, !dbg !11627
  ret void, !dbg !11628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11629 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11631, metadata !DIExpression()), !dbg !11632
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11633
  %3 = load volatile i32, i32* %2, align 4, !dbg !11633
  %4 = or i32 %3, 8, !dbg !11633
  store volatile i32 %4, i32* %2, align 4, !dbg !11633
  ret void, !dbg !11634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11635 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11639, metadata !DIExpression()), !dbg !11642
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11640, metadata !DIExpression()), !dbg !11642
  call void @llvm.dbg.value(metadata i32 0, metadata !11641, metadata !DIExpression()), !dbg !11642
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11643
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11643
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11644
  %5 = load i8, i8* %4, align 4, !dbg !11644
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11645
  ret i32 %6, !dbg !11646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.77(%struct.device* noundef %0) unnamed_addr #1 !dbg !11647 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11649, metadata !DIExpression()), !dbg !11650
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11651
  ret i1 %2, !dbg !11652
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11653 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11655, metadata !DIExpression()), !dbg !11656
  tail call fastcc void @__NVIC_SetPriority.79() #26, !dbg !11657
  store i32 8399, i32* @last_load, align 4, !dbg !11658
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11659
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11660
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11661
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11662
  %3 = or i32 %2, 7, !dbg !11662
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11662
  ret i32 0, !dbg !11663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.79() unnamed_addr #15 !dbg !11664 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11666, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.value(metadata i32 1, metadata !11667, metadata !DIExpression()), !dbg !11668
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11669
  ret void, !dbg !11672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11673 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11675, metadata !DIExpression()), !dbg !11677
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11678
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11679
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11680
  %5 = add i32 %4, %3, !dbg !11680
  store i32 %5, i32* @cycle_count, align 4, !dbg !11680
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11681
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11682
  %7 = sub i32 %5, %6, !dbg !11685
  %8 = udiv i32 %7, 8400, !dbg !11686
  call void @llvm.dbg.value(metadata i32 %8, metadata !11676, metadata !DIExpression()), !dbg !11677
  %9 = mul nuw i32 %8, 8400, !dbg !11687
  %10 = add i32 %9, %6, !dbg !11688
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11688
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11689
  tail call void @z_arm_int_exit() #25, !dbg !11690
  ret void, !dbg !11691
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11692 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11697
  call void @llvm.dbg.value(metadata i32 %1, metadata !11694, metadata !DIExpression()), !dbg !11698
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %2, metadata !11695, metadata !DIExpression()), !dbg !11698
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %3, metadata !11696, metadata !DIExpression()), !dbg !11698
  %4 = and i32 %2, 65536, !dbg !11701
  %5 = icmp ne i32 %4, 0, !dbg !11701
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11703
  %8 = load i32, i32* @last_load, align 4, !dbg !11698
  br i1 %7, label %9, label %13, !dbg !11703

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11704
  %11 = add i32 %10, %8, !dbg !11704
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11704
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11706
  br label %13, !dbg !11707

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11708
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11709
  %16 = add i32 %14, %15, !dbg !11710
  ret i32 %16, !dbg !11711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11716, metadata !DIExpression()), !dbg !11729
  call void @llvm.dbg.value(metadata i1 %1, metadata !11717, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11729
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11730
  br i1 %4, label %5, label %8, !dbg !11730

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11732
  %7 = and i32 %6, -2, !dbg !11732
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11732
  store i32 -16777216, i32* @last_load, align 4, !dbg !11734
  br label %54, !dbg !11735

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11736
  call void @llvm.dbg.value(metadata i32 %9, metadata !11721, metadata !DIExpression()), !dbg !11729
  br i1 %3, label %18, label %10, !dbg !11737

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11737
  call void @llvm.dbg.value(metadata i32 undef, metadata !11716, metadata !DIExpression()), !dbg !11729
  %12 = icmp slt i32 %11, 1, !dbg !11738
  br i1 %12, label %18, label %13, !dbg !11738

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11738
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11738
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11738
  %17 = add nuw nsw i32 %16, 8399, !dbg !11738
  br label %18, !dbg !11738

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11716, metadata !DIExpression()), !dbg !11729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11739, metadata !DIExpression()) #24, !dbg !11746
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11748, !srcloc !11754
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11748
  call void @llvm.dbg.value(metadata i32 %21, metadata !11751, metadata !DIExpression()) #24, !dbg !11755
  call void @llvm.dbg.value(metadata i32 undef, metadata !11752, metadata !DIExpression()) #24, !dbg !11755
  call void @llvm.dbg.value(metadata i32 %21, metadata !11745, metadata !DIExpression()) #24, !dbg !11746
  call void @llvm.dbg.value(metadata i32 %21, metadata !11722, metadata !DIExpression()), !dbg !11729
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11756
  call void @llvm.dbg.value(metadata i32 %22, metadata !11727, metadata !DIExpression()), !dbg !11729
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11757
  call void @llvm.dbg.value(metadata i32 %23, metadata !11719, metadata !DIExpression()), !dbg !11729
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11758
  %25 = add i32 %24, %22, !dbg !11758
  store i32 %25, i32* @cycle_count, align 4, !dbg !11758
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11759
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11760
  %27 = sub i32 %25, %26, !dbg !11761
  call void @llvm.dbg.value(metadata i32 %27, metadata !11728, metadata !DIExpression()), !dbg !11729
  %28 = icmp slt i32 %27, 0, !dbg !11762
  br i1 %28, label %38, label %29, !dbg !11764

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11718, metadata !DIExpression()), !dbg !11729
  call void @llvm.dbg.value(metadata i32 undef, metadata !11718, metadata !DIExpression()), !dbg !11729
  %30 = add nuw i32 %19, %27, !dbg !11765
  %31 = urem i32 %30, 8400, !dbg !11767
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11729
  %32 = sub nuw nsw i32 %19, %31, !dbg !11768
  call void @llvm.dbg.value(metadata i32 %32, metadata !11718, metadata !DIExpression()), !dbg !11729
  %33 = icmp ugt i32 %32, 1024, !dbg !11769
  br i1 %33, label %34, label %36, !dbg !11769

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11718, metadata !DIExpression()), !dbg !11729
  %35 = icmp ugt i32 %32, 16766400, !dbg !11770
  br i1 %35, label %38, label %36, !dbg !11772

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11773
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11774
  call void @llvm.dbg.value(metadata i32 %40, metadata !11720, metadata !DIExpression()), !dbg !11729
  %41 = add nsw i32 %39, -1, !dbg !11775
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11776
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11777
  %42 = icmp ult i32 %23, %40, !dbg !11778
  br i1 %42, label %43, label %48, !dbg !11780

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11781
  %45 = add i32 %23, %9, !dbg !11783
  %46 = sub i32 %45, %40, !dbg !11784
  %47 = add i32 %46, %44, !dbg !11781
  br label %52, !dbg !11785

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11786
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11788
  %51 = add i32 %49, %50, !dbg !11788
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11789
  store i32 %53, i32* @cycle_count, align 4, !dbg !11789
  call void @llvm.dbg.value(metadata i32 %21, metadata !11790, metadata !DIExpression()) #24, !dbg !11796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11795, metadata !DIExpression()) #24, !dbg !11796
  call void @llvm.dbg.value(metadata i32 %21, metadata !11798, metadata !DIExpression()) #24, !dbg !11801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !11803, !srcloc !11804
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11805
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11806 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11739, metadata !DIExpression()) #24, !dbg !11810
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11812, !srcloc !11754
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11812
  call void @llvm.dbg.value(metadata i32 %2, metadata !11751, metadata !DIExpression()) #24, !dbg !11814
  call void @llvm.dbg.value(metadata i32 undef, metadata !11752, metadata !DIExpression()) #24, !dbg !11814
  call void @llvm.dbg.value(metadata i32 %2, metadata !11745, metadata !DIExpression()) #24, !dbg !11810
  call void @llvm.dbg.value(metadata i32 %2, metadata !11808, metadata !DIExpression()), !dbg !11815
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11816
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11817
  %5 = add i32 %4, %3, !dbg !11818
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11819
  %7 = sub i32 %5, %6, !dbg !11820
  call void @llvm.dbg.value(metadata i32 %7, metadata !11809, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata i32 %2, metadata !11790, metadata !DIExpression()) #24, !dbg !11821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11795, metadata !DIExpression()) #24, !dbg !11821
  call void @llvm.dbg.value(metadata i32 %2, metadata !11798, metadata !DIExpression()) #24, !dbg !11823
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11825, !srcloc !11804
  %8 = udiv i32 %7, 8400, !dbg !11826
  ret i32 %8, !dbg !11827
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11828 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11739, metadata !DIExpression()) #24, !dbg !11832
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11834, !srcloc !11754
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11834
  call void @llvm.dbg.value(metadata i32 %2, metadata !11751, metadata !DIExpression()) #24, !dbg !11836
  call void @llvm.dbg.value(metadata i32 undef, metadata !11752, metadata !DIExpression()) #24, !dbg !11836
  call void @llvm.dbg.value(metadata i32 %2, metadata !11745, metadata !DIExpression()) #24, !dbg !11832
  call void @llvm.dbg.value(metadata i32 %2, metadata !11830, metadata !DIExpression()), !dbg !11837
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11838
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11839
  %5 = add i32 %4, %3, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %5, metadata !11831, metadata !DIExpression()), !dbg !11837
  call void @llvm.dbg.value(metadata i32 %2, metadata !11790, metadata !DIExpression()) #24, !dbg !11841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11795, metadata !DIExpression()) #24, !dbg !11841
  call void @llvm.dbg.value(metadata i32 %2, metadata !11798, metadata !DIExpression()) #24, !dbg !11843
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11845, !srcloc !11804
  ret i32 %5, !dbg !11846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11847 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11848
  %2 = icmp eq i32 %1, -16777216, !dbg !11850
  br i1 %2, label %3, label %6, !dbg !11851

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11852
  %5 = or i32 %4, 1, !dbg !11852
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11852
  br label %6, !dbg !11854

6:                                                ; preds = %3, %0
  ret void, !dbg !11855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11856 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11857
  %2 = and i32 %1, -2, !dbg !11857
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11857
  ret void, !dbg !11858
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11859 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11885, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.value(metadata i8 %1, metadata !11886, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11887, metadata !DIExpression()), !dbg !11888
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11889
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11889
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11888
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11890
  %8 = load i8, i8* %6, align 4, !dbg !11891
  %9 = zext i8 %8 to i32, !dbg !11892
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11892
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11893
  br i1 %11, label %18, label %24, !dbg !11894

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11888
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11890
  %14 = load i8, i8* %6, align 4, !dbg !11891
  %15 = zext i8 %14 to i32, !dbg !11892
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11892
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11893
  br i1 %17, label %18, label %24, !dbg !11894, !llvm.loop !11895

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11897
  %21 = load i8, i8* %20, align 1, !dbg !11897
  %22 = icmp eq i8 %21, %1, !dbg !11900
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11901
  br i1 %22, label %24, label %12, !dbg !11902

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11888
  ret i32 %25, !dbg !11903
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11904 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11915, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata i8 %1, metadata !11916, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata i32 %2, metadata !11917, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata i32 0, metadata !11920, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata i32 0, metadata !11921, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata i8 0, metadata !11922, metadata !DIExpression()), !dbg !11932
  %4 = icmp eq i8 %1, 0, !dbg !11933
  br i1 %4, label %35, label %5, !dbg !11934

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11933
  br label %9, !dbg !11934

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11922, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i32 %29, metadata !11920, metadata !DIExpression()), !dbg !11931
  %8 = icmp eq i32 %34, %6, !dbg !11933
  br i1 %8, label %35, label %9, !dbg !11934, !llvm.loop !11935

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11922, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i32 %11, metadata !11920, metadata !DIExpression()), !dbg !11931
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11937
  %13 = load i32, i32* %12, align 4, !dbg !11937
  call void @llvm.dbg.value(metadata i32 %13, metadata !11919, metadata !DIExpression()), !dbg !11931
  %14 = and i32 %13, 31, !dbg !11938
  %15 = icmp ult i32 %14, 16, !dbg !11939
  br i1 %15, label %16, label %20, !dbg !11940

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11941
  %18 = load i32, i32* %17, align 4, !dbg !11941
  %19 = or i32 %18, 32, !dbg !11943
  call void @llvm.dbg.value(metadata i32 %19, metadata !11920, metadata !DIExpression()), !dbg !11931
  br label %28, !dbg !11944

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11945

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11946
  %23 = load i32, i32* %22, align 4, !dbg !11946
  call void @llvm.dbg.value(metadata i32 %23, metadata !11924, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11947
  %24 = lshr i32 %23, 7, !dbg !11948
  %25 = and i32 %24, 16, !dbg !11948
  %26 = or i32 %25, %23, !dbg !11948
  call void @llvm.dbg.value(metadata i32 %26, metadata !11920, metadata !DIExpression()), !dbg !11931
  br label %28, !dbg !11949

27:                                               ; preds = %20
  br label %28, !dbg !11950

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11931
  call void @llvm.dbg.value(metadata i32 %29, metadata !11920, metadata !DIExpression()), !dbg !11931
  %30 = lshr i32 %13, 5, !dbg !11950
  %31 = and i32 %30, 255, !dbg !11950
  call void @llvm.dbg.value(metadata i32 %31, metadata !11918, metadata !DIExpression()), !dbg !11931
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !11951
  call void @llvm.dbg.value(metadata i32 %32, metadata !11921, metadata !DIExpression()), !dbg !11931
  %33 = icmp slt i32 %32, 0, !dbg !11952
  %34 = add nuw nsw i32 %10, 1, !dbg !11954
  call void @llvm.dbg.value(metadata i32 %34, metadata !11922, metadata !DIExpression()), !dbg !11932
  br i1 %33, label %35, label %7, !dbg !11955

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11961, metadata !DIExpression()), !dbg !11965
  call void @llvm.dbg.value(metadata i32 %1, metadata !11962, metadata !DIExpression()), !dbg !11965
  call void @llvm.dbg.value(metadata i32 %2, metadata !11963, metadata !DIExpression()), !dbg !11965
  %4 = icmp ugt i32 %0, 175, !dbg !11966
  br i1 %4, label %16, label %5, !dbg !11968

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11969
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11970
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11970
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11964, metadata !DIExpression()), !dbg !11965
  %9 = add nsw i32 %6, -8, !dbg !11971
  %10 = icmp ult i32 %9, 3, !dbg !11971
  br i1 %10, label %16, label %11, !dbg !11973

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.84(%struct.device* noundef %8) #26, !dbg !11974
  br i1 %12, label %13, label %16, !dbg !11975

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11976
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11977
  br label %16, !dbg !11978

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11965
  ret i32 %17, !dbg !11979
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.84(%struct.device* noundef %0) unnamed_addr #1 !dbg !11980 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11984, metadata !DIExpression()), !dbg !11985
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11986, !srcloc !11988
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.85(%struct.device* noundef %0) #26, !dbg !11989
  ret i1 %2, !dbg !11990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.85(%struct.device* noundef %0) unnamed_addr #1 !dbg !11991 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11993, metadata !DIExpression()), !dbg !11994
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11995
  ret i1 %2, !dbg !11996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !11997 {
  ret void, !dbg !11998
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !11999 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12001, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 0, metadata !12002, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 2, metadata !12003, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 0, metadata !12004, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 2, metadata !12005, metadata !DIExpression()), !dbg !12006
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12007
  %2 = and i32 %1, 12, !dbg !12008
  call void @llvm.dbg.value(metadata i32 %2, metadata !12001, metadata !DIExpression()), !dbg !12006
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12009

3:                                                ; preds = %0
  br label %21, !dbg !12010

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12012
  call void @llvm.dbg.value(metadata i32 %5, metadata !12004, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12006
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12013
  %7 = and i32 %6, 63, !dbg !12014
  call void @llvm.dbg.value(metadata i32 %7, metadata !12005, metadata !DIExpression()), !dbg !12006
  %8 = and i32 %5, 4194304, !dbg !12015
  %9 = icmp eq i32 %8, 0, !dbg !12015
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !12017
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12017
  %13 = lshr i32 %12, 6, !dbg !12017
  %14 = and i32 %13, 511, !dbg !12017
  %15 = mul i32 %14, %11, !dbg !12017
  call void @llvm.dbg.value(metadata i32 %15, metadata !12002, metadata !DIExpression()), !dbg !12006
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12018
  %17 = lshr i32 %16, 15, !dbg !12019
  %18 = and i32 %17, 6, !dbg !12019
  %19 = add nuw nsw i32 %18, 2, !dbg !12019
  call void @llvm.dbg.value(metadata i32 %19, metadata !12003, metadata !DIExpression()), !dbg !12006
  %20 = udiv i32 %15, %19, !dbg !12020
  br label %21, !dbg !12021

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12022
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12023
  %24 = lshr i32 %23, 4, !dbg !12024
  %25 = and i32 %24, 15, !dbg !12024
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12025
  %27 = load i8, i8* %26, align 1, !dbg !12025
  %28 = zext i8 %27 to i32, !dbg !12025
  call void @llvm.dbg.value(metadata i32 %28, metadata !12001, metadata !DIExpression()), !dbg !12006
  %29 = lshr i32 %22, %28, !dbg !12026
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12026
  ret void, !dbg !12027
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12028 {
  ret i32 0, !dbg !12033
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12034 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12060, metadata !DIExpression()), !dbg !12071
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12072
  br i1 %3, label %311, label %4, !dbg !12074

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12075
  %6 = load i32, i32* %5, align 4, !dbg !12075
  %7 = and i32 %6, 1, !dbg !12077
  %8 = icmp eq i32 %7, 0, !dbg !12078
  br i1 %8, label %66, label %9, !dbg !12079

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12080
  %11 = and i32 %10, 12, !dbg !12080
  %12 = icmp eq i32 %11, 4, !dbg !12083
  br i1 %12, label %21, label %13, !dbg !12084

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12085
  %15 = and i32 %14, 12, !dbg !12085
  %16 = icmp eq i32 %15, 8, !dbg !12086
  br i1 %16, label %17, label %29, !dbg !12087

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12088
  %19 = and i32 %18, 4194304, !dbg !12089
  %20 = icmp eq i32 %19, 0, !dbg !12090
  br i1 %20, label %29, label %21, !dbg !12091

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12092
  %23 = and i32 %22, 131072, !dbg !12092
  %24 = icmp eq i32 %23, 0, !dbg !12092
  br i1 %24, label %66, label %25, !dbg !12095

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12096
  %27 = load i32, i32* %26, align 4, !dbg !12096
  %28 = icmp eq i32 %27, 0, !dbg !12097
  br i1 %28, label %311, label %66, !dbg !12098

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12099
  %31 = load i32, i32* %30, align 4, !dbg !12099
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12103

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12104
  %34 = or i32 %33, 65536, !dbg !12104
  br label %45, !dbg !12104

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12106
  %37 = or i32 %36, 262144, !dbg !12106
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12106
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12106
  %39 = or i32 %38, 65536, !dbg !12106
  br label %45, !dbg !12106

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12109
  %42 = and i32 %41, -65537, !dbg !12109
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12109
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12109
  %44 = and i32 %43, -262145, !dbg !12109
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12111
  %47 = load i32, i32* %30, align 4, !dbg !12112
  %48 = icmp eq i32 %47, 0, !dbg !12114
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12115
  call void @llvm.dbg.value(metadata i32 %49, metadata !12061, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.value(metadata i32 %49, metadata !12061, metadata !DIExpression()), !dbg !12071
  br i1 %48, label %58, label %50, !dbg !12116

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12117
  %52 = and i32 %51, 131072, !dbg !12119
  %53 = icmp eq i32 %52, 0, !dbg !12119
  br i1 %53, label %54, label %66, !dbg !12120

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12121
  %56 = sub i32 %55, %49, !dbg !12124
  %57 = icmp ugt i32 %56, 100, !dbg !12125
  br i1 %57, label %311, label %50, !dbg !12126, !llvm.loop !12127

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12129
  %60 = and i32 %59, 131072, !dbg !12129
  %61 = icmp eq i32 %60, 0, !dbg !12129
  br i1 %61, label %66, label %62, !dbg !12131

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12132
  %64 = sub i32 %63, %49, !dbg !12135
  %65 = icmp ugt i32 %64, 100, !dbg !12136
  br i1 %65, label %311, label %58, !dbg !12137, !llvm.loop !12138

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12140
  %68 = and i32 %67, 2, !dbg !12142
  %69 = icmp eq i32 %68, 0, !dbg !12143
  br i1 %69, label %121, label %70, !dbg !12144

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12145
  %72 = and i32 %71, 12, !dbg !12145
  %73 = icmp eq i32 %72, 0, !dbg !12148
  br i1 %73, label %82, label %74, !dbg !12149

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12150
  %76 = and i32 %75, 12, !dbg !12150
  %77 = icmp eq i32 %76, 8, !dbg !12151
  br i1 %77, label %78, label %90, !dbg !12152

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12153
  %80 = and i32 %79, 4194304, !dbg !12154
  %81 = icmp eq i32 %80, 0, !dbg !12155
  br i1 %81, label %82, label %90, !dbg !12156

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12157
  %84 = and i32 %83, 2, !dbg !12157
  %85 = icmp eq i32 %84, 0, !dbg !12157
  br i1 %85, label %114, label %86, !dbg !12160

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12161
  %88 = load i32, i32* %87, align 4, !dbg !12161
  %89 = icmp eq i32 %88, 1, !dbg !12162
  br i1 %89, label %114, label %311, !dbg !12163

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12164
  %92 = load i32, i32* %91, align 4, !dbg !12164
  %93 = icmp eq i32 %92, 0, !dbg !12167
  br i1 %93, label %104, label %94, !dbg !12168

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12169
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12171
  call void @llvm.dbg.value(metadata i32 %95, metadata !12061, metadata !DIExpression()), !dbg !12071
  br label %96, !dbg !12172

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12173
  %98 = and i32 %97, 2, !dbg !12174
  %99 = icmp eq i32 %98, 0, !dbg !12174
  br i1 %99, label %100, label %114, !dbg !12172

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12175
  %102 = sub i32 %101, %95, !dbg !12178
  %103 = icmp ugt i32 %102, 2, !dbg !12179
  br i1 %103, label %311, label %96, !dbg !12180, !llvm.loop !12181

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12183
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12185
  call void @llvm.dbg.value(metadata i32 %105, metadata !12061, metadata !DIExpression()), !dbg !12071
  br label %106, !dbg !12186

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12187
  %108 = and i32 %107, 2, !dbg !12187
  %109 = icmp eq i32 %108, 0, !dbg !12187
  br i1 %109, label %121, label %110, !dbg !12186

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12188
  %112 = sub i32 %111, %105, !dbg !12191
  %113 = icmp ugt i32 %112, 2, !dbg !12192
  br i1 %113, label %311, label %106, !dbg !12193, !llvm.loop !12194

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12196
  %116 = and i32 %115, -249, !dbg !12196
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12196
  %118 = load i32, i32* %117, align 4, !dbg !12196
  %119 = shl i32 %118, 3, !dbg !12196
  %120 = or i32 %119, %116, !dbg !12196
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12196
  br label %121, !dbg !12197

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12197
  %123 = and i32 %122, 8, !dbg !12199
  %124 = icmp eq i32 %123, 0, !dbg !12200
  br i1 %124, label %149, label %125, !dbg !12201

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12202
  %127 = load i32, i32* %126, align 4, !dbg !12202
  %128 = icmp eq i32 %127, 0, !dbg !12205
  br i1 %128, label %139, label %129, !dbg !12206

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12207
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12209
  call void @llvm.dbg.value(metadata i32 %130, metadata !12061, metadata !DIExpression()), !dbg !12071
  br label %131, !dbg !12210

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12211
  %133 = and i32 %132, 2, !dbg !12212
  %134 = icmp eq i32 %133, 0, !dbg !12212
  br i1 %134, label %135, label %149, !dbg !12210

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12213
  %137 = sub i32 %136, %130, !dbg !12216
  %138 = icmp ugt i32 %137, 2, !dbg !12217
  br i1 %138, label %311, label %131, !dbg !12218, !llvm.loop !12219

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12221
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12223
  call void @llvm.dbg.value(metadata i32 %140, metadata !12061, metadata !DIExpression()), !dbg !12071
  br label %141, !dbg !12224

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12225
  %143 = and i32 %142, 2, !dbg !12225
  %144 = icmp eq i32 %143, 0, !dbg !12225
  br i1 %144, label %149, label %145, !dbg !12224

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12226
  %147 = sub i32 %146, %140, !dbg !12229
  %148 = icmp ugt i32 %147, 2, !dbg !12230
  br i1 %148, label %311, label %141, !dbg !12231, !llvm.loop !12232

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12234
  %151 = and i32 %150, 4, !dbg !12235
  %152 = icmp eq i32 %151, 0, !dbg !12236
  br i1 %152, label %221, label %153, !dbg !12237

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12063, metadata !DIExpression()), !dbg !12238
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12239
  %155 = and i32 %154, 268435456, !dbg !12239
  %156 = icmp eq i32 %155, 0, !dbg !12239
  br i1 %156, label %157, label %164, !dbg !12240

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12241
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12241
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12067, metadata !DIExpression()), !dbg !12241
  store volatile i32 0, i32* %2, align 4, !dbg !12241
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12241
  %160 = or i32 %159, 268435456, !dbg !12241
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12241
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12241
  %162 = and i32 %161, 268435456, !dbg !12241
  store volatile i32 %162, i32* %2, align 4, !dbg !12241
  %163 = load volatile i32, i32* %2, align 4, !dbg !12241
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12242
  call void @llvm.dbg.value(metadata i32 1, metadata !12063, metadata !DIExpression()), !dbg !12238
  br label %164, !dbg !12243

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12063, metadata !DIExpression()), !dbg !12238
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12244
  %166 = and i32 %165, 256, !dbg !12244
  %167 = icmp eq i32 %166, 0, !dbg !12244
  br i1 %167, label %168, label %180, !dbg !12246

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12247
  %170 = or i32 %169, 256, !dbg !12247
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12247
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12249
  call void @llvm.dbg.value(metadata i32 %171, metadata !12061, metadata !DIExpression()), !dbg !12071
  br label %172, !dbg !12250

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12251
  %174 = and i32 %173, 256, !dbg !12251
  %175 = icmp eq i32 %174, 0, !dbg !12251
  br i1 %175, label %176, label %180, !dbg !12250

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12252
  %178 = sub i32 %177, %171, !dbg !12255
  %179 = icmp ugt i32 %178, 2, !dbg !12256
  br i1 %179, label %311, label %172, !dbg !12257, !llvm.loop !12258

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12260
  %182 = load i32, i32* %181, align 4, !dbg !12260
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12263

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12264
  %185 = or i32 %184, 1, !dbg !12264
  br label %196, !dbg !12264

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12266
  %188 = or i32 %187, 4, !dbg !12266
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12266
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12266
  %190 = or i32 %189, 1, !dbg !12266
  br label %196, !dbg !12266

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12269
  %193 = and i32 %192, -2, !dbg !12269
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12269
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12269
  %195 = and i32 %194, -5, !dbg !12269
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12271
  %198 = load i32, i32* %181, align 4, !dbg !12272
  %199 = icmp eq i32 %198, 0, !dbg !12274
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %200, metadata !12061, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.value(metadata i32 %200, metadata !12061, metadata !DIExpression()), !dbg !12071
  br i1 %199, label %209, label %201, !dbg !12276

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12277
  %203 = and i32 %202, 2, !dbg !12279
  %204 = icmp eq i32 %203, 0, !dbg !12279
  br i1 %204, label %205, label %217, !dbg !12280

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12281
  %207 = sub i32 %206, %200, !dbg !12284
  %208 = icmp ugt i32 %207, 5000, !dbg !12285
  br i1 %208, label %311, label %201, !dbg !12286, !llvm.loop !12287

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12289
  %211 = and i32 %210, 2, !dbg !12289
  %212 = icmp eq i32 %211, 0, !dbg !12289
  br i1 %212, label %217, label %213, !dbg !12291

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12292
  %215 = sub i32 %214, %200, !dbg !12295
  %216 = icmp ugt i32 %215, 5000, !dbg !12296
  br i1 %216, label %311, label %209, !dbg !12297, !llvm.loop !12298

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12300

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12301
  %220 = and i32 %219, -268435457, !dbg !12301
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12301
  br label %221, !dbg !12304

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12305
  %223 = load i32, i32* %222, align 4, !dbg !12305
  %224 = icmp eq i32 %223, 0, !dbg !12307
  br i1 %224, label %310, label %225, !dbg !12308

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12309
  %227 = and i32 %226, 12, !dbg !12309
  %228 = icmp eq i32 %227, 8, !dbg !12312
  br i1 %228, label %277, label %229, !dbg !12313

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12314
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12317
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12317
  call void @llvm.dbg.value(metadata i32 %231, metadata !12061, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.value(metadata i32 %231, metadata !12061, metadata !DIExpression()), !dbg !12071
  br i1 %230, label %232, label %269, !dbg !12318

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12319
  %234 = and i32 %233, 33554432, !dbg !12319
  %235 = icmp eq i32 %234, 0, !dbg !12319
  br i1 %235, label %240, label %236, !dbg !12321

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12322
  %238 = sub i32 %237, %231, !dbg !12325
  %239 = icmp ugt i32 %238, 2, !dbg !12326
  br i1 %239, label %311, label %232, !dbg !12327, !llvm.loop !12328

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12330
  %242 = load i32, i32* %241, align 4, !dbg !12330
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12330
  %244 = load i32, i32* %243, align 4, !dbg !12330
  %245 = or i32 %244, %242, !dbg !12330
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12330
  %247 = load i32, i32* %246, align 4, !dbg !12330
  %248 = shl i32 %247, 6, !dbg !12330
  %249 = or i32 %245, %248, !dbg !12330
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12330
  %251 = load i32, i32* %250, align 4, !dbg !12330
  %252 = shl i32 %251, 15, !dbg !12330
  %253 = add i32 %252, -65536, !dbg !12330
  %254 = and i32 %253, -65536, !dbg !12330
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12330
  %256 = load i32, i32* %255, align 4, !dbg !12330
  %257 = shl i32 %256, 24, !dbg !12330
  %258 = or i32 %249, %257, !dbg !12330
  %259 = or i32 %258, %254, !dbg !12330
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12330
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12331
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12332
  call void @llvm.dbg.value(metadata i32 %260, metadata !12061, metadata !DIExpression()), !dbg !12071
  br label %261, !dbg !12333

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12334
  %263 = and i32 %262, 33554432, !dbg !12335
  %264 = icmp eq i32 %263, 0, !dbg !12335
  br i1 %264, label %265, label %310, !dbg !12333

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12336
  %267 = sub i32 %266, %260, !dbg !12339
  %268 = icmp ugt i32 %267, 2, !dbg !12340
  br i1 %268, label %311, label %261, !dbg !12341, !llvm.loop !12342

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12344
  %271 = and i32 %270, 33554432, !dbg !12344
  %272 = icmp eq i32 %271, 0, !dbg !12344
  br i1 %272, label %310, label %273, !dbg !12346

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12347
  %275 = sub i32 %274, %231, !dbg !12350
  %276 = icmp ugt i32 %275, 2, !dbg !12351
  br i1 %276, label %311, label %269, !dbg !12352, !llvm.loop !12353

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12355
  br i1 %278, label %311, label %279, !dbg !12358

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12359
  call void @llvm.dbg.value(metadata i32 %280, metadata !12062, metadata !DIExpression()), !dbg !12071
  %281 = and i32 %280, 4194304, !dbg !12361
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12363
  %283 = load i32, i32* %282, align 4, !dbg !12363
  %284 = icmp eq i32 %281, %283, !dbg !12364
  br i1 %284, label %285, label %311, !dbg !12365

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12366
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12367
  %288 = load i32, i32* %287, align 4, !dbg !12367
  %289 = icmp eq i32 %286, %288, !dbg !12368
  br i1 %289, label %290, label %311, !dbg !12369

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12370
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12371
  %293 = load i32, i32* %292, align 4, !dbg !12371
  %294 = shl i32 %293, 6, !dbg !12372
  %295 = icmp eq i32 %291, %294, !dbg !12373
  br i1 %295, label %296, label %311, !dbg !12374

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12375
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12376
  %299 = load i32, i32* %298, align 4, !dbg !12376
  %300 = shl i32 %299, 15, !dbg !12377
  %301 = add i32 %300, -65536, !dbg !12377
  %302 = and i32 %301, -65536, !dbg !12377
  %303 = icmp eq i32 %297, %302, !dbg !12378
  br i1 %303, label %304, label %311, !dbg !12379

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12380
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12381
  %307 = load i32, i32* %306, align 4, !dbg !12381
  %308 = shl i32 %307, 24, !dbg !12382
  %309 = icmp eq i32 %305, %308, !dbg !12383
  br i1 %309, label %310, label %311, !dbg !12384

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12385

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12071
  ret i32 %312, !dbg !12386
}

; Function Attrs: optsize
declare !dbg !12387 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12389 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12402, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.value(metadata i32 %1, metadata !12403, metadata !DIExpression()), !dbg !12405
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12406
  br i1 %3, label %115, label %4, !dbg !12408

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12409
  %6 = and i32 %5, 7, !dbg !12409
  %7 = icmp ult i32 %6, %1, !dbg !12411
  br i1 %7, label %8, label %13, !dbg !12412

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12413
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12413
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12415
  %11 = and i32 %10, 7, !dbg !12415
  %12 = icmp eq i32 %11, %1, !dbg !12417
  br i1 %12, label %13, label %115, !dbg !12418

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12419
  %15 = load i32, i32* %14, align 4, !dbg !12419
  %16 = and i32 %15, 2, !dbg !12421
  %17 = icmp eq i32 %16, 0, !dbg !12422
  br i1 %17, label %39, label %18, !dbg !12423

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12424
  %20 = icmp eq i32 %19, 0, !dbg !12427
  br i1 %20, label %25, label %21, !dbg !12428

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12429
  %23 = or i32 %22, 7168, !dbg !12429
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12429
  %24 = load i32, i32* %14, align 4, !dbg !12431
  br label %25, !dbg !12433

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12431
  %27 = and i32 %26, 8, !dbg !12434
  %28 = icmp eq i32 %27, 0, !dbg !12435
  br i1 %28, label %32, label %29, !dbg !12436

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12437
  %31 = or i32 %30, 57344, !dbg !12437
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12437
  br label %32, !dbg !12439

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12440
  %34 = and i32 %33, -241, !dbg !12440
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12440
  %36 = load i32, i32* %35, align 4, !dbg !12440
  %37 = or i32 %34, %36, !dbg !12440
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12440
  %38 = load i32, i32* %14, align 4, !dbg !12441
  br label %39, !dbg !12443

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12441
  %41 = and i32 %40, 1, !dbg !12444
  %42 = icmp eq i32 %41, 0, !dbg !12445
  br i1 %42, label %73, label %43, !dbg !12446

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12447
  %45 = load i32, i32* %44, align 4, !dbg !12447
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12450

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12451
  %48 = and i32 %47, 131072, !dbg !12454
  %49 = icmp eq i32 %48, 0, !dbg !12454
  br i1 %49, label %115, label %58, !dbg !12455

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12456
  %52 = and i32 %51, 33554432, !dbg !12460
  %53 = icmp eq i32 %52, 0, !dbg !12460
  br i1 %53, label %115, label %58, !dbg !12461

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12462
  %56 = and i32 %55, 2, !dbg !12465
  %57 = icmp eq i32 %56, 0, !dbg !12465
  br i1 %57, label %115, label %58, !dbg !12466

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12467
  %60 = and i32 %59, -4, !dbg !12467
  %61 = or i32 %60, %45, !dbg !12467
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12467
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12468
  call void @llvm.dbg.value(metadata i32 %62, metadata !12404, metadata !DIExpression()), !dbg !12405
  br label %63, !dbg !12469

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12470
  %65 = and i32 %64, 12, !dbg !12470
  %66 = load i32, i32* %44, align 4, !dbg !12471
  %67 = shl i32 %66, 2, !dbg !12472
  %68 = icmp eq i32 %65, %67, !dbg !12473
  br i1 %68, label %73, label %69, !dbg !12469

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12474
  %71 = sub i32 %70, %62, !dbg !12477
  %72 = icmp ugt i32 %71, 5000, !dbg !12478
  br i1 %72, label %115, label %63, !dbg !12479, !llvm.loop !12480

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12482
  %75 = and i32 %74, 7, !dbg !12482
  %76 = icmp ugt i32 %75, %1, !dbg !12484
  br i1 %76, label %77, label %82, !dbg !12485

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12486
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12486
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12488
  %80 = and i32 %79, 7, !dbg !12488
  %81 = icmp eq i32 %80, %1, !dbg !12490
  br i1 %81, label %82, label %115, !dbg !12491

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12492
  %84 = and i32 %83, 4, !dbg !12494
  %85 = icmp eq i32 %84, 0, !dbg !12495
  br i1 %85, label %93, label %86, !dbg !12496

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12497
  %88 = and i32 %87, -7169, !dbg !12497
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12497
  %90 = load i32, i32* %89, align 4, !dbg !12497
  %91 = or i32 %88, %90, !dbg !12497
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12497
  %92 = load i32, i32* %14, align 4, !dbg !12499
  br label %93, !dbg !12501

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12499
  %95 = and i32 %94, 8, !dbg !12502
  %96 = icmp eq i32 %95, 0, !dbg !12503
  br i1 %96, label %104, label %97, !dbg !12504

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12505
  %99 = and i32 %98, -57345, !dbg !12505
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12505
  %101 = load i32, i32* %100, align 4, !dbg !12505
  %102 = shl i32 %101, 3, !dbg !12505
  %103 = or i32 %102, %99, !dbg !12505
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12505
  br label %104, !dbg !12507

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12508
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12509
  %107 = lshr i32 %106, 4, !dbg !12510
  %108 = and i32 %107, 15, !dbg !12510
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12511
  %110 = load i8, i8* %109, align 1, !dbg !12511
  %111 = zext i8 %110 to i32, !dbg !12511
  %112 = lshr i32 %105, %111, !dbg !12512
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12513
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12514
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12515
  br label %115, !dbg !12516

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12405
  ret i32 %116, !dbg !12517
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12518 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12520, metadata !DIExpression()), !dbg !12524
  call void @llvm.dbg.value(metadata i32 0, metadata !12521, metadata !DIExpression()), !dbg !12524
  call void @llvm.dbg.value(metadata i32 0, metadata !12522, metadata !DIExpression()), !dbg !12524
  call void @llvm.dbg.value(metadata i32 0, metadata !12523, metadata !DIExpression()), !dbg !12524
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12525
  %2 = and i32 %1, 12, !dbg !12526
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12527

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12523, metadata !DIExpression()), !dbg !12524
  br label %29, !dbg !12528

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12531
  %6 = and i32 %5, 63, !dbg !12533
  call void @llvm.dbg.value(metadata i32 %6, metadata !12520, metadata !DIExpression()), !dbg !12524
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12534
  %8 = and i32 %7, 4194304, !dbg !12534
  %9 = icmp eq i32 %8, 0, !dbg !12536
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12537
  %11 = lshr i32 %10, 6, !dbg !12537
  %12 = and i32 %11, 511, !dbg !12537
  br i1 %9, label %16, label %13, !dbg !12538

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !12539
  %15 = udiv i32 %14, %6, !dbg !12541
  call void @llvm.dbg.value(metadata i32 %15, metadata !12521, metadata !DIExpression()), !dbg !12524
  br label %22, !dbg !12542

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !12543
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !12545
  %19 = zext i32 %6 to i64, !dbg !12546
  %20 = udiv i64 %18, %19, !dbg !12547
  %21 = trunc i64 %20 to i32, !dbg !12548
  call void @llvm.dbg.value(metadata i32 %21, metadata !12521, metadata !DIExpression()), !dbg !12524
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !12537
  call void @llvm.dbg.value(metadata i32 %23, metadata !12521, metadata !DIExpression()), !dbg !12524
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12549
  %25 = lshr i32 %24, 15, !dbg !12550
  %26 = and i32 %25, 6, !dbg !12550
  %27 = add nuw nsw i32 %26, 2, !dbg !12550
  call void @llvm.dbg.value(metadata i32 %27, metadata !12522, metadata !DIExpression()), !dbg !12524
  %28 = udiv i32 %23, %27, !dbg !12551
  call void @llvm.dbg.value(metadata i32 %28, metadata !12523, metadata !DIExpression()), !dbg !12524
  br label %29, !dbg !12552

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !12553
  call void @llvm.dbg.value(metadata i32 %30, metadata !12523, metadata !DIExpression()), !dbg !12524
  ret i32 %30, !dbg !12554
}

; Function Attrs: optsize
declare !dbg !12555 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12558 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12562, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i32 %1, metadata !12563, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i32 %2, metadata !12564, metadata !DIExpression()), !dbg !12582
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12583
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !12583
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12565, metadata !DIExpression()), !dbg !12584
  %8 = icmp eq i32 %0, 0, !dbg !12585
  br i1 %8, label %9, label %23, !dbg !12586

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12587
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12587
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12575, metadata !DIExpression()), !dbg !12587
  store volatile i32 0, i32* %5, align 4, !dbg !12587
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12587
  %12 = or i32 %11, 1, !dbg !12587
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12587
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12587
  %14 = and i32 %13, 1, !dbg !12587
  store volatile i32 %14, i32* %5, align 4, !dbg !12587
  %15 = load volatile i32, i32* %5, align 4, !dbg !12587
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12588
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12589
  store i32 256, i32* %16, align 4, !dbg !12590
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12591
  store i32 2, i32* %17, align 4, !dbg !12592
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12593
  store i32 3, i32* %18, align 4, !dbg !12594
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12595
  store i32 0, i32* %19, align 4, !dbg !12596
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12597
  store i32 0, i32* %20, align 4, !dbg !12598
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12599
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12600
  %22 = and i32 %21, -123731969, !dbg !12600
  br label %38, !dbg !12601

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12602
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12602
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12579, metadata !DIExpression()), !dbg !12602
  store volatile i32 0, i32* %6, align 4, !dbg !12602
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12602
  %26 = or i32 %25, 4, !dbg !12602
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12602
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12602
  %28 = and i32 %27, 4, !dbg !12602
  store volatile i32 %28, i32* %6, align 4, !dbg !12602
  %29 = load volatile i32, i32* %6, align 4, !dbg !12602
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12603
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12604
  store i32 512, i32* %30, align 4, !dbg !12605
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12606
  store i32 2, i32* %31, align 4, !dbg !12607
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12608
  store i32 3, i32* %32, align 4, !dbg !12609
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12610
  store i32 0, i32* %33, align 4, !dbg !12611
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12612
  store i32 0, i32* %34, align 4, !dbg !12613
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12614
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12615
  %36 = and i32 %35, 134217727, !dbg !12615
  %37 = shl i32 %2, 3, !dbg !12615
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12616
  %42 = or i32 %41, %40, !dbg !12616
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12616
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #24, !dbg !12617
  ret void, !dbg !12617
}

; Function Attrs: optsize
declare !dbg !12618 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12622 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12623
  ret void, !dbg !12624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12625 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12626
  ret void, !dbg !12627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !12628 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12629
  ret i32 %1, !dbg !12630
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !12631 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12632
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12633
  %3 = lshr i32 %2, 10, !dbg !12634
  %4 = and i32 %3, 7, !dbg !12634
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12635
  %6 = load i8, i8* %5, align 1, !dbg !12635
  %7 = zext i8 %6 to i32, !dbg !12635
  %8 = lshr i32 %1, %7, !dbg !12636
  ret i32 %8, !dbg !12637
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !12638 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12639
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12640
  %3 = lshr i32 %2, 13, !dbg !12641
  %4 = and i32 %3, 7, !dbg !12641
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12642
  %6 = load i8, i8* %5, align 1, !dbg !12642
  %7 = zext i8 %6 to i32, !dbg !12642
  %8 = lshr i32 %1, %7, !dbg !12643
  ret i32 %8, !dbg !12644
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12645 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12649, metadata !DIExpression()), !dbg !12650
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12651
  store i32 15, i32* %2, align 4, !dbg !12652
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12653
  %4 = and i32 %3, 262144, !dbg !12655
  %5 = icmp eq i32 %4, 0, !dbg !12656
  br i1 %5, label %8, label %6, !dbg !12657

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12658
  store i32 327680, i32* %7, align 4, !dbg !12660
  br label %15, !dbg !12661

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12662
  %10 = and i32 %9, 65536, !dbg !12664
  %11 = icmp eq i32 %10, 0, !dbg !12665
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12666
  br i1 %11, label %14, label %13, !dbg !12667

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12668
  br label %15, !dbg !12670

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12671
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12673
  %17 = and i32 %16, 1, !dbg !12675
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12676
  store i32 %17, i32* %18, align 4, !dbg !12678
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12679
  %20 = lshr i32 %19, 3, !dbg !12680
  %21 = and i32 %20, 31, !dbg !12680
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12681
  store i32 %21, i32* %22, align 4, !dbg !12682
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12683
  %24 = and i32 %23, 4, !dbg !12685
  %25 = icmp eq i32 %24, 0, !dbg !12686
  br i1 %25, label %28, label %26, !dbg !12687

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12688
  store i32 5, i32* %27, align 4, !dbg !12690
  br label %35, !dbg !12691

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12692
  %30 = and i32 %29, 1, !dbg !12694
  %31 = icmp eq i32 %30, 0, !dbg !12695
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12696
  br i1 %31, label %34, label %33, !dbg !12697

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12698
  br label %35, !dbg !12700

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12701
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12703
  %37 = and i32 %36, 1, !dbg !12705
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12706
  store i32 %37, i32* %38, align 4, !dbg !12708
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12709
  %40 = and i32 %39, 16777216, !dbg !12711
  %41 = icmp eq i32 %40, 0, !dbg !12712
  %42 = select i1 %41, i32 1, i32 2, !dbg !12713
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12714
  store i32 %42, i32* %43, align 4, !dbg !12716
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12717
  %45 = and i32 %44, 4194304, !dbg !12718
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12719
  store i32 %45, i32* %46, align 4, !dbg !12720
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12721
  %48 = and i32 %47, 63, !dbg !12722
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12723
  store i32 %48, i32* %49, align 4, !dbg !12724
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12725
  %51 = lshr i32 %50, 6, !dbg !12726
  %52 = and i32 %51, 511, !dbg !12726
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12727
  store i32 %52, i32* %53, align 4, !dbg !12728
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12729
  %55 = shl i32 %54, 1, !dbg !12730
  %56 = and i32 %55, 393216, !dbg !12730
  %57 = add nuw nsw i32 %56, 131072, !dbg !12730
  %58 = lshr exact i32 %57, 16, !dbg !12731
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12732
  store i32 %58, i32* %59, align 4, !dbg !12733
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12734
  %61 = lshr i32 %60, 24, !dbg !12735
  %62 = and i32 %61, 15, !dbg !12735
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12736
  store i32 %62, i32* %63, align 4, !dbg !12737
  ret void, !dbg !12738
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !12739 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12743, metadata !DIExpression()), !dbg !12745
  call void @llvm.dbg.value(metadata i32* %1, metadata !12744, metadata !DIExpression()), !dbg !12745
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12746
  store i32 15, i32* %3, align 4, !dbg !12747
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12748
  %5 = and i32 %4, 3, !dbg !12749
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12750
  store i32 %5, i32* %6, align 4, !dbg !12751
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12752
  %8 = and i32 %7, 240, !dbg !12753
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12754
  store i32 %8, i32* %9, align 4, !dbg !12755
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12756
  %11 = and i32 %10, 7168, !dbg !12757
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12758
  store i32 %11, i32* %12, align 4, !dbg !12759
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12760
  %14 = lshr i32 %13, 3, !dbg !12761
  %15 = and i32 %14, 7168, !dbg !12761
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12762
  store i32 %15, i32* %16, align 4, !dbg !12763
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12764
  %18 = and i32 %17, 7, !dbg !12765
  store i32 %18, i32* %1, align 4, !dbg !12766
  ret void, !dbg !12767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12768 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12769
  %2 = and i32 %1, 128, !dbg !12769
  %3 = icmp eq i32 %2, 0, !dbg !12769
  br i1 %3, label %5, label %4, !dbg !12771

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12772
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12774
  br label %5, !dbg !12775

5:                                                ; preds = %4, %0
  ret void, !dbg !12776
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12777 {
  ret void, !dbg !12778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12782, metadata !DIExpression()), !dbg !12783
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12784
  ret void, !dbg !12785
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12789, metadata !DIExpression()), !dbg !12791
  call void @llvm.dbg.value(metadata i32 1000, metadata !12790, metadata !DIExpression()), !dbg !12791
  %2 = udiv i32 %0, 1000, !dbg !12792
  %3 = add nsw i32 %2, -1, !dbg !12793
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12794
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12795
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12796
  ret void, !dbg !12797
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !12798 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12800, metadata !DIExpression()), !dbg !12802
  %3 = bitcast i32* %2 to i8*, !dbg !12803
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12803
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12801, metadata !DIExpression()), !dbg !12804
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12805
  store volatile i32 %4, i32* %2, align 4, !dbg !12804
  %5 = load volatile i32, i32* %2, align 4, !dbg !12806
  %6 = icmp eq i32 %0, -1, !dbg !12807
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12800, metadata !DIExpression()), !dbg !12802
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12802
  call void @llvm.dbg.value(metadata i32 %8, metadata !12800, metadata !DIExpression()), !dbg !12802
  br label %9, !dbg !12809

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12800, metadata !DIExpression()), !dbg !12802
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12810
  call void @llvm.dbg.value(metadata i32 undef, metadata !12800, metadata !DIExpression()), !dbg !12802
  %12 = shl i32 %11, 15, !dbg !12802
  %13 = ashr i32 %12, 31, !dbg !12802
  %14 = add i32 %13, %10, !dbg !12802
  call void @llvm.dbg.value(metadata i32 %14, metadata !12800, metadata !DIExpression()), !dbg !12802
  %15 = icmp eq i32 %14, 0, !dbg !12809
  br i1 %15, label %16, label %9, !dbg !12809

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12813
  ret void, !dbg !12813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12816, metadata !DIExpression()), !dbg !12817
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12818
  ret void, !dbg !12819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12825, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 0, metadata !12828, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 0, metadata !12829, metadata !DIExpression()), !dbg !12830
  %2 = icmp eq i32 %0, 0, !dbg !12831
  br i1 %2, label %50, label %3, !dbg !12833

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12834
  %5 = icmp eq i32 %4, 49152, !dbg !12837
  br i1 %5, label %6, label %15, !dbg !12838

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12828, metadata !DIExpression()), !dbg !12830
  %7 = add i32 %0, -64000001, !dbg !12839
  %8 = icmp ult i32 %7, 26000000, !dbg !12839
  br i1 %8, label %15, label %9, !dbg !12839

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !12842
  %11 = select i1 %10, i32 0, i32 3, !dbg !12844
  call void @llvm.dbg.value(metadata i32 %11, metadata !12828, metadata !DIExpression()), !dbg !12830
  %12 = add i32 %0, -30000001, !dbg !12845
  %13 = icmp ult i32 %12, 60000000, !dbg !12845
  %14 = select i1 %13, i32 1, i32 %11, !dbg !12845
  call void @llvm.dbg.value(metadata i32 %14, metadata !12828, metadata !DIExpression()), !dbg !12830
  br label %15, !dbg !12845

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !12830
  call void @llvm.dbg.value(metadata i32 %16, metadata !12828, metadata !DIExpression()), !dbg !12830
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12848
  %18 = icmp eq i32 %17, 32768, !dbg !12850
  br i1 %18, label %19, label %27, !dbg !12851

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !12852
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !12855
  br i1 %22, label %27, label %23, !dbg !12855

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !12856
  %25 = and i1 %24, %21, !dbg !12859
  %26 = select i1 %25, i32 1, i32 %16, !dbg !12859
  call void @llvm.dbg.value(metadata i32 %26, metadata !12828, metadata !DIExpression()), !dbg !12830
  br label %27, !dbg !12859

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !12860
  call void @llvm.dbg.value(metadata i32 %28, metadata !12828, metadata !DIExpression()), !dbg !12830
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12861
  %30 = icmp eq i32 %29, 16384, !dbg !12863
  br i1 %30, label %31, label %39, !dbg !12864

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !12865
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !12868
  br i1 %34, label %39, label %35, !dbg !12868

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !12869
  %37 = select i1 %36, i1 %33, i1 false, !dbg !12872
  %38 = select i1 %37, i32 1, i32 %28, !dbg !12872
  call void @llvm.dbg.value(metadata i32 %38, metadata !12828, metadata !DIExpression()), !dbg !12830
  br label %39, !dbg !12872

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !12860
  call void @llvm.dbg.value(metadata i32 %40, metadata !12828, metadata !DIExpression()), !dbg !12830
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !12873
  call void @llvm.dbg.value(metadata i32 2, metadata !12826, metadata !DIExpression()), !dbg !12830
  br label %41, !dbg !12874

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !12860
  call void @llvm.dbg.value(metadata i32 %42, metadata !12826, metadata !DIExpression()), !dbg !12830
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !12875
  call void @llvm.dbg.value(metadata i32 %43, metadata !12827, metadata !DIExpression()), !dbg !12830
  %44 = add nsw i32 %42, -1, !dbg !12877
  call void @llvm.dbg.value(metadata i32 %44, metadata !12826, metadata !DIExpression()), !dbg !12830
  %45 = icmp ne i32 %43, %40, !dbg !12878
  %46 = icmp ne i32 %44, 0, !dbg !12879
  %47 = select i1 %45, i1 %46, i1 false, !dbg !12879
  br i1 %47, label %41, label %48, !dbg !12880, !llvm.loop !12881

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !12883
  call void @llvm.dbg.value(metadata i32 %51, metadata !12829, metadata !DIExpression()), !dbg !12830
  ret i32 %51, !dbg !12884
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12885 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12887
  %2 = and i32 %1, 49152, !dbg !12887
  ret i32 %2, !dbg !12888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12891, metadata !DIExpression()), !dbg !12892
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12893
  %3 = and i32 %2, -8, !dbg !12893
  %4 = or i32 %3, %0, !dbg !12893
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12893
  ret void, !dbg !12894
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12895 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12896
  %2 = and i32 %1, 7, !dbg !12896
  ret i32 %2, !dbg !12897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12898 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12916, metadata !DIExpression()), !dbg !12920
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12917, metadata !DIExpression()), !dbg !12920
  call void @llvm.dbg.value(metadata i32 0, metadata !12918, metadata !DIExpression()), !dbg !12920
  call void @llvm.dbg.value(metadata i32 0, metadata !12919, metadata !DIExpression()), !dbg !12920
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12921
  %4 = icmp eq i32 %3, 0, !dbg !12923
  br i1 %4, label %5, label %21, !dbg !12924

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !12925
  call void @llvm.dbg.value(metadata i32 %6, metadata !12919, metadata !DIExpression()), !dbg !12920
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.94() #26, !dbg !12927
  %8 = icmp eq i32 %7, 1, !dbg !12929
  br i1 %8, label %13, label %9, !dbg !12930

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.95() #26, !dbg !12931
  br label %10, !dbg !12933

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.94() #26, !dbg !12934
  %12 = icmp eq i32 %11, 1, !dbg !12935
  br i1 %12, label %13, label %10, !dbg !12933, !llvm.loop !12936

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12938
  %15 = load i32, i32* %14, align 4, !dbg !12938
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12939
  %17 = load i32, i32* %16, align 4, !dbg !12939
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12940
  %19 = load i32, i32* %18, align 4, !dbg !12940
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.96(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !12941
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !12942
  call void @llvm.dbg.value(metadata i32 %20, metadata !12918, metadata !DIExpression()), !dbg !12920
  br label %21, !dbg !12943

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12944
  call void @llvm.dbg.value(metadata i32 %22, metadata !12918, metadata !DIExpression()), !dbg !12920
  ret i32 %22, !dbg !12945
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12946 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12950, metadata !DIExpression()), !dbg !12951
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.98() #26, !dbg !12952
  %2 = icmp ne i32 %1, 0, !dbg !12954
  call void @llvm.dbg.value(metadata i1 %2, metadata !12950, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12951
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !12955
  %4 = icmp ne i32 %3, 0, !dbg !12957
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12958
  %6 = zext i1 %5 to i32, !dbg !12958
  call void @llvm.dbg.value(metadata i32 %6, metadata !12950, metadata !DIExpression()), !dbg !12951
  ret i32 %6, !dbg !12959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12964, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12965, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i32 0, metadata !12966, metadata !DIExpression()), !dbg !12967
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12968
  %4 = load i32, i32* %3, align 4, !dbg !12968
  %5 = and i32 %4, 63, !dbg !12969
  %6 = udiv i32 %0, %5, !dbg !12970
  call void @llvm.dbg.value(metadata i32 %6, metadata !12966, metadata !DIExpression()), !dbg !12967
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12971
  %8 = load i32, i32* %7, align 4, !dbg !12971
  %9 = and i32 %8, 511, !dbg !12972
  %10 = mul i32 %9, %6, !dbg !12973
  call void @llvm.dbg.value(metadata i32 %10, metadata !12966, metadata !DIExpression()), !dbg !12967
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12974
  %12 = load i32, i32* %11, align 4, !dbg !12974
  %13 = lshr i32 %12, 15, !dbg !12975
  %14 = and i32 %13, 131070, !dbg !12975
  %15 = add nuw nsw i32 %14, 2, !dbg !12975
  %16 = udiv i32 %10, %15, !dbg !12976
  call void @llvm.dbg.value(metadata i32 %16, metadata !12966, metadata !DIExpression()), !dbg !12967
  ret i32 %16, !dbg !12977
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.94() unnamed_addr #16 !dbg !12978 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12979
  %2 = lshr i32 %1, 1, !dbg !12980
  %3 = and i32 %2, 1, !dbg !12980
  ret i32 %3, !dbg !12981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.95() unnamed_addr #15 !dbg !12982 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12983
  %2 = or i32 %1, 1, !dbg !12983
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12983
  ret void, !dbg !12984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.96(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12987, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.value(metadata i32 %1, metadata !12988, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.value(metadata i32 %2, metadata !12989, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.value(metadata i32 %3, metadata !12990, metadata !DIExpression()), !dbg !12991
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12992
  %6 = and i32 %5, -4227072, !dbg !12992
  %7 = or i32 %1, %0, !dbg !12992
  %8 = shl i32 %2, 6, !dbg !12992
  %9 = or i32 %7, %8, !dbg !12992
  %10 = or i32 %9, %6, !dbg !12992
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12992
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12993
  %12 = and i32 %11, -196609, !dbg !12993
  %13 = or i32 %12, %3, !dbg !12993
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12993
  ret void, !dbg !12994
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12999, metadata !DIExpression()), !dbg !13003
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13000, metadata !DIExpression()), !dbg !13003
  call void @llvm.dbg.value(metadata i32 0, metadata !13001, metadata !DIExpression()), !dbg !13003
  call void @llvm.dbg.value(metadata i32 0, metadata !13002, metadata !DIExpression()), !dbg !13003
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13004
  %4 = load i32, i32* %3, align 4, !dbg !13004
  %5 = lshr i32 %4, 4, !dbg !13004
  %6 = and i32 %5, 15, !dbg !13004
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13004
  %8 = load i8, i8* %7, align 1, !dbg !13004
  %9 = zext i8 %8 to i32, !dbg !13004
  %10 = lshr i32 %0, %9, !dbg !13004
  call void @llvm.dbg.value(metadata i32 %10, metadata !13002, metadata !DIExpression()), !dbg !13003
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13005
  %12 = icmp ult i32 %11, %10, !dbg !13007
  br i1 %12, label %13, label %16, !dbg !13008

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13009
  call void @llvm.dbg.value(metadata i32 %14, metadata !13001, metadata !DIExpression()), !dbg !13003
  %15 = icmp eq i32 %14, 0, !dbg !13011
  br i1 %15, label %16, label %30, !dbg !13013

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.97() #26, !dbg !13014
  br label %17, !dbg !13016

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.98() #26, !dbg !13017
  %19 = icmp eq i32 %18, 1, !dbg !13018
  br i1 %19, label %20, label %17, !dbg !13016, !llvm.loop !13019

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13021
  tail call fastcc void @LL_RCC_SetAHBPrescaler.99(i32 noundef %21) #26, !dbg !13022
  tail call fastcc void @LL_RCC_SetSysClkSource.100() #26, !dbg !13023
  br label %22, !dbg !13024

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.101() #26, !dbg !13025
  %24 = icmp eq i32 %23, 8, !dbg !13026
  br i1 %24, label %25, label %22, !dbg !13024, !llvm.loop !13027

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13029
  %27 = load i32, i32* %26, align 4, !dbg !13029
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.102(i32 noundef %27) #26, !dbg !13030
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13031
  %29 = load i32, i32* %28, align 4, !dbg !13031
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.103(i32 noundef %29) #26, !dbg !13032
  br label %30, !dbg !13033

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13034
  %33 = icmp ugt i32 %32, %10, !dbg !13036
  br i1 %33, label %34, label %36, !dbg !13037

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13038
  call void @llvm.dbg.value(metadata i32 %35, metadata !13001, metadata !DIExpression()), !dbg !13003
  br label %36, !dbg !13040

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13003
  call void @llvm.dbg.value(metadata i32 %37, metadata !13001, metadata !DIExpression()), !dbg !13003
  %38 = icmp eq i32 %37, 0, !dbg !13041
  br i1 %38, label %39, label %40, !dbg !13043

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13044
  br label %40, !dbg !13046

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.97() unnamed_addr #15 !dbg !13048 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13049
  %2 = or i32 %1, 16777216, !dbg !13049
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13049
  ret void, !dbg !13050
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.98() unnamed_addr #16 !dbg !13051 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13052
  %2 = lshr i32 %1, 25, !dbg !13053
  %3 = and i32 %2, 1, !dbg !13053
  ret i32 %3, !dbg !13054
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.99(i32 noundef %0) unnamed_addr #15 !dbg !13055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13057, metadata !DIExpression()), !dbg !13058
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13059
  %3 = and i32 %2, -241, !dbg !13059
  %4 = or i32 %3, %0, !dbg !13059
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13059
  ret void, !dbg !13060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.100() unnamed_addr #15 !dbg !13061 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13063, metadata !DIExpression()), !dbg !13064
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13065
  %2 = and i32 %1, -4, !dbg !13065
  %3 = or i32 %2, 2, !dbg !13065
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13065
  ret void, !dbg !13066
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.101() unnamed_addr #16 !dbg !13067 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13068
  %2 = and i32 %1, 12, !dbg !13068
  ret i32 %2, !dbg !13069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.102(i32 noundef %0) unnamed_addr #15 !dbg !13070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13072, metadata !DIExpression()), !dbg !13073
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13074
  %3 = and i32 %2, -7169, !dbg !13074
  %4 = or i32 %3, %0, !dbg !13074
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13074
  ret void, !dbg !13075
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.103(i32 noundef %0) unnamed_addr #15 !dbg !13076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13078, metadata !DIExpression()), !dbg !13079
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13080
  %3 = and i32 %2, -57345, !dbg !13080
  %4 = or i32 %3, %0, !dbg !13080
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13080
  ret void, !dbg !13081
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !13082 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13083
  %2 = lshr i32 %1, 27, !dbg !13084
  %3 = and i32 %2, 1, !dbg !13084
  ret i32 %3, !dbg !13085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13090, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.value(metadata i32 %1, metadata !13091, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13092, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13093, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.value(metadata i32 0, metadata !13094, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.value(metadata i32 0, metadata !13095, metadata !DIExpression()), !dbg !13096
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13097
  %6 = icmp eq i32 %5, 0, !dbg !13099
  br i1 %6, label %7, label %27, !dbg !13100

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13101
  call void @llvm.dbg.value(metadata i32 %8, metadata !13095, metadata !DIExpression()), !dbg !13096
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13103
  %10 = icmp eq i32 %9, 1, !dbg !13105
  br i1 %10, label %19, label %11, !dbg !13106

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13107
  br i1 %12, label %13, label %14, !dbg !13110

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13111
  br label %15, !dbg !13113

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !13114
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !13116
  br label %16, !dbg !13117

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13118
  %18 = icmp eq i32 %17, 1, !dbg !13119
  br i1 %18, label %19, label %16, !dbg !13117, !llvm.loop !13120

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13122
  %21 = load i32, i32* %20, align 4, !dbg !13122
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13123
  %23 = load i32, i32* %22, align 4, !dbg !13123
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13124
  %25 = load i32, i32* %24, align 4, !dbg !13124
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.96(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13125
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13126
  call void @llvm.dbg.value(metadata i32 %26, metadata !13094, metadata !DIExpression()), !dbg !13096
  br label %27, !dbg !13127

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13128
  call void @llvm.dbg.value(metadata i32 %28, metadata !13094, metadata !DIExpression()), !dbg !13096
  ret i32 %28, !dbg !13129
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !13130 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13131
  %2 = lshr i32 %1, 17, !dbg !13132
  %3 = and i32 %2, 1, !dbg !13132
  ret i32 %3, !dbg !13133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13134 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13135
  %2 = or i32 %1, 262144, !dbg !13135
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13135
  ret void, !dbg !13136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !13137 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13138
  %2 = and i32 %1, -262145, !dbg !13138
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13138
  ret void, !dbg !13139
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !13140 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13141
  %2 = or i32 %1, 65536, !dbg !13141
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13141
  ret void, !dbg !13142
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13143 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13146, metadata !DIExpression()), !dbg !13162
  call void @llvm.dbg.value(metadata i32 undef, metadata !13146, metadata !DIExpression()), !dbg !13162
  call void @llvm.dbg.value(metadata i32 undef, metadata !13146, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13162
  ret void, !dbg !13163
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13164 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13168, metadata !DIExpression()), !dbg !13170
  %2 = icmp eq i8* %0, null, !dbg !13171
  br i1 %2, label %29, label %3, !dbg !13173

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13174
  %5 = icmp eq i8 %4, 0, !dbg !13175
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13176
  br i1 %6, label %29, label %8, !dbg !13176

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13169, metadata !DIExpression()), !dbg !13170
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13177

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13169, metadata !DIExpression()), !dbg !13170
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13179
  br i1 %10, label %11, label %15, !dbg !13184

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13185
  %13 = load i8*, i8** %12, align 4, !dbg !13185
  %14 = icmp eq i8* %13, %0, !dbg !13186
  br i1 %14, label %29, label %15, !dbg !13187

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13188
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13169, metadata !DIExpression()), !dbg !13170
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13189
  br i1 %17, label %7, label %8, !dbg !13190, !llvm.loop !13191

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13169, metadata !DIExpression()), !dbg !13170
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13193
  br i1 %20, label %21, label %26, !dbg !13197

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13198
  %23 = load i8*, i8** %22, align 4, !dbg !13198
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13199
  %25 = icmp eq i32 %24, 0, !dbg !13200
  br i1 %25, label %29, label %26, !dbg !13201

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13202
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13169, metadata !DIExpression()), !dbg !13170
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13203
  br i1 %28, label %29, label %18, !dbg !13177, !llvm.loop !13204

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13170
  ret %struct.device* %30, !dbg !13206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !13207 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13211, metadata !DIExpression()), !dbg !13212
  %2 = icmp eq %struct.device* %0, null, !dbg !13213
  br i1 %2, label %14, label %3, !dbg !13215

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13216
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13216
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13217
  %7 = load i8, i8* %6, align 1, !dbg !13217
  %8 = and i8 %7, 1, !dbg !13217
  %9 = icmp eq i8 %8, 0, !dbg !13217
  br i1 %9, label %14, label %10, !dbg !13218

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13219
  %12 = load i8, i8* %11, align 1, !dbg !13219
  %13 = icmp eq i8 %12, 0, !dbg !13220
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13212
  ret i1 %15, !dbg !13221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !13222 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13227, metadata !DIExpression()), !dbg !13228
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13229
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13231 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13239, metadata !DIExpression()), !dbg !13244
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13240, metadata !DIExpression()), !dbg !13244
  call void @llvm.dbg.value(metadata i8* %2, metadata !13241, metadata !DIExpression()), !dbg !13244
  %5 = bitcast i32* %4 to i8*, !dbg !13245
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13245
  call void @llvm.dbg.value(metadata i32 0, metadata !13242, metadata !DIExpression()), !dbg !13244
  store i32 0, i32* %4, align 4, !dbg !13246
  call void @llvm.dbg.value(metadata i32* %4, metadata !13242, metadata !DIExpression(DW_OP_deref)), !dbg !13244
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13247
  call void @llvm.dbg.value(metadata i16* %6, metadata !13243, metadata !DIExpression()), !dbg !13244
  %7 = load i32, i32* %4, align 4, !dbg !13248
  call void @llvm.dbg.value(metadata i32 %7, metadata !13242, metadata !DIExpression()), !dbg !13244
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13249
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13250
  ret i32 %8, !dbg !13251
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13256, metadata !DIExpression()), !dbg !13262
  call void @llvm.dbg.value(metadata i32* %1, metadata !13257, metadata !DIExpression()), !dbg !13262
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13263
  %4 = load i16*, i16** %3, align 4, !dbg !13263
  call void @llvm.dbg.value(metadata i16* %4, metadata !13258, metadata !DIExpression()), !dbg !13262
  %5 = icmp eq i16* %4, null, !dbg !13264
  br i1 %5, label %14, label %6, !dbg !13265

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13266
  call void @llvm.dbg.value(metadata i32 %7, metadata !13259, metadata !DIExpression()), !dbg !13266
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13267
  %9 = load i16, i16* %8, align 2, !dbg !13267
  %10 = add i16 %9, -32767, !dbg !13268
  %11 = icmp ult i16 %10, 2, !dbg !13268
  %12 = add i32 %7, 1, !dbg !13269
  call void @llvm.dbg.value(metadata i32 %12, metadata !13259, metadata !DIExpression()), !dbg !13266
  br i1 %11, label %13, label %6, !dbg !13268, !llvm.loop !13271

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13274
  br label %14, !dbg !13275

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13277 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13281, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata i32 %1, metadata !13282, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13283, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata i8* %3, metadata !13284, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata i32 0, metadata !13285, metadata !DIExpression()), !dbg !13293
  %5 = icmp eq i32 %1, 0, !dbg !13294
  br i1 %5, label %16, label %8, !dbg !13295

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13285, metadata !DIExpression()), !dbg !13293
  %7 = icmp eq i32 %15, %1, !dbg !13294
  br i1 %7, label %16, label %8, !dbg !13295, !llvm.loop !13296

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13285, metadata !DIExpression()), !dbg !13293
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13298
  %11 = load i16, i16* %10, align 2, !dbg !13298
  call void @llvm.dbg.value(metadata i16 %11, metadata !13287, metadata !DIExpression()), !dbg !13299
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13300
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13290, metadata !DIExpression()), !dbg !13299
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13301
  call void @llvm.dbg.value(metadata i32 %13, metadata !13291, metadata !DIExpression()), !dbg !13299
  %14 = icmp slt i32 %13, 0, !dbg !13302
  %15 = add nuw i32 %9, 1, !dbg !13304
  call void @llvm.dbg.value(metadata i32 %15, metadata !13285, metadata !DIExpression()), !dbg !13293
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !13306 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13310, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13311, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13312, metadata !DIExpression()), !dbg !13313
  %2 = sext i16 %0 to i32, !dbg !13314
  %3 = icmp slt i16 %0, 1, !dbg !13316
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13317
  %6 = add nsw i32 %2, -1, !dbg !13317
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13317
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13317
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13311, metadata !DIExpression()), !dbg !13313
  ret %struct.device* %8, !dbg !13318
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13319 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13321, metadata !DIExpression()), !dbg !13326
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13322, metadata !DIExpression()), !dbg !13326
  call void @llvm.dbg.value(metadata i8* %2, metadata !13323, metadata !DIExpression()), !dbg !13326
  %5 = bitcast i32* %4 to i8*, !dbg !13327
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13327
  call void @llvm.dbg.value(metadata i32 0, metadata !13324, metadata !DIExpression()), !dbg !13326
  store i32 0, i32* %4, align 4, !dbg !13328
  call void @llvm.dbg.value(metadata i32* %4, metadata !13324, metadata !DIExpression(DW_OP_deref)), !dbg !13326
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13329
  call void @llvm.dbg.value(metadata i16* %6, metadata !13325, metadata !DIExpression()), !dbg !13326
  %7 = load i32, i32* %4, align 4, !dbg !13330
  call void @llvm.dbg.value(metadata i32 %7, metadata !13324, metadata !DIExpression()), !dbg !13326
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13331
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13332
  ret i32 %8, !dbg !13333
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13334 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13336, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i32* %1, metadata !13337, metadata !DIExpression()), !dbg !13341
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13342
  %4 = load i16*, i16** %3, align 4, !dbg !13342
  call void @llvm.dbg.value(metadata i16* %4, metadata !13338, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i32 0, metadata !13339, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i32 0, metadata !13340, metadata !DIExpression()), !dbg !13341
  %5 = icmp eq i16* %4, null, !dbg !13343
  br i1 %5, label %22, label %6, !dbg !13345

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13339, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i16* %8, metadata !13338, metadata !DIExpression()), !dbg !13341
  %9 = load i16, i16* %8, align 2, !dbg !13346
  %10 = icmp eq i16 %9, -32768, !dbg !13350
  call void @llvm.dbg.value(metadata i32 undef, metadata !13339, metadata !DIExpression()), !dbg !13341
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13351
  call void @llvm.dbg.value(metadata i16* %11, metadata !13338, metadata !DIExpression()), !dbg !13341
  %12 = zext i1 %10 to i32, !dbg !13352
  %13 = add i32 %7, %12, !dbg !13352
  call void @llvm.dbg.value(metadata i32 %13, metadata !13339, metadata !DIExpression()), !dbg !13341
  %14 = icmp eq i32 %13, 2, !dbg !13353
  br i1 %14, label %15, label %6, !dbg !13354

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13341
  call void @llvm.dbg.value(metadata i32 %16, metadata !13340, metadata !DIExpression()), !dbg !13341
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13355
  %18 = load i16, i16* %17, align 2, !dbg !13355
  %19 = icmp eq i16 %18, 32767, !dbg !13356
  %20 = add i32 %16, 1, !dbg !13357
  call void @llvm.dbg.value(metadata i32 %20, metadata !13340, metadata !DIExpression()), !dbg !13341
  br i1 %19, label %21, label %15, !dbg !13359, !llvm.loop !13360

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13362
  br label %22, !dbg !13363

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13364
  call void @llvm.dbg.value(metadata i16* %23, metadata !13338, metadata !DIExpression()), !dbg !13341
  ret i16* %23, !dbg !13365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !13366 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13367
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13368
  ret i32* %2, !dbg !13369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !13370 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13518, metadata !DIExpression()), !dbg !13521
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13519, metadata !DIExpression()), !dbg !13521
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13520, metadata !DIExpression()), !dbg !13521
  ret void, !dbg !13522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13527, metadata !DIExpression()), !dbg !13529
  call void @llvm.dbg.value(metadata i32 %1, metadata !13528, metadata !DIExpression()), !dbg !13529
  ret void, !dbg !13530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13531 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13535, metadata !DIExpression()), !dbg !13537
  call void @llvm.dbg.value(metadata i32 %1, metadata !13536, metadata !DIExpression()), !dbg !13537
  ret void, !dbg !13538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13543, metadata !DIExpression()), !dbg !13545
  call void @llvm.dbg.value(metadata i8* %1, metadata !13544, metadata !DIExpression()), !dbg !13545
  ret i32 -134, !dbg !13546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13547 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13551, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.value(metadata i8* %1, metadata !13552, metadata !DIExpression()), !dbg !13553
  ret i32 -134, !dbg !13554
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13558, metadata !DIExpression()), !dbg !13559
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13560, !srcloc !13566
  call void @llvm.dbg.value(metadata i32 undef, metadata !13563, metadata !DIExpression()) #24, !dbg !13567
  call void @llvm.dbg.value(metadata i32 undef, metadata !13564, metadata !DIExpression()) #24, !dbg !13567
  br label %3, !dbg !13568

3:                                                ; preds = %3, %1
  br label %3, !dbg !13569, !llvm.loop !13572
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13579, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13580, metadata !DIExpression()), !dbg !13581
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13582
  unreachable, !dbg !13582
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13585, metadata !DIExpression()), !dbg !13586
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13587
  unreachable, !dbg !13587
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13590, metadata !DIExpression()), !dbg !13594
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13591, metadata !DIExpression()), !dbg !13594
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13595, !srcloc !13566
  call void @llvm.dbg.value(metadata i32 undef, metadata !13563, metadata !DIExpression()) #24, !dbg !13597
  call void @llvm.dbg.value(metadata i32 undef, metadata !13564, metadata !DIExpression()) #24, !dbg !13597
  call void @llvm.dbg.value(metadata i32 undef, metadata !13592, metadata !DIExpression()), !dbg !13594
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13593, metadata !DIExpression()), !dbg !13594
  %4 = icmp eq %struct.__esf* %1, null, !dbg !13598
  br i1 %4, label %6, label %5, !dbg !13600

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13601
  br label %7, !dbg !13602

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13601
  br label %7, !dbg !13605

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !13595
  call void @llvm.dbg.value(metadata i32 %8, metadata !13563, metadata !DIExpression()) #24, !dbg !13597
  call void @llvm.dbg.value(metadata i32 %8, metadata !13592, metadata !DIExpression()), !dbg !13594
  %9 = tail call fastcc %struct.k_thread* @k_current_get.112() #27, !dbg !13607
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13593, metadata !DIExpression()), !dbg !13594
  call void @llvm.dbg.value(metadata i32 undef, metadata !13608, metadata !DIExpression()) #24, !dbg !13611
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !13613, !srcloc !13614
  tail call fastcc void @k_thread_abort.113(%struct.k_thread* noundef %9) #26, !dbg !13615
  ret void, !dbg !13618
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.112() unnamed_addr #9 !dbg !13619 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.114() #27, !dbg !13623
  ret %struct.k_thread* %1, !dbg !13624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.113(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13625 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13629, metadata !DIExpression()), !dbg !13630
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13631, !srcloc !13633
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13634
  ret void, !dbg !13635
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.114() unnamed_addr #9 !dbg !13636 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13637, !srcloc !13639
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13640
  ret %struct.k_thread* %1, !dbg !13641
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13642 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13646, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i32 %1, metadata !13647, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i32 %2, metadata !13648, metadata !DIExpression()), !dbg !13649
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13650
  ret void, !dbg !13651
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13652 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13656, metadata !DIExpression()), !dbg !13659
  call void @llvm.dbg.value(metadata i8* %1, metadata !13657, metadata !DIExpression()), !dbg !13659
  call void @llvm.dbg.value(metadata i32 %2, metadata !13658, metadata !DIExpression()), !dbg !13659
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13660
  ret void, !dbg !13661
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13662 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13663
  ret void, !dbg !13664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13667, metadata !DIExpression()), !dbg !13668
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13669
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13670
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13671
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13672
  %4 = trunc i32 %0 to i8, !dbg !13673
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13674
  store i8 %4, i8* %5, align 4, !dbg !13675
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13676
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13677
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13678
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13679
  store i8* %8, i8** %9, align 4, !dbg !13680
  ret void, !dbg !13681
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13684, metadata !DIExpression()), !dbg !13690
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13691
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13685, metadata !DIExpression()), !dbg !13690
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13692
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13686, metadata !DIExpression()), !dbg !13690
  call void @llvm.dbg.value(metadata i8* null, metadata !13689, metadata !DIExpression()), !dbg !13690
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13693
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13694
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !13695
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13696
  ret void, !dbg !13697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13698 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13702, metadata !DIExpression()), !dbg !13703
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13704
  ret i8* %2, !dbg !13705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13706 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13711, metadata !DIExpression()), !dbg !13712
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13713
  %3 = load i8, i8* %2, align 1, !dbg !13714
  %4 = and i8 %3, -5, !dbg !13714
  store i8 %4, i8* %2, align 1, !dbg !13714
  ret void, !dbg !13715
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !13716 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13719
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13720
  %3 = ptrtoint i8* %2 to i32, !dbg !13729
  %4 = add i32 %3, 2048, !dbg !13730
  call void @llvm.dbg.value(metadata i32 %4, metadata !13724, metadata !DIExpression()) #24, !dbg !13731
  call void @llvm.dbg.value(metadata i32 %4, metadata !13732, metadata !DIExpression()) #24, !dbg !13735
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !13737, !srcloc !13738
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13739
  %6 = or i32 %5, 512, !dbg !13739
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13739
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -2, i32 noundef 255) #25, !dbg !13740
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -5, i32 noundef 0) #25, !dbg !13743
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -12, i32 noundef 0) #25, !dbg !13744
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -11, i32 noundef 0) #25, !dbg !13745
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -10, i32 noundef 0) #25, !dbg !13746
  tail call fastcc void @__NVIC_SetPriority.121(i32 noundef -4, i32 noundef 0) #25, !dbg !13747
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13748
  %8 = or i32 %7, 458752, !dbg !13748
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13748
  tail call void @z_arm_fault_init() #25, !dbg !13749
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13750
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13751
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13754
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13755
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13756
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13757
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !13757
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13718, metadata !DIExpression()), !dbg !13758
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13759
  call void @z_device_state_init() #25, !dbg !13760
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !13761
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !13762
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !13763
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !13764
  unreachable, !dbg !13764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2164, metadata !DIExpression()), !dbg !13765
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13766
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13766
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2165, metadata !DIExpression()), !dbg !13765
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2165, metadata !DIExpression()), !dbg !13765
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13767
  br i1 %7, label %8, label %35, !dbg !13768

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2165, metadata !DIExpression()), !dbg !13765
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13769
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13769
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2175, metadata !DIExpression()), !dbg !13770
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13771
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13771
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13772
  call void @llvm.dbg.value(metadata i32 %14, metadata !2179, metadata !DIExpression()), !dbg !13770
  %15 = icmp eq %struct.device* %11, null, !dbg !13773
  br i1 %15, label %32, label %16, !dbg !13775

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13776
  br i1 %17, label %26, label %18, !dbg !13779

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13780
  call void @llvm.dbg.value(metadata i32 %19, metadata !2179, metadata !DIExpression()), !dbg !13770
  %20 = icmp ult i32 %19, 255, !dbg !13782
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13782
  call void @llvm.dbg.value(metadata i32 %21, metadata !2179, metadata !DIExpression()), !dbg !13770
  %22 = trunc i32 %21 to i8, !dbg !13783
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13784
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13784
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13785
  store i8 %22, i8* %25, align 1, !dbg !13786
  br label %26, !dbg !13787

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13788
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13788
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13789
  %30 = load i8, i8* %29, align 1, !dbg !13790
  %31 = or i8 %30, 1, !dbg !13790
  store i8 %31, i8* %29, align 1, !dbg !13790
  br label %32, !dbg !13791

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13792
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2165, metadata !DIExpression()), !dbg !13765
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13767
  br i1 %34, label %8, label %35, !dbg !13768, !llvm.loop !13793

35:                                               ; preds = %32, %1
  ret void, !dbg !13795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.121(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13798, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i32 %1, metadata !13799, metadata !DIExpression()), !dbg !13800
  %3 = trunc i32 %1 to i8, !dbg !13801
  %4 = shl i8 %3, 4, !dbg !13801
  %5 = and i32 %0, 15, !dbg !13804
  %6 = add nsw i32 %5, -4, !dbg !13805
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13806
  store volatile i8 %4, i8* %7, align 1, !dbg !13807
  ret void, !dbg !13808
}

; Function Attrs: optsize
declare !dbg !13809 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13810 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13813, metadata !DIExpression()), !dbg !13814
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13815
  store i8 1, i8* %2, align 1, !dbg !13816
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13817
  store i8 1, i8* %3, align 4, !dbg !13818
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13819
  store i32 0, i32* %4, align 4, !dbg !13820
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13821
  store i32 0, i32* %5, align 4, !dbg !13822
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13823
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13824
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13825
  ret void, !dbg !13826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13827 {
  tail call void @z_sched_init() #25, !dbg !13832
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13833
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0)) #25, !dbg !13834
  call void @llvm.dbg.value(metadata i8* %1, metadata !13831, metadata !DIExpression()), !dbg !13835
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13836
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13837
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !13838
  ret i8* %1, !dbg !13839
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !13840 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13844, metadata !DIExpression()), !dbg !13845
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13846
  unreachable, !dbg !13847
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13848 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13850, metadata !DIExpression()), !dbg !13853
  call void @llvm.dbg.value(metadata i8* %1, metadata !13851, metadata !DIExpression()), !dbg !13853
  call void @llvm.dbg.value(metadata i8* %2, metadata !13852, metadata !DIExpression()), !dbg !13853
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13854
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !13855
  tail call void @boot_banner() #25, !dbg !13856
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !13857
  tail call void @z_init_static_threads() #25, !dbg !13858
  tail call void @main() #25, !dbg !13859
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13860
  %5 = and i8 %4, -2, !dbg !13860
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13860
  ret void, !dbg !13861
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13862 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13872, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.value(metadata i8* %1, metadata !13873, metadata !DIExpression()), !dbg !13874
  ret void, !dbg !13875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13876 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13878, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.value(metadata i8* %1, metadata !13879, metadata !DIExpression()), !dbg !13880
  ret void, !dbg !13881
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13882 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13883, !srcloc !13890
  call void @llvm.dbg.value(metadata i32 %1, metadata !13886, metadata !DIExpression()) #24, !dbg !13891
  %2 = icmp ne i32 %1, 0, !dbg !13892
  ret i1 %2, !dbg !13893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13894 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13895
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13896
  %3 = load i8, i8* %2, align 4, !dbg !13897
  %4 = or i8 %3, 1, !dbg !13897
  store i8 %4, i8* %2, align 4, !dbg !13897
  ret void, !dbg !13898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13899 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13900
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13901
  %3 = load i8, i8* %2, align 4, !dbg !13902
  %4 = and i8 %3, -2, !dbg !13902
  store i8 %4, i8* %2, align 4, !dbg !13902
  ret void, !dbg !13903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13904 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13905
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13906
  %3 = load i8, i8* %2, align 4, !dbg !13906
  %4 = and i8 %3, 1, !dbg !13907
  %5 = icmp ne i8 %4, 0, !dbg !13908
  ret i1 %5, !dbg !13909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13910 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13914, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata i8* %1, metadata !13915, metadata !DIExpression()), !dbg !13916
  ret i32 -88, !dbg !13917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13918 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13922, metadata !DIExpression()), !dbg !13923
  ret i8* null, !dbg !13924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13925 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13929, metadata !DIExpression()), !dbg !13932
  call void @llvm.dbg.value(metadata i8* %1, metadata !13930, metadata !DIExpression()), !dbg !13932
  call void @llvm.dbg.value(metadata i32 %2, metadata !13931, metadata !DIExpression()), !dbg !13932
  ret i32 -88, !dbg !13933
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2188 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2302, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i8* %1, metadata !2303, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 %2, metadata !2304, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 0, metadata !2305, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i8 undef, metadata !2307, metadata !DIExpression()), !dbg !13934
  %4 = icmp eq i8* %1, null, !dbg !13935
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13937
  br i1 %6, label %46, label %7, !dbg !13937

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13938
  %9 = load i8, i8* %8, align 1, !dbg !13938
  call void @llvm.dbg.value(metadata i8 %9, metadata !2307, metadata !DIExpression()), !dbg !13934
  %10 = add i32 %2, -1, !dbg !13939
  call void @llvm.dbg.value(metadata i32 %10, metadata !2304, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i8 0, metadata !2308, metadata !DIExpression()), !dbg !13940
  call void @llvm.dbg.value(metadata i8 %9, metadata !2307, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 0, metadata !2305, metadata !DIExpression()), !dbg !13934
  %11 = icmp eq i8 %9, 0, !dbg !13941
  br i1 %11, label %12, label %15, !dbg !13943

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13944
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13945
  store i8 0, i8* %14, align 1, !dbg !13946
  br label %46, !dbg !13947

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2308, metadata !DIExpression()), !dbg !13940
  call void @llvm.dbg.value(metadata i8 %17, metadata !2307, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 %18, metadata !2305, metadata !DIExpression()), !dbg !13934
  %19 = zext i8 %17 to i32, !dbg !13948
  %20 = zext i8 %16 to i32, !dbg !13949
  %21 = shl nuw i32 1, %20, !dbg !13949
  call void @llvm.dbg.value(metadata i32 %21, metadata !2306, metadata !DIExpression()), !dbg !13934
  %22 = and i32 %21, %19, !dbg !13951
  %23 = icmp eq i32 %22, 0, !dbg !13953
  br i1 %23, label %42, label %24, !dbg !13954

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13955
  %26 = sub i32 %10, %18, !dbg !13956
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13957
  %28 = load i8*, i8** %27, align 4, !dbg !13957
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13958
  %30 = load i32, i32* %29, align 4, !dbg !13958
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !13959
  %32 = add i32 %31, %18, !dbg !13960
  call void @llvm.dbg.value(metadata i32 %32, metadata !2305, metadata !DIExpression()), !dbg !13934
  %33 = trunc i32 %21 to i8, !dbg !13961
  %34 = xor i8 %33, -1, !dbg !13961
  %35 = and i8 %17, %34, !dbg !13961
  call void @llvm.dbg.value(metadata i8 %35, metadata !2307, metadata !DIExpression()), !dbg !13934
  %36 = icmp eq i8 %35, 0, !dbg !13962
  br i1 %36, label %12, label %37, !dbg !13964

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13965
  %39 = sub i32 %10, %32, !dbg !13967
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !13968
  %41 = add i32 %40, %32, !dbg !13969
  call void @llvm.dbg.value(metadata i32 %41, metadata !2305, metadata !DIExpression()), !dbg !13934
  br label %42, !dbg !13970

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13934
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13934
  call void @llvm.dbg.value(metadata i8 %44, metadata !2307, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 %43, metadata !2305, metadata !DIExpression()), !dbg !13934
  %45 = add i8 %16, 1, !dbg !13971
  call void @llvm.dbg.value(metadata i8 %45, metadata !2308, metadata !DIExpression()), !dbg !13940
  br label %15, !dbg !13943

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.125, i32 0, i32 0), %3 ], !dbg !13934
  ret i8* %47, !dbg !13972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13973 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13977, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i32 %1, metadata !13978, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i8* %2, metadata !13979, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i32 %3, metadata !13980, metadata !DIExpression()), !dbg !13982
  %5 = icmp ult i32 %1, %3, !dbg !13983
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13983
  call void @llvm.dbg.value(metadata i32 %6, metadata !13981, metadata !DIExpression()), !dbg !13982
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13984
  ret i32 %6, !dbg !13985
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13986 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13990, metadata !DIExpression()), !dbg !13991
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13992
  ret void, !dbg !13993
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13994 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14003, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14004, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata i32 %2, metadata !14005, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14006, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata i8* %4, metadata !14007, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata i8* %5, metadata !14008, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata i8* %6, metadata !14009, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata i32 %7, metadata !14010, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata i32 %8, metadata !14011, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata i8* undef, metadata !14012, metadata !DIExpression()), !dbg !14014
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14015
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !14016
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14017
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14018
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14019
  call void @llvm.dbg.value(metadata i8* %13, metadata !14013, metadata !DIExpression()), !dbg !14014
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14020
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14021
  store i8* null, i8** %14, align 4, !dbg !14022
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14023
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14023
  br i1 %16, label %20, label %17, !dbg !14025

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14026
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14026
  br label %20, !dbg !14027

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14014
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14028
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14030
  ret i8* %13, !dbg !14031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !14032 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14037, metadata !DIExpression()), !dbg !14038
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14039
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14040
  ret void, !dbg !14041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !14042 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14047, metadata !DIExpression()), !dbg !14051
  call void @llvm.dbg.value(metadata i32 %1, metadata !14048, metadata !DIExpression()), !dbg !14051
  call void @llvm.dbg.value(metadata i32 %2, metadata !14049, metadata !DIExpression()), !dbg !14051
  call void @llvm.dbg.value(metadata i32 %3, metadata !14050, metadata !DIExpression()), !dbg !14051
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14052
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14053
  %6 = trunc i32 %3 to i8, !dbg !14054
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14055
  store i8 %6, i8* %7, align 4, !dbg !14056
  %8 = trunc i32 %2 to i8, !dbg !14057
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14058
  store i8 %8, i8* %9, align 1, !dbg !14059
  %10 = trunc i32 %1 to i8, !dbg !14060
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14061
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14061
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14061
  store i8 %10, i8* %13, align 2, !dbg !14062
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14063
  store i8 0, i8* %14, align 1, !dbg !14064
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14065
  ret void, !dbg !14066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !14067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14071, metadata !DIExpression()), !dbg !14079
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14072, metadata !DIExpression()), !dbg !14079
  call void @llvm.dbg.value(metadata i32 %2, metadata !14073, metadata !DIExpression()), !dbg !14079
  call void @llvm.dbg.value(metadata i32 0, metadata !14078, metadata !DIExpression()), !dbg !14079
  %4 = add i32 %2, 7, !dbg !14080
  %5 = and i32 %4, -8, !dbg !14080
  %6 = add i32 %5, 64, !dbg !14080
  call void @llvm.dbg.value(metadata i32 %6, metadata !14074, metadata !DIExpression()), !dbg !14079
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.135(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14082
  call void @llvm.dbg.value(metadata i8* %7, metadata !14077, metadata !DIExpression()), !dbg !14079
  call void @llvm.dbg.value(metadata i32 %5, metadata !14075, metadata !DIExpression()), !dbg !14079
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14083
  call void @llvm.dbg.value(metadata i8* %8, metadata !14076, metadata !DIExpression()), !dbg !14079
  call void @llvm.dbg.value(metadata i32 0, metadata !14078, metadata !DIExpression()), !dbg !14079
  %9 = ptrtoint i8* %7 to i32, !dbg !14084
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14085
  store i32 %9, i32* %10, align 4, !dbg !14086
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14087
  store i32 %5, i32* %11, align 4, !dbg !14088
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14089
  store i32 0, i32* %12, align 4, !dbg !14090
  call void @llvm.dbg.value(metadata i8* %8, metadata !14076, metadata !DIExpression()), !dbg !14079
  ret i8* %8, !dbg !14091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.135(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14092 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14096, metadata !DIExpression()), !dbg !14097
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14098
  ret i8* %2, !dbg !14099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14100 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14105, metadata !DIExpression()), !dbg !14106
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14107
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14108
  ret void, !dbg !14109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14110 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14112, metadata !DIExpression()), !dbg !14113
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14114
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14115
  ret void, !dbg !14116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14117 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14121, metadata !DIExpression()), !dbg !14122
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14123
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14124
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14125
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14126
  ret void, !dbg !14127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14128 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14133, metadata !DIExpression()), !dbg !14134
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14135
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14136
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14137
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14138
  ret void, !dbg !14139
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14140 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14157, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14148, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14149, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 %2, metadata !14150, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14151, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i8* %4, metadata !14152, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i8* %5, metadata !14153, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i8* %6, metadata !14154, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 %7, metadata !14155, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 %8, metadata !14156, metadata !DIExpression()), !dbg !14158
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14159
  %13 = icmp eq i64 %11, -1, !dbg !14160
  br i1 %13, label %15, label %14, !dbg !14162

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14163
  br label %15, !dbg !14165

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14167 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14172, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14171, metadata !DIExpression()), !dbg !14173
  %4 = icmp eq i64 %3, 0, !dbg !14174
  br i1 %4, label %5, label %6, !dbg !14176

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14177
  br label %7, !dbg !14179

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14180
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14183 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14187, metadata !DIExpression()), !dbg !14188
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14189, !srcloc !14191
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14192
  ret void, !dbg !14193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14194 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14197, metadata !DIExpression()), !dbg !14198
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14196, metadata !DIExpression()), !dbg !14198
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14199
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14200
  ret void, !dbg !14201
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14202 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14204, metadata !DIExpression()), !dbg !14224
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14225

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14226
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14222, metadata !DIExpression()), !dbg !14227
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14228

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14204, metadata !DIExpression()), !dbg !14224
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14229
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14229
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14232
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14232
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14233
  %9 = load i32, i32* %8, align 4, !dbg !14233
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14234
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14234
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14235
  %13 = load i8*, i8** %12, align 4, !dbg !14235
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14236
  %15 = load i8*, i8** %14, align 4, !dbg !14236
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14237
  %17 = load i8*, i8** %16, align 4, !dbg !14237
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14238
  %19 = load i32, i32* %18, align 4, !dbg !14238
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14239
  %21 = load i32, i32* %20, align 4, !dbg !14239
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14240
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14241
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14242
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14243
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14243
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14244
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14204, metadata !DIExpression()), !dbg !14224
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14245
  br i1 %27, label %2, label %1, !dbg !14225, !llvm.loop !14247

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14226
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14222, metadata !DIExpression()), !dbg !14227
  br label %29, !dbg !14228

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14249
  ret void, !dbg !14250

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14222, metadata !DIExpression()), !dbg !14227
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14251
  %33 = load i32, i32* %32, align 4, !dbg !14251
  %34 = icmp eq i32 %33, -1, !dbg !14255
  br i1 %34, label %43, label %35, !dbg !14256

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14257
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14257
  %38 = icmp sgt i32 %33, 0, !dbg !14259
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14259
  %40 = zext i32 %39 to i64, !dbg !14259
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.138(i64 noundef %40) #26, !dbg !14259
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14260
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14260
  br label %43, !dbg !14261

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14262
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14222, metadata !DIExpression()), !dbg !14227
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14263
  br i1 %45, label %30, label %29, !dbg !14228, !llvm.loop !14265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.138(i64 noundef %0) unnamed_addr #11 !dbg !14267 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14269, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i64 %0, metadata !14271, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i32 1000, metadata !14274, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i32 10000, metadata !14275, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i8 1, metadata !14276, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i8 0, metadata !14277, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i8 1, metadata !14278, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i8 0, metadata !14279, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i8 1, metadata !14280, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i8 0, metadata !14281, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i64 0, metadata !14282, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata i64 0, metadata !14282, metadata !DIExpression()), !dbg !14286
  %2 = mul i64 %0, 10, !dbg !14288
  ret i64 %2, !dbg !14294
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14295 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14297, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata i8* %1, metadata !14298, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata i8* %2, metadata !14299, metadata !DIExpression()), !dbg !14301
  call void @llvm.dbg.value(metadata i8* %3, metadata !14300, metadata !DIExpression()), !dbg !14301
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14302
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14303
  %7 = load i8, i8* %6, align 4, !dbg !14304
  %8 = or i8 %7, 4, !dbg !14304
  store i8 %8, i8* %6, align 4, !dbg !14304
  tail call void @z_thread_essential_clear() #26, !dbg !14305
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !14306
  unreachable, !dbg !14306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !14307 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14311, metadata !DIExpression()), !dbg !14312
  ret i32 -134, !dbg !14313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14314 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14318, metadata !DIExpression()), !dbg !14320
  call void @llvm.dbg.value(metadata i32 %1, metadata !14319, metadata !DIExpression()), !dbg !14320
  ret i32 -134, !dbg !14321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !14322 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14329, metadata !DIExpression()), !dbg !14331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14330, metadata !DIExpression()), !dbg !14331
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14332
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14334
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14331
  ret i32 %6, !dbg !14335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !14336 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14340, metadata !DIExpression()), !dbg !14341
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14342
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14341
  ret i32 %3, !dbg !14344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14345 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14347
  ret void, !dbg !14348
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14349 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14351, metadata !DIExpression()), !dbg !14354
  call void @llvm.dbg.value(metadata i8* %1, metadata !14352, metadata !DIExpression()), !dbg !14354
  call void @llvm.dbg.value(metadata i8* %2, metadata !14353, metadata !DIExpression()), !dbg !14354
  br label %4, !dbg !14355

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14356, !srcloc !14363
  call void @llvm.dbg.value(metadata i32 undef, metadata !14359, metadata !DIExpression()) #24, !dbg !14364
  call void @llvm.dbg.value(metadata i32 undef, metadata !14360, metadata !DIExpression()) #24, !dbg !14364
  tail call fastcc void @k_cpu_idle() #26, !dbg !14365
  br label %4, !dbg !14355, !llvm.loop !14366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14368 {
  tail call void @arch_cpu_idle() #25, !dbg !14369
  ret void, !dbg !14370
}

; Function Attrs: optsize
declare !dbg !14371 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14372 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14387, metadata !DIExpression()), !dbg !14390
  call void @llvm.dbg.value(metadata i32 %1, metadata !14388, metadata !DIExpression()), !dbg !14390
  call void @llvm.dbg.value(metadata i32 %2, metadata !14389, metadata !DIExpression()), !dbg !14390
  %4 = icmp eq i32 %2, 0, !dbg !14391
  %5 = icmp ugt i32 %1, %2, !dbg !14391
  %6 = or i1 %4, %5, !dbg !14391
  br i1 %6, label %11, label %7, !dbg !14391

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14393
  store i32 %1, i32* %8, align 4, !dbg !14394
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14395
  store i32 %2, i32* %9, align 4, !dbg !14396
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14397
  tail call fastcc void @z_waitq_init.143(%union.anon* noundef %10) #26, !dbg !14398
  br label %11, !dbg !14399

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !14390
  ret i32 %12, !dbg !14400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.143(%union.anon* noundef %0) unnamed_addr #4 !dbg !14401 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14406, metadata !DIExpression()), !dbg !14407
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14408
  tail call fastcc void @sys_dlist_init.144(%struct._dnode* noundef %2) #26, !dbg !14409
  ret void, !dbg !14410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.144(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14411 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14416, metadata !DIExpression()), !dbg !14417
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14418
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14419
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14420
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14421
  ret void, !dbg !14422
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14423 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14427, metadata !DIExpression()), !dbg !14513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14514, metadata !DIExpression()) #24, !dbg !14521
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14523, !srcloc !14529
  call void @llvm.dbg.value(metadata i32 undef, metadata !14526, metadata !DIExpression()) #24, !dbg !14530
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()) #24, !dbg !14530
  call void @llvm.dbg.value(metadata i32 undef, metadata !14520, metadata !DIExpression()) #24, !dbg !14521
  call void @llvm.dbg.value(metadata i32 undef, metadata !14428, metadata !DIExpression()), !dbg !14513
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14531
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14532
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14433, metadata !DIExpression()), !dbg !14513
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14533
  br i1 %5, label %8, label %6, !dbg !14535

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14536, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i32 0, metadata !14541, metadata !DIExpression()), !dbg !14542
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 7, i32 1, !dbg !14545
  store i32 0, i32* %7, align 4, !dbg !14546
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #25, !dbg !14547
  br label %16, !dbg !14548

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14549
  %10 = load i32, i32* %9, align 4, !dbg !14549
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14551
  %12 = load i32, i32* %11, align 4, !dbg !14551
  %13 = icmp ne i32 %10, %12, !dbg !14552
  %14 = zext i1 %13 to i32, !dbg !14553
  %15 = add i32 %10, %14, !dbg !14554
  store i32 %15, i32* %9, align 4, !dbg !14554
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !14523
  call void @llvm.dbg.value(metadata i32 %17, metadata !14526, metadata !DIExpression()) #24, !dbg !14530
  call void @llvm.dbg.value(metadata i32 %17, metadata !14520, metadata !DIExpression()) #24, !dbg !14521
  call void @llvm.dbg.value(metadata i32 %17, metadata !14428, metadata !DIExpression()), !dbg !14513
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !14555
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #25, !dbg !14555
  ret void, !dbg !14556
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14557 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14566, metadata !DIExpression()), !dbg !14570
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14565, metadata !DIExpression()), !dbg !14570
  call void @llvm.dbg.value(metadata i32 0, metadata !14567, metadata !DIExpression()), !dbg !14570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14514, metadata !DIExpression()) #24, !dbg !14571
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14573, !srcloc !14529
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14573
  call void @llvm.dbg.value(metadata i32 %4, metadata !14526, metadata !DIExpression()) #24, !dbg !14575
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()) #24, !dbg !14575
  call void @llvm.dbg.value(metadata i32 %4, metadata !14520, metadata !DIExpression()) #24, !dbg !14571
  call void @llvm.dbg.value(metadata i32 %4, metadata !14568, metadata !DIExpression()), !dbg !14570
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14576
  %6 = load i32, i32* %5, align 4, !dbg !14576
  %7 = icmp eq i32 %6, 0, !dbg !14576
  br i1 %7, label %10, label %8, !dbg !14578, !prof !14579

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !14580
  store i32 %9, i32* %5, align 4, !dbg !14580
  call void @llvm.dbg.value(metadata i32 %4, metadata !14582, metadata !DIExpression()) #24, !dbg !14588
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14587, metadata !DIExpression()) #24, !dbg !14588
  call void @llvm.dbg.value(metadata i32 %4, metadata !14590, metadata !DIExpression()) #24, !dbg !14593
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14595, !srcloc !14596
  call void @llvm.dbg.value(metadata i32 0, metadata !14567, metadata !DIExpression()), !dbg !14570
  br label %18, !dbg !14597

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14566, metadata !DIExpression()), !dbg !14570
  %12 = icmp eq i64 %11, 0, !dbg !14598
  br i1 %12, label %13, label %14, !dbg !14600

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !14582, metadata !DIExpression()) #24, !dbg !14601
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14587, metadata !DIExpression()) #24, !dbg !14601
  call void @llvm.dbg.value(metadata i32 %4, metadata !14590, metadata !DIExpression()) #24, !dbg !14604
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14606, !srcloc !14596
  call void @llvm.dbg.value(metadata i32 -16, metadata !14567, metadata !DIExpression()), !dbg !14570
  br label %18, !dbg !14607

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14608
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !14609
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #25, !dbg !14609
  call void @llvm.dbg.value(metadata i32 %17, metadata !14567, metadata !DIExpression()), !dbg !14570
  br label %18, !dbg !14610

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !14570
  call void @llvm.dbg.value(metadata i32 %19, metadata !14567, metadata !DIExpression()), !dbg !14570
  call void @llvm.dbg.label(metadata !14569), !dbg !14611
  ret i32 %19, !dbg !14612
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14613 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14615, metadata !DIExpression()), !dbg !14618
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14514, metadata !DIExpression()) #24, !dbg !14619
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14621, !srcloc !14529
  call void @llvm.dbg.value(metadata i32 undef, metadata !14526, metadata !DIExpression()) #24, !dbg !14623
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()) #24, !dbg !14623
  call void @llvm.dbg.value(metadata i32 undef, metadata !14520, metadata !DIExpression()) #24, !dbg !14619
  call void @llvm.dbg.value(metadata i32 undef, metadata !14617, metadata !DIExpression()), !dbg !14618
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14624
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14616, metadata !DIExpression()), !dbg !14618
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14626
  br i1 %5, label %11, label %6, !dbg !14628

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14536, metadata !DIExpression()), !dbg !14629
  call void @llvm.dbg.value(metadata i32 -11, metadata !14541, metadata !DIExpression()), !dbg !14629
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !14631
  store i32 -11, i32* %8, align 4, !dbg !14632
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !14633
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14624
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14616, metadata !DIExpression()), !dbg !14618
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14626
  br i1 %10, label %11, label %6, !dbg !14628, !llvm.loop !14634

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !14621
  call void @llvm.dbg.value(metadata i32 %12, metadata !14526, metadata !DIExpression()) #24, !dbg !14623
  call void @llvm.dbg.value(metadata i32 %12, metadata !14520, metadata !DIExpression()) #24, !dbg !14619
  call void @llvm.dbg.value(metadata i32 %12, metadata !14617, metadata !DIExpression()), !dbg !14618
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14637
  store i32 0, i32* %13, align 4, !dbg !14638
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14639
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #25, !dbg !14639
  ret void, !dbg !14640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14645, metadata !DIExpression()), !dbg !14649
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14646, metadata !DIExpression()), !dbg !14649
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14650
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14650
  %5 = load i8, i8* %4, align 2, !dbg !14650
  call void @llvm.dbg.value(metadata i8 %5, metadata !14647, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14649
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14651
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14651
  %8 = load i8, i8* %7, align 2, !dbg !14651
  call void @llvm.dbg.value(metadata i8 %8, metadata !14648, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14649
  %9 = icmp eq i8 %8, %5, !dbg !14652
  %10 = sext i8 %5 to i32, !dbg !14654
  %11 = sext i8 %8 to i32, !dbg !14654
  %12 = sub nsw i32 %11, %10, !dbg !14654
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14654
  ret i32 %13, !dbg !14655
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14656 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14660, metadata !DIExpression()), !dbg !14661
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !14662
  %3 = icmp eq i32 %2, 0, !dbg !14664
  br i1 %3, label %8, label %4, !dbg !14665

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14666
  %6 = add i32 %5, %2, !dbg !14668
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14669
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !14670
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14671
  br label %8, !dbg !14672

8:                                                ; preds = %4, %1
  ret void, !dbg !14673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14674 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14678, metadata !DIExpression()), !dbg !14680
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14681
  call void @llvm.dbg.value(metadata i32 %1, metadata !14679, metadata !DIExpression()), !dbg !14680
  ret i32 %1, !dbg !14682
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14687, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 %1, metadata !14688, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 0, metadata !14689, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !14705
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14707, !srcloc !14713
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14707
  call void @llvm.dbg.value(metadata i32 %4, metadata !14710, metadata !DIExpression()) #24, !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !14714
  call void @llvm.dbg.value(metadata i32 %4, metadata !14704, metadata !DIExpression()) #24, !dbg !14705
  call void @llvm.dbg.value(metadata i32 %4, metadata !14695, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()), !dbg !14697
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14715
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14718
  %6 = icmp sgt i32 %0, 0, !dbg !14719
  %7 = icmp sgt i32 %5, 2, !dbg !14721
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14721
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14721
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14722
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14723
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14724
  call void @llvm.dbg.value(metadata i32 %4, metadata !14725, metadata !DIExpression()) #24, !dbg !14731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !14731
  call void @llvm.dbg.value(metadata i32 %4, metadata !14733, metadata !DIExpression()) #24, !dbg !14736
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14738, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 1, metadata !14689, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()), !dbg !14697
  ret void, !dbg !14740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14743, metadata !DIExpression()), !dbg !14744
  call void @llvm.dbg.value(metadata i32 %0, metadata !14745, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14760
  call void @llvm.dbg.value(metadata i32 1000, metadata !14748, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i32 10000, metadata !14749, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i8 1, metadata !14750, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i1 true, metadata !14751, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14760
  call void @llvm.dbg.value(metadata i1 true, metadata !14752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14760
  call void @llvm.dbg.value(metadata i8 0, metadata !14753, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i1 true, metadata !14754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14760
  call void @llvm.dbg.value(metadata i1 false, metadata !14755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14760
  call void @llvm.dbg.value(metadata i64 0, metadata !14756, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i64 0, metadata !14756, metadata !DIExpression()), !dbg !14760
  %2 = mul i32 %0, 10, !dbg !14762
  ret i32 %2, !dbg !14768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14771, metadata !DIExpression()), !dbg !14773
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !14774
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14776, !srcloc !14713
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14776
  call void @llvm.dbg.value(metadata i32 %3, metadata !14710, metadata !DIExpression()) #24, !dbg !14778
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !14778
  call void @llvm.dbg.value(metadata i32 %3, metadata !14704, metadata !DIExpression()) #24, !dbg !14774
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()), !dbg !14773
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14779
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14781
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14782
  br i1 %6, label %7, label %8, !dbg !14783

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14784
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #24, !dbg !14786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %3, metadata !14733, metadata !DIExpression()) #24, !dbg !14788
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14790, !srcloc !14739
  br label %24, !dbg !14791

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14792
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !14793
  %10 = icmp eq i32 %9, 0, !dbg !14793
  br i1 %10, label %21, label %11, !dbg !14795

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !14796
  br i1 %12, label %13, label %21, !dbg !14797

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14798
  %15 = icmp sgt i32 %14, %0, !dbg !14801
  br i1 %15, label %19, label %16, !dbg !14802

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14803
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !14803
  call void @llvm.dbg.value(metadata i32 %18, metadata !14772, metadata !DIExpression()), !dbg !14773
  br label %22, !dbg !14805

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14806
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14806
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14808
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14773
  call void @llvm.dbg.value(metadata i32 %23, metadata !14772, metadata !DIExpression()), !dbg !14773
  call void @llvm.dbg.value(metadata i32 %23, metadata !14725, metadata !DIExpression()) #24, !dbg !14810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !14810
  call void @llvm.dbg.value(metadata i32 %23, metadata !14733, metadata !DIExpression()) #24, !dbg !14812
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !14814, !srcloc !14739
  br label %24, !dbg !14815

24:                                               ; preds = %22, %7
  ret void, !dbg !14815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14816 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14820, metadata !DIExpression()), !dbg !14822
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14823
  %3 = icmp eq i32 %2, 0, !dbg !14823
  br i1 %3, label %16, label %4, !dbg !14824

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14825
  br i1 %5, label %16, label %6, !dbg !14826

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14827
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14827
  %9 = load i8, i8* %8, align 2, !dbg !14827
  %10 = sext i8 %9 to i32, !dbg !14828
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14829
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14830
  br i1 %12, label %16, label %13, !dbg !14831

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14832
  %15 = xor i1 %14, true, !dbg !14833
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14822
  call void @llvm.dbg.value(metadata i1 %17, metadata !14821, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14822
  ret i1 %17, !dbg !14834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14835 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14839, metadata !DIExpression()), !dbg !14841
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14842
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14840, metadata !DIExpression()), !dbg !14841
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14843
  br i1 %3, label %5, label %4, !dbg !14845

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14846
  br label %5, !dbg !14848

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14839, metadata !DIExpression()), !dbg !14841
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14849
  ret i32 %6, !dbg !14850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14851 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14853, metadata !DIExpression()), !dbg !14855
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14856
  %3 = load i8, i8* %2, align 1, !dbg !14856
  call void @llvm.dbg.value(metadata i8 %3, metadata !14854, metadata !DIExpression()), !dbg !14855
  %4 = and i8 %3, 31, !dbg !14857
  %5 = icmp ne i8 %4, 0, !dbg !14858
  ret i1 %5, !dbg !14859
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14860 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14862, metadata !DIExpression()), !dbg !14863
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14864
  br i1 %2, label %3, label %7, !dbg !14866

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14867, metadata !DIExpression()) #24, !dbg !14870
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14873
  %5 = load i8, i8* %4, align 1, !dbg !14874
  %6 = and i8 %5, 127, !dbg !14874
  store i8 %6, i8* %4, align 1, !dbg !14874
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14875, metadata !DIExpression()) #24, !dbg !14878
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14882
  br label %7, !dbg !14883

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14884, metadata !DIExpression()) #24, !dbg !14887
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14889
  %9 = load i8, i8* %8, align 1, !dbg !14890
  %10 = or i8 %9, -128, !dbg !14890
  store i8 %10, i8* %8, align 1, !dbg !14890
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14891, metadata !DIExpression()) #24, !dbg !14894
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14898, metadata !DIExpression()) #24, !dbg !14906
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #24, !dbg !14906
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14908
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14905, metadata !DIExpression()) #24, !dbg !14906
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14910
  br i1 %12, label %23, label %13, !dbg !14908

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14905, metadata !DIExpression()) #24, !dbg !14906
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14912
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14905, metadata !DIExpression()) #24, !dbg !14906
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14913
  %17 = icmp sgt i32 %16, 0, !dbg !14916
  br i1 %17, label %18, label %20, !dbg !14917

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14918
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !14920
  br label %25, !dbg !14921

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14910
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14905, metadata !DIExpression()) #24, !dbg !14906
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14910
  br i1 %22, label %23, label %13, !dbg !14908, !llvm.loop !14922

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14924
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !14925
  br label %25, !dbg !14926

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14927
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14928
  %28 = zext i1 %27 to i32, !dbg !14928
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !14929
  ret void, !dbg !14930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14931 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14933, metadata !DIExpression()), !dbg !14934
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !14935
  ret i1 %2, !dbg !14936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14937 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14939, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14940, metadata !DIExpression()), !dbg !14941
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14942
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !14943
  ret void, !dbg !14944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14945 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14949, metadata !DIExpression()), !dbg !14950
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14951
  br i1 %2, label %6, label %3, !dbg !14951

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14952
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14952
  br label %6, !dbg !14951

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14951
  ret %struct._dnode* %7, !dbg !14953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14954 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14958, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14959, metadata !DIExpression()), !dbg !14962
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14963
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14963
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14960, metadata !DIExpression()), !dbg !14962
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14964
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14965
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14966
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14967
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14968
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14969
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14970
  ret void, !dbg !14971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14972 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14976, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14977, metadata !DIExpression()), !dbg !14978
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14979
  br i1 %3, label %6, label %4, !dbg !14980

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !14981
  br label %6, !dbg !14980

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14980
  ret %struct._dnode* %7, !dbg !14982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14983 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14987, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14988, metadata !DIExpression()), !dbg !14990
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14991
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14991
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14989, metadata !DIExpression()), !dbg !14990
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14992
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14993
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14994
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14995
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14996
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14997
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14998
  ret void, !dbg !14999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15000 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15002, metadata !DIExpression()), !dbg !15004
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15005
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15012, metadata !DIExpression()) #24, !dbg !15014
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15015
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15016
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15016
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15003, metadata !DIExpression()), !dbg !15004
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15017, metadata !DIExpression()) #24, !dbg !15023
  call void @llvm.dbg.value(metadata i32 %0, metadata !15022, metadata !DIExpression()) #24, !dbg !15023
  %6 = icmp eq i32 %0, 0, !dbg !15026
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15028
  br i1 %6, label %8, label %15, !dbg !15029

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15030
  br i1 %9, label %15, label %10, !dbg !15032

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15033
  br i1 %11, label %15, label %12, !dbg !15035

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15036
  %14 = icmp eq i32 %13, 0, !dbg !15036
  br i1 %14, label %18, label %15, !dbg !15038

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15039
  br i1 %16, label %18, label %17, !dbg !15042

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15043
  br label %18, !dbg !15045

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15028
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15028
  ret void, !dbg !15046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !15047 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15051, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15052, metadata !DIExpression()), !dbg !15054
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !15055
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15053, metadata !DIExpression()), !dbg !15054
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15052, metadata !DIExpression()), !dbg !15054
  ret %struct.k_thread* %3, !dbg !15056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15057 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15059, metadata !DIExpression()), !dbg !15060
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15061
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15062
  %4 = xor i1 %3, true, !dbg !15063
  ret i1 %4, !dbg !15064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15065 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15067, metadata !DIExpression()), !dbg !15068
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15069
  %3 = load i16, i16* %2, align 2, !dbg !15069
  %4 = icmp ult i16 %3, 128, !dbg !15070
  %5 = zext i1 %4 to i32, !dbg !15070
  ret i32 %5, !dbg !15071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15072 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15078, metadata !DIExpression()), !dbg !15079
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15080
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15081
  %4 = xor i1 %3, true, !dbg !15082
  ret i1 %4, !dbg !15083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15084 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15090, metadata !DIExpression()), !dbg !15091
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15092
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15092
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15093
  ret i1 %4, !dbg !15094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15095 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15097, metadata !DIExpression()), !dbg !15099
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15098, metadata !DIExpression()), !dbg !15099
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15100
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15100
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15101
  br i1 %5, label %9, label %6, !dbg !15102

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15103
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15103
  br label %9, !dbg !15102

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15102
  ret %struct._dnode* %10, !dbg !15104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15105 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15109, metadata !DIExpression()), !dbg !15110
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15111
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15111
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15112
  ret i1 %4, !dbg !15113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !15114 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15118, metadata !DIExpression()), !dbg !15121
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15122
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15122
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15119, metadata !DIExpression()), !dbg !15121
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15123
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15123
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15120, metadata !DIExpression()), !dbg !15121
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15124
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15125
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15126
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15127
  tail call fastcc void @sys_dnode_init.149(%struct._dnode* noundef %0) #26, !dbg !15128
  ret void, !dbg !15129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.149(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15130 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15132, metadata !DIExpression()), !dbg !15133
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15134
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15135
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15136
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15137
  ret void, !dbg !15138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15143, metadata !DIExpression()), !dbg !15145
  call void @llvm.dbg.value(metadata i32 128, metadata !15144, metadata !DIExpression()), !dbg !15145
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15146
  %3 = load i8, i8* %2, align 1, !dbg !15146
  %4 = icmp slt i8 %3, 0, !dbg !15147
  ret i1 %4, !dbg !15148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15153, metadata !DIExpression()), !dbg !15155
  call void @llvm.dbg.value(metadata i32 %1, metadata !15154, metadata !DIExpression()), !dbg !15155
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15156
  ret i1 %3, !dbg !15157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !15158 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15160, metadata !DIExpression()), !dbg !15161
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15162
  ret i1 %2, !dbg !15163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15166, metadata !DIExpression()), !dbg !15168
  call void @llvm.dbg.value(metadata i32 %1, metadata !15167, metadata !DIExpression()), !dbg !15168
  %3 = icmp slt i32 %0, %1, !dbg !15169
  ret i1 %3, !dbg !15170
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15171 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15173, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.value(metadata i32 0, metadata !15174, metadata !DIExpression()), !dbg !15178
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15179
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15181, !srcloc !14713
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15181
  call void @llvm.dbg.value(metadata i32 %3, metadata !14710, metadata !DIExpression()) #24, !dbg !15183
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15183
  call void @llvm.dbg.value(metadata i32 %3, metadata !14704, metadata !DIExpression()) #24, !dbg !15179
  call void @llvm.dbg.value(metadata i32 %3, metadata !15176, metadata !DIExpression()), !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !15174, metadata !DIExpression()), !dbg !15178
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15184
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #24, !dbg !15189
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15189
  call void @llvm.dbg.value(metadata i32 %3, metadata !14733, metadata !DIExpression()) #24, !dbg !15191
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15193, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 1, metadata !15174, metadata !DIExpression()), !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !15174, metadata !DIExpression()), !dbg !15178
  ret void, !dbg !15194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15197, metadata !DIExpression()), !dbg !15198
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15199
  br i1 %2, label %24, label %3, !dbg !15201

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15202
  br i1 %4, label %5, label %24, !dbg !15203

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14884, metadata !DIExpression()) #24, !dbg !15204
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15207
  %7 = load i8, i8* %6, align 1, !dbg !15208
  %8 = or i8 %7, -128, !dbg !15208
  store i8 %8, i8* %6, align 1, !dbg !15208
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14891, metadata !DIExpression()) #24, !dbg !15209
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14898, metadata !DIExpression()) #24, !dbg !15211
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #24, !dbg !15211
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15213
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14905, metadata !DIExpression()) #24, !dbg !15211
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15214
  br i1 %10, label %21, label %11, !dbg !15213

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14905, metadata !DIExpression()) #24, !dbg !15211
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15215
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14905, metadata !DIExpression()) #24, !dbg !15211
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15216
  %15 = icmp sgt i32 %14, 0, !dbg !15217
  br i1 %15, label %16, label %18, !dbg !15218

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15219
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15220
  br label %23, !dbg !15221

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15214
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14905, metadata !DIExpression()) #24, !dbg !15211
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15214
  br i1 %20, label %21, label %11, !dbg !15213, !llvm.loop !15222

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15224
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15225
  br label %23, !dbg !15226

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15227
  br label %24, !dbg !15228

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15230 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15232, metadata !DIExpression()), !dbg !15233
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15234
  br i1 %2, label %6, label %3, !dbg !15235

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15236
  %5 = xor i1 %4, true, !dbg !15235
  br label %6, !dbg !15235

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15238 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15240, metadata !DIExpression()), !dbg !15244
  call void @llvm.dbg.value(metadata i32 0, metadata !15241, metadata !DIExpression()), !dbg !15245
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15246
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15248, !srcloc !14713
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15248
  call void @llvm.dbg.value(metadata i32 %3, metadata !14710, metadata !DIExpression()) #24, !dbg !15250
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15250
  call void @llvm.dbg.value(metadata i32 %3, metadata !14704, metadata !DIExpression()) #24, !dbg !15246
  call void @llvm.dbg.value(metadata i32 %3, metadata !15243, metadata !DIExpression()), !dbg !15245
  call void @llvm.dbg.value(metadata i32 undef, metadata !15241, metadata !DIExpression()), !dbg !15245
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15251
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #24, !dbg !15254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15254
  call void @llvm.dbg.value(metadata i32 %3, metadata !14733, metadata !DIExpression()) #24, !dbg !15256
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15258, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 1, metadata !15241, metadata !DIExpression()), !dbg !15245
  call void @llvm.dbg.value(metadata i32 undef, metadata !15241, metadata !DIExpression()), !dbg !15245
  ret void, !dbg !15259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15260 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15262, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15265
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15267, !srcloc !14713
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15267
  call void @llvm.dbg.value(metadata i32 %3, metadata !14710, metadata !DIExpression()) #24, !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15269
  call void @llvm.dbg.value(metadata i32 %3, metadata !14704, metadata !DIExpression()) #24, !dbg !15265
  call void @llvm.dbg.value(metadata i32 %3, metadata !15263, metadata !DIExpression()), !dbg !15264
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15270
  br i1 %4, label %5, label %6, !dbg !15272

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #24, !dbg !15273
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15273
  call void @llvm.dbg.value(metadata i32 %3, metadata !14733, metadata !DIExpression()) #24, !dbg !15276
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15278, !srcloc !14739
  br label %8, !dbg !15279

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.154(%struct.k_thread* noundef %0) #26, !dbg !15280
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15281
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15282
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15282
  br label %8, !dbg !15283

8:                                                ; preds = %6, %5
  ret void, !dbg !15283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15284 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15286, metadata !DIExpression()), !dbg !15287
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15288
  %3 = load i8, i8* %2, align 1, !dbg !15288
  %4 = and i8 %3, 4, !dbg !15289
  %5 = icmp eq i8 %4, 0, !dbg !15290
  ret i1 %5, !dbg !15291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.154(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15292 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15294, metadata !DIExpression()), !dbg !15295
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15296
  %3 = load i8, i8* %2, align 1, !dbg !15297
  %4 = and i8 %3, -5, !dbg !15297
  store i8 %4, i8* %2, align 1, !dbg !15297
  ret void, !dbg !15298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15299 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15302, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15301, metadata !DIExpression()), !dbg !15303
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !15304
  br i1 %4, label %5, label %9, !dbg !15306

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !15307
  br i1 %6, label %7, label %9, !dbg !15308

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15309, metadata !DIExpression()) #24, !dbg !15315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15314, metadata !DIExpression()) #24, !dbg !15315
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15318
  br label %10, !dbg !15319

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #24, !dbg !15320
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15320
  call void @llvm.dbg.value(metadata i32 %3, metadata !14733, metadata !DIExpression()) #24, !dbg !15323
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15325, !srcloc !14739
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15326
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15331, metadata !DIExpression()), !dbg !15332
  call void @llvm.dbg.value(metadata i32 %0, metadata !15333, metadata !DIExpression()), !dbg !15338
  %2 = icmp eq i32 %0, 0, !dbg !15340
  br i1 %2, label %3, label %6, !dbg !15341

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15342, !srcloc !15349
  call void @llvm.dbg.value(metadata i32 %4, metadata !15345, metadata !DIExpression()) #24, !dbg !15350
  %5 = icmp eq i32 %4, 0, !dbg !15351
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15332
  ret i1 %7, !dbg !15352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15353 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15356
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15355, metadata !DIExpression()), !dbg !15357
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15358
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15359
  ret i1 %3, !dbg !15360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15363, metadata !DIExpression()), !dbg !15365
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15366
  call void @llvm.dbg.value(metadata i32 %2, metadata !15364, metadata !DIExpression()), !dbg !15365
  ret i32 %2, !dbg !15367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15368 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15370, metadata !DIExpression()), !dbg !15374
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15375
  call void @llvm.dbg.value(metadata i32 0, metadata !15371, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15377
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15379, !srcloc !14713
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15379
  call void @llvm.dbg.value(metadata i32 %4, metadata !14710, metadata !DIExpression()) #24, !dbg !15381
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15381
  call void @llvm.dbg.value(metadata i32 %4, metadata !14704, metadata !DIExpression()) #24, !dbg !15377
  call void @llvm.dbg.value(metadata i32 %4, metadata !15373, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()), !dbg !15376
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15382
  br i1 %5, label %6, label %10, !dbg !15386

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14867, metadata !DIExpression()) #24, !dbg !15387
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15390
  %8 = load i8, i8* %7, align 1, !dbg !15391
  %9 = and i8 %8, 127, !dbg !15391
  store i8 %9, i8* %7, align 1, !dbg !15391
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14875, metadata !DIExpression()) #24, !dbg !15392
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15394
  br label %10, !dbg !15395

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !15396
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15397
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15398
  %13 = zext i1 %12 to i32, !dbg !15398
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !15399
  call void @llvm.dbg.value(metadata i32 %4, metadata !14725, metadata !DIExpression()) #24, !dbg !15400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15400
  call void @llvm.dbg.value(metadata i32 %4, metadata !14733, metadata !DIExpression()) #24, !dbg !15402
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15404, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 1, metadata !15371, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()), !dbg !15376
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15405
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15407
  br i1 %15, label %16, label %17, !dbg !15408

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15409
  br label %17, !dbg !15411

17:                                               ; preds = %16, %10
  ret void, !dbg !15412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15413 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15415, metadata !DIExpression()), !dbg !15416
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15417
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15418
  ret i32 %3, !dbg !15419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15420 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15422, metadata !DIExpression()), !dbg !15423
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15424
  %3 = load i8, i8* %2, align 1, !dbg !15425
  %4 = or i8 %3, 16, !dbg !15425
  store i8 %4, i8* %2, align 1, !dbg !15425
  ret void, !dbg !15426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15427 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15428, !srcloc !14713
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15428
  call void @llvm.dbg.value(metadata i32 %2, metadata !14710, metadata !DIExpression()) #24, !dbg !15430
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15430
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !15431
  ret void, !dbg !15432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15435, metadata !DIExpression()), !dbg !15436
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !15437
  br i1 %2, label %3, label %5, !dbg !15439

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15440
  br label %6, !dbg !15442

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14733, metadata !DIExpression()) #24, !dbg !15443
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !15446, !srcloc !14739
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15448 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15450, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15453
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15455, !srcloc !14713
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15455
  call void @llvm.dbg.value(metadata i32 %3, metadata !14710, metadata !DIExpression()) #24, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15457
  call void @llvm.dbg.value(metadata i32 %3, metadata !14704, metadata !DIExpression()) #24, !dbg !15453
  call void @llvm.dbg.value(metadata i32 %3, metadata !15451, metadata !DIExpression()), !dbg !15452
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !15458
  br i1 %4, label %6, label %5, !dbg !15460

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #24, !dbg !15461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15461
  call void @llvm.dbg.value(metadata i32 %3, metadata !14733, metadata !DIExpression()) #24, !dbg !15464
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15466, !srcloc !14739
  br label %8, !dbg !15467

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15468
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15469
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15470
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15470
  br label %8, !dbg !15471

8:                                                ; preds = %6, %5
  ret void, !dbg !15471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15472 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15474, metadata !DIExpression()), !dbg !15475
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15476
  %3 = load i8, i8* %2, align 1, !dbg !15476
  %4 = and i8 %3, 16, !dbg !15477
  %5 = icmp ne i8 %4, 0, !dbg !15478
  ret i1 %5, !dbg !15479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15480 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15482, metadata !DIExpression()), !dbg !15483
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15484
  %3 = load i8, i8* %2, align 1, !dbg !15485
  %4 = and i8 %3, -17, !dbg !15485
  store i8 %4, i8* %2, align 1, !dbg !15485
  ret void, !dbg !15486
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15487 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15497, metadata !DIExpression()), !dbg !15501
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15495, metadata !DIExpression()), !dbg !15501
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15496, metadata !DIExpression()), !dbg !15501
  call void @llvm.dbg.value(metadata i32 0, metadata !15498, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15503
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15505, !srcloc !14713
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15505
  call void @llvm.dbg.value(metadata i32 %5, metadata !14710, metadata !DIExpression()) #24, !dbg !15507
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15507
  call void @llvm.dbg.value(metadata i32 %5, metadata !14704, metadata !DIExpression()) #24, !dbg !15503
  call void @llvm.dbg.value(metadata i32 %5, metadata !15500, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata i32 undef, metadata !15498, metadata !DIExpression()), !dbg !15502
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15508
  call void @llvm.dbg.value(metadata i32 %5, metadata !14725, metadata !DIExpression()) #24, !dbg !15511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15511
  call void @llvm.dbg.value(metadata i32 %5, metadata !14733, metadata !DIExpression()) #24, !dbg !15513
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !15515, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 1, metadata !15498, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata i32 undef, metadata !15498, metadata !DIExpression()), !dbg !15502
  ret void, !dbg !15516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15517 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15521, metadata !DIExpression()), !dbg !15522
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15519, metadata !DIExpression()), !dbg !15522
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15520, metadata !DIExpression()), !dbg !15522
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !15523
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !15524
  ret void, !dbg !15525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15526 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15530, metadata !DIExpression()), !dbg !15532
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15531, metadata !DIExpression()), !dbg !15532
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !15533
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !15534
  %3 = icmp eq %union.anon* %1, null, !dbg !15535
  br i1 %3, label %21, label %4, !dbg !15537

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15538
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15540
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15541
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14898, metadata !DIExpression()) #24, !dbg !15542
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #24, !dbg !15542
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15544
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14905, metadata !DIExpression()) #24, !dbg !15542
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15545
  br i1 %8, label %19, label %9, !dbg !15544

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14905, metadata !DIExpression()) #24, !dbg !15542
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15546
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14905, metadata !DIExpression()) #24, !dbg !15542
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15547
  %13 = icmp sgt i32 %12, 0, !dbg !15548
  br i1 %13, label %14, label %16, !dbg !15549

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15550
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15551
  br label %21, !dbg !15552

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15545
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14905, metadata !DIExpression()) #24, !dbg !15542
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15545
  br i1 %18, label %19, label %9, !dbg !15544, !llvm.loop !15553

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15555
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15556
  br label %21, !dbg !15557

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15559 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15564, metadata !DIExpression()), !dbg !15565
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15563, metadata !DIExpression()), !dbg !15565
  %4 = icmp eq i64 %3, -1, !dbg !15566
  br i1 %4, label %6, label %5, !dbg !15568

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.157(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15569
  br label %6, !dbg !15571

6:                                                ; preds = %5, %2
  ret void, !dbg !15572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.157(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15573 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15576, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15575, metadata !DIExpression()), !dbg !15577
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15578
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15579
  ret void, !dbg !15580
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15581 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15583, metadata !DIExpression()), !dbg !15591
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15592
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15592
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15584, metadata !DIExpression()), !dbg !15591
  call void @llvm.dbg.value(metadata i32 0, metadata !15585, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15594
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15596, !srcloc !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14710, metadata !DIExpression()) #24, !dbg !15598
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15598
  call void @llvm.dbg.value(metadata i32 undef, metadata !14704, metadata !DIExpression()) #24, !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !15587, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !15585, metadata !DIExpression()), !dbg !15593
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15599
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15600
  %7 = load i8, i8* %6, align 1, !dbg !15600
  %8 = and i8 %7, 40, !dbg !15601
  %9 = icmp eq i8 %8, 0, !dbg !15601
  call void @llvm.dbg.value(metadata i1 %9, metadata !15588, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15602
  br i1 %9, label %10, label %17, !dbg !15603

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15604
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15604
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15604
  %14 = icmp eq %union.anon* %13, null, !dbg !15608
  br i1 %14, label %16, label %15, !dbg !15609

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15610
  br label %16, !dbg !15612

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.154(%struct.k_thread* noundef nonnull %3) #26, !dbg !15613
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15614
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15615
  br label %17, !dbg !15616

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15596
  call void @llvm.dbg.value(metadata i32 %18, metadata !14710, metadata !DIExpression()) #24, !dbg !15598
  call void @llvm.dbg.value(metadata i32 %18, metadata !14704, metadata !DIExpression()) #24, !dbg !15594
  call void @llvm.dbg.value(metadata i32 %18, metadata !15587, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #24, !dbg !15617
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14733, metadata !DIExpression()) #24, !dbg !15619
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !15621, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 1, metadata !15585, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !15585, metadata !DIExpression()), !dbg !15593
  ret void, !dbg !15622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15623 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15625, metadata !DIExpression()), !dbg !15626
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15627
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15628
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15629
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15630
  ret void, !dbg !15631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15632 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15634, metadata !DIExpression()), !dbg !15635
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15636
  %3 = load i8, i8* %2, align 1, !dbg !15637
  %4 = and i8 %3, -3, !dbg !15637
  store i8 %4, i8* %2, align 1, !dbg !15637
  ret void, !dbg !15638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15639 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15641, metadata !DIExpression()), !dbg !15642
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15643
  br i1 %2, label %3, label %7, !dbg !15645

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14867, metadata !DIExpression()) #24, !dbg !15646
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15649
  %5 = load i8, i8* %4, align 1, !dbg !15650
  %6 = and i8 %5, 127, !dbg !15650
  store i8 %6, i8* %4, align 1, !dbg !15650
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14875, metadata !DIExpression()) #24, !dbg !15651
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15653
  br label %7, !dbg !15654

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15655
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15656
  %10 = zext i1 %9 to i32, !dbg !15656
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15657
  ret void, !dbg !15658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15659 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15661, metadata !DIExpression()), !dbg !15662
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15663
  %3 = load i8, i8* %2, align 1, !dbg !15664
  %4 = or i8 %3, 2, !dbg !15664
  store i8 %4, i8* %2, align 1, !dbg !15664
  ret void, !dbg !15665
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15666 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15668, metadata !DIExpression()), !dbg !15672
  call void @llvm.dbg.value(metadata i32 0, metadata !15669, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15674
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15676, !srcloc !14713
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15676
  call void @llvm.dbg.value(metadata i32 %3, metadata !14710, metadata !DIExpression()) #24, !dbg !15678
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15678
  call void @llvm.dbg.value(metadata i32 %3, metadata !14704, metadata !DIExpression()) #24, !dbg !15674
  call void @llvm.dbg.value(metadata i32 %3, metadata !15671, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.value(metadata i32 undef, metadata !15669, metadata !DIExpression()), !dbg !15673
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15679
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #24, !dbg !15682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15682
  call void @llvm.dbg.value(metadata i32 %3, metadata !14733, metadata !DIExpression()) #24, !dbg !15684
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15686, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 1, metadata !15669, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.value(metadata i32 undef, metadata !15669, metadata !DIExpression()), !dbg !15673
  ret void, !dbg !15687
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15688 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15694, metadata !DIExpression()), !dbg !15699
  call void @llvm.dbg.value(metadata i32 %0, metadata !15692, metadata !DIExpression()), !dbg !15699
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15693, metadata !DIExpression()), !dbg !15699
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15700
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15701
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15702
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15703
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15704
  call void @llvm.dbg.value(metadata i32 %6, metadata !15695, metadata !DIExpression()), !dbg !15699
  call void @llvm.dbg.value(metadata i32 0, metadata !15696, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15706
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15708, !srcloc !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14710, metadata !DIExpression()) #24, !dbg !15710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14704, metadata !DIExpression()) #24, !dbg !15706
  call void @llvm.dbg.value(metadata i32 undef, metadata !15698, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.value(metadata i32 undef, metadata !15696, metadata !DIExpression()), !dbg !15705
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15711
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15715
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15716
  br i1 %10, label %11, label %12, !dbg !15717

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15718
  br label %12, !dbg !15720

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15708
  call void @llvm.dbg.value(metadata i32 %13, metadata !14710, metadata !DIExpression()) #24, !dbg !15710
  call void @llvm.dbg.value(metadata i32 %13, metadata !14704, metadata !DIExpression()) #24, !dbg !15706
  call void @llvm.dbg.value(metadata i32 %13, metadata !15698, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #24, !dbg !15721
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15721
  call void @llvm.dbg.value(metadata i32 undef, metadata !14733, metadata !DIExpression()) #24, !dbg !15723
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !15725, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 1, metadata !15696, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.value(metadata i32 undef, metadata !15696, metadata !DIExpression()), !dbg !15705
  ret i32 %6, !dbg !15726
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15727 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15732, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata i64 undef, metadata !15734, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15731, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15733, metadata !DIExpression()), !dbg !15735
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15736
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15737
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15738
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15740, !srcloc !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14710, metadata !DIExpression()) #24, !dbg !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !14704, metadata !DIExpression()) #24, !dbg !15738
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15743
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15744
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15309, metadata !DIExpression()) #24, !dbg !15745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15314, metadata !DIExpression()) #24, !dbg !15745
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15747
  ret i32 %9, !dbg !15748
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15749 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15753, metadata !DIExpression()), !dbg !15758
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15754, metadata !DIExpression()), !dbg !15758
  call void @llvm.dbg.value(metadata i32 0, metadata !15755, metadata !DIExpression()), !dbg !15759
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15760
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15762, !srcloc !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14710, metadata !DIExpression()) #24, !dbg !15764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14704, metadata !DIExpression()) #24, !dbg !15760
  call void @llvm.dbg.value(metadata i32 undef, metadata !15757, metadata !DIExpression()), !dbg !15759
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15754, metadata !DIExpression()), !dbg !15758
  call void @llvm.dbg.value(metadata i32 undef, metadata !15755, metadata !DIExpression()), !dbg !15759
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15765
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15754, metadata !DIExpression()), !dbg !15758
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15768
  br i1 %5, label %7, label %6, !dbg !15770

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15771
  br label %7, !dbg !15773

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15762
  call void @llvm.dbg.value(metadata i32 %8, metadata !14710, metadata !DIExpression()) #24, !dbg !15764
  call void @llvm.dbg.value(metadata i32 %8, metadata !14704, metadata !DIExpression()) #24, !dbg !15760
  call void @llvm.dbg.value(metadata i32 %8, metadata !15757, metadata !DIExpression()), !dbg !15759
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #24, !dbg !15774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14733, metadata !DIExpression()) #24, !dbg !15776
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15778, !srcloc !14739
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15754, metadata !DIExpression()), !dbg !15758
  call void @llvm.dbg.value(metadata i32 undef, metadata !15755, metadata !DIExpression()), !dbg !15759
  ret %struct.k_thread* %4, !dbg !15779
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15780 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15782, metadata !DIExpression()), !dbg !15787
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15783, metadata !DIExpression()), !dbg !15787
  call void @llvm.dbg.value(metadata i32 0, metadata !15784, metadata !DIExpression()), !dbg !15788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15789
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15791, !srcloc !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14710, metadata !DIExpression()) #24, !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !14704, metadata !DIExpression()) #24, !dbg !15789
  call void @llvm.dbg.value(metadata i32 undef, metadata !15786, metadata !DIExpression()), !dbg !15788
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15783, metadata !DIExpression()), !dbg !15787
  call void @llvm.dbg.value(metadata i32 undef, metadata !15784, metadata !DIExpression()), !dbg !15788
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15794
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15783, metadata !DIExpression()), !dbg !15787
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15797
  br i1 %5, label %8, label %6, !dbg !15799

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15800
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15802
  br label %8, !dbg !15803

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15791
  call void @llvm.dbg.value(metadata i32 %9, metadata !14710, metadata !DIExpression()) #24, !dbg !15793
  call void @llvm.dbg.value(metadata i32 %9, metadata !14704, metadata !DIExpression()) #24, !dbg !15789
  call void @llvm.dbg.value(metadata i32 %9, metadata !15786, metadata !DIExpression()), !dbg !15788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #24, !dbg !15804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14733, metadata !DIExpression()) #24, !dbg !15806
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15808, !srcloc !14739
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15783, metadata !DIExpression()), !dbg !15787
  call void @llvm.dbg.value(metadata i32 undef, metadata !15784, metadata !DIExpression()), !dbg !15788
  ret %struct.k_thread* %4, !dbg !15809
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15810 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15812, metadata !DIExpression()), !dbg !15813
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15668, metadata !DIExpression()) #24, !dbg !15814
  call void @llvm.dbg.value(metadata i32 0, metadata !15669, metadata !DIExpression()) #24, !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15817
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15819, !srcloc !14713
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15819
  call void @llvm.dbg.value(metadata i32 %3, metadata !14710, metadata !DIExpression()) #24, !dbg !15821
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15821
  call void @llvm.dbg.value(metadata i32 %3, metadata !14704, metadata !DIExpression()) #24, !dbg !15817
  call void @llvm.dbg.value(metadata i32 %3, metadata !15671, metadata !DIExpression()) #24, !dbg !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15669, metadata !DIExpression()) #24, !dbg !15816
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15822
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #24, !dbg !15823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15823
  call void @llvm.dbg.value(metadata i32 %3, metadata !14733, metadata !DIExpression()) #24, !dbg !15825
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15827, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 1, metadata !15669, metadata !DIExpression()) #24, !dbg !15816
  call void @llvm.dbg.value(metadata i32 undef, metadata !15669, metadata !DIExpression()) #24, !dbg !15816
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15828
  ret void, !dbg !15829
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15830 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15832, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.value(metadata i32 %1, metadata !15833, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.value(metadata i8 0, metadata !15834, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.value(metadata i32 0, metadata !15835, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15840
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15842, !srcloc !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14710, metadata !DIExpression()) #24, !dbg !15844
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15844
  call void @llvm.dbg.value(metadata i32 undef, metadata !14704, metadata !DIExpression()) #24, !dbg !15840
  call void @llvm.dbg.value(metadata i32 undef, metadata !15837, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i8 poison, metadata !15834, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.value(metadata i32 undef, metadata !15835, metadata !DIExpression()), !dbg !15839
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15845
  call void @llvm.dbg.value(metadata i1 %6, metadata !15834, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15838
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15848

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14867, metadata !DIExpression()) #24, !dbg !15849
  %11 = load i8, i8* %4, align 1, !dbg !15855
  %12 = and i8 %11, 127, !dbg !15855
  store i8 %12, i8* %4, align 1, !dbg !15855
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14875, metadata !DIExpression()) #24, !dbg !15856
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15858
  store i8 %9, i8* %8, align 2, !dbg !15859
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14884, metadata !DIExpression()) #24, !dbg !15860
  %13 = load i8, i8* %4, align 1, !dbg !15862
  %14 = or i8 %13, -128, !dbg !15862
  store i8 %14, i8* %4, align 1, !dbg !15862
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14891, metadata !DIExpression()) #24, !dbg !15863
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14898, metadata !DIExpression()) #24, !dbg !15865
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #24, !dbg !15865
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15867
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14905, metadata !DIExpression()) #24, !dbg !15865
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15868
  br i1 %16, label %26, label %17, !dbg !15867

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14905, metadata !DIExpression()) #24, !dbg !15865
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15869
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14905, metadata !DIExpression()) #24, !dbg !15865
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15870
  %21 = icmp sgt i32 %20, 0, !dbg !15871
  br i1 %21, label %22, label %23, !dbg !15872

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15873
  br label %27, !dbg !15874

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15868
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14905, metadata !DIExpression()) #24, !dbg !15865
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15868
  br i1 %25, label %26, label %17, !dbg !15867, !llvm.loop !15875

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15877
  br label %27, !dbg !15878

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15879
  br label %29, !dbg !15880

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15881
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15842
  call void @llvm.dbg.value(metadata i32 %30, metadata !14710, metadata !DIExpression()) #24, !dbg !15844
  call void @llvm.dbg.value(metadata i32 %30, metadata !14704, metadata !DIExpression()) #24, !dbg !15840
  call void @llvm.dbg.value(metadata i32 %30, metadata !15837, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #24, !dbg !15883
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14733, metadata !DIExpression()) #24, !dbg !15885
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !15887, !srcloc !14739
  call void @llvm.dbg.value(metadata i8 poison, metadata !15834, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.value(metadata i32 undef, metadata !15835, metadata !DIExpression()), !dbg !15839
  ret i1 %6, !dbg !15888
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15889 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15893, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 %1, metadata !15894, metadata !DIExpression()), !dbg !15896
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15897
  call void @llvm.dbg.value(metadata i1 %3, metadata !15895, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15896
  br i1 %3, label %4, label %12, !dbg !15898

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15900
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15901
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15901
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15901
  %9 = load i8, i8* %8, align 1, !dbg !15901
  %10 = icmp eq i8 %9, 0, !dbg !15902
  br i1 %10, label %11, label %12, !dbg !15903

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15904
  br label %12, !dbg !15906

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15907
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15908 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15910, metadata !DIExpression()), !dbg !15913
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15914
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15916, !srcloc !14713
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15916
  call void @llvm.dbg.value(metadata i32 %2, metadata !14710, metadata !DIExpression()) #24, !dbg !15918
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15918
  call void @llvm.dbg.value(metadata i32 %2, metadata !14704, metadata !DIExpression()) #24, !dbg !15914
  call void @llvm.dbg.value(metadata i32 %2, metadata !15912, metadata !DIExpression()), !dbg !15913
  call void @llvm.dbg.value(metadata i32 undef, metadata !15910, metadata !DIExpression()), !dbg !15913
  tail call fastcc void @z_sched_lock() #26, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %2, metadata !14725, metadata !DIExpression()) #24, !dbg !15922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15922
  call void @llvm.dbg.value(metadata i32 %2, metadata !14733, metadata !DIExpression()) #24, !dbg !15924
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15926, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 1, metadata !15910, metadata !DIExpression()), !dbg !15913
  call void @llvm.dbg.value(metadata i32 undef, metadata !15910, metadata !DIExpression()), !dbg !15913
  ret void, !dbg !15927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15928 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15929
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15930
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15930
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15930
  %5 = load i8, i8* %4, align 1, !dbg !15931
  %6 = add i8 %5, -1, !dbg !15931
  store i8 %6, i8* %4, align 1, !dbg !15931
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15932, !srcloc !15934
  ret void, !dbg !15935
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15936 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15938, metadata !DIExpression()), !dbg !15941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !15942
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15944, !srcloc !14713
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15944
  call void @llvm.dbg.value(metadata i32 %2, metadata !14710, metadata !DIExpression()) #24, !dbg !15946
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !15946
  call void @llvm.dbg.value(metadata i32 %2, metadata !14704, metadata !DIExpression()) #24, !dbg !15942
  call void @llvm.dbg.value(metadata i32 %2, metadata !15940, metadata !DIExpression()), !dbg !15941
  call void @llvm.dbg.value(metadata i32 undef, metadata !15938, metadata !DIExpression()), !dbg !15941
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15947
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15950
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15950
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15950
  %7 = load i8, i8* %6, align 1, !dbg !15951
  %8 = add i8 %7, 1, !dbg !15951
  store i8 %8, i8* %6, align 1, !dbg !15951
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15952
  call void @llvm.dbg.value(metadata i32 %2, metadata !14725, metadata !DIExpression()) #24, !dbg !15953
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15953
  call void @llvm.dbg.value(metadata i32 %2, metadata !14733, metadata !DIExpression()) #24, !dbg !15955
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15957, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 1, metadata !15938, metadata !DIExpression()), !dbg !15941
  call void @llvm.dbg.value(metadata i32 undef, metadata !15938, metadata !DIExpression()), !dbg !15941
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15958
  ret void, !dbg !15959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15960 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15961
  ret %struct.k_thread* %1, !dbg !15962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15963 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15967, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15968, metadata !DIExpression()), !dbg !15972
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15973
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15969, metadata !DIExpression()), !dbg !15972
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15974
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15970, metadata !DIExpression()), !dbg !15972
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !15975
  call void @llvm.dbg.value(metadata i32 %5, metadata !15971, metadata !DIExpression()), !dbg !15972
  %6 = icmp sgt i32 %5, 0, !dbg !15976
  br i1 %6, label %17, label %7, !dbg !15978

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15979
  br i1 %8, label %17, label %9, !dbg !15981

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15982
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15982
  %12 = load i32, i32* %11, align 8, !dbg !15982
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15984
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15984
  %15 = load i32, i32* %14, align 8, !dbg !15984
  %16 = icmp ult i32 %12, %15, !dbg !15985
  br label %17, !dbg !15986

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15987
  ret i1 %18, !dbg !15988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15989 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16006, metadata !DIExpression()), !dbg !16021
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16007, metadata !DIExpression()), !dbg !16021
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16022
  %5 = load i32, i32* %4, align 4, !dbg !16023
  %6 = add nsw i32 %5, 1, !dbg !16023
  store i32 %6, i32* %4, align 4, !dbg !16023
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16024
  store i32 %5, i32* %7, align 8, !dbg !16025
  %8 = load i32, i32* %4, align 4, !dbg !16026
  %9 = icmp eq i32 %8, 0, !dbg !16027
  br i1 %9, label %10, label %32, !dbg !16028

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16029
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16029
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16009, metadata !DIExpression()), !dbg !16029
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16029
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16029
  %14 = load i32, i32* %13, align 4, !dbg !16029
  %15 = shl i32 %14, 2, !dbg !16029
  %16 = alloca i8, i32 %15, align 8, !dbg !16029
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16029
  store i8* %16, i8** %17, align 4, !dbg !16029
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16029
  %19 = alloca i8, i32 %14, align 8, !dbg !16029
  store i8* %19, i8** %18, align 4, !dbg !16029
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16029
  store i32 -1, i32* %20, align 4, !dbg !16029
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16030
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16018, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16008, metadata !DIExpression()), !dbg !16021
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16032
  br i1 %22, label %23, label %24, !dbg !16029

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16032
  br label %32, !dbg !16033

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16008, metadata !DIExpression()), !dbg !16021
  %26 = load i32, i32* %4, align 4, !dbg !16034
  %27 = add nsw i32 %26, 1, !dbg !16034
  store i32 %27, i32* %4, align 4, !dbg !16034
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16036
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16036
  store i32 %26, i32* %29, align 8, !dbg !16037
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16030
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16018, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16008, metadata !DIExpression()), !dbg !16021
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16032
  br i1 %31, label %23, label %24, !dbg !16029, !llvm.loop !16038

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16040
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16041
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16042
  ret void, !dbg !16043
}

; Function Attrs: optsize
declare !dbg !16044 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16049 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16052 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16054, metadata !DIExpression()), !dbg !16056
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16055, metadata !DIExpression()), !dbg !16056
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16057
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16058
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16059
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16060
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16060
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16062
  br i1 %7, label %8, label %10, !dbg !16063

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16064
  store i32 0, i32* %9, align 4, !dbg !16066
  br label %10, !dbg !16067

10:                                               ; preds = %8, %2
  ret void, !dbg !16068
}

; Function Attrs: optsize
declare !dbg !16069 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16070 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16074, metadata !DIExpression()), !dbg !16077
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16075, metadata !DIExpression()), !dbg !16077
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16078
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16079
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16076, metadata !DIExpression()), !dbg !16077
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16075, metadata !DIExpression()), !dbg !16077
  ret %struct.k_thread* %4, !dbg !16080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16081 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16085, metadata !DIExpression()), !dbg !16086
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16087
  ret %struct.rbnode* %2, !dbg !16088
}

; Function Attrs: optsize
declare !dbg !16089 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16092 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16104, metadata !DIExpression()), !dbg !16108
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16109
  %3 = load i32, i32* %2, align 4, !dbg !16109
  %4 = icmp eq i32 %3, 0, !dbg !16111
  br i1 %4, label %10, label %5, !dbg !16112

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16105, metadata !DIExpression()), !dbg !16108
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16113, !range !3849
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16114
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16106, metadata !DIExpression()), !dbg !16108
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !16115
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16107, metadata !DIExpression()), !dbg !16108
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16105, metadata !DIExpression()), !dbg !16108
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16108
  ret %struct.k_thread* %11, !dbg !16116
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16117 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16121, metadata !DIExpression()), !dbg !16124
  call void @llvm.dbg.value(metadata i32 0, metadata !16122, metadata !DIExpression()), !dbg !16124
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16125
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16123, metadata !DIExpression()), !dbg !16124
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16126
  br i1 %3, label %8, label %4, !dbg !16127

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16128
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !16122, metadata !DIExpression()), !dbg !16124
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16125
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16123, metadata !DIExpression()), !dbg !16124
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16126
  br i1 %7, label %8, label %4, !dbg !16127, !llvm.loop !16131

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16124
  ret i32 %9, !dbg !16133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !16134 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16136, metadata !DIExpression()), !dbg !16137
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16138
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !16139
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16140
  ret %struct.k_thread* %4, !dbg !16141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !16142 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16151, metadata !DIExpression()), !dbg !16152
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16153
  tail call fastcc void @sys_dlist_init.168(%struct._dnode* noundef nonnull %2) #26, !dbg !16154
  ret void, !dbg !16155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.168(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16156 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16160, metadata !DIExpression()), !dbg !16161
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16162
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16163
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16164
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16165
  ret void, !dbg !16166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16167 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16168
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16169
  ret void, !dbg !16170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !16171 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16176, metadata !DIExpression()), !dbg !16177
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16178
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16178
  %4 = load i8, i8* %3, align 2, !dbg !16178
  %5 = sext i8 %4 to i32, !dbg !16179
  ret i32 %5, !dbg !16180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16185, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata i32 %1, metadata !16186, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16187, metadata !DIExpression()), !dbg !16188
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16189
  ret void, !dbg !16190
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16191 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16192
  br i1 %1, label %8, label %2, !dbg !16193

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16194
  br i1 %3, label %8, label %4, !dbg !16195

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16196
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16197
  %7 = xor i1 %6, true, !dbg !16195
  br label %8, !dbg !16195

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16199 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16200, !range !7135
  %2 = icmp eq i8 %1, 0, !dbg !16200
  ret i1 %2, !dbg !16201
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16202 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !16205
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16207, !srcloc !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14710, metadata !DIExpression()) #24, !dbg !16209
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !16209
  call void @llvm.dbg.value(metadata i32 undef, metadata !14704, metadata !DIExpression()) #24, !dbg !16205
  call void @llvm.dbg.value(metadata i32 undef, metadata !16204, metadata !DIExpression()), !dbg !16210
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16211
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14867, metadata !DIExpression()) #24, !dbg !16214
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16216
  %4 = load i8, i8* %3, align 1, !dbg !16217
  %5 = and i8 %4, 127, !dbg !16217
  store i8 %5, i8* %3, align 1, !dbg !16217
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14875, metadata !DIExpression()) #24, !dbg !16218
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16220
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16221
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14884, metadata !DIExpression()) #24, !dbg !16222
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16224
  %8 = load i8, i8* %7, align 1, !dbg !16225
  %9 = or i8 %8, -128, !dbg !16225
  store i8 %9, i8* %7, align 1, !dbg !16225
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14891, metadata !DIExpression()) #24, !dbg !16226
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14898, metadata !DIExpression()) #24, !dbg !16228
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14904, metadata !DIExpression()) #24, !dbg !16228
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16230
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14905, metadata !DIExpression()) #24, !dbg !16228
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16231
  br i1 %11, label %22, label %12, !dbg !16230

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14905, metadata !DIExpression()) #24, !dbg !16228
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16232
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14905, metadata !DIExpression()) #24, !dbg !16228
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16233
  %16 = icmp sgt i32 %15, 0, !dbg !16234
  br i1 %16, label %17, label %19, !dbg !16235

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16236
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16237
  br label %24, !dbg !16238

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16231
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14905, metadata !DIExpression()) #24, !dbg !16228
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16231
  br i1 %21, label %22, label %12, !dbg !16230, !llvm.loop !16239

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16241
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16242
  br label %24, !dbg !16243

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16207
  call void @llvm.dbg.value(metadata i32 %25, metadata !14710, metadata !DIExpression()) #24, !dbg !16209
  call void @llvm.dbg.value(metadata i32 %25, metadata !14704, metadata !DIExpression()) #24, !dbg !16205
  call void @llvm.dbg.value(metadata i32 %25, metadata !16204, metadata !DIExpression()), !dbg !16210
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16244
  call void @llvm.dbg.value(metadata i32 undef, metadata !15309, metadata !DIExpression()) #24, !dbg !16245
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15314, metadata !DIExpression()) #24, !dbg !16245
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16247
  ret void, !dbg !16248
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16249 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16253, metadata !DIExpression()), !dbg !16256
  %3 = icmp eq i64 %2, -1, !dbg !16257
  br i1 %3, label %4, label %6, !dbg !16259

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16260
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16262
  br label %11, !dbg !16263

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16254, metadata !DIExpression()), !dbg !16256
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16264
  %8 = sext i32 %7 to i64, !dbg !16264
  call void @llvm.dbg.value(metadata i64 %8, metadata !16254, metadata !DIExpression()), !dbg !16256
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !16265
  %10 = trunc i64 %9 to i32, !dbg !16265
  call void @llvm.dbg.value(metadata i32 %10, metadata !16255, metadata !DIExpression()), !dbg !16256
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16256
  ret i32 %12, !dbg !16266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16267 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16271, metadata !DIExpression()), !dbg !16272
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16273, !srcloc !16275
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16276
  ret void, !dbg !16277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16278 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16282, metadata !DIExpression()), !dbg !16286
  %2 = icmp eq i64 %0, 0, !dbg !16287
  br i1 %2, label %3, label %4, !dbg !16289

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !16290
  br label %29, !dbg !16292

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16284, metadata !DIExpression()), !dbg !16286
  %5 = icmp sgt i64 %0, -3, !dbg !16293
  br i1 %5, label %6, label %10, !dbg !16295

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16296
  %8 = trunc i64 %0 to i32, !dbg !16298
  %9 = add i32 %7, %8, !dbg !16298
  call void @llvm.dbg.value(metadata i32 %9, metadata !16283, metadata !DIExpression()), !dbg !16286
  br label %13, !dbg !16299

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16300
  %12 = sub i32 -2, %11, !dbg !16300
  call void @llvm.dbg.value(metadata i32 %12, metadata !16283, metadata !DIExpression()), !dbg !16286
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16302
  call void @llvm.dbg.value(metadata i32 %14, metadata !16283, metadata !DIExpression()), !dbg !16286
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !16303
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16305, !srcloc !14713
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16305
  call void @llvm.dbg.value(metadata i32 %16, metadata !14710, metadata !DIExpression()) #24, !dbg !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !16307
  call void @llvm.dbg.value(metadata i32 %16, metadata !14704, metadata !DIExpression()) #24, !dbg !16303
  call void @llvm.dbg.value(metadata i32 %16, metadata !16285, metadata !DIExpression()), !dbg !16286
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16308
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16309
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !16310
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16311
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16312
  tail call fastcc void @z_add_thread_timeout.157(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !16312
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16313
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !16314
  call void @llvm.dbg.value(metadata i32 %16, metadata !15309, metadata !DIExpression()) #24, !dbg !16315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15314, metadata !DIExpression()) #24, !dbg !16315
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16317
  %22 = zext i32 %14 to i64, !dbg !16318
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16319
  %24 = zext i32 %23 to i64, !dbg !16319
  %25 = sub nsw i64 %22, %24, !dbg !16320
  call void @llvm.dbg.value(metadata i64 %25, metadata !16282, metadata !DIExpression()), !dbg !16286
  %26 = icmp sgt i64 %25, 0, !dbg !16321
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16321
  %28 = trunc i64 %27 to i32, !dbg !16321
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16286
  ret i32 %30, !dbg !16322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16323 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16325, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i64 %0, metadata !14745, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i32 10000, metadata !14748, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i32 1000, metadata !14749, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i8 1, metadata !14750, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i1 false, metadata !14751, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16327
  call void @llvm.dbg.value(metadata i1 false, metadata !14752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16327
  call void @llvm.dbg.value(metadata i8 0, metadata !14753, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i1 false, metadata !14754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16327
  call void @llvm.dbg.value(metadata i1 true, metadata !14755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16327
  call void @llvm.dbg.value(metadata i64 0, metadata !14756, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i64 0, metadata !14756, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i64 %0, metadata !14745, metadata !DIExpression()), !dbg !16327
  %2 = udiv i64 %0, 10, !dbg !16329
  ret i64 %2, !dbg !16333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16334 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16335, !srcloc !16337
  tail call void @z_impl_k_yield() #26, !dbg !16338
  ret void, !dbg !16339
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16344, metadata !DIExpression()), !dbg !16346
  %2 = sext i32 %0 to i64, !dbg !16347
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !16348
  call void @llvm.dbg.value(metadata i64 %3, metadata !16345, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16346
  %4 = shl i64 %3, 32, !dbg !16349
  %5 = ashr exact i64 %4, 32, !dbg !16349
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !16350
  call void @llvm.dbg.value(metadata i32 %6, metadata !16345, metadata !DIExpression()), !dbg !16346
  %7 = sext i32 %6 to i64, !dbg !16351
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !16352
  %9 = trunc i64 %8 to i32, !dbg !16352
  ret i32 %9, !dbg !16353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16354 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16356, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.value(metadata i64 %0, metadata !14745, metadata !DIExpression()), !dbg !16358
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14748, metadata !DIExpression()), !dbg !16358
  call void @llvm.dbg.value(metadata i32 10000, metadata !14749, metadata !DIExpression()), !dbg !16358
  call void @llvm.dbg.value(metadata i8 1, metadata !14750, metadata !DIExpression()), !dbg !16358
  call void @llvm.dbg.value(metadata i1 false, metadata !14751, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16358
  call void @llvm.dbg.value(metadata i1 true, metadata !14752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16358
  call void @llvm.dbg.value(metadata i8 0, metadata !14753, metadata !DIExpression()), !dbg !16358
  call void @llvm.dbg.value(metadata i1 false, metadata !14754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16358
  call void @llvm.dbg.value(metadata i1 true, metadata !14755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16358
  call void @llvm.dbg.value(metadata i64 0, metadata !14756, metadata !DIExpression()), !dbg !16358
  call void @llvm.dbg.value(metadata i64 0, metadata !14756, metadata !DIExpression()), !dbg !16358
  %2 = add i64 %0, 99, !dbg !16360
  call void @llvm.dbg.value(metadata i64 %2, metadata !14745, metadata !DIExpression()), !dbg !16358
  %3 = udiv i64 %2, 100, !dbg !16361
  ret i64 %3, !dbg !16362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16363 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16365, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i64 %0, metadata !14745, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i32 10000, metadata !14748, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14749, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i8 1, metadata !14750, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i1 false, metadata !14751, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16367
  call void @llvm.dbg.value(metadata i1 false, metadata !14752, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16367
  call void @llvm.dbg.value(metadata i8 0, metadata !14753, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i1 true, metadata !14754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16367
  call void @llvm.dbg.value(metadata i1 false, metadata !14755, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16367
  call void @llvm.dbg.value(metadata i64 0, metadata !14756, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i64 0, metadata !14756, metadata !DIExpression()), !dbg !16367
  %2 = mul i64 %0, 100, !dbg !16369
  ret i64 %2, !dbg !16371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16372 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16374, metadata !DIExpression()), !dbg !16375
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !16376
  br i1 %2, label %14, label %3, !dbg !16378

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16379
  %5 = icmp slt i32 %4, 0, !dbg !16381
  br i1 %5, label %6, label %10, !dbg !16382

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16383
  %8 = load i8, i8* %7, align 1, !dbg !16383
  %9 = icmp eq i8 %8, 16, !dbg !16386
  br i1 %9, label %10, label %14, !dbg !16387

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16388
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16389
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16390, !srcloc !15349
  call void @llvm.dbg.value(metadata i32 %11, metadata !15345, metadata !DIExpression()) #24, !dbg !16394
  %12 = icmp eq i32 %11, 0, !dbg !16395
  br i1 %12, label %13, label %14, !dbg !16396

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16397
  br label %14, !dbg !16399

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16401 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16403, metadata !DIExpression()), !dbg !16404
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16405
  %3 = load i8, i8* %2, align 1, !dbg !16405
  %4 = and i8 %3, 2, !dbg !16406
  %5 = icmp ne i8 %4, 0, !dbg !16407
  ret i1 %5, !dbg !16408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16409 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16414
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16413, metadata !DIExpression()), !dbg !16415
  ret %struct.k_thread* %1, !dbg !16416
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16417 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16418, !srcloc !15349
  call void @llvm.dbg.value(metadata i32 %1, metadata !15345, metadata !DIExpression()) #24, !dbg !16421
  %2 = icmp eq i32 %1, 0, !dbg !16422
  br i1 %2, label %3, label %8, !dbg !16423

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16424
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16425
  %6 = icmp ne i32 %5, 0, !dbg !16423
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16426
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16427 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16429, metadata !DIExpression()), !dbg !16431
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !16432
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16434, !srcloc !14713
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16434
  call void @llvm.dbg.value(metadata i32 %3, metadata !14710, metadata !DIExpression()) #24, !dbg !16436
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !16436
  call void @llvm.dbg.value(metadata i32 %3, metadata !14704, metadata !DIExpression()) #24, !dbg !16432
  call void @llvm.dbg.value(metadata i32 %3, metadata !16430, metadata !DIExpression()), !dbg !16431
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16437
  %5 = load i8, i8* %4, align 4, !dbg !16437
  %6 = and i8 %5, 1, !dbg !16439
  %7 = icmp eq i8 %6, 0, !dbg !16440
  br i1 %7, label %9, label %8, !dbg !16441

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #24, !dbg !16442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16442
  call void @llvm.dbg.value(metadata i32 %3, metadata !14733, metadata !DIExpression()) #24, !dbg !16445
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16447, !srcloc !14739
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !16448, !srcloc !16450
  br label %24, !dbg !16451

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16452
  %11 = load i8, i8* %10, align 1, !dbg !16452
  %12 = and i8 %11, 8, !dbg !16454
  %13 = icmp eq i8 %12, 0, !dbg !16455
  br i1 %13, label %15, label %14, !dbg !16456

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #24, !dbg !16457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16457
  call void @llvm.dbg.value(metadata i32 %3, metadata !14733, metadata !DIExpression()) #24, !dbg !16460
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16462, !srcloc !14739
  br label %24, !dbg !16463

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16464
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16465
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16467
  br i1 %17, label %18, label %23, !dbg !16468

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16469, !srcloc !15349
  call void @llvm.dbg.value(metadata i32 %19, metadata !15345, metadata !DIExpression()) #24, !dbg !16472
  %20 = icmp eq i32 %19, 0, !dbg !16473
  br i1 %20, label %21, label %23, !dbg !16474

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15309, metadata !DIExpression()) #24, !dbg !16475
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15314, metadata !DIExpression()) #24, !dbg !16475
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16478
  br label %23, !dbg !16479

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #24, !dbg !16480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16480
  call void @llvm.dbg.value(metadata i32 %3, metadata !14733, metadata !DIExpression()) #24, !dbg !16482
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16484, !srcloc !14739
  br label %24, !dbg !16485

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16485
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16486 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16488, metadata !DIExpression()), !dbg !16489
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16490
  %3 = load i8, i8* %2, align 1, !dbg !16490
  %4 = and i8 %3, 8, !dbg !16492
  %5 = icmp eq i8 %4, 0, !dbg !16493
  br i1 %5, label %6, label %20, !dbg !16494

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16495
  %8 = or i8 %7, 8, !dbg !16495
  store i8 %8, i8* %2, align 1, !dbg !16495
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16497
  br i1 %9, label %10, label %12, !dbg !16499

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14867, metadata !DIExpression()) #24, !dbg !16500
  %11 = and i8 %8, 95, !dbg !16503
  store i8 %11, i8* %2, align 1, !dbg !16503
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14875, metadata !DIExpression()) #24, !dbg !16504
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16506
  br label %12, !dbg !16507

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16508
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16508
  %15 = icmp eq %union.anon* %14, null, !dbg !16510
  br i1 %15, label %17, label %16, !dbg !16511

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16512
  br label %17, !dbg !16514

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16515
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16516
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !16517
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16518
  br label %20, !dbg !16519

20:                                               ; preds = %17, %1
  ret void, !dbg !16520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16521 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16525, metadata !DIExpression()), !dbg !16527
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16528
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16526, metadata !DIExpression()), !dbg !16527
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16529
  br i1 %3, label %10, label %4, !dbg !16530

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16531
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16533
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16534, metadata !DIExpression()), !dbg !16540
  call void @llvm.dbg.value(metadata i32 0, metadata !16539, metadata !DIExpression()), !dbg !16540
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16542
  store i32 0, i32* %7, align 4, !dbg !16543
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16544
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16528
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16526, metadata !DIExpression()), !dbg !16527
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16529
  br i1 %9, label %10, label %4, !dbg !16530, !llvm.loop !16545

10:                                               ; preds = %4, %1
  ret void, !dbg !16547
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16548 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16553, metadata !DIExpression()), !dbg !16556
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16552, metadata !DIExpression()), !dbg !16556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !16557
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16559, !srcloc !14713
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %4, metadata !14710, metadata !DIExpression()) #24, !dbg !16561
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !16561
  call void @llvm.dbg.value(metadata i32 %4, metadata !14704, metadata !DIExpression()) #24, !dbg !16557
  call void @llvm.dbg.value(metadata i32 %4, metadata !16554, metadata !DIExpression()), !dbg !16556
  call void @llvm.dbg.value(metadata i32 0, metadata !16555, metadata !DIExpression()), !dbg !16556
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16562
  %6 = load i8, i8* %5, align 1, !dbg !16562
  %7 = and i8 %6, 8, !dbg !16564
  %8 = icmp eq i8 %7, 0, !dbg !16565
  br i1 %8, label %9, label %24, !dbg !16566

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16553, metadata !DIExpression()), !dbg !16556
  %11 = icmp eq i64 %10, 0, !dbg !16567
  br i1 %11, label %24, label %12, !dbg !16569

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16570
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16572
  br i1 %14, label %24, label %15, !dbg !16573

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16574
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16574
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16575
  %19 = icmp eq %union.anon* %17, %18, !dbg !16576
  br i1 %19, label %24, label %20, !dbg !16577

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16578
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !16580
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16581
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !16582
  call void @llvm.dbg.value(metadata i32 %4, metadata !15309, metadata !DIExpression()) #24, !dbg !16583
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15314, metadata !DIExpression()) #24, !dbg !16583
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16585
  call void @llvm.dbg.value(metadata i32 %23, metadata !16555, metadata !DIExpression()), !dbg !16556
  br label %26, !dbg !16586

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16587
  call void @llvm.dbg.value(metadata i32 %25, metadata !16555, metadata !DIExpression()), !dbg !16556
  call void @llvm.dbg.value(metadata i32 %4, metadata !14725, metadata !DIExpression()) #24, !dbg !16588
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16588
  call void @llvm.dbg.value(metadata i32 %4, metadata !14733, metadata !DIExpression()) #24, !dbg !16590
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !16592, !srcloc !14739
  br label %26, !dbg !16593

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16556
  ret i32 %27, !dbg !16594
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16595 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16599, metadata !DIExpression()), !dbg !16607
  call void @llvm.dbg.value(metadata i32 %1, metadata !16600, metadata !DIExpression()), !dbg !16607
  call void @llvm.dbg.value(metadata i8* %2, metadata !16601, metadata !DIExpression()), !dbg !16607
  call void @llvm.dbg.value(metadata i8 0, metadata !16603, metadata !DIExpression()), !dbg !16607
  call void @llvm.dbg.value(metadata i32 0, metadata !16604, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14698, metadata !DIExpression()) #24, !dbg !16609
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16611, !srcloc !14713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14710, metadata !DIExpression()) #24, !dbg !16613
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #24, !dbg !16613
  call void @llvm.dbg.value(metadata i32 undef, metadata !14704, metadata !DIExpression()) #24, !dbg !16609
  call void @llvm.dbg.value(metadata i32 undef, metadata !16606, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i8 poison, metadata !16603, metadata !DIExpression()), !dbg !16607
  call void @llvm.dbg.value(metadata i32 undef, metadata !16604, metadata !DIExpression()), !dbg !16608
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !16614
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16602, metadata !DIExpression()), !dbg !16607
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16617
  br i1 %7, label %12, label %8, !dbg !16619

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16620, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata i32 %1, metadata !16626, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata i8* %2, metadata !16627, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16534, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i32 %1, metadata !16539, metadata !DIExpression()), !dbg !16631
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16633
  store i32 %1, i32* %9, align 4, !dbg !16634
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16635
  store i8* %2, i8** %10, align 4, !dbg !16636
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16637
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16638
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !16639
  call void @llvm.dbg.value(metadata i8 1, metadata !16603, metadata !DIExpression()), !dbg !16607
  br label %12, !dbg !16640

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16611
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16611
  call void @llvm.dbg.value(metadata i32 %14, metadata !14710, metadata !DIExpression()) #24, !dbg !16613
  call void @llvm.dbg.value(metadata i32 %14, metadata !14704, metadata !DIExpression()) #24, !dbg !16609
  call void @llvm.dbg.value(metadata i32 %14, metadata !16606, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i8 poison, metadata !16603, metadata !DIExpression()), !dbg !16607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #24, !dbg !16641
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16641
  call void @llvm.dbg.value(metadata i32 undef, metadata !14733, metadata !DIExpression()) #24, !dbg !16643
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16645, !srcloc !14739
  call void @llvm.dbg.value(metadata i32 undef, metadata !16604, metadata !DIExpression()), !dbg !16608
  ret i1 %13, !dbg !16646
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16647 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16653, metadata !DIExpression()), !dbg !16658
  call void @llvm.dbg.value(metadata i64 undef, metadata !16655, metadata !DIExpression()), !dbg !16658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16652, metadata !DIExpression()), !dbg !16658
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16654, metadata !DIExpression()), !dbg !16658
  call void @llvm.dbg.value(metadata i8** %4, metadata !16656, metadata !DIExpression()), !dbg !16658
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16659
  call void @llvm.dbg.value(metadata i32 %6, metadata !16657, metadata !DIExpression()), !dbg !16658
  %7 = icmp eq i8** %4, null, !dbg !16660
  br i1 %7, label %12, label %8, !dbg !16662

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16663
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16665
  %11 = load i8*, i8** %10, align 4, !dbg !16665
  store i8* %11, i8** %4, align 4, !dbg !16666
  br label %12, !dbg !16667

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16668
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16669 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16671
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16672
  ret void, !dbg !16673
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16674 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16684, metadata !DIExpression()), !dbg !16701
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16682, metadata !DIExpression()), !dbg !16701
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16683, metadata !DIExpression()), !dbg !16701
  %5 = icmp eq i64 %4, -1, !dbg !16702
  br i1 %5, label %55, label %6, !dbg !16704

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16705
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16706
  call void @llvm.dbg.value(metadata i32 0, metadata !16685, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16708, metadata !DIExpression()) #24, !dbg !16715
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16717, !srcloc !16723
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16717
  call void @llvm.dbg.value(metadata i32 %9, metadata !16720, metadata !DIExpression()) #24, !dbg !16724
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()) #24, !dbg !16724
  call void @llvm.dbg.value(metadata i32 %9, metadata !16714, metadata !DIExpression()) #24, !dbg !16715
  call void @llvm.dbg.value(metadata i32 %9, metadata !16691, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata i32 undef, metadata !16685, metadata !DIExpression()), !dbg !16707
  %10 = icmp slt i64 %4, -1, !dbg !16725
  br i1 %10, label %11, label %17, !dbg !16726

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16727
  %13 = add i64 %4, %12, !dbg !16728
  %14 = sub i64 -2, %13, !dbg !16728
  call void @llvm.dbg.value(metadata i64 %14, metadata !16695, metadata !DIExpression()), !dbg !16729
  %15 = icmp sgt i64 %14, 1, !dbg !16730
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16730
  br label %22, !dbg !16731

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16732
  %19 = tail call fastcc i32 @elapsed.181() #26, !dbg !16734
  %20 = sext i32 %19 to i64, !dbg !16734
  %21 = add nsw i64 %18, %20, !dbg !16735
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16736
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16737
  store i64 %23, i64* %24, align 8, !dbg !16738
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !16739
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16692, metadata !DIExpression()), !dbg !16741
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16742
  br i1 %26, label %42, label %27, !dbg !16742

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16743
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16692, metadata !DIExpression()), !dbg !16741
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16747
  %31 = load i64, i64* %30, align 8, !dbg !16747
  %32 = icmp slt i64 %28, %31, !dbg !16748
  br i1 %32, label %33, label %38, !dbg !16749

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16747
  %35 = sub nsw i64 %31, %28, !dbg !16750
  store i64 %35, i64* %34, align 8, !dbg !16750
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16752
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16753
  tail call fastcc void @sys_dlist_insert.182(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !16754
  br label %44, !dbg !16755

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16756
  store i64 %39, i64* %24, align 8, !dbg !16756
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !16757
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16692, metadata !DIExpression()), !dbg !16741
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16742
  br i1 %41, label %42, label %27, !dbg !16742, !llvm.loop !16758

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16760
  tail call fastcc void @sys_dlist_append.183(%struct._dnode* noundef %43) #26, !dbg !16763
  br label %44, !dbg !16764

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !16765
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16766
  br i1 %46, label %47, label %54, !dbg !16767

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !16768
  call void @llvm.dbg.value(metadata i32 %48, metadata !16698, metadata !DIExpression()), !dbg !16769
  %49 = icmp ne i32 %48, 0, !dbg !16770
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16772
  br i1 %52, label %54, label %53, !dbg !16772

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16773
  br label %54, !dbg !16775

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16776, metadata !DIExpression()) #24, !dbg !16782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16781, metadata !DIExpression()) #24, !dbg !16782
  call void @llvm.dbg.value(metadata i32 %9, metadata !16784, metadata !DIExpression()) #24, !dbg !16787
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16789, !srcloc !16790
  call void @llvm.dbg.value(metadata i32 undef, metadata !16685, metadata !DIExpression()), !dbg !16707
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.181() unnamed_addr #1 !dbg !16792 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16795
  %2 = icmp eq i32 %1, 0, !dbg !16796
  br i1 %2, label %3, label %5, !dbg !16795

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16797
  br label %5, !dbg !16795

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16795
  ret i32 %6, !dbg !16798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16799 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.186() #26, !dbg !16805
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16803, metadata !DIExpression()), !dbg !16806
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16807
  ret %struct._timeout* %2, !dbg !16808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.182(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16809 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16813, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16814, metadata !DIExpression()), !dbg !16817
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16818
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16818
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16815, metadata !DIExpression()), !dbg !16817
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16819
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16820
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16821
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16822
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16823
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16824
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16825
  ret void, !dbg !16826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16827 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16831, metadata !DIExpression()), !dbg !16833
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16834
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.184(%struct._dnode* noundef %2) #26, !dbg !16835
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16832, metadata !DIExpression()), !dbg !16833
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16836
  ret %struct._timeout* %4, !dbg !16837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.183(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16838 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16843, metadata !DIExpression()), !dbg !16846
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16844, metadata !DIExpression()), !dbg !16846
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16847
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16845, metadata !DIExpression()), !dbg !16846
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16848
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16849
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16850
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16851
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16852
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16853
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16854
  ret void, !dbg !16855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16856 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16861
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16858, metadata !DIExpression()), !dbg !16862
  %2 = tail call fastcc i32 @elapsed.181() #26, !dbg !16863
  call void @llvm.dbg.value(metadata i32 %2, metadata !16859, metadata !DIExpression()), !dbg !16862
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16864
  br i1 %3, label %14, label %4, !dbg !16866

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16867
  %6 = load i64, i64* %5, align 8, !dbg !16867
  %7 = sext i32 %2 to i64, !dbg !16868
  %8 = sub nsw i64 %6, %7, !dbg !16869
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16870
  br i1 %9, label %14, label %10, !dbg !16871

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16872
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16872
  %13 = trunc i64 %12 to i32, !dbg !16872
  call void @llvm.dbg.value(metadata i32 %13, metadata !16860, metadata !DIExpression()), !dbg !16862
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16874
  call void @llvm.dbg.value(metadata i32 %15, metadata !16860, metadata !DIExpression()), !dbg !16862
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16875
  %17 = icmp ne i32 %16, 0, !dbg !16877
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16878
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16878
  call void @llvm.dbg.value(metadata i32 %20, metadata !16860, metadata !DIExpression()), !dbg !16862
  ret i32 %20, !dbg !16879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.184(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16880 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16884, metadata !DIExpression()), !dbg !16886
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16885, metadata !DIExpression()), !dbg !16886
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16887
  br i1 %2, label %5, label %3, !dbg !16888

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.185(%struct._dnode* noundef nonnull %0) #26, !dbg !16889
  br label %5, !dbg !16888

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16888
  ret %struct._dnode* %6, !dbg !16890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.185(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16891 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16893, metadata !DIExpression()), !dbg !16895
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16894, metadata !DIExpression()), !dbg !16895
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16896
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16897
  br i1 %3, label %7, label %4, !dbg !16898

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16899
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16899
  br label %7, !dbg !16898

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16898
  ret %struct._dnode* %8, !dbg !16900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.186() unnamed_addr #5 !dbg !16901 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16905, metadata !DIExpression()), !dbg !16906
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.187() #26, !dbg !16907
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16907
  ret %struct._dnode* %3, !dbg !16908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.187() unnamed_addr #5 !dbg !16909 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16913, metadata !DIExpression()), !dbg !16914
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16915
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16916
  ret i1 %2, !dbg !16917
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16918 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16922, metadata !DIExpression()), !dbg !16927
  call void @llvm.dbg.value(metadata i32 -22, metadata !16923, metadata !DIExpression()), !dbg !16927
  call void @llvm.dbg.value(metadata i32 0, metadata !16924, metadata !DIExpression()), !dbg !16928
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16708, metadata !DIExpression()) #24, !dbg !16929
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16931, !srcloc !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16720, metadata !DIExpression()) #24, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()) #24, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #24, !dbg !16929
  call void @llvm.dbg.value(metadata i32 undef, metadata !16926, metadata !DIExpression()), !dbg !16928
  call void @llvm.dbg.value(metadata i32 -22, metadata !16923, metadata !DIExpression()), !dbg !16927
  call void @llvm.dbg.value(metadata i32 undef, metadata !16924, metadata !DIExpression()), !dbg !16928
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16923, metadata !DIExpression()), !dbg !16927
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.190(%struct._dnode* noundef %3) #26, !dbg !16934
  br i1 %4, label %5, label %6, !dbg !16938

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16939
  call void @llvm.dbg.value(metadata i32 0, metadata !16923, metadata !DIExpression()), !dbg !16927
  br label %6, !dbg !16941

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16927
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16931
  call void @llvm.dbg.value(metadata i32 %8, metadata !16720, metadata !DIExpression()) #24, !dbg !16933
  call void @llvm.dbg.value(metadata i32 %8, metadata !16714, metadata !DIExpression()) #24, !dbg !16929
  call void @llvm.dbg.value(metadata i32 %8, metadata !16926, metadata !DIExpression()), !dbg !16928
  call void @llvm.dbg.value(metadata i32 %7, metadata !16923, metadata !DIExpression()), !dbg !16927
  call void @llvm.dbg.value(metadata i32 undef, metadata !16776, metadata !DIExpression()) #24, !dbg !16942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16781, metadata !DIExpression()) #24, !dbg !16942
  call void @llvm.dbg.value(metadata i32 undef, metadata !16784, metadata !DIExpression()) #24, !dbg !16944
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !16946, !srcloc !16790
  call void @llvm.dbg.value(metadata i32 undef, metadata !16924, metadata !DIExpression()), !dbg !16928
  ret i32 %7, !dbg !16947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.190(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16948 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16954, metadata !DIExpression()), !dbg !16955
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16956
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16956
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16957
  ret i1 %4, !dbg !16958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !16959 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16961, metadata !DIExpression()), !dbg !16962
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !16963
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16965
  br i1 %3, label %10, label %4, !dbg !16966

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16967
  %6 = load i64, i64* %5, align 8, !dbg !16967
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16969
  %8 = load i64, i64* %7, align 8, !dbg !16970
  %9 = add nsw i64 %8, %6, !dbg !16970
  store i64 %9, i64* %7, align 8, !dbg !16970
  br label %10, !dbg !16971

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16972
  tail call fastcc void @sys_dlist_remove.191(%struct._dnode* noundef %11) #26, !dbg !16973
  ret void, !dbg !16974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.191(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !16975 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16979, metadata !DIExpression()), !dbg !16982
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16983
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16983
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16980, metadata !DIExpression()), !dbg !16982
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16984
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16984
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16981, metadata !DIExpression()), !dbg !16982
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16985
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16986
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16987
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16988
  tail call fastcc void @sys_dnode_init.192(%struct._dnode* noundef %0) #26, !dbg !16989
  ret void, !dbg !16990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.192(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !16991 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16993, metadata !DIExpression()), !dbg !16994
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16995
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16996
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16997
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16998
  ret void, !dbg !16999
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17000 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17006, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata i64 0, metadata !17007, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata i32 0, metadata !17008, metadata !DIExpression()), !dbg !17012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16708, metadata !DIExpression()) #24, !dbg !17013
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17015, !srcloc !16723
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17015
  call void @llvm.dbg.value(metadata i32 %3, metadata !16720, metadata !DIExpression()) #24, !dbg !17017
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()) #24, !dbg !17017
  call void @llvm.dbg.value(metadata i32 %3, metadata !16714, metadata !DIExpression()) #24, !dbg !17013
  call void @llvm.dbg.value(metadata i32 %3, metadata !17010, metadata !DIExpression()), !dbg !17012
  call void @llvm.dbg.value(metadata i64 0, metadata !17007, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata i32 undef, metadata !17008, metadata !DIExpression()), !dbg !17012
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17018
  call void @llvm.dbg.value(metadata i64 %4, metadata !17007, metadata !DIExpression()), !dbg !17011
  call void @llvm.dbg.value(metadata i32 %3, metadata !16776, metadata !DIExpression()) #24, !dbg !17021
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17021
  call void @llvm.dbg.value(metadata i32 %3, metadata !16784, metadata !DIExpression()) #24, !dbg !17023
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17025, !srcloc !16790
  call void @llvm.dbg.value(metadata i32 undef, metadata !17008, metadata !DIExpression()), !dbg !17012
  ret i64 %4, !dbg !17026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17027 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17029, metadata !DIExpression()), !dbg !17033
  call void @llvm.dbg.value(metadata i64 0, metadata !17030, metadata !DIExpression()), !dbg !17033
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.193(%struct._timeout* noundef %0) #26, !dbg !17034
  br i1 %2, label %21, label %3, !dbg !17036

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17037
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17031, metadata !DIExpression()), !dbg !17038
  call void @llvm.dbg.value(metadata i64 0, metadata !17030, metadata !DIExpression()), !dbg !17033
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17039
  br i1 %5, label %16, label %6, !dbg !17041

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17031, metadata !DIExpression()), !dbg !17038
  call void @llvm.dbg.value(metadata i64 %8, metadata !17030, metadata !DIExpression()), !dbg !17033
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17042
  %10 = load i64, i64* %9, align 8, !dbg !17042
  %11 = add nsw i64 %10, %8, !dbg !17044
  call void @llvm.dbg.value(metadata i64 %11, metadata !17030, metadata !DIExpression()), !dbg !17033
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17045
  br i1 %12, label %16, label %13, !dbg !17047

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17048
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17031, metadata !DIExpression()), !dbg !17038
  call void @llvm.dbg.value(metadata i64 %11, metadata !17030, metadata !DIExpression()), !dbg !17033
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17039
  br i1 %15, label %16, label %6, !dbg !17041, !llvm.loop !17049

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17033
  call void @llvm.dbg.value(metadata i64 %17, metadata !17030, metadata !DIExpression()), !dbg !17033
  %18 = tail call fastcc i32 @elapsed.181() #26, !dbg !17051
  %19 = sext i32 %18 to i64, !dbg !17051
  %20 = sub nsw i64 %17, %19, !dbg !17052
  br label %21, !dbg !17053

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17033
  ret i64 %22, !dbg !17054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.193(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17055 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17059, metadata !DIExpression()), !dbg !17060
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17061
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.190(%struct._dnode* noundef %2) #26, !dbg !17062
  %4 = xor i1 %3, true, !dbg !17063
  ret i1 %4, !dbg !17064
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17065 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17067, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i64 0, metadata !17068, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i32 0, metadata !17069, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16708, metadata !DIExpression()) #24, !dbg !17074
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17076, !srcloc !16723
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17076
  call void @llvm.dbg.value(metadata i32 %3, metadata !16720, metadata !DIExpression()) #24, !dbg !17078
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()) #24, !dbg !17078
  call void @llvm.dbg.value(metadata i32 %3, metadata !16714, metadata !DIExpression()) #24, !dbg !17074
  call void @llvm.dbg.value(metadata i32 %3, metadata !17071, metadata !DIExpression()), !dbg !17073
  call void @llvm.dbg.value(metadata i64 0, metadata !17068, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i32 undef, metadata !17069, metadata !DIExpression()), !dbg !17073
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17079
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17082
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17068, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17072
  call void @llvm.dbg.value(metadata i32 %3, metadata !16776, metadata !DIExpression()) #24, !dbg !17083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17083
  call void @llvm.dbg.value(metadata i32 %3, metadata !16784, metadata !DIExpression()) #24, !dbg !17085
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17087, !srcloc !16790
  call void @llvm.dbg.value(metadata i32 undef, metadata !17069, metadata !DIExpression()), !dbg !17073
  %6 = add i64 %5, %4, !dbg !17088
  ret i64 %6, !dbg !17089
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17090 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17092, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.value(metadata i32 0, metadata !17093, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16708, metadata !DIExpression()) #24, !dbg !17098
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17100, !srcloc !16723
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17100
  call void @llvm.dbg.value(metadata i32 %2, metadata !16720, metadata !DIExpression()) #24, !dbg !17102
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()) #24, !dbg !17102
  call void @llvm.dbg.value(metadata i32 %2, metadata !16714, metadata !DIExpression()) #24, !dbg !17098
  call void @llvm.dbg.value(metadata i32 %2, metadata !17095, metadata !DIExpression()), !dbg !17097
  call void @llvm.dbg.value(metadata i32 -1, metadata !17092, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()), !dbg !17097
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17103
  call void @llvm.dbg.value(metadata i32 %3, metadata !17092, metadata !DIExpression()), !dbg !17096
  call void @llvm.dbg.value(metadata i32 %2, metadata !16776, metadata !DIExpression()) #24, !dbg !17106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17106
  call void @llvm.dbg.value(metadata i32 %2, metadata !16784, metadata !DIExpression()) #24, !dbg !17108
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17110, !srcloc !16790
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()), !dbg !17097
  ret i32 %3, !dbg !17111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17114, metadata !DIExpression()), !dbg !17124
  call void @llvm.dbg.value(metadata i1 %1, metadata !17115, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17124
  call void @llvm.dbg.value(metadata i32 0, metadata !17116, metadata !DIExpression()), !dbg !17125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16708, metadata !DIExpression()) #24, !dbg !17126
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17128, !srcloc !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16720, metadata !DIExpression()) #24, !dbg !17130
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()) #24, !dbg !17130
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #24, !dbg !17126
  call void @llvm.dbg.value(metadata i32 undef, metadata !17118, metadata !DIExpression()), !dbg !17125
  call void @llvm.dbg.value(metadata i32 undef, metadata !17116, metadata !DIExpression()), !dbg !17125
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17131
  call void @llvm.dbg.value(metadata i32 %4, metadata !17119, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i1 undef, metadata !17122, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17132
  %5 = icmp slt i32 %4, 2, !dbg !17133
  call void @llvm.dbg.value(metadata i1 %5, metadata !17123, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17132
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17134
  call void @llvm.dbg.value(metadata i1 %6, metadata !17122, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17132
  br i1 %7, label %11, label %8, !dbg !17134

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17136
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17136
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17138
  br label %11, !dbg !17139

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17128
  call void @llvm.dbg.value(metadata i32 %12, metadata !16720, metadata !DIExpression()) #24, !dbg !17130
  call void @llvm.dbg.value(metadata i32 %12, metadata !16714, metadata !DIExpression()) #24, !dbg !17126
  call void @llvm.dbg.value(metadata i32 %12, metadata !17118, metadata !DIExpression()), !dbg !17125
  call void @llvm.dbg.value(metadata i32 undef, metadata !16776, metadata !DIExpression()) #24, !dbg !17140
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17140
  call void @llvm.dbg.value(metadata i32 undef, metadata !16784, metadata !DIExpression()) #24, !dbg !17142
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !17144, !srcloc !16790
  call void @llvm.dbg.value(metadata i32 1, metadata !17116, metadata !DIExpression()), !dbg !17125
  call void @llvm.dbg.value(metadata i32 undef, metadata !17116, metadata !DIExpression()), !dbg !17125
  ret void, !dbg !17145
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17150, metadata !DIExpression()), !dbg !17155
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16708, metadata !DIExpression()) #24, !dbg !17157
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17159, !srcloc !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16720, metadata !DIExpression()) #24, !dbg !17161
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()) #24, !dbg !17161
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #24, !dbg !17157
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()), !dbg !17155
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()), !dbg !17155
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17162
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17163
  br i1 %4, label %28, label %5, !dbg !17164

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17165
  %10 = load i64, i64* %9, align 8, !dbg !17165
  %11 = sext i32 %8 to i64, !dbg !17166
  %12 = icmp sgt i64 %10, %11, !dbg !17167
  br i1 %12, label %26, label %13, !dbg !17168

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17155
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17152, metadata !DIExpression()), !dbg !17169
  %15 = trunc i64 %10 to i32, !dbg !17170
  call void @llvm.dbg.value(metadata i32 %15, metadata !17154, metadata !DIExpression()), !dbg !17169
  %16 = sext i32 %15 to i64, !dbg !17171
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17172
  %18 = add i64 %17, %16, !dbg !17172
  store i64 %18, i64* @curr_tick, align 8, !dbg !17172
  store i64 0, i64* %9, align 8, !dbg !17173
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17174
  call void @llvm.dbg.value(metadata i32 %14, metadata !16776, metadata !DIExpression()) #24, !dbg !17175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17175
  call void @llvm.dbg.value(metadata i32 %14, metadata !16784, metadata !DIExpression()) #24, !dbg !17177
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17179, !srcloc !16790
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17180
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17180
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17181
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16708, metadata !DIExpression()) #24, !dbg !17182
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17184, !srcloc !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16720, metadata !DIExpression()) #24, !dbg !17186
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()) #24, !dbg !17186
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #24, !dbg !17182
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()), !dbg !17155
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17187
  %23 = sub nsw i32 %22, %15, !dbg !17187
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()), !dbg !17155
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17162
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17163
  br i1 %25, label %28, label %5, !dbg !17164, !llvm.loop !17188

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17190
  store i64 %27, i64* %9, align 8, !dbg !17190
  br label %32, !dbg !17193

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17155
  %31 = sext i32 %30 to i64, !dbg !17194
  br label %32, !dbg !17194

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17194
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17155
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17195
  %37 = add i64 %36, %33, !dbg !17195
  store i64 %37, i64* @curr_tick, align 8, !dbg !17195
  store i32 0, i32* @announce_remaining, align 4, !dbg !17196
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17197
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17198
  call void @llvm.dbg.value(metadata i32 %35, metadata !16776, metadata !DIExpression()) #24, !dbg !17199
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17199
  call void @llvm.dbg.value(metadata i32 %35, metadata !16784, metadata !DIExpression()) #24, !dbg !17201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !17203, !srcloc !16790
  ret void, !dbg !17204
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17205 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17209, metadata !DIExpression()), !dbg !17213
  call void @llvm.dbg.value(metadata i32 0, metadata !17210, metadata !DIExpression()), !dbg !17214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16708, metadata !DIExpression()) #24, !dbg !17215
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17217, !srcloc !16723
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17217
  call void @llvm.dbg.value(metadata i32 %2, metadata !16720, metadata !DIExpression()) #24, !dbg !17219
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()) #24, !dbg !17219
  call void @llvm.dbg.value(metadata i32 %2, metadata !16714, metadata !DIExpression()) #24, !dbg !17215
  call void @llvm.dbg.value(metadata i32 %2, metadata !17212, metadata !DIExpression()), !dbg !17214
  call void @llvm.dbg.value(metadata i64 0, metadata !17209, metadata !DIExpression()), !dbg !17213
  call void @llvm.dbg.value(metadata i32 undef, metadata !17210, metadata !DIExpression()), !dbg !17214
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17220
  %4 = tail call fastcc i32 @elapsed.181() #26, !dbg !17223
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17209, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17213
  call void @llvm.dbg.value(metadata i32 %2, metadata !16776, metadata !DIExpression()) #24, !dbg !17224
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17224
  call void @llvm.dbg.value(metadata i32 %2, metadata !16784, metadata !DIExpression()) #24, !dbg !17226
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17228, !srcloc !16790
  call void @llvm.dbg.value(metadata i32 undef, metadata !17210, metadata !DIExpression()), !dbg !17214
  %5 = sext i32 %4 to i64, !dbg !17223
  %6 = add i64 %3, %5, !dbg !17229
  ret i64 %6, !dbg !17230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17231 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17232
  %2 = trunc i64 %1 to i32, !dbg !17233
  ret i32 %2, !dbg !17234
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17235 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17236
  ret i64 %1, !dbg !17237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17240, metadata !DIExpression()), !dbg !17247
  %2 = icmp eq i32 %0, 0, !dbg !17248
  br i1 %2, label %10, label %3, !dbg !17250

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17251
  call void @llvm.dbg.value(metadata i32 %4, metadata !17241, metadata !DIExpression()), !dbg !17247
  %5 = mul i32 %0, 84, !dbg !17252
  call void @llvm.dbg.value(metadata i32 %5, metadata !17242, metadata !DIExpression()), !dbg !17247
  br label %6, !dbg !17253

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17254
  call void @llvm.dbg.value(metadata i32 %7, metadata !17243, metadata !DIExpression()), !dbg !17255
  %8 = sub i32 %7, %4, !dbg !17256
  %9 = icmp ult i32 %8, %5, !dbg !17258
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17260 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17261
  ret i32 %1, !dbg !17262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17263 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17265
  ret i32 %1, !dbg !17266
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17267 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17271, metadata !DIExpression()), !dbg !17273
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17274

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17275
  br label %14, !dbg !17279

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17272, metadata !DIExpression()), !dbg !17273
  %6 = icmp slt i64 %2, -1, !dbg !17280
  br i1 %6, label %7, label %9, !dbg !17283

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17284
  br label %14, !dbg !17285

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17287
  %11 = icmp ugt i64 %2, 1, !dbg !17288
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17288
  %13 = add nsw i64 %10, %12, !dbg !17289
  br label %14, !dbg !17290

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17291
  ret i64 %15, !dbg !17292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17293 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.202, i32 0, i32 0)) #25, !dbg !17295
  ret void, !dbg !17296
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17297 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17299, metadata !DIExpression()), !dbg !17319
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17300, metadata !DIExpression()), !dbg !17320
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17321

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17322

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17300, metadata !DIExpression()), !dbg !17320
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17323
  %6 = load i8*, i8** %5, align 4, !dbg !17323
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17327
  %8 = load i32, i32* %7, align 4, !dbg !17327
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !17328
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17329
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17300, metadata !DIExpression()), !dbg !17320
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17330
  br i1 %10, label %3, label %2, !dbg !17321, !llvm.loop !17332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17334 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17338, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata i8* %1, metadata !17339, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata i32 %2, metadata !17340, metadata !DIExpression()), !dbg !17341
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17342
  tail call fastcc void @z_waitq_init.204(%union.anon* noundef nonnull %4) #26, !dbg !17343
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17344
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !17345
  ret void, !dbg !17346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.204(%union.anon* noundef %0) unnamed_addr #4 !dbg !17347 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17352, metadata !DIExpression()), !dbg !17353
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17354
  tail call fastcc void @sys_dlist_init.205(%struct._dnode* noundef %2) #26, !dbg !17355
  ret void, !dbg !17356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.205(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17357 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17362, metadata !DIExpression()), !dbg !17363
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17364
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17365
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17366
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17367
  ret void, !dbg !17368
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17369 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17380, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17377, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata i32 %1, metadata !17378, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata i32 %2, metadata !17379, metadata !DIExpression()), !dbg !17390
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !17391
  call void @llvm.dbg.value(metadata i64 %6, metadata !17382, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata i8* null, metadata !17383, metadata !DIExpression()), !dbg !17390
  %7 = icmp eq i64 %5, -1, !dbg !17392
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17392
  call void @llvm.dbg.value(metadata i64 %8, metadata !17382, metadata !DIExpression()), !dbg !17390
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17393
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17394, metadata !DIExpression()) #24, !dbg !17401
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17403, !srcloc !17409
  call void @llvm.dbg.value(metadata i32 undef, metadata !17406, metadata !DIExpression()) #24, !dbg !17410
  call void @llvm.dbg.value(metadata i32 undef, metadata !17407, metadata !DIExpression()) #24, !dbg !17410
  call void @llvm.dbg.value(metadata i32 undef, metadata !17400, metadata !DIExpression()) #24, !dbg !17401
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata i8 0, metadata !17389, metadata !DIExpression()), !dbg !17390
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17383, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata i8 0, metadata !17389, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()), !dbg !17390
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17411
  call void @llvm.dbg.value(metadata i8* %12, metadata !17383, metadata !DIExpression()), !dbg !17390
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !17413
  call void @llvm.dbg.value(metadata i64 %13, metadata !17381, metadata !DIExpression()), !dbg !17390
  %14 = icmp eq i8* %12, null, !dbg !17414
  br i1 %14, label %15, label %31, !dbg !17416

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()), !dbg !17390
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17416

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17389, metadata !DIExpression()), !dbg !17390
  %20 = sub nsw i64 %8, %18, !dbg !17417
  %21 = icmp slt i64 %20, 1, !dbg !17418
  br i1 %21, label %31, label %22, !dbg !17419

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17390
  call void @llvm.dbg.value(metadata i8 undef, metadata !17389, metadata !DIExpression()), !dbg !17390
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17420
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17420
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #25, !dbg !17420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17394, metadata !DIExpression()) #24, !dbg !17421
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17423, !srcloc !17409
  call void @llvm.dbg.value(metadata i32 undef, metadata !17406, metadata !DIExpression()) #24, !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !17407, metadata !DIExpression()) #24, !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !17400, metadata !DIExpression()) #24, !dbg !17421
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata i8* null, metadata !17383, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()), !dbg !17390
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17411
  call void @llvm.dbg.value(metadata i8* %28, metadata !17383, metadata !DIExpression()), !dbg !17390
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !17413
  call void @llvm.dbg.value(metadata i64 %29, metadata !17381, metadata !DIExpression()), !dbg !17390
  %30 = icmp eq i8* %28, null, !dbg !17414
  br i1 %30, label %17, label %31, !dbg !17416, !llvm.loop !17426

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17411
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17390
  call void @llvm.dbg.value(metadata i8* %33, metadata !17383, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata i32 %34, metadata !17429, metadata !DIExpression()) #24, !dbg !17435
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17434, metadata !DIExpression()) #24, !dbg !17435
  call void @llvm.dbg.value(metadata i32 %34, metadata !17437, metadata !DIExpression()) #24, !dbg !17440
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #24, !dbg !17442, !srcloc !17443
  ret i8* %33, !dbg !17444
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17445 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17451, metadata !DIExpression()), !dbg !17453
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17449, metadata !DIExpression()), !dbg !17453
  call void @llvm.dbg.value(metadata i32 %1, metadata !17450, metadata !DIExpression()), !dbg !17453
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17454
  call void @llvm.dbg.value(metadata i8* %4, metadata !17452, metadata !DIExpression()), !dbg !17453
  ret i8* %4, !dbg !17455
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17456 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17460, metadata !DIExpression()), !dbg !17463
  call void @llvm.dbg.value(metadata i8* %1, metadata !17461, metadata !DIExpression()), !dbg !17463
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17394, metadata !DIExpression()) #24, !dbg !17464
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17466, !srcloc !17409
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17466
  call void @llvm.dbg.value(metadata i32 %4, metadata !17406, metadata !DIExpression()) #24, !dbg !17468
  call void @llvm.dbg.value(metadata i32 undef, metadata !17407, metadata !DIExpression()) #24, !dbg !17468
  call void @llvm.dbg.value(metadata i32 %4, metadata !17400, metadata !DIExpression()) #24, !dbg !17464
  call void @llvm.dbg.value(metadata i32 %4, metadata !17462, metadata !DIExpression()), !dbg !17463
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17469
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !17470
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17471
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #25, !dbg !17473
  %8 = icmp eq i32 %7, 0, !dbg !17474
  br i1 %8, label %12, label %9, !dbg !17475

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17476
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17477
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !17477
  br label %13, !dbg !17479

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17429, metadata !DIExpression()) #24, !dbg !17480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17434, metadata !DIExpression()) #24, !dbg !17480
  call void @llvm.dbg.value(metadata i32 %4, metadata !17437, metadata !DIExpression()) #24, !dbg !17483
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !17485, !srcloc !17443
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17486
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!733, !2, !2521, !2523, !27, !2525, !2527, !2560, !2597, !111, !168, !2599, !197, !2681, !2692, !2738, !2740, !2768, !2796, !2839, !2910, !2955, !341, !490, !2983, !526, !536, !561, !765, !2988, !903, !1105, !1408, !1672, !3027, !1785, !1875, !3029, !3115, !3180, !1924, !3183, !1930, !2293, !3201, !2313, !2336, !3203, !2451, !3206, !2490}
!llvm.ident = !{!3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208, !3208}
!llvm.module.flags = !{!3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 252, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "console_serial", scope: !197, file: !288, line: 13, type: !294, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !285, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!199 = !{!200, !102, !103}
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !225, !229, !233, !246, !251, !257, !263, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !202, file: !203, line: 365, baseType: !206, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DISubroutineType(types: !208)
!208 = !{!103, !209, !224}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !212)
!212 = !{!213, !214, !215, !216, !222, !223}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !211, file: !141, line: 380, baseType: !144, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !211, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !211, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !211, file: !141, line: 386, baseType: !217, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !219)
!219 = !{!220, !221}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !218, file: !141, line: 359, baseType: !154, size: 8)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !218, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !211, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !211, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !202, file: !203, line: 366, baseType: !226, size: 32, offset: 32)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = !DISubroutineType(types: !228)
!228 = !{null, !209, !155}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !202, file: !203, line: 374, baseType: !230, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DISubroutineType(types: !232)
!232 = !{!103, !209}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !202, file: !203, line: 377, baseType: !234, size: 32, offset: 96)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 32)
!235 = !DISubroutineType(types: !236)
!236 = !{!103, !209, !237}
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !240)
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !239, file: !203, line: 123, baseType: !121, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !239, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !239, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !239, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !239, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !202, file: !203, line: 379, baseType: !247, size: 32, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = !DISubroutineType(types: !249)
!249 = !{!103, !209, !250}
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !202, file: !203, line: 384, baseType: !252, size: 32, offset: 160)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DISubroutineType(types: !254)
!254 = !{!103, !209, !255, !103}
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !202, file: !203, line: 393, baseType: !258, size: 32, offset: 192)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DISubroutineType(types: !260)
!260 = !{!103, !209, !261, !262}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !202, file: !203, line: 402, baseType: !264, size: 32, offset: 224)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{null, !209}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !202, file: !203, line: 405, baseType: !264, size: 32, offset: 256)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !202, file: !203, line: 408, baseType: !230, size: 32, offset: 288)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !202, file: !203, line: 411, baseType: !264, size: 32, offset: 320)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !202, file: !203, line: 414, baseType: !264, size: 32, offset: 352)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !202, file: !203, line: 417, baseType: !230, size: 32, offset: 384)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !202, file: !203, line: 420, baseType: !230, size: 32, offset: 416)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !202, file: !203, line: 423, baseType: !264, size: 32, offset: 448)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !202, file: !203, line: 426, baseType: !264, size: 32, offset: 480)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !202, file: !203, line: 429, baseType: !230, size: 32, offset: 512)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !202, file: !203, line: 432, baseType: !230, size: 32, offset: 544)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !202, file: !203, line: 435, baseType: !278, size: 32, offset: 576)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DISubroutineType(types: !280)
!280 = !{null, !209, !281, !102}
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !282)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!283 = !DISubroutineType(types: !284)
!284 = !{null, !209, !102}
!285 = !{!195, !286, !292}
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(name: "console_rxbuf", scope: !197, file: !288, line: 15, type: !289, isLocal: true, isDefinition: true)
!288 = !DIFile(filename: "zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 128, elements: !290)
!290 = !{!291}
!291 = !DISubrange(count: 16)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "console_txbuf", scope: !197, file: !288, line: 16, type: !289, isLocal: true, isDefinition: true)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !295, line: 18, size: 544, elements: !296)
!295 = !DIFile(filename: "zephyr/include/zephyr/console/tty.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!296 = !{!297, !298, !325, !326, !327, !330, !331, !333, !334, !335, !336, !337, !338}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !294, file: !295, line: 19, baseType: !209, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !294, file: !295, line: 21, baseType: !299, size: 128, offset: 32)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !301)
!300 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!301 = !{!302, !323, !324}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !299, file: !300, line: 2910, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !305)
!304 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !306)
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !305, file: !304, line: 232, baseType: !308, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !311)
!311 = !{!312, !318}
!312 = !DIDerivedType(tag: DW_TAG_member, scope: !310, file: !309, line: 38, baseType: !313, size: 32)
!313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !310, file: !309, line: 38, size: 32, elements: !314)
!314 = !{!315, !317}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !313, file: !309, line: 39, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !313, file: !309, line: 40, baseType: !316, size: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, scope: !310, file: !309, line: 42, baseType: !319, size: 32, offset: 32)
!319 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !310, file: !309, line: 42, size: 32, elements: !320)
!320 = !{!321, !322}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !319, file: !309, line: 43, baseType: !316, size: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !319, file: !309, line: 44, baseType: !316, size: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !299, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !299, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !294, file: !295, line: 22, baseType: !261, size: 32, offset: 160)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !294, file: !295, line: 23, baseType: !121, size: 32, offset: 192)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !294, file: !295, line: 24, baseType: !328, size: 16, offset: 224)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !329)
!329 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !294, file: !295, line: 24, baseType: !328, size: 16, offset: 240)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !294, file: !295, line: 25, baseType: !332, size: 32, offset: 256)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !294, file: !295, line: 27, baseType: !299, size: 128, offset: 288)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !294, file: !295, line: 28, baseType: !261, size: 32, offset: 416)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !294, file: !295, line: 29, baseType: !121, size: 32, offset: 448)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !294, file: !295, line: 30, baseType: !328, size: 16, offset: 480)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !294, file: !295, line: 30, baseType: !328, size: 16, offset: 496)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !294, file: !295, line: 31, baseType: !332, size: 32, offset: 512)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "static_regions", scope: !341, file: !350, line: 62, type: !486, isLocal: true, isDefinition: true)
!341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !342, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !343, globals: !346, splitDebugInlining: false, nameTableKind: None)
!342 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!343 = !{!344, !103, !121, !102}
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !345, line: 214, baseType: !32)
!345 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = !{!347, !339}
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !349, file: !350, line: 198, type: !472, isLocal: true, isDefinition: true)
!349 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !350, file: !350, line: 175, type: !351, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !341, retainedNodes: !467)
!350 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !DISubroutineType(types: !352)
!352 = !{null, !353}
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !356)
!355 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!356 = !{!357, !422, !435, !436, !437, !438, !444, !462}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !354, file: !355, line: 247, baseType: !358, size: 384)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !359)
!359 = !{!360, !387, !394, !395, !396, !407, !408, !409}
!360 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !355, line: 60, baseType: !361, size: 64)
!361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !355, line: 60, size: 64, elements: !362)
!362 = !{!363, !378}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !361, file: !355, line: 61, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !309, line: 38, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !309, line: 38, size: 32, elements: !369)
!369 = !{!370, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !368, file: !309, line: 39, baseType: !371, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !309, line: 40, baseType: !371, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !309, line: 42, baseType: !374, size: 32, offset: 32)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !309, line: 42, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !374, file: !309, line: 43, baseType: !371, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !374, file: !309, line: 44, baseType: !371, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !361, file: !355, line: 62, baseType: !379, size: 64)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !381)
!380 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !379, file: !380, line: 50, baseType: !383, size: 64)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !384, size: 64, elements: !385)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!385 = !{!386}
!386 = !DISubrange(count: 2)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !358, file: !355, line: 68, baseType: !388, size: 32, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !391)
!391 = !{!392}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !390, file: !304, line: 232, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !365)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !358, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !358, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!396 = !DIDerivedType(tag: DW_TAG_member, scope: !358, file: !355, line: 90, baseType: !397, size: 16, offset: 112)
!397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !358, file: !355, line: 90, size: 16, elements: !398)
!398 = !{!399, !406}
!399 = !DIDerivedType(tag: DW_TAG_member, scope: !397, file: !355, line: 91, baseType: !400, size: 16)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !397, file: !355, line: 91, size: 16, elements: !401)
!401 = !{!402, !405}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !400, file: !355, line: 96, baseType: !403, size: 8)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !404)
!404 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !400, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !397, file: !355, line: 100, baseType: !328, size: 16)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !358, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !358, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !358, file: !355, line: 131, baseType: !410, size: 192, offset: 192)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !411)
!411 = !{!412, !413, !419}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !410, file: !304, line: 245, baseType: !364, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !410, file: !304, line: 246, baseType: !414, size: 32, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !415)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!416 = !DISubroutineType(types: !417)
!417 = !{null, !418}
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !410, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !421)
!421 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !354, file: !355, line: 250, baseType: !423, size: 288, offset: 384)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !425)
!424 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!425 = !{!426, !427, !428, !429, !430, !431, !432, !433, !434}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !423, file: !424, line: 26, baseType: !121, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !423, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !423, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !423, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !423, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !423, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !423, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !423, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !423, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !354, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !354, file: !355, line: 256, baseType: !389, size: 64, offset: 704)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !354, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !354, file: !355, line: 300, baseType: !439, size: 96, offset: 800)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !440)
!440 = !{!441, !442, !443}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !439, file: !355, line: 153, baseType: !22, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !439, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !439, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !354, file: !355, line: 325, baseType: !445, size: 32, offset: 896)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !447)
!447 = !{!448, !457, !458}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !446, file: !300, line: 5074, baseType: !449, size: 96)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !451)
!450 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!451 = !{!452, !455, !456}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !449, file: !450, line: 57, baseType: !453, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !450, line: 57, flags: DIFlagFwdDecl)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !449, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !449, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !446, file: !300, line: 5075, baseType: !389, size: 64, offset: 96)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !446, file: !300, line: 5076, baseType: !459, offset: 160)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!460 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!461 = !{}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !354, file: !355, line: 343, baseType: !463, size: 64, offset: 928)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !463, file: !424, line: 63, baseType: !121, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !463, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!467 = !{!468, !469, !470, !471}
!468 = !DILocalVariable(name: "thread", arg: 1, scope: !349, file: !350, line: 175, type: !353)
!469 = !DILocalVariable(name: "region_num", scope: !349, file: !350, line: 200, type: !154)
!470 = !DILocalVariable(name: "guard_start", scope: !349, file: !350, line: 265, type: !22)
!471 = !DILocalVariable(name: "guard_size", scope: !349, file: !350, line: 266, type: !344)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 96, elements: !484)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !474, line: 52, size: 96, elements: !475)
!474 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!475 = !{!476, !477, !478}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !473, file: !474, line: 53, baseType: !22, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !474, line: 54, baseType: !344, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !473, file: !474, line: 55, baseType: !479, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !480, line: 151, baseType: !481)
!480 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 149, size: 32, elements: !482)
!482 = !{!483}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !481, file: !480, line: 150, baseType: !121, size: 32)
!484 = !{!485}
!485 = !DISubrange(count: 1)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 96, elements: !484)
!487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !490, file: !523, line: 39, type: !154, isLocal: true, isDefinition: true)
!490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !492, globals: !522, splitDebugInlining: false, nameTableKind: None)
!491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!492 = !{!493, !102, !103, !510, !154}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !495, line: 1226, baseType: !496)
!495 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 1213, size: 352, elements: !497)
!497 = !{!498, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !496, file: !495, line: 1215, baseType: !499, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !496, file: !495, line: 1216, baseType: !120, size: 32, offset: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !496, file: !495, line: 1217, baseType: !120, size: 32, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !496, file: !495, line: 1218, baseType: !120, size: 32, offset: 96)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !496, file: !495, line: 1219, baseType: !120, size: 32, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !496, file: !495, line: 1220, baseType: !120, size: 32, offset: 160)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !496, file: !495, line: 1221, baseType: !120, size: 32, offset: 192)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !496, file: !495, line: 1222, baseType: !120, size: 32, offset: 224)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !496, file: !495, line: 1223, baseType: !120, size: 32, offset: 256)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !496, file: !495, line: 1224, baseType: !120, size: 32, offset: 288)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !496, file: !495, line: 1225, baseType: !120, size: 32, offset: 320)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !513, line: 27, size: 96, elements: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = !{!515, !516, !517}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !512, file: !513, line: 29, baseType: !121, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !512, file: !513, line: 31, baseType: !144, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !512, file: !513, line: 37, baseType: !518, size: 32, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !480, line: 146, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !480, line: 141, size: 32, elements: !520)
!520 = !{!521}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !519, file: !480, line: 143, baseType: !121, size: 32)
!522 = !{!488}
!523 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !526, file: !533, line: 21, type: !106, isLocal: true, isDefinition: true)
!526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !528, globals: !532, splitDebugInlining: false, nameTableKind: None)
!527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!528 = !{!529, !103, !102}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !531, line: 22, baseType: !103)
!531 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!532 = !{!524}
!533 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !536, file: !541, line: 13, type: !558, isLocal: true, isDefinition: true)
!536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !538, splitDebugInlining: false, nameTableKind: None)
!537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!538 = !{!539, !534}
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "mpu_config", scope: !536, file: !541, line: 37, type: !542, isLocal: false, isDefinition: true)
!541 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !513, line: 41, size: 64, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !543, file: !513, line: 43, baseType: !121, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !543, file: !513, line: 45, baseType: !547, size: 32, offset: 32)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !513, line: 27, size: 96, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !549, file: !513, line: 29, baseType: !121, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !549, file: !513, line: 31, baseType: !144, size: 32, offset: 32)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !549, file: !513, line: 37, baseType: !554, size: 32, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !480, line: 146, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !480, line: 141, size: 32, elements: !556)
!556 = !{!557}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !555, file: !480, line: 143, baseType: !121, size: 32)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 192, elements: !385)
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !561, file: !645, line: 72, type: !728, isLocal: true, isDefinition: true)
!561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !563, retainedTypes: !631, globals: !642, splitDebugInlining: false, nameTableKind: None)
!562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!563 = !{!30, !564}
!564 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !565)
!565 = !{!566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630}
!566 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!567 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!568 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!569 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!570 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!571 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!572 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!573 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!574 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!575 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!576 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!577 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!578 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!579 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!580 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!581 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!582 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!583 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!584 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!585 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!586 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!587 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!588 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!589 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!590 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!591 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!592 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!593 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!594 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!595 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!596 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!597 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!598 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!599 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!600 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!601 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!602 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!603 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!604 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!605 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!606 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!607 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!608 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!609 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!610 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!611 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!612 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!613 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!614 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!615 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!616 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!617 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!618 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!619 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!620 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!621 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!622 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!623 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!624 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!625 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!626 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!627 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!628 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!629 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!630 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!631 = !{!344, !103, !102, !632}
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 244, baseType: !634)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 236, size: 192, elements: !635)
!635 = !{!636, !637, !638, !639, !640, !641}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !634, file: !116, line: 238, baseType: !120, size: 32)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !634, file: !116, line: 239, baseType: !120, size: 32, offset: 32)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !634, file: !116, line: 240, baseType: !120, size: 32, offset: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !634, file: !116, line: 241, baseType: !120, size: 32, offset: 96)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !634, file: !116, line: 242, baseType: !120, size: 32, offset: 128)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !634, file: !116, line: 243, baseType: !120, size: 32, offset: 160)
!642 = !{!643, !649, !665, !676, !693, !559, !695, !708, !710, !712, !714, !716, !718, !720, !722, !724, !726}
!643 = !DIGlobalVariableExpression(var: !644, expr: !DIExpression())
!644 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !561, file: !645, line: 424, type: !646, isLocal: false, isDefinition: true, align: 16)
!645 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !647)
!647 = !{!648}
!648 = !DISubrange(count: 4)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !561, file: !645, line: 424, type: !651, isLocal: false, isDefinition: true, align: 32)
!651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !652)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !653)
!653 = !{!654, !655, !656, !657, !663, !664}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !652, file: !141, line: 380, baseType: !144, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !652, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !652, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !652, file: !141, line: 386, baseType: !658, size: 32, offset: 96)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !659, file: !141, line: 359, baseType: !154, size: 8)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !659, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !652, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !652, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!665 = !DIGlobalVariableExpression(var: !666, expr: !DIExpression())
!666 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !561, file: !645, line: 424, type: !667, isLocal: true, isDefinition: true, align: 32)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !669)
!669 = !{!670, !675}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !668, file: !132, line: 60, baseType: !671, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!672 = !DISubroutineType(types: !673)
!673 = !{!103, !674}
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !668, file: !132, line: 65, baseType: !674, size: 32, offset: 32)
!676 = !DIGlobalVariableExpression(var: !677, expr: !DIExpression())
!677 = distinct !DIGlobalVariable(name: "exti_data", scope: !561, file: !645, line: 423, type: !678, isLocal: true, isDefinition: true)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !645, line: 107, size: 1472, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !678, file: !645, line: 109, baseType: !681, size: 1472)
!681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !682, size: 1472, elements: !691)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !645, line: 101, size: 64, elements: !683)
!683 = !{!684, !690}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !682, file: !645, line: 102, baseType: !685, size: 32)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !686, line: 63, baseType: !687)
!686 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 32)
!688 = !DISubroutineType(types: !689)
!689 = !{null, !103, !102}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !682, file: !645, line: 103, baseType: !102, size: 32, offset: 32)
!691 = !{!692}
!692 = !DISubrange(count: 23)
!693 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression())
!694 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !561, file: !645, line: 424, type: !659, isLocal: true, isDefinition: true, align: 8)
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !697, file: !645, line: 493, type: !702, isLocal: true, isDefinition: true, align: 32)
!697 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !645, file: !645, line: 460, type: !698, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !700)
!698 = !DISubroutineType(types: !699)
!699 = !{null, !674}
!700 = !{!701}
!701 = !DILocalVariable(name: "dev", arg: 1, scope: !697, file: !645, line: 460, type: !674)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !703)
!703 = !{!704, !705, !706, !707}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !702, file: !10, line: 55, baseType: !332, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !702, file: !10, line: 57, baseType: !332, size: 32, offset: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !702, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !702, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !697, file: !645, line: 497, type: !702, isLocal: true, isDefinition: true, align: 32)
!710 = !DIGlobalVariableExpression(var: !711, expr: !DIExpression())
!711 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !697, file: !645, line: 507, type: !702, isLocal: true, isDefinition: true, align: 32)
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !697, file: !645, line: 512, type: !702, isLocal: true, isDefinition: true, align: 32)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !697, file: !645, line: 516, type: !702, isLocal: true, isDefinition: true, align: 32)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !697, file: !645, line: 523, type: !702, isLocal: true, isDefinition: true, align: 32)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !697, file: !645, line: 527, type: !702, isLocal: true, isDefinition: true, align: 32)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !697, file: !645, line: 581, type: !702, isLocal: true, isDefinition: true, align: 32)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !697, file: !645, line: 586, type: !702, isLocal: true, isDefinition: true, align: 32)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !697, file: !645, line: 591, type: !702, isLocal: true, isDefinition: true, align: 32)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !697, file: !645, line: 595, type: !702, isLocal: true, isDefinition: true, align: 32)
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 736, elements: !691)
!729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !730)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 134, baseType: !564)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !733, file: !738, line: 22, type: !760, isLocal: false, isDefinition: true, align: 16)
!733 = distinct !DICompileUnit(language: DW_LANG_C99, file: !734, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !735, splitDebugInlining: false, nameTableKind: None)
!734 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!735 = !{!736, !731, !742, !744, !746, !748, !750, !752, !754, !756, !758}
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !733, file: !738, line: 17, type: !739, isLocal: false, isDefinition: true, align: 16)
!738 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 192, elements: !740)
!740 = !{!741}
!741 = !DISubrange(count: 12)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !733, file: !738, line: 29, type: !646, isLocal: false, isDefinition: true, align: 16)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !733, file: !738, line: 36, type: !646, isLocal: false, isDefinition: true, align: 16)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !733, file: !738, line: 43, type: !646, isLocal: false, isDefinition: true, align: 16)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !733, file: !738, line: 50, type: !646, isLocal: false, isDefinition: true, align: 16)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !733, file: !738, line: 57, type: !646, isLocal: false, isDefinition: true, align: 16)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !733, file: !738, line: 64, type: !646, isLocal: false, isDefinition: true, align: 16)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !733, file: !738, line: 71, type: !646, isLocal: false, isDefinition: true, align: 16)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !733, file: !738, line: 78, type: !646, isLocal: false, isDefinition: true, align: 16)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !733, file: !738, line: 85, type: !646, isLocal: false, isDefinition: true, align: 16)
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !761)
!761 = !{!762}
!762 = !DISubrange(count: 3)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !765, file: !829, line: 398, type: !862, isLocal: true, isDefinition: true)
!765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !767, retainedTypes: !780, globals: !826, splitDebugInlining: false, nameTableKind: None)
!766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!767 = !{!768, !30, !773}
!768 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !769, line: 197, baseType: !32, size: 32, elements: !770)
!769 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!770 = !{!771, !772}
!771 = !DIEnumerator(name: "SUCCESS", value: 0)
!772 = !DIEnumerator(name: "ERROR", value: 1)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !774, line: 44, baseType: !32, size: 32, elements: !775)
!774 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!775 = !{!776, !777, !778, !779}
!776 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!777 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!778 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!779 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!780 = !{!102, !103, !121, !781, !819, !825}
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !783)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !784)
!784 = !{!785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !818}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !783, file: !116, line: 338, baseType: !120, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !783, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !783, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !783, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !783, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !783, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !783, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !783, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !783, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !783, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !783, file: !116, line: 348, baseType: !796, size: 64, offset: 320)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !385)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !783, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !783, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !783, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !783, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !783, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !783, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !783, file: !116, line: 355, baseType: !796, size: 64, offset: 576)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !783, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !783, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !783, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !783, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !783, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !783, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !783, file: !116, line: 362, baseType: !796, size: 64, offset: 832)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !783, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !783, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !783, file: !116, line: 365, baseType: !796, size: 64, offset: 960)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !783, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !783, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !783, file: !116, line: 368, baseType: !817, size: 32, offset: 1088)
!817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 32, elements: !484)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !783, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !821, line: 343, size: 64, elements: !822)
!821 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!822 = !{!823, !824}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !820, file: !821, line: 344, baseType: !121, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !820, file: !821, line: 345, baseType: !121, size: 32, offset: 32)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!826 = !{!827, !833, !849, !860, !763}
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !765, file: !829, line: 752, type: !830, isLocal: false, isDefinition: true, align: 16)
!829 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 704, elements: !831)
!831 = !{!832}
!832 = !DISubrange(count: 44)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !765, file: !829, line: 752, type: !835, isLocal: false, isDefinition: true, align: 32)
!835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !836)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !837)
!837 = !{!838, !839, !840, !841, !847, !848}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !836, file: !141, line: 380, baseType: !144, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !836, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !836, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !836, file: !141, line: 386, baseType: !842, size: 32, offset: 96)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !844)
!844 = !{!845, !846}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !843, file: !141, line: 359, baseType: !154, size: 8)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !843, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !836, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !836, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !765, file: !829, line: 752, type: !851, isLocal: true, isDefinition: true, align: 32)
!851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !852)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !853)
!853 = !{!854, !859}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !852, file: !132, line: 60, baseType: !855, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!856 = !DISubroutineType(types: !857)
!857 = !{!103, !858}
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !852, file: !132, line: 65, baseType: !858, size: 32, offset: 32)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !765, file: !829, line: 752, type: !843, isLocal: true, isDefinition: true, align: 8)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !774, line: 100, size: 224, elements: !863)
!863 = !{!864, !870, !871, !880, !885, !890, !896}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !862, file: !774, line: 101, baseType: !865, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !774, line: 76, baseType: !866)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!867 = !DISubroutineType(types: !868)
!868 = !{!103, !858, !869}
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !774, line: 56, baseType: !102)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !862, file: !774, line: 102, baseType: !865, size: 32, offset: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !862, file: !774, line: 103, baseType: !872, size: 32, offset: 64)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !774, line: 83, baseType: !873)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!874 = !DISubroutineType(types: !875)
!875 = !{!103, !858, !869, !876, !102}
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !774, line: 72, baseType: !877)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 32)
!878 = !DISubroutineType(types: !879)
!879 = !{null, !858, !869, !102}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !862, file: !774, line: 104, baseType: !881, size: 32, offset: 96)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !774, line: 79, baseType: !882)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 32)
!883 = !DISubroutineType(types: !884)
!884 = !{!103, !858, !869, !825}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !862, file: !774, line: 105, baseType: !886, size: 32, offset: 128)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !774, line: 88, baseType: !887)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = !DISubroutineType(types: !889)
!889 = !{!773, !858, !869}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !862, file: !774, line: 106, baseType: !891, size: 32, offset: 160)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !774, line: 92, baseType: !892)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!893 = !DISubroutineType(types: !894)
!894 = !{!103, !858, !869, !895}
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !774, line: 64, baseType: !102)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !862, file: !774, line: 107, baseType: !897, size: 32, offset: 192)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !774, line: 96, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = !DISubroutineType(types: !900)
!900 = !{!103, !858, !869, !102}
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "debug_hook_in", scope: !903, file: !907, line: 43, type: !1099, isLocal: true, isDefinition: true)
!903 = distinct !DICompileUnit(language: DW_LANG_C99, file: !904, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !905, retainedTypes: !914, globals: !994, splitDebugInlining: false, nameTableKind: None)
!904 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!905 = !{!30, !906}
!906 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !907, line: 214, baseType: !32, size: 32, elements: !908)
!907 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!908 = !{!909, !910, !911, !912, !913}
!909 = !DIEnumerator(name: "ESC_ESC", value: 0)
!910 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!911 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!912 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!913 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!914 = !{!102, !103, !915, !32, !24}
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !918)
!918 = !{!919, !938, !942, !946, !959, !964, !968, !972, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !917, file: !203, line: 365, baseType: !920, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!921 = !DISubroutineType(types: !922)
!922 = !{!103, !923, !224}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !925)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !926)
!926 = !{!927, !928, !929, !930, !936, !937}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !925, file: !141, line: 380, baseType: !144, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !925, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !925, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !925, file: !141, line: 386, baseType: !931, size: 32, offset: 96)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !933)
!933 = !{!934, !935}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !932, file: !141, line: 359, baseType: !154, size: 8)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !932, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !925, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !925, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !917, file: !203, line: 366, baseType: !939, size: 32, offset: 32)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DISubroutineType(types: !941)
!941 = !{null, !923, !155}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !917, file: !203, line: 374, baseType: !943, size: 32, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DISubroutineType(types: !945)
!945 = !{!103, !923}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !917, file: !203, line: 377, baseType: !947, size: 32, offset: 96)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DISubroutineType(types: !949)
!949 = !{!103, !923, !950}
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !953)
!953 = !{!954, !955, !956, !957, !958}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !952, file: !203, line: 123, baseType: !121, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !952, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !952, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !952, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !952, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !917, file: !203, line: 379, baseType: !960, size: 32, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = !DISubroutineType(types: !962)
!962 = !{!103, !923, !963}
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !917, file: !203, line: 384, baseType: !965, size: 32, offset: 160)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DISubroutineType(types: !967)
!967 = !{!103, !923, !255, !103}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !917, file: !203, line: 393, baseType: !969, size: 32, offset: 192)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DISubroutineType(types: !971)
!971 = !{!103, !923, !261, !262}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !917, file: !203, line: 402, baseType: !973, size: 32, offset: 224)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{null, !923}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !917, file: !203, line: 405, baseType: !973, size: 32, offset: 256)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !917, file: !203, line: 408, baseType: !943, size: 32, offset: 288)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !917, file: !203, line: 411, baseType: !973, size: 32, offset: 320)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !917, file: !203, line: 414, baseType: !973, size: 32, offset: 352)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !917, file: !203, line: 417, baseType: !943, size: 32, offset: 384)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !917, file: !203, line: 420, baseType: !943, size: 32, offset: 416)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !917, file: !203, line: 423, baseType: !973, size: 32, offset: 448)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !917, file: !203, line: 426, baseType: !973, size: 32, offset: 480)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !917, file: !203, line: 429, baseType: !943, size: 32, offset: 512)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !917, file: !203, line: 432, baseType: !943, size: 32, offset: 544)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !917, file: !203, line: 435, baseType: !987, size: 32, offset: 576)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 32)
!988 = !DISubroutineType(types: !989)
!989 = !{null, !923, !990, !102}
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !991)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DISubroutineType(types: !993)
!993 = !{null, !923, !102}
!994 = !{!995, !901, !1002, !1044, !1046, !1052, !1059, !1062, !1087, !1091, !1093, !1095, !1097}
!995 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression())
!996 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !903, file: !907, line: 603, type: !997, isLocal: true, isDefinition: true, align: 32)
!997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !999)
!999 = !{!1000, !1001}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !998, file: !132, line: 60, baseType: !943, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !998, file: !132, line: 65, baseType: !923, size: 32, offset: 32)
!1002 = !DIGlobalVariableExpression(var: !1003, expr: !DIExpression())
!1003 = distinct !DIGlobalVariable(name: "avail_queue", scope: !903, file: !907, line: 108, type: !1004, isLocal: true, isDefinition: true)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !300, line: 2208, size: 128, elements: !1006)
!1006 = !{!1007}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1005, file: !300, line: 2209, baseType: !1008, size: 128)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !300, line: 1709, size: 128, elements: !1009)
!1009 = !{!1010, !1023, !1025}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1008, file: !300, line: 1710, baseType: !1011, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !1012, line: 46, baseType: !1013)
!1012 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !1012, line: 41, size: 64, elements: !1014)
!1014 = !{!1015, !1022}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1013, file: !1012, line: 42, baseType: !1016, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !1012, line: 39, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !1012, line: 35, size: 32, elements: !1019)
!1019 = !{!1020}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1018, file: !1012, line: 36, baseType: !1021, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !1012, line: 32, baseType: !121)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1013, file: !1012, line: 43, baseType: !1016, size: 32, offset: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1008, file: !300, line: 1711, baseType: !1024, offset: 64)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1008, file: !300, line: 1712, baseType: !1026, size: 64, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !1027)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !1028)
!1028 = !{!1029}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1027, file: !304, line: 232, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !1032)
!1032 = !{!1033, !1039}
!1033 = !DIDerivedType(tag: DW_TAG_member, scope: !1031, file: !309, line: 38, baseType: !1034, size: 32)
!1034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1031, file: !309, line: 38, size: 32, elements: !1035)
!1035 = !{!1036, !1038}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1034, file: !309, line: 39, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1034, file: !309, line: 40, baseType: !1037, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, scope: !1031, file: !309, line: 42, baseType: !1040, size: 32, offset: 32)
!1040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1031, file: !309, line: 42, size: 32, elements: !1041)
!1041 = !{!1042, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1040, file: !309, line: 43, baseType: !1037, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1040, file: !309, line: 44, baseType: !1037, size: 32)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "lines_queue", scope: !903, file: !907, line: 109, type: !1004, isLocal: true, isDefinition: true)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "completion_cb", scope: !903, file: !907, line: 110, type: !1048, isLocal: true, isDefinition: true)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!154, !1051, !154}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "debug_hook_out", scope: !903, file: !907, line: 54, type: !1054, isLocal: true, isDefinition: true)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_out_debug_hook_t", file: !1056, line: 40, baseType: !1057)
!1056 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/uart_console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!103, !146}
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !903, file: !907, line: 38, type: !1061, isLocal: true, isDefinition: true)
!1061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !923)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "cmd", scope: !1064, file: !907, line: 435, type: !1075, isLocal: true, isDefinition: true)
!1064 = distinct !DISubprogram(name: "uart_console_isr", scope: !907, file: !907, line: 428, type: !992, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !1065)
!1065 = !{!1066, !1067, !1068, !1070, !1071}
!1066 = !DILocalVariable(name: "unused", arg: 1, scope: !1064, file: !907, line: 428, type: !923)
!1067 = !DILocalVariable(name: "user_data", arg: 2, scope: !1064, file: !907, line: 428, type: !102)
!1068 = !DILocalVariable(name: "byte", scope: !1069, file: !907, line: 436, type: !154)
!1069 = distinct !DILexicalBlock(scope: !1064, file: !907, line: 434, column: 48)
!1070 = !DILocalVariable(name: "rx", scope: !1069, file: !907, line: 437, type: !103)
!1071 = !DILocalVariable(name: "ret", scope: !1072, file: !907, line: 461, type: !102)
!1072 = distinct !DILexicalBlock(scope: !1073, file: !907, line: 461, column: 10)
!1073 = distinct !DILexicalBlock(scope: !1074, file: !907, line: 460, column: 13)
!1074 = distinct !DILexicalBlock(scope: !1069, file: !907, line: 460, column: 7)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !1077, line: 21, size: 1088, elements: !1078)
!1077 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1078 = !{!1079, !1082, !1083}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1076, file: !1077, line: 23, baseType: !1080, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !1081)
!1081 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1076, file: !1077, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1076, file: !1077, line: 27, baseType: !1084, size: 1024, offset: 40)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 1024, elements: !1085)
!1085 = !{!1086}
!1086 = !DISubrange(count: 128)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "esc_state", scope: !903, file: !907, line: 228, type: !1089, isLocal: true, isDefinition: true)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1090, line: 22, baseType: !1081)
!1090 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "ansi_val", scope: !903, file: !907, line: 229, type: !32, isLocal: true, isDefinition: true)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !903, file: !907, line: 229, type: !32, isLocal: true, isDefinition: true)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "cur", scope: !903, file: !907, line: 230, type: !154, isLocal: true, isDefinition: true)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "end", scope: !903, file: !907, line: 230, type: !154, isLocal: true, isDefinition: true)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_in_debug_hook_t", file: !1056, line: 45, baseType: !1100)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!103, !154}
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1105, file: !1274, line: 762, type: !1383, isLocal: true, isDefinition: true)
!1105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1107, retainedTypes: !1125, globals: !1271, splitDebugInlining: false, nameTableKind: None)
!1106 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!1107 = !{!30, !1108, !1114, !1119, !773}
!1108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1109, line: 506, baseType: !32, size: 32, elements: !1110)
!1109 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1110 = !{!1111, !1112, !1113}
!1111 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1112 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1113 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1109, line: 512, baseType: !32, size: 32, elements: !1115)
!1115 = !{!1116, !1117, !1118}
!1116 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1117 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1118 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !686, line: 43, baseType: !32, size: 32, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1124}
!1121 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1122 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1123 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1124 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1125 = !{!102, !103, !1126, !1196, !1201, !1161, !1114, !1108, !1206, !1207, !121, !1221, !1176, !1051, !1231, !1232}
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1109, line: 523, size: 288, elements: !1129)
!1129 = !{!1130, !1151, !1157, !1162, !1166, !1167, !1168, !1172, !1192}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1128, file: !1109, line: 524, baseType: !1131, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!103, !1134, !1149, !1150}
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141, !1147, !1148}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1136, file: !141, line: 380, baseType: !144, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1136, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1136, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1136, file: !141, line: 386, baseType: !1142, size: 32, offset: 96)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1144)
!1144 = !{!1145, !1146}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1143, file: !141, line: 359, baseType: !154, size: 8)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1143, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1136, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1136, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1109, line: 237, baseType: !154)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1109, line: 257, baseType: !121)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1128, file: !1109, line: 530, baseType: !1152, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!103, !1134, !1155}
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1109, line: 229, baseType: !121)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1128, file: !1109, line: 532, baseType: !1158, size: 32, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!103, !1134, !1161, !1156}
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1109, line: 216, baseType: !121)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1128, file: !1109, line: 535, baseType: !1163, size: 32, offset: 96)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!103, !1134, !1161}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1128, file: !1109, line: 537, baseType: !1163, size: 32, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1128, file: !1109, line: 539, baseType: !1163, size: 32, offset: 160)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1128, file: !1109, line: 541, baseType: !1169, size: 32, offset: 192)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!103, !1134, !1149, !1108, !1114}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1128, file: !1109, line: 544, baseType: !1173, size: 32, offset: 224)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!103, !1134, !1176, !157}
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1109, line: 478, size: 96, elements: !1178)
!1178 = !{!1179, !1186, !1191}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1177, file: !1109, line: 482, baseType: !1180, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1181, line: 33, baseType: !1182)
!1181 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1181, line: 29, size: 32, elements: !1183)
!1183 = !{!1184}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1182, file: !1181, line: 30, baseType: !1185, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1177, file: !1109, line: 485, baseType: !1187, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1109, line: 464, baseType: !1188)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{null, !1134, !1176, !1161}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1177, file: !1109, line: 493, baseType: !1161, size: 32, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1128, file: !1109, line: 547, baseType: !1193, size: 32, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!121, !1134}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1109, line: 428, size: 32, elements: !1199)
!1199 = !{!1200}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1198, file: !1109, line: 434, baseType: !1161, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1109, line: 441, size: 32, elements: !1204)
!1204 = !{!1205}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1203, file: !1109, line: 447, baseType: !1161, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 276, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 265, size: 320, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1209, file: !116, line: 267, baseType: !120, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1209, file: !116, line: 268, baseType: !120, size: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1209, file: !116, line: 269, baseType: !120, size: 32, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1209, file: !116, line: 270, baseType: !120, size: 32, offset: 96)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1209, file: !116, line: 271, baseType: !120, size: 32, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1209, file: !116, line: 272, baseType: !120, size: 32, offset: 160)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1209, file: !116, line: 273, baseType: !120, size: 32, offset: 192)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1209, file: !116, line: 274, baseType: !120, size: 32, offset: 224)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1209, file: !116, line: 275, baseType: !1220, size: 64, offset: 256)
!1220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !385)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 289, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 282, size: 288, elements: !1224)
!1224 = !{!1225, !1226, !1227, !1229, !1230}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1223, file: !116, line: 284, baseType: !120, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1223, file: !116, line: 285, baseType: !120, size: 32, offset: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1223, file: !116, line: 286, baseType: !1228, size: 128, offset: 64)
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !647)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1223, file: !116, line: 287, baseType: !796, size: 64, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1223, file: !116, line: 288, baseType: !120, size: 32, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !774, line: 100, size: 224, elements: !1235)
!1235 = !{!1236, !1241, !1242, !1251, !1256, !1261, !1266}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1234, file: !774, line: 101, baseType: !1237, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !774, line: 76, baseType: !1238)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!103, !1134, !869}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1234, file: !774, line: 102, baseType: !1237, size: 32, offset: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1234, file: !774, line: 103, baseType: !1243, size: 32, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !774, line: 83, baseType: !1244)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!103, !1134, !869, !1247, !102}
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !774, line: 72, baseType: !1248)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{null, !1134, !869, !102}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1234, file: !774, line: 104, baseType: !1252, size: 32, offset: 96)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !774, line: 79, baseType: !1253)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!103, !1134, !869, !825}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1234, file: !774, line: 105, baseType: !1257, size: 32, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !774, line: 88, baseType: !1258)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!773, !1134, !869}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1234, file: !774, line: 106, baseType: !1262, size: 32, offset: 160)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !774, line: 92, baseType: !1263)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!103, !1134, !869, !895}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1234, file: !774, line: 107, baseType: !1267, size: 32, offset: 192)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !774, line: 96, baseType: !1268)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!103, !1134, !869, !102}
!1271 = !{!1272, !1278, !1280, !1290, !1295, !1297, !1299, !1301, !1303, !1305, !1307, !1309, !1311, !1313, !1315, !1317, !1319, !1321, !1323, !1325, !1327, !1329, !1331, !1333, !1335, !1349, !1351, !1353, !1355, !1357, !1359, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1375, !1377, !1103, !1379, !1381, !1394, !1396, !1398, !1400, !1402, !1404}
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1105, file: !1274, line: 762, type: !1275, isLocal: false, isDefinition: true, align: 16)
!1274 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1276)
!1276 = !{!1277}
!1277 = !DISubrange(count: 5)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1105, file: !1274, line: 762, type: !1135, isLocal: false, isDefinition: true, align: 32)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1105, file: !1274, line: 762, type: !1282, isLocal: true, isDefinition: true, align: 32)
!1282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1283)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1284)
!1284 = !{!1285, !1289}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1283, file: !132, line: 60, baseType: !1286, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!103, !1134}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1283, file: !132, line: 65, baseType: !1134, size: 32, offset: 32)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1105, file: !1274, line: 766, type: !1292, isLocal: false, isDefinition: true, align: 16)
!1292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 160, elements: !1293)
!1293 = !{!1294}
!1294 = !DISubrange(count: 10)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1105, file: !1274, line: 766, type: !1135, isLocal: false, isDefinition: true, align: 32)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1105, file: !1274, line: 766, type: !1282, isLocal: true, isDefinition: true, align: 32)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1105, file: !1274, line: 770, type: !1275, isLocal: false, isDefinition: true, align: 16)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1105, file: !1274, line: 770, type: !1135, isLocal: false, isDefinition: true, align: 32)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1105, file: !1274, line: 770, type: !1282, isLocal: true, isDefinition: true, align: 32)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1105, file: !1274, line: 774, type: !1275, isLocal: false, isDefinition: true, align: 16)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1105, file: !1274, line: 774, type: !1135, isLocal: false, isDefinition: true, align: 32)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1105, file: !1274, line: 774, type: !1282, isLocal: true, isDefinition: true, align: 32)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1105, file: !1274, line: 778, type: !1275, isLocal: false, isDefinition: true, align: 16)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1105, file: !1274, line: 778, type: !1135, isLocal: false, isDefinition: true, align: 32)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1105, file: !1274, line: 778, type: !1282, isLocal: true, isDefinition: true, align: 32)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1105, file: !1274, line: 782, type: !1275, isLocal: false, isDefinition: true, align: 16)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1105, file: !1274, line: 782, type: !1135, isLocal: false, isDefinition: true, align: 32)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1105, file: !1274, line: 782, type: !1282, isLocal: true, isDefinition: true, align: 32)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1105, file: !1274, line: 786, type: !1275, isLocal: false, isDefinition: true, align: 16)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1105, file: !1274, line: 786, type: !1135, isLocal: false, isDefinition: true, align: 32)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1105, file: !1274, line: 786, type: !1282, isLocal: true, isDefinition: true, align: 32)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1105, file: !1274, line: 790, type: !1275, isLocal: false, isDefinition: true, align: 16)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1105, file: !1274, line: 790, type: !1135, isLocal: false, isDefinition: true, align: 32)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1105, file: !1274, line: 790, type: !1282, isLocal: true, isDefinition: true, align: 32)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1105, file: !1274, line: 762, type: !1337, isLocal: true, isDefinition: true)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1338, line: 237, size: 128, elements: !1339)
!1338 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1339 = !{!1340, !1341, !1342}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1337, file: !1338, line: 239, baseType: !1203, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1337, file: !1338, line: 241, baseType: !1134, size: 32, offset: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1337, file: !1338, line: 243, baseType: !1343, size: 64, offset: 64)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1181, line: 40, baseType: !1344)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1181, line: 35, size: 64, elements: !1345)
!1345 = !{!1346, !1348}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1344, file: !1181, line: 36, baseType: !1347, size: 32)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1344, file: !1181, line: 37, baseType: !1347, size: 32, offset: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1105, file: !1274, line: 762, type: !1143, isLocal: true, isDefinition: true, align: 8)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1105, file: !1274, line: 766, type: !1337, isLocal: true, isDefinition: true)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1105, file: !1274, line: 766, type: !1143, isLocal: true, isDefinition: true, align: 8)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1105, file: !1274, line: 770, type: !1337, isLocal: true, isDefinition: true)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1105, file: !1274, line: 770, type: !1143, isLocal: true, isDefinition: true, align: 8)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1105, file: !1274, line: 774, type: !1337, isLocal: true, isDefinition: true)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1105, file: !1274, line: 774, type: !1143, isLocal: true, isDefinition: true, align: 8)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1105, file: !1274, line: 778, type: !1337, isLocal: true, isDefinition: true)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1105, file: !1274, line: 778, type: !1143, isLocal: true, isDefinition: true, align: 8)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1105, file: !1274, line: 782, type: !1337, isLocal: true, isDefinition: true)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1105, file: !1274, line: 782, type: !1143, isLocal: true, isDefinition: true, align: 8)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1105, file: !1274, line: 786, type: !1337, isLocal: true, isDefinition: true)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1105, file: !1274, line: 786, type: !1143, isLocal: true, isDefinition: true, align: 8)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1105, file: !1274, line: 790, type: !1337, isLocal: true, isDefinition: true)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1105, file: !1274, line: 790, type: !1143, isLocal: true, isDefinition: true, align: 8)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1105, file: !1274, line: 656, type: !1127, isLocal: true, isDefinition: true)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1105, file: !1274, line: 766, type: !1383, isLocal: true, isDefinition: true)
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1338, line: 224, size: 160, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1389}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1384, file: !1338, line: 226, baseType: !1198, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1384, file: !1338, line: 228, baseType: !825, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1384, file: !1338, line: 230, baseType: !103, size: 32, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1384, file: !1338, line: 231, baseType: !1390, size: 64, offset: 96)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !821, line: 343, size: 64, elements: !1391)
!1391 = !{!1392, !1393}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1390, file: !821, line: 344, baseType: !121, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1390, file: !821, line: 345, baseType: !121, size: 32, offset: 32)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1105, file: !1274, line: 770, type: !1383, isLocal: true, isDefinition: true)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1105, file: !1274, line: 774, type: !1383, isLocal: true, isDefinition: true)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1105, file: !1274, line: 778, type: !1383, isLocal: true, isDefinition: true)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1105, file: !1274, line: 782, type: !1383, isLocal: true, isDefinition: true)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1105, file: !1274, line: 786, type: !1383, isLocal: true, isDefinition: true)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1105, file: !1274, line: 790, type: !1383, isLocal: true, isDefinition: true)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1408, file: !1579, line: 1914, type: !1653, isLocal: true, isDefinition: true)
!1408 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1409, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1410, retainedTypes: !1443, globals: !1576, splitDebugInlining: false, nameTableKind: None)
!1409 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!1410 = !{!30, !1411, !1418, !1425, !1432, !1438, !773}
!1411 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !203, line: 47, baseType: !32, size: 32, elements: !1412)
!1412 = !{!1413, !1414, !1415, !1416, !1417}
!1413 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1414 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1415 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1416 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1417 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1418 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !203, line: 75, baseType: !32, size: 32, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1423, !1424}
!1420 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1421 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1422 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1423 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1424 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1425 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !203, line: 92, baseType: !32, size: 32, elements: !1426)
!1426 = !{!1427, !1428, !1429, !1430, !1431}
!1427 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1428 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1429 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1430 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1431 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1432 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !203, line: 84, baseType: !32, size: 32, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437}
!1434 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1435 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1436 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1437 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1438 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !203, line: 107, baseType: !32, size: 32, elements: !1439)
!1439 = !{!1440, !1441, !1442}
!1440 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1441 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1442 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1443 = !{!102, !103, !1444, !155, !154, !1523, !121, !869, !1534, !328, !1573, !1575}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !1447)
!1447 = !{!1448, !1467, !1471, !1475, !1488, !1493, !1497, !1501, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1446, file: !203, line: 365, baseType: !1449, size: 32)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!103, !1452, !224}
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1454)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459, !1465, !1466}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1454, file: !141, line: 380, baseType: !144, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1454, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1454, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1454, file: !141, line: 386, baseType: !1460, size: 32, offset: 96)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1462)
!1462 = !{!1463, !1464}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1461, file: !141, line: 359, baseType: !154, size: 8)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1461, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1454, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1454, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1446, file: !203, line: 366, baseType: !1468, size: 32, offset: 32)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{null, !1452, !155}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1446, file: !203, line: 374, baseType: !1472, size: 32, offset: 64)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!103, !1452}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1446, file: !203, line: 377, baseType: !1476, size: 32, offset: 96)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!103, !1452, !1479}
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !1482)
!1482 = !{!1483, !1484, !1485, !1486, !1487}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1481, file: !203, line: 123, baseType: !121, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1481, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1481, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1481, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1481, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1446, file: !203, line: 379, baseType: !1489, size: 32, offset: 128)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!103, !1452, !1492}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1446, file: !203, line: 384, baseType: !1494, size: 32, offset: 160)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 32)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!103, !1452, !255, !103}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1446, file: !203, line: 393, baseType: !1498, size: 32, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!103, !1452, !261, !262}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1446, file: !203, line: 402, baseType: !1502, size: 32, offset: 224)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DISubroutineType(types: !1504)
!1504 = !{null, !1452}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1446, file: !203, line: 405, baseType: !1502, size: 32, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1446, file: !203, line: 408, baseType: !1472, size: 32, offset: 288)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1446, file: !203, line: 411, baseType: !1502, size: 32, offset: 320)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1446, file: !203, line: 414, baseType: !1502, size: 32, offset: 352)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1446, file: !203, line: 417, baseType: !1472, size: 32, offset: 384)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1446, file: !203, line: 420, baseType: !1472, size: 32, offset: 416)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1446, file: !203, line: 423, baseType: !1502, size: 32, offset: 448)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1446, file: !203, line: 426, baseType: !1502, size: 32, offset: 480)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1446, file: !203, line: 429, baseType: !1472, size: 32, offset: 512)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1446, file: !203, line: 432, baseType: !1472, size: 32, offset: 544)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1446, file: !203, line: 435, baseType: !1516, size: 32, offset: 576)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{null, !1452, !1519, !102}
!1519 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !1520)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{null, !1452, !102}
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 508, baseType: !1525)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 499, size: 224, elements: !1526)
!1526 = !{!1527, !1528, !1529, !1530, !1531, !1532, !1533}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1525, file: !116, line: 501, baseType: !120, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1525, file: !116, line: 502, baseType: !120, size: 32, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1525, file: !116, line: 503, baseType: !120, size: 32, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1525, file: !116, line: 504, baseType: !120, size: 32, offset: 96)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1525, file: !116, line: 505, baseType: !120, size: 32, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1525, file: !116, line: 506, baseType: !120, size: 32, offset: 160)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1525, file: !116, line: 507, baseType: !120, size: 32, offset: 192)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !774, line: 100, size: 224, elements: !1537)
!1537 = !{!1538, !1543, !1544, !1553, !1558, !1563, !1568}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1536, file: !774, line: 101, baseType: !1539, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !774, line: 76, baseType: !1540)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!103, !1452, !869}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1536, file: !774, line: 102, baseType: !1539, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1536, file: !774, line: 103, baseType: !1545, size: 32, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !774, line: 83, baseType: !1546)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!103, !1452, !869, !1549, !102}
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !774, line: 72, baseType: !1550)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{null, !1452, !869, !102}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1536, file: !774, line: 104, baseType: !1554, size: 32, offset: 96)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !774, line: 79, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{!103, !1452, !869, !825}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1536, file: !774, line: 105, baseType: !1559, size: 32, offset: 128)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !774, line: 88, baseType: !1560)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!773, !1452, !869}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1536, file: !774, line: 106, baseType: !1564, size: 32, offset: 160)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !774, line: 92, baseType: !1565)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!103, !1452, !869, !895}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1536, file: !774, line: 107, baseType: !1569, size: 32, offset: 192)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !774, line: 96, baseType: !1570)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!103, !1452, !869, !102}
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1574)
!1574 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1576 = !{!1577, !1583, !1585, !1592, !1406, !1594, !1602, !1625, !1628, !1631, !1642, !1644}
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1408, file: !1579, line: 1914, type: !1580, isLocal: false, isDefinition: true, align: 16)
!1579 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1581)
!1581 = !{!1582}
!1582 = !DISubrange(count: 8)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1408, file: !1579, line: 1914, type: !1453, isLocal: false, isDefinition: true, align: 32)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1408, file: !1579, line: 1914, type: !1587, isLocal: true, isDefinition: true, align: 32)
!1587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1588, file: !132, line: 60, baseType: !1472, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1588, file: !132, line: 65, baseType: !1452, size: 32, offset: 32)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1408, file: !1579, line: 1914, type: !1461, isLocal: true, isDefinition: true, align: 8)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1408, file: !1579, line: 1914, type: !1596, isLocal: true, isDefinition: true)
!1596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1597, size: 64, elements: !484)
!1597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !821, line: 343, size: 64, elements: !1599)
!1599 = !{!1600, !1601}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1598, file: !821, line: 344, baseType: !121, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1598, file: !821, line: 345, baseType: !121, size: 32, offset: 32)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1408, file: !1579, line: 1914, type: !1604, isLocal: true, isDefinition: true)
!1604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1606, line: 60, size: 64, elements: !1607)
!1606 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1607 = !{!1608, !1624}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1605, file: !1606, line: 69, baseType: !1609, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1611)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1606, line: 50, size: 64, elements: !1612)
!1612 = !{!1613, !1622, !1623}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1611, file: !1606, line: 52, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1616)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1617, line: 37, baseType: !1618)
!1617 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1617, line: 32, size: 64, elements: !1619)
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1618, file: !1617, line: 34, baseType: !121, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1618, file: !1617, line: 36, baseType: !121, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1611, file: !1606, line: 54, baseType: !154, size: 8, offset: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1611, file: !1606, line: 56, baseType: !154, size: 8, offset: 40)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1605, file: !1606, line: 71, baseType: !154, size: 8, offset: 32)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1408, file: !1579, line: 1914, type: !1627, isLocal: true, isDefinition: true)
!1627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1610, size: 64, elements: !484)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1408, file: !1579, line: 1914, type: !1630, isLocal: true, isDefinition: true)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 128, elements: !385)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1633, file: !1579, line: 1914, type: !1636, isLocal: true, isDefinition: true, align: 32)
!1633 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1579, file: !1579, line: 1914, type: !1503, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !1634)
!1634 = !{!1635}
!1635 = !DILocalVariable(name: "dev", arg: 1, scope: !1633, file: !1579, line: 1914, type: !1452)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1637)
!1637 = !{!1638, !1639, !1640, !1641}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1636, file: !10, line: 55, baseType: !332, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1636, file: !10, line: 57, baseType: !332, size: 32, offset: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1636, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1636, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1408, file: !1579, line: 1539, type: !1445, isLocal: true, isDefinition: true)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1408, file: !1579, line: 1914, type: !1646, isLocal: true, isDefinition: true)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1647, line: 74, size: 128, elements: !1648)
!1647 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1648 = !{!1649, !1650, !1651, !1652}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1646, file: !1647, line: 76, baseType: !121, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1646, file: !1647, line: 78, baseType: !1452, size: 32, offset: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1646, file: !1647, line: 80, baseType: !1519, size: 32, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1646, file: !1647, line: 81, baseType: !102, size: 32, offset: 96)
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1647, line: 22, size: 256, elements: !1655)
!1655 = !{!1656, !1657, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1668}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1654, file: !1647, line: 24, baseType: !1523, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1654, file: !1647, line: 26, baseType: !1658, size: 32, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1654, file: !1647, line: 28, baseType: !344, size: 32, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1654, file: !1647, line: 30, baseType: !157, size: 8, offset: 96)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1654, file: !1647, line: 32, baseType: !103, size: 32, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1654, file: !1647, line: 34, baseType: !157, size: 8, offset: 160)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1654, file: !1647, line: 36, baseType: !157, size: 8, offset: 168)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1654, file: !1647, line: 38, baseType: !157, size: 8, offset: 176)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1654, file: !1647, line: 40, baseType: !157, size: 8, offset: 184)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1654, file: !1647, line: 41, baseType: !1667, size: 32, offset: 192)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1654, file: !1647, line: 44, baseType: !1669, size: 32, offset: 224)
!1669 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !203, line: 150, baseType: !1502)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1672, file: !1750, line: 65, type: !120, isLocal: true, isDefinition: true)
!1672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1673, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1674, retainedTypes: !1675, globals: !1747, splitDebugInlining: false, nameTableKind: None)
!1673 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!1674 = !{!564}
!1675 = !{!1676, !1678, !332, !154, !121, !1686, !1717}
!1676 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1677, line: 46, baseType: !420)
!1677 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !495, line: 770, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 764, size: 128, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1680, file: !495, line: 766, baseType: !120, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1680, file: !495, line: 767, baseType: !120, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1680, file: !495, line: 768, baseType: !120, size: 32, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1680, file: !495, line: 769, baseType: !499, size: 32, offset: 96)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !1689)
!1689 = !{!1690, !1692, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1707, !1712, !1716}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1688, file: !495, line: 413, baseType: !1691, size: 256)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1581)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1688, file: !495, line: 414, baseType: !1693, size: 768, offset: 256)
!1693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1694)
!1694 = !{!1695}
!1695 = !DISubrange(count: 24)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1688, file: !495, line: 415, baseType: !1691, size: 256, offset: 1024)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1688, file: !495, line: 416, baseType: !1693, size: 768, offset: 1280)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1688, file: !495, line: 417, baseType: !1691, size: 256, offset: 2048)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1688, file: !495, line: 418, baseType: !1693, size: 768, offset: 2304)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1688, file: !495, line: 419, baseType: !1691, size: 256, offset: 3072)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1688, file: !495, line: 420, baseType: !1693, size: 768, offset: 3328)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1688, file: !495, line: 421, baseType: !1691, size: 256, offset: 4096)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1688, file: !495, line: 422, baseType: !1704, size: 1792, offset: 4352)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1705)
!1705 = !{!1706}
!1706 = !DISubrange(count: 56)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1688, file: !495, line: 423, baseType: !1708, size: 1920, offset: 6144)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1709, size: 1920, elements: !1710)
!1709 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1710 = !{!1711}
!1711 = !DISubrange(count: 240)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1688, file: !495, line: 424, baseType: !1713, size: 20608, offset: 8064)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1714)
!1714 = !{!1715}
!1715 = !DISubrange(count: 644)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1688, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !1720)
!1720 = !{!1721, !1722, !1723, !1724, !1725, !1726, !1727, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1738, !1739, !1740, !1742, !1744, !1746}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1719, file: !495, line: 447, baseType: !499, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1719, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1719, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1719, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1719, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1719, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1719, file: !495, line: 453, baseType: !1728, size: 96, offset: 192)
!1728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1709, size: 96, elements: !740)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1719, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1719, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1719, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1719, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1719, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1719, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1719, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1719, file: !495, line: 461, baseType: !1737, size: 64, offset: 512)
!1737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 64, elements: !385)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1719, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1719, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1719, file: !495, line: 464, baseType: !1741, size: 128, offset: 640)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 128, elements: !647)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1719, file: !495, line: 465, baseType: !1743, size: 160, offset: 768)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 160, elements: !1276)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1719, file: !495, line: 466, baseType: !1745, size: 160, offset: 928)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1276)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1719, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!1747 = !{!1748, !1774, !1777, !1779, !1781, !1670}
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1672, file: !1750, line: 285, type: !1751, isLocal: true, isDefinition: true, align: 32)
!1750 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1752)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1753)
!1753 = !{!1754, !1773}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1752, file: !132, line: 60, baseType: !1755, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 32)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!103, !1758}
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1760)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1761)
!1761 = !{!1762, !1763, !1764, !1765, !1771, !1772}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1760, file: !141, line: 380, baseType: !144, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1760, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1760, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1760, file: !141, line: 386, baseType: !1766, size: 32, offset: 96)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1768)
!1768 = !{!1769, !1770}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1767, file: !141, line: 359, baseType: !154, size: 8)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1767, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1760, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1760, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1752, file: !132, line: 65, baseType: !1758, size: 32, offset: 32)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "lock", scope: !1672, file: !1750, line: 34, type: !1776, isLocal: true, isDefinition: true)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!1777 = !DIGlobalVariableExpression(var: !1778, expr: !DIExpression())
!1778 = distinct !DIGlobalVariable(name: "last_load", scope: !1672, file: !1750, line: 36, type: !121, isLocal: true, isDefinition: true)
!1779 = !DIGlobalVariableExpression(var: !1780, expr: !DIExpression())
!1780 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1672, file: !1750, line: 48, type: !121, isLocal: true, isDefinition: true)
!1781 = !DIGlobalVariableExpression(var: !1782, expr: !DIExpression())
!1782 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1672, file: !1750, line: 54, type: !121, isLocal: true, isDefinition: true)
!1783 = !DIGlobalVariableExpression(var: !1784, expr: !DIExpression())
!1784 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1785, file: !1867, line: 22, type: !1869, isLocal: true, isDefinition: true)
!1785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1787, retainedTypes: !1788, globals: !1864, splitDebugInlining: false, nameTableKind: None)
!1786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!1787 = !{!1108, !1114}
!1788 = !{!1789, !1853, !1858, !1161, !1114, !1108, !1863, !102}
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1791)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1109, line: 523, size: 288, elements: !1792)
!1792 = !{!1793, !1812, !1816, !1820, !1824, !1825, !1826, !1830, !1849}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1791, file: !1109, line: 524, baseType: !1794, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DISubroutineType(types: !1796)
!1796 = !{!103, !1797, !1149, !1150}
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 32)
!1798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1799)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1800)
!1800 = !{!1801, !1802, !1803, !1804, !1810, !1811}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1799, file: !141, line: 380, baseType: !144, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1799, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1799, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1799, file: !141, line: 386, baseType: !1805, size: 32, offset: 96)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1807)
!1807 = !{!1808, !1809}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1806, file: !141, line: 359, baseType: !154, size: 8)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1806, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1799, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1799, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1791, file: !1109, line: 530, baseType: !1813, size: 32, offset: 32)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 32)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!103, !1797, !1155}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1791, file: !1109, line: 532, baseType: !1817, size: 32, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!103, !1797, !1161, !1156}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1791, file: !1109, line: 535, baseType: !1821, size: 32, offset: 96)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!103, !1797, !1161}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1791, file: !1109, line: 537, baseType: !1821, size: 32, offset: 128)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1791, file: !1109, line: 539, baseType: !1821, size: 32, offset: 160)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1791, file: !1109, line: 541, baseType: !1827, size: 32, offset: 192)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 32)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!103, !1797, !1149, !1108, !1114}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1791, file: !1109, line: 544, baseType: !1831, size: 32, offset: 224)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!103, !1797, !1834, !157}
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1109, line: 478, size: 96, elements: !1836)
!1836 = !{!1837, !1843, !1848}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1835, file: !1109, line: 482, baseType: !1838, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1181, line: 33, baseType: !1839)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1181, line: 29, size: 32, elements: !1840)
!1840 = !{!1841}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1839, file: !1181, line: 30, baseType: !1842, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1835, file: !1109, line: 485, baseType: !1844, size: 32, offset: 32)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1109, line: 464, baseType: !1845)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{null, !1797, !1834, !1161}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1835, file: !1109, line: 493, baseType: !1161, size: 32, offset: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1791, file: !1109, line: 547, baseType: !1850, size: 32, offset: 256)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!121, !1797}
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1109, line: 428, size: 32, elements: !1856)
!1856 = !{!1857}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1855, file: !1109, line: 434, baseType: !1161, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1860)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1109, line: 441, size: 32, elements: !1861)
!1861 = !{!1862}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1860, file: !1109, line: 447, baseType: !1161, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1864 = !{!1865, !1783}
!1865 = !DIGlobalVariableExpression(var: !1866, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1866 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1785, file: !1867, line: 37, type: !1868, isLocal: true, isDefinition: true)
!1867 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !344)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1870, size: 352, elements: !1871)
!1870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1797)
!1871 = !{!1872}
!1872 = !DISubrange(count: 11)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1875, file: !1917, line: 139, type: !1921, isLocal: false, isDefinition: true)
!1875 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1876, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1877, globals: !1914, splitDebugInlining: false, nameTableKind: None)
!1876 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!1877 = !{!1878}
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !1880)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !1881)
!1881 = !{!1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1880, file: !116, line: 338, baseType: !120, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1880, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1880, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1880, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1880, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1880, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1880, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1880, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1880, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1880, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1880, file: !116, line: 348, baseType: !796, size: 64, offset: 320)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1880, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1880, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1880, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1880, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1880, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1880, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1880, file: !116, line: 355, baseType: !796, size: 64, offset: 576)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1880, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1880, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1880, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1880, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1880, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1880, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1880, file: !116, line: 362, baseType: !796, size: 64, offset: 832)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1880, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1880, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1880, file: !116, line: 365, baseType: !796, size: 64, offset: 960)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1880, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1880, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1880, file: !116, line: 368, baseType: !817, size: 32, offset: 1088)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1880, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!1914 = !{!1915, !1918, !1873}
!1915 = !DIGlobalVariableExpression(var: !1916, expr: !DIExpression())
!1916 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1875, file: !1917, line: 137, type: !121, isLocal: false, isDefinition: true)
!1917 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1875, file: !1917, line: 138, type: !1920, isLocal: false, isDefinition: true)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 128, elements: !290)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 64, elements: !1581)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1924, file: !1927, line: 23, type: !262, isLocal: false, isDefinition: true)
!1924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1925, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1926, splitDebugInlining: false, nameTableKind: None)
!1925 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!1926 = !{!1922}
!1927 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1930, file: !1934, line: 86, type: !2183, isLocal: false, isDefinition: true, align: 512)
!1930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1931, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1932, retainedTypes: !1941, globals: !2014, splitDebugInlining: false, nameTableKind: None)
!1931 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!1932 = !{!1933, !30, !564}
!1933 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1934, line: 63, baseType: !32, size: 32, elements: !1935)
!1934 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1935 = !{!1936, !1937, !1938, !1939, !1940}
!1936 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1937 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1938 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1939 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1940 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1941 = !{!344, !102, !103, !1942, !1051, !121, !1972, !332, !154, !1997}
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1944)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1945, line: 51, size: 64, elements: !1946)
!1945 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1946 = !{!1947, !1967}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1944, file: !1945, line: 52, baseType: !1948, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1945, line: 38, baseType: !1949)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 32)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{!103, !1952, !261, !328}
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1955)
!1955 = !{!1956, !1957, !1958, !1959, !1965, !1966}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1954, file: !141, line: 380, baseType: !144, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1954, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1954, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1954, file: !141, line: 386, baseType: !1960, size: 32, offset: 96)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1962)
!1962 = !{!1963, !1964}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1961, file: !141, line: 359, baseType: !154, size: 8)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1961, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1954, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1954, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1944, file: !1945, line: 53, baseType: !1968, size: 32, offset: 32)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1945, line: 47, baseType: !1969)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 32)
!1970 = !DISubroutineType(types: !1971)
!1971 = !{!103, !1952, !261, !328, !121}
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !1974)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !1975)
!1975 = !{!1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1974, file: !495, line: 447, baseType: !499, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1974, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1974, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1974, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1974, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1974, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1974, file: !495, line: 453, baseType: !1728, size: 96, offset: 192)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1974, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1974, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1974, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1974, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1974, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1974, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1974, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1974, file: !495, line: 461, baseType: !1737, size: 64, offset: 512)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1974, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1974, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1974, file: !495, line: 464, baseType: !1741, size: 128, offset: 640)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1974, file: !495, line: 465, baseType: !1743, size: 160, offset: 768)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1974, file: !495, line: 466, baseType: !1745, size: 160, offset: 928)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1974, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !1999)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2000)
!2000 = !{!2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1999, file: !495, line: 413, baseType: !1691, size: 256)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1999, file: !495, line: 414, baseType: !1693, size: 768, offset: 256)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1999, file: !495, line: 415, baseType: !1691, size: 256, offset: 1024)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1999, file: !495, line: 416, baseType: !1693, size: 768, offset: 1280)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1999, file: !495, line: 417, baseType: !1691, size: 256, offset: 2048)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1999, file: !495, line: 418, baseType: !1693, size: 768, offset: 2304)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1999, file: !495, line: 419, baseType: !1691, size: 256, offset: 3072)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1999, file: !495, line: 420, baseType: !1693, size: 768, offset: 3328)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1999, file: !495, line: 421, baseType: !1691, size: 256, offset: 4096)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1999, file: !495, line: 422, baseType: !1704, size: 1792, offset: 4352)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1999, file: !495, line: 423, baseType: !1708, size: 1920, offset: 6144)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1999, file: !495, line: 424, baseType: !1713, size: 20608, offset: 8064)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1999, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!2014 = !{!2015, !2137, !2146, !2148, !1928, !2151, !2153, !2158}
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "_kernel", scope: !1930, file: !1934, line: 40, type: !2017, isLocal: false, isDefinition: true)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !304, line: 158, size: 288, elements: !2018)
!2018 = !{!2019, !2132}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2017, file: !304, line: 159, baseType: !2020, size: 192)
!2020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2021, size: 192, elements: !484)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !304, line: 100, size: 192, elements: !2022)
!2022 = !{!2023, !2024, !2025, !2126, !2127, !2128, !2129}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2021, file: !304, line: 102, baseType: !121, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2021, file: !304, line: 105, baseType: !1051, size: 32, offset: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2021, file: !304, line: 108, baseType: !2026, size: 32, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2028)
!2028 = !{!2029, !2087, !2099, !2100, !2101, !2102, !2108, !2121}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2027, file: !355, line: 247, baseType: !2030, size: 384)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2031)
!2031 = !{!2032, !2056, !2063, !2064, !2065, !2074, !2075, !2076}
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !2030, file: !355, line: 60, baseType: !2033, size: 64)
!2033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2030, file: !355, line: 60, size: 64, elements: !2034)
!2034 = !{!2035, !2050}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2033, file: !355, line: 61, baseType: !2036, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2037)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2038)
!2038 = !{!2039, !2045}
!2039 = !DIDerivedType(tag: DW_TAG_member, scope: !2037, file: !309, line: 38, baseType: !2040, size: 32)
!2040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2037, file: !309, line: 38, size: 32, elements: !2041)
!2041 = !{!2042, !2044}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2040, file: !309, line: 39, baseType: !2043, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2040, file: !309, line: 40, baseType: !2043, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, scope: !2037, file: !309, line: 42, baseType: !2046, size: 32, offset: 32)
!2046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2037, file: !309, line: 42, size: 32, elements: !2047)
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2046, file: !309, line: 43, baseType: !2043, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2046, file: !309, line: 44, baseType: !2043, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2033, file: !355, line: 62, baseType: !2051, size: 64)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2052)
!2052 = !{!2053}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2051, file: !380, line: 50, baseType: !2054, size: 64)
!2054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2055, size: 64, elements: !385)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2030, file: !355, line: 68, baseType: !2057, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2060)
!2060 = !{!2061}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2059, file: !304, line: 232, baseType: !2062, size: 64)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2037)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2030, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2030, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !2030, file: !355, line: 90, baseType: !2066, size: 16, offset: 112)
!2066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2030, file: !355, line: 90, size: 16, elements: !2067)
!2067 = !{!2068, !2073}
!2068 = !DIDerivedType(tag: DW_TAG_member, scope: !2066, file: !355, line: 91, baseType: !2069, size: 16)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2066, file: !355, line: 91, size: 16, elements: !2070)
!2070 = !{!2071, !2072}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2069, file: !355, line: 96, baseType: !403, size: 8)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2069, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2066, file: !355, line: 100, baseType: !328, size: 16)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2030, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2030, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2030, file: !355, line: 131, baseType: !2077, size: 192, offset: 192)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2078)
!2078 = !{!2079, !2080, !2086}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2077, file: !304, line: 245, baseType: !2036, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2077, file: !304, line: 246, baseType: !2081, size: 32, offset: 64)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2082)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{null, !2085}
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2077, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2027, file: !355, line: 250, baseType: !2088, size: 288, offset: 384)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2089)
!2089 = !{!2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2088, file: !424, line: 26, baseType: !121, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2088, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2088, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2088, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2088, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2088, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2088, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2088, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2088, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2027, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2027, file: !355, line: 256, baseType: !2058, size: 64, offset: 704)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2027, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2027, file: !355, line: 300, baseType: !2103, size: 96, offset: 800)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2104)
!2104 = !{!2105, !2106, !2107}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2103, file: !355, line: 153, baseType: !22, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2103, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2103, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2027, file: !355, line: 325, baseType: !2109, size: 32, offset: 896)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2111)
!2111 = !{!2112, !2118, !2119}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2110, file: !300, line: 5074, baseType: !2113, size: 96)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2114)
!2114 = !{!2115, !2116, !2117}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2113, file: !450, line: 57, baseType: !453, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2113, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2113, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2110, file: !300, line: 5075, baseType: !2058, size: 64, offset: 96)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2110, file: !300, line: 5076, baseType: !2120, offset: 160)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2027, file: !355, line: 343, baseType: !2122, size: 64, offset: 928)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2123)
!2123 = !{!2124, !2125}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2122, file: !424, line: 63, baseType: !121, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2122, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2021, file: !304, line: 111, baseType: !2026, size: 32, offset: 96)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2021, file: !304, line: 124, baseType: !103, size: 32, offset: 128)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2021, file: !304, line: 127, baseType: !154, size: 8, offset: 160)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2021, file: !304, line: 153, baseType: !2130, offset: 168)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2131, line: 33, elements: !461)
!2131 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2017, file: !304, line: 170, baseType: !2133, size: 96, offset: 192)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !304, line: 83, size: 96, elements: !2134)
!2134 = !{!2135, !2136}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2133, file: !304, line: 86, baseType: !2026, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2133, file: !304, line: 90, baseType: !2062, size: 64, offset: 32)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1930, file: !1934, line: 43, type: !2139, isLocal: false, isDefinition: true, align: 512)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2140, size: 8704, elements: !2144)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2141, line: 47, size: 8, elements: !2142)
!2141 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2142 = !{!2143}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2140, file: !2141, line: 48, baseType: !146, size: 8)
!2144 = !{!2145}
!2145 = !DISubrange(count: 1088)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1930, file: !1934, line: 44, type: !2027, isLocal: false, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1930, file: !1934, line: 48, type: !2150, isLocal: false, isDefinition: true)
!2150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2027, size: 1024, elements: !484)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1930, file: !1934, line: 217, type: !157, isLocal: false, isDefinition: true)
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1930, file: !1934, line: 50, type: !2155, isLocal: true, isDefinition: true, align: 512)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2140, size: 3072, elements: !2156)
!2156 = !{!485, !2157}
!2157 = !DISubrange(count: 384)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "levels", scope: !2160, file: !1934, line: 232, type: !2180, isLocal: true, isDefinition: true)
!2160 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1934, file: !1934, line: 230, type: !2161, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !2163)
!2161 = !DISubroutineType(types: !2162)
!2162 = !{null, !1933}
!2163 = !{!2164, !2165, !2175, !2179}
!2164 = !DILocalVariable(name: "level", arg: 1, scope: !2160, file: !1934, line: 230, type: !1933)
!2165 = !DILocalVariable(name: "entry", scope: !2160, file: !1934, line: 244, type: !2166)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2169)
!2169 = !{!2170, !2174}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2168, file: !132, line: 60, baseType: !2171, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!103, !1952}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2168, file: !132, line: 65, baseType: !1952, size: 32, offset: 32)
!2175 = !DILocalVariable(name: "dev", scope: !2176, file: !1934, line: 247, type: !1952)
!2176 = distinct !DILexicalBlock(scope: !2177, file: !1934, line: 246, column: 64)
!2177 = distinct !DILexicalBlock(scope: !2178, file: !1934, line: 246, column: 2)
!2178 = distinct !DILexicalBlock(scope: !2160, file: !1934, line: 246, column: 2)
!2179 = !DILocalVariable(name: "rc", scope: !2176, file: !1934, line: 248, type: !103)
!2180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2166, size: 192, elements: !2181)
!2181 = !{!2182}
!2182 = !DISubrange(count: 6)
!2183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2140, size: 16896, elements: !2184)
!2184 = !{!485, !2185}
!2185 = !DISubrange(count: 2112)
!2186 = !DIGlobalVariableExpression(var: !2187, expr: !DIExpression())
!2187 = distinct !DIGlobalVariable(name: "states_str", scope: !2188, file: !2189, line: 276, type: !2310, isLocal: true, isDefinition: true)
!2188 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2189, file: !2189, line: 271, type: !2190, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2301)
!2189 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!144, !2192, !1051, !344}
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !2193)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 32)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2195)
!2195 = !{!2196, !2254, !2266, !2267, !2268, !2269, !2275, !2288}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2194, file: !355, line: 247, baseType: !2197, size: 384)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2198)
!2198 = !{!2199, !2223, !2230, !2231, !2232, !2241, !2242, !2243}
!2199 = !DIDerivedType(tag: DW_TAG_member, scope: !2197, file: !355, line: 60, baseType: !2200, size: 64)
!2200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2197, file: !355, line: 60, size: 64, elements: !2201)
!2201 = !{!2202, !2217}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2200, file: !355, line: 61, baseType: !2203, size: 64)
!2203 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2204)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2205)
!2205 = !{!2206, !2212}
!2206 = !DIDerivedType(tag: DW_TAG_member, scope: !2204, file: !309, line: 38, baseType: !2207, size: 32)
!2207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2204, file: !309, line: 38, size: 32, elements: !2208)
!2208 = !{!2209, !2211}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2207, file: !309, line: 39, baseType: !2210, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2207, file: !309, line: 40, baseType: !2210, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, scope: !2204, file: !309, line: 42, baseType: !2213, size: 32, offset: 32)
!2213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2204, file: !309, line: 42, size: 32, elements: !2214)
!2214 = !{!2215, !2216}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2213, file: !309, line: 43, baseType: !2210, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2213, file: !309, line: 44, baseType: !2210, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2200, file: !355, line: 62, baseType: !2218, size: 64)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2219)
!2219 = !{!2220}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2218, file: !380, line: 50, baseType: !2221, size: 64)
!2221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2222, size: 64, elements: !385)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2197, file: !355, line: 68, baseType: !2224, size: 32, offset: 64)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2226)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2227)
!2227 = !{!2228}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2226, file: !304, line: 232, baseType: !2229, size: 64)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2204)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2197, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2197, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2232 = !DIDerivedType(tag: DW_TAG_member, scope: !2197, file: !355, line: 90, baseType: !2233, size: 16, offset: 112)
!2233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2197, file: !355, line: 90, size: 16, elements: !2234)
!2234 = !{!2235, !2240}
!2235 = !DIDerivedType(tag: DW_TAG_member, scope: !2233, file: !355, line: 91, baseType: !2236, size: 16)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2233, file: !355, line: 91, size: 16, elements: !2237)
!2237 = !{!2238, !2239}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2236, file: !355, line: 96, baseType: !403, size: 8)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2236, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2233, file: !355, line: 100, baseType: !328, size: 16)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2197, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2197, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2197, file: !355, line: 131, baseType: !2244, size: 192, offset: 192)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2245)
!2245 = !{!2246, !2247, !2253}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2244, file: !304, line: 245, baseType: !2203, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2244, file: !304, line: 246, baseType: !2248, size: 32, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2249)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!2250 = !DISubroutineType(types: !2251)
!2251 = !{null, !2252}
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2244, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2194, file: !355, line: 250, baseType: !2255, size: 288, offset: 384)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2256)
!2256 = !{!2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2255, file: !424, line: 26, baseType: !121, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2255, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2255, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2255, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2255, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2255, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2255, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2255, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2255, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2194, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2194, file: !355, line: 256, baseType: !2225, size: 64, offset: 704)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2194, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2194, file: !355, line: 300, baseType: !2270, size: 96, offset: 800)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2271)
!2271 = !{!2272, !2273, !2274}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2270, file: !355, line: 153, baseType: !22, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2270, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2270, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2194, file: !355, line: 325, baseType: !2276, size: 32, offset: 896)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 32)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2278)
!2278 = !{!2279, !2285, !2286}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2277, file: !300, line: 5074, baseType: !2280, size: 96)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2281)
!2281 = !{!2282, !2283, !2284}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2280, file: !450, line: 57, baseType: !453, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2280, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2280, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2277, file: !300, line: 5075, baseType: !2225, size: 64, offset: 96)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2277, file: !300, line: 5076, baseType: !2287, offset: 160)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2194, file: !355, line: 343, baseType: !2289, size: 64, offset: 928)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2290)
!2290 = !{!2291, !2292}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2289, file: !424, line: 63, baseType: !121, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2289, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2293 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2294, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2295, globals: !2297, splitDebugInlining: false, nameTableKind: None)
!2294 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2295 = !{!102, !144, !1676, !154, !103, !2296, !24, !344, !1051, !22, !121, !1573}
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2297 = !{!2186, !2298}
!2298 = !DIGlobalVariableExpression(var: !2299, expr: !DIExpression())
!2299 = distinct !DIGlobalVariable(name: "states_sz", scope: !2188, file: !2189, line: 279, type: !2300, isLocal: true, isDefinition: true)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1868, size: 256, elements: !1581)
!2301 = !{!2302, !2303, !2304, !2305, !2306, !2307, !2308}
!2302 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2188, file: !2189, line: 271, type: !2192)
!2303 = !DILocalVariable(name: "buf", arg: 2, scope: !2188, file: !2189, line: 271, type: !1051)
!2304 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2188, file: !2189, line: 271, type: !344)
!2305 = !DILocalVariable(name: "off", scope: !2188, file: !2189, line: 273, type: !344)
!2306 = !DILocalVariable(name: "bit", scope: !2188, file: !2189, line: 274, type: !154)
!2307 = !DILocalVariable(name: "thread_state", scope: !2188, file: !2189, line: 275, type: !154)
!2308 = !DILocalVariable(name: "index", scope: !2309, file: !2189, line: 293, type: !154)
!2309 = distinct !DILexicalBlock(scope: !2188, file: !2189, line: 293, column: 2)
!2310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1581)
!2311 = !DIGlobalVariableExpression(var: !2312, expr: !DIExpression())
!2312 = distinct !DIGlobalVariable(name: "lock", scope: !2313, file: !2332, line: 39, type: !2333, isLocal: true, isDefinition: true)
!2313 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2314, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2315, globals: !2331, splitDebugInlining: false, nameTableKind: None)
!2314 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2315 = !{!102, !157, !103, !2316}
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2318)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2319)
!2319 = !{!2320, !2326}
!2320 = !DIDerivedType(tag: DW_TAG_member, scope: !2318, file: !309, line: 38, baseType: !2321, size: 32)
!2321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2318, file: !309, line: 38, size: 32, elements: !2322)
!2322 = !{!2323, !2325}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2321, file: !309, line: 39, baseType: !2324, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2321, file: !309, line: 40, baseType: !2324, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, scope: !2318, file: !309, line: 42, baseType: !2327, size: 32, offset: 32)
!2327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2318, file: !309, line: 42, size: 32, elements: !2328)
!2328 = !{!2329, !2330}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2327, file: !309, line: 43, baseType: !2324, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2327, file: !309, line: 44, baseType: !2324, size: 32)
!2331 = !{!2311}
!2332 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2334 = !DIGlobalVariableExpression(var: !2335, expr: !DIExpression())
!2335 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2336, file: !2444, line: 56, type: !2433, isLocal: false, isDefinition: true)
!2336 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2337, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2338, globals: !2441, splitDebugInlining: false, nameTableKind: None)
!2337 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2338 = !{!2339, !1051, !102, !2439, !261, !1676, !332, !103, !121, !1573, !2440}
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 32)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !2341)
!2341 = !{!2342, !2400, !2412, !2413, !2414, !2415, !2421, !2434}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2340, file: !355, line: 247, baseType: !2343, size: 384)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !2344)
!2344 = !{!2345, !2369, !2376, !2377, !2378, !2387, !2388, !2389}
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !2343, file: !355, line: 60, baseType: !2346, size: 64)
!2346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2343, file: !355, line: 60, size: 64, elements: !2347)
!2347 = !{!2348, !2363}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2346, file: !355, line: 61, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2350)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2351)
!2351 = !{!2352, !2358}
!2352 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !309, line: 38, baseType: !2353, size: 32)
!2353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2350, file: !309, line: 38, size: 32, elements: !2354)
!2354 = !{!2355, !2357}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2353, file: !309, line: 39, baseType: !2356, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2353, file: !309, line: 40, baseType: !2356, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !309, line: 42, baseType: !2359, size: 32, offset: 32)
!2359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2350, file: !309, line: 42, size: 32, elements: !2360)
!2360 = !{!2361, !2362}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2359, file: !309, line: 43, baseType: !2356, size: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2359, file: !309, line: 44, baseType: !2356, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2346, file: !355, line: 62, baseType: !2364, size: 64)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !2365)
!2365 = !{!2366}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2364, file: !380, line: 50, baseType: !2367, size: 64)
!2367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2368, size: 64, elements: !385)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2343, file: !355, line: 68, baseType: !2370, size: 32, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !2372)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !2373)
!2373 = !{!2374}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2372, file: !304, line: 232, baseType: !2375, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2350)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2343, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2343, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2343, file: !355, line: 90, baseType: !2379, size: 16, offset: 112)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2343, file: !355, line: 90, size: 16, elements: !2380)
!2380 = !{!2381, !2386}
!2381 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !355, line: 91, baseType: !2382, size: 16)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2379, file: !355, line: 91, size: 16, elements: !2383)
!2383 = !{!2384, !2385}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2382, file: !355, line: 96, baseType: !403, size: 8)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2382, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2379, file: !355, line: 100, baseType: !328, size: 16)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2343, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2343, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2343, file: !355, line: 131, baseType: !2390, size: 192, offset: 192)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2391)
!2391 = !{!2392, !2393, !2399}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2390, file: !304, line: 245, baseType: !2349, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2390, file: !304, line: 246, baseType: !2394, size: 32, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2395)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{null, !2398}
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2390, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2340, file: !355, line: 250, baseType: !2401, size: 288, offset: 384)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !2402)
!2402 = !{!2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2401, file: !424, line: 26, baseType: !121, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2401, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2401, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2401, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2401, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2401, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2401, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2401, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2401, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2340, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2340, file: !355, line: 256, baseType: !2371, size: 64, offset: 704)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2340, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2340, file: !355, line: 300, baseType: !2416, size: 96, offset: 800)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !2417)
!2417 = !{!2418, !2419, !2420}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2416, file: !355, line: 153, baseType: !22, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2416, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2416, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2340, file: !355, line: 325, baseType: !2422, size: 32, offset: 896)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !2424)
!2424 = !{!2425, !2431, !2432}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2423, file: !300, line: 5074, baseType: !2426, size: 96)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !2427)
!2427 = !{!2428, !2429, !2430}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2426, file: !450, line: 57, baseType: !453, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2426, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2426, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2423, file: !300, line: 5075, baseType: !2371, size: 64, offset: 96)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2423, file: !300, line: 5076, baseType: !2433, offset: 160)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2340, file: !355, line: 343, baseType: !2435, size: 64, offset: 928)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !2436)
!2436 = !{!2437, !2438}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2435, file: !424, line: 63, baseType: !121, size: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2435, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 32)
!2441 = !{!2334, !2442, !2445, !2447}
!2442 = !DIGlobalVariableExpression(var: !2443, expr: !DIExpression())
!2443 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2336, file: !2444, line: 404, type: !103, isLocal: true, isDefinition: true)
!2444 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2445 = !DIGlobalVariableExpression(var: !2446, expr: !DIExpression())
!2446 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2336, file: !2444, line: 405, type: !103, isLocal: true, isDefinition: true)
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "pending_current", scope: !2336, file: !2444, line: 425, type: !2339, isLocal: true, isDefinition: true)
!2449 = !DIGlobalVariableExpression(var: !2450, expr: !DIExpression())
!2450 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2451, file: !2481, line: 15, type: !1573, isLocal: true, isDefinition: true)
!2451 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2452, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2453, globals: !2478, splitDebugInlining: false, nameTableKind: None)
!2452 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2453 = !{!1676, !102, !332, !121, !1573, !103, !2454, !1051, !420}
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !2456)
!2456 = !{!2457, !2472, !2477}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2455, file: !304, line: 245, baseType: !2458, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2459)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2460)
!2460 = !{!2461, !2467}
!2461 = !DIDerivedType(tag: DW_TAG_member, scope: !2459, file: !309, line: 38, baseType: !2462, size: 32)
!2462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2459, file: !309, line: 38, size: 32, elements: !2463)
!2463 = !{!2464, !2466}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2462, file: !309, line: 39, baseType: !2465, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2462, file: !309, line: 40, baseType: !2465, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, scope: !2459, file: !309, line: 42, baseType: !2468, size: 32, offset: 32)
!2468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2459, file: !309, line: 42, size: 32, elements: !2469)
!2469 = !{!2470, !2471}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2468, file: !309, line: 43, baseType: !2465, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2468, file: !309, line: 44, baseType: !2465, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2455, file: !304, line: 246, baseType: !2473, size: 32, offset: 64)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !2474)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!2475 = !DISubroutineType(types: !2476)
!2476 = !{null, !2454}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2455, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!2478 = !{!2449, !2479, !2483, !2485}
!2479 = !DIGlobalVariableExpression(var: !2480, expr: !DIExpression())
!2480 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2451, file: !2481, line: 19, type: !2482, isLocal: true, isDefinition: true)
!2481 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!2483 = !DIGlobalVariableExpression(var: !2484, expr: !DIExpression())
!2484 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2451, file: !2481, line: 25, type: !103, isLocal: true, isDefinition: true)
!2485 = !DIGlobalVariableExpression(var: !2486, expr: !DIExpression())
!2486 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2451, file: !2481, line: 17, type: !2487, isLocal: true, isDefinition: true)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2459)
!2488 = !DIGlobalVariableExpression(var: !2489, expr: !DIExpression())
!2489 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2490, file: !2509, line: 55, type: !2510, isLocal: true, isDefinition: true, align: 32)
!2490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2492, globals: !2508, splitDebugInlining: false, nameTableKind: None)
!2491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2492 = !{!102, !1676, !103, !2493}
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !2495)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !2496)
!2496 = !{!2497, !2503}
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !309, line: 38, baseType: !2498, size: 32)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !309, line: 38, size: 32, elements: !2499)
!2499 = !{!2500, !2502}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2498, file: !309, line: 39, baseType: !2501, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2498, file: !309, line: 40, baseType: !2501, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !309, line: 42, baseType: !2504, size: 32, offset: 32)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !309, line: 42, size: 32, elements: !2505)
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2504, file: !309, line: 43, baseType: !2501, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2504, file: !309, line: 44, baseType: !2501, size: 32)
!2508 = !{!2488}
!2509 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2511)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2512)
!2512 = !{!2513, !2520}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2511, file: !132, line: 60, baseType: !2514, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2515 = !DISubroutineType(types: !2516)
!2516 = !{!103, !2517}
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2519)
!2519 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !132, line: 48, flags: DIFlagFwdDecl)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2511, file: !132, line: 65, baseType: !2517, size: 32, offset: 32)
!2521 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2522, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2522 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getchar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2525 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2526, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2526 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2528, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2529, retainedTypes: !2537, splitDebugInlining: false, nameTableKind: None)
!2528 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2529 = !{!30, !2530}
!2530 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2531, line: 54, baseType: !32, size: 32, elements: !2532)
!2531 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2532 = !{!2533, !2534, !2535, !2536}
!2533 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2534 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2535 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2536 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2537 = !{!102, !344, !261, !24, !2538, !22, !2544, !103, !825, !2559}
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2531, line: 58, baseType: !2540)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2531, line: 58, size: 64, elements: !2541)
!2541 = !{!2542}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2540, file: !2531, line: 58, baseType: !2543, size: 64)
!2543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !1581)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2531, line: 68, size: 128, elements: !2546)
!2546 = !{!2547, !2550, !2551, !2552}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2545, file: !2531, line: 69, baseType: !2548, size: 64)
!2548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2549, size: 64, elements: !385)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2531, line: 61, baseType: !121)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2545, file: !2531, line: 70, baseType: !2549, size: 32, offset: 64)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2545, file: !2531, line: 71, baseType: !121, size: 32, offset: 96)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2545, file: !2531, line: 77, baseType: !2553, offset: 128)
!2553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2554, elements: !2557)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2531, line: 64, size: 32, elements: !2555)
!2555 = !{!2556}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2554, file: !2531, line: 65, baseType: !2549, size: 32)
!2557 = !{!2558}
!2558 = !DISubrange(count: 0)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!2560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2561, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2562, retainedTypes: !2582, splitDebugInlining: false, nameTableKind: None)
!2561 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2562 = !{!2563, !2571}
!2563 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2564, line: 69, baseType: !32, size: 32, elements: !2565)
!2564 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2565 = !{!2566, !2567, !2568, !2569, !2570}
!2566 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2567 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2568 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2569 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2570 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2571 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2564, line: 56, baseType: !32, size: 32, elements: !2572)
!2572 = !{!2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581}
!2573 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2574 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2575 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2576 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2577 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2578 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2579 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2580 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2581 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2582 = !{!103, !2563, !2571, !2583, !404, !164, !2585, !2586, !155, !329, !144, !344, !102, !22, !32, !2588, !2589, !2590, !1081, !2591, !421, !2592, !2584, !2593, !2594, !2595, !2596}
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2564, line: 31, baseType: !2584)
!2584 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !421)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !345, line: 329, baseType: !32)
!2586 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2564, line: 32, baseType: !2587)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1574)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !345, line: 145, baseType: !103)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 32)
!2597 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2598, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2598 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2600, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2601, splitDebugInlining: false, nameTableKind: None)
!2600 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2601 = !{!154, !102, !103, !2602, !1676, !121, !1573}
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2604)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !203, line: 336, size: 608, elements: !2605)
!2605 = !{!2606, !2625, !2629, !2633, !2646, !2651, !2655, !2659, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2604, file: !203, line: 365, baseType: !2607, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 32)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{!103, !2610, !224}
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2612)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2613)
!2613 = !{!2614, !2615, !2616, !2617, !2623, !2624}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2612, file: !141, line: 380, baseType: !144, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2612, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2612, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2612, file: !141, line: 386, baseType: !2618, size: 32, offset: 96)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 32)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2620)
!2620 = !{!2621, !2622}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2619, file: !141, line: 359, baseType: !154, size: 8)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2619, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2612, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2612, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2604, file: !203, line: 366, baseType: !2626, size: 32, offset: 32)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 32)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{null, !2610, !155}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2604, file: !203, line: 374, baseType: !2630, size: 32, offset: 64)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!103, !2610}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2604, file: !203, line: 377, baseType: !2634, size: 32, offset: 96)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 32)
!2635 = !DISubroutineType(types: !2636)
!2636 = !{!103, !2610, !2637}
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2639)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !203, line: 122, size: 64, elements: !2640)
!2640 = !{!2641, !2642, !2643, !2644, !2645}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2639, file: !203, line: 123, baseType: !121, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2639, file: !203, line: 124, baseType: !154, size: 8, offset: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2639, file: !203, line: 125, baseType: !154, size: 8, offset: 40)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2639, file: !203, line: 126, baseType: !154, size: 8, offset: 48)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2639, file: !203, line: 127, baseType: !154, size: 8, offset: 56)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2604, file: !203, line: 379, baseType: !2647, size: 32, offset: 128)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 32)
!2648 = !DISubroutineType(types: !2649)
!2649 = !{!103, !2610, !2650}
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2604, file: !203, line: 384, baseType: !2652, size: 32, offset: 160)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 32)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!103, !2610, !255, !103}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2604, file: !203, line: 393, baseType: !2656, size: 32, offset: 192)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{!103, !2610, !261, !262}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2604, file: !203, line: 402, baseType: !2660, size: 32, offset: 224)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 32)
!2661 = !DISubroutineType(types: !2662)
!2662 = !{null, !2610}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2604, file: !203, line: 405, baseType: !2660, size: 32, offset: 256)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2604, file: !203, line: 408, baseType: !2630, size: 32, offset: 288)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2604, file: !203, line: 411, baseType: !2660, size: 32, offset: 320)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2604, file: !203, line: 414, baseType: !2660, size: 32, offset: 352)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2604, file: !203, line: 417, baseType: !2630, size: 32, offset: 384)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2604, file: !203, line: 420, baseType: !2630, size: 32, offset: 416)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2604, file: !203, line: 423, baseType: !2660, size: 32, offset: 448)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2604, file: !203, line: 426, baseType: !2660, size: 32, offset: 480)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2604, file: !203, line: 429, baseType: !2630, size: 32, offset: 512)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2604, file: !203, line: 432, baseType: !2630, size: 32, offset: 544)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2604, file: !203, line: 435, baseType: !2674, size: 32, offset: 576)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 32)
!2675 = !DISubroutineType(types: !2676)
!2676 = !{null, !2610, !2677, !102}
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !203, line: 142, baseType: !2678)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 32)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{null, !2610, !102}
!2681 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2682, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2683, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2682 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2683 = !{!2684, !30}
!2684 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2685, line: 27, baseType: !32, size: 32, elements: !2686)
!2685 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2686 = !{!2687, !2688, !2689, !2690, !2691}
!2687 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2688 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2689 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2690 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2691 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2692 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2693, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2694, retainedTypes: !2695, splitDebugInlining: false, nameTableKind: None)
!2693 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2694 = !{!564, !2684, !30}
!2695 = !{!730, !2696, !102, !103, !332, !121, !154, !2713}
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2698)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2699)
!2699 = !{!2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2698, file: !495, line: 413, baseType: !1691, size: 256)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2698, file: !495, line: 414, baseType: !1693, size: 768, offset: 256)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2698, file: !495, line: 415, baseType: !1691, size: 256, offset: 1024)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2698, file: !495, line: 416, baseType: !1693, size: 768, offset: 1280)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2698, file: !495, line: 417, baseType: !1691, size: 256, offset: 2048)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2698, file: !495, line: 418, baseType: !1693, size: 768, offset: 2304)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2698, file: !495, line: 419, baseType: !1691, size: 256, offset: 3072)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2698, file: !495, line: 420, baseType: !1693, size: 768, offset: 3328)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2698, file: !495, line: 421, baseType: !1691, size: 256, offset: 4096)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2698, file: !495, line: 422, baseType: !1704, size: 1792, offset: 4352)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2698, file: !495, line: 423, baseType: !1708, size: 1920, offset: 6144)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2698, file: !495, line: 424, baseType: !1713, size: 20608, offset: 8064)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2698, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2715)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2716)
!2716 = !{!2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2715, file: !495, line: 447, baseType: !499, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2715, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2715, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2715, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2715, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2715, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2715, file: !495, line: 453, baseType: !1728, size: 96, offset: 192)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2715, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2715, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2715, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2715, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2715, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2715, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2715, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2715, file: !495, line: 461, baseType: !1737, size: 64, offset: 512)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2715, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2715, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2715, file: !495, line: 464, baseType: !1741, size: 128, offset: 640)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2715, file: !495, line: 465, baseType: !1743, size: 160, offset: 768)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2715, file: !495, line: 466, baseType: !1745, size: 160, offset: 928)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2715, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2738 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2739, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2739 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2740 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2741, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2742, splitDebugInlining: false, nameTableKind: None)
!2741 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2742 = !{!102, !103, !22, !2743}
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2745)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2746)
!2746 = !{!2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2745, file: !495, line: 447, baseType: !499, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2745, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2745, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2745, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2745, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2745, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2745, file: !495, line: 453, baseType: !1728, size: 96, offset: 192)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2745, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2745, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2745, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2745, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2745, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2745, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2745, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2745, file: !495, line: 461, baseType: !1737, size: 64, offset: 512)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2745, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2745, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2745, file: !495, line: 464, baseType: !1741, size: 128, offset: 640)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2745, file: !495, line: 465, baseType: !1743, size: 160, offset: 768)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2745, file: !495, line: 466, baseType: !1745, size: 160, offset: 928)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2745, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2769, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2770, splitDebugInlining: false, nameTableKind: None)
!2769 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2770 = !{!2771, !102, !103}
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2774)
!2774 = !{!2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2773, file: !495, line: 447, baseType: !499, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2773, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2773, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2773, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2773, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2773, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2773, file: !495, line: 453, baseType: !1728, size: 96, offset: 192)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2773, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2773, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2773, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2773, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2773, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2773, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2773, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2773, file: !495, line: 461, baseType: !1737, size: 64, offset: 512)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2773, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2773, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2773, file: !495, line: 464, baseType: !1741, size: 128, offset: 640)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2773, file: !495, line: 465, baseType: !1743, size: 160, offset: 768)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2773, file: !495, line: 466, baseType: !1745, size: 160, offset: 928)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2773, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2796 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2797, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2798, splitDebugInlining: false, nameTableKind: None)
!2797 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2798 = !{!2799, !121, !102, !103}
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 32)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2801, line: 98, size: 256, elements: !2802)
!2801 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2802 = !{!2803, !2808, !2813, !2818, !2823, !2828, !2833, !2838}
!2803 = !DIDerivedType(tag: DW_TAG_member, scope: !2800, file: !2801, line: 99, baseType: !2804, size: 32)
!2804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2800, file: !2801, line: 99, size: 32, elements: !2805)
!2805 = !{!2806, !2807}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2804, file: !2801, line: 99, baseType: !121, size: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2804, file: !2801, line: 99, baseType: !121, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, scope: !2800, file: !2801, line: 100, baseType: !2809, size: 32, offset: 32)
!2809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2800, file: !2801, line: 100, size: 32, elements: !2810)
!2810 = !{!2811, !2812}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2809, file: !2801, line: 100, baseType: !121, size: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2809, file: !2801, line: 100, baseType: !121, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, scope: !2800, file: !2801, line: 101, baseType: !2814, size: 32, offset: 64)
!2814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2800, file: !2801, line: 101, size: 32, elements: !2815)
!2815 = !{!2816, !2817}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2814, file: !2801, line: 101, baseType: !121, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2814, file: !2801, line: 101, baseType: !121, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, scope: !2800, file: !2801, line: 102, baseType: !2819, size: 32, offset: 96)
!2819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2800, file: !2801, line: 102, size: 32, elements: !2820)
!2820 = !{!2821, !2822}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2819, file: !2801, line: 102, baseType: !121, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2819, file: !2801, line: 102, baseType: !121, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, scope: !2800, file: !2801, line: 103, baseType: !2824, size: 32, offset: 128)
!2824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2800, file: !2801, line: 103, size: 32, elements: !2825)
!2825 = !{!2826, !2827}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2824, file: !2801, line: 103, baseType: !121, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2824, file: !2801, line: 103, baseType: !121, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, scope: !2800, file: !2801, line: 104, baseType: !2829, size: 32, offset: 160)
!2829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2800, file: !2801, line: 104, size: 32, elements: !2830)
!2830 = !{!2831, !2832}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2829, file: !2801, line: 104, baseType: !121, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2829, file: !2801, line: 104, baseType: !121, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, scope: !2800, file: !2801, line: 105, baseType: !2834, size: 32, offset: 192)
!2834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2800, file: !2801, line: 105, size: 32, elements: !2835)
!2835 = !{!2836, !2837}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2834, file: !2801, line: 105, baseType: !121, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2834, file: !2801, line: 105, baseType: !121, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2800, file: !2801, line: 106, baseType: !121, size: 32, offset: 224)
!2839 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2840, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2683, retainedTypes: !2841, splitDebugInlining: false, nameTableKind: None)
!2840 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2841 = !{!2842, !102, !103, !2867, !2559, !121}
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2844)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2845)
!2845 = !{!2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2844, file: !495, line: 447, baseType: !499, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2844, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2844, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2844, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2844, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2844, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2844, file: !495, line: 453, baseType: !1728, size: 96, offset: 192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2844, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2844, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2844, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2844, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2844, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2844, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2844, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2844, file: !495, line: 461, baseType: !1737, size: 64, offset: 512)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2844, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2844, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2844, file: !495, line: 464, baseType: !1741, size: 128, offset: 640)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2844, file: !495, line: 465, baseType: !1743, size: 160, offset: 768)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2844, file: !495, line: 466, baseType: !1745, size: 160, offset: 928)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2844, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2801, line: 141, baseType: !2869)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2801, line: 97, size: 256, elements: !2870)
!2870 = !{!2871}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2869, file: !2801, line: 107, baseType: !2872, size: 256)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2801, line: 98, size: 256, elements: !2873)
!2873 = !{!2874, !2879, !2884, !2889, !2894, !2899, !2904, !2909}
!2874 = !DIDerivedType(tag: DW_TAG_member, scope: !2872, file: !2801, line: 99, baseType: !2875, size: 32)
!2875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2872, file: !2801, line: 99, size: 32, elements: !2876)
!2876 = !{!2877, !2878}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2875, file: !2801, line: 99, baseType: !121, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2875, file: !2801, line: 99, baseType: !121, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, scope: !2872, file: !2801, line: 100, baseType: !2880, size: 32, offset: 32)
!2880 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2872, file: !2801, line: 100, size: 32, elements: !2881)
!2881 = !{!2882, !2883}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2880, file: !2801, line: 100, baseType: !121, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2880, file: !2801, line: 100, baseType: !121, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, scope: !2872, file: !2801, line: 101, baseType: !2885, size: 32, offset: 64)
!2885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2872, file: !2801, line: 101, size: 32, elements: !2886)
!2886 = !{!2887, !2888}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2885, file: !2801, line: 101, baseType: !121, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2885, file: !2801, line: 101, baseType: !121, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, scope: !2872, file: !2801, line: 102, baseType: !2890, size: 32, offset: 96)
!2890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2872, file: !2801, line: 102, size: 32, elements: !2891)
!2891 = !{!2892, !2893}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2890, file: !2801, line: 102, baseType: !121, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2890, file: !2801, line: 102, baseType: !121, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, scope: !2872, file: !2801, line: 103, baseType: !2895, size: 32, offset: 128)
!2895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2872, file: !2801, line: 103, size: 32, elements: !2896)
!2896 = !{!2897, !2898}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2895, file: !2801, line: 103, baseType: !121, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2895, file: !2801, line: 103, baseType: !121, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, scope: !2872, file: !2801, line: 104, baseType: !2900, size: 32, offset: 160)
!2900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2872, file: !2801, line: 104, size: 32, elements: !2901)
!2901 = !{!2902, !2903}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2900, file: !2801, line: 104, baseType: !121, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2900, file: !2801, line: 104, baseType: !121, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, scope: !2872, file: !2801, line: 105, baseType: !2905, size: 32, offset: 192)
!2905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2872, file: !2801, line: 105, size: 32, elements: !2906)
!2906 = !{!2907, !2908}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2905, file: !2801, line: 105, baseType: !121, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2905, file: !2801, line: 105, baseType: !121, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2872, file: !2801, line: 106, baseType: !121, size: 32, offset: 224)
!2910 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2911, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1674, retainedTypes: !2912, splitDebugInlining: false, nameTableKind: None)
!2911 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2912 = !{!730, !332, !154, !121, !2913, !2930}
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !495, line: 426, baseType: !2915)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 411, size: 28704, elements: !2916)
!2916 = !{!2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2915, file: !495, line: 413, baseType: !1691, size: 256)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2915, file: !495, line: 414, baseType: !1693, size: 768, offset: 256)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2915, file: !495, line: 415, baseType: !1691, size: 256, offset: 1024)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2915, file: !495, line: 416, baseType: !1693, size: 768, offset: 1280)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2915, file: !495, line: 417, baseType: !1691, size: 256, offset: 2048)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2915, file: !495, line: 418, baseType: !1693, size: 768, offset: 2304)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2915, file: !495, line: 419, baseType: !1691, size: 256, offset: 3072)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2915, file: !495, line: 420, baseType: !1693, size: 768, offset: 3328)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2915, file: !495, line: 421, baseType: !1691, size: 256, offset: 4096)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2915, file: !495, line: 422, baseType: !1704, size: 1792, offset: 4352)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2915, file: !495, line: 423, baseType: !1708, size: 1920, offset: 6144)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2915, file: !495, line: 424, baseType: !1713, size: 20608, offset: 8064)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2915, file: !495, line: 425, baseType: !120, size: 32, offset: 28672)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2932)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2933)
!2933 = !{!2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2932, file: !495, line: 447, baseType: !499, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2932, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2932, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2932, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2932, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2932, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2932, file: !495, line: 453, baseType: !1728, size: 96, offset: 192)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2932, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2932, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2932, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2932, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2932, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2932, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2932, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2932, file: !495, line: 461, baseType: !1737, size: 64, offset: 512)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2932, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2932, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2932, file: !495, line: 464, baseType: !1741, size: 128, offset: 640)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2932, file: !495, line: 465, baseType: !1743, size: 160, offset: 768)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2932, file: !495, line: 466, baseType: !1745, size: 160, offset: 928)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2932, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2955 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2956, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2957, splitDebugInlining: false, nameTableKind: None)
!2956 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2957 = !{!2958, !102, !103}
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !495, line: 468, baseType: !2960)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 445, size: 1120, elements: !2961)
!2961 = !{!2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2960, file: !495, line: 447, baseType: !499, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2960, file: !495, line: 448, baseType: !120, size: 32, offset: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2960, file: !495, line: 449, baseType: !120, size: 32, offset: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2960, file: !495, line: 450, baseType: !120, size: 32, offset: 96)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2960, file: !495, line: 451, baseType: !120, size: 32, offset: 128)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2960, file: !495, line: 452, baseType: !120, size: 32, offset: 160)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2960, file: !495, line: 453, baseType: !1728, size: 96, offset: 192)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2960, file: !495, line: 454, baseType: !120, size: 32, offset: 288)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2960, file: !495, line: 455, baseType: !120, size: 32, offset: 320)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2960, file: !495, line: 456, baseType: !120, size: 32, offset: 352)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2960, file: !495, line: 457, baseType: !120, size: 32, offset: 384)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2960, file: !495, line: 458, baseType: !120, size: 32, offset: 416)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2960, file: !495, line: 459, baseType: !120, size: 32, offset: 448)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2960, file: !495, line: 460, baseType: !120, size: 32, offset: 480)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2960, file: !495, line: 461, baseType: !1737, size: 64, offset: 512)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2960, file: !495, line: 462, baseType: !499, size: 32, offset: 576)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2960, file: !495, line: 463, baseType: !499, size: 32, offset: 608)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2960, file: !495, line: 464, baseType: !1741, size: 128, offset: 640)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2960, file: !495, line: 465, baseType: !1743, size: 160, offset: 768)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2960, file: !495, line: 466, baseType: !1745, size: 160, offset: 928)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2960, file: !495, line: 467, baseType: !120, size: 32, offset: 1088)
!2983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2984, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2985, splitDebugInlining: false, nameTableKind: None)
!2984 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2985 = !{!146, !1051, !344, !224, !2986, !155, !102}
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2988 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2989, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2990, splitDebugInlining: false, nameTableKind: None)
!2989 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!2990 = !{!2991}
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 32)
!2992 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !2993)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !2994)
!2994 = !{!2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2993, file: !116, line: 338, baseType: !120, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2993, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2993, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2993, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2993, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2993, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2993, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2993, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2993, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2993, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2993, file: !116, line: 348, baseType: !796, size: 64, offset: 320)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2993, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2993, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2993, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2993, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2993, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2993, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2993, file: !116, line: 355, baseType: !796, size: 64, offset: 576)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2993, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2993, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2993, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2993, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2993, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2993, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2993, file: !116, line: 362, baseType: !796, size: 64, offset: 832)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2993, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2993, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2993, file: !116, line: 365, baseType: !796, size: 64, offset: 960)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2993, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2993, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2993, file: !116, line: 368, baseType: !817, size: 32, offset: 1088)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2993, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!3027 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3028, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3028 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!3029 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3030, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3031, retainedTypes: !3047, splitDebugInlining: false, nameTableKind: None)
!3030 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!3031 = !{!3032, !3039, !3043}
!3032 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3033, line: 38, baseType: !32, size: 32, elements: !3034)
!3033 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3034 = !{!3035, !3036, !3037, !3038}
!3035 = !DIEnumerator(name: "HAL_OK", value: 0)
!3036 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3037 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3038 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3039 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !769, line: 184, baseType: !32, size: 32, elements: !3040)
!3040 = !{!3041, !3042}
!3041 = !DIEnumerator(name: "RESET", value: 0)
!3042 = !DIEnumerator(name: "SET", value: 1)
!3043 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !769, line: 190, baseType: !32, size: 32, elements: !3044)
!3044 = !{!3045, !3046}
!3045 = !DIEnumerator(name: "DISABLE", value: 0)
!3046 = !DIEnumerator(name: "ENABLE", value: 1)
!3047 = !{!102, !3048, !154, !121, !1575, !3084, !3090, !3101, !328, !3102, !1573}
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 32)
!3049 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !3050)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !3051)
!3051 = !{!3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3050, file: !116, line: 338, baseType: !120, size: 32)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3050, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3050, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3050, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3050, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3050, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3050, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3050, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3050, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3050, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3050, file: !116, line: 348, baseType: !796, size: 64, offset: 320)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3050, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3050, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3050, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3050, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3050, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3050, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3050, file: !116, line: 355, baseType: !796, size: 64, offset: 576)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3050, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3050, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3050, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3050, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3050, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3050, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3050, file: !116, line: 362, baseType: !796, size: 64, offset: 832)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3050, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3050, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3050, file: !116, line: 365, baseType: !796, size: 64, offset: 960)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3050, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3050, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3050, file: !116, line: 368, baseType: !817, size: 32, offset: 1088)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3050, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 32)
!3085 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 330, baseType: !3086)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 326, size: 64, elements: !3087)
!3087 = !{!3088, !3089}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3086, file: !116, line: 328, baseType: !120, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3086, file: !116, line: 329, baseType: !120, size: 32, offset: 32)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 32)
!3091 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !3092)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !3093)
!3093 = !{!3094, !3095, !3096, !3097, !3098, !3099, !3100}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3092, file: !116, line: 252, baseType: !120, size: 32)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3092, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3092, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3092, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3092, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3092, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3092, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 276, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 265, size: 320, elements: !3105)
!3105 = !{!3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3104, file: !116, line: 267, baseType: !120, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3104, file: !116, line: 268, baseType: !120, size: 32, offset: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3104, file: !116, line: 269, baseType: !120, size: 32, offset: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3104, file: !116, line: 270, baseType: !120, size: 32, offset: 96)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3104, file: !116, line: 271, baseType: !120, size: 32, offset: 128)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3104, file: !116, line: 272, baseType: !120, size: 32, offset: 160)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3104, file: !116, line: 273, baseType: !120, size: 32, offset: 192)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3104, file: !116, line: 274, baseType: !120, size: 32, offset: 224)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3104, file: !116, line: 275, baseType: !1220, size: 64, offset: 256)
!3115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3116, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3117, retainedTypes: !3118, splitDebugInlining: false, nameTableKind: None)
!3116 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!3117 = !{!768}
!3118 = !{!3119, !121, !3127, !3133, !3144}
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !495, line: 770, baseType: !3121)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !495, line: 764, size: 128, elements: !3122)
!3122 = !{!3123, !3124, !3125, !3126}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3121, file: !495, line: 766, baseType: !120, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3121, file: !495, line: 767, baseType: !120, size: 32, offset: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3121, file: !495, line: 768, baseType: !120, size: 32, offset: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3121, file: !495, line: 769, baseType: !499, size: 32, offset: 96)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 330, baseType: !3129)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 326, size: 64, elements: !3130)
!3130 = !{!3131, !3132}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3129, file: !116, line: 328, baseType: !120, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3129, file: !116, line: 329, baseType: !120, size: 32, offset: 32)
!3133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 32)
!3134 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 259, baseType: !3135)
!3135 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 250, size: 224, elements: !3136)
!3136 = !{!3137, !3138, !3139, !3140, !3141, !3142, !3143}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3135, file: !116, line: 252, baseType: !120, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3135, file: !116, line: 253, baseType: !120, size: 32, offset: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3135, file: !116, line: 254, baseType: !120, size: 32, offset: 64)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3135, file: !116, line: 255, baseType: !120, size: 32, offset: 96)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3135, file: !116, line: 256, baseType: !120, size: 32, offset: 128)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3135, file: !116, line: 257, baseType: !120, size: 32, offset: 160)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3135, file: !116, line: 258, baseType: !120, size: 32, offset: 192)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 32)
!3145 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 370, baseType: !3146)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 336, size: 1152, elements: !3147)
!3147 = !{!3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3146, file: !116, line: 338, baseType: !120, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3146, file: !116, line: 339, baseType: !120, size: 32, offset: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3146, file: !116, line: 340, baseType: !120, size: 32, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3146, file: !116, line: 341, baseType: !120, size: 32, offset: 96)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3146, file: !116, line: 342, baseType: !120, size: 32, offset: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3146, file: !116, line: 343, baseType: !120, size: 32, offset: 160)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3146, file: !116, line: 344, baseType: !120, size: 32, offset: 192)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3146, file: !116, line: 345, baseType: !121, size: 32, offset: 224)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3146, file: !116, line: 346, baseType: !120, size: 32, offset: 256)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3146, file: !116, line: 347, baseType: !120, size: 32, offset: 288)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3146, file: !116, line: 348, baseType: !796, size: 64, offset: 320)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3146, file: !116, line: 349, baseType: !120, size: 32, offset: 384)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3146, file: !116, line: 350, baseType: !120, size: 32, offset: 416)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3146, file: !116, line: 351, baseType: !120, size: 32, offset: 448)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3146, file: !116, line: 352, baseType: !121, size: 32, offset: 480)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3146, file: !116, line: 353, baseType: !120, size: 32, offset: 512)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3146, file: !116, line: 354, baseType: !120, size: 32, offset: 544)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3146, file: !116, line: 355, baseType: !796, size: 64, offset: 576)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3146, file: !116, line: 356, baseType: !120, size: 32, offset: 640)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3146, file: !116, line: 357, baseType: !120, size: 32, offset: 672)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3146, file: !116, line: 358, baseType: !120, size: 32, offset: 704)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3146, file: !116, line: 359, baseType: !121, size: 32, offset: 736)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3146, file: !116, line: 360, baseType: !120, size: 32, offset: 768)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3146, file: !116, line: 361, baseType: !120, size: 32, offset: 800)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3146, file: !116, line: 362, baseType: !796, size: 64, offset: 832)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3146, file: !116, line: 363, baseType: !120, size: 32, offset: 896)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3146, file: !116, line: 364, baseType: !120, size: 32, offset: 928)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3146, file: !116, line: 365, baseType: !796, size: 64, offset: 960)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3146, file: !116, line: 366, baseType: !120, size: 32, offset: 1024)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3146, file: !116, line: 367, baseType: !120, size: 32, offset: 1056)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3146, file: !116, line: 368, baseType: !817, size: 32, offset: 1088)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3146, file: !116, line: 369, baseType: !120, size: 32, offset: 1120)
!3180 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3181, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3182, splitDebugInlining: false, nameTableKind: None)
!3181 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!3182 = !{!102, !344}
!3183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3185, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3184 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!3185 = !{!3186, !3193, !30}
!3186 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3187, line: 14, baseType: !32, size: 32, elements: !3188)
!3187 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3188 = !{!3189, !3190, !3191, !3192}
!3189 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3190 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3191 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3192 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3193 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3187, line: 42, baseType: !32, size: 32, elements: !3194)
!3194 = !{!3195, !3196, !3197, !3198, !3199, !3200}
!3195 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3196 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3197 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3198 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3199 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3200 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3201 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3202, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3202 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!3203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3204, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3205, splitDebugInlining: false, nameTableKind: None)
!3204 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!3205 = !{!22, !102, !103}
!3206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3207, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3207 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!3208 = !{!"Ubuntu clang version 14.0.6"}
!3209 = !{i32 7, !"Dwarf Version", i32 4}
!3210 = !{i32 2, !"Debug Info Version", i32 3}
!3211 = !{i32 1, !"wchar_size", i32 4}
!3212 = !{i32 1, !"min_enum_size", i32 4}
!3213 = !{i32 1, !"branch-target-enforcement", i32 0}
!3214 = !{i32 1, !"sign-return-address", i32 0}
!3215 = !{i32 1, !"sign-return-address-all", i32 0}
!3216 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3217 = !{i32 7, !"frame-pointer", i32 2}
!3218 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3219, file: !3219, line: 26, type: !3220, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !461)
!3219 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3220 = !DISubroutineType(types: !3221)
!3221 = !{null}
!3222 = !DILocation(line: 28, column: 1, scope: !3218)
!3223 = !{i64 2154340306, i64 2154340326, i64 2154340389}
!3224 = !DILocation(line: 29, column: 1, scope: !3218)
!3225 = !{i64 2154340721, i64 2154340741, i64 2154340804}
!3226 = !DILocation(line: 30, column: 1, scope: !3218)
!3227 = !{i64 2154341140, i64 2154341160, i64 2154341223}
!3228 = !DILocation(line: 31, column: 1, scope: !3218)
!3229 = !{i64 2154341559, i64 2154341579, i64 2154341642}
!3230 = !DILocation(line: 33, column: 1, scope: !3218)
!3231 = !{i64 2154341851, i64 2154341871, i64 2154341934}
!3232 = !DILocation(line: 35, column: 1, scope: !3218)
!3233 = !{i64 2154342176, i64 2154342196, i64 2154342259}
!3234 = !DILocation(line: 50, column: 1, scope: !3218)
!3235 = !{i64 2154342603, i64 2154342623, i64 2154342686}
!3236 = !DILocation(line: 54, column: 1, scope: !3218)
!3237 = !{i64 2154343042, i64 2154343062, i64 2154343125}
!3238 = !DILocation(line: 61, column: 1, scope: !3218)
!3239 = !{i64 2154343359, i64 2154343379, i64 2154343442}
!3240 = !DILocation(line: 63, column: 1, scope: !3218)
!3241 = !{i64 2154343739, i64 2154343759, i64 2154343822}
!3242 = !DILocation(line: 64, column: 1, scope: !3218)
!3243 = !{i64 2154344261, i64 2154344281, i64 2154344344}
!3244 = !DILocation(line: 65, column: 1, scope: !3218)
!3245 = !{i64 2154344759, i64 2154344779, i64 2154344842}
!3246 = !DILocation(line: 66, column: 1, scope: !3218)
!3247 = !{i64 2154345241, i64 2154345261, i64 2154345324}
!3248 = !DILocation(line: 67, column: 1, scope: !3218)
!3249 = !{i64 2154345748, i64 2154345768, i64 2154345831}
!3250 = !DILocation(line: 68, column: 1, scope: !3218)
!3251 = !{i64 2154346236, i64 2154346256, i64 2154346319}
!3252 = !DILocation(line: 70, column: 1, scope: !3218)
!3253 = !{i64 2154346704, i64 2154346724, i64 2154346787}
!3254 = !DILocation(line: 71, column: 1, scope: !3218)
!3255 = !{i64 2154347146, i64 2154347166, i64 2154347229}
!3256 = !DILocation(line: 72, column: 1, scope: !3218)
!3257 = !{i64 2154347604, i64 2154347624, i64 2154347687}
!3258 = !DILocation(line: 79, column: 1, scope: !3218)
!3259 = !{i64 2154348058, i64 2154348078, i64 2154348141}
!3260 = !DILocation(line: 80, column: 1, scope: !3218)
!3261 = !{i64 2154348569, i64 2154348589, i64 2154348652}
!3262 = !DILocation(line: 82, column: 1, scope: !3218)
!3263 = !{i64 2154353121, i64 2154353141, i64 2154353204}
!3264 = !DILocation(line: 97, column: 1, scope: !3218)
!3265 = !{i64 2154353458, i64 2154353478, i64 2154353541}
!3266 = !DILocation(line: 99, column: 1, scope: !3218)
!3267 = !{i64 2154353676, i64 2154353696, i64 2154353759}
!3268 = !DILocation(line: 102, column: 1, scope: !3218)
!3269 = !{i64 2154353933, i64 2154353953, i64 2154354016}
!3270 = !DILocation(line: 105, column: 1, scope: !3218)
!3271 = !{i64 2154354173, i64 2154354193, i64 2154354256}
!3272 = !DILocation(line: 115, column: 1, scope: !3218)
!3273 = !{i64 2154354512, i64 2154354532, i64 2154354595}
!3274 = !DILocation(line: 118, column: 1, scope: !3218)
!3275 = !{i64 2154354856, i64 2154354876, i64 2154354939}
!3276 = !DILocation(line: 32, column: 1, scope: !3277)
!3277 = !DILexicalBlockFile(scope: !3218, file: !3278, discriminator: 0)
!3278 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3279 = !{i64 2154355212, i64 2154355232, i64 2154355295}
!3280 = !DILocation(line: 33, column: 1, scope: !3277)
!3281 = !{i64 2154355724, i64 2154355744, i64 2154355807}
!3282 = !DILocation(line: 53, column: 1, scope: !3277)
!3283 = !{i64 2154356232, i64 2154356252, i64 2154356315}
!3284 = !DILocation(line: 54, column: 1, scope: !3277)
!3285 = !{i64 2154356650, i64 2154356670, i64 2154356733}
!3286 = !DILocation(line: 55, column: 1, scope: !3277)
!3287 = !{i64 2154357068, i64 2154357088, i64 2154357151}
!3288 = !DILocation(line: 56, column: 1, scope: !3277)
!3289 = !{i64 2154357486, i64 2154357506, i64 2154357569}
!3290 = !DILocation(line: 57, column: 1, scope: !3277)
!3291 = !{i64 2154357904, i64 2154357924, i64 2154357987}
!3292 = !DILocation(line: 58, column: 1, scope: !3277)
!3293 = !{i64 2154358322, i64 2154358342, i64 2154358405}
!3294 = !DILocation(line: 59, column: 1, scope: !3277)
!3295 = !{i64 2154358740, i64 2154358760, i64 2154358823}
!3296 = !DILocation(line: 60, column: 1, scope: !3277)
!3297 = !{i64 2154359164, i64 2154359184, i64 2154359247}
!3298 = !DILocation(line: 61, column: 1, scope: !3277)
!3299 = !{i64 2154359481, i64 2154359501, i64 2154359564}
!3300 = !DILocation(line: 70, column: 1, scope: !3277)
!3301 = !{i64 2154359710, i64 2154359730, i64 2154359793}
!3302 = !DILocation(line: 72, column: 1, scope: !3277)
!3303 = !{i64 2154360042, i64 2154360062, i64 2154360125}
!3304 = !DILocation(line: 73, column: 1, scope: !3277)
!3305 = !{i64 2154360492, i64 2154360512, i64 2154360575}
!3306 = !DILocation(line: 74, column: 1, scope: !3277)
!3307 = !{i64 2154360942, i64 2154360962, i64 2154361025}
!3308 = !DILocation(line: 75, column: 1, scope: !3277)
!3309 = !{i64 2154361392, i64 2154361412, i64 2154361475}
!3310 = !DILocation(line: 76, column: 1, scope: !3277)
!3311 = !{i64 2154361842, i64 2154361862, i64 2154361925}
!3312 = !DILocation(line: 77, column: 1, scope: !3277)
!3313 = !{i64 2154362292, i64 2154362312, i64 2154362375}
!3314 = !DILocation(line: 78, column: 1, scope: !3277)
!3315 = !{i64 2154366803, i64 2154366823, i64 2154366886}
!3316 = !DILocation(line: 79, column: 1, scope: !3277)
!3317 = !{i64 2154367253, i64 2154367273, i64 2154367336}
!3318 = !DILocation(line: 80, column: 1, scope: !3277)
!3319 = !{i64 2154367706, i64 2154367726, i64 2154367789}
!3320 = !DILocation(line: 84, column: 1, scope: !3277)
!3321 = !{i64 2154368038, i64 2154368058, i64 2154368121}
!3322 = !DILocation(line: 91, column: 1, scope: !3277)
!3323 = !{i64 2154368435, i64 2154368455, i64 2154368518}
!3324 = !DILocation(line: 93, column: 1, scope: !3277)
!3325 = !{i64 2154368802, i64 2154368822, i64 2154368885}
!3326 = !DILocation(line: 106, column: 1, scope: !3277)
!3327 = !{i64 2154369072, i64 2154369092, i64 2154369155}
!3328 = !DILocation(line: 11, column: 1, scope: !3329)
!3329 = !DILexicalBlockFile(scope: !3218, file: !3330, discriminator: 0)
!3330 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3331 = distinct !DISubprogram(name: "main", scope: !3332, file: !3332, line: 11, type: !3220, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3333)
!3332 = !DIFile(filename: "zephyr/samples/subsys/console/getchar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3333 = !{!3334}
!3334 = !DILocalVariable(name: "c", scope: !3335, file: !3332, line: 18, type: !154)
!3335 = distinct !DILexicalBlock(scope: !3331, file: !3332, line: 17, column: 12)
!3336 = !DILocation(line: 13, column: 2, scope: !3331)
!3337 = !DILocation(line: 15, column: 2, scope: !3331)
!3338 = !DILocation(line: 17, column: 2, scope: !3331)
!3339 = !DILocation(line: 18, column: 15, scope: !3335)
!3340 = !DILocation(line: 20, column: 31, scope: !3335)
!3341 = !DILocation(line: 0, scope: !3335)
!3342 = !DILocation(line: 20, column: 3, scope: !3335)
!3343 = distinct !{!3343, !3338, !3344}
!3344 = !DILocation(line: 21, column: 2, scope: !3331)
!3345 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3346)
!3346 = !{!3347}
!3347 = !DILocalVariable(name: "c", arg: 1, scope: !3345, file: !105, line: 45, type: !103)
!3348 = !DILocation(line: 0, scope: !3345)
!3349 = !DILocation(line: 50, column: 2, scope: !3345)
!3350 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3351, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3353)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{null, !106}
!3353 = !{!3354}
!3354 = !DILocalVariable(name: "fn", arg: 1, scope: !3350, file: !105, line: 63, type: !106)
!3355 = !DILocation(line: 0, scope: !3350)
!3356 = !DILocation(line: 65, column: 12, scope: !3350)
!3357 = !DILocation(line: 66, column: 1, scope: !3350)
!3358 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3359, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !461)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{!102}
!3361 = !DILocation(line: 78, column: 9, scope: !3358)
!3362 = !DILocation(line: 78, column: 2, scope: !3358)
!3363 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3364, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3373)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{null, !144, !3366}
!3366 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3367, line: 99, baseType: !3368)
!3367 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3367, line: 40, baseType: !3369)
!3369 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3370)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3371)
!3371 = !{!3372}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3370, file: !105, line: 79, baseType: !102, size: 32)
!3373 = !{!3374, !3375, !3376}
!3374 = !DILocalVariable(name: "fmt", arg: 1, scope: !3363, file: !105, line: 113, type: !144)
!3375 = !DILocalVariable(name: "ap", arg: 2, scope: !3363, file: !105, line: 113, type: !3366)
!3376 = !DILocalVariable(name: "ctx", scope: !3377, file: !105, line: 121, type: !3379)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !105, line: 120, column: 27)
!3378 = distinct !DILexicalBlock(scope: !3363, file: !105, line: 120, column: 6)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3380)
!3380 = !{!3381, !3382}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3379, file: !105, line: 85, baseType: !32, size: 32)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3379, file: !105, line: 86, baseType: !3383, offset: 32)
!3383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2557)
!3384 = !DILocation(line: 0, scope: !3363)
!3385 = !DILocation(line: 148, column: 3, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3378, file: !105, line: 138, column: 9)
!3387 = !DILocation(line: 155, column: 1, scope: !3363)
!3388 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3389, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3391)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!103, !103, !102}
!3391 = !{!3392, !3393}
!3392 = !DILocalVariable(name: "c", arg: 1, scope: !3388, file: !105, line: 107, type: !103)
!3393 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3388, file: !105, line: 107, type: !102)
!3394 = !DILocation(line: 0, scope: !3388)
!3395 = !DILocation(line: 110, column: 9, scope: !3388)
!3396 = !DILocation(line: 110, column: 2, scope: !3388)
!3397 = distinct !DISubprogram(name: "cbvprintf", scope: !3398, file: !3398, line: 739, type: !3399, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3405)
!3398 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!103, !3401, !102, !144, !3366}
!3401 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3398, line: 297, baseType: !3402)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 32)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!103, null}
!3405 = !{!3406, !3407, !3408, !3409}
!3406 = !DILocalVariable(name: "out", arg: 1, scope: !3397, file: !3398, line: 739, type: !3401)
!3407 = !DILocalVariable(name: "ctx", arg: 2, scope: !3397, file: !3398, line: 739, type: !102)
!3408 = !DILocalVariable(name: "format", arg: 3, scope: !3397, file: !3398, line: 739, type: !144)
!3409 = !DILocalVariable(name: "ap", arg: 4, scope: !3397, file: !3398, line: 739, type: !3366)
!3410 = !DILocation(line: 0, scope: !3397)
!3411 = !DILocation(line: 741, column: 9, scope: !3397)
!3412 = !DILocation(line: 741, column: 2, scope: !3397)
!3413 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3414, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3416)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{null, !1051, !344}
!3416 = !{!3417, !3418, !3419}
!3417 = !DILocalVariable(name: "c", arg: 1, scope: !3413, file: !105, line: 157, type: !1051)
!3418 = !DILocalVariable(name: "n", arg: 2, scope: !3413, file: !105, line: 157, type: !344)
!3419 = !DILocalVariable(name: "i", scope: !3413, file: !105, line: 159, type: !344)
!3420 = !DILocation(line: 0, scope: !3413)
!3421 = !DILocation(line: 164, column: 16, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !105, line: 164, column: 2)
!3423 = distinct !DILexicalBlock(scope: !3413, file: !105, line: 164, column: 2)
!3424 = !DILocation(line: 164, column: 2, scope: !3423)
!3425 = !DILocation(line: 165, column: 3, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3422, file: !105, line: 164, column: 26)
!3427 = !DILocation(line: 165, column: 13, scope: !3426)
!3428 = !DILocation(line: 164, column: 22, scope: !3422)
!3429 = distinct !{!3429, !3424, !3430}
!3430 = !DILocation(line: 166, column: 2, scope: !3423)
!3431 = !DILocation(line: 171, column: 1, scope: !3413)
!3432 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3433, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3435)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{null, !144, null}
!3435 = !{!3436, !3437}
!3436 = !DILocalVariable(name: "fmt", arg: 1, scope: !3432, file: !105, line: 203, type: !144)
!3437 = !DILocalVariable(name: "ap", scope: !3432, file: !105, line: 205, type: !3366)
!3438 = !DILocation(line: 0, scope: !3432)
!3439 = !DILocation(line: 205, column: 2, scope: !3432)
!3440 = !DILocation(line: 205, column: 10, scope: !3432)
!3441 = !DILocation(line: 207, column: 2, scope: !3432)
!3442 = !DILocation(line: 209, column: 2, scope: !3432)
!3443 = !DILocation(line: 211, column: 2, scope: !3432)
!3444 = !DILocation(line: 212, column: 1, scope: !3432)
!3445 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3446, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3448)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!103, !1051, !344, !144, null}
!3448 = !{!3449, !3450, !3451, !3452, !3453}
!3449 = !DILocalVariable(name: "str", arg: 1, scope: !3445, file: !105, line: 239, type: !1051)
!3450 = !DILocalVariable(name: "size", arg: 2, scope: !3445, file: !105, line: 239, type: !344)
!3451 = !DILocalVariable(name: "fmt", arg: 3, scope: !3445, file: !105, line: 239, type: !144)
!3452 = !DILocalVariable(name: "ap", scope: !3445, file: !105, line: 241, type: !3366)
!3453 = !DILocalVariable(name: "ret", scope: !3445, file: !105, line: 242, type: !103)
!3454 = !DILocation(line: 0, scope: !3445)
!3455 = !DILocation(line: 241, column: 2, scope: !3445)
!3456 = !DILocation(line: 241, column: 10, scope: !3445)
!3457 = !DILocation(line: 244, column: 2, scope: !3445)
!3458 = !DILocation(line: 245, column: 8, scope: !3445)
!3459 = !DILocation(line: 246, column: 2, scope: !3445)
!3460 = !DILocation(line: 249, column: 1, scope: !3445)
!3461 = !DILocation(line: 248, column: 2, scope: !3445)
!3462 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3463, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3465)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{!103, !1051, !344, !144, !3366}
!3465 = !{!3466, !3467, !3468, !3469, !3470}
!3466 = !DILocalVariable(name: "str", arg: 1, scope: !3462, file: !105, line: 251, type: !1051)
!3467 = !DILocalVariable(name: "size", arg: 2, scope: !3462, file: !105, line: 251, type: !344)
!3468 = !DILocalVariable(name: "fmt", arg: 3, scope: !3462, file: !105, line: 251, type: !144)
!3469 = !DILocalVariable(name: "ap", arg: 4, scope: !3462, file: !105, line: 251, type: !3366)
!3470 = !DILocalVariable(name: "ctx", scope: !3462, file: !105, line: 253, type: !3471)
!3471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3472)
!3472 = !{!3473, !3474, !3475}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3471, file: !105, line: 218, baseType: !1051, size: 32)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3471, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3471, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3476 = !DILocation(line: 0, scope: !3462)
!3477 = !DILocation(line: 253, column: 2, scope: !3462)
!3478 = !DILocation(line: 253, column: 21, scope: !3462)
!3479 = !DILocation(line: 253, column: 27, scope: !3462)
!3480 = !DILocation(line: 255, column: 2, scope: !3462)
!3481 = !DILocation(line: 257, column: 10, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3462, file: !105, line: 257, column: 6)
!3483 = !DILocation(line: 257, column: 22, scope: !3482)
!3484 = !DILocation(line: 257, column: 16, scope: !3482)
!3485 = !DILocation(line: 257, column: 6, scope: !3462)
!3486 = !DILocation(line: 258, column: 3, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3482, file: !105, line: 257, column: 27)
!3488 = !DILocation(line: 258, column: 18, scope: !3487)
!3489 = !DILocation(line: 259, column: 2, scope: !3487)
!3490 = !DILocation(line: 262, column: 1, scope: !3462)
!3491 = !DILocation(line: 261, column: 2, scope: !3462)
!3492 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3493, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3496)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{!103, !103, !3495}
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3471, size: 32)
!3496 = !{!3497, !3498}
!3497 = !DILocalVariable(name: "c", arg: 1, scope: !3492, file: !105, line: 223, type: !103)
!3498 = !DILocalVariable(name: "ctx", arg: 2, scope: !3492, file: !105, line: 223, type: !3495)
!3499 = !DILocation(line: 0, scope: !3492)
!3500 = !DILocation(line: 225, column: 11, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3492, file: !105, line: 225, column: 6)
!3502 = !DILocation(line: 225, column: 15, scope: !3501)
!3503 = !DILocation(line: 0, scope: !3501)
!3504 = !DILocation(line: 225, column: 23, scope: !3501)
!3505 = !DILocation(line: 225, column: 45, scope: !3501)
!3506 = !DILocation(line: 225, column: 37, scope: !3501)
!3507 = !DILocation(line: 225, column: 6, scope: !3492)
!3508 = !DILocation(line: 226, column: 8, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3501, file: !105, line: 225, column: 50)
!3510 = !DILocation(line: 226, column: 13, scope: !3509)
!3511 = !DILocation(line: 227, column: 3, scope: !3509)
!3512 = !DILocation(line: 230, column: 29, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3492, file: !105, line: 230, column: 6)
!3514 = !DILocation(line: 230, column: 17, scope: !3513)
!3515 = !DILocation(line: 230, column: 6, scope: !3492)
!3516 = !DILocation(line: 231, column: 22, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3513, file: !105, line: 230, column: 34)
!3518 = !DILocation(line: 231, column: 3, scope: !3517)
!3519 = !DILocation(line: 231, column: 26, scope: !3517)
!3520 = !DILocation(line: 232, column: 2, scope: !3517)
!3521 = !DILocation(line: 233, column: 28, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3513, file: !105, line: 232, column: 9)
!3523 = !DILocation(line: 233, column: 22, scope: !3522)
!3524 = !DILocation(line: 233, column: 3, scope: !3522)
!3525 = !DILocation(line: 233, column: 26, scope: !3522)
!3526 = !DILocation(line: 237, column: 1, scope: !3492)
!3527 = distinct !DISubprogram(name: "z_thread_entry", scope: !3528, file: !3528, line: 30, type: !3529, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !3536)
!3528 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3529 = !DISubroutineType(types: !3530)
!3530 = !{null, !3531, !102, !102, !102}
!3531 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3532, line: 46, baseType: !3533)
!3532 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 32)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{null, !102, !102, !102}
!3536 = !{!3537, !3538, !3539, !3540}
!3537 = !DILocalVariable(name: "entry", arg: 1, scope: !3527, file: !3528, line: 30, type: !3531)
!3538 = !DILocalVariable(name: "p1", arg: 2, scope: !3527, file: !3528, line: 31, type: !102)
!3539 = !DILocalVariable(name: "p2", arg: 3, scope: !3527, file: !3528, line: 31, type: !102)
!3540 = !DILocalVariable(name: "p3", arg: 4, scope: !3527, file: !3528, line: 31, type: !102)
!3541 = !DILocation(line: 0, scope: !3527)
!3542 = !DILocation(line: 36, column: 2, scope: !3527)
!3543 = !DILocation(line: 38, column: 17, scope: !3527)
!3544 = !DILocation(line: 38, column: 2, scope: !3527)
!3545 = !DILocation(line: 45, column: 2, scope: !3527)
!3546 = distinct !DISubprogram(name: "k_current_get", scope: !300, file: !300, line: 530, type: !3547, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !461)
!3547 = !DISubroutineType(types: !3548)
!3548 = !{!3549}
!3549 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !3550)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 32)
!3551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !3552)
!3552 = !{!3553, !3611, !3623, !3624, !3625, !3626, !3632, !3645}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3551, file: !355, line: 247, baseType: !3554, size: 384)
!3554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !3555)
!3555 = !{!3556, !3580, !3587, !3588, !3589, !3598, !3599, !3600}
!3556 = !DIDerivedType(tag: DW_TAG_member, scope: !3554, file: !355, line: 60, baseType: !3557, size: 64)
!3557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3554, file: !355, line: 60, size: 64, elements: !3558)
!3558 = !{!3559, !3574}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3557, file: !355, line: 61, baseType: !3560, size: 64)
!3560 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !3561)
!3561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !3562)
!3562 = !{!3563, !3569}
!3563 = !DIDerivedType(tag: DW_TAG_member, scope: !3561, file: !309, line: 38, baseType: !3564, size: 32)
!3564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3561, file: !309, line: 38, size: 32, elements: !3565)
!3565 = !{!3566, !3568}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3564, file: !309, line: 39, baseType: !3567, size: 32)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 32)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3564, file: !309, line: 40, baseType: !3567, size: 32)
!3569 = !DIDerivedType(tag: DW_TAG_member, scope: !3561, file: !309, line: 42, baseType: !3570, size: 32, offset: 32)
!3570 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3561, file: !309, line: 42, size: 32, elements: !3571)
!3571 = !{!3572, !3573}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3570, file: !309, line: 43, baseType: !3567, size: 32)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3570, file: !309, line: 44, baseType: !3567, size: 32)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3557, file: !355, line: 62, baseType: !3575, size: 64)
!3575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !3576)
!3576 = !{!3577}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3575, file: !380, line: 50, baseType: !3578, size: 64)
!3578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3579, size: 64, elements: !385)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 32)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3554, file: !355, line: 68, baseType: !3581, size: 32, offset: 64)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 32)
!3582 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !3583)
!3583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !3584)
!3584 = !{!3585}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3583, file: !304, line: 232, baseType: !3586, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !3561)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3554, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3554, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!3589 = !DIDerivedType(tag: DW_TAG_member, scope: !3554, file: !355, line: 90, baseType: !3590, size: 16, offset: 112)
!3590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3554, file: !355, line: 90, size: 16, elements: !3591)
!3591 = !{!3592, !3597}
!3592 = !DIDerivedType(tag: DW_TAG_member, scope: !3590, file: !355, line: 91, baseType: !3593, size: 16)
!3593 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3590, file: !355, line: 91, size: 16, elements: !3594)
!3594 = !{!3595, !3596}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3593, file: !355, line: 96, baseType: !403, size: 8)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3593, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3590, file: !355, line: 100, baseType: !328, size: 16)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3554, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3554, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3554, file: !355, line: 131, baseType: !3601, size: 192, offset: 192)
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !3602)
!3602 = !{!3603, !3604, !3610}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3601, file: !304, line: 245, baseType: !3560, size: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3601, file: !304, line: 246, baseType: !3605, size: 32, offset: 64)
!3605 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !3606)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3607, size: 32)
!3607 = !DISubroutineType(types: !3608)
!3608 = !{null, !3609}
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 32)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3601, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3551, file: !355, line: 250, baseType: !3612, size: 288, offset: 384)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !3613)
!3613 = !{!3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3612, file: !424, line: 26, baseType: !121, size: 32)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3612, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3612, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3612, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3612, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3612, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3612, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3612, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3612, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3551, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3551, file: !355, line: 256, baseType: !3582, size: 64, offset: 704)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3551, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3551, file: !355, line: 300, baseType: !3627, size: 96, offset: 800)
!3627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !3628)
!3628 = !{!3629, !3630, !3631}
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3627, file: !355, line: 153, baseType: !22, size: 32)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3627, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3627, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3551, file: !355, line: 325, baseType: !3633, size: 32, offset: 896)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 32)
!3634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !3635)
!3635 = !{!3636, !3642, !3643}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3634, file: !300, line: 5074, baseType: !3637, size: 96)
!3637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !3638)
!3638 = !{!3639, !3640, !3641}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3637, file: !450, line: 57, baseType: !453, size: 32)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3637, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3637, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3634, file: !300, line: 5075, baseType: !3582, size: 64, offset: 96)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3634, file: !300, line: 5076, baseType: !3644, offset: 160)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3551, file: !355, line: 343, baseType: !3646, size: 64, offset: 928)
!3646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !3647)
!3647 = !{!3648, !3649}
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3646, file: !424, line: 63, baseType: !121, size: 32)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3646, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!3650 = !DILocation(line: 535, column: 9, scope: !3546)
!3651 = !DILocation(line: 535, column: 2, scope: !3546)
!3652 = distinct !DISubprogram(name: "k_thread_abort", scope: !3653, file: !3653, line: 188, type: !3654, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !3656)
!3653 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!3654 = !DISubroutineType(types: !3655)
!3655 = !{null, !3549}
!3656 = !{!3657}
!3657 = !DILocalVariable(name: "thread", arg: 1, scope: !3652, file: !3653, line: 188, type: !3549)
!3658 = !DILocation(line: 0, scope: !3652)
!3659 = !DILocation(line: 197, column: 2, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3652, file: !3653, line: 197, column: 2)
!3661 = !{i64 2154061265}
!3662 = !DILocation(line: 198, column: 2, scope: !3652)
!3663 = !DILocation(line: 199, column: 1, scope: !3652)
!3664 = distinct !DISubprogram(name: "z_current_get", scope: !3653, file: !3653, line: 173, type: !3547, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !461)
!3665 = !DILocation(line: 180, column: 2, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3664, file: !3653, line: 180, column: 2)
!3667 = !{i64 2154061197}
!3668 = !DILocation(line: 181, column: 9, scope: !3664)
!3669 = !DILocation(line: 181, column: 2, scope: !3664)
!3670 = distinct !DISubprogram(name: "sys_heap_free", scope: !3671, file: !3671, line: 163, type: !3672, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3680)
!3671 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3672 = !DISubroutineType(types: !3673)
!3673 = !{null, !3674, !102}
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 32)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !3676)
!3676 = !{!3677, !3678, !3679}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3675, file: !450, line: 57, baseType: !2544, size: 32)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3675, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3675, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!3680 = !{!3681, !3682, !3683, !3684}
!3681 = !DILocalVariable(name: "heap", arg: 1, scope: !3670, file: !3671, line: 163, type: !3674)
!3682 = !DILocalVariable(name: "mem", arg: 2, scope: !3670, file: !3671, line: 163, type: !102)
!3683 = !DILocalVariable(name: "h", scope: !3670, file: !3671, line: 168, type: !2544)
!3684 = !DILocalVariable(name: "c", scope: !3670, file: !3671, line: 169, type: !2549)
!3685 = !DILocation(line: 0, scope: !3670)
!3686 = !DILocation(line: 165, column: 10, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3670, file: !3671, line: 165, column: 6)
!3688 = !DILocation(line: 165, column: 6, scope: !3670)
!3689 = !DILocation(line: 168, column: 27, scope: !3670)
!3690 = !DILocation(line: 169, column: 16, scope: !3670)
!3691 = !{i32 0, i32 536870912}
!3692 = !DILocation(line: 187, column: 2, scope: !3670)
!3693 = !DILocation(line: 197, column: 2, scope: !3670)
!3694 = !DILocation(line: 198, column: 1, scope: !3670)
!3695 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3671, file: !3671, line: 157, type: !3696, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3698)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!2549, !2544, !102}
!3698 = !{!3699, !3700, !3701, !3702}
!3699 = !DILocalVariable(name: "h", arg: 1, scope: !3695, file: !3671, line: 157, type: !2544)
!3700 = !DILocalVariable(name: "p", arg: 2, scope: !3695, file: !3671, line: 157, type: !102)
!3701 = !DILocalVariable(name: "mem", scope: !3695, file: !3671, line: 159, type: !261)
!3702 = !DILocalVariable(name: "base", scope: !3695, file: !3671, line: 159, type: !261)
!3703 = !DILocation(line: 0, scope: !3695)
!3704 = !DILocation(line: 159, column: 39, scope: !3695)
!3705 = !DILocation(line: 160, column: 14, scope: !3695)
!3706 = !DILocation(line: 160, column: 38, scope: !3695)
!3707 = !DILocation(line: 160, column: 46, scope: !3695)
!3708 = !DILocation(line: 160, column: 2, scope: !3695)
!3709 = distinct !DISubprogram(name: "set_chunk_used", scope: !2531, file: !2531, line: 147, type: !3710, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3712)
!3710 = !DISubroutineType(types: !3711)
!3711 = !{null, !2544, !2549, !157}
!3712 = !{!3713, !3714, !3715, !3716, !3717}
!3713 = !DILocalVariable(name: "h", arg: 1, scope: !3709, file: !2531, line: 147, type: !2544)
!3714 = !DILocalVariable(name: "c", arg: 2, scope: !3709, file: !2531, line: 147, type: !2549)
!3715 = !DILocalVariable(name: "used", arg: 3, scope: !3709, file: !2531, line: 147, type: !157)
!3716 = !DILocalVariable(name: "buf", scope: !3709, file: !2531, line: 149, type: !2538)
!3717 = !DILocalVariable(name: "cmem", scope: !3709, file: !2531, line: 150, type: !102)
!3718 = !DILocation(line: 0, scope: !3709)
!3719 = !DILocation(line: 149, column: 22, scope: !3709)
!3720 = !DILocation(line: 0, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !2531, line: 159, column: 7)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !2531, line: 158, column: 9)
!3723 = distinct !DILexicalBlock(scope: !3709, file: !2531, line: 152, column: 6)
!3724 = !DILocation(line: 159, column: 7, scope: !3722)
!3725 = !DILocation(line: 165, column: 1, scope: !3709)
!3726 = distinct !DISubprogram(name: "free_chunk", scope: !3671, file: !3671, line: 133, type: !3727, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3729)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{null, !2544, !2549}
!3729 = !{!3730, !3731}
!3730 = !DILocalVariable(name: "h", arg: 1, scope: !3726, file: !3671, line: 133, type: !2544)
!3731 = !DILocalVariable(name: "c", arg: 2, scope: !3726, file: !3671, line: 133, type: !2549)
!3732 = !DILocation(line: 0, scope: !3726)
!3733 = !DILocation(line: 136, column: 21, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3726, file: !3671, line: 136, column: 6)
!3735 = !DILocation(line: 136, column: 7, scope: !3734)
!3736 = !DILocation(line: 136, column: 6, scope: !3726)
!3737 = !DILocation(line: 137, column: 3, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3734, file: !3671, line: 136, column: 41)
!3739 = !DILocation(line: 138, column: 22, scope: !3738)
!3740 = !DILocation(line: 138, column: 3, scope: !3738)
!3741 = !DILocation(line: 139, column: 2, scope: !3738)
!3742 = !DILocation(line: 142, column: 21, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3726, file: !3671, line: 142, column: 6)
!3744 = !{i32 -65535, i32 536903678}
!3745 = !DILocation(line: 142, column: 7, scope: !3743)
!3746 = !DILocation(line: 142, column: 6, scope: !3726)
!3747 = !DILocation(line: 143, column: 3, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3743, file: !3671, line: 142, column: 40)
!3749 = !DILocation(line: 144, column: 19, scope: !3748)
!3750 = !DILocation(line: 144, column: 3, scope: !3748)
!3751 = !DILocation(line: 145, column: 7, scope: !3748)
!3752 = !DILocation(line: 146, column: 2, scope: !3748)
!3753 = !DILocation(line: 148, column: 2, scope: !3726)
!3754 = !DILocation(line: 149, column: 1, scope: !3726)
!3755 = distinct !DISubprogram(name: "right_chunk", scope: !2531, file: !2531, line: 204, type: !3756, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3758)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!2549, !2544, !2549}
!3758 = !{!3759, !3760}
!3759 = !DILocalVariable(name: "h", arg: 1, scope: !3755, file: !2531, line: 204, type: !2544)
!3760 = !DILocalVariable(name: "c", arg: 2, scope: !3755, file: !2531, line: 204, type: !2549)
!3761 = !DILocation(line: 0, scope: !3755)
!3762 = !DILocation(line: 206, column: 13, scope: !3755)
!3763 = !DILocation(line: 206, column: 11, scope: !3755)
!3764 = !DILocation(line: 206, column: 2, scope: !3755)
!3765 = distinct !DISubprogram(name: "chunk_used", scope: !2531, file: !2531, line: 137, type: !3766, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3768)
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!157, !2544, !2549}
!3768 = !{!3769, !3770}
!3769 = !DILocalVariable(name: "h", arg: 1, scope: !3765, file: !2531, line: 137, type: !2544)
!3770 = !DILocalVariable(name: "c", arg: 2, scope: !3765, file: !2531, line: 137, type: !2549)
!3771 = !DILocation(line: 0, scope: !3765)
!3772 = !DILocation(line: 139, column: 9, scope: !3765)
!3773 = !DILocation(line: 139, column: 42, scope: !3765)
!3774 = !DILocation(line: 139, column: 2, scope: !3765)
!3775 = distinct !DISubprogram(name: "free_list_remove", scope: !3671, file: !3671, line: 60, type: !3727, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3776)
!3776 = !{!3777, !3778, !3779}
!3777 = !DILocalVariable(name: "h", arg: 1, scope: !3775, file: !3671, line: 60, type: !2544)
!3778 = !DILocalVariable(name: "c", arg: 2, scope: !3775, file: !3671, line: 60, type: !2549)
!3779 = !DILocalVariable(name: "bidx", scope: !3780, file: !3671, line: 63, type: !103)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !3671, line: 62, column: 31)
!3781 = distinct !DILexicalBlock(scope: !3775, file: !3671, line: 62, column: 6)
!3782 = !DILocation(line: 0, scope: !3775)
!3783 = !DILocation(line: 63, column: 28, scope: !3780)
!3784 = !{i32 0, i32 32768}
!3785 = !DILocation(line: 63, column: 14, scope: !3780)
!3786 = !DILocation(line: 0, scope: !3780)
!3787 = !DILocation(line: 64, column: 3, scope: !3780)
!3788 = !DILocation(line: 66, column: 1, scope: !3775)
!3789 = distinct !DISubprogram(name: "merge_chunks", scope: !3671, file: !3671, line: 125, type: !3790, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3792)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{null, !2544, !2549, !2549}
!3792 = !{!3793, !3794, !3795, !3796}
!3793 = !DILocalVariable(name: "h", arg: 1, scope: !3789, file: !3671, line: 125, type: !2544)
!3794 = !DILocalVariable(name: "lc", arg: 2, scope: !3789, file: !3671, line: 125, type: !2549)
!3795 = !DILocalVariable(name: "rc", arg: 3, scope: !3789, file: !3671, line: 125, type: !2549)
!3796 = !DILocalVariable(name: "newsz", scope: !3789, file: !3671, line: 127, type: !3797)
!3797 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2531, line: 62, baseType: !121)
!3798 = !DILocation(line: 0, scope: !3789)
!3799 = !DILocation(line: 127, column: 20, scope: !3789)
!3800 = !DILocation(line: 127, column: 40, scope: !3789)
!3801 = !DILocation(line: 127, column: 38, scope: !3789)
!3802 = !DILocation(line: 129, column: 2, scope: !3789)
!3803 = !DILocation(line: 130, column: 25, scope: !3789)
!3804 = !DILocation(line: 130, column: 2, scope: !3789)
!3805 = !DILocation(line: 131, column: 1, scope: !3789)
!3806 = distinct !DISubprogram(name: "left_chunk", scope: !2531, file: !2531, line: 199, type: !3756, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3807)
!3807 = !{!3808, !3809}
!3808 = !DILocalVariable(name: "h", arg: 1, scope: !3806, file: !2531, line: 199, type: !2544)
!3809 = !DILocalVariable(name: "c", arg: 2, scope: !3806, file: !2531, line: 199, type: !2549)
!3810 = !DILocation(line: 0, scope: !3806)
!3811 = !DILocation(line: 201, column: 13, scope: !3806)
!3812 = !DILocation(line: 201, column: 11, scope: !3806)
!3813 = !DILocation(line: 201, column: 2, scope: !3806)
!3814 = distinct !DISubprogram(name: "free_list_add", scope: !3671, file: !3671, line: 98, type: !3727, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3815)
!3815 = !{!3816, !3817, !3818}
!3816 = !DILocalVariable(name: "h", arg: 1, scope: !3814, file: !3671, line: 98, type: !2544)
!3817 = !DILocalVariable(name: "c", arg: 2, scope: !3814, file: !3671, line: 98, type: !2549)
!3818 = !DILocalVariable(name: "bidx", scope: !3819, file: !3671, line: 101, type: !103)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !3671, line: 100, column: 31)
!3820 = distinct !DILexicalBlock(scope: !3814, file: !3671, line: 100, column: 6)
!3821 = !DILocation(line: 0, scope: !3814)
!3822 = !DILocation(line: 101, column: 28, scope: !3819)
!3823 = !DILocation(line: 101, column: 14, scope: !3819)
!3824 = !DILocation(line: 0, scope: !3819)
!3825 = !DILocation(line: 102, column: 3, scope: !3819)
!3826 = !DILocation(line: 104, column: 1, scope: !3814)
!3827 = distinct !DISubprogram(name: "chunk_size", scope: !2531, file: !2531, line: 142, type: !3828, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3830)
!3828 = !DISubroutineType(types: !3829)
!3829 = !{!3797, !2544, !2549}
!3830 = !{!3831, !3832}
!3831 = !DILocalVariable(name: "h", arg: 1, scope: !3827, file: !2531, line: 142, type: !2544)
!3832 = !DILocalVariable(name: "c", arg: 2, scope: !3827, file: !2531, line: 142, type: !2549)
!3833 = !DILocation(line: 0, scope: !3827)
!3834 = !DILocation(line: 144, column: 9, scope: !3827)
!3835 = !DILocation(line: 144, column: 42, scope: !3827)
!3836 = !DILocation(line: 144, column: 2, scope: !3827)
!3837 = distinct !DISubprogram(name: "bucket_idx", scope: !2531, file: !2531, line: 250, type: !3838, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3840)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{!103, !2544, !3797}
!3840 = !{!3841, !3842, !3843}
!3841 = !DILocalVariable(name: "h", arg: 1, scope: !3837, file: !2531, line: 250, type: !2544)
!3842 = !DILocalVariable(name: "sz", arg: 2, scope: !3837, file: !2531, line: 250, type: !3797)
!3843 = !DILocalVariable(name: "usable_sz", scope: !3837, file: !2531, line: 252, type: !32)
!3844 = !DILocation(line: 0, scope: !3837)
!3845 = !DILocation(line: 252, column: 32, scope: !3837)
!3846 = !DILocation(line: 252, column: 30, scope: !3837)
!3847 = !DILocation(line: 252, column: 50, scope: !3837)
!3848 = !DILocation(line: 253, column: 14, scope: !3837)
!3849 = !{i32 0, i32 33}
!3850 = !DILocation(line: 253, column: 12, scope: !3837)
!3851 = !DILocation(line: 253, column: 2, scope: !3837)
!3852 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3671, file: !3671, line: 68, type: !3853, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3855)
!3853 = !DISubroutineType(types: !3854)
!3854 = !{null, !2544, !2549, !103}
!3855 = !{!3856, !3857, !3858, !3859, !3861, !3864}
!3856 = !DILocalVariable(name: "h", arg: 1, scope: !3852, file: !3671, line: 68, type: !2544)
!3857 = !DILocalVariable(name: "c", arg: 2, scope: !3852, file: !3671, line: 68, type: !2549)
!3858 = !DILocalVariable(name: "bidx", arg: 3, scope: !3852, file: !3671, line: 68, type: !103)
!3859 = !DILocalVariable(name: "b", scope: !3852, file: !3671, line: 70, type: !3860)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!3861 = !DILocalVariable(name: "second", scope: !3862, file: !3671, line: 84, type: !2549)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !3671, line: 80, column: 9)
!3863 = distinct !DILexicalBlock(scope: !3852, file: !3671, line: 72, column: 6)
!3864 = !DILocalVariable(name: "first", scope: !3862, file: !3671, line: 85, type: !2549)
!3865 = !DILocation(line: 0, scope: !3852)
!3866 = !DILocation(line: 72, column: 9, scope: !3863)
!3867 = !DILocation(line: 72, column: 14, scope: !3863)
!3868 = !DILocation(line: 72, column: 6, scope: !3852)
!3869 = !DILocation(line: 76, column: 23, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3863, file: !3671, line: 72, column: 21)
!3871 = !DILocation(line: 76, column: 6, scope: !3870)
!3872 = !DILocation(line: 76, column: 20, scope: !3870)
!3873 = !DILocation(line: 77, column: 11, scope: !3870)
!3874 = !DILocation(line: 78, column: 3, scope: !3870)
!3875 = !DILocation(line: 79, column: 3, scope: !3870)
!3876 = !DILocation(line: 80, column: 2, scope: !3870)
!3877 = !DILocation(line: 0, scope: !3862)
!3878 = !DILocation(line: 85, column: 21, scope: !3862)
!3879 = !{i32 0, i32 65536}
!3880 = !DILocation(line: 87, column: 3, scope: !3862)
!3881 = !DILocation(line: 88, column: 3, scope: !3862)
!3882 = !DILocation(line: 89, column: 3, scope: !3862)
!3883 = !DILocation(line: 90, column: 3, scope: !3862)
!3884 = !DILocation(line: 96, column: 1, scope: !3852)
!3885 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2531, file: !2531, line: 187, type: !3790, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3886)
!3886 = !{!3887, !3888, !3889}
!3887 = !DILocalVariable(name: "h", arg: 1, scope: !3885, file: !2531, line: 187, type: !2544)
!3888 = !DILocalVariable(name: "c", arg: 2, scope: !3885, file: !2531, line: 187, type: !2549)
!3889 = !DILocalVariable(name: "prev", arg: 3, scope: !3885, file: !2531, line: 188, type: !2549)
!3890 = !DILocation(line: 0, scope: !3885)
!3891 = !DILocation(line: 190, column: 2, scope: !3885)
!3892 = !DILocation(line: 191, column: 1, scope: !3885)
!3893 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2531, file: !2531, line: 193, type: !3790, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3894)
!3894 = !{!3895, !3896, !3897}
!3895 = !DILocalVariable(name: "h", arg: 1, scope: !3893, file: !2531, line: 193, type: !2544)
!3896 = !DILocalVariable(name: "c", arg: 2, scope: !3893, file: !2531, line: 193, type: !2549)
!3897 = !DILocalVariable(name: "next", arg: 3, scope: !3893, file: !2531, line: 194, type: !2549)
!3898 = !DILocation(line: 0, scope: !3893)
!3899 = !DILocation(line: 196, column: 2, scope: !3893)
!3900 = !DILocation(line: 197, column: 1, scope: !3893)
!3901 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2531, file: !2531, line: 177, type: !3756, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3902)
!3902 = !{!3903, !3904}
!3903 = !DILocalVariable(name: "h", arg: 1, scope: !3901, file: !2531, line: 177, type: !2544)
!3904 = !DILocalVariable(name: "c", arg: 2, scope: !3901, file: !2531, line: 177, type: !2549)
!3905 = !DILocation(line: 0, scope: !3901)
!3906 = !DILocation(line: 179, column: 9, scope: !3901)
!3907 = !DILocation(line: 179, column: 2, scope: !3901)
!3908 = distinct !DISubprogram(name: "chunk_field", scope: !2531, file: !2531, line: 107, type: !3909, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3911)
!3909 = !DISubroutineType(types: !3910)
!3910 = !{!2549, !2544, !2549, !2530}
!3911 = !{!3912, !3913, !3914, !3915, !3916}
!3912 = !DILocalVariable(name: "h", arg: 1, scope: !3908, file: !2531, line: 107, type: !2544)
!3913 = !DILocalVariable(name: "c", arg: 2, scope: !3908, file: !2531, line: 107, type: !2549)
!3914 = !DILocalVariable(name: "f", arg: 3, scope: !3908, file: !2531, line: 108, type: !2530)
!3915 = !DILocalVariable(name: "buf", scope: !3908, file: !2531, line: 110, type: !2538)
!3916 = !DILocalVariable(name: "cmem", scope: !3908, file: !2531, line: 111, type: !102)
!3917 = !DILocation(line: 0, scope: !3908)
!3918 = !DILocation(line: 110, column: 22, scope: !3908)
!3919 = !DILocation(line: 111, column: 15, scope: !3908)
!3920 = !DILocation(line: 116, column: 11, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3922, file: !2531, line: 115, column: 9)
!3922 = distinct !DILexicalBlock(scope: !3908, file: !2531, line: 113, column: 6)
!3923 = !DILocation(line: 116, column: 10, scope: !3921)
!3924 = !DILocation(line: 118, column: 1, scope: !3908)
!3925 = distinct !DISubprogram(name: "chunk_buf", scope: !2531, file: !2531, line: 101, type: !3926, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3928)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{!2538, !2544}
!3928 = !{!3929}
!3929 = !DILocalVariable(name: "h", arg: 1, scope: !3925, file: !2531, line: 101, type: !2544)
!3930 = !DILocation(line: 0, scope: !3925)
!3931 = !DILocation(line: 104, column: 9, scope: !3925)
!3932 = !DILocation(line: 104, column: 2, scope: !3925)
!3933 = distinct !DISubprogram(name: "chunk_set", scope: !2531, file: !2531, line: 120, type: !3934, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3936)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{null, !2544, !2549, !2530, !2549}
!3936 = !{!3937, !3938, !3939, !3940, !3941, !3942}
!3937 = !DILocalVariable(name: "h", arg: 1, scope: !3933, file: !2531, line: 120, type: !2544)
!3938 = !DILocalVariable(name: "c", arg: 2, scope: !3933, file: !2531, line: 120, type: !2549)
!3939 = !DILocalVariable(name: "f", arg: 3, scope: !3933, file: !2531, line: 121, type: !2530)
!3940 = !DILocalVariable(name: "val", arg: 4, scope: !3933, file: !2531, line: 121, type: !2549)
!3941 = !DILocalVariable(name: "buf", scope: !3933, file: !2531, line: 125, type: !2538)
!3942 = !DILocalVariable(name: "cmem", scope: !3933, file: !2531, line: 126, type: !102)
!3943 = !DILocation(line: 0, scope: !3933)
!3944 = !DILocation(line: 125, column: 22, scope: !3933)
!3945 = !DILocation(line: 126, column: 15, scope: !3933)
!3946 = !DILocation(line: 133, column: 27, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !2531, line: 131, column: 9)
!3948 = distinct !DILexicalBlock(scope: !3933, file: !2531, line: 128, column: 6)
!3949 = !DILocation(line: 133, column: 4, scope: !3947)
!3950 = !DILocation(line: 133, column: 3, scope: !3947)
!3951 = !DILocation(line: 133, column: 25, scope: !3947)
!3952 = !DILocation(line: 135, column: 1, scope: !3933)
!3953 = distinct !DISubprogram(name: "min_chunk_size", scope: !2531, file: !2531, line: 240, type: !3954, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3956)
!3954 = !DISubroutineType(types: !3955)
!3955 = !{!3797, !2544}
!3956 = !{!3957}
!3957 = !DILocalVariable(name: "h", arg: 1, scope: !3953, file: !2531, line: 240, type: !2544)
!3958 = !DILocation(line: 0, scope: !3953)
!3959 = !DILocation(line: 242, column: 9, scope: !3953)
!3960 = !DILocation(line: 242, column: 2, scope: !3953)
!3961 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2531, file: !2531, line: 235, type: !3962, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3964)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{!3797, !2544, !344}
!3964 = !{!3965, !3966}
!3965 = !DILocalVariable(name: "h", arg: 1, scope: !3961, file: !2531, line: 235, type: !2544)
!3966 = !DILocalVariable(name: "bytes", arg: 2, scope: !3961, file: !2531, line: 235, type: !344)
!3967 = !DILocation(line: 0, scope: !3961)
!3968 = !DILocation(line: 237, column: 39, scope: !3961)
!3969 = !DILocation(line: 237, column: 9, scope: !3961)
!3970 = !DILocation(line: 237, column: 2, scope: !3961)
!3971 = distinct !DISubprogram(name: "chunksz", scope: !2531, file: !2531, line: 230, type: !3972, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3974)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{!3797, !344}
!3974 = !{!3975}
!3975 = !DILocalVariable(name: "bytes", arg: 1, scope: !3971, file: !2531, line: 230, type: !344)
!3976 = !DILocation(line: 0, scope: !3971)
!3977 = !DILocation(line: 232, column: 29, scope: !3971)
!3978 = !DILocation(line: 232, column: 35, scope: !3971)
!3979 = !DILocation(line: 232, column: 2, scope: !3971)
!3980 = distinct !DISubprogram(name: "set_chunk_size", scope: !2531, file: !2531, line: 172, type: !3981, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3983)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{null, !2544, !2549, !3797}
!3983 = !{!3984, !3985, !3986}
!3984 = !DILocalVariable(name: "h", arg: 1, scope: !3980, file: !2531, line: 172, type: !2544)
!3985 = !DILocalVariable(name: "c", arg: 2, scope: !3980, file: !2531, line: 172, type: !2549)
!3986 = !DILocalVariable(name: "size", arg: 3, scope: !3980, file: !2531, line: 172, type: !3797)
!3987 = !DILocation(line: 0, scope: !3980)
!3988 = !DILocation(line: 174, column: 38, scope: !3980)
!3989 = !DILocation(line: 174, column: 2, scope: !3980)
!3990 = !DILocation(line: 175, column: 1, scope: !3980)
!3991 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2531, file: !2531, line: 209, type: !3981, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !3992)
!3992 = !{!3993, !3994, !3995}
!3993 = !DILocalVariable(name: "h", arg: 1, scope: !3991, file: !2531, line: 209, type: !2544)
!3994 = !DILocalVariable(name: "c", arg: 2, scope: !3991, file: !2531, line: 209, type: !2549)
!3995 = !DILocalVariable(name: "size", arg: 3, scope: !3991, file: !2531, line: 210, type: !3797)
!3996 = !DILocation(line: 0, scope: !3991)
!3997 = !DILocation(line: 212, column: 2, scope: !3991)
!3998 = !DILocation(line: 213, column: 1, scope: !3991)
!3999 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3671, file: !3671, line: 34, type: !3853, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4000)
!4000 = !{!4001, !4002, !4003, !4004, !4005, !4008}
!4001 = !DILocalVariable(name: "h", arg: 1, scope: !3999, file: !3671, line: 34, type: !2544)
!4002 = !DILocalVariable(name: "c", arg: 2, scope: !3999, file: !3671, line: 34, type: !2549)
!4003 = !DILocalVariable(name: "bidx", arg: 3, scope: !3999, file: !3671, line: 34, type: !103)
!4004 = !DILocalVariable(name: "b", scope: !3999, file: !3671, line: 36, type: !3860)
!4005 = !DILocalVariable(name: "first", scope: !4006, file: !3671, line: 47, type: !2549)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !3671, line: 46, column: 9)
!4007 = distinct !DILexicalBlock(scope: !3999, file: !3671, line: 42, column: 6)
!4008 = !DILocalVariable(name: "second", scope: !4006, file: !3671, line: 48, type: !2549)
!4009 = !DILocation(line: 0, scope: !3999)
!4010 = !DILocation(line: 36, column: 29, scope: !3999)
!4011 = !DILocation(line: 42, column: 6, scope: !4007)
!4012 = !DILocation(line: 42, column: 28, scope: !4007)
!4013 = !DILocation(line: 42, column: 6, scope: !3999)
!4014 = !DILocation(line: 44, column: 24, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4007, file: !3671, line: 42, column: 34)
!4016 = !DILocation(line: 44, column: 23, scope: !4015)
!4017 = !DILocation(line: 44, column: 6, scope: !4015)
!4018 = !DILocation(line: 44, column: 20, scope: !4015)
!4019 = !DILocation(line: 45, column: 6, scope: !4015)
!4020 = !DILocation(line: 45, column: 11, scope: !4015)
!4021 = !DILocation(line: 46, column: 2, scope: !4015)
!4022 = !DILocation(line: 47, column: 21, scope: !4006)
!4023 = !DILocation(line: 0, scope: !4006)
!4024 = !DILocation(line: 50, column: 6, scope: !4006)
!4025 = !DILocation(line: 50, column: 11, scope: !4006)
!4026 = !DILocation(line: 51, column: 3, scope: !4006)
!4027 = !DILocation(line: 52, column: 3, scope: !4006)
!4028 = !DILocation(line: 58, column: 1, scope: !3999)
!4029 = distinct !DISubprogram(name: "next_free_chunk", scope: !2531, file: !2531, line: 182, type: !3756, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4030)
!4030 = !{!4031, !4032}
!4031 = !DILocalVariable(name: "h", arg: 1, scope: !4029, file: !2531, line: 182, type: !2544)
!4032 = !DILocalVariable(name: "c", arg: 2, scope: !4029, file: !2531, line: 182, type: !2549)
!4033 = !DILocation(line: 0, scope: !4029)
!4034 = !DILocation(line: 184, column: 9, scope: !4029)
!4035 = !DILocation(line: 184, column: 2, scope: !4029)
!4036 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3671, file: !3671, line: 200, type: !4037, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4039)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{!344, !3674, !102}
!4039 = !{!4040, !4041, !4042, !4043, !4044, !4045, !4046}
!4040 = !DILocalVariable(name: "heap", arg: 1, scope: !4036, file: !3671, line: 200, type: !3674)
!4041 = !DILocalVariable(name: "mem", arg: 2, scope: !4036, file: !3671, line: 200, type: !102)
!4042 = !DILocalVariable(name: "h", scope: !4036, file: !3671, line: 202, type: !2544)
!4043 = !DILocalVariable(name: "c", scope: !4036, file: !3671, line: 203, type: !2549)
!4044 = !DILocalVariable(name: "addr", scope: !4036, file: !3671, line: 204, type: !344)
!4045 = !DILocalVariable(name: "chunk_base", scope: !4036, file: !3671, line: 205, type: !344)
!4046 = !DILocalVariable(name: "chunk_sz", scope: !4036, file: !3671, line: 206, type: !344)
!4047 = !DILocation(line: 0, scope: !4036)
!4048 = !DILocation(line: 202, column: 27, scope: !4036)
!4049 = !DILocation(line: 203, column: 16, scope: !4036)
!4050 = !DILocation(line: 204, column: 16, scope: !4036)
!4051 = !DILocation(line: 205, column: 31, scope: !4036)
!4052 = !DILocation(line: 205, column: 22, scope: !4036)
!4053 = !DILocation(line: 206, column: 20, scope: !4036)
!4054 = !DILocation(line: 206, column: 37, scope: !4036)
!4055 = !DILocation(line: 208, column: 26, scope: !4036)
!4056 = !DILocation(line: 208, column: 18, scope: !4036)
!4057 = !DILocation(line: 208, column: 2, scope: !4036)
!4058 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3671, file: !3671, line: 263, type: !4059, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4061)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{!102, !3674, !344}
!4061 = !{!4062, !4063, !4064, !4065, !4066, !4067}
!4062 = !DILocalVariable(name: "heap", arg: 1, scope: !4058, file: !3671, line: 263, type: !3674)
!4063 = !DILocalVariable(name: "bytes", arg: 2, scope: !4058, file: !3671, line: 263, type: !344)
!4064 = !DILocalVariable(name: "h", scope: !4058, file: !3671, line: 265, type: !2544)
!4065 = !DILocalVariable(name: "mem", scope: !4058, file: !3671, line: 266, type: !102)
!4066 = !DILocalVariable(name: "chunk_sz", scope: !4058, file: !3671, line: 272, type: !3797)
!4067 = !DILocalVariable(name: "c", scope: !4058, file: !3671, line: 273, type: !2549)
!4068 = !DILocation(line: 0, scope: !4058)
!4069 = !DILocation(line: 265, column: 27, scope: !4058)
!4070 = !DILocation(line: 268, column: 12, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4058, file: !3671, line: 268, column: 6)
!4072 = !DILocation(line: 268, column: 18, scope: !4071)
!4073 = !DILocation(line: 268, column: 21, scope: !4071)
!4074 = !DILocation(line: 268, column: 6, scope: !4058)
!4075 = !DILocation(line: 272, column: 23, scope: !4058)
!4076 = !DILocation(line: 273, column: 16, scope: !4058)
!4077 = !DILocation(line: 274, column: 8, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4058, file: !3671, line: 274, column: 6)
!4079 = !DILocation(line: 274, column: 6, scope: !4058)
!4080 = !DILocation(line: 279, column: 6, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4058, file: !3671, line: 279, column: 6)
!4082 = !DILocation(line: 279, column: 23, scope: !4081)
!4083 = !DILocation(line: 279, column: 6, scope: !4058)
!4084 = !DILocation(line: 280, column: 24, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4081, file: !3671, line: 279, column: 35)
!4086 = !DILocation(line: 280, column: 3, scope: !4085)
!4087 = !DILocation(line: 281, column: 3, scope: !4085)
!4088 = !DILocation(line: 282, column: 2, scope: !4085)
!4089 = !DILocation(line: 284, column: 2, scope: !4058)
!4090 = !DILocation(line: 286, column: 8, scope: !4058)
!4091 = !DILocation(line: 298, column: 2, scope: !4058)
!4092 = !DILocation(line: 299, column: 1, scope: !4058)
!4093 = distinct !DISubprogram(name: "size_too_big", scope: !2531, file: !2531, line: 256, type: !4094, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4096)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!157, !2544, !344}
!4096 = !{!4097, !4098}
!4097 = !DILocalVariable(name: "h", arg: 1, scope: !4093, file: !2531, line: 256, type: !2544)
!4098 = !DILocalVariable(name: "bytes", arg: 2, scope: !4093, file: !2531, line: 256, type: !344)
!4099 = !DILocation(line: 0, scope: !4093)
!4100 = !DILocation(line: 262, column: 16, scope: !4093)
!4101 = !DILocation(line: 262, column: 36, scope: !4093)
!4102 = !DILocation(line: 262, column: 30, scope: !4093)
!4103 = !DILocation(line: 262, column: 2, scope: !4093)
!4104 = distinct !DISubprogram(name: "alloc_chunk", scope: !3671, file: !3671, line: 211, type: !4105, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4107)
!4105 = !DISubroutineType(types: !4106)
!4106 = !{!2549, !2544, !3797}
!4107 = !{!4108, !4109, !4110, !4111, !4112, !4115, !4116, !4118, !4119, !4122}
!4108 = !DILocalVariable(name: "h", arg: 1, scope: !4104, file: !3671, line: 211, type: !2544)
!4109 = !DILocalVariable(name: "sz", arg: 2, scope: !4104, file: !3671, line: 211, type: !3797)
!4110 = !DILocalVariable(name: "bi", scope: !4104, file: !3671, line: 213, type: !103)
!4111 = !DILocalVariable(name: "b", scope: !4104, file: !3671, line: 214, type: !3860)
!4112 = !DILocalVariable(name: "first", scope: !4113, file: !3671, line: 233, type: !2549)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !3671, line: 232, column: 15)
!4114 = distinct !DILexicalBlock(scope: !4104, file: !3671, line: 232, column: 6)
!4115 = !DILocalVariable(name: "i", scope: !4113, file: !3671, line: 234, type: !103)
!4116 = !DILocalVariable(name: "c", scope: !4117, file: !3671, line: 236, type: !2549)
!4117 = distinct !DILexicalBlock(scope: !4113, file: !3671, line: 235, column: 6)
!4118 = !DILocalVariable(name: "bmask", scope: !4104, file: !3671, line: 249, type: !121)
!4119 = !DILocalVariable(name: "minbucket", scope: !4120, file: !3671, line: 252, type: !103)
!4120 = distinct !DILexicalBlock(scope: !4121, file: !3671, line: 251, column: 19)
!4121 = distinct !DILexicalBlock(scope: !4104, file: !3671, line: 251, column: 6)
!4122 = !DILocalVariable(name: "c", scope: !4120, file: !3671, line: 253, type: !2549)
!4123 = !DILocation(line: 0, scope: !4104)
!4124 = !DILocation(line: 213, column: 11, scope: !4104)
!4125 = !DILocation(line: 232, column: 9, scope: !4114)
!4126 = !DILocation(line: 232, column: 6, scope: !4114)
!4127 = !DILocation(line: 232, column: 6, scope: !4104)
!4128 = !DILocation(line: 236, column: 21, scope: !4117)
!4129 = !DILocation(line: 0, scope: !4113)
!4130 = !DILocation(line: 0, scope: !4117)
!4131 = !DILocation(line: 237, column: 8, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4117, file: !3671, line: 237, column: 8)
!4133 = !DILocation(line: 237, column: 25, scope: !4132)
!4134 = !DILocation(line: 237, column: 8, scope: !4117)
!4135 = !DILocation(line: 238, column: 5, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4132, file: !3671, line: 237, column: 32)
!4137 = !DILocation(line: 241, column: 14, scope: !4117)
!4138 = !DILocation(line: 241, column: 12, scope: !4117)
!4139 = !DILocation(line: 243, column: 12, scope: !4113)
!4140 = !DILocation(line: 243, column: 16, scope: !4113)
!4141 = distinct !{!4141, !4142, !4143}
!4142 = !DILocation(line: 235, column: 3, scope: !4113)
!4143 = !DILocation(line: 243, column: 35, scope: !4113)
!4144 = !DILocation(line: 249, column: 22, scope: !4104)
!4145 = !DILocation(line: 249, column: 39, scope: !4104)
!4146 = !DILocation(line: 249, column: 36, scope: !4104)
!4147 = !DILocation(line: 251, column: 12, scope: !4121)
!4148 = !DILocation(line: 251, column: 6, scope: !4104)
!4149 = !DILocation(line: 252, column: 19, scope: !4120)
!4150 = !DILocation(line: 0, scope: !4120)
!4151 = !DILocation(line: 253, column: 39, scope: !4120)
!4152 = !DILocation(line: 255, column: 3, scope: !4120)
!4153 = !DILocation(line: 261, column: 1, scope: !4104)
!4154 = distinct !DISubprogram(name: "split_chunks", scope: !3671, file: !3671, line: 109, type: !3790, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4155)
!4155 = !{!4156, !4157, !4158, !4159, !4160, !4161}
!4156 = !DILocalVariable(name: "h", arg: 1, scope: !4154, file: !3671, line: 109, type: !2544)
!4157 = !DILocalVariable(name: "lc", arg: 2, scope: !4154, file: !3671, line: 109, type: !2549)
!4158 = !DILocalVariable(name: "rc", arg: 3, scope: !4154, file: !3671, line: 109, type: !2549)
!4159 = !DILocalVariable(name: "sz0", scope: !4154, file: !3671, line: 114, type: !3797)
!4160 = !DILocalVariable(name: "lsz", scope: !4154, file: !3671, line: 115, type: !3797)
!4161 = !DILocalVariable(name: "rsz", scope: !4154, file: !3671, line: 116, type: !3797)
!4162 = !DILocation(line: 0, scope: !4154)
!4163 = !DILocation(line: 114, column: 18, scope: !4154)
!4164 = !DILocation(line: 115, column: 21, scope: !4154)
!4165 = !DILocation(line: 116, column: 22, scope: !4154)
!4166 = !DILocation(line: 118, column: 2, scope: !4154)
!4167 = !DILocation(line: 119, column: 2, scope: !4154)
!4168 = !DILocation(line: 120, column: 2, scope: !4154)
!4169 = !DILocation(line: 121, column: 25, scope: !4154)
!4170 = !DILocation(line: 121, column: 2, scope: !4154)
!4171 = !DILocation(line: 122, column: 1, scope: !4154)
!4172 = distinct !DISubprogram(name: "chunk_mem", scope: !3671, file: !3671, line: 24, type: !4173, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4175)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!102, !2544, !2549}
!4175 = !{!4176, !4177, !4178, !4179}
!4176 = !DILocalVariable(name: "h", arg: 1, scope: !4172, file: !3671, line: 24, type: !2544)
!4177 = !DILocalVariable(name: "c", arg: 2, scope: !4172, file: !3671, line: 24, type: !2549)
!4178 = !DILocalVariable(name: "buf", scope: !4172, file: !3671, line: 26, type: !2538)
!4179 = !DILocalVariable(name: "ret", scope: !4172, file: !3671, line: 27, type: !261)
!4180 = !DILocation(line: 0, scope: !4172)
!4181 = !DILocation(line: 26, column: 22, scope: !4172)
!4182 = !DILocation(line: 27, column: 38, scope: !4172)
!4183 = !DILocation(line: 31, column: 2, scope: !4172)
!4184 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3671, file: !3671, line: 301, type: !4185, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4187)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!102, !3674, !344, !344}
!4187 = !{!4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199}
!4188 = !DILocalVariable(name: "heap", arg: 1, scope: !4184, file: !3671, line: 301, type: !3674)
!4189 = !DILocalVariable(name: "align", arg: 2, scope: !4184, file: !3671, line: 301, type: !344)
!4190 = !DILocalVariable(name: "bytes", arg: 3, scope: !4184, file: !3671, line: 301, type: !344)
!4191 = !DILocalVariable(name: "h", scope: !4184, file: !3671, line: 303, type: !2544)
!4192 = !DILocalVariable(name: "gap", scope: !4184, file: !3671, line: 304, type: !344)
!4193 = !DILocalVariable(name: "rew", scope: !4184, file: !3671, line: 304, type: !344)
!4194 = !DILocalVariable(name: "padded_sz", scope: !4184, file: !3671, line: 335, type: !3797)
!4195 = !DILocalVariable(name: "c0", scope: !4184, file: !3671, line: 336, type: !2549)
!4196 = !DILocalVariable(name: "mem", scope: !4184, file: !3671, line: 341, type: !261)
!4197 = !DILocalVariable(name: "end", scope: !4184, file: !3671, line: 345, type: !2538)
!4198 = !DILocalVariable(name: "c", scope: !4184, file: !3671, line: 348, type: !2549)
!4199 = !DILocalVariable(name: "c_end", scope: !4184, file: !3671, line: 349, type: !2549)
!4200 = !DILocation(line: 0, scope: !4184)
!4201 = !DILocation(line: 303, column: 27, scope: !4184)
!4202 = !DILocation(line: 313, column: 16, scope: !4184)
!4203 = !DILocation(line: 313, column: 14, scope: !4184)
!4204 = !DILocation(line: 314, column: 12, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4184, file: !3671, line: 314, column: 6)
!4206 = !DILocation(line: 314, column: 6, scope: !4184)
!4207 = !DILocation(line: 315, column: 9, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4205, file: !3671, line: 314, column: 20)
!4209 = !DILocation(line: 316, column: 9, scope: !4208)
!4210 = !DILocation(line: 318, column: 13, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !3671, line: 318, column: 7)
!4212 = distinct !DILexicalBlock(scope: !4205, file: !3671, line: 317, column: 9)
!4213 = !DILocation(line: 318, column: 7, scope: !4212)
!4214 = !DILocation(line: 319, column: 11, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4211, file: !3671, line: 318, column: 39)
!4216 = !DILocation(line: 319, column: 4, scope: !4215)
!4217 = !DILocation(line: 0, scope: !4205)
!4218 = !DILocation(line: 326, column: 12, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4184, file: !3671, line: 326, column: 6)
!4220 = !DILocation(line: 326, column: 17, scope: !4219)
!4221 = !DILocation(line: 326, column: 20, scope: !4219)
!4222 = !DILocation(line: 326, column: 6, scope: !4184)
!4223 = !DILocation(line: 335, column: 50, scope: !4184)
!4224 = !DILocation(line: 335, column: 58, scope: !4184)
!4225 = !DILocation(line: 335, column: 24, scope: !4184)
!4226 = !DILocation(line: 336, column: 17, scope: !4184)
!4227 = !DILocation(line: 338, column: 9, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4184, file: !3671, line: 338, column: 6)
!4229 = !DILocation(line: 338, column: 6, scope: !4184)
!4230 = !DILocation(line: 341, column: 17, scope: !4184)
!4231 = !DILocation(line: 344, column: 20, scope: !4184)
!4232 = !DILocation(line: 344, column: 8, scope: !4184)
!4233 = !DILocation(line: 344, column: 47, scope: !4184)
!4234 = !DILocation(line: 345, column: 39, scope: !4184)
!4235 = !DILocation(line: 348, column: 16, scope: !4184)
!4236 = !DILocation(line: 349, column: 26, scope: !4184)
!4237 = !DILocation(line: 349, column: 24, scope: !4184)
!4238 = !DILocation(line: 353, column: 8, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4184, file: !3671, line: 353, column: 6)
!4240 = !DILocation(line: 353, column: 6, scope: !4184)
!4241 = !DILocation(line: 354, column: 3, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4239, file: !3671, line: 353, column: 14)
!4243 = !DILocation(line: 355, column: 3, scope: !4242)
!4244 = !DILocation(line: 356, column: 2, scope: !4242)
!4245 = !DILocation(line: 359, column: 6, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4184, file: !3671, line: 359, column: 6)
!4247 = !DILocation(line: 359, column: 24, scope: !4246)
!4248 = !DILocation(line: 359, column: 6, scope: !4184)
!4249 = !DILocation(line: 360, column: 3, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4246, file: !3671, line: 359, column: 33)
!4251 = !DILocation(line: 361, column: 3, scope: !4250)
!4252 = !DILocation(line: 362, column: 2, scope: !4250)
!4253 = !DILocation(line: 364, column: 2, scope: !4184)
!4254 = !DILocation(line: 377, column: 1, scope: !4184)
!4255 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3671, file: !3671, line: 379, type: !4256, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4258)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{!102, !3674, !102, !344, !344}
!4258 = !{!4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4274, !4275}
!4259 = !DILocalVariable(name: "heap", arg: 1, scope: !4255, file: !3671, line: 379, type: !3674)
!4260 = !DILocalVariable(name: "ptr", arg: 2, scope: !4255, file: !3671, line: 379, type: !102)
!4261 = !DILocalVariable(name: "align", arg: 3, scope: !4255, file: !3671, line: 380, type: !344)
!4262 = !DILocalVariable(name: "bytes", arg: 4, scope: !4255, file: !3671, line: 380, type: !344)
!4263 = !DILocalVariable(name: "h", scope: !4255, file: !3671, line: 382, type: !2544)
!4264 = !DILocalVariable(name: "c", scope: !4255, file: !3671, line: 399, type: !2549)
!4265 = !DILocalVariable(name: "rc", scope: !4255, file: !3671, line: 400, type: !2549)
!4266 = !DILocalVariable(name: "align_gap", scope: !4255, file: !3671, line: 401, type: !344)
!4267 = !DILocalVariable(name: "chunks_need", scope: !4255, file: !3671, line: 402, type: !3797)
!4268 = !DILocalVariable(name: "split_size", scope: !4269, file: !3671, line: 435, type: !3797)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !3671, line: 433, column: 61)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !3671, line: 432, column: 13)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !3671, line: 409, column: 13)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !3671, line: 406, column: 13)
!4273 = distinct !DILexicalBlock(scope: !4255, file: !3671, line: 404, column: 6)
!4274 = !DILocalVariable(name: "ptr2", scope: !4255, file: !3671, line: 474, type: !102)
!4275 = !DILocalVariable(name: "prev_size", scope: !4276, file: !3671, line: 477, type: !344)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !3671, line: 476, column: 20)
!4277 = distinct !DILexicalBlock(scope: !4255, file: !3671, line: 476, column: 6)
!4278 = !DILocation(line: 0, scope: !4255)
!4279 = !DILocation(line: 382, column: 27, scope: !4255)
!4280 = !DILocation(line: 385, column: 10, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4255, file: !3671, line: 385, column: 6)
!4282 = !DILocation(line: 385, column: 6, scope: !4255)
!4283 = !DILocation(line: 386, column: 10, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4281, file: !3671, line: 385, column: 19)
!4285 = !DILocation(line: 386, column: 3, scope: !4284)
!4286 = !DILocation(line: 388, column: 12, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4255, file: !3671, line: 388, column: 6)
!4288 = !DILocation(line: 388, column: 6, scope: !4255)
!4289 = !DILocation(line: 389, column: 3, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4287, file: !3671, line: 388, column: 18)
!4291 = !DILocation(line: 390, column: 3, scope: !4290)
!4292 = !DILocation(line: 395, column: 6, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4255, file: !3671, line: 395, column: 6)
!4294 = !DILocation(line: 395, column: 6, scope: !4255)
!4295 = !DILocation(line: 399, column: 16, scope: !4255)
!4296 = !DILocation(line: 400, column: 17, scope: !4255)
!4297 = !DILocation(line: 401, column: 49, scope: !4255)
!4298 = !DILocation(line: 401, column: 36, scope: !4255)
!4299 = !DILocation(line: 402, column: 52, scope: !4255)
!4300 = !DILocation(line: 402, column: 26, scope: !4255)
!4301 = !DILocation(line: 404, column: 6, scope: !4273)
!4302 = !DILocation(line: 404, column: 12, scope: !4273)
!4303 = !DILocation(line: 404, column: 40, scope: !4273)
!4304 = !DILocation(line: 404, column: 31, scope: !4273)
!4305 = !DILocation(line: 404, column: 6, scope: !4255)
!4306 = !DILocation(line: 406, column: 13, scope: !4272)
!4307 = !DILocation(line: 406, column: 30, scope: !4272)
!4308 = !DILocation(line: 406, column: 13, scope: !4273)
!4309 = !DILocation(line: 409, column: 30, scope: !4271)
!4310 = !DILocation(line: 409, column: 13, scope: !4272)
!4311 = !DILocation(line: 420, column: 24, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4271, file: !3671, line: 409, column: 45)
!4313 = !DILocation(line: 420, column: 3, scope: !4312)
!4314 = !DILocation(line: 421, column: 3, scope: !4312)
!4315 = !DILocation(line: 422, column: 3, scope: !4312)
!4316 = !DILocation(line: 431, column: 3, scope: !4312)
!4317 = !DILocation(line: 432, column: 14, scope: !4270)
!4318 = !DILocation(line: 432, column: 32, scope: !4270)
!4319 = !DILocation(line: 433, column: 26, scope: !4270)
!4320 = !DILocation(line: 433, column: 24, scope: !4270)
!4321 = !DILocation(line: 433, column: 44, scope: !4270)
!4322 = !DILocation(line: 432, column: 13, scope: !4271)
!4323 = !DILocation(line: 435, column: 38, scope: !4269)
!4324 = !DILocation(line: 0, scope: !4269)
!4325 = !DILocation(line: 445, column: 3, scope: !4269)
!4326 = !DILocation(line: 447, column: 20, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4269, file: !3671, line: 447, column: 7)
!4328 = !DILocation(line: 447, column: 18, scope: !4327)
!4329 = !DILocation(line: 447, column: 7, scope: !4269)
!4330 = !DILocation(line: 448, column: 27, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4327, file: !3671, line: 447, column: 39)
!4332 = !DILocation(line: 448, column: 4, scope: !4331)
!4333 = !DILocation(line: 449, column: 4, scope: !4331)
!4334 = !DILocation(line: 450, column: 3, scope: !4331)
!4335 = !DILocation(line: 452, column: 3, scope: !4269)
!4336 = !DILocation(line: 453, column: 3, scope: !4269)
!4337 = !DILocation(line: 474, column: 15, scope: !4255)
!4338 = !DILocation(line: 476, column: 11, scope: !4277)
!4339 = !DILocation(line: 476, column: 6, scope: !4255)
!4340 = !DILocation(line: 477, column: 42, scope: !4276)
!4341 = !DILocation(line: 477, column: 22, scope: !4276)
!4342 = !DILocation(line: 477, column: 60, scope: !4276)
!4343 = !DILocation(line: 0, scope: !4276)
!4344 = !DILocation(line: 479, column: 21, scope: !4276)
!4345 = !DILocation(line: 479, column: 3, scope: !4276)
!4346 = !DILocation(line: 480, column: 3, scope: !4276)
!4347 = !DILocation(line: 481, column: 2, scope: !4276)
!4348 = !DILocation(line: 483, column: 1, scope: !4255)
!4349 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2531, file: !2531, line: 245, type: !4350, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4352)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{!344, !2544, !3797}
!4352 = !{!4353, !4354}
!4353 = !DILocalVariable(name: "h", arg: 1, scope: !4349, file: !2531, line: 245, type: !2544)
!4354 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4349, file: !2531, line: 245, type: !3797)
!4355 = !DILocation(line: 0, scope: !4349)
!4356 = !DILocation(line: 247, column: 20, scope: !4349)
!4357 = !DILocation(line: 247, column: 33, scope: !4349)
!4358 = !DILocation(line: 247, column: 2, scope: !4349)
!4359 = distinct !DISubprogram(name: "sys_heap_init", scope: !3671, file: !3671, line: 485, type: !4360, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !4362)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{null, !3674, !102, !344}
!4362 = !{!4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372}
!4363 = !DILocalVariable(name: "heap", arg: 1, scope: !4359, file: !3671, line: 485, type: !3674)
!4364 = !DILocalVariable(name: "mem", arg: 2, scope: !4359, file: !3671, line: 485, type: !102)
!4365 = !DILocalVariable(name: "bytes", arg: 3, scope: !4359, file: !3671, line: 485, type: !344)
!4366 = !DILocalVariable(name: "addr", scope: !4359, file: !3671, line: 502, type: !22)
!4367 = !DILocalVariable(name: "end", scope: !4359, file: !3671, line: 503, type: !22)
!4368 = !DILocalVariable(name: "heap_sz", scope: !4359, file: !3671, line: 504, type: !3797)
!4369 = !DILocalVariable(name: "h", scope: !4359, file: !3671, line: 509, type: !2544)
!4370 = !DILocalVariable(name: "nb_buckets", scope: !4359, file: !3671, line: 520, type: !103)
!4371 = !DILocalVariable(name: "chunk0_size", scope: !4359, file: !3671, line: 521, type: !3797)
!4372 = !DILocalVariable(name: "i", scope: !4373, file: !3671, line: 526, type: !103)
!4373 = distinct !DILexicalBlock(scope: !4359, file: !3671, line: 526, column: 2)
!4374 = !DILocation(line: 0, scope: !4359)
!4375 = !DILocation(line: 499, column: 8, scope: !4359)
!4376 = !DILocation(line: 502, column: 19, scope: !4359)
!4377 = !DILocation(line: 503, column: 18, scope: !4359)
!4378 = !DILocation(line: 504, column: 27, scope: !4359)
!4379 = !DILocation(line: 504, column: 35, scope: !4359)
!4380 = !DILocation(line: 509, column: 21, scope: !4359)
!4381 = !DILocation(line: 510, column: 8, scope: !4359)
!4382 = !DILocation(line: 510, column: 13, scope: !4359)
!4383 = !DILocation(line: 511, column: 5, scope: !4359)
!4384 = !DILocation(line: 511, column: 15, scope: !4359)
!4385 = !DILocation(line: 512, column: 5, scope: !4359)
!4386 = !DILocation(line: 512, column: 19, scope: !4359)
!4387 = !DILocation(line: 520, column: 19, scope: !4359)
!4388 = !DILocation(line: 522, column: 21, scope: !4359)
!4389 = !DILocation(line: 521, column: 56, scope: !4359)
!4390 = !DILocation(line: 521, column: 26, scope: !4359)
!4391 = !DILocation(line: 0, scope: !4373)
!4392 = !DILocation(line: 526, column: 20, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4373, file: !3671, line: 526, column: 2)
!4394 = !DILocation(line: 526, column: 2, scope: !4373)
!4395 = !DILocation(line: 531, column: 2, scope: !4359)
!4396 = !DILocation(line: 532, column: 2, scope: !4359)
!4397 = !DILocation(line: 533, column: 2, scope: !4359)
!4398 = !DILocation(line: 536, column: 41, scope: !4359)
!4399 = !DILocation(line: 536, column: 2, scope: !4359)
!4400 = !DILocation(line: 537, column: 2, scope: !4359)
!4401 = !DILocation(line: 540, column: 2, scope: !4359)
!4402 = !DILocation(line: 541, column: 2, scope: !4359)
!4403 = !DILocation(line: 542, column: 2, scope: !4359)
!4404 = !DILocation(line: 544, column: 2, scope: !4359)
!4405 = !DILocation(line: 545, column: 1, scope: !4359)
!4406 = !DILocation(line: 527, column: 17, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4393, file: !3671, line: 526, column: 39)
!4408 = !DILocation(line: 527, column: 22, scope: !4407)
!4409 = !DILocation(line: 526, column: 35, scope: !4393)
!4410 = distinct !{!4410, !4394, !4411}
!4411 = !DILocation(line: 528, column: 2, scope: !4373)
!4412 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2564, file: !2564, line: 1338, type: !4413, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !4421)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!103, !3401, !102, !144, !4415, !121}
!4415 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3367, line: 99, baseType: !4416)
!4416 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3367, line: 40, baseType: !4417)
!4417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2564, baseType: !4418)
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4419)
!4419 = !{!4420}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4418, file: !2564, baseType: !102, size: 32)
!4421 = !{!4422, !4423, !4424, !4425, !4426, !4427, !4431, !4432, !4433, !4435, !4440, !4485, !4488, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4500, !4501, !4502, !4506, !4509, !4511, !4514, !4515, !4516, !4521, !4527, !4530, !4534, !4540, !4544, !4547, !4549, !4552}
!4422 = !DILocalVariable(name: "out", arg: 1, scope: !4412, file: !2564, line: 1338, type: !3401)
!4423 = !DILocalVariable(name: "ctx", arg: 2, scope: !4412, file: !2564, line: 1338, type: !102)
!4424 = !DILocalVariable(name: "fp", arg: 3, scope: !4412, file: !2564, line: 1338, type: !144)
!4425 = !DILocalVariable(name: "ap", arg: 4, scope: !4412, file: !2564, line: 1339, type: !4415)
!4426 = !DILocalVariable(name: "flags", arg: 5, scope: !4412, file: !2564, line: 1339, type: !121)
!4427 = !DILocalVariable(name: "buf", scope: !4412, file: !2564, line: 1341, type: !4428)
!4428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !4429)
!4429 = !{!4430}
!4430 = !DISubrange(count: 22)
!4431 = !DILocalVariable(name: "count", scope: !4412, file: !2564, line: 1342, type: !344)
!4432 = !DILocalVariable(name: "sint", scope: !4412, file: !2564, line: 1343, type: !2583)
!4433 = !DILocalVariable(name: "tagged_ap", scope: !4412, file: !2564, line: 1345, type: !4434)
!4434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!4435 = !DILocalVariable(name: "rc", scope: !4436, file: !2564, line: 1377, type: !103)
!4436 = distinct !DILexicalBlock(scope: !4437, file: !2564, line: 1377, column: 4)
!4437 = distinct !DILexicalBlock(scope: !4438, file: !2564, line: 1376, column: 19)
!4438 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1376, column: 7)
!4439 = distinct !DILexicalBlock(scope: !4412, file: !2564, line: 1375, column: 19)
!4440 = !DILocalVariable(name: "state", scope: !4439, file: !2564, line: 1395, type: !4441)
!4441 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4412, file: !2564, line: 1392, size: 192, elements: !4442)
!4442 = !{!4443, !4453}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4441, file: !2564, line: 1393, baseType: !4444, size: 64)
!4444 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2564, line: 166, size: 64, elements: !4445)
!4445 = !{!4446, !4447, !4448, !4450, !4452}
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4444, file: !2564, line: 168, baseType: !2583, size: 64)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4444, file: !2564, line: 171, baseType: !2586, size: 64)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4444, file: !2564, line: 174, baseType: !4449, size: 64)
!4449 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4444, file: !2564, line: 177, baseType: !4451, size: 64)
!4451 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4444, file: !2564, line: 180, baseType: !102, size: 32)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4441, file: !2564, line: 1394, baseType: !4454, size: 96, offset: 64)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2564, line: 189, size: 96, elements: !4455)
!4455 = !{!4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4480}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4454, file: !2564, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4454, file: !2564, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4454, file: !2564, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4454, file: !2564, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4454, file: !2564, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4454, file: !2564, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4454, file: !2564, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4454, file: !2564, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4454, file: !2564, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4454, file: !2564, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4454, file: !2564, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4454, file: !2564, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4454, file: !2564, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4454, file: !2564, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4454, file: !2564, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4454, file: !2564, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4454, file: !2564, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4454, file: !2564, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4454, file: !2564, line: 260, baseType: !155, size: 8, offset: 24)
!4475 = !DIDerivedType(tag: DW_TAG_member, scope: !4454, file: !2564, line: 262, baseType: !4476, size: 32, offset: 32)
!4476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4454, file: !2564, line: 262, size: 32, elements: !4477)
!4477 = !{!4478, !4479}
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4476, file: !2564, line: 267, baseType: !103, size: 32)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4476, file: !2564, line: 289, baseType: !103, size: 32)
!4480 = !DIDerivedType(tag: DW_TAG_member, scope: !4454, file: !2564, line: 292, baseType: !4481, size: 32, offset: 64)
!4481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4454, file: !2564, line: 292, size: 32, elements: !4482)
!4482 = !{!4483, !4484}
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4481, file: !2564, line: 297, baseType: !103, size: 32)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4481, file: !2564, line: 306, baseType: !103, size: 32)
!4485 = !DILocalVariable(name: "conv", scope: !4439, file: !2564, line: 1400, type: !4486)
!4486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4487)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 32)
!4488 = !DILocalVariable(name: "value", scope: !4439, file: !2564, line: 1401, type: !4489)
!4489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4490)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4444, size: 32)
!4491 = !DILocalVariable(name: "sp", scope: !4439, file: !2564, line: 1402, type: !144)
!4492 = !DILocalVariable(name: "width", scope: !4439, file: !2564, line: 1403, type: !103)
!4493 = !DILocalVariable(name: "precision", scope: !4439, file: !2564, line: 1404, type: !103)
!4494 = !DILocalVariable(name: "bps", scope: !4439, file: !2564, line: 1405, type: !144)
!4495 = !DILocalVariable(name: "bpe", scope: !4439, file: !2564, line: 1406, type: !144)
!4496 = !DILocalVariable(name: "sign", scope: !4439, file: !2564, line: 1407, type: !146)
!4497 = !DILocalVariable(name: "arg", scope: !4498, file: !2564, line: 1432, type: !103)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !2564, line: 1431, column: 24)
!4499 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1431, column: 7)
!4500 = !DILocalVariable(name: "specifier_cat", scope: !4439, file: !2564, line: 1468, type: !2563)
!4501 = !DILocalVariable(name: "length_mod", scope: !4439, file: !2564, line: 1470, type: !2571)
!4502 = !DILocalVariable(name: "rc", scope: !4503, file: !2564, line: 1575, type: !103)
!4503 = distinct !DILexicalBlock(scope: !4504, file: !2564, line: 1575, column: 4)
!4504 = distinct !DILexicalBlock(scope: !4505, file: !2564, line: 1574, column: 43)
!4505 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1574, column: 7)
!4506 = !DILocalVariable(name: "rc", scope: !4507, file: !2564, line: 1584, type: !103)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !2564, line: 1584, column: 4)
!4508 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1582, column: 28)
!4509 = !DILocalVariable(name: "len", scope: !4510, file: !2564, line: 1589, type: !344)
!4510 = distinct !DILexicalBlock(scope: !4508, file: !2564, line: 1586, column: 13)
!4511 = !DILocalVariable(name: "len", scope: !4512, file: !2564, line: 1641, type: !344)
!4512 = distinct !DILexicalBlock(scope: !4513, file: !2564, line: 1640, column: 24)
!4513 = distinct !DILexicalBlock(scope: !4508, file: !2564, line: 1640, column: 8)
!4514 = !DILocalVariable(name: "nj_len", scope: !4439, file: !2564, line: 1722, type: !344)
!4515 = !DILocalVariable(name: "pad_len", scope: !4439, file: !2564, line: 1723, type: !103)
!4516 = !DILocalVariable(name: "pad", scope: !4517, file: !2564, line: 1751, type: !146)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !2564, line: 1750, column: 26)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !2564, line: 1750, column: 8)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !2564, line: 1747, column: 18)
!4520 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1747, column: 7)
!4521 = !DILocalVariable(name: "rc", scope: !4522, file: !2564, line: 1758, type: !103)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !2564, line: 1758, column: 7)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !2564, line: 1757, column: 21)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !2564, line: 1757, column: 10)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !2564, line: 1756, column: 26)
!4526 = distinct !DILexicalBlock(scope: !4517, file: !2564, line: 1756, column: 9)
!4527 = !DILocalVariable(name: "rc", scope: !4528, file: !2564, line: 1765, type: !103)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !2564, line: 1765, column: 6)
!4529 = distinct !DILexicalBlock(scope: !4517, file: !2564, line: 1764, column: 25)
!4530 = !DILocalVariable(name: "rc", scope: !4531, file: !2564, line: 1774, type: !103)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !2564, line: 1774, column: 4)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !2564, line: 1773, column: 18)
!4533 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1773, column: 7)
!4534 = !DILocalVariable(name: "rc", scope: !4535, file: !2564, line: 1819, type: !103)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !2564, line: 1819, column: 5)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !2564, line: 1818, column: 44)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !2564, line: 1818, column: 8)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2564, line: 1817, column: 10)
!4539 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1777, column: 7)
!4540 = !DILocalVariable(name: "rc", scope: !4541, file: !2564, line: 1823, type: !103)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2564, line: 1823, column: 5)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !2564, line: 1822, column: 26)
!4543 = distinct !DILexicalBlock(scope: !4538, file: !2564, line: 1822, column: 8)
!4544 = !DILocalVariable(name: "rc", scope: !4545, file: !2564, line: 1828, type: !103)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !2564, line: 1828, column: 5)
!4546 = distinct !DILexicalBlock(scope: !4538, file: !2564, line: 1827, column: 26)
!4547 = !DILocalVariable(name: "rc", scope: !4548, file: !2564, line: 1831, type: !103)
!4548 = distinct !DILexicalBlock(scope: !4538, file: !2564, line: 1831, column: 4)
!4549 = !DILocalVariable(name: "rc", scope: !4550, file: !2564, line: 1836, type: !103)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !2564, line: 1836, column: 4)
!4551 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1835, column: 21)
!4552 = !DILabel(scope: !4508, name: "prec_int_pad0", file: !2564, line: 1634)
!4553 = !DILocation(line: 0, scope: !4412)
!4554 = !DILocation(line: 1341, column: 2, scope: !4412)
!4555 = !DILocation(line: 1341, column: 7, scope: !4412)
!4556 = !DILocation(line: 1375, column: 2, scope: !4412)
!4557 = !DILocation(line: 1342, column: 9, scope: !4412)
!4558 = !DILocation(line: 1375, column: 9, scope: !4412)
!4559 = !DILocation(line: 1377, column: 4, scope: !4436)
!4560 = !DILocation(line: 0, scope: !4436)
!4561 = !DILocation(line: 1377, column: 4, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4436, file: !2564, line: 1377, column: 4)
!4563 = distinct !{!4563, !4556, !4564}
!4564 = !DILocation(line: 1839, column: 2, scope: !4412)
!4565 = !DILocation(line: 1392, column: 3, scope: !4439)
!4566 = !DILocation(line: 1395, column: 5, scope: !4439)
!4567 = !DILocation(line: 0, scope: !4439)
!4568 = !DILocation(line: 1409, column: 8, scope: !4439)
!4569 = !DILocation(line: 1414, column: 13, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1414, column: 7)
!4571 = !DILocation(line: 1414, column: 7, scope: !4439)
!4572 = !DILocation(line: 1415, column: 12, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4570, file: !2564, line: 1414, column: 25)
!4574 = !DILocation(line: 1417, column: 14, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4573, file: !2564, line: 1417, column: 8)
!4576 = !DILocation(line: 1417, column: 8, scope: !4573)
!4577 = !DILocation(line: 1418, column: 21, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4575, file: !2564, line: 1417, column: 19)
!4579 = !DILocation(line: 1419, column: 13, scope: !4578)
!4580 = !DILocation(line: 1420, column: 4, scope: !4578)
!4581 = !DILocation(line: 1421, column: 20, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4570, file: !2564, line: 1421, column: 14)
!4583 = !DILocation(line: 1421, column: 14, scope: !4570)
!4584 = !DILocation(line: 1431, column: 13, scope: !4499)
!4585 = !DILocation(line: 1431, column: 7, scope: !4439)
!4586 = !DILocation(line: 1432, column: 14, scope: !4498)
!4587 = !DILocation(line: 0, scope: !4498)
!4588 = !DILocation(line: 1434, column: 12, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4498, file: !2564, line: 1434, column: 8)
!4590 = !DILocation(line: 1434, column: 8, scope: !4498)
!4591 = !DILocation(line: 1435, column: 24, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4589, file: !2564, line: 1434, column: 17)
!4593 = !DILocation(line: 1436, column: 4, scope: !4592)
!4594 = !DILocation(line: 1439, column: 20, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4499, file: !2564, line: 1439, column: 14)
!4596 = !DILocation(line: 1439, column: 14, scope: !4499)
!4597 = !DILocation(line: 1469, column: 37, scope: !4439)
!4598 = !DILocation(line: 1448, column: 20, scope: !4439)
!4599 = !DILocation(line: 1449, column: 22, scope: !4439)
!4600 = !DILocation(line: 1471, column: 34, scope: !4439)
!4601 = !DILocation(line: 1478, column: 7, scope: !4439)
!4602 = !DILocation(line: 1479, column: 4, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !2564, line: 1478, column: 40)
!4604 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1478, column: 7)
!4605 = !DILocation(line: 1484, column: 19, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4603, file: !2564, line: 1479, column: 24)
!4607 = !DILocation(line: 1484, column: 17, scope: !4606)
!4608 = !DILocation(line: 1485, column: 5, scope: !4606)
!4609 = !DILocation(line: 1492, column: 20, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !2564, line: 1491, column: 12)
!4611 = distinct !DILexicalBlock(scope: !4606, file: !2564, line: 1487, column: 9)
!4612 = !DILocation(line: 1492, column: 18, scope: !4610)
!4613 = !DILocation(line: 1494, column: 5, scope: !4606)
!4614 = !DILocation(line: 1497, column: 23, scope: !4606)
!4615 = !DILocation(line: 1496, column: 17, scope: !4606)
!4616 = !DILocation(line: 1498, column: 5, scope: !4606)
!4617 = !DILocation(line: 1501, column: 23, scope: !4606)
!4618 = !DILocation(line: 1500, column: 17, scope: !4606)
!4619 = !DILocation(line: 1502, column: 5, scope: !4606)
!4620 = !DILocation(line: 1513, column: 23, scope: !4606)
!4621 = !DILocation(line: 1513, column: 6, scope: !4606)
!4622 = !DILocation(line: 1512, column: 17, scope: !4606)
!4623 = !DILocation(line: 1514, column: 5, scope: !4606)
!4624 = !DILocation(line: 0, scope: !4606)
!4625 = !DILocation(line: 1516, column: 8, scope: !4603)
!4626 = !DILocation(line: 1517, column: 19, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !2564, line: 1516, column: 33)
!4628 = distinct !DILexicalBlock(scope: !4603, file: !2564, line: 1516, column: 8)
!4629 = !DILocation(line: 1517, column: 17, scope: !4627)
!4630 = !DILocation(line: 1518, column: 4, scope: !4627)
!4631 = !DILocation(line: 1519, column: 19, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !2564, line: 1518, column: 39)
!4633 = distinct !DILexicalBlock(scope: !4628, file: !2564, line: 1518, column: 15)
!4634 = !DILocation(line: 1519, column: 17, scope: !4632)
!4635 = !DILocation(line: 1520, column: 4, scope: !4632)
!4636 = !DILocation(line: 1522, column: 4, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !2564, line: 1521, column: 47)
!4638 = distinct !DILexicalBlock(scope: !4604, file: !2564, line: 1521, column: 14)
!4639 = !DILocation(line: 1527, column: 19, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4637, file: !2564, line: 1522, column: 24)
!4641 = !DILocation(line: 1527, column: 17, scope: !4640)
!4642 = !DILocation(line: 1528, column: 5, scope: !4640)
!4643 = !DILocation(line: 0, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4640, file: !2564, line: 1530, column: 9)
!4645 = !DILocation(line: 1540, column: 23, scope: !4640)
!4646 = !DILocation(line: 1539, column: 17, scope: !4640)
!4647 = !DILocation(line: 1542, column: 5, scope: !4640)
!4648 = !DILocation(line: 1545, column: 23, scope: !4640)
!4649 = !DILocation(line: 1544, column: 17, scope: !4640)
!4650 = !DILocation(line: 1547, column: 5, scope: !4640)
!4651 = !DILocation(line: 1551, column: 23, scope: !4640)
!4652 = !DILocation(line: 1551, column: 6, scope: !4640)
!4653 = !DILocation(line: 1550, column: 17, scope: !4640)
!4654 = !DILocation(line: 1552, column: 5, scope: !4640)
!4655 = !DILocation(line: 0, scope: !4640)
!4656 = !DILocation(line: 1554, column: 8, scope: !4637)
!4657 = !DILocation(line: 1555, column: 19, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !2564, line: 1554, column: 33)
!4659 = distinct !DILexicalBlock(scope: !4637, file: !2564, line: 1554, column: 8)
!4660 = !DILocation(line: 1555, column: 17, scope: !4658)
!4661 = !DILocation(line: 1556, column: 4, scope: !4658)
!4662 = !DILocation(line: 1557, column: 19, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !2564, line: 1556, column: 39)
!4664 = distinct !DILexicalBlock(scope: !4659, file: !2564, line: 1556, column: 15)
!4665 = !DILocation(line: 1557, column: 17, scope: !4663)
!4666 = !DILocation(line: 1558, column: 4, scope: !4663)
!4667 = !DILocation(line: 0, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !2564, line: 1560, column: 8)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !2564, line: 1559, column: 45)
!4670 = distinct !DILexicalBlock(scope: !4638, file: !2564, line: 1559, column: 14)
!4671 = !DILocation(line: 1566, column: 17, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4673, file: !2564, line: 1565, column: 46)
!4673 = distinct !DILexicalBlock(scope: !4670, file: !2564, line: 1565, column: 14)
!4674 = !DILocation(line: 1566, column: 15, scope: !4672)
!4675 = !DILocation(line: 1567, column: 3, scope: !4672)
!4676 = !DILocation(line: 1574, column: 21, scope: !4505)
!4677 = !DILocation(line: 1575, column: 4, scope: !4503)
!4678 = !DILocation(line: 0, scope: !4503)
!4679 = !DILocation(line: 1575, column: 4, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4503, file: !2564, line: 1575, column: 4)
!4681 = !DILocation(line: 1582, column: 17, scope: !4439)
!4682 = !DILocation(line: 1582, column: 3, scope: !4439)
!4683 = !DILocation(line: 1584, column: 4, scope: !4507)
!4684 = !DILocation(line: 0, scope: !4507)
!4685 = !DILocation(line: 1584, column: 4, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4507, file: !2564, line: 1584, column: 4)
!4687 = !DILocation(line: 1587, column: 31, scope: !4510)
!4688 = !DILocation(line: 1591, column: 18, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4510, file: !2564, line: 1591, column: 8)
!4690 = !DILocation(line: 1591, column: 8, scope: !4510)
!4691 = !DILocation(line: 1592, column: 11, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4689, file: !2564, line: 1591, column: 24)
!4693 = !DILocation(line: 0, scope: !4510)
!4694 = !DILocation(line: 1593, column: 4, scope: !4692)
!4695 = !DILocation(line: 1594, column: 11, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4689, file: !2564, line: 1593, column: 11)
!4697 = !DILocation(line: 1604, column: 51, scope: !4508)
!4698 = !DILocation(line: 1604, column: 13, scope: !4508)
!4699 = !DILocation(line: 1604, column: 11, scope: !4508)
!4700 = !DILocation(line: 1606, column: 4, scope: !4508)
!4701 = !DILocation(line: 1609, column: 14, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4508, file: !2564, line: 1609, column: 8)
!4703 = !DILocation(line: 1609, column: 8, scope: !4508)
!4704 = !DILocation(line: 1619, column: 18, scope: !4508)
!4705 = !DILocation(line: 1620, column: 13, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4508, file: !2564, line: 1620, column: 8)
!4707 = !DILocation(line: 1620, column: 8, scope: !4508)
!4708 = !DILocation(line: 1622, column: 36, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4706, file: !2564, line: 1620, column: 18)
!4710 = !DILocation(line: 1622, column: 17, scope: !4709)
!4711 = !DILocation(line: 1623, column: 4, scope: !4709)
!4712 = !DILocation(line: 1632, column: 29, scope: !4508)
!4713 = !DILocation(line: 1632, column: 10, scope: !4508)
!4714 = !DILocation(line: 1632, column: 4, scope: !4508)
!4715 = !DILocation(line: 1407, column: 8, scope: !4439)
!4716 = !DILocation(line: 0, scope: !4508)
!4717 = !DILocation(line: 1634, column: 3, scope: !4508)
!4718 = !DILocation(line: 1640, column: 18, scope: !4513)
!4719 = !DILocation(line: 1640, column: 8, scope: !4508)
!4720 = !DILocation(line: 1729, column: 13, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1729, column: 7)
!4722 = !DILocation(line: 1641, column: 22, scope: !4512)
!4723 = !DILocation(line: 0, scope: !4512)
!4724 = !DILocation(line: 1646, column: 21, scope: !4512)
!4725 = !DILocation(line: 1649, column: 13, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4512, file: !2564, line: 1649, column: 9)
!4727 = !DILocation(line: 1649, column: 9, scope: !4512)
!4728 = !DILocation(line: 1650, column: 35, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4726, file: !2564, line: 1649, column: 34)
!4730 = !DILocation(line: 1650, column: 23, scope: !4729)
!4731 = !DILocation(line: 1651, column: 5, scope: !4729)
!4732 = !DILocation(line: 1660, column: 15, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4508, file: !2564, line: 1660, column: 8)
!4734 = !DILocation(line: 1660, column: 19, scope: !4733)
!4735 = !DILocation(line: 1660, column: 8, scope: !4508)
!4736 = !DILocation(line: 1661, column: 23, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4733, file: !2564, line: 1660, column: 28)
!4738 = !DILocation(line: 1661, column: 11, scope: !4737)
!4739 = !DILocation(line: 1665, column: 22, scope: !4737)
!4740 = !DILocation(line: 1666, column: 21, scope: !4737)
!4741 = !DILocation(line: 1668, column: 5, scope: !4737)
!4742 = !DILocation(line: 1677, column: 30, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !2564, line: 1676, column: 49)
!4744 = distinct !DILexicalBlock(scope: !4508, file: !2564, line: 1676, column: 8)
!4745 = !DILocation(line: 1677, column: 5, scope: !4743)
!4746 = !DILocation(line: 1680, column: 4, scope: !4508)
!4747 = !DILocation(line: 0, scope: !4689)
!4748 = !DILocation(line: 1597, column: 14, scope: !4510)
!4749 = !DILocation(line: 1699, column: 11, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1699, column: 7)
!4751 = !DILocation(line: 1699, column: 7, scope: !4439)
!4752 = !DILocation(line: 1725, column: 7, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1725, column: 7)
!4754 = !DILocation(line: 1725, column: 12, scope: !4753)
!4755 = !DILocation(line: 1747, column: 13, scope: !4520)
!4756 = !DILocation(line: 1747, column: 7, scope: !4439)
!4757 = !DILocation(line: 1722, column: 24, scope: !4439)
!4758 = !DILocation(line: 1725, column: 7, scope: !4439)
!4759 = !DILocation(line: 1729, column: 7, scope: !4439)
!4760 = !DILocation(line: 1736, column: 13, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4439, file: !2564, line: 1736, column: 7)
!4762 = !DILocation(line: 1735, column: 19, scope: !4439)
!4763 = !DILocation(line: 1736, column: 7, scope: !4439)
!4764 = !DILocation(line: 1748, column: 10, scope: !4519)
!4765 = !DILocation(line: 1750, column: 15, scope: !4518)
!4766 = !DILocation(line: 1750, column: 8, scope: !4519)
!4767 = !DILocation(line: 0, scope: !4517)
!4768 = !DILocation(line: 1756, column: 15, scope: !4526)
!4769 = !DILocation(line: 1756, column: 9, scope: !4517)
!4770 = !DILocation(line: 1758, column: 7, scope: !4522)
!4771 = !DILocation(line: 0, scope: !4522)
!4772 = !DILocation(line: 1758, column: 7, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4522, file: !2564, line: 1758, column: 7)
!4774 = !DILocation(line: 1764, column: 5, scope: !4517)
!4775 = !DILocation(line: 0, scope: !4519)
!4776 = !DILocation(line: 1764, column: 20, scope: !4517)
!4777 = !DILocation(line: 1764, column: 17, scope: !4517)
!4778 = !DILocation(line: 1765, column: 6, scope: !4528)
!4779 = !DILocation(line: 0, scope: !4528)
!4780 = !DILocation(line: 1765, column: 6, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4528, file: !2564, line: 1765, column: 6)
!4782 = distinct !{!4782, !4774, !4783}
!4783 = !DILocation(line: 1766, column: 5, scope: !4517)
!4784 = !DILocation(line: 1773, column: 12, scope: !4533)
!4785 = !DILocation(line: 1773, column: 7, scope: !4439)
!4786 = !DILocation(line: 1773, column: 7, scope: !4533)
!4787 = !DILocation(line: 1774, column: 4, scope: !4531)
!4788 = !DILocation(line: 0, scope: !4531)
!4789 = !DILocation(line: 1774, column: 4, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4531, file: !2564, line: 1774, column: 4)
!4791 = !DILocation(line: 1818, column: 8, scope: !4537)
!4792 = !DILocation(line: 1818, column: 27, scope: !4537)
!4793 = !DILocation(line: 1818, column: 25, scope: !4537)
!4794 = !DILocation(line: 1818, column: 8, scope: !4538)
!4795 = !DILocation(line: 1819, column: 5, scope: !4535)
!4796 = !DILocation(line: 0, scope: !4535)
!4797 = !DILocation(line: 1819, column: 5, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4535, file: !2564, line: 1819, column: 5)
!4799 = !DILocation(line: 1822, column: 14, scope: !4543)
!4800 = !DILocation(line: 1822, column: 8, scope: !4538)
!4801 = !DILocation(line: 1823, column: 5, scope: !4541)
!4802 = !DILocation(line: 0, scope: !4541)
!4803 = !DILocation(line: 1823, column: 5, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4541, file: !2564, line: 1823, column: 5)
!4805 = !DILocation(line: 1826, column: 20, scope: !4538)
!4806 = !DILocation(line: 1827, column: 4, scope: !4538)
!4807 = !DILocation(line: 0, scope: !4538)
!4808 = !DILocation(line: 1827, column: 21, scope: !4538)
!4809 = !DILocation(line: 1827, column: 18, scope: !4538)
!4810 = !DILocation(line: 1828, column: 5, scope: !4545)
!4811 = !DILocation(line: 0, scope: !4545)
!4812 = !DILocation(line: 1828, column: 5, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4545, file: !2564, line: 1828, column: 5)
!4814 = distinct !{!4814, !4806, !4815}
!4815 = !DILocation(line: 1829, column: 4, scope: !4538)
!4816 = !DILocation(line: 1831, column: 4, scope: !4548)
!4817 = !DILocation(line: 0, scope: !4548)
!4818 = !DILocation(line: 1831, column: 4, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4548, file: !2564, line: 1831, column: 4)
!4820 = !DILocation(line: 1835, column: 16, scope: !4439)
!4821 = !DILocation(line: 1835, column: 3, scope: !4439)
!4822 = !DILocation(line: 1836, column: 4, scope: !4550)
!4823 = !DILocation(line: 0, scope: !4550)
!4824 = !DILocation(line: 1836, column: 4, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4550, file: !2564, line: 1836, column: 4)
!4826 = !DILocation(line: 1837, column: 4, scope: !4551)
!4827 = distinct !{!4827, !4821, !4828}
!4828 = !DILocation(line: 1838, column: 3, scope: !4439)
!4829 = !DILocation(line: 1844, column: 1, scope: !4412)
!4830 = distinct !DISubprogram(name: "extract_conversion", scope: !2564, file: !2564, line: 642, type: !4831, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !4833)
!4831 = !DISubroutineType(types: !4832)
!4832 = !{!144, !4487, !144}
!4833 = !{!4834, !4835}
!4834 = !DILocalVariable(name: "conv", arg: 1, scope: !4830, file: !2564, line: 642, type: !4487)
!4835 = !DILocalVariable(name: "sp", arg: 2, scope: !4830, file: !2564, line: 643, type: !144)
!4836 = !DILocation(line: 0, scope: !4830)
!4837 = !DILocation(line: 645, column: 10, scope: !4830)
!4838 = !DILocation(line: 653, column: 2, scope: !4830)
!4839 = !DILocation(line: 654, column: 6, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4830, file: !2564, line: 654, column: 6)
!4841 = !DILocation(line: 654, column: 10, scope: !4840)
!4842 = !DILocation(line: 654, column: 6, scope: !4830)
!4843 = !DILocation(line: 655, column: 24, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4840, file: !2564, line: 654, column: 18)
!4845 = !DILocation(line: 655, column: 19, scope: !4844)
!4846 = !DILocation(line: 656, column: 3, scope: !4844)
!4847 = !DILocation(line: 659, column: 7, scope: !4830)
!4848 = !DILocation(line: 660, column: 7, scope: !4830)
!4849 = !DILocation(line: 661, column: 7, scope: !4830)
!4850 = !DILocation(line: 662, column: 7, scope: !4830)
!4851 = !DILocation(line: 663, column: 7, scope: !4830)
!4852 = !DILocation(line: 665, column: 2, scope: !4830)
!4853 = !DILocation(line: 666, column: 1, scope: !4830)
!4854 = distinct !DISubprogram(name: "outs", scope: !2564, file: !2564, line: 1319, type: !4855, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !4857)
!4855 = !DISubroutineType(types: !4856)
!4856 = !{!103, !3401, !102, !144, !144}
!4857 = !{!4858, !4859, !4860, !4861, !4862, !4863}
!4858 = !DILocalVariable(name: "out", arg: 1, scope: !4854, file: !2564, line: 1319, type: !3401)
!4859 = !DILocalVariable(name: "ctx", arg: 2, scope: !4854, file: !2564, line: 1320, type: !102)
!4860 = !DILocalVariable(name: "sp", arg: 3, scope: !4854, file: !2564, line: 1321, type: !144)
!4861 = !DILocalVariable(name: "ep", arg: 4, scope: !4854, file: !2564, line: 1322, type: !144)
!4862 = !DILocalVariable(name: "count", scope: !4854, file: !2564, line: 1324, type: !344)
!4863 = !DILocalVariable(name: "rc", scope: !4864, file: !2564, line: 1327, type: !103)
!4864 = distinct !DILexicalBlock(scope: !4854, file: !2564, line: 1326, column: 45)
!4865 = !DILocation(line: 0, scope: !4854)
!4866 = !DILocation(line: 1326, column: 2, scope: !4854)
!4867 = !DILocation(line: 1324, column: 9, scope: !4854)
!4868 = !DILocation(line: 1326, column: 13, scope: !4854)
!4869 = !DILocation(line: 1326, column: 19, scope: !4854)
!4870 = !DILocation(line: 1327, column: 21, scope: !4864)
!4871 = !DILocation(line: 1326, column: 36, scope: !4854)
!4872 = !DILocation(line: 1326, column: 39, scope: !4854)
!4873 = !DILocation(line: 1327, column: 24, scope: !4864)
!4874 = !DILocation(line: 1327, column: 16, scope: !4864)
!4875 = !DILocation(line: 1327, column: 12, scope: !4864)
!4876 = !DILocation(line: 0, scope: !4864)
!4877 = !DILocation(line: 1329, column: 10, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4864, file: !2564, line: 1329, column: 7)
!4879 = !DILocation(line: 1329, column: 7, scope: !4864)
!4880 = distinct !{!4880, !4866, !4881}
!4881 = !DILocation(line: 1333, column: 2, scope: !4854)
!4882 = !DILocation(line: 1336, column: 1, scope: !4854)
!4883 = distinct !DISubprogram(name: "encode_uint", scope: !2564, file: !2564, line: 788, type: !4884, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !4886)
!4884 = !DISubroutineType(types: !4885)
!4885 = !{!1051, !2586, !4487, !1051, !144}
!4886 = !{!4887, !4888, !4889, !4890, !4891, !4892, !4894, !4895}
!4887 = !DILocalVariable(name: "value", arg: 1, scope: !4883, file: !2564, line: 788, type: !2586)
!4888 = !DILocalVariable(name: "conv", arg: 2, scope: !4883, file: !2564, line: 789, type: !4487)
!4889 = !DILocalVariable(name: "bps", arg: 3, scope: !4883, file: !2564, line: 790, type: !1051)
!4890 = !DILocalVariable(name: "bpe", arg: 4, scope: !4883, file: !2564, line: 791, type: !144)
!4891 = !DILocalVariable(name: "upcase", scope: !4883, file: !2564, line: 793, type: !157)
!4892 = !DILocalVariable(name: "radix", scope: !4883, file: !2564, line: 794, type: !4893)
!4893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4894 = !DILocalVariable(name: "bp", scope: !4883, file: !2564, line: 795, type: !1051)
!4895 = !DILocalVariable(name: "lsv", scope: !4896, file: !2564, line: 798, type: !32)
!4896 = distinct !DILexicalBlock(scope: !4883, file: !2564, line: 797, column: 5)
!4897 = !DILocation(line: 0, scope: !4883)
!4898 = !DILocation(line: 793, column: 35, scope: !4883)
!4899 = !DILocation(line: 793, column: 24, scope: !4883)
!4900 = !DILocation(line: 793, column: 16, scope: !4883)
!4901 = !DILocation(line: 794, column: 29, scope: !4883)
!4902 = !DILocation(line: 795, column: 24, scope: !4883)
!4903 = !DILocation(line: 795, column: 17, scope: !4883)
!4904 = !DILocation(line: 797, column: 2, scope: !4883)
!4905 = !DILocation(line: 802, column: 9, scope: !4896)
!4906 = !DILocation(line: 798, column: 22, scope: !4896)
!4907 = !DILocation(line: 0, scope: !4896)
!4908 = !DILocation(line: 800, column: 16, scope: !4896)
!4909 = !DILocation(line: 800, column: 11, scope: !4896)
!4910 = !DILocation(line: 800, column: 4, scope: !4896)
!4911 = !DILocation(line: 800, column: 9, scope: !4896)
!4912 = !DILocation(line: 803, column: 18, scope: !4883)
!4913 = !DILocation(line: 803, column: 24, scope: !4883)
!4914 = !DILocation(line: 803, column: 2, scope: !4896)
!4915 = distinct !{!4915, !4904, !4916}
!4916 = !DILocation(line: 803, column: 37, scope: !4883)
!4917 = !DILocation(line: 808, column: 12, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4883, file: !2564, line: 808, column: 6)
!4919 = !DILocation(line: 808, column: 6, scope: !4883)
!4920 = !DILocation(line: 809, column: 7, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4918, file: !2564, line: 808, column: 23)
!4922 = !DILocation(line: 813, column: 3, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !2564, line: 811, column: 27)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !2564, line: 811, column: 14)
!4925 = distinct !DILexicalBlock(scope: !4921, file: !2564, line: 809, column: 7)
!4926 = !DILocation(line: 0, scope: !4925)
!4927 = !DILocation(line: 818, column: 2, scope: !4883)
!4928 = distinct !DISubprogram(name: "store_count", scope: !2564, file: !2564, line: 1280, type: !4929, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !4933)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{null, !4931, !102, !103}
!4931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4932, size: 32)
!4932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4454)
!4933 = !{!4934, !4935, !4936}
!4934 = !DILocalVariable(name: "conv", arg: 1, scope: !4928, file: !2564, line: 1280, type: !4931)
!4935 = !DILocalVariable(name: "dp", arg: 2, scope: !4928, file: !2564, line: 1281, type: !102)
!4936 = !DILocalVariable(name: "count", arg: 3, scope: !4928, file: !2564, line: 1282, type: !103)
!4937 = !DILocation(line: 0, scope: !4928)
!4938 = !DILocation(line: 1284, column: 38, scope: !4928)
!4939 = !DILocation(line: 1284, column: 2, scope: !4928)
!4940 = !DILocation(line: 1286, column: 4, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4928, file: !2564, line: 1284, column: 50)
!4942 = !DILocation(line: 1286, column: 14, scope: !4941)
!4943 = !DILocation(line: 1287, column: 3, scope: !4941)
!4944 = !DILocation(line: 1289, column: 24, scope: !4941)
!4945 = !DILocation(line: 1289, column: 22, scope: !4941)
!4946 = !DILocation(line: 1290, column: 3, scope: !4941)
!4947 = !DILocation(line: 1292, column: 18, scope: !4941)
!4948 = !DILocation(line: 1292, column: 4, scope: !4941)
!4949 = !DILocation(line: 1292, column: 16, scope: !4941)
!4950 = !DILocation(line: 1293, column: 3, scope: !4941)
!4951 = !DILocation(line: 1295, column: 4, scope: !4941)
!4952 = !DILocation(line: 1295, column: 15, scope: !4941)
!4953 = !DILocation(line: 1296, column: 3, scope: !4941)
!4954 = !DILocation(line: 1298, column: 22, scope: !4941)
!4955 = !DILocation(line: 1298, column: 4, scope: !4941)
!4956 = !DILocation(line: 1298, column: 20, scope: !4941)
!4957 = !DILocation(line: 1299, column: 3, scope: !4941)
!4958 = !DILocation(line: 1301, column: 21, scope: !4941)
!4959 = !DILocation(line: 1301, column: 4, scope: !4941)
!4960 = !DILocation(line: 1301, column: 19, scope: !4941)
!4961 = !DILocation(line: 1302, column: 3, scope: !4941)
!4962 = !DILocation(line: 1304, column: 4, scope: !4941)
!4963 = !DILocation(line: 1304, column: 17, scope: !4941)
!4964 = !DILocation(line: 1305, column: 3, scope: !4941)
!4965 = !DILocation(line: 1307, column: 4, scope: !4941)
!4966 = !DILocation(line: 1307, column: 20, scope: !4941)
!4967 = !DILocation(line: 1308, column: 3, scope: !4941)
!4968 = !DILocation(line: 1316, column: 1, scope: !4928)
!4969 = distinct !DISubprogram(name: "isupper", scope: !4970, file: !4970, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !4971)
!4970 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4971 = !{!4972}
!4972 = !DILocalVariable(name: "a", arg: 1, scope: !4969, file: !4970, line: 16, type: !103)
!4973 = !DILocation(line: 0, scope: !4969)
!4974 = !DILocation(line: 18, column: 29, scope: !4969)
!4975 = !DILocation(line: 18, column: 45, scope: !4969)
!4976 = !DILocation(line: 18, column: 2, scope: !4969)
!4977 = distinct !DISubprogram(name: "conversion_radix", scope: !2564, file: !2564, line: 761, type: !4978, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !4980)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{!344, !146}
!4980 = !{!4981}
!4981 = !DILocalVariable(name: "specifier", arg: 1, scope: !4977, file: !2564, line: 761, type: !146)
!4982 = !DILocation(line: 0, scope: !4977)
!4983 = !DILocation(line: 763, column: 2, scope: !4977)
!4984 = !DILocation(line: 770, column: 3, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4977, file: !2564, line: 763, column: 21)
!4986 = !DILocation(line: 774, column: 3, scope: !4985)
!4987 = !DILocation(line: 0, scope: !4985)
!4988 = !DILocation(line: 776, column: 1, scope: !4977)
!4989 = distinct !DISubprogram(name: "extract_flags", scope: !2564, file: !2564, line: 339, type: !4831, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !4990)
!4990 = !{!4991, !4992, !4993}
!4991 = !DILocalVariable(name: "conv", arg: 1, scope: !4989, file: !2564, line: 339, type: !4487)
!4992 = !DILocalVariable(name: "sp", arg: 2, scope: !4989, file: !2564, line: 340, type: !144)
!4993 = !DILocalVariable(name: "loop", scope: !4989, file: !2564, line: 342, type: !157)
!4994 = !DILocation(line: 0, scope: !4989)
!4995 = !DILocation(line: 344, column: 2, scope: !4989)
!4996 = !DILocation(line: 345, column: 11, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4989, file: !2564, line: 344, column: 5)
!4998 = !DILocation(line: 345, column: 3, scope: !4997)
!4999 = !DILocation(line: 351, column: 4, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4997, file: !2564, line: 345, column: 16)
!5001 = !DILocation(line: 354, column: 4, scope: !5000)
!5002 = !DILocation(line: 357, column: 4, scope: !5000)
!5003 = !DILocation(line: 360, column: 4, scope: !5000)
!5004 = !DILocation(line: 0, scope: !5000)
!5005 = !DILocation(line: 370, column: 12, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4989, file: !2564, line: 370, column: 6)
!5007 = !DILocation(line: 370, column: 22, scope: !5006)
!5008 = !DILocation(line: 371, column: 19, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5006, file: !2564, line: 370, column: 42)
!5010 = !DILocation(line: 372, column: 2, scope: !5009)
!5011 = !DILocation(line: 376, column: 2, scope: !4989)
!5012 = distinct !DISubprogram(name: "extract_width", scope: !2564, file: !2564, line: 388, type: !4831, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !5013)
!5013 = !{!5014, !5015, !5016, !5017}
!5014 = !DILocalVariable(name: "conv", arg: 1, scope: !5012, file: !2564, line: 388, type: !4487)
!5015 = !DILocalVariable(name: "sp", arg: 2, scope: !5012, file: !2564, line: 389, type: !144)
!5016 = !DILocalVariable(name: "wp", scope: !5012, file: !2564, line: 398, type: !144)
!5017 = !DILocalVariable(name: "width", scope: !5012, file: !2564, line: 399, type: !344)
!5018 = !DILocation(line: 0, scope: !5012)
!5019 = !DILocation(line: 391, column: 8, scope: !5012)
!5020 = !DILocation(line: 391, column: 22, scope: !5012)
!5021 = !DILocation(line: 393, column: 6, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5012, file: !2564, line: 393, column: 6)
!5023 = !DILocation(line: 393, column: 10, scope: !5022)
!5024 = !DILocation(line: 393, column: 6, scope: !5012)
!5025 = !DILocation(line: 394, column: 20, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5022, file: !2564, line: 393, column: 18)
!5027 = !DILocation(line: 395, column: 10, scope: !5026)
!5028 = !DILocation(line: 395, column: 3, scope: !5026)
!5029 = !DILocation(line: 399, column: 17, scope: !5012)
!5030 = !DILocation(line: 401, column: 6, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5012, file: !2564, line: 401, column: 6)
!5032 = !DILocation(line: 401, column: 9, scope: !5031)
!5033 = !DILocation(line: 401, column: 6, scope: !5012)
!5034 = !DILocation(line: 402, column: 23, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5031, file: !2564, line: 401, column: 16)
!5036 = !DILocation(line: 403, column: 9, scope: !5035)
!5037 = !DILocation(line: 403, column: 21, scope: !5035)
!5038 = !DILocation(line: 405, column: 11, scope: !5035)
!5039 = !DILocation(line: 404, column: 21, scope: !5035)
!5040 = !DILocation(line: 406, column: 2, scope: !5035)
!5041 = !DILocation(line: 409, column: 1, scope: !5012)
!5042 = distinct !DISubprogram(name: "extract_prec", scope: !2564, file: !2564, line: 420, type: !4831, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !5043)
!5043 = !{!5044, !5045, !5046}
!5044 = !DILocalVariable(name: "conv", arg: 1, scope: !5042, file: !2564, line: 420, type: !4487)
!5045 = !DILocalVariable(name: "sp", arg: 2, scope: !5042, file: !2564, line: 421, type: !144)
!5046 = !DILocalVariable(name: "prec", scope: !5042, file: !2564, line: 435, type: !344)
!5047 = !DILocation(line: 0, scope: !5042)
!5048 = !DILocation(line: 423, column: 24, scope: !5042)
!5049 = !DILocation(line: 423, column: 28, scope: !5042)
!5050 = !DILocation(line: 423, column: 8, scope: !5042)
!5051 = !DILocation(line: 423, column: 21, scope: !5042)
!5052 = !DILocation(line: 425, column: 6, scope: !5042)
!5053 = !DILocation(line: 428, column: 2, scope: !5042)
!5054 = !DILocation(line: 430, column: 6, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5042, file: !2564, line: 430, column: 6)
!5056 = !DILocation(line: 430, column: 10, scope: !5055)
!5057 = !DILocation(line: 430, column: 6, scope: !5042)
!5058 = !DILocation(line: 431, column: 19, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5055, file: !2564, line: 430, column: 18)
!5060 = !DILocation(line: 432, column: 10, scope: !5059)
!5061 = !DILocation(line: 432, column: 3, scope: !5059)
!5062 = !DILocation(line: 435, column: 16, scope: !5042)
!5063 = !DILocation(line: 437, column: 8, scope: !5042)
!5064 = !DILocation(line: 437, column: 19, scope: !5042)
!5065 = !DILocation(line: 439, column: 10, scope: !5042)
!5066 = !DILocation(line: 438, column: 20, scope: !5042)
!5067 = !DILocation(line: 441, column: 9, scope: !5042)
!5068 = !DILocation(line: 442, column: 1, scope: !5042)
!5069 = distinct !DISubprogram(name: "extract_length", scope: !2564, file: !2564, line: 453, type: !4831, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !5070)
!5070 = !{!5071, !5072}
!5071 = !DILocalVariable(name: "conv", arg: 1, scope: !5069, file: !2564, line: 453, type: !4487)
!5072 = !DILocalVariable(name: "sp", arg: 2, scope: !5069, file: !2564, line: 454, type: !144)
!5073 = !DILocation(line: 0, scope: !5069)
!5074 = !DILocation(line: 456, column: 10, scope: !5069)
!5075 = !DILocation(line: 456, column: 2, scope: !5069)
!5076 = !DILocation(line: 458, column: 8, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !2564, line: 458, column: 7)
!5078 = distinct !DILexicalBlock(scope: !5069, file: !2564, line: 456, column: 15)
!5079 = !DILocation(line: 458, column: 7, scope: !5077)
!5080 = !DILocation(line: 458, column: 13, scope: !5077)
!5081 = !DILocation(line: 0, scope: !5077)
!5082 = !DILocation(line: 458, column: 7, scope: !5078)
!5083 = !DILocation(line: 459, column: 21, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5077, file: !2564, line: 458, column: 21)
!5085 = !DILocation(line: 460, column: 4, scope: !5084)
!5086 = !DILocation(line: 461, column: 3, scope: !5084)
!5087 = !DILocation(line: 462, column: 21, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5077, file: !2564, line: 461, column: 10)
!5089 = !DILocation(line: 466, column: 8, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5078, file: !2564, line: 466, column: 7)
!5091 = !DILocation(line: 466, column: 7, scope: !5090)
!5092 = !DILocation(line: 466, column: 13, scope: !5090)
!5093 = !DILocation(line: 0, scope: !5090)
!5094 = !DILocation(line: 466, column: 7, scope: !5078)
!5095 = !DILocation(line: 467, column: 21, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5090, file: !2564, line: 466, column: 21)
!5097 = !DILocation(line: 468, column: 4, scope: !5096)
!5098 = !DILocation(line: 469, column: 3, scope: !5096)
!5099 = !DILocation(line: 470, column: 21, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5090, file: !2564, line: 469, column: 10)
!5101 = !DILocation(line: 474, column: 9, scope: !5078)
!5102 = !DILocation(line: 474, column: 20, scope: !5078)
!5103 = !DILocation(line: 475, column: 3, scope: !5078)
!5104 = !DILocation(line: 476, column: 3, scope: !5078)
!5105 = !DILocation(line: 478, column: 9, scope: !5078)
!5106 = !DILocation(line: 478, column: 20, scope: !5078)
!5107 = !DILocation(line: 479, column: 3, scope: !5078)
!5108 = !DILocation(line: 480, column: 3, scope: !5078)
!5109 = !DILocation(line: 482, column: 9, scope: !5078)
!5110 = !DILocation(line: 482, column: 20, scope: !5078)
!5111 = !DILocation(line: 483, column: 3, scope: !5078)
!5112 = !DILocation(line: 484, column: 3, scope: !5078)
!5113 = !DILocation(line: 486, column: 9, scope: !5078)
!5114 = !DILocation(line: 486, column: 20, scope: !5078)
!5115 = !DILocation(line: 487, column: 3, scope: !5078)
!5116 = !DILocation(line: 492, column: 21, scope: !5078)
!5117 = !DILocation(line: 493, column: 3, scope: !5078)
!5118 = !DILocation(line: 495, column: 9, scope: !5078)
!5119 = !DILocation(line: 495, column: 20, scope: !5078)
!5120 = !DILocation(line: 496, column: 3, scope: !5078)
!5121 = !DILocation(line: 498, column: 2, scope: !5069)
!5122 = distinct !DISubprogram(name: "extract_specifier", scope: !2564, file: !2564, line: 513, type: !4831, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !5123)
!5123 = !{!5124, !5125, !5126, !5127}
!5124 = !DILocalVariable(name: "conv", arg: 1, scope: !5122, file: !2564, line: 513, type: !4487)
!5125 = !DILocalVariable(name: "sp", arg: 2, scope: !5122, file: !2564, line: 514, type: !144)
!5126 = !DILocalVariable(name: "unsupported", scope: !5122, file: !2564, line: 516, type: !157)
!5127 = !DILabel(scope: !5128, name: "int_conv", file: !2564, line: 526)
!5128 = distinct !DILexicalBlock(scope: !5122, file: !2564, line: 520, column: 27)
!5129 = !DILocation(line: 0, scope: !5122)
!5130 = !DILocation(line: 518, column: 20, scope: !5122)
!5131 = !DILocation(line: 518, column: 8, scope: !5122)
!5132 = !DILocation(line: 518, column: 18, scope: !5122)
!5133 = !DILocation(line: 520, column: 2, scope: !5122)
!5134 = !DILocation(line: 525, column: 3, scope: !5128)
!5135 = !DILocation(line: 0, scope: !5128)
!5136 = !DILocation(line: 526, column: 1, scope: !5128)
!5137 = !DILocation(line: 528, column: 24, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5128, file: !2564, line: 528, column: 7)
!5139 = !DILocation(line: 528, column: 7, scope: !5128)
!5140 = !DILocation(line: 535, column: 23, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5128, file: !2564, line: 535, column: 7)
!5142 = !DILocation(line: 535, column: 7, scope: !5128)
!5143 = !DILocation(line: 536, column: 36, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5141, file: !2564, line: 535, column: 31)
!5145 = !DILocation(line: 537, column: 3, scope: !5144)
!5146 = !DILocation(line: 570, column: 9, scope: !5128)
!5147 = !DILocation(line: 570, column: 23, scope: !5128)
!5148 = !DILocation(line: 575, column: 4, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5150, file: !2564, line: 573, column: 48)
!5150 = distinct !DILexicalBlock(scope: !5128, file: !2564, line: 573, column: 7)
!5151 = !DILocation(line: 603, column: 9, scope: !5128)
!5152 = !DILocation(line: 603, column: 23, scope: !5128)
!5153 = !DILocation(line: 605, column: 24, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5128, file: !2564, line: 605, column: 7)
!5155 = !DILocation(line: 605, column: 7, scope: !5128)
!5156 = !DILocation(line: 612, column: 9, scope: !5128)
!5157 = !DILocation(line: 612, column: 23, scope: !5128)
!5158 = !DILocation(line: 619, column: 24, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5128, file: !2564, line: 619, column: 7)
!5160 = !DILocation(line: 619, column: 7, scope: !5128)
!5161 = !DILocation(line: 625, column: 9, scope: !5128)
!5162 = !DILocation(line: 625, column: 17, scope: !5128)
!5163 = !DILocation(line: 626, column: 3, scope: !5128)
!5164 = !DILocation(line: 629, column: 20, scope: !5122)
!5165 = !DILocation(line: 629, column: 8, scope: !5122)
!5166 = !DILocation(line: 518, column: 23, scope: !5122)
!5167 = !DILocation(line: 631, column: 2, scope: !5122)
!5168 = distinct !DISubprogram(name: "extract_decimal", scope: !2564, file: !2564, line: 318, type: !5169, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !5172)
!5169 = !DISubroutineType(types: !5170)
!5170 = !{!344, !5171}
!5171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!5172 = !{!5173, !5174, !5175}
!5173 = !DILocalVariable(name: "str", arg: 1, scope: !5168, file: !2564, line: 318, type: !5171)
!5174 = !DILocalVariable(name: "sp", scope: !5168, file: !2564, line: 320, type: !144)
!5175 = !DILocalVariable(name: "val", scope: !5168, file: !2564, line: 321, type: !344)
!5176 = !DILocation(line: 0, scope: !5168)
!5177 = !DILocation(line: 320, column: 19, scope: !5168)
!5178 = !DILocation(line: 323, column: 37, scope: !5168)
!5179 = !DILocation(line: 323, column: 17, scope: !5168)
!5180 = !DILocation(line: 323, column: 9, scope: !5168)
!5181 = !DILocation(line: 323, column: 2, scope: !5168)
!5182 = !DILocation(line: 324, column: 13, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5168, file: !2564, line: 323, column: 43)
!5184 = !DILocation(line: 324, column: 24, scope: !5183)
!5185 = !DILocation(line: 324, column: 19, scope: !5183)
!5186 = !DILocation(line: 324, column: 27, scope: !5183)
!5187 = distinct !{!5187, !5181, !5188}
!5188 = !DILocation(line: 325, column: 2, scope: !5168)
!5189 = !DILocation(line: 326, column: 7, scope: !5168)
!5190 = !DILocation(line: 327, column: 2, scope: !5168)
!5191 = distinct !DISubprogram(name: "isdigit", scope: !4970, file: !4970, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2560, retainedNodes: !5192)
!5192 = !{!5193}
!5193 = !DILocalVariable(name: "a", arg: 1, scope: !5191, file: !4970, line: 43, type: !103)
!5194 = !DILocation(line: 0, scope: !5191)
!5195 = !DILocation(line: 45, column: 29, scope: !5191)
!5196 = !DILocation(line: 45, column: 45, scope: !5191)
!5197 = !DILocation(line: 45, column: 2, scope: !5191)
!5198 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5199, file: !5199, line: 9, type: !3220, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2597, retainedNodes: !461)
!5199 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!5200 = !DILocation(line: 11, column: 1, scope: !5198)
!5201 = !{i64 2147561303, i64 2147561346, i64 2147561386}
!5202 = !DILocation(line: 12, column: 1, scope: !5198)
!5203 = !{i64 2147565530, i64 2147565573, i64 2147565613}
!5204 = !DILocation(line: 13, column: 1, scope: !5198)
!5205 = !{i64 2147565739, i64 2147565782, i64 2147565822}
!5206 = !DILocation(line: 14, column: 1, scope: !5198)
!5207 = !{i64 2147565956, i64 2147565999, i64 2147566039}
!5208 = !DILocation(line: 15, column: 1, scope: !5198)
!5209 = !{i64 2147566125, i64 2147566168, i64 2147566208}
!5210 = !DILocation(line: 16, column: 1, scope: !5198)
!5211 = !{i64 2147566288, i64 2147566331, i64 2147566371}
!5212 = !DILocation(line: 17, column: 1, scope: !5198)
!5213 = !{i64 2147566472, i64 2147566515, i64 2147566555}
!5214 = !DILocation(line: 18, column: 1, scope: !5198)
!5215 = !{i64 2147566651, i64 2147566694, i64 2147566734}
!5216 = !DILocation(line: 19, column: 1, scope: !5198)
!5217 = !{i64 2147566893, i64 2147566936, i64 2147566976}
!5218 = !DILocation(line: 20, column: 1, scope: !5198)
!5219 = !{i64 2147567128, i64 2147567171, i64 2147567211}
!5220 = !DILocation(line: 21, column: 1, scope: !5198)
!5221 = !{i64 2147567314, i64 2147567357, i64 2147567397}
!5222 = !DILocation(line: 22, column: 1, scope: !5198)
!5223 = !{i64 2147567530, i64 2147567573, i64 2147567613}
!5224 = !DILocation(line: 23, column: 1, scope: !5198)
!5225 = !{i64 2147567733, i64 2147567776, i64 2147567816}
!5226 = !DILocation(line: 24, column: 1, scope: !5198)
!5227 = !{i64 2147567936, i64 2147567979, i64 2147568019}
!5228 = !DILocation(line: 25, column: 1, scope: !5198)
!5229 = !{i64 2147568111, i64 2147568154, i64 2147568194}
!5230 = !DILocation(line: 26, column: 1, scope: !5198)
!5231 = !{i64 2147568319, i64 2147568362, i64 2147568402}
!5232 = !DILocation(line: 27, column: 1, scope: !5198)
!5233 = !{i64 2147568523, i64 2147568566, i64 2147568606}
!5234 = !DILocation(line: 28, column: 1, scope: !5198)
!5235 = !{i64 2147568716, i64 2147568759, i64 2147568799}
!5236 = !DILocation(line: 29, column: 1, scope: !5198)
!5237 = !{i64 2147568918, i64 2147568961, i64 2147569001}
!5238 = !DILocation(line: 30, column: 1, scope: !5198)
!5239 = !{i64 2147569145, i64 2147569188, i64 2147569228}
!5240 = !DILocation(line: 31, column: 1, scope: !5198)
!5241 = !{i64 2147569347, i64 2147569390, i64 2147569430}
!5242 = !DILocation(line: 32, column: 1, scope: !5198)
!5243 = !{i64 2147569562, i64 2147569605, i64 2147569645}
!5244 = !DILocation(line: 33, column: 1, scope: !5198)
!5245 = !{i64 2147569734, i64 2147569777, i64 2147569817}
!5246 = !DILocation(line: 34, column: 1, scope: !5198)
!5247 = !{i64 2147569936, i64 2147569979, i64 2147570019}
!5248 = !DILocation(line: 35, column: 1, scope: !5198)
!5249 = !{i64 2147570162, i64 2147570205, i64 2147570245}
!5250 = !DILocation(line: 36, column: 1, scope: !5198)
!5251 = !{i64 2147570361, i64 2147570404, i64 2147570444}
!5252 = !DILocation(line: 37, column: 1, scope: !5198)
!5253 = !{i64 2147570536, i64 2147570579, i64 2147570619}
!5254 = !DILocation(line: 38, column: 1, scope: !5198)
!5255 = !{i64 2147570789, i64 2147570832, i64 2147570872}
!5256 = !DILocation(line: 39, column: 1, scope: !5198)
!5257 = !{i64 2147571030, i64 2147571073, i64 2147571113}
!5258 = !DILocation(line: 40, column: 1, scope: !5198)
!5259 = !{i64 2147571265, i64 2147571308, i64 2147571348}
!5260 = !DILocation(line: 41, column: 1, scope: !5198)
!5261 = !{i64 2147571497, i64 2147571540, i64 2147571580}
!5262 = !DILocation(line: 42, column: 1, scope: !5198)
!5263 = !{i64 2147571723, i64 2147571766, i64 2147571806}
!5264 = !DILocation(line: 43, column: 1, scope: !5198)
!5265 = !{i64 2147571949, i64 2147571992, i64 2147572032}
!5266 = !DILocation(line: 44, column: 1, scope: !5198)
!5267 = !{i64 2147572175, i64 2147572218, i64 2147572258}
!5268 = !DILocation(line: 45, column: 1, scope: !5198)
!5269 = !{i64 2147572410, i64 2147572453, i64 2147572493}
!5270 = !DILocation(line: 46, column: 1, scope: !5198)
!5271 = !{i64 2147572648, i64 2147572691, i64 2147572731}
!5272 = !DILocation(line: 47, column: 1, scope: !5198)
!5273 = !{i64 2147572922, i64 2147572965, i64 2147573005}
!5274 = !DILocation(line: 48, column: 1, scope: !5198)
!5275 = !{i64 2147573160, i64 2147573203, i64 2147573243}
!5276 = !DILocation(line: 49, column: 1, scope: !5198)
!5277 = !{i64 2147573404, i64 2147573447, i64 2147573487}
!5278 = !DILocation(line: 50, column: 1, scope: !5198)
!5279 = !{i64 2147573654, i64 2147573697, i64 2147573737}
!5280 = !DILocation(line: 51, column: 1, scope: !5198)
!5281 = !{i64 2147573901, i64 2147573944, i64 2147573984}
!5282 = !DILocation(line: 52, column: 1, scope: !5198)
!5283 = !{i64 2147574136, i64 2147574179, i64 2147574219}
!5284 = !DILocation(line: 53, column: 1, scope: !5198)
!5285 = !{i64 2147578432, i64 2147578475, i64 2147578515}
!5286 = !DILocation(line: 54, column: 1, scope: !5198)
!5287 = !{i64 2147578667, i64 2147578710, i64 2147578750}
!5288 = !DILocation(line: 55, column: 1, scope: !5198)
!5289 = !{i64 2147578905, i64 2147578948, i64 2147578988}
!5290 = !DILocation(line: 56, column: 1, scope: !5198)
!5291 = !{i64 2147579146, i64 2147579189, i64 2147579229}
!5292 = !DILocation(line: 57, column: 1, scope: !5198)
!5293 = !{i64 2147579426, i64 2147579469, i64 2147579509}
!5294 = !DILocation(line: 58, column: 1, scope: !5198)
!5295 = !{i64 2147579685, i64 2147579728, i64 2147579768}
!5296 = !DILocation(line: 59, column: 1, scope: !5198)
!5297 = !{i64 2147579911, i64 2147579954, i64 2147579994}
!5298 = !DILocation(line: 60, column: 1, scope: !5198)
!5299 = !{i64 2147580149, i64 2147580192, i64 2147580232}
!5300 = !DILocation(line: 61, column: 1, scope: !5198)
!5301 = !{i64 2147580378, i64 2147580421, i64 2147580461}
!5302 = !DILocation(line: 62, column: 1, scope: !5198)
!5303 = !{i64 2147580586, i64 2147580629, i64 2147580669}
!5304 = !DILocation(line: 63, column: 1, scope: !5198)
!5305 = !{i64 2147580797, i64 2147580840, i64 2147580880}
!5306 = !DILocation(line: 64, column: 1, scope: !5198)
!5307 = !{i64 2147581032, i64 2147581075, i64 2147581115}
!5308 = !DILocation(line: 65, column: 1, scope: !5198)
!5309 = !{i64 2147581261, i64 2147581304, i64 2147581344}
!5310 = !DILocation(line: 66, column: 1, scope: !5198)
!5311 = !{i64 2147581499, i64 2147581542, i64 2147581582}
!5312 = !DILocation(line: 67, column: 1, scope: !5198)
!5313 = !{i64 2147581731, i64 2147581774, i64 2147581814}
!5314 = !DILocation(line: 68, column: 1, scope: !5198)
!5315 = !{i64 2147581957, i64 2147582000, i64 2147582040}
!5316 = !DILocation(line: 69, column: 1, scope: !5198)
!5317 = !{i64 2147582174, i64 2147582217, i64 2147582257}
!5318 = !DILocation(line: 70, column: 1, scope: !5198)
!5319 = !{i64 2147582406, i64 2147582449, i64 2147582489}
!5320 = !DILocation(line: 71, column: 1, scope: !5198)
!5321 = !{i64 2147582632, i64 2147582675, i64 2147582715}
!5322 = !DILocation(line: 72, column: 1, scope: !5198)
!5323 = !{i64 2147582846, i64 2147582889, i64 2147582929}
!5324 = !DILocation(line: 73, column: 1, scope: !5198)
!5325 = !{i64 2147583066, i64 2147583109, i64 2147583149}
!5326 = !DILocation(line: 74, column: 1, scope: !5198)
!5327 = !{i64 2147583298, i64 2147583341, i64 2147583381}
!5328 = !DILocation(line: 75, column: 1, scope: !5198)
!5329 = !{i64 2147583506, i64 2147583549, i64 2147583589}
!5330 = !DILocation(line: 76, column: 1, scope: !5198)
!5331 = !{i64 2147583711, i64 2147583754, i64 2147583794}
!5332 = !DILocation(line: 77, column: 1, scope: !5198)
!5333 = !{i64 2147583928, i64 2147583971, i64 2147584011}
!5334 = !DILocation(line: 78, column: 1, scope: !5198)
!5335 = !{i64 2147584142, i64 2147584185, i64 2147584225}
!5336 = !DILocation(line: 79, column: 1, scope: !5198)
!5337 = !{i64 2147584368, i64 2147584411, i64 2147584451}
!5338 = !DILocation(line: 80, column: 1, scope: !5198)
!5339 = !{i64 2147584588, i64 2147584631, i64 2147584671}
!5340 = !DILocation(line: 81, column: 1, scope: !5198)
!5341 = !{i64 2147584793, i64 2147584836, i64 2147584876}
!5342 = !DILocation(line: 82, column: 1, scope: !5198)
!5343 = !{i64 2147585025, i64 2147585068, i64 2147585108}
!5344 = !DILocation(line: 83, column: 1, scope: !5198)
!5345 = !{i64 2147585260, i64 2147585303, i64 2147585343}
!5346 = !DILocation(line: 84, column: 1, scope: !5198)
!5347 = !{i64 2147585510, i64 2147585553, i64 2147585593}
!5348 = !DILocation(line: 85, column: 1, scope: !5198)
!5349 = !{i64 2147585760, i64 2147585803, i64 2147585843}
!5350 = !DILocation(line: 86, column: 1, scope: !5198)
!5351 = !{i64 2147585998, i64 2147586041, i64 2147586081}
!5352 = !DILocation(line: 87, column: 1, scope: !5198)
!5353 = !{i64 2147586209, i64 2147586252, i64 2147586292}
!5354 = !DILocation(line: 88, column: 1, scope: !5198)
!5355 = !{i64 2147586426, i64 2147586469, i64 2147586509}
!5356 = !DILocation(line: 89, column: 1, scope: !5198)
!5357 = !{i64 2147590683, i64 2147590726, i64 2147590766}
!5358 = !DILocation(line: 90, column: 1, scope: !5198)
!5359 = !{i64 2147590885, i64 2147590928, i64 2147590968}
!5360 = !DILocation(line: 91, column: 1, scope: !5198)
!5361 = !{i64 2147591078, i64 2147591121, i64 2147591161}
!5362 = !DILocation(line: 92, column: 1, scope: !5198)
!5363 = !{i64 2147591286, i64 2147591329, i64 2147591369}
!5364 = !DILocation(line: 93, column: 1, scope: !5198)
!5365 = !{i64 2147591482, i64 2147591525, i64 2147591565}
!5366 = !DILocation(line: 94, column: 1, scope: !5198)
!5367 = !{i64 2147591687, i64 2147591730, i64 2147591770}
!5368 = !DILocation(line: 95, column: 1, scope: !5198)
!5369 = !{i64 2147591898, i64 2147591941, i64 2147591981}
!5370 = !DILocation(line: 96, column: 1, scope: !5198)
!5371 = !{i64 2147592097, i64 2147592140, i64 2147592180}
!5372 = !DILocation(line: 97, column: 1, scope: !5198)
!5373 = !{i64 2147592272, i64 2147592315, i64 2147592355}
!5374 = !DILocation(line: 98, column: 1, scope: !5198)
!5375 = !{i64 2147592456, i64 2147592499, i64 2147592539}
!5376 = !DILocation(line: 99, column: 1, scope: !5198)
!5377 = !{i64 2147592658, i64 2147592701, i64 2147592741}
!5378 = !DILocation(line: 100, column: 1, scope: !5198)
!5379 = !{i64 2147592857, i64 2147592900, i64 2147592940}
!5380 = !DILocation(line: 101, column: 1, scope: !5198)
!5381 = !{i64 2147593023, i64 2147593066, i64 2147593106}
!5382 = !DILocation(line: 102, column: 1, scope: !5198)
!5383 = !{i64 2147593207, i64 2147593250, i64 2147593290}
!5384 = !DILocation(line: 103, column: 1, scope: !5198)
!5385 = !{i64 2147593397, i64 2147593440, i64 2147593480}
!5386 = !DILocation(line: 104, column: 1, scope: !5198)
!5387 = !{i64 2147593581, i64 2147593624, i64 2147593664}
!5388 = !DILocation(line: 105, column: 1, scope: !5198)
!5389 = !{i64 2147593795, i64 2147593838, i64 2147593878}
!5390 = !DILocation(line: 106, column: 1, scope: !5198)
!5391 = !{i64 2147594006, i64 2147594049, i64 2147594089}
!5392 = !DILocation(line: 107, column: 1, scope: !5198)
!5393 = !{i64 2147594229, i64 2147594272, i64 2147594312}
!5394 = !DILocation(line: 108, column: 1, scope: !5198)
!5395 = !{i64 2147594413, i64 2147594456, i64 2147594496}
!5396 = !DILocation(line: 109, column: 1, scope: !5198)
!5397 = !{i64 2147594627, i64 2147594670, i64 2147594710}
!5398 = !DILocation(line: 110, column: 1, scope: !5198)
!5399 = !{i64 2147594793, i64 2147594836, i64 2147594876}
!5400 = !DILocation(line: 111, column: 1, scope: !5198)
!5401 = !{i64 2147594974, i64 2147595017, i64 2147595057}
!5402 = !DILocation(line: 112, column: 1, scope: !5198)
!5403 = !{i64 2147595167, i64 2147595210, i64 2147595250}
!5404 = !DILocation(line: 113, column: 1, scope: !5198)
!5405 = !{i64 2147595393, i64 2147595436, i64 2147595476}
!5406 = !DILocation(line: 114, column: 1, scope: !5198)
!5407 = !{i64 2147595607, i64 2147595650, i64 2147595690}
!5408 = !DILocation(line: 115, column: 1, scope: !5198)
!5409 = !{i64 2147595833, i64 2147595876, i64 2147595916}
!5410 = !DILocation(line: 116, column: 1, scope: !5198)
!5411 = !{i64 2147596050, i64 2147596093, i64 2147596133}
!5412 = !DILocation(line: 117, column: 1, scope: !5198)
!5413 = !{i64 2147596327, i64 2147596370, i64 2147596410}
!5414 = !DILocation(line: 118, column: 1, scope: !5198)
!5415 = !{i64 2147596553, i64 2147596596, i64 2147596636}
!5416 = !DILocation(line: 119, column: 1, scope: !5198)
!5417 = !{i64 2147596761, i64 2147596804, i64 2147596844}
!5418 = !DILocation(line: 120, column: 1, scope: !5198)
!5419 = !{i64 2147596957, i64 2147597000, i64 2147597040}
!5420 = !DILocation(line: 121, column: 1, scope: !5198)
!5421 = !{i64 2147597222, i64 2147597265, i64 2147597305}
!5422 = !DILocation(line: 122, column: 1, scope: !5198)
!5423 = !{i64 2147597436, i64 2147597479, i64 2147597519}
!5424 = !DILocation(line: 123, column: 1, scope: !5198)
!5425 = !{i64 2147597611, i64 2147597654, i64 2147597694}
!5426 = !DILocation(line: 124, column: 1, scope: !5198)
!5427 = !{i64 2147597865, i64 2147597908, i64 2147597948}
!5428 = !DILocation(line: 125, column: 1, scope: !5198)
!5429 = !{i64 2147598064, i64 2147598107, i64 2147598147}
!5430 = !DILocation(line: 126, column: 1, scope: !5198)
!5431 = !{i64 2147598306, i64 2147598349, i64 2147598389}
!5432 = !DILocation(line: 127, column: 1, scope: !5198)
!5433 = !{i64 2147598469, i64 2147598512, i64 2147598552}
!5434 = !DILocation(line: 128, column: 1, scope: !5198)
!5435 = !{i64 2147598656, i64 2147598699, i64 2147598739}
!5436 = !DILocation(line: 129, column: 1, scope: !5198)
!5437 = !{i64 2147598849, i64 2147598892, i64 2147598932}
!5438 = !DILocation(line: 130, column: 1, scope: !5198)
!5439 = !{i64 2147599032, i64 2147599075, i64 2147599115}
!5440 = !DILocation(line: 131, column: 1, scope: !5198)
!5441 = !{i64 2147599246, i64 2147599289, i64 2147599329}
!5442 = !DILocation(line: 132, column: 1, scope: !5198)
!5443 = !{i64 2147599457, i64 2147599500, i64 2147599540}
!5444 = !DILocation(line: 133, column: 1, scope: !5198)
!5445 = !{i64 2147599677, i64 2147599720, i64 2147599760}
!5446 = !DILocation(line: 134, column: 1, scope: !5198)
!5447 = !{i64 2147599884, i64 2147599927, i64 2147599967}
!5448 = !DILocation(line: 135, column: 1, scope: !5198)
!5449 = !{i64 2147604218, i64 2147604261, i64 2147604301}
!5450 = !DILocation(line: 136, column: 1, scope: !5198)
!5451 = !{i64 2147604466, i64 2147604509, i64 2147604549}
!5452 = !DILocation(line: 137, column: 1, scope: !5198)
!5453 = !{i64 2147604665, i64 2147604708, i64 2147604748}
!5454 = !DILocation(line: 138, column: 1, scope: !5198)
!5455 = !{i64 2147604900, i64 2147604943, i64 2147604983}
!5456 = !DILocation(line: 139, column: 1, scope: !5198)
!5457 = !{i64 2147605150, i64 2147605193, i64 2147605233}
!5458 = !DILocation(line: 140, column: 1, scope: !5198)
!5459 = !{i64 2147605352, i64 2147605395, i64 2147605435}
!5460 = !DILocation(line: 141, column: 1, scope: !5198)
!5461 = !{i64 2147605575, i64 2147605618, i64 2147605658}
!5462 = !DILocation(line: 142, column: 1, scope: !5198)
!5463 = !{i64 2147605789, i64 2147605832, i64 2147605872}
!5464 = !DILocation(line: 143, column: 1, scope: !5198)
!5465 = !{i64 2147606033, i64 2147606076, i64 2147606116}
!5466 = !DILocation(line: 144, column: 1, scope: !5198)
!5467 = !{i64 2147606262, i64 2147606305, i64 2147606345}
!5468 = !DILocation(line: 145, column: 1, scope: !5198)
!5469 = !{i64 2147606491, i64 2147606534, i64 2147606574}
!5470 = !DILocation(line: 146, column: 1, scope: !5198)
!5471 = !{i64 2147606699, i64 2147606742, i64 2147606782}
!5472 = !DILocation(line: 147, column: 1, scope: !5198)
!5473 = !{i64 2147606937, i64 2147606980, i64 2147607020}
!5474 = !DILocation(line: 148, column: 1, scope: !5198)
!5475 = !{i64 2147607163, i64 2147607206, i64 2147607246}
!5476 = !DILocation(line: 149, column: 1, scope: !5198)
!5477 = !{i64 2147607422, i64 2147607465, i64 2147607505}
!5478 = !DILocation(line: 150, column: 1, scope: !5198)
!5479 = !{i64 2147607642, i64 2147607685, i64 2147607725}
!5480 = !DILocation(line: 151, column: 1, scope: !5198)
!5481 = !{i64 2147607874, i64 2147607917, i64 2147607957}
!5482 = !DILocation(line: 152, column: 1, scope: !5198)
!5483 = !{i64 2147608115, i64 2147608158, i64 2147608198}
!5484 = !DILocation(line: 153, column: 1, scope: !5198)
!5485 = !{i64 2147608356, i64 2147608399, i64 2147608439}
!5486 = !DILocation(line: 154, column: 1, scope: !5198)
!5487 = !{i64 2147608579, i64 2147608622, i64 2147608662}
!5488 = !DILocation(line: 155, column: 1, scope: !5198)
!5489 = !{i64 2147608796, i64 2147608839, i64 2147608879}
!5490 = !DILocation(line: 156, column: 1, scope: !5198)
!5491 = !{i64 2147609037, i64 2147609080, i64 2147609120}
!5492 = !DILocation(line: 157, column: 1, scope: !5198)
!5493 = !{i64 2147609224, i64 2147609267, i64 2147609307}
!5494 = !DILocation(line: 158, column: 1, scope: !5198)
!5495 = !{i64 2147609411, i64 2147609454, i64 2147609494}
!5496 = !DILocation(line: 159, column: 1, scope: !5198)
!5497 = !{i64 2147609574, i64 2147609617, i64 2147609657}
!5498 = !DILocation(line: 160, column: 1, scope: !5198)
!5499 = !{i64 2147609833, i64 2147609876, i64 2147609916}
!5500 = !DILocation(line: 161, column: 1, scope: !5198)
!5501 = !{i64 2147610056, i64 2147610099, i64 2147610139}
!5502 = !DILocation(line: 162, column: 1, scope: !5198)
!5503 = !{i64 2147610285, i64 2147610328, i64 2147610368}
!5504 = !DILocation(line: 163, column: 1, scope: !5198)
!5505 = !{i64 2147610481, i64 2147610524, i64 2147610564}
!5506 = !DILocation(line: 164, column: 1, scope: !5198)
!5507 = !{i64 2147610693, i64 2147610736, i64 2147610776}
!5508 = !DILocation(line: 165, column: 1, scope: !5198)
!5509 = !{i64 2147610914, i64 2147610957, i64 2147610997}
!5510 = !DILocation(line: 166, column: 1, scope: !5198)
!5511 = !{i64 2147611128, i64 2147611171, i64 2147611211}
!5512 = !DILocation(line: 167, column: 1, scope: !5198)
!5513 = !{i64 2147611318, i64 2147611361, i64 2147611401}
!5514 = !DILocation(line: 168, column: 1, scope: !5198)
!5515 = !{i64 2147611517, i64 2147611560, i64 2147611600}
!5516 = !DILocation(line: 169, column: 1, scope: !5198)
!5517 = !{i64 2147611722, i64 2147611765, i64 2147611805}
!5518 = !DILocation(line: 170, column: 1, scope: !5198)
!5519 = !{i64 2147611942, i64 2147611985, i64 2147612025}
!5520 = !DILocation(line: 171, column: 1, scope: !5198)
!5521 = !{i64 2147612143, i64 2147612186, i64 2147612226}
!5522 = !DILocation(line: 172, column: 1, scope: !5198)
!5523 = !{i64 2147612342, i64 2147612385, i64 2147612425}
!5524 = !DILocation(line: 173, column: 1, scope: !5198)
!5525 = !{i64 2147616608, i64 2147616651, i64 2147616691}
!5526 = !DILocation(line: 174, column: 1, scope: !5198)
!5527 = !{i64 2147616777, i64 2147616820, i64 2147616860}
!5528 = !DILocation(line: 175, column: 1, scope: !5198)
!5529 = !{i64 2147616961, i64 2147617004, i64 2147617044}
!5530 = !DILocation(line: 176, column: 1, scope: !5198)
!5531 = !{i64 2147617145, i64 2147617188, i64 2147617228}
!5532 = !DILocation(line: 177, column: 1, scope: !5198)
!5533 = !{i64 2147617332, i64 2147617375, i64 2147617415}
!5534 = !DILocation(line: 178, column: 1, scope: !5198)
!5535 = !{i64 2147617516, i64 2147617559, i64 2147617599}
!5536 = !DILocation(line: 179, column: 1, scope: !5198)
!5537 = !{i64 2147617754, i64 2147617797, i64 2147617837}
!5538 = !DILocation(line: 180, column: 1, scope: !5198)
!5539 = !{i64 2147617984, i64 2147618027, i64 2147618067}
!5540 = !DILocation(line: 181, column: 1, scope: !5198)
!5541 = !{i64 2147618213, i64 2147618256, i64 2147618296}
!5542 = !DILocation(line: 182, column: 1, scope: !5198)
!5543 = !{i64 2147618400, i64 2147618443, i64 2147618483}
!5544 = !DILocation(line: 183, column: 1, scope: !5198)
!5545 = !{i64 2147618596, i64 2147618639, i64 2147618679}
!5546 = !DILocation(line: 184, column: 1, scope: !5198)
!5547 = !{i64 2147618804, i64 2147618847, i64 2147618887}
!5548 = !DILocation(line: 185, column: 1, scope: !5198)
!5549 = !{i64 2147619016, i64 2147619059, i64 2147619099}
!5550 = !DILocation(line: 186, column: 1, scope: !5198)
!5551 = !{i64 2147619215, i64 2147619258, i64 2147619298}
!5552 = !DILocation(line: 187, column: 1, scope: !5198)
!5553 = !{i64 2147619453, i64 2147619496, i64 2147619536}
!5554 = !DILocation(line: 188, column: 1, scope: !5198)
!5555 = !{i64 2147619649, i64 2147619692, i64 2147619732}
!5556 = !DILocation(line: 189, column: 1, scope: !5198)
!5557 = !{i64 2147619851, i64 2147619894, i64 2147619934}
!5558 = !DILocation(line: 190, column: 1, scope: !5198)
!5559 = !{i64 2147620044, i64 2147620087, i64 2147620127}
!5560 = !DILocation(line: 191, column: 1, scope: !5198)
!5561 = !{i64 2147620278, i64 2147620321, i64 2147620361}
!5562 = !DILocation(line: 192, column: 1, scope: !5198)
!5563 = !{i64 2147620441, i64 2147620484, i64 2147620524}
!5564 = !DILocation(line: 193, column: 1, scope: !5198)
!5565 = !{i64 2147620680, i64 2147620723, i64 2147620763}
!5566 = !DILocation(line: 194, column: 1, scope: !5198)
!5567 = !{i64 2147620919, i64 2147620962, i64 2147621002}
!5568 = !DILocation(line: 195, column: 1, scope: !5198)
!5569 = !{i64 2147621155, i64 2147621198, i64 2147621238}
!5570 = !DILocation(line: 196, column: 1, scope: !5198)
!5571 = !{i64 2147621385, i64 2147621428, i64 2147621468}
!5572 = !DILocation(line: 197, column: 1, scope: !5198)
!5573 = !{i64 2147621572, i64 2147621615, i64 2147621655}
!5574 = !DILocation(line: 198, column: 1, scope: !5198)
!5575 = !{i64 2147621771, i64 2147621814, i64 2147621854}
!5576 = !DILocation(line: 199, column: 1, scope: !5198)
!5577 = !{i64 2147622042, i64 2147622085, i64 2147622125}
!5578 = !DILocation(line: 200, column: 1, scope: !5198)
!5579 = !{i64 2147622217, i64 2147622260, i64 2147622300}
!5580 = !DILocation(line: 201, column: 1, scope: !5198)
!5581 = !{i64 2147622451, i64 2147622494, i64 2147622534}
!5582 = !DILocation(line: 202, column: 1, scope: !5198)
!5583 = !{i64 2147622659, i64 2147622702, i64 2147622742}
!5584 = !DILocation(line: 203, column: 1, scope: !5198)
!5585 = !{i64 2147622858, i64 2147622901, i64 2147622941}
!5586 = !DILocation(line: 204, column: 1, scope: !5198)
!5587 = !{i64 2147623076, i64 2147623119, i64 2147623159}
!5588 = !DILocation(line: 205, column: 1, scope: !5198)
!5589 = !{i64 2147623266, i64 2147623309, i64 2147623349}
!5590 = !DILocation(line: 206, column: 1, scope: !5198)
!5591 = !{i64 2147623513, i64 2147623556, i64 2147623596}
!5592 = !DILocation(line: 207, column: 1, scope: !5198)
!5593 = !{i64 2147623709, i64 2147623752, i64 2147623792}
!5594 = !DILocation(line: 208, column: 1, scope: !5198)
!5595 = !{i64 2147623915, i64 2147623958, i64 2147623998}
!5596 = !DILocation(line: 209, column: 1, scope: !5198)
!5597 = !{i64 2147624120, i64 2147624163, i64 2147624203}
!5598 = !DILocation(line: 210, column: 1, scope: !5198)
!5599 = !{i64 2147624346, i64 2147624389, i64 2147624429}
!5600 = !DILocation(line: 211, column: 1, scope: !5198)
!5601 = !{i64 2147624578, i64 2147624621, i64 2147624661}
!5602 = !DILocation(line: 212, column: 1, scope: !5198)
!5603 = !{i64 2147624762, i64 2147624805, i64 2147624845}
!5604 = !DILocation(line: 213, column: 1, scope: !5198)
!5605 = !{i64 2147624971, i64 2147625014, i64 2147625054}
!5606 = !DILocation(line: 214, column: 1, scope: !5198)
!5607 = !{i64 2147625155, i64 2147625198, i64 2147625238}
!5608 = !DILocation(line: 215, column: 1, scope: !5198)
!5609 = !{i64 2147625381, i64 2147625424, i64 2147625464}
!5610 = !DILocation(line: 216, column: 1, scope: !5198)
!5611 = !{i64 2147625607, i64 2147625650, i64 2147625690}
!5612 = !DILocation(line: 217, column: 1, scope: !5198)
!5613 = !{i64 2147629894, i64 2147629937, i64 2147629977}
!5614 = !DILocation(line: 218, column: 1, scope: !5198)
!5615 = !{i64 2147630120, i64 2147630163, i64 2147630203}
!5616 = !DILocation(line: 219, column: 1, scope: !5198)
!5617 = !{i64 2147630346, i64 2147630389, i64 2147630429}
!5618 = !DILocation(line: 220, column: 1, scope: !5198)
!5619 = !{i64 2147630578, i64 2147630621, i64 2147630661}
!5620 = !DILocation(line: 221, column: 1, scope: !5198)
!5621 = !{i64 2147630816, i64 2147630859, i64 2147630899}
!5622 = !DILocation(line: 222, column: 1, scope: !5198)
!5623 = !{i64 2147631036, i64 2147631079, i64 2147631119}
!5624 = !DILocation(line: 223, column: 1, scope: !5198)
!5625 = !{i64 2147631280, i64 2147631323, i64 2147631363}
!5626 = !DILocation(line: 224, column: 1, scope: !5198)
!5627 = !{i64 2147631521, i64 2147631564, i64 2147631604}
!5628 = !DILocation(line: 225, column: 1, scope: !5198)
!5629 = !{i64 2147631756, i64 2147631799, i64 2147631839}
!5630 = !DILocation(line: 226, column: 1, scope: !5198)
!5631 = !{i64 2147631988, i64 2147632031, i64 2147632071}
!5632 = !DILocation(line: 227, column: 1, scope: !5198)
!5633 = !{i64 2147632190, i64 2147632233, i64 2147632273}
!5634 = !DILocation(line: 228, column: 1, scope: !5198)
!5635 = !{i64 2147632440, i64 2147632483, i64 2147632523}
!5636 = !DILocation(line: 229, column: 1, scope: !5198)
!5637 = !{i64 2147632678, i64 2147632721, i64 2147632761}
!5638 = !DILocation(line: 230, column: 1, scope: !5198)
!5639 = !{i64 2147632862, i64 2147632905, i64 2147632945}
!5640 = !DILocation(line: 231, column: 1, scope: !5198)
!5641 = !{i64 2147633085, i64 2147633128, i64 2147633168}
!5642 = !DILocation(line: 232, column: 1, scope: !5198)
!5643 = !{i64 2147633323, i64 2147633366, i64 2147633406}
!5644 = !DILocation(line: 233, column: 1, scope: !5198)
!5645 = !{i64 2147633561, i64 2147633604, i64 2147633644}
!5646 = !DILocation(line: 234, column: 1, scope: !5198)
!5647 = !{i64 2147633754, i64 2147633797, i64 2147633837}
!5648 = !DILocation(line: 235, column: 1, scope: !5198)
!5649 = !{i64 2147634007, i64 2147634050, i64 2147634090}
!5650 = !DILocation(line: 236, column: 1, scope: !5198)
!5651 = !{i64 2147634221, i64 2147634264, i64 2147634304}
!5652 = !DILocation(line: 237, column: 1, scope: !5198)
!5653 = !{i64 2147634429, i64 2147634472, i64 2147634512}
!5654 = !DILocation(line: 238, column: 1, scope: !5198)
!5655 = !{i64 2147634619, i64 2147634662, i64 2147634702}
!5656 = !DILocation(line: 239, column: 1, scope: !5198)
!5657 = !{i64 2147634833, i64 2147634876, i64 2147634916}
!5658 = !DILocation(line: 240, column: 1, scope: !5198)
!5659 = !{i64 2147635095, i64 2147635138, i64 2147635178}
!5660 = !DILocation(line: 241, column: 1, scope: !5198)
!5661 = !{i64 2147635306, i64 2147635349, i64 2147635389}
!5662 = !DILocation(line: 242, column: 1, scope: !5198)
!5663 = !{i64 2147635550, i64 2147635593, i64 2147635633}
!5664 = !DILocation(line: 243, column: 1, scope: !5198)
!5665 = !{i64 2147635761, i64 2147635804, i64 2147635844}
!5666 = !DILocation(line: 244, column: 1, scope: !5198)
!5667 = !{i64 2147635990, i64 2147636033, i64 2147636073}
!5668 = !DILocation(line: 245, column: 1, scope: !5198)
!5669 = !{i64 2147636255, i64 2147636298, i64 2147636338}
!5670 = !DILocation(line: 246, column: 1, scope: !5198)
!5671 = !{i64 2147636460, i64 2147636503, i64 2147636543}
!5672 = !DILocation(line: 247, column: 1, scope: !5198)
!5673 = !{i64 2147636656, i64 2147636699, i64 2147636739}
!5674 = !DILocation(line: 248, column: 1, scope: !5198)
!5675 = !{i64 2147636879, i64 2147636922, i64 2147636962}
!5676 = !DILocation(line: 249, column: 1, scope: !5198)
!5677 = !{i64 2147637042, i64 2147637085, i64 2147637125}
!5678 = !DILocation(line: 250, column: 1, scope: !5198)
!5679 = !{i64 2147637247, i64 2147637290, i64 2147637330}
!5680 = !DILocation(line: 251, column: 1, scope: !5198)
!5681 = !{i64 2147637467, i64 2147637510, i64 2147637550}
!5682 = !DILocation(line: 252, column: 1, scope: !5198)
!5683 = !{i64 2147637681, i64 2147637724, i64 2147637764}
!5684 = !DILocation(line: 253, column: 1, scope: !5198)
!5685 = !{i64 2147637895, i64 2147637938, i64 2147637978}
!5686 = !DILocation(line: 254, column: 1, scope: !5198)
!5687 = !{i64 2147638106, i64 2147638149, i64 2147638189}
!5688 = !DILocation(line: 255, column: 1, scope: !5198)
!5689 = !{i64 2147642360, i64 2147642403, i64 2147642443}
!5690 = !DILocation(line: 256, column: 1, scope: !5198)
!5691 = !{i64 2147642559, i64 2147642602, i64 2147642642}
!5692 = !DILocation(line: 257, column: 1, scope: !5198)
!5693 = !{i64 2147642755, i64 2147642798, i64 2147642838}
!5694 = !DILocation(line: 258, column: 1, scope: !5198)
!5695 = !{i64 2147642954, i64 2147642997, i64 2147643037}
!5696 = !DILocation(line: 259, column: 1, scope: !5198)
!5697 = !{i64 2147643178, i64 2147643221, i64 2147643261}
!5698 = !DILocation(line: 260, column: 1, scope: !5198)
!5699 = !{i64 2147643402, i64 2147643445, i64 2147643485}
!5700 = !DILocation(line: 261, column: 1, scope: !5198)
!5701 = !{i64 2147643574, i64 2147643617, i64 2147643657}
!5702 = !DILocation(line: 262, column: 1, scope: !5198)
!5703 = !{i64 2147643767, i64 2147643810, i64 2147643850}
!5704 = !DILocation(line: 263, column: 1, scope: !5198)
!5705 = !{i64 2147643963, i64 2147644006, i64 2147644046}
!5706 = !DILocation(line: 264, column: 1, scope: !5198)
!5707 = !{i64 2147644190, i64 2147644233, i64 2147644273}
!5708 = !DILocation(line: 265, column: 1, scope: !5198)
!5709 = !{i64 2147644407, i64 2147644450, i64 2147644490}
!5710 = !DILocation(line: 266, column: 1, scope: !5198)
!5711 = !{i64 2147644699, i64 2147644742, i64 2147644782}
!5712 = !DILocation(line: 267, column: 1, scope: !5198)
!5713 = !{i64 2147644931, i64 2147644974, i64 2147645014}
!5714 = !DILocation(line: 268, column: 1, scope: !5198)
!5715 = !{i64 2147645148, i64 2147645191, i64 2147645231}
!5716 = !DILocation(line: 269, column: 1, scope: !5198)
!5717 = !{i64 2147645355, i64 2147645398, i64 2147645438}
!5718 = !DILocation(line: 270, column: 1, scope: !5198)
!5719 = !{i64 2147645556, i64 2147645599, i64 2147645639}
!5720 = !DILocation(line: 271, column: 1, scope: !5198)
!5721 = !{i64 2147645788, i64 2147645831, i64 2147645871}
!5722 = !DILocation(line: 272, column: 1, scope: !5198)
!5723 = !{i64 2147645996, i64 2147646039, i64 2147646079}
!5724 = !DILocation(line: 273, column: 1, scope: !5198)
!5725 = !{i64 2147646186, i64 2147646229, i64 2147646269}
!5726 = !DILocation(line: 274, column: 1, scope: !5198)
!5727 = !{i64 2147646412, i64 2147646455, i64 2147646495}
!5728 = !DILocation(line: 275, column: 1, scope: !5198)
!5729 = !{i64 2147646601, i64 2147646644, i64 2147646684}
!5730 = !DILocation(line: 276, column: 1, scope: !5198)
!5731 = !{i64 2147646872, i64 2147646915, i64 2147646955}
!5732 = !DILocation(line: 277, column: 1, scope: !5198)
!5733 = !{i64 2147647092, i64 2147647135, i64 2147647175}
!5734 = !DILocation(line: 278, column: 1, scope: !5198)
!5735 = !{i64 2147647345, i64 2147647388, i64 2147647428}
!5736 = !DILocation(line: 279, column: 1, scope: !5198)
!5737 = !{i64 2147647553, i64 2147647596, i64 2147647636}
!5738 = !DILocation(line: 280, column: 1, scope: !5198)
!5739 = !{i64 2147647785, i64 2147647828, i64 2147647868}
!5740 = !DILocation(line: 281, column: 1, scope: !5198)
!5741 = !{i64 2147647996, i64 2147648039, i64 2147648079}
!5742 = !DILocation(line: 282, column: 1, scope: !5198)
!5743 = !{i64 2147648186, i64 2147648229, i64 2147648269}
!5744 = !DILocation(line: 283, column: 1, scope: !5198)
!5745 = !{i64 2147648400, i64 2147648443, i64 2147648483}
!5746 = !DILocation(line: 284, column: 1, scope: !5198)
!5747 = !{i64 2147648599, i64 2147648642, i64 2147648682}
!5748 = !DILocation(line: 285, column: 1, scope: !5198)
!5749 = !{i64 2147648786, i64 2147648829, i64 2147648869}
!5750 = !DILocation(line: 286, column: 1, scope: !5198)
!5751 = !{i64 2147648994, i64 2147649037, i64 2147649077}
!5752 = !DILocation(line: 287, column: 1, scope: !5198)
!5753 = !{i64 2147649223, i64 2147649266, i64 2147649306}
!5754 = !DILocation(line: 288, column: 1, scope: !5198)
!5755 = !{i64 2147649425, i64 2147649468, i64 2147649508}
!5756 = !DILocation(line: 289, column: 1, scope: !5198)
!5757 = !{i64 2147649624, i64 2147649667, i64 2147649707}
!5758 = !DILocation(line: 290, column: 1, scope: !5198)
!5759 = !{i64 2147649841, i64 2147649884, i64 2147649924}
!5760 = !DILocation(line: 292, column: 1, scope: !5198)
!5761 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5762)
!5762 = !{!5763, !5764}
!5763 = !DILocalVariable(name: "arg", arg: 1, scope: !5761, file: !129, line: 30, type: !138)
!5764 = !DILocalVariable(name: "key", scope: !5761, file: !129, line: 32, type: !121)
!5765 = !DILocation(line: 0, scope: !5761)
!5766 = !DILocation(line: 37, column: 2, scope: !5761)
!5767 = !DILocation(line: 38, column: 2, scope: !5761)
!5768 = !DILocation(line: 55, column: 2, scope: !5769, inlinedAt: !5776)
!5769 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5770, file: !5770, line: 42, type: !5771, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5773)
!5770 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5771 = !DISubroutineType(types: !5772)
!5772 = !{!32}
!5773 = !{!5774, !5775}
!5774 = !DILocalVariable(name: "key", scope: !5769, file: !5770, line: 44, type: !32)
!5775 = !DILocalVariable(name: "tmp", scope: !5769, file: !5770, line: 53, type: !32)
!5776 = distinct !DILocation(line: 40, column: 8, scope: !5761)
!5777 = !{i64 1826937}
!5778 = !DILocation(line: 0, scope: !5769, inlinedAt: !5776)
!5779 = !DILocalVariable(name: "key", arg: 1, scope: !5780, file: !5770, line: 84, type: !32)
!5780 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5770, file: !5770, line: 84, type: !5781, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5783)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{null, !32}
!5783 = !{!5779}
!5784 = !DILocation(line: 0, scope: !5780, inlinedAt: !5785)
!5785 = distinct !DILocation(line: 47, column: 2, scope: !5761)
!5786 = !DILocation(line: 95, column: 2, scope: !5780, inlinedAt: !5785)
!5787 = !{i64 1827754}
!5788 = !DILocation(line: 51, column: 18, scope: !5761)
!5789 = !DILocation(line: 53, column: 2, scope: !5761)
!5790 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5791, file: !5791, line: 1609, type: !3220, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !461)
!5791 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5792 = !DILocation(line: 1611, column: 3, scope: !5790)
!5793 = !DILocation(line: 1612, column: 1, scope: !5790)
!5794 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5791, file: !5791, line: 1629, type: !3220, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !461)
!5795 = !DILocation(line: 1631, column: 3, scope: !5794)
!5796 = !DILocation(line: 1632, column: 1, scope: !5794)
!5797 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5798)
!5798 = !{!5799}
!5799 = !DILocalVariable(name: "dev", arg: 1, scope: !5797, file: !171, line: 26, type: !179)
!5800 = !DILocation(line: 0, scope: !5797)
!5801 = !DILocation(line: 68, column: 2, scope: !5797)
!5802 = distinct !DISubprogram(name: "tty_write", scope: !5803, file: !5803, line: 100, type: !5804, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !5847)
!5803 = !DIFile(filename: "zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5804 = !DISubroutineType(types: !5805)
!5805 = !{!5806, !5808, !13, !344}
!5806 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5807, line: 28, baseType: !103)
!5807 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5809, size: 32)
!5809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !295, line: 18, size: 544, elements: !5810)
!5810 = !{!5811, !5812, !5836, !5837, !5838, !5839, !5840, !5841, !5842, !5843, !5844, !5845, !5846}
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !5809, file: !295, line: 19, baseType: !2610, size: 32)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !5809, file: !295, line: 21, baseType: !5813, size: 128, offset: 32)
!5813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !5814)
!5814 = !{!5815, !5834, !5835}
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5813, file: !300, line: 2910, baseType: !5816, size: 64)
!5816 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !5817)
!5817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !5818)
!5818 = !{!5819}
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5817, file: !304, line: 232, baseType: !5820, size: 64)
!5820 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !5821)
!5821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !5822)
!5822 = !{!5823, !5829}
!5823 = !DIDerivedType(tag: DW_TAG_member, scope: !5821, file: !309, line: 38, baseType: !5824, size: 32)
!5824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5821, file: !309, line: 38, size: 32, elements: !5825)
!5825 = !{!5826, !5828}
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5824, file: !309, line: 39, baseType: !5827, size: 32)
!5827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5821, size: 32)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5824, file: !309, line: 40, baseType: !5827, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, scope: !5821, file: !309, line: 42, baseType: !5830, size: 32, offset: 32)
!5830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5821, file: !309, line: 42, size: 32, elements: !5831)
!5831 = !{!5832, !5833}
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5830, file: !309, line: 43, baseType: !5827, size: 32)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5830, file: !309, line: 44, baseType: !5827, size: 32)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5813, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5813, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !5809, file: !295, line: 22, baseType: !261, size: 32, offset: 160)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !5809, file: !295, line: 23, baseType: !121, size: 32, offset: 192)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !5809, file: !295, line: 24, baseType: !328, size: 16, offset: 224)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !5809, file: !295, line: 24, baseType: !328, size: 16, offset: 240)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !5809, file: !295, line: 25, baseType: !332, size: 32, offset: 256)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !5809, file: !295, line: 27, baseType: !5813, size: 128, offset: 288)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !5809, file: !295, line: 28, baseType: !261, size: 32, offset: 416)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !5809, file: !295, line: 29, baseType: !121, size: 32, offset: 448)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !5809, file: !295, line: 30, baseType: !328, size: 16, offset: 480)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !5809, file: !295, line: 30, baseType: !328, size: 16, offset: 496)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !5809, file: !295, line: 31, baseType: !332, size: 32, offset: 512)
!5847 = !{!5848, !5849, !5850, !5851, !5852, !5853}
!5848 = !DILocalVariable(name: "tty", arg: 1, scope: !5802, file: !5803, line: 100, type: !5808)
!5849 = !DILocalVariable(name: "buf", arg: 2, scope: !5802, file: !5803, line: 100, type: !13)
!5850 = !DILocalVariable(name: "size", arg: 3, scope: !5802, file: !5803, line: 100, type: !344)
!5851 = !DILocalVariable(name: "p", scope: !5802, file: !5803, line: 102, type: !255)
!5852 = !DILocalVariable(name: "out_size", scope: !5802, file: !5803, line: 103, type: !344)
!5853 = !DILocalVariable(name: "res", scope: !5802, file: !5803, line: 104, type: !103)
!5854 = !DILocation(line: 0, scope: !5802)
!5855 = !DILocation(line: 106, column: 11, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5802, file: !5803, line: 106, column: 6)
!5857 = !DILocation(line: 106, column: 25, scope: !5856)
!5858 = !DILocation(line: 106, column: 6, scope: !5802)
!5859 = !DILocation(line: 117, column: 2, scope: !5802)
!5860 = !DILocation(line: 110, column: 3, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5856, file: !5803, line: 106, column: 32)
!5862 = !DILocation(line: 110, column: 14, scope: !5861)
!5863 = !DILocation(line: 111, column: 23, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5861, file: !5803, line: 110, column: 18)
!5865 = !DILocation(line: 111, column: 35, scope: !5864)
!5866 = !DILocation(line: 111, column: 33, scope: !5864)
!5867 = !DILocation(line: 111, column: 4, scope: !5864)
!5868 = distinct !{!5868, !5860, !5869}
!5869 = !DILocation(line: 112, column: 3, scope: !5861)
!5870 = !DILocation(line: 117, column: 13, scope: !5802)
!5871 = !DILocation(line: 118, column: 26, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5802, file: !5803, line: 117, column: 17)
!5873 = !DILocation(line: 118, column: 9, scope: !5872)
!5874 = !DILocation(line: 119, column: 11, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5872, file: !5803, line: 119, column: 7)
!5876 = !DILocation(line: 119, column: 7, scope: !5872)
!5877 = !DILocation(line: 121, column: 17, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5879, file: !5803, line: 121, column: 8)
!5879 = distinct !DILexicalBlock(scope: !5875, file: !5803, line: 119, column: 16)
!5880 = !DILocation(line: 121, column: 8, scope: !5879)
!5881 = !DILocation(line: 122, column: 13, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5878, file: !5803, line: 121, column: 23)
!5883 = !DILocation(line: 122, column: 5, scope: !5882)
!5884 = !DILocation(line: 122, column: 11, scope: !5882)
!5885 = !DILocation(line: 123, column: 5, scope: !5882)
!5886 = !DILocation(line: 118, column: 28, scope: !5872)
!5887 = !DILocation(line: 135, column: 11, scope: !5872)
!5888 = distinct !{!5888, !5859, !5889}
!5889 = !DILocation(line: 136, column: 2, scope: !5802)
!5890 = !DILocation(line: 139, column: 1, scope: !5802)
!5891 = distinct !DISubprogram(name: "uart_poll_out", scope: !5892, file: !5892, line: 95, type: !2627, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !5893)
!5892 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!5893 = !{!5894, !5895}
!5894 = !DILocalVariable(name: "dev", arg: 1, scope: !5891, file: !5892, line: 95, type: !2610)
!5895 = !DILocalVariable(name: "out_char", arg: 2, scope: !5891, file: !5892, line: 95, type: !155)
!5896 = !DILocation(line: 0, scope: !5891)
!5897 = !DILocation(line: 105, column: 2, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5891, file: !5892, line: 105, column: 2)
!5899 = !{i64 2154325370}
!5900 = !DILocation(line: 106, column: 2, scope: !5891)
!5901 = !DILocation(line: 107, column: 1, scope: !5891)
!5902 = distinct !DISubprogram(name: "tty_putchar", scope: !5803, file: !5803, line: 69, type: !5903, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !5905)
!5903 = !DISubroutineType(types: !5904)
!5904 = !{!103, !5808, !154}
!5905 = !{!5906, !5907, !5908, !5909, !5910}
!5906 = !DILocalVariable(name: "tty", arg: 1, scope: !5902, file: !5803, line: 69, type: !5808)
!5907 = !DILocalVariable(name: "c", arg: 2, scope: !5902, file: !5803, line: 69, type: !154)
!5908 = !DILocalVariable(name: "key", scope: !5902, file: !5803, line: 71, type: !32)
!5909 = !DILocalVariable(name: "tx_next", scope: !5902, file: !5803, line: 72, type: !103)
!5910 = !DILocalVariable(name: "res", scope: !5902, file: !5803, line: 73, type: !103)
!5911 = !DILocation(line: 0, scope: !5902)
!5912 = !DILocation(line: 75, column: 25, scope: !5902)
!5913 = !DILocation(line: 76, column: 5, scope: !5902)
!5914 = !DILocation(line: 77, column: 7, scope: !5902)
!5915 = !DILocation(line: 75, column: 8, scope: !5902)
!5916 = !DILocation(line: 78, column: 10, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5902, file: !5803, line: 78, column: 6)
!5918 = !DILocation(line: 78, column: 6, scope: !5902)
!5919 = !DILocation(line: 55, column: 2, scope: !5920, inlinedAt: !5924)
!5920 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5770, file: !5770, line: 42, type: !5771, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !5921)
!5921 = !{!5922, !5923}
!5922 = !DILocalVariable(name: "key", scope: !5920, file: !5770, line: 44, type: !32)
!5923 = !DILocalVariable(name: "tmp", scope: !5920, file: !5770, line: 53, type: !32)
!5924 = distinct !DILocation(line: 82, column: 8, scope: !5902)
!5925 = !{i64 1950763}
!5926 = !DILocation(line: 0, scope: !5920, inlinedAt: !5924)
!5927 = !DILocation(line: 83, column: 17, scope: !5902)
!5928 = !DILocation(line: 83, column: 12, scope: !5902)
!5929 = !DILocation(line: 83, column: 24, scope: !5902)
!5930 = !DILocation(line: 84, column: 22, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5902, file: !5803, line: 84, column: 6)
!5932 = !DILocation(line: 84, column: 14, scope: !5931)
!5933 = !DILocation(line: 84, column: 6, scope: !5902)
!5934 = !DILocation(line: 87, column: 22, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5902, file: !5803, line: 87, column: 6)
!5936 = !DILocation(line: 87, column: 17, scope: !5935)
!5937 = !DILocation(line: 87, column: 14, scope: !5935)
!5938 = !DILocation(line: 87, column: 6, scope: !5902)
!5939 = !DILocalVariable(name: "key", arg: 1, scope: !5940, file: !5770, line: 84, type: !32)
!5940 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5770, file: !5770, line: 84, type: !5781, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !5941)
!5941 = !{!5939}
!5942 = !DILocation(line: 0, scope: !5940, inlinedAt: !5943)
!5943 = distinct !DILocation(line: 88, column: 3, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5935, file: !5803, line: 87, column: 30)
!5945 = !DILocation(line: 95, column: 2, scope: !5940, inlinedAt: !5943)
!5946 = !{i64 1951580}
!5947 = !DILocation(line: 89, column: 3, scope: !5944)
!5948 = !DILocation(line: 92, column: 7, scope: !5902)
!5949 = !DILocation(line: 92, column: 2, scope: !5902)
!5950 = !DILocation(line: 92, column: 31, scope: !5902)
!5951 = !DILocation(line: 93, column: 16, scope: !5902)
!5952 = !DILocation(line: 93, column: 14, scope: !5902)
!5953 = !DILocation(line: 0, scope: !5940, inlinedAt: !5954)
!5954 = distinct !DILocation(line: 95, column: 2, scope: !5902)
!5955 = !DILocation(line: 95, column: 2, scope: !5940, inlinedAt: !5954)
!5956 = !DILocation(line: 96, column: 26, scope: !5902)
!5957 = !DILocation(line: 96, column: 2, scope: !5902)
!5958 = !DILocation(line: 97, column: 2, scope: !5902)
!5959 = !DILocation(line: 98, column: 1, scope: !5902)
!5960 = distinct !DISubprogram(name: "z_errno", scope: !5961, file: !5961, line: 24, type: !5962, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !461)
!5961 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!5962 = !DISubroutineType(types: !5963)
!5963 = !{!2588}
!5964 = !DILocation(line: 31, column: 2, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5960, file: !5961, line: 31, column: 2)
!5966 = !{i64 2153590051}
!5967 = !DILocation(line: 32, column: 9, scope: !5960)
!5968 = !DILocation(line: 32, column: 2, scope: !5960)
!5969 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5970, file: !5970, line: 403, type: !5971, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !5973)
!5970 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5971 = !DISubroutineType(types: !5972)
!5972 = !{!1573, !1573}
!5973 = !{!5974}
!5974 = !DILocalVariable(name: "t", arg: 1, scope: !5969, file: !5970, line: 403, type: !1573)
!5975 = !DILocation(line: 0, scope: !5969)
!5976 = !DILocalVariable(name: "t", arg: 1, scope: !5977, file: !5970, line: 102, type: !1573)
!5977 = distinct !DISubprogram(name: "z_tmcvt", scope: !5970, file: !5970, line: 102, type: !5978, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !5980)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!1573, !1573, !121, !121, !157, !157, !157, !157}
!5980 = !{!5976, !5981, !5982, !5983, !5984, !5985, !5986, !5987, !5988, !5989, !5990}
!5981 = !DILocalVariable(name: "from_hz", arg: 2, scope: !5977, file: !5970, line: 102, type: !121)
!5982 = !DILocalVariable(name: "to_hz", arg: 3, scope: !5977, file: !5970, line: 103, type: !121)
!5983 = !DILocalVariable(name: "const_hz", arg: 4, scope: !5977, file: !5970, line: 103, type: !157)
!5984 = !DILocalVariable(name: "result32", arg: 5, scope: !5977, file: !5970, line: 104, type: !157)
!5985 = !DILocalVariable(name: "round_up", arg: 6, scope: !5977, file: !5970, line: 104, type: !157)
!5986 = !DILocalVariable(name: "round_off", arg: 7, scope: !5977, file: !5970, line: 105, type: !157)
!5987 = !DILocalVariable(name: "mul_ratio", scope: !5977, file: !5970, line: 107, type: !157)
!5988 = !DILocalVariable(name: "div_ratio", scope: !5977, file: !5970, line: 109, type: !157)
!5989 = !DILocalVariable(name: "off", scope: !5977, file: !5970, line: 116, type: !1573)
!5990 = !DILocalVariable(name: "rdivisor", scope: !5991, file: !5970, line: 119, type: !121)
!5991 = distinct !DILexicalBlock(scope: !5992, file: !5970, line: 118, column: 18)
!5992 = distinct !DILexicalBlock(scope: !5977, file: !5970, line: 118, column: 6)
!5993 = !DILocation(line: 0, scope: !5977, inlinedAt: !5994)
!5994 = distinct !DILocation(line: 406, column: 9, scope: !5969)
!5995 = !DILocation(line: 145, column: 13, scope: !5996, inlinedAt: !5994)
!5996 = distinct !DILexicalBlock(scope: !5997, file: !5970, line: 144, column: 10)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !5970, line: 142, column: 7)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !5970, line: 141, column: 24)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !5970, line: 141, column: 13)
!6000 = distinct !DILexicalBlock(scope: !5977, file: !5970, line: 134, column: 6)
!6001 = !DILocation(line: 406, column: 2, scope: !5969)
!6002 = distinct !DISubprogram(name: "k_sem_take", scope: !3653, file: !3653, line: 1044, type: !6003, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6010)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!103, !6005, !6006}
!6005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5813, size: 32)
!6006 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1677, line: 67, baseType: !6007)
!6007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1677, line: 65, size: 64, elements: !6008)
!6008 = !{!6009}
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6007, file: !1677, line: 66, baseType: !1676, size: 64)
!6010 = !{!6011, !6012}
!6011 = !DILocalVariable(name: "sem", arg: 1, scope: !6002, file: !3653, line: 1044, type: !6005)
!6012 = !DILocalVariable(name: "timeout", arg: 2, scope: !6002, file: !3653, line: 1044, type: !6006)
!6013 = !DILocation(line: 0, scope: !6002)
!6014 = !DILocation(line: 1053, column: 2, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6002, file: !3653, line: 1053, column: 2)
!6016 = !{i64 2154069239}
!6017 = !DILocation(line: 1054, column: 9, scope: !6002)
!6018 = !DILocation(line: 1054, column: 2, scope: !6002)
!6019 = distinct !DISubprogram(name: "uart_irq_tx_enable", scope: !5892, file: !5892, line: 193, type: !2661, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6020)
!6020 = !{!6021}
!6021 = !DILocalVariable(name: "dev", arg: 1, scope: !6019, file: !5892, line: 193, type: !2610)
!6022 = !DILocation(line: 0, scope: !6019)
!6023 = !DILocation(line: 202, column: 2, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6019, file: !5892, line: 202, column: 2)
!6025 = !{i64 2154325642}
!6026 = !DILocation(line: 203, column: 2, scope: !6019)
!6027 = !DILocation(line: 204, column: 1, scope: !6019)
!6028 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_enable", scope: !203, file: !203, line: 857, type: !2661, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6029)
!6029 = !{!6030, !6031}
!6030 = !DILocalVariable(name: "dev", arg: 1, scope: !6028, file: !203, line: 857, type: !2610)
!6031 = !DILocalVariable(name: "api", scope: !6028, file: !203, line: 860, type: !2602)
!6032 = !DILocation(line: 0, scope: !6028)
!6033 = !DILocation(line: 861, column: 40, scope: !6028)
!6034 = !DILocation(line: 863, column: 11, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6028, file: !203, line: 863, column: 6)
!6036 = !DILocation(line: 863, column: 25, scope: !6035)
!6037 = !DILocation(line: 863, column: 6, scope: !6028)
!6038 = !DILocation(line: 864, column: 3, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6035, file: !203, line: 863, column: 34)
!6040 = !DILocation(line: 865, column: 2, scope: !6039)
!6041 = !DILocation(line: 869, column: 1, scope: !6028)
!6042 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !203, file: !203, line: 574, type: !2627, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6043)
!6043 = !{!6044, !6045, !6046}
!6044 = !DILocalVariable(name: "dev", arg: 1, scope: !6042, file: !203, line: 574, type: !2610)
!6045 = !DILocalVariable(name: "out_char", arg: 2, scope: !6042, file: !203, line: 575, type: !155)
!6046 = !DILocalVariable(name: "api", scope: !6042, file: !203, line: 577, type: !2602)
!6047 = !DILocation(line: 0, scope: !6042)
!6048 = !DILocation(line: 578, column: 40, scope: !6042)
!6049 = !DILocation(line: 580, column: 7, scope: !6042)
!6050 = !DILocation(line: 580, column: 2, scope: !6042)
!6051 = !DILocation(line: 581, column: 1, scope: !6042)
!6052 = distinct !DISubprogram(name: "tty_read", scope: !5803, file: !5803, line: 206, type: !6053, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6055)
!6053 = !DISubroutineType(types: !6054)
!6054 = !{!5806, !5808, !102, !344}
!6055 = !{!6056, !6057, !6058, !6059, !6060, !6061}
!6056 = !DILocalVariable(name: "tty", arg: 1, scope: !6052, file: !5803, line: 206, type: !5808)
!6057 = !DILocalVariable(name: "buf", arg: 2, scope: !6052, file: !5803, line: 206, type: !102)
!6058 = !DILocalVariable(name: "size", arg: 3, scope: !6052, file: !5803, line: 206, type: !344)
!6059 = !DILocalVariable(name: "p", scope: !6052, file: !5803, line: 208, type: !261)
!6060 = !DILocalVariable(name: "out_size", scope: !6052, file: !5803, line: 209, type: !344)
!6061 = !DILocalVariable(name: "res", scope: !6052, file: !5803, line: 210, type: !103)
!6062 = !DILocation(line: 0, scope: !6052)
!6063 = !DILocation(line: 212, column: 11, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6052, file: !5803, line: 212, column: 6)
!6065 = !DILocation(line: 212, column: 25, scope: !6064)
!6066 = !DILocation(line: 212, column: 6, scope: !6052)
!6067 = !DILocation(line: 216, column: 2, scope: !6052)
!6068 = !DILocation(line: 213, column: 10, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6064, file: !5803, line: 212, column: 32)
!6070 = !DILocation(line: 213, column: 3, scope: !6069)
!6071 = !DILocation(line: 216, column: 13, scope: !6052)
!6072 = !DILocation(line: 217, column: 9, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6052, file: !5803, line: 216, column: 17)
!6074 = !DILocation(line: 218, column: 11, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6073, file: !5803, line: 218, column: 7)
!6076 = !DILocation(line: 218, column: 7, scope: !6073)
!6077 = !DILocation(line: 220, column: 17, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !5803, line: 220, column: 8)
!6079 = distinct !DILexicalBlock(scope: !6075, file: !5803, line: 218, column: 16)
!6080 = !DILocation(line: 220, column: 8, scope: !6079)
!6081 = !DILocation(line: 221, column: 13, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6078, file: !5803, line: 220, column: 23)
!6083 = !DILocation(line: 221, column: 5, scope: !6082)
!6084 = !DILocation(line: 221, column: 11, scope: !6082)
!6085 = !DILocation(line: 222, column: 5, scope: !6082)
!6086 = !DILocation(line: 234, column: 10, scope: !6073)
!6087 = !DILocation(line: 234, column: 5, scope: !6073)
!6088 = !DILocation(line: 234, column: 8, scope: !6073)
!6089 = !DILocation(line: 235, column: 11, scope: !6073)
!6090 = distinct !{!6090, !6067, !6091}
!6091 = !DILocation(line: 236, column: 2, scope: !6052)
!6092 = !DILocation(line: 239, column: 1, scope: !6052)
!6093 = distinct !DISubprogram(name: "tty_read_unbuf", scope: !5803, file: !5803, line: 162, type: !6053, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6094)
!6094 = !{!6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102}
!6095 = !DILocalVariable(name: "tty", arg: 1, scope: !6093, file: !5803, line: 162, type: !5808)
!6096 = !DILocalVariable(name: "buf", arg: 2, scope: !6093, file: !5803, line: 162, type: !102)
!6097 = !DILocalVariable(name: "size", arg: 3, scope: !6093, file: !5803, line: 162, type: !344)
!6098 = !DILocalVariable(name: "p", scope: !6093, file: !5803, line: 164, type: !261)
!6099 = !DILocalVariable(name: "out_size", scope: !6093, file: !5803, line: 165, type: !344)
!6100 = !DILocalVariable(name: "res", scope: !6093, file: !5803, line: 166, type: !103)
!6101 = !DILocalVariable(name: "timeout", scope: !6093, file: !5803, line: 167, type: !121)
!6102 = !DILocalVariable(name: "c", scope: !6103, file: !5803, line: 170, type: !154)
!6103 = distinct !DILexicalBlock(scope: !6093, file: !5803, line: 169, column: 15)
!6104 = !DILocation(line: 0, scope: !6093)
!6105 = !DILocation(line: 169, column: 2, scope: !6093)
!6106 = !DILocation(line: 167, column: 26, scope: !6093)
!6107 = !DILocation(line: 170, column: 3, scope: !6103)
!6108 = !DILocation(line: 171, column: 27, scope: !6103)
!6109 = !DILocation(line: 0, scope: !6103)
!6110 = !DILocation(line: 171, column: 9, scope: !6103)
!6111 = !DILocation(line: 172, column: 11, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6103, file: !5803, line: 172, column: 7)
!6113 = !DILocation(line: 172, column: 7, scope: !6103)
!6114 = !DILocation(line: 177, column: 17, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !5803, line: 177, column: 8)
!6116 = distinct !DILexicalBlock(scope: !6112, file: !5803, line: 172, column: 18)
!6117 = !DILocation(line: 177, column: 8, scope: !6116)
!6118 = !DILocation(line: 178, column: 5, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6115, file: !5803, line: 177, column: 23)
!6120 = !DILocation(line: 178, column: 11, scope: !6119)
!6121 = !DILocation(line: 201, column: 2, scope: !6093)
!6122 = !DILocation(line: 184, column: 11, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6103, file: !5803, line: 184, column: 7)
!6124 = !DILocation(line: 184, column: 7, scope: !6103)
!6125 = !DILocation(line: 185, column: 11, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6123, file: !5803, line: 184, column: 17)
!6127 = !DILocation(line: 185, column: 6, scope: !6126)
!6128 = !DILocation(line: 185, column: 9, scope: !6126)
!6129 = !DILocation(line: 186, column: 12, scope: !6126)
!6130 = !DILocation(line: 187, column: 8, scope: !6126)
!6131 = !DILocation(line: 190, column: 12, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6103, file: !5803, line: 190, column: 7)
!6133 = !DILocation(line: 190, column: 17, scope: !6132)
!6134 = !DILocation(line: 191, column: 17, scope: !6132)
!6135 = !DILocation(line: 191, column: 36, scope: !6132)
!6136 = !DILocation(line: 191, column: 46, scope: !6132)
!6137 = !DILocation(line: 191, column: 49, scope: !6132)
!6138 = !DILocation(line: 190, column: 7, scope: !6103)
!6139 = !DILocation(line: 198, column: 11, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6103, file: !5803, line: 198, column: 7)
!6141 = !DILocation(line: 198, column: 7, scope: !6103)
!6142 = !DILocation(line: 199, column: 12, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6140, file: !5803, line: 198, column: 18)
!6144 = !DILocation(line: 199, column: 4, scope: !6143)
!6145 = !DILocation(line: 200, column: 3, scope: !6143)
!6146 = !DILocation(line: 204, column: 1, scope: !6093)
!6147 = distinct !DISubprogram(name: "tty_getchar", scope: !5803, file: !5803, line: 141, type: !6148, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6150)
!6148 = !DISubroutineType(types: !6149)
!6149 = !{!103, !5808}
!6150 = !{!6151, !6152, !6153, !6154}
!6151 = !DILocalVariable(name: "tty", arg: 1, scope: !6147, file: !5803, line: 141, type: !5808)
!6152 = !DILocalVariable(name: "key", scope: !6147, file: !5803, line: 143, type: !32)
!6153 = !DILocalVariable(name: "c", scope: !6147, file: !5803, line: 144, type: !154)
!6154 = !DILocalVariable(name: "res", scope: !6147, file: !5803, line: 145, type: !103)
!6155 = !DILocation(line: 0, scope: !6147)
!6156 = !DILocation(line: 147, column: 25, scope: !6147)
!6157 = !DILocation(line: 147, column: 33, scope: !6147)
!6158 = !DILocation(line: 147, column: 8, scope: !6147)
!6159 = !DILocation(line: 148, column: 10, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6147, file: !5803, line: 148, column: 6)
!6161 = !DILocation(line: 148, column: 6, scope: !6147)
!6162 = !DILocation(line: 55, column: 2, scope: !5920, inlinedAt: !6163)
!6163 = distinct !DILocation(line: 152, column: 8, scope: !6147)
!6164 = !DILocation(line: 0, scope: !5920, inlinedAt: !6163)
!6165 = !DILocation(line: 153, column: 11, scope: !6147)
!6166 = !DILocation(line: 153, column: 27, scope: !6147)
!6167 = !DILocation(line: 153, column: 33, scope: !6147)
!6168 = !DILocation(line: 153, column: 6, scope: !6147)
!6169 = !DILocation(line: 154, column: 6, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6147, file: !5803, line: 154, column: 6)
!6171 = !DILocation(line: 154, column: 26, scope: !6170)
!6172 = !DILocation(line: 154, column: 18, scope: !6170)
!6173 = !DILocation(line: 154, column: 6, scope: !6147)
!6174 = !DILocation(line: 0, scope: !5940, inlinedAt: !6175)
!6175 = distinct !DILocation(line: 157, column: 2, scope: !6147)
!6176 = !DILocation(line: 95, column: 2, scope: !5940, inlinedAt: !6175)
!6177 = !DILocation(line: 159, column: 9, scope: !6147)
!6178 = !DILocation(line: 159, column: 2, scope: !6147)
!6179 = !DILocation(line: 160, column: 1, scope: !6147)
!6180 = distinct !DISubprogram(name: "uart_poll_in", scope: !5892, file: !5892, line: 47, type: !2608, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6181)
!6181 = !{!6182, !6183}
!6182 = !DILocalVariable(name: "dev", arg: 1, scope: !6180, file: !5892, line: 47, type: !2610)
!6183 = !DILocalVariable(name: "p_char", arg: 2, scope: !6180, file: !5892, line: 47, type: !224)
!6184 = !DILocation(line: 0, scope: !6180)
!6185 = !DILocation(line: 56, column: 2, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6180, file: !5892, line: 56, column: 2)
!6187 = !{i64 2154325234}
!6188 = !DILocation(line: 57, column: 9, scope: !6180)
!6189 = !DILocation(line: 57, column: 2, scope: !6180)
!6190 = distinct !DISubprogram(name: "k_sleep", scope: !3653, file: !3653, line: 91, type: !6191, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6193)
!6191 = !DISubroutineType(types: !6192)
!6192 = !{!332, !6006}
!6193 = !{!6194}
!6194 = !DILocalVariable(name: "timeout", arg: 1, scope: !6190, file: !3653, line: 91, type: !6006)
!6195 = !DILocation(line: 0, scope: !6190)
!6196 = !DILocation(line: 99, column: 2, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6190, file: !3653, line: 99, column: 2)
!6198 = !{i64 2154065395}
!6199 = !DILocation(line: 100, column: 9, scope: !6190)
!6200 = !DILocation(line: 100, column: 2, scope: !6190)
!6201 = distinct !DISubprogram(name: "z_impl_uart_poll_in", scope: !203, file: !203, line: 504, type: !2608, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6202)
!6202 = !{!6203, !6204, !6205}
!6203 = !DILocalVariable(name: "dev", arg: 1, scope: !6201, file: !203, line: 504, type: !2610)
!6204 = !DILocalVariable(name: "p_char", arg: 2, scope: !6201, file: !203, line: 505, type: !224)
!6205 = !DILocalVariable(name: "api", scope: !6201, file: !203, line: 507, type: !2602)
!6206 = !DILocation(line: 0, scope: !6201)
!6207 = !DILocation(line: 508, column: 40, scope: !6201)
!6208 = !DILocation(line: 510, column: 11, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6201, file: !203, line: 510, column: 6)
!6210 = !DILocation(line: 510, column: 19, scope: !6209)
!6211 = !DILocation(line: 510, column: 6, scope: !6201)
!6212 = !DILocation(line: 514, column: 9, scope: !6201)
!6213 = !DILocation(line: 514, column: 2, scope: !6201)
!6214 = !DILocation(line: 515, column: 1, scope: !6201)
!6215 = distinct !DISubprogram(name: "tty_init", scope: !5803, file: !5803, line: 241, type: !6216, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6218)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{!103, !5808, !2610}
!6218 = !{!6219, !6220}
!6219 = !DILocalVariable(name: "tty", arg: 1, scope: !6215, file: !5803, line: 241, type: !5808)
!6220 = !DILocalVariable(name: "uart_dev", arg: 2, scope: !6215, file: !5803, line: 241, type: !2610)
!6221 = !DILocation(line: 0, scope: !6215)
!6222 = !DILocation(line: 243, column: 7, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6215, file: !5803, line: 243, column: 6)
!6224 = !DILocation(line: 243, column: 6, scope: !6215)
!6225 = !DILocation(line: 247, column: 7, scope: !6215)
!6226 = !DILocation(line: 247, column: 16, scope: !6215)
!6227 = !DILocation(line: 250, column: 7, scope: !6215)
!6228 = !DILocation(line: 250, column: 18, scope: !6215)
!6229 = !DILocation(line: 251, column: 7, scope: !6215)
!6230 = !DILocation(line: 251, column: 21, scope: !6215)
!6231 = !DILocation(line: 252, column: 7, scope: !6215)
!6232 = !DILocation(line: 252, column: 18, scope: !6215)
!6233 = !DILocation(line: 253, column: 7, scope: !6215)
!6234 = !DILocation(line: 253, column: 21, scope: !6215)
!6235 = !DILocation(line: 255, column: 49, scope: !6215)
!6236 = !DILocation(line: 255, column: 56, scope: !6215)
!6237 = !DILocation(line: 255, column: 35, scope: !6215)
!6238 = !DILocation(line: 255, column: 42, scope: !6215)
!6239 = !DILocation(line: 255, column: 21, scope: !6215)
!6240 = !DILocation(line: 255, column: 28, scope: !6215)
!6241 = !DILocation(line: 255, column: 7, scope: !6215)
!6242 = !DILocation(line: 255, column: 14, scope: !6215)
!6243 = !DILocation(line: 257, column: 7, scope: !6215)
!6244 = !DILocation(line: 257, column: 18, scope: !6215)
!6245 = !DILocation(line: 258, column: 7, scope: !6215)
!6246 = !DILocation(line: 258, column: 18, scope: !6215)
!6247 = !DILocation(line: 260, column: 58, scope: !6215)
!6248 = !DILocation(line: 260, column: 2, scope: !6215)
!6249 = !DILocation(line: 262, column: 2, scope: !6215)
!6250 = !DILocation(line: 263, column: 1, scope: !6215)
!6251 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !203, file: !203, line: 1163, type: !2675, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6252)
!6252 = !{!6253, !6254, !6255, !6256}
!6253 = !DILocalVariable(name: "dev", arg: 1, scope: !6251, file: !203, line: 1163, type: !2610)
!6254 = !DILocalVariable(name: "cb", arg: 2, scope: !6251, file: !203, line: 1164, type: !2677)
!6255 = !DILocalVariable(name: "user_data", arg: 3, scope: !6251, file: !203, line: 1165, type: !102)
!6256 = !DILocalVariable(name: "api", scope: !6251, file: !203, line: 1168, type: !2602)
!6257 = !DILocation(line: 0, scope: !6251)
!6258 = !DILocation(line: 1169, column: 40, scope: !6251)
!6259 = !DILocation(line: 1171, column: 11, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6251, file: !203, line: 1171, column: 6)
!6261 = !DILocation(line: 1171, column: 20, scope: !6260)
!6262 = !DILocation(line: 1171, column: 29, scope: !6260)
!6263 = !DILocation(line: 1171, column: 46, scope: !6260)
!6264 = !DILocation(line: 1171, column: 6, scope: !6251)
!6265 = !DILocation(line: 1172, column: 3, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6260, file: !203, line: 1171, column: 56)
!6267 = !DILocation(line: 1173, column: 2, scope: !6266)
!6268 = !DILocation(line: 1179, column: 1, scope: !6251)
!6269 = distinct !DISubprogram(name: "tty_uart_isr", scope: !5803, file: !5803, line: 15, type: !2679, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6270)
!6270 = !{!6271, !6272, !6273, !6274}
!6271 = !DILocalVariable(name: "dev", arg: 1, scope: !6269, file: !5803, line: 15, type: !2610)
!6272 = !DILocalVariable(name: "user_data", arg: 2, scope: !6269, file: !5803, line: 15, type: !102)
!6273 = !DILocalVariable(name: "tty", scope: !6269, file: !5803, line: 17, type: !5808)
!6274 = !DILocalVariable(name: "c", scope: !6275, file: !5803, line: 22, type: !154)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !5803, line: 21, column: 30)
!6276 = distinct !DILexicalBlock(scope: !6269, file: !5803, line: 21, column: 6)
!6277 = !DILocation(line: 0, scope: !6269)
!6278 = !DILocation(line: 17, column: 27, scope: !6269)
!6279 = !DILocation(line: 19, column: 2, scope: !6269)
!6280 = !DILocation(line: 21, column: 6, scope: !6276)
!6281 = !DILocation(line: 21, column: 6, scope: !6269)
!6282 = !DILocation(line: 22, column: 3, scope: !6275)
!6283 = !DILocation(line: 0, scope: !6275)
!6284 = !DILocation(line: 25, column: 8, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !5803, line: 25, column: 8)
!6286 = distinct !DILexicalBlock(scope: !6275, file: !5803, line: 24, column: 13)
!6287 = !DILocation(line: 25, column: 35, scope: !6285)
!6288 = !DILocation(line: 25, column: 8, scope: !6286)
!6289 = !DILocation(line: 28, column: 28, scope: !6286)
!6290 = !DILocation(line: 28, column: 4, scope: !6286)
!6291 = distinct !{!6291, !6292, !6293}
!6292 = !DILocation(line: 24, column: 3, scope: !6275)
!6293 = !DILocation(line: 29, column: 3, scope: !6275)
!6294 = !DILocation(line: 30, column: 2, scope: !6276)
!6295 = !DILocation(line: 30, column: 2, scope: !6275)
!6296 = !DILocation(line: 32, column: 6, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6269, file: !5803, line: 32, column: 6)
!6298 = !DILocation(line: 32, column: 6, scope: !6269)
!6299 = !DILocation(line: 33, column: 12, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !5803, line: 33, column: 7)
!6301 = distinct !DILexicalBlock(scope: !6297, file: !5803, line: 32, column: 30)
!6302 = !DILocation(line: 33, column: 27, scope: !6300)
!6303 = !DILocation(line: 33, column: 19, scope: !6300)
!6304 = !DILocation(line: 33, column: 7, scope: !6301)
!6305 = !DILocation(line: 37, column: 4, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6300, file: !5803, line: 33, column: 35)
!6307 = !DILocation(line: 38, column: 3, scope: !6306)
!6308 = !DILocation(line: 33, column: 7, scope: !6300)
!6309 = !DILocation(line: 39, column: 30, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6300, file: !5803, line: 38, column: 10)
!6311 = !DILocation(line: 39, column: 52, scope: !6310)
!6312 = !DILocation(line: 39, column: 25, scope: !6310)
!6313 = !DILocation(line: 39, column: 4, scope: !6310)
!6314 = !DILocation(line: 40, column: 13, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6310, file: !5803, line: 40, column: 8)
!6316 = !DILocation(line: 40, column: 8, scope: !6315)
!6317 = !DILocation(line: 40, column: 28, scope: !6315)
!6318 = !DILocation(line: 40, column: 20, scope: !6315)
!6319 = !DILocation(line: 40, column: 8, scope: !6310)
!6320 = !DILocation(line: 41, column: 17, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6315, file: !5803, line: 40, column: 43)
!6322 = !DILocation(line: 42, column: 4, scope: !6321)
!6323 = !DILocation(line: 43, column: 21, scope: !6310)
!6324 = !DILocation(line: 43, column: 4, scope: !6310)
!6325 = !DILocation(line: 46, column: 1, scope: !6269)
!6326 = distinct !DISubprogram(name: "uart_irq_update", scope: !5892, file: !5892, line: 360, type: !2631, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6327)
!6327 = !{!6328}
!6328 = !DILocalVariable(name: "dev", arg: 1, scope: !6326, file: !5892, line: 360, type: !2610)
!6329 = !DILocation(line: 0, scope: !6326)
!6330 = !DILocation(line: 368, column: 2, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6326, file: !5892, line: 368, column: 2)
!6332 = !{i64 2154326118}
!6333 = !DILocation(line: 369, column: 9, scope: !6326)
!6334 = !DILocation(line: 369, column: 2, scope: !6326)
!6335 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !203, file: !203, line: 1024, type: !2631, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6336)
!6336 = !{!6337, !6338}
!6337 = !DILocalVariable(name: "dev", arg: 1, scope: !6335, file: !203, line: 1024, type: !2610)
!6338 = !DILocalVariable(name: "api", scope: !6335, file: !203, line: 1027, type: !2602)
!6339 = !DILocation(line: 0, scope: !6335)
!6340 = !DILocation(line: 1028, column: 40, scope: !6335)
!6341 = !DILocation(line: 1030, column: 11, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6335, file: !203, line: 1030, column: 6)
!6343 = !DILocation(line: 1030, column: 24, scope: !6342)
!6344 = !DILocation(line: 1030, column: 6, scope: !6335)
!6345 = !DILocation(line: 1033, column: 9, scope: !6335)
!6346 = !DILocation(line: 1033, column: 2, scope: !6335)
!6347 = !DILocation(line: 1038, column: 1, scope: !6335)
!6348 = distinct !DISubprogram(name: "uart_fifo_read", scope: !203, file: !203, line: 785, type: !2657, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6349)
!6349 = !{!6350, !6351, !6352, !6353}
!6350 = !DILocalVariable(name: "dev", arg: 1, scope: !6348, file: !203, line: 785, type: !2610)
!6351 = !DILocalVariable(name: "rx_data", arg: 2, scope: !6348, file: !203, line: 785, type: !261)
!6352 = !DILocalVariable(name: "size", arg: 3, scope: !6348, file: !203, line: 786, type: !262)
!6353 = !DILocalVariable(name: "api", scope: !6348, file: !203, line: 789, type: !2602)
!6354 = !DILocation(line: 0, scope: !6348)
!6355 = !DILocation(line: 790, column: 40, scope: !6348)
!6356 = !DILocation(line: 792, column: 11, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6348, file: !203, line: 792, column: 6)
!6358 = !DILocation(line: 792, column: 21, scope: !6357)
!6359 = !DILocation(line: 792, column: 6, scope: !6348)
!6360 = !DILocation(line: 796, column: 9, scope: !6348)
!6361 = !DILocation(line: 796, column: 2, scope: !6348)
!6362 = !DILocation(line: 803, column: 1, scope: !6348)
!6363 = distinct !DISubprogram(name: "tty_irq_input_hook", scope: !5803, file: !5803, line: 48, type: !5903, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6364)
!6364 = !{!6365, !6366, !6367}
!6365 = !DILocalVariable(name: "tty", arg: 1, scope: !6363, file: !5803, line: 48, type: !5808)
!6366 = !DILocalVariable(name: "c", arg: 2, scope: !6363, file: !5803, line: 48, type: !154)
!6367 = !DILocalVariable(name: "rx_next", scope: !6363, file: !5803, line: 50, type: !103)
!6368 = !DILocation(line: 0, scope: !6363)
!6369 = !DILocation(line: 50, column: 21, scope: !6363)
!6370 = !DILocation(line: 50, column: 16, scope: !6363)
!6371 = !DILocation(line: 50, column: 28, scope: !6363)
!6372 = !DILocation(line: 52, column: 22, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6363, file: !5803, line: 52, column: 6)
!6374 = !DILocation(line: 52, column: 14, scope: !6373)
!6375 = !DILocation(line: 52, column: 6, scope: !6363)
!6376 = !DILocation(line: 56, column: 22, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6363, file: !5803, line: 56, column: 6)
!6378 = !DILocation(line: 56, column: 17, scope: !6377)
!6379 = !DILocation(line: 56, column: 14, scope: !6377)
!6380 = !DILocation(line: 56, column: 6, scope: !6363)
!6381 = !DILocation(line: 58, column: 3, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6377, file: !5803, line: 56, column: 30)
!6383 = !DILocation(line: 59, column: 3, scope: !6382)
!6384 = !DILocation(line: 62, column: 7, scope: !6363)
!6385 = !DILocation(line: 62, column: 2, scope: !6363)
!6386 = !DILocation(line: 62, column: 31, scope: !6363)
!6387 = !DILocation(line: 63, column: 16, scope: !6363)
!6388 = !DILocation(line: 63, column: 14, scope: !6363)
!6389 = !DILocation(line: 64, column: 19, scope: !6363)
!6390 = !DILocation(line: 64, column: 2, scope: !6363)
!6391 = !DILocation(line: 66, column: 2, scope: !6363)
!6392 = !DILocation(line: 67, column: 1, scope: !6363)
!6393 = distinct !DISubprogram(name: "uart_irq_tx_ready", scope: !203, file: !203, line: 910, type: !2631, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6394)
!6394 = !{!6395, !6396}
!6395 = !DILocalVariable(name: "dev", arg: 1, scope: !6393, file: !203, line: 910, type: !2610)
!6396 = !DILocalVariable(name: "api", scope: !6393, file: !203, line: 913, type: !2602)
!6397 = !DILocation(line: 0, scope: !6393)
!6398 = !DILocation(line: 914, column: 40, scope: !6393)
!6399 = !DILocation(line: 916, column: 11, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6393, file: !203, line: 916, column: 6)
!6401 = !DILocation(line: 916, column: 24, scope: !6400)
!6402 = !DILocation(line: 916, column: 6, scope: !6393)
!6403 = !DILocation(line: 920, column: 9, scope: !6393)
!6404 = !DILocation(line: 920, column: 2, scope: !6393)
!6405 = !DILocation(line: 925, column: 1, scope: !6393)
!6406 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5892, file: !5892, line: 217, type: !2661, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6407)
!6407 = !{!6408}
!6408 = !DILocalVariable(name: "dev", arg: 1, scope: !6406, file: !5892, line: 217, type: !2610)
!6409 = !DILocation(line: 0, scope: !6406)
!6410 = !DILocation(line: 226, column: 2, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6406, file: !5892, line: 226, column: 2)
!6412 = !{i64 2154325710}
!6413 = !DILocation(line: 227, column: 2, scope: !6406)
!6414 = !DILocation(line: 228, column: 1, scope: !6406)
!6415 = distinct !DISubprogram(name: "uart_fifo_fill", scope: !203, file: !203, line: 699, type: !2653, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6416)
!6416 = !{!6417, !6418, !6419, !6420}
!6417 = !DILocalVariable(name: "dev", arg: 1, scope: !6415, file: !203, line: 699, type: !2610)
!6418 = !DILocalVariable(name: "tx_data", arg: 2, scope: !6415, file: !203, line: 700, type: !255)
!6419 = !DILocalVariable(name: "size", arg: 3, scope: !6415, file: !203, line: 701, type: !103)
!6420 = !DILocalVariable(name: "api", scope: !6415, file: !203, line: 704, type: !2602)
!6421 = !DILocation(line: 0, scope: !6415)
!6422 = !DILocation(line: 705, column: 40, scope: !6415)
!6423 = !DILocation(line: 707, column: 11, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6415, file: !203, line: 707, column: 6)
!6425 = !DILocation(line: 707, column: 21, scope: !6424)
!6426 = !DILocation(line: 707, column: 6, scope: !6415)
!6427 = !DILocation(line: 711, column: 9, scope: !6415)
!6428 = !DILocation(line: 711, column: 2, scope: !6415)
!6429 = !DILocation(line: 718, column: 1, scope: !6415)
!6430 = distinct !DISubprogram(name: "k_sem_give", scope: !3653, file: !3653, line: 1061, type: !6431, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6433)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{null, !6005}
!6433 = !{!6434}
!6434 = !DILocalVariable(name: "sem", arg: 1, scope: !6430, file: !3653, line: 1061, type: !6005)
!6435 = !DILocation(line: 0, scope: !6430)
!6436 = !DILocation(line: 1070, column: 2, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6430, file: !3653, line: 1070, column: 2)
!6438 = !{i64 2154069307}
!6439 = !DILocation(line: 1071, column: 2, scope: !6430)
!6440 = !DILocation(line: 1072, column: 1, scope: !6430)
!6441 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !203, file: !203, line: 878, type: !2661, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6442)
!6442 = !{!6443, !6444}
!6443 = !DILocalVariable(name: "dev", arg: 1, scope: !6441, file: !203, line: 878, type: !2610)
!6444 = !DILocalVariable(name: "api", scope: !6441, file: !203, line: 881, type: !2602)
!6445 = !DILocation(line: 0, scope: !6441)
!6446 = !DILocation(line: 882, column: 40, scope: !6441)
!6447 = !DILocation(line: 884, column: 11, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6441, file: !203, line: 884, column: 6)
!6449 = !DILocation(line: 884, column: 26, scope: !6448)
!6450 = !DILocation(line: 884, column: 6, scope: !6441)
!6451 = !DILocation(line: 885, column: 3, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6448, file: !203, line: 884, column: 35)
!6453 = !DILocation(line: 886, column: 2, scope: !6452)
!6454 = !DILocation(line: 890, column: 1, scope: !6441)
!6455 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !203, file: !203, line: 1136, type: !2631, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6456)
!6456 = !{!6457, !6458}
!6457 = !DILocalVariable(name: "dev", arg: 1, scope: !6455, file: !203, line: 1136, type: !2610)
!6458 = !DILocalVariable(name: "api", scope: !6455, file: !203, line: 1139, type: !2602)
!6459 = !DILocation(line: 0, scope: !6455)
!6460 = !DILocation(line: 1140, column: 40, scope: !6455)
!6461 = !DILocation(line: 1142, column: 11, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6455, file: !203, line: 1142, column: 6)
!6463 = !DILocation(line: 1142, column: 22, scope: !6462)
!6464 = !DILocation(line: 1142, column: 6, scope: !6455)
!6465 = !DILocation(line: 1145, column: 9, scope: !6455)
!6466 = !DILocation(line: 1145, column: 2, scope: !6455)
!6467 = !DILocation(line: 1150, column: 1, scope: !6455)
!6468 = distinct !DISubprogram(name: "tty_set_rx_buf", scope: !5803, file: !5803, line: 265, type: !6469, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6471)
!6469 = !DISubroutineType(types: !6470)
!6470 = !{!103, !5808, !102, !344}
!6471 = !{!6472, !6473, !6474}
!6472 = !DILocalVariable(name: "tty", arg: 1, scope: !6468, file: !5803, line: 265, type: !5808)
!6473 = !DILocalVariable(name: "buf", arg: 2, scope: !6468, file: !5803, line: 265, type: !102)
!6474 = !DILocalVariable(name: "size", arg: 3, scope: !6468, file: !5803, line: 265, type: !344)
!6475 = !DILocation(line: 0, scope: !6468)
!6476 = !DILocation(line: 267, column: 27, scope: !6468)
!6477 = !DILocation(line: 267, column: 2, scope: !6468)
!6478 = !DILocation(line: 269, column: 7, scope: !6468)
!6479 = !DILocation(line: 269, column: 18, scope: !6468)
!6480 = !DILocation(line: 270, column: 7, scope: !6468)
!6481 = !DILocation(line: 270, column: 21, scope: !6468)
!6482 = !DILocation(line: 272, column: 11, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6468, file: !5803, line: 272, column: 6)
!6484 = !DILocation(line: 272, column: 6, scope: !6468)
!6485 = !DILocation(line: 273, column: 20, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6483, file: !5803, line: 272, column: 16)
!6487 = !DILocation(line: 273, column: 3, scope: !6486)
!6488 = !DILocation(line: 274, column: 27, scope: !6486)
!6489 = !DILocation(line: 274, column: 3, scope: !6486)
!6490 = !DILocation(line: 275, column: 2, scope: !6486)
!6491 = !DILocation(line: 277, column: 2, scope: !6468)
!6492 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5892, file: !5892, line: 265, type: !2661, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6493)
!6493 = !{!6494}
!6494 = !DILocalVariable(name: "dev", arg: 1, scope: !6492, file: !5892, line: 265, type: !2610)
!6495 = !DILocation(line: 0, scope: !6492)
!6496 = !DILocation(line: 274, column: 2, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6492, file: !5892, line: 274, column: 2)
!6498 = !{i64 2154325846}
!6499 = !DILocation(line: 275, column: 2, scope: !6492)
!6500 = !DILocation(line: 276, column: 1, scope: !6492)
!6501 = distinct !DISubprogram(name: "k_sem_init", scope: !3653, file: !3653, line: 1026, type: !6502, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6504)
!6502 = !DISubroutineType(types: !6503)
!6503 = !{!103, !6005, !32, !32}
!6504 = !{!6505, !6506, !6507}
!6505 = !DILocalVariable(name: "sem", arg: 1, scope: !6501, file: !3653, line: 1026, type: !6005)
!6506 = !DILocalVariable(name: "initial_count", arg: 2, scope: !6501, file: !3653, line: 1026, type: !32)
!6507 = !DILocalVariable(name: "limit", arg: 3, scope: !6501, file: !3653, line: 1026, type: !32)
!6508 = !DILocation(line: 0, scope: !6501)
!6509 = !DILocation(line: 1036, column: 2, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6501, file: !3653, line: 1036, column: 2)
!6511 = !{i64 2154069171}
!6512 = !DILocation(line: 1037, column: 9, scope: !6501)
!6513 = !DILocation(line: 1037, column: 2, scope: !6501)
!6514 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5892, file: !5892, line: 241, type: !2661, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6515)
!6515 = !{!6516}
!6516 = !DILocalVariable(name: "dev", arg: 1, scope: !6514, file: !5892, line: 241, type: !2610)
!6517 = !DILocation(line: 0, scope: !6514)
!6518 = !DILocation(line: 250, column: 2, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6514, file: !5892, line: 250, column: 2)
!6520 = !{i64 2154325778}
!6521 = !DILocation(line: 251, column: 2, scope: !6514)
!6522 = !DILocation(line: 252, column: 1, scope: !6514)
!6523 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !203, file: !203, line: 934, type: !2661, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6524)
!6524 = !{!6525, !6526}
!6525 = !DILocalVariable(name: "dev", arg: 1, scope: !6523, file: !203, line: 934, type: !2610)
!6526 = !DILocalVariable(name: "api", scope: !6523, file: !203, line: 937, type: !2602)
!6527 = !DILocation(line: 0, scope: !6523)
!6528 = !DILocation(line: 938, column: 40, scope: !6523)
!6529 = !DILocation(line: 940, column: 11, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6523, file: !203, line: 940, column: 6)
!6531 = !DILocation(line: 940, column: 25, scope: !6530)
!6532 = !DILocation(line: 940, column: 6, scope: !6523)
!6533 = !DILocation(line: 941, column: 3, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6530, file: !203, line: 940, column: 34)
!6535 = !DILocation(line: 942, column: 2, scope: !6534)
!6536 = !DILocation(line: 946, column: 1, scope: !6523)
!6537 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !203, file: !203, line: 955, type: !2661, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6538)
!6538 = !{!6539, !6540}
!6539 = !DILocalVariable(name: "dev", arg: 1, scope: !6537, file: !203, line: 955, type: !2610)
!6540 = !DILocalVariable(name: "api", scope: !6537, file: !203, line: 958, type: !2602)
!6541 = !DILocation(line: 0, scope: !6537)
!6542 = !DILocation(line: 959, column: 40, scope: !6537)
!6543 = !DILocation(line: 961, column: 11, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6537, file: !203, line: 961, column: 6)
!6545 = !DILocation(line: 961, column: 26, scope: !6544)
!6546 = !DILocation(line: 961, column: 6, scope: !6537)
!6547 = !DILocation(line: 962, column: 3, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6544, file: !203, line: 961, column: 35)
!6549 = !DILocation(line: 963, column: 2, scope: !6548)
!6550 = !DILocation(line: 967, column: 1, scope: !6537)
!6551 = distinct !DISubprogram(name: "tty_set_tx_buf", scope: !5803, file: !5803, line: 280, type: !6469, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2599, retainedNodes: !6552)
!6552 = !{!6553, !6554, !6555}
!6553 = !DILocalVariable(name: "tty", arg: 1, scope: !6551, file: !5803, line: 280, type: !5808)
!6554 = !DILocalVariable(name: "buf", arg: 2, scope: !6551, file: !5803, line: 280, type: !102)
!6555 = !DILocalVariable(name: "size", arg: 3, scope: !6551, file: !5803, line: 280, type: !344)
!6556 = !DILocation(line: 0, scope: !6551)
!6557 = !DILocation(line: 282, column: 27, scope: !6551)
!6558 = !DILocation(line: 282, column: 2, scope: !6551)
!6559 = !DILocation(line: 284, column: 7, scope: !6551)
!6560 = !DILocation(line: 284, column: 18, scope: !6551)
!6561 = !DILocation(line: 285, column: 7, scope: !6551)
!6562 = !DILocation(line: 285, column: 21, scope: !6551)
!6563 = !DILocation(line: 287, column: 19, scope: !6551)
!6564 = !DILocation(line: 287, column: 32, scope: !6551)
!6565 = !DILocation(line: 287, column: 2, scope: !6551)
!6566 = !DILocation(line: 293, column: 2, scope: !6551)
!6567 = distinct !DISubprogram(name: "console_write", scope: !288, file: !288, line: 18, type: !6568, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6570)
!6568 = !DISubroutineType(types: !6569)
!6569 = !{!5806, !102, !13, !344}
!6570 = !{!6571, !6572, !6573}
!6571 = !DILocalVariable(name: "dummy", arg: 1, scope: !6567, file: !288, line: 18, type: !102)
!6572 = !DILocalVariable(name: "buf", arg: 2, scope: !6567, file: !288, line: 18, type: !13)
!6573 = !DILocalVariable(name: "size", arg: 3, scope: !6567, file: !288, line: 18, type: !344)
!6574 = !DILocation(line: 0, scope: !6567)
!6575 = !DILocation(line: 22, column: 9, scope: !6567)
!6576 = !DILocation(line: 22, column: 2, scope: !6567)
!6577 = distinct !DISubprogram(name: "console_read", scope: !288, file: !288, line: 25, type: !6578, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6580)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{!5806, !102, !102, !344}
!6580 = !{!6581, !6582, !6583}
!6581 = !DILocalVariable(name: "dummy", arg: 1, scope: !6577, file: !288, line: 25, type: !102)
!6582 = !DILocalVariable(name: "buf", arg: 2, scope: !6577, file: !288, line: 25, type: !102)
!6583 = !DILocalVariable(name: "size", arg: 3, scope: !6577, file: !288, line: 25, type: !344)
!6584 = !DILocation(line: 0, scope: !6577)
!6585 = !DILocation(line: 29, column: 9, scope: !6577)
!6586 = !DILocation(line: 29, column: 2, scope: !6577)
!6587 = distinct !DISubprogram(name: "console_putchar", scope: !288, file: !288, line: 32, type: !1057, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6588)
!6588 = !{!6589}
!6589 = !DILocalVariable(name: "c", arg: 1, scope: !6587, file: !288, line: 32, type: !146)
!6590 = !DILocation(line: 0, scope: !6587)
!6591 = !DILocation(line: 34, column: 9, scope: !6587)
!6592 = !DILocation(line: 34, column: 2, scope: !6587)
!6593 = distinct !DISubprogram(name: "console_getchar", scope: !288, file: !288, line: 37, type: !6594, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6596)
!6594 = !DISubroutineType(types: !6595)
!6595 = !{!103}
!6596 = !{!6597, !6598}
!6597 = !DILocalVariable(name: "c", scope: !6593, file: !288, line: 39, type: !154)
!6598 = !DILocalVariable(name: "res", scope: !6593, file: !288, line: 40, type: !103)
!6599 = !DILocation(line: 39, column: 2, scope: !6593)
!6600 = !DILocation(line: 0, scope: !6593)
!6601 = !DILocation(line: 42, column: 8, scope: !6593)
!6602 = !DILocation(line: 43, column: 10, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6593, file: !288, line: 43, column: 6)
!6604 = !DILocation(line: 43, column: 6, scope: !6593)
!6605 = !DILocation(line: 48, column: 1, scope: !6593)
!6606 = distinct !DISubprogram(name: "console_init", scope: !288, file: !288, line: 50, type: !6594, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6607)
!6607 = !{!6608, !6609, !6610}
!6608 = !DILocalVariable(name: "uart_dev", scope: !6606, file: !288, line: 52, type: !209)
!6609 = !DILocalVariable(name: "ret", scope: !6606, file: !288, line: 53, type: !103)
!6610 = !DILocalVariable(name: "api", scope: !6611, file: !288, line: 68, type: !200)
!6611 = distinct !DILexicalBlock(scope: !6612, file: !288, line: 67, column: 71)
!6612 = distinct !DILexicalBlock(scope: !6606, file: !288, line: 67, column: 6)
!6613 = !DILocation(line: 0, scope: !6606)
!6614 = !DILocation(line: 56, column: 7, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6606, file: !288, line: 56, column: 6)
!6616 = !DILocation(line: 56, column: 6, scope: !6606)
!6617 = !DILocation(line: 60, column: 8, scope: !6606)
!6618 = !DILocation(line: 62, column: 6, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6606, file: !288, line: 62, column: 6)
!6620 = !DILocation(line: 62, column: 6, scope: !6606)
!6621 = !DILocation(line: 69, column: 46, scope: !6611)
!6622 = !DILocation(line: 0, scope: !6611)
!6623 = !DILocation(line: 70, column: 13, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6611, file: !288, line: 70, column: 7)
!6625 = !DILocation(line: 70, column: 8, scope: !6624)
!6626 = !DILocation(line: 75, column: 2, scope: !6606)
!6627 = !DILocation(line: 76, column: 2, scope: !6606)
!6628 = !DILocation(line: 78, column: 2, scope: !6606)
!6629 = !DILocation(line: 79, column: 1, scope: !6606)
!6630 = distinct !DISubprogram(name: "device_is_ready", scope: !6631, file: !6631, line: 47, type: !6632, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6634)
!6631 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!6632 = !DISubroutineType(types: !6633)
!6633 = !{!157, !209}
!6634 = !{!6635}
!6635 = !DILocalVariable(name: "dev", arg: 1, scope: !6630, file: !6631, line: 47, type: !209)
!6636 = !DILocation(line: 0, scope: !6630)
!6637 = !DILocation(line: 55, column: 2, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6630, file: !6631, line: 55, column: 2)
!6639 = !{i64 2154238059}
!6640 = !DILocation(line: 56, column: 9, scope: !6630)
!6641 = !DILocation(line: 56, column: 2, scope: !6630)
!6642 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !6632, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !6643)
!6643 = !{!6644}
!6644 = !DILocalVariable(name: "dev", arg: 1, scope: !6642, file: !141, line: 730, type: !209)
!6645 = !DILocation(line: 0, scope: !6642)
!6646 = !DILocation(line: 732, column: 9, scope: !6642)
!6647 = !DILocation(line: 732, column: 2, scope: !6642)
!6648 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6649, file: !6649, line: 57, type: !6650, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !6696)
!6649 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6650 = !DISubroutineType(types: !6651)
!6651 = !{null, !32, !6652}
!6652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6653, size: 32)
!6653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6654)
!6654 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2801, line: 141, baseType: !6655)
!6655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2801, line: 97, size: 256, elements: !6656)
!6656 = !{!6657}
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6655, file: !2801, line: 107, baseType: !6658, size: 256)
!6658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2801, line: 98, size: 256, elements: !6659)
!6659 = !{!6660, !6665, !6670, !6675, !6680, !6685, !6690, !6695}
!6660 = !DIDerivedType(tag: DW_TAG_member, scope: !6658, file: !2801, line: 99, baseType: !6661, size: 32)
!6661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6658, file: !2801, line: 99, size: 32, elements: !6662)
!6662 = !{!6663, !6664}
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6661, file: !2801, line: 99, baseType: !121, size: 32)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6661, file: !2801, line: 99, baseType: !121, size: 32)
!6665 = !DIDerivedType(tag: DW_TAG_member, scope: !6658, file: !2801, line: 100, baseType: !6666, size: 32, offset: 32)
!6666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6658, file: !2801, line: 100, size: 32, elements: !6667)
!6667 = !{!6668, !6669}
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6666, file: !2801, line: 100, baseType: !121, size: 32)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6666, file: !2801, line: 100, baseType: !121, size: 32)
!6670 = !DIDerivedType(tag: DW_TAG_member, scope: !6658, file: !2801, line: 101, baseType: !6671, size: 32, offset: 64)
!6671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6658, file: !2801, line: 101, size: 32, elements: !6672)
!6672 = !{!6673, !6674}
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6671, file: !2801, line: 101, baseType: !121, size: 32)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6671, file: !2801, line: 101, baseType: !121, size: 32)
!6675 = !DIDerivedType(tag: DW_TAG_member, scope: !6658, file: !2801, line: 102, baseType: !6676, size: 32, offset: 96)
!6676 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6658, file: !2801, line: 102, size: 32, elements: !6677)
!6677 = !{!6678, !6679}
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6676, file: !2801, line: 102, baseType: !121, size: 32)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6676, file: !2801, line: 102, baseType: !121, size: 32)
!6680 = !DIDerivedType(tag: DW_TAG_member, scope: !6658, file: !2801, line: 103, baseType: !6681, size: 32, offset: 128)
!6681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6658, file: !2801, line: 103, size: 32, elements: !6682)
!6682 = !{!6683, !6684}
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6681, file: !2801, line: 103, baseType: !121, size: 32)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6681, file: !2801, line: 103, baseType: !121, size: 32)
!6685 = !DIDerivedType(tag: DW_TAG_member, scope: !6658, file: !2801, line: 104, baseType: !6686, size: 32, offset: 160)
!6686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6658, file: !2801, line: 104, size: 32, elements: !6687)
!6687 = !{!6688, !6689}
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6686, file: !2801, line: 104, baseType: !121, size: 32)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6686, file: !2801, line: 104, baseType: !121, size: 32)
!6690 = !DIDerivedType(tag: DW_TAG_member, scope: !6658, file: !2801, line: 105, baseType: !6691, size: 32, offset: 192)
!6691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6658, file: !2801, line: 105, size: 32, elements: !6692)
!6692 = !{!6693, !6694}
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6691, file: !2801, line: 105, baseType: !121, size: 32)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6691, file: !2801, line: 105, baseType: !121, size: 32)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6658, file: !2801, line: 106, baseType: !121, size: 32, offset: 224)
!6696 = !{!6697, !6698}
!6697 = !DILocalVariable(name: "reason", arg: 1, scope: !6648, file: !6649, line: 57, type: !32)
!6698 = !DILocalVariable(name: "esf", arg: 2, scope: !6648, file: !6649, line: 57, type: !6652)
!6699 = !DILocation(line: 0, scope: !6648)
!6700 = !DILocation(line: 63, column: 2, scope: !6648)
!6701 = !DILocation(line: 64, column: 1, scope: !6648)
!6702 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6649, file: !6649, line: 82, type: !6703, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !6718)
!6703 = !DISubroutineType(types: !6704)
!6704 = !{null, !6652, !6705}
!6705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6706, size: 32)
!6706 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !424, line: 37, baseType: !6707)
!6707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !6708)
!6708 = !{!6709, !6710, !6711, !6712, !6713, !6714, !6715, !6716, !6717}
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6707, file: !424, line: 26, baseType: !121, size: 32)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6707, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6707, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6707, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6707, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6707, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6707, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6707, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6707, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!6718 = !{!6719, !6720, !6721}
!6719 = !DILocalVariable(name: "esf", arg: 1, scope: !6702, file: !6649, line: 82, type: !6652)
!6720 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6702, file: !6649, line: 82, type: !6705)
!6721 = !DILocalVariable(name: "reason", scope: !6702, file: !6649, line: 88, type: !32)
!6722 = !DILocation(line: 0, scope: !6702)
!6723 = !DILocation(line: 88, column: 35, scope: !6702)
!6724 = !DILocation(line: 108, column: 2, scope: !6702)
!6725 = !DILocation(line: 131, column: 1, scope: !6702)
!6726 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6649, file: !6649, line: 133, type: !6727, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2681, retainedNodes: !6729)
!6727 = !DISubroutineType(types: !6728)
!6728 = !{null, !102}
!6729 = !{!6730, !6731, !6732}
!6730 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6726, file: !6649, line: 133, type: !102)
!6731 = !DILocalVariable(name: "ssf_contents", scope: !6726, file: !6649, line: 135, type: !825)
!6732 = !DILocalVariable(name: "oops_esf", scope: !6726, file: !6649, line: 136, type: !6654)
!6733 = !DILocation(line: 0, scope: !6726)
!6734 = !DILocation(line: 136, column: 2, scope: !6726)
!6735 = !DILocation(line: 136, column: 15, scope: !6726)
!6736 = !DILocation(line: 139, column: 22, scope: !6726)
!6737 = !DILocation(line: 139, column: 17, scope: !6726)
!6738 = !DILocation(line: 139, column: 20, scope: !6726)
!6739 = !DILocation(line: 141, column: 2, scope: !6726)
!6740 = !DILocation(line: 142, column: 2, scope: !6726)
!6741 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6742, file: !6742, line: 40, type: !5781, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !6743)
!6742 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6743 = !{!6744}
!6744 = !DILocalVariable(name: "irq", arg: 1, scope: !6741, file: !6742, line: 40, type: !32)
!6745 = !DILocation(line: 0, scope: !6741)
!6746 = !DILocation(line: 42, column: 2, scope: !6741)
!6747 = !DILocation(line: 43, column: 1, scope: !6741)
!6748 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !495, file: !495, line: 1684, type: !6749, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !6751)
!6749 = !DISubroutineType(types: !6750)
!6750 = !{null, !730}
!6751 = !{!6752}
!6752 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6748, file: !495, line: 1684, type: !730)
!6753 = !DILocation(line: 0, scope: !6748)
!6754 = !DILocation(line: 1686, column: 23, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6748, file: !495, line: 1686, column: 7)
!6756 = !DILocation(line: 1686, column: 7, scope: !6748)
!6757 = !DILocation(line: 1688, column: 5, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6755, file: !495, line: 1687, column: 3)
!6759 = !{i64 2150355519}
!6760 = !DILocation(line: 1689, column: 81, scope: !6758)
!6761 = !DILocation(line: 1689, column: 60, scope: !6758)
!6762 = !DILocation(line: 1689, column: 34, scope: !6758)
!6763 = !DILocation(line: 1689, column: 5, scope: !6758)
!6764 = !DILocation(line: 1689, column: 43, scope: !6758)
!6765 = !DILocation(line: 1690, column: 5, scope: !6758)
!6766 = !{i64 2150355633}
!6767 = !DILocation(line: 1691, column: 3, scope: !6758)
!6768 = !DILocation(line: 1692, column: 1, scope: !6748)
!6769 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6742, file: !6742, line: 45, type: !5781, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !6770)
!6770 = !{!6771}
!6771 = !DILocalVariable(name: "irq", arg: 1, scope: !6769, file: !6742, line: 45, type: !32)
!6772 = !DILocation(line: 0, scope: !6769)
!6773 = !DILocation(line: 47, column: 2, scope: !6769)
!6774 = !DILocation(line: 48, column: 1, scope: !6769)
!6775 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !495, file: !495, line: 1722, type: !6749, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !6776)
!6776 = !{!6777}
!6777 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6775, file: !495, line: 1722, type: !730)
!6778 = !DILocation(line: 0, scope: !6775)
!6779 = !DILocation(line: 1724, column: 23, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6775, file: !495, line: 1724, column: 7)
!6781 = !DILocation(line: 1724, column: 7, scope: !6775)
!6782 = !DILocation(line: 1726, column: 81, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6780, file: !495, line: 1725, column: 3)
!6784 = !DILocation(line: 1726, column: 60, scope: !6783)
!6785 = !DILocation(line: 1726, column: 34, scope: !6783)
!6786 = !DILocation(line: 1726, column: 5, scope: !6783)
!6787 = !DILocation(line: 1726, column: 43, scope: !6783)
!6788 = !DILocation(line: 271, column: 3, scope: !6789, inlinedAt: !6791)
!6789 = distinct !DISubprogram(name: "__DSB", scope: !6790, file: !6790, line: 269, type: !3220, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !461)
!6790 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6791 = distinct !DILocation(line: 1727, column: 5, scope: !6783)
!6792 = !{i64 2809902}
!6793 = !DILocation(line: 260, column: 3, scope: !6794, inlinedAt: !6795)
!6794 = distinct !DISubprogram(name: "__ISB", scope: !6790, file: !6790, line: 258, type: !3220, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !461)
!6795 = distinct !DILocation(line: 1728, column: 5, scope: !6783)
!6796 = !{i64 2809619}
!6797 = !DILocation(line: 1729, column: 3, scope: !6783)
!6798 = !DILocation(line: 1730, column: 1, scope: !6775)
!6799 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6742, file: !6742, line: 50, type: !6800, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !6802)
!6800 = !DISubroutineType(types: !6801)
!6801 = !{!103, !32}
!6802 = !{!6803}
!6803 = !DILocalVariable(name: "irq", arg: 1, scope: !6799, file: !6742, line: 50, type: !32)
!6804 = !DILocation(line: 0, scope: !6799)
!6805 = !DILocation(line: 52, column: 20, scope: !6799)
!6806 = !DILocation(line: 52, column: 9, scope: !6799)
!6807 = !DILocation(line: 52, column: 41, scope: !6799)
!6808 = !DILocation(line: 52, column: 39, scope: !6799)
!6809 = !DILocation(line: 52, column: 2, scope: !6799)
!6810 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6742, file: !6742, line: 64, type: !6811, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !6813)
!6811 = !DISubroutineType(types: !6812)
!6812 = !{null, !32, !32, !121}
!6813 = !{!6814, !6815, !6816}
!6814 = !DILocalVariable(name: "irq", arg: 1, scope: !6810, file: !6742, line: 64, type: !32)
!6815 = !DILocalVariable(name: "prio", arg: 2, scope: !6810, file: !6742, line: 64, type: !32)
!6816 = !DILocalVariable(name: "flags", arg: 3, scope: !6810, file: !6742, line: 64, type: !121)
!6817 = !DILocation(line: 0, scope: !6810)
!6818 = !DILocation(line: 83, column: 8, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !6742, line: 82, column: 9)
!6820 = distinct !DILexicalBlock(scope: !6810, file: !6742, line: 76, column: 6)
!6821 = !DILocation(line: 95, column: 2, scope: !6810)
!6822 = !DILocation(line: 96, column: 1, scope: !6810)
!6823 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6824, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !6826)
!6824 = !DISubroutineType(types: !6825)
!6825 = !{null, !730, !121}
!6826 = !{!6827, !6828}
!6827 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6823, file: !495, line: 1814, type: !730)
!6828 = !DILocalVariable(name: "priority", arg: 2, scope: !6823, file: !495, line: 1814, type: !121)
!6829 = !DILocation(line: 0, scope: !6823)
!6830 = !DILocation(line: 0, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6823, file: !495, line: 1816, column: 7)
!6832 = !DILocation(line: 1816, column: 7, scope: !6823)
!6833 = !DILocation(line: 1824, column: 1, scope: !6823)
!6834 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6742, file: !6742, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !6835)
!6835 = !{!6836}
!6836 = !DILocalVariable(name: "unused", arg: 1, scope: !6834, file: !6742, line: 155, type: !13)
!6837 = !DILocation(line: 0, scope: !6834)
!6838 = !DILocation(line: 159, column: 2, scope: !6834)
!6839 = !DILocation(line: 160, column: 1, scope: !6834)
!6840 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6841, file: !6841, line: 87, type: !3220, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !461)
!6841 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6842 = !DILocation(line: 89, column: 2, scope: !6840)
!6843 = !DILocation(line: 90, column: 2, scope: !6840)
!6844 = !DILocation(line: 91, column: 1, scope: !6840)
!6845 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6841, file: !6841, line: 23, type: !3220, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!6846 = !DISubprogram(name: "z_arm_int_exit", scope: !6847, file: !6847, line: 153, type: !3220, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!6847 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6848 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6849, file: !6849, line: 256, type: !3220, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !461)
!6849 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6850 = !DILocation(line: 258, column: 2, scope: !6848)
!6851 = !DILocation(line: 260, column: 2, scope: !6848)
!6852 = !DILocation(line: 262, column: 2, scope: !6848)
!6853 = !DILocation(line: 263, column: 2, scope: !6848)
!6854 = !DILocation(line: 267, column: 2, scope: !6848)
!6855 = !DILocation(line: 268, column: 2, scope: !6848)
!6856 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6849, file: !6849, line: 53, type: !3220, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !461)
!6857 = !DILocation(line: 55, column: 12, scope: !6856)
!6858 = !DILocation(line: 271, column: 3, scope: !6859, inlinedAt: !6860)
!6859 = distinct !DISubprogram(name: "__DSB", scope: !6790, file: !6790, line: 269, type: !3220, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !461)
!6860 = distinct !DILocation(line: 56, column: 2, scope: !6856)
!6861 = !{i64 2808573}
!6862 = !DILocation(line: 260, column: 3, scope: !6863, inlinedAt: !6864)
!6863 = distinct !DISubprogram(name: "__ISB", scope: !6790, file: !6790, line: 258, type: !3220, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !461)
!6864 = distinct !DILocation(line: 57, column: 2, scope: !6856)
!6865 = !{i64 2808290}
!6866 = !DILocation(line: 58, column: 1, scope: !6856)
!6867 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6849, file: !6849, line: 96, type: !3220, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !461)
!6868 = !DILocation(line: 103, column: 13, scope: !6867)
!6869 = !DILocation(line: 975, column: 3, scope: !6870, inlinedAt: !6875)
!6870 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6790, file: !6790, line: 971, type: !6871, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !6873)
!6871 = !DISubroutineType(types: !6872)
!6872 = !{!121}
!6873 = !{!6874}
!6874 = !DILocalVariable(name: "result", scope: !6870, file: !6790, line: 973, type: !121)
!6875 = distinct !DILocation(line: 189, column: 16, scope: !6867)
!6876 = !{i64 2829403}
!6877 = !DILocation(line: 0, scope: !6870, inlinedAt: !6875)
!6878 = !DILocation(line: 189, column: 32, scope: !6867)
!6879 = !DILocalVariable(name: "control", arg: 1, scope: !6880, file: !6790, line: 1001, type: !121)
!6880 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6790, file: !6790, line: 1001, type: !6881, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2740, retainedNodes: !6883)
!6881 = !DISubroutineType(types: !6882)
!6882 = !{null, !121}
!6883 = !{!6879}
!6884 = !DILocation(line: 0, scope: !6880, inlinedAt: !6885)
!6885 = distinct !DILocation(line: 189, column: 2, scope: !6867)
!6886 = !DILocation(line: 1003, column: 3, scope: !6880, inlinedAt: !6885)
!6887 = !{i64 2830123}
!6888 = !DILocation(line: 260, column: 3, scope: !6863, inlinedAt: !6889)
!6889 = distinct !DILocation(line: 1004, column: 3, scope: !6880, inlinedAt: !6885)
!6890 = !DILocation(line: 191, column: 1, scope: !6867)
!6891 = distinct !DISubprogram(name: "arch_swap", scope: !6892, file: !6892, line: 33, type: !6800, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !6893)
!6892 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6893 = !{!6894}
!6894 = !DILocalVariable(name: "key", arg: 1, scope: !6891, file: !6892, line: 33, type: !32)
!6895 = !DILocation(line: 0, scope: !6891)
!6896 = !DILocation(line: 36, column: 2, scope: !6891)
!6897 = !DILocation(line: 36, column: 17, scope: !6891)
!6898 = !DILocation(line: 36, column: 25, scope: !6891)
!6899 = !DILocation(line: 37, column: 37, scope: !6891)
!6900 = !DILocation(line: 37, column: 17, scope: !6891)
!6901 = !DILocation(line: 37, column: 35, scope: !6891)
!6902 = !DILocation(line: 41, column: 12, scope: !6891)
!6903 = !DILocalVariable(name: "key", arg: 1, scope: !6904, file: !5770, line: 84, type: !32)
!6904 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5770, file: !5770, line: 84, type: !5781, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !6905)
!6905 = !{!6903}
!6906 = !DILocation(line: 0, scope: !6904, inlinedAt: !6907)
!6907 = distinct !DILocation(line: 44, column: 2, scope: !6891)
!6908 = !DILocation(line: 95, column: 2, scope: !6904, inlinedAt: !6907)
!6909 = !{i64 1947769}
!6910 = !DILocation(line: 53, column: 9, scope: !6891)
!6911 = !DILocation(line: 53, column: 24, scope: !6891)
!6912 = !DILocation(line: 53, column: 2, scope: !6891)
!6913 = distinct !DISubprogram(name: "arch_new_thread", scope: !6914, file: !6914, line: 56, type: !6915, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !7022)
!6914 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6915 = !DISubroutineType(types: !6916)
!6916 = !{null, !6917, !7017, !1051, !3531, !102, !102, !102}
!6917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6918, size: 32)
!6918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !6919)
!6919 = !{!6920, !6978, !6990, !6991, !6992, !6993, !6999, !7012}
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6918, file: !355, line: 247, baseType: !6921, size: 384)
!6921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !6922)
!6922 = !{!6923, !6947, !6954, !6955, !6956, !6965, !6966, !6967}
!6923 = !DIDerivedType(tag: DW_TAG_member, scope: !6921, file: !355, line: 60, baseType: !6924, size: 64)
!6924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6921, file: !355, line: 60, size: 64, elements: !6925)
!6925 = !{!6926, !6941}
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6924, file: !355, line: 61, baseType: !6927, size: 64)
!6927 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !6928)
!6928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !6929)
!6929 = !{!6930, !6936}
!6930 = !DIDerivedType(tag: DW_TAG_member, scope: !6928, file: !309, line: 38, baseType: !6931, size: 32)
!6931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6928, file: !309, line: 38, size: 32, elements: !6932)
!6932 = !{!6933, !6935}
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6931, file: !309, line: 39, baseType: !6934, size: 32)
!6934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6928, size: 32)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6931, file: !309, line: 40, baseType: !6934, size: 32)
!6936 = !DIDerivedType(tag: DW_TAG_member, scope: !6928, file: !309, line: 42, baseType: !6937, size: 32, offset: 32)
!6937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6928, file: !309, line: 42, size: 32, elements: !6938)
!6938 = !{!6939, !6940}
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6937, file: !309, line: 43, baseType: !6934, size: 32)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6937, file: !309, line: 44, baseType: !6934, size: 32)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6924, file: !355, line: 62, baseType: !6942, size: 64)
!6942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !6943)
!6943 = !{!6944}
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6942, file: !380, line: 50, baseType: !6945, size: 64)
!6945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6946, size: 64, elements: !385)
!6946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6942, size: 32)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6921, file: !355, line: 68, baseType: !6948, size: 32, offset: 64)
!6948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6949, size: 32)
!6949 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !6950)
!6950 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !6951)
!6951 = !{!6952}
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6950, file: !304, line: 232, baseType: !6953, size: 64)
!6953 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !6928)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6921, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6921, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!6956 = !DIDerivedType(tag: DW_TAG_member, scope: !6921, file: !355, line: 90, baseType: !6957, size: 16, offset: 112)
!6957 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6921, file: !355, line: 90, size: 16, elements: !6958)
!6958 = !{!6959, !6964}
!6959 = !DIDerivedType(tag: DW_TAG_member, scope: !6957, file: !355, line: 91, baseType: !6960, size: 16)
!6960 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6957, file: !355, line: 91, size: 16, elements: !6961)
!6961 = !{!6962, !6963}
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6960, file: !355, line: 96, baseType: !403, size: 8)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6960, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6957, file: !355, line: 100, baseType: !328, size: 16)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6921, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6921, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6921, file: !355, line: 131, baseType: !6968, size: 192, offset: 192)
!6968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !6969)
!6969 = !{!6970, !6971, !6977}
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6968, file: !304, line: 245, baseType: !6927, size: 64)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6968, file: !304, line: 246, baseType: !6972, size: 32, offset: 64)
!6972 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !6973)
!6973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6974, size: 32)
!6974 = !DISubroutineType(types: !6975)
!6975 = !{null, !6976}
!6976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6968, size: 32)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6968, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6918, file: !355, line: 250, baseType: !6979, size: 288, offset: 384)
!6979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !6980)
!6980 = !{!6981, !6982, !6983, !6984, !6985, !6986, !6987, !6988, !6989}
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6979, file: !424, line: 26, baseType: !121, size: 32)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6979, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6979, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6979, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6979, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6979, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6979, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6979, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6979, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6918, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6918, file: !355, line: 256, baseType: !6949, size: 64, offset: 704)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6918, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6918, file: !355, line: 300, baseType: !6994, size: 96, offset: 800)
!6994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !6995)
!6995 = !{!6996, !6997, !6998}
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6994, file: !355, line: 153, baseType: !22, size: 32)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6994, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6994, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6918, file: !355, line: 325, baseType: !7000, size: 32, offset: 896)
!7000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7001, size: 32)
!7001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !7002)
!7002 = !{!7003, !7009, !7010}
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7001, file: !300, line: 5074, baseType: !7004, size: 96)
!7004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !7005)
!7005 = !{!7006, !7007, !7008}
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7004, file: !450, line: 57, baseType: !453, size: 32)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7004, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7004, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7001, file: !300, line: 5075, baseType: !6949, size: 64, offset: 96)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7001, file: !300, line: 5076, baseType: !7011, offset: 160)
!7011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6918, file: !355, line: 343, baseType: !7013, size: 64, offset: 928)
!7013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !7014)
!7014 = !{!7015, !7016}
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7013, file: !424, line: 63, baseType: !121, size: 32)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7013, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!7017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7018, size: 32)
!7018 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3532, line: 44, baseType: !7019)
!7019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2141, line: 47, size: 8, elements: !7020)
!7020 = !{!7021}
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7019, file: !2141, line: 48, baseType: !146, size: 8)
!7022 = !{!7023, !7024, !7025, !7026, !7027, !7028, !7029, !7030}
!7023 = !DILocalVariable(name: "thread", arg: 1, scope: !6913, file: !6914, line: 56, type: !6917)
!7024 = !DILocalVariable(name: "stack", arg: 2, scope: !6913, file: !6914, line: 56, type: !7017)
!7025 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6913, file: !6914, line: 57, type: !1051)
!7026 = !DILocalVariable(name: "entry", arg: 4, scope: !6913, file: !6914, line: 57, type: !3531)
!7027 = !DILocalVariable(name: "p1", arg: 5, scope: !6913, file: !6914, line: 58, type: !102)
!7028 = !DILocalVariable(name: "p2", arg: 6, scope: !6913, file: !6914, line: 58, type: !102)
!7029 = !DILocalVariable(name: "p3", arg: 7, scope: !6913, file: !6914, line: 58, type: !102)
!7030 = !DILocalVariable(name: "iframe", scope: !6913, file: !6914, line: 60, type: !2799)
!7031 = !DILocation(line: 0, scope: !6913)
!7032 = !DILocation(line: 85, column: 11, scope: !6913)
!7033 = !DILocation(line: 93, column: 10, scope: !6913)
!7034 = !DILocation(line: 98, column: 13, scope: !6913)
!7035 = !DILocation(line: 100, column: 15, scope: !6913)
!7036 = !DILocation(line: 100, column: 10, scope: !6913)
!7037 = !DILocation(line: 100, column: 13, scope: !6913)
!7038 = !DILocation(line: 101, column: 15, scope: !6913)
!7039 = !DILocation(line: 101, column: 10, scope: !6913)
!7040 = !DILocation(line: 101, column: 13, scope: !6913)
!7041 = !DILocation(line: 102, column: 15, scope: !6913)
!7042 = !DILocation(line: 102, column: 10, scope: !6913)
!7043 = !DILocation(line: 102, column: 13, scope: !6913)
!7044 = !DILocation(line: 103, column: 15, scope: !6913)
!7045 = !DILocation(line: 103, column: 10, scope: !6913)
!7046 = !DILocation(line: 103, column: 13, scope: !6913)
!7047 = !DILocation(line: 106, column: 10, scope: !6913)
!7048 = !DILocation(line: 106, column: 15, scope: !6913)
!7049 = !DILocation(line: 122, column: 29, scope: !6913)
!7050 = !DILocation(line: 122, column: 23, scope: !6913)
!7051 = !DILocation(line: 122, column: 27, scope: !6913)
!7052 = !DILocation(line: 123, column: 15, scope: !6913)
!7053 = !DILocation(line: 123, column: 23, scope: !6913)
!7054 = !DILocation(line: 143, column: 1, scope: !6913)
!7055 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6914, file: !6914, line: 385, type: !7056, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !7059)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{!121, !7058, !7058}
!7058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!7059 = !{!7060, !7061, !7062, !7065}
!7060 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7055, file: !6914, line: 385, type: !7058)
!7061 = !DILocalVariable(name: "psp", arg: 2, scope: !7055, file: !6914, line: 385, type: !7058)
!7062 = !DILocalVariable(name: "thread", scope: !7055, file: !6914, line: 388, type: !7063)
!7063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7064, size: 32)
!7064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6918)
!7065 = !DILocalVariable(name: "guard_len", scope: !7055, file: !6914, line: 405, type: !121)
!7066 = !DILocation(line: 0, scope: !7055)
!7067 = !DILocation(line: 388, column: 34, scope: !7055)
!7068 = !DILocation(line: 390, column: 13, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7055, file: !6914, line: 390, column: 6)
!7070 = !DILocation(line: 390, column: 6, scope: !7055)
!7071 = !DILocation(line: 438, column: 6, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7055, file: !6914, line: 438, column: 6)
!7073 = !DILocation(line: 438, column: 6, scope: !7055)
!7074 = !DILocation(line: 442, column: 3, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7072, file: !6914, line: 440, column: 22)
!7076 = !DILocation(line: 455, column: 1, scope: !7055)
!7077 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6914, file: !6914, line: 530, type: !7078, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2796, retainedNodes: !7080)
!7078 = !DISubroutineType(types: !7079)
!7079 = !{null, !6917, !1051, !3531}
!7080 = !{!7081, !7082, !7083}
!7081 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7077, file: !6914, line: 530, type: !6917)
!7082 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7077, file: !6914, line: 530, type: !1051)
!7083 = !DILocalVariable(name: "_main", arg: 3, scope: !7077, file: !6914, line: 531, type: !3531)
!7084 = !DILocation(line: 0, scope: !7077)
!7085 = !DILocation(line: 535, column: 11, scope: !7077)
!7086 = !DILocation(line: 560, column: 2, scope: !7077)
!7087 = !DILocation(line: 576, column: 2, scope: !7077)
!7088 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7089 = !DILocation(line: 603, column: 2, scope: !7077)
!7090 = distinct !DISubprogram(name: "z_arm_fault", scope: !7091, file: !7091, line: 1036, type: !7092, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7107)
!7091 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7092 = !DISubroutineType(types: !7093)
!7093 = !{null, !121, !121, !121, !7094}
!7094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7095, size: 32)
!7095 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !424, line: 37, baseType: !7096)
!7096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !7097)
!7097 = !{!7098, !7099, !7100, !7101, !7102, !7103, !7104, !7105, !7106}
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7096, file: !424, line: 26, baseType: !121, size: 32)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7096, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7096, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7096, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7096, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7096, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7096, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7096, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7096, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!7107 = !{!7108, !7109, !7110, !7111, !7112, !7113, !7114, !7115, !7116, !7117}
!7108 = !DILocalVariable(name: "msp", arg: 1, scope: !7090, file: !7091, line: 1036, type: !121)
!7109 = !DILocalVariable(name: "psp", arg: 2, scope: !7090, file: !7091, line: 1036, type: !121)
!7110 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7090, file: !7091, line: 1036, type: !121)
!7111 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7090, file: !7091, line: 1037, type: !7094)
!7112 = !DILocalVariable(name: "reason", scope: !7090, file: !7091, line: 1039, type: !121)
!7113 = !DILocalVariable(name: "fault", scope: !7090, file: !7091, line: 1040, type: !103)
!7114 = !DILocalVariable(name: "recoverable", scope: !7090, file: !7091, line: 1041, type: !157)
!7115 = !DILocalVariable(name: "nested_exc", scope: !7090, file: !7091, line: 1041, type: !157)
!7116 = !DILocalVariable(name: "esf", scope: !7090, file: !7091, line: 1042, type: !2867)
!7117 = !DILocalVariable(name: "esf_copy", scope: !7090, file: !7091, line: 1047, type: !2868)
!7118 = !DILocation(line: 0, scope: !7090)
!7119 = !DILocation(line: 1040, column: 19, scope: !7090)
!7120 = !DILocation(line: 1040, column: 24, scope: !7090)
!7121 = !DILocation(line: 1041, column: 2, scope: !7090)
!7122 = !DILocation(line: 1047, column: 2, scope: !7090)
!7123 = !DILocation(line: 1047, column: 15, scope: !7090)
!7124 = !DILocalVariable(name: "key", arg: 1, scope: !7125, file: !5770, line: 84, type: !32)
!7125 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5770, file: !5770, line: 84, type: !5781, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7126)
!7126 = !{!7124}
!7127 = !DILocation(line: 0, scope: !7125, inlinedAt: !7128)
!7128 = distinct !DILocation(line: 1050, column: 2, scope: !7090)
!7129 = !DILocation(line: 95, column: 2, scope: !7125, inlinedAt: !7128)
!7130 = !{i64 1981013}
!7131 = !DILocation(line: 1055, column: 9, scope: !7090)
!7132 = !DILocation(line: 1063, column: 11, scope: !7090)
!7133 = !DILocation(line: 1064, column: 6, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7090, file: !7091, line: 1064, column: 6)
!7135 = !{i8 0, i8 2}
!7136 = !DILocation(line: 1064, column: 6, scope: !7090)
!7137 = !DILocation(line: 1070, column: 20, scope: !7090)
!7138 = !DILocation(line: 1070, column: 2, scope: !7090)
!7139 = !DILocation(line: 1089, column: 6, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7090, file: !7091, line: 1089, column: 6)
!7141 = !DILocation(line: 0, scope: !7140)
!7142 = !DILocation(line: 1089, column: 6, scope: !7090)
!7143 = !DILocation(line: 1090, column: 28, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !7091, line: 1090, column: 7)
!7145 = distinct !DILexicalBlock(scope: !7140, file: !7091, line: 1089, column: 18)
!7146 = !DILocation(line: 1090, column: 44, scope: !7144)
!7147 = !DILocation(line: 1090, column: 7, scope: !7145)
!7148 = !DILocation(line: 1091, column: 24, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7144, file: !7091, line: 1090, column: 50)
!7150 = !DILocation(line: 1092, column: 3, scope: !7149)
!7151 = !DILocation(line: 1094, column: 23, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7140, file: !7091, line: 1093, column: 9)
!7153 = !DILocation(line: 1097, column: 2, scope: !7090)
!7154 = !DILocation(line: 1098, column: 1, scope: !7090)
!7155 = distinct !DISubprogram(name: "get_esf", scope: !7091, file: !7091, line: 894, type: !7156, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7159)
!7156 = !DISubroutineType(types: !7157)
!7157 = !{!2867, !121, !121, !121, !7158}
!7158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!7159 = !{!7160, !7161, !7162, !7163, !7164, !7165}
!7160 = !DILocalVariable(name: "msp", arg: 1, scope: !7155, file: !7091, line: 894, type: !121)
!7161 = !DILocalVariable(name: "psp", arg: 2, scope: !7155, file: !7091, line: 894, type: !121)
!7162 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7155, file: !7091, line: 894, type: !121)
!7163 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7155, file: !7091, line: 895, type: !7158)
!7164 = !DILocalVariable(name: "alternative_state_exc", scope: !7155, file: !7091, line: 897, type: !157)
!7165 = !DILocalVariable(name: "ptr_esf", scope: !7155, file: !7091, line: 898, type: !2867)
!7166 = !DILocation(line: 0, scope: !7155)
!7167 = !DILocation(line: 900, column: 14, scope: !7155)
!7168 = !DILocation(line: 902, column: 49, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7155, file: !7091, line: 902, column: 6)
!7170 = !DILocation(line: 902, column: 6, scope: !7155)
!7171 = !DILocation(line: 983, column: 18, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7155, file: !7091, line: 983, column: 6)
!7173 = !DILocation(line: 991, column: 7, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7175, file: !7091, line: 990, column: 30)
!7175 = distinct !DILexicalBlock(scope: !7155, file: !7091, line: 990, column: 6)
!7176 = !DILocation(line: 998, column: 16, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !7091, line: 995, column: 10)
!7178 = distinct !DILexicalBlock(scope: !7174, file: !7091, line: 991, column: 7)
!7179 = !DILocation(line: 1002, column: 2, scope: !7155)
!7180 = !DILocation(line: 1003, column: 1, scope: !7155)
!7181 = distinct !DISubprogram(name: "fault_handle", scope: !7091, file: !7091, line: 786, type: !7182, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7184)
!7182 = !DISubroutineType(types: !7183)
!7183 = !{!121, !2867, !103, !7158}
!7184 = !{!7185, !7186, !7187, !7188}
!7185 = !DILocalVariable(name: "esf", arg: 1, scope: !7181, file: !7091, line: 786, type: !2867)
!7186 = !DILocalVariable(name: "fault", arg: 2, scope: !7181, file: !7091, line: 786, type: !103)
!7187 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7181, file: !7091, line: 786, type: !7158)
!7188 = !DILocalVariable(name: "reason", scope: !7181, file: !7091, line: 788, type: !121)
!7189 = !DILocation(line: 0, scope: !7181)
!7190 = !DILocation(line: 790, column: 15, scope: !7181)
!7191 = !DILocation(line: 792, column: 2, scope: !7181)
!7192 = !DILocation(line: 794, column: 12, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7181, file: !7091, line: 792, column: 17)
!7194 = !DILocation(line: 795, column: 3, scope: !7193)
!7195 = !DILocation(line: 800, column: 12, scope: !7193)
!7196 = !DILocation(line: 801, column: 3, scope: !7193)
!7197 = !DILocation(line: 803, column: 12, scope: !7193)
!7198 = !DILocation(line: 804, column: 3, scope: !7193)
!7199 = !DILocation(line: 806, column: 12, scope: !7193)
!7200 = !DILocation(line: 807, column: 3, scope: !7193)
!7201 = !DILocation(line: 814, column: 3, scope: !7193)
!7202 = !DILocation(line: 815, column: 3, scope: !7193)
!7203 = !DILocation(line: 829, column: 2, scope: !7181)
!7204 = distinct !DISubprogram(name: "hard_fault", scope: !7091, file: !7091, line: 709, type: !7205, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7207)
!7205 = !DISubroutineType(types: !7206)
!7206 = !{!121, !2867, !7158}
!7207 = !{!7208, !7209, !7210}
!7208 = !DILocalVariable(name: "esf", arg: 1, scope: !7204, file: !7091, line: 709, type: !2867)
!7209 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7204, file: !7091, line: 709, type: !7158)
!7210 = !DILocalVariable(name: "reason", scope: !7204, file: !7091, line: 711, type: !121)
!7211 = !DILocation(line: 0, scope: !7204)
!7212 = !DILocation(line: 732, column: 15, scope: !7204)
!7213 = !DILocation(line: 734, column: 12, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7204, file: !7091, line: 734, column: 6)
!7215 = !DILocation(line: 734, column: 17, scope: !7214)
!7216 = !DILocation(line: 734, column: 41, scope: !7214)
!7217 = !DILocation(line: 734, column: 6, scope: !7204)
!7218 = !DILocation(line: 736, column: 19, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7214, file: !7091, line: 736, column: 13)
!7220 = !DILocation(line: 736, column: 49, scope: !7219)
!7221 = !DILocation(line: 736, column: 13, scope: !7214)
!7222 = !DILocation(line: 738, column: 19, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7219, file: !7091, line: 738, column: 13)
!7224 = !DILocation(line: 738, column: 24, scope: !7223)
!7225 = !DILocation(line: 738, column: 47, scope: !7223)
!7226 = !DILocation(line: 738, column: 13, scope: !7219)
!7227 = !DILocation(line: 740, column: 7, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !7091, line: 740, column: 7)
!7229 = distinct !DILexicalBlock(scope: !7223, file: !7091, line: 738, column: 53)
!7230 = !DILocation(line: 740, column: 7, scope: !7229)
!7231 = !DILocation(line: 742, column: 24, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7228, file: !7091, line: 740, column: 38)
!7233 = !DILocation(line: 743, column: 3, scope: !7232)
!7234 = !DILocation(line: 743, column: 20, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7228, file: !7091, line: 743, column: 14)
!7236 = !DILocation(line: 743, column: 25, scope: !7235)
!7237 = !DILocation(line: 743, column: 52, scope: !7235)
!7238 = !DILocation(line: 743, column: 14, scope: !7228)
!7239 = !DILocation(line: 744, column: 13, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7235, file: !7091, line: 743, column: 58)
!7241 = !DILocation(line: 745, column: 3, scope: !7240)
!7242 = !DILocation(line: 745, column: 20, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7235, file: !7091, line: 745, column: 14)
!7244 = !DILocation(line: 745, column: 25, scope: !7243)
!7245 = !DILocation(line: 745, column: 52, scope: !7243)
!7246 = !DILocation(line: 745, column: 14, scope: !7235)
!7247 = !DILocation(line: 746, column: 13, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7243, file: !7091, line: 745, column: 58)
!7249 = !DILocation(line: 747, column: 3, scope: !7248)
!7250 = !DILocation(line: 747, column: 20, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7243, file: !7091, line: 747, column: 14)
!7252 = !DILocation(line: 747, column: 52, scope: !7251)
!7253 = !DILocation(line: 747, column: 14, scope: !7243)
!7254 = !DILocation(line: 748, column: 13, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7251, file: !7091, line: 747, column: 58)
!7256 = !DILocation(line: 753, column: 3, scope: !7255)
!7257 = !DILocation(line: 766, column: 2, scope: !7204)
!7258 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7091, file: !7091, line: 229, type: !7182, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7259)
!7259 = !{!7260, !7261, !7262, !7263, !7264, !7265, !7268}
!7260 = !DILocalVariable(name: "esf", arg: 1, scope: !7258, file: !7091, line: 229, type: !2867)
!7261 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7258, file: !7091, line: 229, type: !103)
!7262 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7258, file: !7091, line: 230, type: !7158)
!7263 = !DILocalVariable(name: "reason", scope: !7258, file: !7091, line: 232, type: !121)
!7264 = !DILocalVariable(name: "mmfar", scope: !7258, file: !7091, line: 233, type: !121)
!7265 = !DILocalVariable(name: "temp", scope: !7266, file: !7091, line: 254, type: !121)
!7266 = distinct !DILexicalBlock(scope: !7267, file: !7091, line: 244, column: 48)
!7267 = distinct !DILexicalBlock(scope: !7258, file: !7091, line: 244, column: 6)
!7268 = !DILocalVariable(name: "min_stack_ptr", scope: !7269, file: !7091, line: 309, type: !121)
!7269 = distinct !DILexicalBlock(scope: !7270, file: !7091, line: 308, column: 43)
!7270 = distinct !DILexicalBlock(scope: !7271, file: !7091, line: 308, column: 7)
!7271 = distinct !DILexicalBlock(scope: !7272, file: !7091, line: 289, column: 40)
!7272 = distinct !DILexicalBlock(scope: !7258, file: !7091, line: 288, column: 6)
!7273 = !DILocation(line: 0, scope: !7258)
!7274 = !DILocation(line: 237, column: 12, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7258, file: !7091, line: 237, column: 6)
!7276 = !DILocation(line: 241, column: 12, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7258, file: !7091, line: 241, column: 6)
!7278 = !DILocation(line: 244, column: 12, scope: !7267)
!7279 = !DILocation(line: 244, column: 17, scope: !7267)
!7280 = !DILocation(line: 244, column: 42, scope: !7267)
!7281 = !DILocation(line: 244, column: 6, scope: !7258)
!7282 = !DILocation(line: 254, column: 24, scope: !7266)
!7283 = !DILocation(line: 0, scope: !7266)
!7284 = !DILocation(line: 256, column: 13, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7266, file: !7091, line: 256, column: 7)
!7286 = !DILocation(line: 256, column: 18, scope: !7285)
!7287 = !DILocation(line: 256, column: 44, scope: !7285)
!7288 = !DILocation(line: 256, column: 7, scope: !7266)
!7289 = !DILocation(line: 259, column: 24, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !7091, line: 259, column: 8)
!7291 = distinct !DILexicalBlock(scope: !7285, file: !7091, line: 256, column: 50)
!7292 = !DILocation(line: 259, column: 8, scope: !7291)
!7293 = !DILocation(line: 261, column: 15, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7290, file: !7091, line: 259, column: 30)
!7295 = !DILocation(line: 262, column: 4, scope: !7294)
!7296 = !DILocation(line: 265, column: 12, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7258, file: !7091, line: 265, column: 6)
!7298 = !DILocation(line: 269, column: 12, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7258, file: !7091, line: 269, column: 6)
!7300 = !DILocation(line: 288, column: 12, scope: !7272)
!7301 = !DILocation(line: 288, column: 17, scope: !7272)
!7302 = !DILocation(line: 288, column: 41, scope: !7272)
!7303 = !DILocation(line: 289, column: 9, scope: !7272)
!7304 = !DILocation(line: 289, column: 14, scope: !7272)
!7305 = !DILocation(line: 288, column: 6, scope: !7258)
!7306 = !DILocation(line: 308, column: 12, scope: !7270)
!7307 = !DILocation(line: 308, column: 17, scope: !7270)
!7308 = !DILocation(line: 308, column: 7, scope: !7271)
!7309 = !DILocation(line: 310, column: 6, scope: !7269)
!7310 = !DILocation(line: 309, column: 29, scope: !7269)
!7311 = !DILocation(line: 0, scope: !7269)
!7312 = !DILocation(line: 312, column: 8, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7269, file: !7091, line: 312, column: 8)
!7314 = !DILocation(line: 312, column: 8, scope: !7269)
!7315 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7316, file: !6790, line: 1099, type: !121)
!7316 = distinct !DISubprogram(name: "__set_PSP", scope: !6790, file: !6790, line: 1099, type: !6881, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7317)
!7317 = !{!7315}
!7318 = !DILocation(line: 0, scope: !7316, inlinedAt: !7319)
!7319 = distinct !DILocation(line: 338, column: 5, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7313, file: !7091, line: 312, column: 23)
!7321 = !DILocation(line: 1101, column: 3, scope: !7316, inlinedAt: !7319)
!7322 = !{i64 2859542}
!7323 = !DILocation(line: 341, column: 4, scope: !7320)
!7324 = !DILocation(line: 360, column: 12, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7258, file: !7091, line: 360, column: 6)
!7326 = !DILocation(line: 360, column: 17, scope: !7325)
!7327 = !DILocation(line: 360, column: 41, scope: !7325)
!7328 = !DILocation(line: 360, column: 6, scope: !7258)
!7329 = !DILocation(line: 361, column: 14, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7325, file: !7091, line: 360, column: 47)
!7331 = !DILocation(line: 362, column: 2, scope: !7330)
!7332 = !DILocation(line: 366, column: 12, scope: !7258)
!7333 = !DILocation(line: 369, column: 15, scope: !7258)
!7334 = !DILocation(line: 371, column: 2, scope: !7258)
!7335 = distinct !DISubprogram(name: "bus_fault", scope: !7091, file: !7091, line: 383, type: !7336, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7338)
!7336 = !DISubroutineType(types: !7337)
!7337 = !{!103, !2867, !103, !7158}
!7338 = !{!7339, !7340, !7341, !7342, !7343}
!7339 = !DILocalVariable(name: "esf", arg: 1, scope: !7335, file: !7091, line: 383, type: !2867)
!7340 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7335, file: !7091, line: 383, type: !103)
!7341 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7335, file: !7091, line: 383, type: !7158)
!7342 = !DILocalVariable(name: "reason", scope: !7335, file: !7091, line: 385, type: !121)
!7343 = !DILocalVariable(name: "bfar", scope: !7344, file: !7091, line: 405, type: !121)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !7091, line: 395, column: 42)
!7345 = distinct !DILexicalBlock(scope: !7335, file: !7091, line: 395, column: 6)
!7346 = !DILocation(line: 0, scope: !7335)
!7347 = !DILocation(line: 389, column: 11, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7335, file: !7091, line: 389, column: 6)
!7349 = !DILocation(line: 392, column: 11, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7335, file: !7091, line: 392, column: 6)
!7351 = !DILocation(line: 395, column: 11, scope: !7345)
!7352 = !DILocation(line: 395, column: 16, scope: !7345)
!7353 = !DILocation(line: 395, column: 6, scope: !7335)
!7354 = !DILocation(line: 405, column: 3, scope: !7344)
!7355 = !DILocation(line: 0, scope: !7344)
!7356 = !DILocation(line: 407, column: 13, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7344, file: !7091, line: 407, column: 7)
!7358 = !DILocation(line: 407, column: 18, scope: !7357)
!7359 = !DILocation(line: 407, column: 44, scope: !7357)
!7360 = !DILocation(line: 407, column: 7, scope: !7344)
!7361 = !DILocation(line: 411, column: 15, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7363, file: !7091, line: 409, column: 30)
!7363 = distinct !DILexicalBlock(scope: !7364, file: !7091, line: 409, column: 8)
!7364 = distinct !DILexicalBlock(scope: !7357, file: !7091, line: 407, column: 50)
!7365 = !DILocation(line: 412, column: 4, scope: !7362)
!7366 = !DILocation(line: 415, column: 11, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7335, file: !7091, line: 415, column: 6)
!7368 = !DILocation(line: 418, column: 12, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7335, file: !7091, line: 418, column: 6)
!7370 = !DILocation(line: 418, column: 17, scope: !7369)
!7371 = !DILocation(line: 418, column: 41, scope: !7369)
!7372 = !DILocation(line: 418, column: 6, scope: !7335)
!7373 = !DILocation(line: 423, column: 18, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7369, file: !7091, line: 423, column: 13)
!7375 = !DILocation(line: 524, column: 12, scope: !7335)
!7376 = !DILocation(line: 526, column: 15, scope: !7335)
!7377 = !DILocation(line: 528, column: 2, scope: !7335)
!7378 = distinct !DISubprogram(name: "usage_fault", scope: !7091, file: !7091, line: 539, type: !7379, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7383)
!7379 = !DISubroutineType(types: !7380)
!7380 = !{!121, !7381}
!7381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7382, size: 32)
!7382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2868)
!7383 = !{!7384, !7385}
!7384 = !DILocalVariable(name: "esf", arg: 1, scope: !7378, file: !7091, line: 539, type: !7381)
!7385 = !DILocalVariable(name: "reason", scope: !7378, file: !7091, line: 541, type: !121)
!7386 = !DILocation(line: 0, scope: !7378)
!7387 = !DILocation(line: 546, column: 12, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7378, file: !7091, line: 546, column: 6)
!7389 = !DILocation(line: 549, column: 12, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7378, file: !7091, line: 549, column: 6)
!7391 = !DILocation(line: 567, column: 12, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7378, file: !7091, line: 567, column: 6)
!7393 = !DILocation(line: 570, column: 12, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7378, file: !7091, line: 570, column: 6)
!7395 = !DILocation(line: 573, column: 12, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7378, file: !7091, line: 573, column: 6)
!7397 = !DILocation(line: 576, column: 12, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7378, file: !7091, line: 576, column: 6)
!7399 = !DILocation(line: 581, column: 12, scope: !7378)
!7400 = !DILocation(line: 583, column: 2, scope: !7378)
!7401 = distinct !DISubprogram(name: "debug_monitor", scope: !7091, file: !7091, line: 632, type: !7402, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7404)
!7402 = !DISubroutineType(types: !7403)
!7403 = !{null, !2867, !7158}
!7404 = !{!7405, !7406}
!7405 = !DILocalVariable(name: "esf", arg: 1, scope: !7401, file: !7091, line: 632, type: !2867)
!7406 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7401, file: !7091, line: 632, type: !7158)
!7407 = !DILocation(line: 0, scope: !7401)
!7408 = !DILocation(line: 634, column: 15, scope: !7401)
!7409 = !DILocation(line: 652, column: 1, scope: !7401)
!7410 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7091, file: !7091, line: 658, type: !7411, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7413)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{!157, !2867}
!7413 = !{!7414, !7415, !7416}
!7414 = !DILocalVariable(name: "esf", arg: 1, scope: !7410, file: !7091, line: 658, type: !2867)
!7415 = !DILocalVariable(name: "ret_addr", scope: !7410, file: !7091, line: 660, type: !2559)
!7416 = !DILocalVariable(name: "fault_insn", scope: !7410, file: !7091, line: 686, type: !328)
!7417 = !DILocation(line: 0, scope: !7410)
!7418 = !DILocation(line: 660, column: 46, scope: !7410)
!7419 = !DILocation(line: 660, column: 23, scope: !7410)
!7420 = !DILocation(line: 682, column: 11, scope: !7410)
!7421 = !DILocation(line: 271, column: 3, scope: !7422, inlinedAt: !7423)
!7422 = distinct !DISubprogram(name: "__DSB", scope: !6790, file: !6790, line: 269, type: !3220, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !461)
!7423 = distinct !DILocation(line: 683, column: 2, scope: !7410)
!7424 = !{i64 2835677}
!7425 = !DILocation(line: 260, column: 3, scope: !7426, inlinedAt: !7427)
!7426 = distinct !DISubprogram(name: "__ISB", scope: !6790, file: !6790, line: 258, type: !3220, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !461)
!7427 = distinct !DILocation(line: 684, column: 2, scope: !7410)
!7428 = !{i64 2835394}
!7429 = !DILocation(line: 686, column: 35, scope: !7410)
!7430 = !DILocation(line: 686, column: 24, scope: !7410)
!7431 = !DILocation(line: 688, column: 11, scope: !7410)
!7432 = !DILocation(line: 271, column: 3, scope: !7422, inlinedAt: !7433)
!7433 = distinct !DILocation(line: 689, column: 2, scope: !7410)
!7434 = !DILocation(line: 260, column: 3, scope: !7426, inlinedAt: !7435)
!7435 = distinct !DILocation(line: 690, column: 2, scope: !7410)
!7436 = !DILocation(line: 693, column: 45, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7410, file: !7091, line: 693, column: 6)
!7438 = !DILocation(line: 699, column: 1, scope: !7410)
!7439 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7091, file: !7091, line: 1107, type: !3220, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !461)
!7440 = !DILocation(line: 1111, column: 11, scope: !7439)
!7441 = !DILocation(line: 1136, column: 1, scope: !7439)
!7442 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7443, file: !7443, line: 26, type: !3220, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2910, retainedNodes: !7444)
!7443 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7444 = !{!7445}
!7445 = !DILocalVariable(name: "irq", scope: !7442, file: !7443, line: 28, type: !103)
!7446 = !DILocation(line: 0, scope: !7442)
!7447 = !DILocation(line: 30, column: 2, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7442, file: !7443, line: 30, column: 2)
!7449 = !DILocation(line: 31, column: 3, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !7443, line: 30, column: 39)
!7451 = distinct !DILexicalBlock(scope: !7448, file: !7443, line: 30, column: 2)
!7452 = !DILocation(line: 30, column: 35, scope: !7451)
!7453 = !DILocation(line: 30, column: 13, scope: !7451)
!7454 = distinct !{!7454, !7447, !7455}
!7455 = !DILocation(line: 32, column: 2, scope: !7448)
!7456 = !DILocation(line: 33, column: 1, scope: !7442)
!7457 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6824, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2910, retainedNodes: !7458)
!7458 = !{!7459, !7460}
!7459 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7457, file: !495, line: 1814, type: !730)
!7460 = !DILocalVariable(name: "priority", arg: 2, scope: !7457, file: !495, line: 1814, type: !121)
!7461 = !DILocation(line: 0, scope: !7457)
!7462 = !DILocation(line: 1816, column: 7, scope: !7457)
!7463 = !DILocation(line: 0, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7457, file: !495, line: 1816, column: 7)
!7465 = !DILocation(line: 1824, column: 1, scope: !7457)
!7466 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7467, file: !7467, line: 27, type: !7468, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !7571)
!7467 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7468 = !DISubroutineType(types: !7469)
!7469 = !{null, !7470}
!7470 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !7471)
!7471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7472, size: 32)
!7472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !7473)
!7473 = !{!7474, !7532, !7544, !7545, !7546, !7547, !7553, !7566}
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7472, file: !355, line: 247, baseType: !7475, size: 384)
!7475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !7476)
!7476 = !{!7477, !7501, !7508, !7509, !7510, !7519, !7520, !7521}
!7477 = !DIDerivedType(tag: DW_TAG_member, scope: !7475, file: !355, line: 60, baseType: !7478, size: 64)
!7478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7475, file: !355, line: 60, size: 64, elements: !7479)
!7479 = !{!7480, !7495}
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7478, file: !355, line: 61, baseType: !7481, size: 64)
!7481 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !7482)
!7482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !7483)
!7483 = !{!7484, !7490}
!7484 = !DIDerivedType(tag: DW_TAG_member, scope: !7482, file: !309, line: 38, baseType: !7485, size: 32)
!7485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7482, file: !309, line: 38, size: 32, elements: !7486)
!7486 = !{!7487, !7489}
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7485, file: !309, line: 39, baseType: !7488, size: 32)
!7488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7482, size: 32)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7485, file: !309, line: 40, baseType: !7488, size: 32)
!7490 = !DIDerivedType(tag: DW_TAG_member, scope: !7482, file: !309, line: 42, baseType: !7491, size: 32, offset: 32)
!7491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7482, file: !309, line: 42, size: 32, elements: !7492)
!7492 = !{!7493, !7494}
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7491, file: !309, line: 43, baseType: !7488, size: 32)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7491, file: !309, line: 44, baseType: !7488, size: 32)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7478, file: !355, line: 62, baseType: !7496, size: 64)
!7496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !7497)
!7497 = !{!7498}
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7496, file: !380, line: 50, baseType: !7499, size: 64)
!7499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7500, size: 64, elements: !385)
!7500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7496, size: 32)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7475, file: !355, line: 68, baseType: !7502, size: 32, offset: 64)
!7502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7503, size: 32)
!7503 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !7504)
!7504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !7505)
!7505 = !{!7506}
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7504, file: !304, line: 232, baseType: !7507, size: 64)
!7507 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !7482)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7475, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7475, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!7510 = !DIDerivedType(tag: DW_TAG_member, scope: !7475, file: !355, line: 90, baseType: !7511, size: 16, offset: 112)
!7511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7475, file: !355, line: 90, size: 16, elements: !7512)
!7512 = !{!7513, !7518}
!7513 = !DIDerivedType(tag: DW_TAG_member, scope: !7511, file: !355, line: 91, baseType: !7514, size: 16)
!7514 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7511, file: !355, line: 91, size: 16, elements: !7515)
!7515 = !{!7516, !7517}
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7514, file: !355, line: 96, baseType: !403, size: 8)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7514, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7511, file: !355, line: 100, baseType: !328, size: 16)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7475, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7475, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7475, file: !355, line: 131, baseType: !7522, size: 192, offset: 192)
!7522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !7523)
!7523 = !{!7524, !7525, !7531}
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7522, file: !304, line: 245, baseType: !7481, size: 64)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7522, file: !304, line: 246, baseType: !7526, size: 32, offset: 64)
!7526 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !7527)
!7527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7528, size: 32)
!7528 = !DISubroutineType(types: !7529)
!7529 = !{null, !7530}
!7530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7522, size: 32)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7522, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7472, file: !355, line: 250, baseType: !7533, size: 288, offset: 384)
!7533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !7534)
!7534 = !{!7535, !7536, !7537, !7538, !7539, !7540, !7541, !7542, !7543}
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7533, file: !424, line: 26, baseType: !121, size: 32)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7533, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7533, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7533, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7533, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7533, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7533, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7533, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7533, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7472, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7472, file: !355, line: 256, baseType: !7503, size: 64, offset: 704)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7472, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7472, file: !355, line: 300, baseType: !7548, size: 96, offset: 800)
!7548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !7549)
!7549 = !{!7550, !7551, !7552}
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7548, file: !355, line: 153, baseType: !22, size: 32)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7548, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7548, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7472, file: !355, line: 325, baseType: !7554, size: 32, offset: 896)
!7554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7555, size: 32)
!7555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !7556)
!7556 = !{!7557, !7563, !7564}
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7555, file: !300, line: 5074, baseType: !7558, size: 96)
!7558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !7559)
!7559 = !{!7560, !7561, !7562}
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7558, file: !450, line: 57, baseType: !453, size: 32)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7558, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7558, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7555, file: !300, line: 5075, baseType: !7503, size: 64, offset: 96)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7555, file: !300, line: 5076, baseType: !7565, offset: 160)
!7565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7472, file: !355, line: 343, baseType: !7567, size: 64, offset: 928)
!7567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !7568)
!7568 = !{!7569, !7570}
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7567, file: !424, line: 63, baseType: !121, size: 32)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7567, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!7571 = !{!7572}
!7572 = !DILocalVariable(name: "thread", arg: 1, scope: !7466, file: !7467, line: 27, type: !7470)
!7573 = !DILocation(line: 0, scope: !7466)
!7574 = !DILocation(line: 29, column: 6, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7466, file: !7467, line: 29, column: 6)
!7576 = !DILocation(line: 29, column: 15, scope: !7575)
!7577 = !DILocation(line: 29, column: 6, scope: !7466)
!7578 = !DILocation(line: 1031, column: 3, scope: !7579, inlinedAt: !7582)
!7579 = distinct !DISubprogram(name: "__get_IPSR", scope: !6790, file: !6790, line: 1027, type: !6871, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !7580)
!7580 = !{!7581}
!7581 = !DILocalVariable(name: "result", scope: !7579, file: !6790, line: 1029, type: !121)
!7582 = distinct !DILocation(line: 48, column: 10, scope: !7583, inlinedAt: !7587)
!7583 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7584, file: !7584, line: 46, type: !7585, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2955, retainedNodes: !461)
!7584 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7585 = !DISubroutineType(types: !7586)
!7586 = !{!157}
!7587 = distinct !DILocation(line: 30, column: 7, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !7467, line: 30, column: 7)
!7589 = distinct !DILexicalBlock(scope: !7575, file: !7467, line: 29, column: 26)
!7590 = !{i64 2824525}
!7591 = !DILocation(line: 0, scope: !7579, inlinedAt: !7582)
!7592 = !DILocation(line: 48, column: 9, scope: !7583, inlinedAt: !7587)
!7593 = !DILocation(line: 30, column: 7, scope: !7589)
!7594 = !DILocation(line: 42, column: 14, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7588, file: !7467, line: 30, column: 25)
!7596 = !DILocation(line: 48, column: 15, scope: !7595)
!7597 = !DILocation(line: 49, column: 3, scope: !7595)
!7598 = !DILocation(line: 52, column: 2, scope: !7466)
!7599 = !DILocation(line: 53, column: 1, scope: !7466)
!7600 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !350, file: !350, line: 127, type: !3220, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !341, retainedNodes: !461)
!7601 = !DILocation(line: 134, column: 2, scope: !7600)
!7602 = !DILocation(line: 156, column: 1, scope: !7600)
!7603 = !DILocation(line: 0, scope: !349)
!7604 = !DILocation(line: 289, column: 36, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !349, file: !350, line: 285, column: 2)
!7606 = !DILocation(line: 289, column: 42, scope: !7605)
!7607 = !DILocation(line: 300, column: 36, scope: !349)
!7608 = !DILocation(line: 301, column: 35, scope: !349)
!7609 = !DILocation(line: 302, column: 37, scope: !349)
!7610 = !DILocation(line: 311, column: 2, scope: !349)
!7611 = !DILocation(line: 316, column: 1, scope: !349)
!7612 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !523, file: !523, line: 180, type: !3220, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7613 = !DILocation(line: 188, column: 12, scope: !7612)
!7614 = !DILocation(line: 271, column: 3, scope: !7615, inlinedAt: !7616)
!7615 = distinct !DISubprogram(name: "__DSB", scope: !6790, file: !6790, line: 269, type: !3220, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7616 = distinct !DILocation(line: 192, column: 2, scope: !7612)
!7617 = !{i64 2984672}
!7618 = !DILocation(line: 260, column: 3, scope: !7619, inlinedAt: !7620)
!7619 = distinct !DISubprogram(name: "__ISB", scope: !6790, file: !6790, line: 258, type: !3220, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7620 = distinct !DILocation(line: 193, column: 2, scope: !7612)
!7621 = !{i64 2984389}
!7622 = !DILocation(line: 194, column: 1, scope: !7612)
!7623 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !523, file: !523, line: 199, type: !3220, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7624 = !DILocation(line: 282, column: 3, scope: !7625, inlinedAt: !7626)
!7625 = distinct !DISubprogram(name: "__DMB", scope: !6790, file: !6790, line: 280, type: !3220, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !461)
!7626 = distinct !DILocation(line: 202, column: 2, scope: !7623)
!7627 = !{i64 2984948}
!7628 = !DILocation(line: 205, column: 12, scope: !7623)
!7629 = !DILocation(line: 206, column: 1, scope: !7623)
!7630 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !523, file: !523, line: 275, type: !7631, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7644)
!7631 = !DISubroutineType(types: !7632)
!7632 = !{null, !7633, !256, !7058, !7058}
!7633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7634, size: 32)
!7634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7635)
!7635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !474, line: 52, size: 96, elements: !7636)
!7636 = !{!7637, !7638, !7639}
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7635, file: !474, line: 53, baseType: !22, size: 32)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7635, file: !474, line: 54, baseType: !344, size: 32, offset: 32)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7635, file: !474, line: 55, baseType: !7640, size: 32, offset: 64)
!7640 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !480, line: 151, baseType: !7641)
!7641 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 149, size: 32, elements: !7642)
!7642 = !{!7643}
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7641, file: !480, line: 150, baseType: !121, size: 32)
!7644 = !{!7645, !7646, !7647, !7648}
!7645 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7630, file: !523, line: 276, type: !7633)
!7646 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7630, file: !523, line: 276, type: !256)
!7647 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7630, file: !523, line: 277, type: !7058)
!7648 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7630, file: !523, line: 277, type: !7058)
!7649 = !DILocation(line: 0, scope: !7630)
!7650 = !DILocation(line: 279, column: 6, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7630, file: !523, line: 279, column: 6)
!7652 = !DILocation(line: 285, column: 1, scope: !7630)
!7653 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7654, file: !7654, line: 220, type: !7655, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7657)
!7654 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7655 = !DISubroutineType(types: !7656)
!7656 = !{!103, !7633, !256, !7058, !7058}
!7657 = !{!7658, !7659, !7660, !7661, !7662}
!7658 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7653, file: !7654, line: 221, type: !7633)
!7659 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7653, file: !7654, line: 221, type: !256)
!7660 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7653, file: !7654, line: 222, type: !7058)
!7661 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7653, file: !7654, line: 223, type: !7058)
!7662 = !DILocalVariable(name: "mpu_reg_index", scope: !7653, file: !7654, line: 225, type: !103)
!7663 = !DILocation(line: 0, scope: !7653)
!7664 = !DILocation(line: 225, column: 22, scope: !7653)
!7665 = !DILocation(line: 233, column: 18, scope: !7653)
!7666 = !DILocation(line: 236, column: 23, scope: !7653)
!7667 = !DILocation(line: 236, column: 21, scope: !7653)
!7668 = !DILocation(line: 238, column: 2, scope: !7653)
!7669 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !523, file: !523, line: 105, type: !7670, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7672)
!7670 = !DISubroutineType(types: !7671)
!7671 = !{!103, !7633, !154, !154, !157}
!7672 = !{!7673, !7674, !7675, !7676, !7677, !7678}
!7673 = !DILocalVariable(name: "regions", arg: 1, scope: !7669, file: !523, line: 106, type: !7633)
!7674 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7669, file: !523, line: 106, type: !154)
!7675 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7669, file: !523, line: 106, type: !154)
!7676 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7669, file: !523, line: 107, type: !157)
!7677 = !DILocalVariable(name: "i", scope: !7669, file: !523, line: 109, type: !103)
!7678 = !DILocalVariable(name: "reg_index", scope: !7669, file: !523, line: 110, type: !103)
!7679 = !DILocation(line: 0, scope: !7669)
!7680 = !DILocation(line: 110, column: 18, scope: !7669)
!7681 = !DILocation(line: 112, column: 16, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7683, file: !523, line: 112, column: 2)
!7683 = distinct !DILexicalBlock(scope: !7669, file: !523, line: 112, column: 2)
!7684 = !DILocation(line: 112, column: 2, scope: !7683)
!7685 = !DILocation(line: 113, column: 7, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7687, file: !523, line: 113, column: 7)
!7687 = distinct !DILexicalBlock(scope: !7682, file: !523, line: 112, column: 36)
!7688 = !DILocation(line: 113, column: 18, scope: !7686)
!7689 = !DILocation(line: 113, column: 23, scope: !7686)
!7690 = !DILocation(line: 113, column: 7, scope: !7687)
!7691 = !DILocation(line: 118, column: 23, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7687, file: !523, line: 118, column: 7)
!7693 = !DILocation(line: 119, column: 7, scope: !7692)
!7694 = !DILocation(line: 118, column: 7, scope: !7687)
!7695 = !DILocation(line: 124, column: 36, scope: !7687)
!7696 = !DILocation(line: 124, column: 15, scope: !7687)
!7697 = !DILocation(line: 126, column: 17, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7687, file: !523, line: 126, column: 7)
!7699 = !DILocation(line: 126, column: 7, scope: !7687)
!7700 = !DILocation(line: 131, column: 12, scope: !7687)
!7701 = !DILocation(line: 132, column: 2, scope: !7687)
!7702 = !DILocation(line: 112, column: 32, scope: !7682)
!7703 = distinct !{!7703, !7684, !7704}
!7704 = !DILocation(line: 132, column: 2, scope: !7683)
!7705 = !DILocation(line: 135, column: 1, scope: !7669)
!7706 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7654, file: !7654, line: 63, type: !7707, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7709)
!7707 = !DISubroutineType(types: !7708)
!7708 = !{!103, !7633}
!7709 = !{!7710, !7711}
!7710 = !DILocalVariable(name: "part", arg: 1, scope: !7706, file: !7654, line: 63, type: !7633)
!7711 = !DILocalVariable(name: "partition_is_valid", scope: !7706, file: !7654, line: 70, type: !103)
!7712 = !DILocation(line: 0, scope: !7706)
!7713 = !DILocation(line: 71, column: 11, scope: !7706)
!7714 = !DILocation(line: 71, column: 37, scope: !7706)
!7715 = !DILocation(line: 72, column: 3, scope: !7706)
!7716 = !DILocation(line: 71, column: 30, scope: !7706)
!7717 = !DILocation(line: 75, column: 11, scope: !7706)
!7718 = !DILocation(line: 75, column: 17, scope: !7706)
!7719 = !DILocation(line: 75, column: 38, scope: !7706)
!7720 = !DILocation(line: 77, column: 2, scope: !7706)
!7721 = distinct !DISubprogram(name: "mpu_configure_region", scope: !523, file: !523, line: 79, type: !7722, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7724)
!7722 = !DISubroutineType(types: !7723)
!7723 = !{!103, !256, !7633}
!7724 = !{!7725, !7726, !7727}
!7725 = !DILocalVariable(name: "index", arg: 1, scope: !7721, file: !523, line: 79, type: !256)
!7726 = !DILocalVariable(name: "new_region", arg: 2, scope: !7721, file: !523, line: 80, type: !7633)
!7727 = !DILocalVariable(name: "region_conf", scope: !7721, file: !523, line: 82, type: !512)
!7728 = !DILocation(line: 0, scope: !7721)
!7729 = !DILocation(line: 82, column: 2, scope: !7721)
!7730 = !DILocation(line: 82, column: 24, scope: !7721)
!7731 = !DILocation(line: 87, column: 33, scope: !7721)
!7732 = !DILocation(line: 87, column: 14, scope: !7721)
!7733 = !DILocation(line: 87, column: 19, scope: !7721)
!7734 = !DILocation(line: 91, column: 55, scope: !7721)
!7735 = !DILocation(line: 92, column: 16, scope: !7721)
!7736 = !DILocation(line: 92, column: 53, scope: !7721)
!7737 = !DILocation(line: 91, column: 2, scope: !7721)
!7738 = !DILocation(line: 95, column: 9, scope: !7721)
!7739 = !DILocation(line: 97, column: 1, scope: !7721)
!7740 = !DILocation(line: 95, column: 2, scope: !7721)
!7741 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7654, file: !7654, line: 113, type: !7742, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7747)
!7742 = !DISubroutineType(types: !7743)
!7743 = !{null, !7744, !7745, !121, !121}
!7744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 32)
!7745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7746, size: 32)
!7746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7640)
!7747 = !{!7748, !7749, !7750, !7751}
!7748 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7741, file: !7654, line: 114, type: !7744)
!7749 = !DILocalVariable(name: "attr", arg: 2, scope: !7741, file: !7654, line: 115, type: !7745)
!7750 = !DILocalVariable(name: "base", arg: 3, scope: !7741, file: !7654, line: 115, type: !121)
!7751 = !DILocalVariable(name: "size", arg: 4, scope: !7741, file: !7654, line: 115, type: !121)
!7752 = !DILocation(line: 0, scope: !7741)
!7753 = !DILocation(line: 127, column: 23, scope: !7741)
!7754 = !DILocation(line: 127, column: 35, scope: !7741)
!7755 = !DILocation(line: 127, column: 33, scope: !7741)
!7756 = !DILocation(line: 127, column: 10, scope: !7741)
!7757 = !DILocation(line: 127, column: 15, scope: !7741)
!7758 = !DILocation(line: 129, column: 1, scope: !7741)
!7759 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !523, file: !523, line: 57, type: !7760, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7762)
!7760 = !DISubroutineType(types: !7761)
!7761 = !{!103, !256, !510}
!7762 = !{!7763, !7764}
!7763 = !DILocalVariable(name: "index", arg: 1, scope: !7759, file: !523, line: 57, type: !256)
!7764 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7759, file: !523, line: 58, type: !510)
!7765 = !DILocation(line: 0, scope: !7759)
!7766 = !DILocation(line: 61, column: 6, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7759, file: !523, line: 61, column: 6)
!7768 = !DILocation(line: 61, column: 12, scope: !7767)
!7769 = !DILocation(line: 61, column: 6, scope: !7759)
!7770 = !DILocation(line: 71, column: 2, scope: !7759)
!7771 = !DILocation(line: 73, column: 2, scope: !7759)
!7772 = !DILocation(line: 74, column: 1, scope: !7759)
!7773 = distinct !DISubprogram(name: "region_init", scope: !7654, file: !7654, line: 29, type: !7774, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7776)
!7774 = !DISubroutineType(types: !7775)
!7775 = !{null, !7058, !510}
!7776 = !{!7777, !7778}
!7777 = !DILocalVariable(name: "index", arg: 1, scope: !7773, file: !7654, line: 29, type: !7058)
!7778 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7773, file: !7654, line: 30, type: !510)
!7779 = !DILocation(line: 0, scope: !7773)
!7780 = !DILocation(line: 33, column: 2, scope: !7773)
!7781 = !DILocation(line: 47, column: 28, scope: !7773)
!7782 = !DILocation(line: 47, column: 33, scope: !7773)
!7783 = !DILocation(line: 48, column: 26, scope: !7773)
!7784 = !DILocation(line: 47, column: 12, scope: !7773)
!7785 = !DILocation(line: 49, column: 32, scope: !7773)
!7786 = !DILocation(line: 49, column: 37, scope: !7773)
!7787 = !DILocation(line: 49, column: 12, scope: !7773)
!7788 = !DILocation(line: 53, column: 1, scope: !7773)
!7789 = distinct !DISubprogram(name: "set_region_number", scope: !7790, file: !7790, line: 32, type: !6881, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7791)
!7790 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7791 = !{!7792}
!7792 = !DILocalVariable(name: "index", arg: 1, scope: !7789, file: !7790, line: 32, type: !121)
!7793 = !DILocation(line: 0, scope: !7789)
!7794 = !DILocation(line: 34, column: 11, scope: !7789)
!7795 = !DILocation(line: 35, column: 1, scope: !7789)
!7796 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7654, file: !7654, line: 88, type: !7797, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7799)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{!121, !121}
!7799 = !{!7800}
!7800 = !DILocalVariable(name: "size", arg: 1, scope: !7796, file: !7654, line: 88, type: !121)
!7801 = !DILocation(line: 0, scope: !7796)
!7802 = !DILocation(line: 91, column: 11, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7796, file: !7654, line: 91, column: 6)
!7804 = !DILocation(line: 91, column: 6, scope: !7796)
!7805 = !DILocation(line: 100, column: 11, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7796, file: !7654, line: 100, column: 6)
!7807 = !DILocation(line: 100, column: 6, scope: !7796)
!7808 = !DILocation(line: 104, column: 35, scope: !7796)
!7809 = !DILocation(line: 104, column: 16, scope: !7796)
!7810 = !DILocation(line: 104, column: 50, scope: !7796)
!7811 = !DILocation(line: 104, column: 72, scope: !7796)
!7812 = !DILocation(line: 104, column: 2, scope: !7796)
!7813 = !DILocation(line: 106, column: 1, scope: !7796)
!7814 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !523, file: !523, line: 307, type: !7815, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7817)
!7815 = !DISubroutineType(types: !7816)
!7816 = !{null, !7633, !154}
!7817 = !{!7818, !7819}
!7818 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7814, file: !523, line: 308, type: !7633)
!7819 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7814, file: !523, line: 308, type: !154)
!7820 = !DILocation(line: 0, scope: !7814)
!7821 = !DILocation(line: 310, column: 6, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7814, file: !523, line: 310, column: 6)
!7823 = !DILocation(line: 316, column: 1, scope: !7814)
!7824 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7654, file: !7654, line: 249, type: !7825, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7827)
!7825 = !DISubroutineType(types: !7826)
!7826 = !{!103, !7633, !154}
!7827 = !{!7828, !7829, !7830, !7831}
!7828 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7824, file: !7654, line: 250, type: !7633)
!7829 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7824, file: !7654, line: 250, type: !154)
!7830 = !DILocalVariable(name: "mpu_reg_index", scope: !7824, file: !7654, line: 252, type: !103)
!7831 = !DILocalVariable(name: "i", scope: !7832, file: !7654, line: 264, type: !103)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !7654, line: 264, column: 3)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !7654, line: 261, column: 32)
!7834 = distinct !DILexicalBlock(scope: !7824, file: !7654, line: 261, column: 6)
!7835 = !DILocation(line: 0, scope: !7824)
!7836 = !DILocation(line: 252, column: 22, scope: !7824)
!7837 = !DILocation(line: 258, column: 18, scope: !7824)
!7838 = !DILocation(line: 261, column: 20, scope: !7834)
!7839 = !DILocation(line: 261, column: 6, scope: !7824)
!7840 = !DILocation(line: 0, scope: !7832)
!7841 = !DILocation(line: 265, column: 4, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !7654, line: 264, column: 59)
!7843 = distinct !DILexicalBlock(scope: !7832, file: !7654, line: 264, column: 3)
!7844 = !DILocation(line: 264, column: 55, scope: !7843)
!7845 = !DILocation(line: 264, column: 33, scope: !7843)
!7846 = !DILocation(line: 264, column: 3, scope: !7832)
!7847 = distinct !{!7847, !7846, !7848}
!7848 = !DILocation(line: 266, column: 3, scope: !7832)
!7849 = !DILocation(line: 269, column: 2, scope: !7824)
!7850 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7851, file: !7851, line: 218, type: !6881, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7852)
!7851 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7852 = !{!7853}
!7853 = !DILocalVariable(name: "rnr", arg: 1, scope: !7850, file: !7851, line: 218, type: !121)
!7854 = !DILocation(line: 0, scope: !7850)
!7855 = !DILocation(line: 220, column: 12, scope: !7850)
!7856 = !DILocation(line: 221, column: 13, scope: !7850)
!7857 = !DILocation(line: 222, column: 1, scope: !7850)
!7858 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !523, file: !523, line: 326, type: !6594, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !490, retainedNodes: !7859)
!7859 = !{!7860}
!7860 = !DILocalVariable(name: "r_index", scope: !7858, file: !523, line: 328, type: !121)
!7861 = !DILocation(line: 330, column: 17, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7858, file: !523, line: 330, column: 6)
!7863 = !DILocation(line: 330, column: 29, scope: !7862)
!7864 = !DILocation(line: 330, column: 6, scope: !7858)
!7865 = !DILocation(line: 347, column: 2, scope: !7858)
!7866 = !DILocation(line: 0, scope: !7858)
!7867 = !DILocation(line: 364, column: 29, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7869, file: !523, line: 364, column: 2)
!7869 = distinct !DILexicalBlock(scope: !7858, file: !523, line: 364, column: 2)
!7870 = !DILocation(line: 364, column: 2, scope: !7869)
!7871 = !DILocation(line: 365, column: 25, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7868, file: !523, line: 364, column: 66)
!7873 = !DILocation(line: 365, column: 3, scope: !7872)
!7874 = !DILocation(line: 364, column: 62, scope: !7868)
!7875 = distinct !{!7875, !7870, !7876}
!7876 = !DILocation(line: 366, column: 2, scope: !7869)
!7877 = !DILocation(line: 369, column: 23, scope: !7858)
!7878 = !DILocation(line: 369, column: 21, scope: !7858)
!7879 = !DILocation(line: 372, column: 2, scope: !7858)
!7880 = !DILocation(line: 443, column: 2, scope: !7858)
!7881 = !DILocation(line: 444, column: 1, scope: !7858)
!7882 = distinct !DISubprogram(name: "strcpy", scope: !7883, file: !7883, line: 20, type: !7884, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !7888)
!7883 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7884 = !DISubroutineType(types: !7885)
!7885 = !{!1051, !7886, !7887}
!7886 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1051)
!7887 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!7888 = !{!7889, !7890, !7891}
!7889 = !DILocalVariable(name: "d", arg: 1, scope: !7882, file: !7883, line: 20, type: !7886)
!7890 = !DILocalVariable(name: "s", arg: 2, scope: !7882, file: !7883, line: 20, type: !7887)
!7891 = !DILocalVariable(name: "dest", scope: !7882, file: !7883, line: 22, type: !1051)
!7892 = !DILocation(line: 0, scope: !7882)
!7893 = !DILocation(line: 24, column: 9, scope: !7882)
!7894 = !DILocation(line: 24, column: 12, scope: !7882)
!7895 = !DILocation(line: 24, column: 2, scope: !7882)
!7896 = !DILocation(line: 25, column: 6, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7882, file: !7883, line: 24, column: 21)
!7898 = !DILocation(line: 26, column: 4, scope: !7897)
!7899 = !DILocation(line: 27, column: 4, scope: !7897)
!7900 = distinct !{!7900, !7895, !7901}
!7901 = !DILocation(line: 28, column: 2, scope: !7882)
!7902 = !DILocation(line: 30, column: 5, scope: !7882)
!7903 = !DILocation(line: 32, column: 2, scope: !7882)
!7904 = distinct !DISubprogram(name: "strncpy", scope: !7883, file: !7883, line: 42, type: !7905, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !7907)
!7905 = !DISubroutineType(types: !7906)
!7906 = !{!1051, !7886, !7887, !344}
!7907 = !{!7908, !7909, !7910, !7911}
!7908 = !DILocalVariable(name: "d", arg: 1, scope: !7904, file: !7883, line: 42, type: !7886)
!7909 = !DILocalVariable(name: "s", arg: 2, scope: !7904, file: !7883, line: 42, type: !7887)
!7910 = !DILocalVariable(name: "n", arg: 3, scope: !7904, file: !7883, line: 42, type: !344)
!7911 = !DILocalVariable(name: "dest", scope: !7904, file: !7883, line: 44, type: !1051)
!7912 = !DILocation(line: 0, scope: !7904)
!7913 = !DILocation(line: 46, column: 12, scope: !7904)
!7914 = !DILocation(line: 46, column: 17, scope: !7904)
!7915 = !DILocation(line: 46, column: 20, scope: !7904)
!7916 = !DILocation(line: 46, column: 23, scope: !7904)
!7917 = !DILocation(line: 46, column: 2, scope: !7904)
!7918 = !DILocation(line: 47, column: 6, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7904, file: !7883, line: 46, column: 32)
!7920 = !DILocation(line: 48, column: 4, scope: !7919)
!7921 = !DILocation(line: 49, column: 4, scope: !7919)
!7922 = !DILocation(line: 50, column: 4, scope: !7919)
!7923 = distinct !{!7923, !7917, !7924}
!7924 = !DILocation(line: 51, column: 2, scope: !7904)
!7925 = !DILocation(line: 54, column: 6, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7904, file: !7883, line: 53, column: 16)
!7927 = !DILocation(line: 55, column: 4, scope: !7926)
!7928 = !DILocation(line: 56, column: 4, scope: !7926)
!7929 = !DILocation(line: 53, column: 11, scope: !7904)
!7930 = !DILocation(line: 53, column: 2, scope: !7904)
!7931 = distinct !{!7931, !7930, !7932}
!7932 = !DILocation(line: 57, column: 2, scope: !7904)
!7933 = !DILocation(line: 59, column: 2, scope: !7904)
!7934 = distinct !DISubprogram(name: "strchr", scope: !7883, file: !7883, line: 69, type: !7935, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !7937)
!7935 = !DISubroutineType(types: !7936)
!7936 = !{!1051, !144, !103}
!7937 = !{!7938, !7939, !7940}
!7938 = !DILocalVariable(name: "s", arg: 1, scope: !7934, file: !7883, line: 69, type: !144)
!7939 = !DILocalVariable(name: "c", arg: 2, scope: !7934, file: !7883, line: 69, type: !103)
!7940 = !DILocalVariable(name: "tmp", scope: !7934, file: !7883, line: 71, type: !146)
!7941 = !DILocation(line: 0, scope: !7934)
!7942 = !DILocation(line: 73, column: 2, scope: !7934)
!7943 = !DILocation(line: 73, column: 10, scope: !7934)
!7944 = !DILocation(line: 73, column: 13, scope: !7934)
!7945 = !DILocation(line: 73, column: 21, scope: !7934)
!7946 = !DILocation(line: 74, column: 4, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7934, file: !7883, line: 73, column: 38)
!7948 = distinct !{!7948, !7942, !7949}
!7949 = !DILocation(line: 75, column: 2, scope: !7934)
!7950 = !DILocation(line: 77, column: 9, scope: !7934)
!7951 = !DILocation(line: 77, column: 2, scope: !7934)
!7952 = distinct !DISubprogram(name: "strrchr", scope: !7883, file: !7883, line: 87, type: !7935, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !7953)
!7953 = !{!7954, !7955, !7956}
!7954 = !DILocalVariable(name: "s", arg: 1, scope: !7952, file: !7883, line: 87, type: !144)
!7955 = !DILocalVariable(name: "c", arg: 2, scope: !7952, file: !7883, line: 87, type: !103)
!7956 = !DILocalVariable(name: "match", scope: !7952, file: !7883, line: 89, type: !1051)
!7957 = !DILocation(line: 0, scope: !7952)
!7958 = !DILocation(line: 91, column: 2, scope: !7952)
!7959 = !DILocation(line: 92, column: 7, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7961, file: !7883, line: 92, column: 7)
!7961 = distinct !DILexicalBlock(scope: !7952, file: !7883, line: 91, column: 5)
!7962 = !DILocation(line: 92, column: 10, scope: !7960)
!7963 = !DILocation(line: 92, column: 7, scope: !7961)
!7964 = !DILocation(line: 95, column: 13, scope: !7952)
!7965 = !DILocation(line: 95, column: 2, scope: !7961)
!7966 = distinct !{!7966, !7958, !7967}
!7967 = !DILocation(line: 95, column: 15, scope: !7952)
!7968 = !DILocation(line: 97, column: 2, scope: !7952)
!7969 = distinct !DISubprogram(name: "strlen", scope: !7883, file: !7883, line: 107, type: !7970, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !7972)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{!344, !144}
!7972 = !{!7973, !7974}
!7973 = !DILocalVariable(name: "s", arg: 1, scope: !7969, file: !7883, line: 107, type: !144)
!7974 = !DILocalVariable(name: "n", scope: !7969, file: !7883, line: 109, type: !344)
!7975 = !DILocation(line: 0, scope: !7969)
!7976 = !DILocation(line: 111, column: 9, scope: !7969)
!7977 = !DILocation(line: 111, column: 12, scope: !7969)
!7978 = !DILocation(line: 111, column: 2, scope: !7969)
!7979 = !DILocation(line: 112, column: 4, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7969, file: !7883, line: 111, column: 21)
!7981 = !DILocation(line: 113, column: 4, scope: !7980)
!7982 = distinct !{!7982, !7978, !7983}
!7983 = !DILocation(line: 114, column: 2, scope: !7969)
!7984 = !DILocation(line: 116, column: 2, scope: !7969)
!7985 = distinct !DISubprogram(name: "strnlen", scope: !7883, file: !7883, line: 126, type: !7986, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !7988)
!7986 = !DISubroutineType(types: !7987)
!7987 = !{!344, !144, !344}
!7988 = !{!7989, !7990, !7991}
!7989 = !DILocalVariable(name: "s", arg: 1, scope: !7985, file: !7883, line: 126, type: !144)
!7990 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7985, file: !7883, line: 126, type: !344)
!7991 = !DILocalVariable(name: "n", scope: !7985, file: !7883, line: 128, type: !344)
!7992 = !DILocation(line: 0, scope: !7985)
!7993 = !DILocation(line: 130, column: 9, scope: !7985)
!7994 = !DILocation(line: 130, column: 12, scope: !7985)
!7995 = !DILocation(line: 130, column: 20, scope: !7985)
!7996 = !DILocation(line: 130, column: 2, scope: !7985)
!7997 = !DILocation(line: 131, column: 4, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7985, file: !7883, line: 130, column: 35)
!7999 = !DILocation(line: 132, column: 4, scope: !7998)
!8000 = distinct !{!8000, !7996, !8001}
!8001 = !DILocation(line: 133, column: 2, scope: !7985)
!8002 = !DILocation(line: 135, column: 2, scope: !7985)
!8003 = distinct !DISubprogram(name: "strcmp", scope: !7883, file: !7883, line: 145, type: !8004, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !8006)
!8004 = !DISubroutineType(types: !8005)
!8005 = !{!103, !144, !144}
!8006 = !{!8007, !8008}
!8007 = !DILocalVariable(name: "s1", arg: 1, scope: !8003, file: !7883, line: 145, type: !144)
!8008 = !DILocalVariable(name: "s2", arg: 2, scope: !8003, file: !7883, line: 145, type: !144)
!8009 = !DILocation(line: 0, scope: !8003)
!8010 = !DILocation(line: 147, column: 10, scope: !8003)
!8011 = !DILocation(line: 147, column: 17, scope: !8003)
!8012 = !DILocation(line: 147, column: 14, scope: !8003)
!8013 = !DILocation(line: 147, column: 22, scope: !8003)
!8014 = !DILocation(line: 148, column: 5, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8003, file: !7883, line: 147, column: 40)
!8016 = !DILocation(line: 149, column: 5, scope: !8015)
!8017 = distinct !{!8017, !8018, !8019}
!8018 = !DILocation(line: 147, column: 2, scope: !8003)
!8019 = !DILocation(line: 150, column: 2, scope: !8003)
!8020 = !DILocation(line: 152, column: 9, scope: !8003)
!8021 = !DILocation(line: 152, column: 15, scope: !8003)
!8022 = !DILocation(line: 152, column: 13, scope: !8003)
!8023 = !DILocation(line: 152, column: 2, scope: !8003)
!8024 = distinct !DISubprogram(name: "strncmp", scope: !7883, file: !7883, line: 162, type: !8025, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !8027)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!103, !144, !144, !344}
!8027 = !{!8028, !8029, !8030}
!8028 = !DILocalVariable(name: "s1", arg: 1, scope: !8024, file: !7883, line: 162, type: !144)
!8029 = !DILocalVariable(name: "s2", arg: 2, scope: !8024, file: !7883, line: 162, type: !144)
!8030 = !DILocalVariable(name: "n", arg: 3, scope: !8024, file: !7883, line: 162, type: !344)
!8031 = !DILocation(line: 0, scope: !8024)
!8032 = !DILocation(line: 164, column: 17, scope: !8024)
!8033 = !DILocation(line: 164, column: 21, scope: !8024)
!8034 = !DILocation(line: 164, column: 28, scope: !8024)
!8035 = !DILocation(line: 164, column: 25, scope: !8024)
!8036 = !DILocation(line: 164, column: 33, scope: !8024)
!8037 = !DILocation(line: 165, column: 5, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8024, file: !7883, line: 164, column: 51)
!8039 = !DILocation(line: 166, column: 5, scope: !8038)
!8040 = !DILocation(line: 167, column: 4, scope: !8038)
!8041 = distinct !{!8041, !8042, !8043}
!8042 = !DILocation(line: 164, column: 2, scope: !8024)
!8043 = !DILocation(line: 168, column: 2, scope: !8024)
!8044 = !DILocation(line: 170, column: 25, scope: !8024)
!8045 = !DILocation(line: 170, column: 31, scope: !8024)
!8046 = !DILocation(line: 170, column: 29, scope: !8024)
!8047 = !DILocation(line: 170, column: 9, scope: !8024)
!8048 = !DILocation(line: 170, column: 2, scope: !8024)
!8049 = distinct !DISubprogram(name: "strtok_r", scope: !7883, file: !7883, line: 180, type: !8050, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !8053)
!8050 = !DISubroutineType(types: !8051)
!8051 = !{!1051, !1051, !144, !8052}
!8052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!8053 = !{!8054, !8055, !8056, !8057, !8058}
!8054 = !DILocalVariable(name: "str", arg: 1, scope: !8049, file: !7883, line: 180, type: !1051)
!8055 = !DILocalVariable(name: "sep", arg: 2, scope: !8049, file: !7883, line: 180, type: !144)
!8056 = !DILocalVariable(name: "state", arg: 3, scope: !8049, file: !7883, line: 180, type: !8052)
!8057 = !DILocalVariable(name: "start", scope: !8049, file: !7883, line: 182, type: !1051)
!8058 = !DILocalVariable(name: "end", scope: !8049, file: !7883, line: 182, type: !1051)
!8059 = !DILocation(line: 0, scope: !8049)
!8060 = !DILocation(line: 184, column: 10, scope: !8049)
!8061 = !DILocation(line: 184, column: 22, scope: !8049)
!8062 = !DILocation(line: 187, column: 9, scope: !8049)
!8063 = !DILocation(line: 187, column: 16, scope: !8049)
!8064 = !DILocation(line: 187, column: 19, scope: !8049)
!8065 = !DILocation(line: 187, column: 2, scope: !8049)
!8066 = !DILocation(line: 188, column: 8, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8049, file: !7883, line: 187, column: 40)
!8068 = distinct !{!8068, !8065, !8069}
!8069 = !DILocation(line: 189, column: 2, scope: !8049)
!8070 = !DILocation(line: 198, column: 9, scope: !8049)
!8071 = !DILocation(line: 198, column: 18, scope: !8049)
!8072 = !DILocation(line: 198, column: 17, scope: !8049)
!8073 = !DILocation(line: 198, column: 2, scope: !8049)
!8074 = !DILocation(line: 199, column: 6, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8049, file: !7883, line: 198, column: 37)
!8076 = !DILocation(line: 198, column: 14, scope: !8049)
!8077 = distinct !{!8077, !8073, !8078}
!8078 = !DILocation(line: 200, column: 2, scope: !8049)
!8079 = !DILocation(line: 203, column: 8, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8081, file: !7883, line: 202, column: 20)
!8081 = distinct !DILexicalBlock(scope: !8049, file: !7883, line: 202, column: 6)
!8082 = !DILocation(line: 204, column: 16, scope: !8080)
!8083 = !DILocation(line: 205, column: 2, scope: !8080)
!8084 = !DILocation(line: 210, column: 1, scope: !8049)
!8085 = distinct !DISubprogram(name: "strcat", scope: !7883, file: !7883, line: 212, type: !7884, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !8086)
!8086 = !{!8087, !8088}
!8087 = !DILocalVariable(name: "dest", arg: 1, scope: !8085, file: !7883, line: 212, type: !7886)
!8088 = !DILocalVariable(name: "src", arg: 2, scope: !8085, file: !7883, line: 212, type: !7887)
!8089 = !DILocation(line: 0, scope: !8085)
!8090 = !DILocation(line: 214, column: 16, scope: !8085)
!8091 = !DILocation(line: 214, column: 14, scope: !8085)
!8092 = !DILocation(line: 214, column: 2, scope: !8085)
!8093 = !DILocation(line: 215, column: 2, scope: !8085)
!8094 = distinct !DISubprogram(name: "strncat", scope: !7883, file: !7883, line: 218, type: !7905, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !8095)
!8095 = !{!8096, !8097, !8098, !8099, !8100}
!8096 = !DILocalVariable(name: "dest", arg: 1, scope: !8094, file: !7883, line: 218, type: !7886)
!8097 = !DILocalVariable(name: "src", arg: 2, scope: !8094, file: !7883, line: 218, type: !7887)
!8098 = !DILocalVariable(name: "n", arg: 3, scope: !8094, file: !7883, line: 219, type: !344)
!8099 = !DILocalVariable(name: "orig_dest", scope: !8094, file: !7883, line: 221, type: !1051)
!8100 = !DILocalVariable(name: "len", scope: !8094, file: !7883, line: 222, type: !344)
!8101 = !DILocation(line: 0, scope: !8094)
!8102 = !DILocation(line: 222, column: 15, scope: !8094)
!8103 = !DILocation(line: 224, column: 7, scope: !8094)
!8104 = !DILocation(line: 225, column: 14, scope: !8094)
!8105 = !DILocation(line: 225, column: 19, scope: !8094)
!8106 = !DILocation(line: 225, column: 11, scope: !8094)
!8107 = !DILocation(line: 225, column: 23, scope: !8094)
!8108 = !DILocation(line: 225, column: 28, scope: !8094)
!8109 = !DILocation(line: 225, column: 2, scope: !8094)
!8110 = !DILocation(line: 226, column: 17, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8094, file: !7883, line: 225, column: 38)
!8112 = !DILocation(line: 226, column: 8, scope: !8111)
!8113 = !DILocation(line: 226, column: 11, scope: !8111)
!8114 = distinct !{!8114, !8109, !8115}
!8115 = !DILocation(line: 227, column: 2, scope: !8094)
!8116 = !DILocation(line: 228, column: 8, scope: !8094)
!8117 = !DILocation(line: 230, column: 2, scope: !8094)
!8118 = distinct !DISubprogram(name: "memcmp", scope: !7883, file: !7883, line: 239, type: !8119, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !8121)
!8119 = !DISubroutineType(types: !8120)
!8120 = !{!103, !13, !13, !344}
!8121 = !{!8122, !8123, !8124, !8125, !8126}
!8122 = !DILocalVariable(name: "m1", arg: 1, scope: !8118, file: !7883, line: 239, type: !13)
!8123 = !DILocalVariable(name: "m2", arg: 2, scope: !8118, file: !7883, line: 239, type: !13)
!8124 = !DILocalVariable(name: "n", arg: 3, scope: !8118, file: !7883, line: 239, type: !344)
!8125 = !DILocalVariable(name: "c1", scope: !8118, file: !7883, line: 241, type: !144)
!8126 = !DILocalVariable(name: "c2", scope: !8118, file: !7883, line: 242, type: !144)
!8127 = !DILocation(line: 0, scope: !8118)
!8128 = !DILocation(line: 244, column: 7, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8118, file: !7883, line: 244, column: 6)
!8130 = !DILocation(line: 244, column: 6, scope: !8118)
!8131 = !DILocation(line: 248, column: 10, scope: !8118)
!8132 = !DILocation(line: 248, column: 14, scope: !8118)
!8133 = !DILocation(line: 248, column: 19, scope: !8118)
!8134 = !DILocation(line: 248, column: 2, scope: !8118)
!8135 = !DILocation(line: 248, column: 23, scope: !8118)
!8136 = !DILocation(line: 248, column: 30, scope: !8118)
!8137 = !DILocation(line: 248, column: 27, scope: !8118)
!8138 = !DILocation(line: 249, column: 5, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8118, file: !7883, line: 248, column: 36)
!8140 = !DILocation(line: 250, column: 5, scope: !8139)
!8141 = distinct !{!8141, !8134, !8142}
!8142 = !DILocation(line: 251, column: 2, scope: !8118)
!8143 = !DILocation(line: 253, column: 9, scope: !8118)
!8144 = !DILocation(line: 253, column: 15, scope: !8118)
!8145 = !DILocation(line: 253, column: 13, scope: !8118)
!8146 = !DILocation(line: 253, column: 2, scope: !8118)
!8147 = !DILocation(line: 254, column: 1, scope: !8118)
!8148 = distinct !DISubprogram(name: "memmove", scope: !7883, file: !7883, line: 263, type: !8149, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !8151)
!8149 = !DISubroutineType(types: !8150)
!8150 = !{!102, !102, !13, !344}
!8151 = !{!8152, !8153, !8154, !8155, !8156}
!8152 = !DILocalVariable(name: "d", arg: 1, scope: !8148, file: !7883, line: 263, type: !102)
!8153 = !DILocalVariable(name: "s", arg: 2, scope: !8148, file: !7883, line: 263, type: !13)
!8154 = !DILocalVariable(name: "n", arg: 3, scope: !8148, file: !7883, line: 263, type: !344)
!8155 = !DILocalVariable(name: "dest", scope: !8148, file: !7883, line: 265, type: !1051)
!8156 = !DILocalVariable(name: "src", scope: !8148, file: !7883, line: 266, type: !144)
!8157 = !DILocation(line: 0, scope: !8148)
!8158 = !DILocation(line: 268, column: 21, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8148, file: !7883, line: 268, column: 6)
!8160 = !DILocation(line: 268, column: 28, scope: !8159)
!8161 = !DILocation(line: 268, column: 6, scope: !8148)
!8162 = !DILocation(line: 280, column: 12, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8159, file: !7883, line: 278, column: 9)
!8164 = !DILocation(line: 280, column: 3, scope: !8163)
!8165 = !DILocation(line: 275, column: 5, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8167, file: !7883, line: 274, column: 17)
!8167 = distinct !DILexicalBlock(scope: !8159, file: !7883, line: 268, column: 33)
!8168 = !DILocation(line: 276, column: 14, scope: !8166)
!8169 = !DILocation(line: 276, column: 4, scope: !8166)
!8170 = !DILocation(line: 276, column: 12, scope: !8166)
!8171 = !DILocation(line: 274, column: 12, scope: !8167)
!8172 = !DILocation(line: 274, column: 3, scope: !8167)
!8173 = distinct !{!8173, !8172, !8174}
!8174 = !DILocation(line: 277, column: 3, scope: !8167)
!8175 = !DILocation(line: 281, column: 12, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8163, file: !7883, line: 280, column: 17)
!8177 = !DILocation(line: 281, column: 10, scope: !8176)
!8178 = !DILocation(line: 282, column: 8, scope: !8176)
!8179 = !DILocation(line: 283, column: 7, scope: !8176)
!8180 = !DILocation(line: 284, column: 5, scope: !8176)
!8181 = distinct !{!8181, !8164, !8182}
!8182 = !DILocation(line: 285, column: 3, scope: !8163)
!8183 = !DILocation(line: 288, column: 2, scope: !8148)
!8184 = distinct !DISubprogram(name: "memcpy", scope: !7883, file: !7883, line: 298, type: !8185, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !8189)
!8185 = !DISubroutineType(types: !8186)
!8186 = !{!102, !8187, !8188, !344}
!8187 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8188 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8189 = !{!8190, !8191, !8192, !8193, !8194}
!8190 = !DILocalVariable(name: "d", arg: 1, scope: !8184, file: !7883, line: 298, type: !8187)
!8191 = !DILocalVariable(name: "s", arg: 2, scope: !8184, file: !7883, line: 298, type: !8188)
!8192 = !DILocalVariable(name: "n", arg: 3, scope: !8184, file: !7883, line: 298, type: !344)
!8193 = !DILocalVariable(name: "d_byte", scope: !8184, file: !7883, line: 302, type: !224)
!8194 = !DILocalVariable(name: "s_byte", scope: !8184, file: !7883, line: 303, type: !2986)
!8195 = !DILocation(line: 0, scope: !8184)
!8196 = !DILocation(line: 337, column: 11, scope: !8184)
!8197 = !DILocation(line: 337, column: 2, scope: !8184)
!8198 = !DILocation(line: 338, column: 25, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8184, file: !7883, line: 337, column: 16)
!8200 = !DILocation(line: 338, column: 17, scope: !8199)
!8201 = !DILocation(line: 338, column: 11, scope: !8199)
!8202 = !DILocation(line: 338, column: 15, scope: !8199)
!8203 = !DILocation(line: 339, column: 4, scope: !8199)
!8204 = distinct !{!8204, !8197, !8205}
!8205 = !DILocation(line: 340, column: 2, scope: !8184)
!8206 = !DILocation(line: 342, column: 2, scope: !8184)
!8207 = distinct !DISubprogram(name: "memset", scope: !7883, file: !7883, line: 352, type: !8208, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !8210)
!8208 = !DISubroutineType(types: !8209)
!8209 = !{!102, !102, !103, !344}
!8210 = !{!8211, !8212, !8213, !8214, !8215}
!8211 = !DILocalVariable(name: "buf", arg: 1, scope: !8207, file: !7883, line: 352, type: !102)
!8212 = !DILocalVariable(name: "c", arg: 2, scope: !8207, file: !7883, line: 352, type: !103)
!8213 = !DILocalVariable(name: "n", arg: 3, scope: !8207, file: !7883, line: 352, type: !344)
!8214 = !DILocalVariable(name: "d_byte", scope: !8207, file: !7883, line: 356, type: !224)
!8215 = !DILocalVariable(name: "c_byte", scope: !8207, file: !7883, line: 357, type: !155)
!8216 = !DILocation(line: 0, scope: !8207)
!8217 = !DILocation(line: 357, column: 25, scope: !8207)
!8218 = !DILocation(line: 389, column: 11, scope: !8207)
!8219 = !DILocation(line: 389, column: 2, scope: !8207)
!8220 = !DILocation(line: 390, column: 11, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8207, file: !7883, line: 389, column: 16)
!8222 = !DILocation(line: 390, column: 15, scope: !8221)
!8223 = !DILocation(line: 391, column: 4, scope: !8221)
!8224 = distinct !{!8224, !8219, !8225}
!8225 = !DILocation(line: 392, column: 2, scope: !8207)
!8226 = !DILocation(line: 394, column: 2, scope: !8207)
!8227 = distinct !DISubprogram(name: "memchr", scope: !7883, file: !7883, line: 404, type: !8228, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !8230)
!8228 = !DISubroutineType(types: !8229)
!8229 = !{!102, !13, !103, !344}
!8230 = !{!8231, !8232, !8233, !8234}
!8231 = !DILocalVariable(name: "s", arg: 1, scope: !8227, file: !7883, line: 404, type: !13)
!8232 = !DILocalVariable(name: "c", arg: 2, scope: !8227, file: !7883, line: 404, type: !103)
!8233 = !DILocalVariable(name: "n", arg: 3, scope: !8227, file: !7883, line: 404, type: !344)
!8234 = !DILocalVariable(name: "p", scope: !8235, file: !7883, line: 407, type: !2986)
!8235 = distinct !DILexicalBlock(scope: !8236, file: !7883, line: 406, column: 14)
!8236 = distinct !DILexicalBlock(scope: !8227, file: !7883, line: 406, column: 6)
!8237 = !DILocation(line: 0, scope: !8227)
!8238 = !DILocation(line: 406, column: 8, scope: !8236)
!8239 = !DILocation(line: 406, column: 6, scope: !8227)
!8240 = !DILocation(line: 409, column: 3, scope: !8235)
!8241 = !DILocation(line: 0, scope: !8235)
!8242 = !DILocation(line: 410, column: 8, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !7883, line: 410, column: 8)
!8244 = distinct !DILexicalBlock(scope: !8235, file: !7883, line: 409, column: 6)
!8245 = !DILocation(line: 410, column: 13, scope: !8243)
!8246 = !DILocation(line: 410, column: 8, scope: !8244)
!8247 = distinct !{!8247, !8240, !8248}
!8248 = !DILocation(line: 414, column: 20, scope: !8235)
!8249 = !DILocation(line: 417, column: 2, scope: !8227)
!8250 = !DILocation(line: 418, column: 1, scope: !8227)
!8251 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !533, file: !533, line: 23, type: !3351, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8252)
!8252 = !{!8253}
!8253 = !DILocalVariable(name: "hook", arg: 1, scope: !8251, file: !533, line: 23, type: !106)
!8254 = !DILocation(line: 0, scope: !8251)
!8255 = !DILocation(line: 25, column: 15, scope: !8251)
!8256 = !DILocation(line: 26, column: 1, scope: !8251)
!8257 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !533, file: !533, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8258)
!8258 = !{!8259}
!8259 = !DILocalVariable(name: "c", arg: 1, scope: !8257, file: !533, line: 14, type: !103)
!8260 = !DILocation(line: 0, scope: !8257)
!8261 = !DILocation(line: 18, column: 2, scope: !8257)
!8262 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !533, file: !533, line: 28, type: !8263, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8265)
!8263 = !DISubroutineType(types: !8264)
!8264 = !{!103, !103, !529}
!8265 = !{!8266, !8267}
!8266 = !DILocalVariable(name: "c", arg: 1, scope: !8262, file: !533, line: 28, type: !103)
!8267 = !DILocalVariable(name: "stream", arg: 2, scope: !8262, file: !533, line: 28, type: !529)
!8268 = !DILocation(line: 0, scope: !8262)
!8269 = !DILocation(line: 30, column: 27, scope: !8262)
!8270 = !DILocation(line: 30, column: 50, scope: !8262)
!8271 = !DILocation(line: 30, column: 9, scope: !8262)
!8272 = !DILocation(line: 30, column: 2, scope: !8262)
!8273 = distinct !DISubprogram(name: "fputc", scope: !533, file: !533, line: 41, type: !8263, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8274)
!8274 = !{!8275, !8276}
!8275 = !DILocalVariable(name: "c", arg: 1, scope: !8273, file: !533, line: 41, type: !103)
!8276 = !DILocalVariable(name: "stream", arg: 2, scope: !8273, file: !533, line: 41, type: !529)
!8277 = !DILocation(line: 0, scope: !8273)
!8278 = !DILocation(line: 43, column: 9, scope: !8273)
!8279 = !DILocation(line: 43, column: 2, scope: !8273)
!8280 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8281, file: !8281, line: 72, type: !8263, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8282)
!8281 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/getchar")
!8282 = !{!8283, !8284}
!8283 = !DILocalVariable(name: "c", arg: 1, scope: !8280, file: !8281, line: 72, type: !103)
!8284 = !DILocalVariable(name: "stream", arg: 2, scope: !8280, file: !8281, line: 72, type: !529)
!8285 = !DILocation(line: 0, scope: !8280)
!8286 = !DILocation(line: 81, column: 2, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8280, file: !8281, line: 81, column: 2)
!8288 = !{i64 2154126814}
!8289 = !DILocation(line: 82, column: 9, scope: !8280)
!8290 = !DILocation(line: 82, column: 2, scope: !8280)
!8291 = distinct !DISubprogram(name: "fputs", scope: !533, file: !533, line: 46, type: !8292, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8295)
!8292 = !DISubroutineType(types: !8293)
!8293 = !{!103, !7887, !8294}
!8294 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !529)
!8295 = !{!8296, !8297, !8298, !8299}
!8296 = !DILocalVariable(name: "s", arg: 1, scope: !8291, file: !533, line: 46, type: !7887)
!8297 = !DILocalVariable(name: "stream", arg: 2, scope: !8291, file: !533, line: 46, type: !8294)
!8298 = !DILocalVariable(name: "len", scope: !8291, file: !533, line: 48, type: !103)
!8299 = !DILocalVariable(name: "ret", scope: !8291, file: !533, line: 49, type: !103)
!8300 = !DILocation(line: 0, scope: !8291)
!8301 = !DILocation(line: 48, column: 12, scope: !8291)
!8302 = !DILocation(line: 51, column: 8, scope: !8291)
!8303 = !DILocation(line: 53, column: 13, scope: !8291)
!8304 = !DILocation(line: 53, column: 9, scope: !8291)
!8305 = !DILocation(line: 53, column: 2, scope: !8291)
!8306 = distinct !DISubprogram(name: "fwrite", scope: !533, file: !533, line: 99, type: !8307, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8309)
!8307 = !DISubroutineType(types: !8308)
!8308 = !{!344, !8188, !344, !344, !8294}
!8309 = !{!8310, !8311, !8312, !8313}
!8310 = !DILocalVariable(name: "ptr", arg: 1, scope: !8306, file: !533, line: 99, type: !8188)
!8311 = !DILocalVariable(name: "size", arg: 2, scope: !8306, file: !533, line: 99, type: !344)
!8312 = !DILocalVariable(name: "nitems", arg: 3, scope: !8306, file: !533, line: 99, type: !344)
!8313 = !DILocalVariable(name: "stream", arg: 4, scope: !8306, file: !533, line: 100, type: !8294)
!8314 = !DILocation(line: 0, scope: !8306)
!8315 = !DILocation(line: 102, column: 9, scope: !8306)
!8316 = !DILocation(line: 102, column: 2, scope: !8306)
!8317 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8281, file: !8281, line: 96, type: !8307, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8318)
!8318 = !{!8319, !8320, !8321, !8322}
!8319 = !DILocalVariable(name: "ptr", arg: 1, scope: !8317, file: !8281, line: 96, type: !8188)
!8320 = !DILocalVariable(name: "size", arg: 2, scope: !8317, file: !8281, line: 96, type: !344)
!8321 = !DILocalVariable(name: "nitems", arg: 3, scope: !8317, file: !8281, line: 96, type: !344)
!8322 = !DILocalVariable(name: "stream", arg: 4, scope: !8317, file: !8281, line: 96, type: !8294)
!8323 = !DILocation(line: 0, scope: !8317)
!8324 = !DILocation(line: 107, column: 2, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8317, file: !8281, line: 107, column: 2)
!8326 = !{i64 2154126918}
!8327 = !DILocation(line: 108, column: 9, scope: !8317)
!8328 = !DILocation(line: 108, column: 2, scope: !8317)
!8329 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !533, file: !533, line: 56, type: !8307, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8330)
!8330 = !{!8331, !8332, !8333, !8334, !8335, !8336, !8337, !8338}
!8331 = !DILocalVariable(name: "ptr", arg: 1, scope: !8329, file: !533, line: 56, type: !8188)
!8332 = !DILocalVariable(name: "size", arg: 2, scope: !8329, file: !533, line: 56, type: !344)
!8333 = !DILocalVariable(name: "nitems", arg: 3, scope: !8329, file: !533, line: 57, type: !344)
!8334 = !DILocalVariable(name: "stream", arg: 4, scope: !8329, file: !533, line: 57, type: !8294)
!8335 = !DILocalVariable(name: "i", scope: !8329, file: !533, line: 59, type: !344)
!8336 = !DILocalVariable(name: "j", scope: !8329, file: !533, line: 60, type: !344)
!8337 = !DILocalVariable(name: "p", scope: !8329, file: !533, line: 61, type: !2986)
!8338 = !DILabel(scope: !8329, name: "done", file: !533, line: 82)
!8339 = !DILocation(line: 0, scope: !8329)
!8340 = !DILocation(line: 63, column: 14, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8329, file: !533, line: 63, column: 6)
!8342 = !DILocation(line: 63, column: 24, scope: !8341)
!8343 = !DILocation(line: 72, column: 3, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8329, file: !533, line: 70, column: 5)
!8345 = !DILocation(line: 0, scope: !8344)
!8346 = !DILocation(line: 73, column: 8, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !533, line: 73, column: 8)
!8348 = distinct !DILexicalBlock(scope: !8344, file: !533, line: 72, column: 6)
!8349 = !DILocation(line: 73, column: 29, scope: !8347)
!8350 = !DILocation(line: 73, column: 27, scope: !8347)
!8351 = !DILocation(line: 73, column: 21, scope: !8347)
!8352 = !DILocation(line: 73, column: 33, scope: !8347)
!8353 = !DILocation(line: 73, column: 8, scope: !8348)
!8354 = !DILocation(line: 76, column: 5, scope: !8348)
!8355 = !DILocation(line: 77, column: 14, scope: !8344)
!8356 = !DILocation(line: 77, column: 3, scope: !8348)
!8357 = distinct !{!8357, !8343, !8358}
!8358 = !DILocation(line: 77, column: 17, scope: !8344)
!8359 = !DILocation(line: 79, column: 4, scope: !8344)
!8360 = !DILocation(line: 80, column: 13, scope: !8329)
!8361 = !DILocation(line: 80, column: 2, scope: !8344)
!8362 = distinct !{!8362, !8363, !8364}
!8363 = !DILocation(line: 70, column: 2, scope: !8329)
!8364 = !DILocation(line: 80, column: 16, scope: !8329)
!8365 = !DILocation(line: 82, column: 1, scope: !8329)
!8366 = !DILocation(line: 83, column: 17, scope: !8329)
!8367 = !DILocation(line: 83, column: 2, scope: !8329)
!8368 = !DILocation(line: 84, column: 1, scope: !8329)
!8369 = distinct !DISubprogram(name: "puts", scope: !533, file: !533, line: 106, type: !8370, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !526, retainedNodes: !8372)
!8370 = !DISubroutineType(types: !8371)
!8371 = !{!103, !144}
!8372 = !{!8373}
!8373 = !DILocalVariable(name: "s", arg: 1, scope: !8369, file: !533, line: 106, type: !144)
!8374 = !DILocation(line: 0, scope: !8369)
!8375 = !DILocation(line: 108, column: 6, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8369, file: !533, line: 108, column: 6)
!8377 = !DILocation(line: 108, column: 23, scope: !8376)
!8378 = !DILocation(line: 108, column: 6, scope: !8369)
!8379 = !DILocation(line: 112, column: 9, scope: !8369)
!8380 = !DILocation(line: 112, column: 29, scope: !8369)
!8381 = !DILocation(line: 112, column: 2, scope: !8369)
!8382 = !DILocation(line: 113, column: 1, scope: !8369)
!8383 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !645, file: !645, line: 368, type: !698, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8384)
!8384 = !{!8385}
!8385 = !DILocalVariable(name: "dev", arg: 1, scope: !8383, file: !645, line: 368, type: !674)
!8386 = !DILocation(line: 0, scope: !8383)
!8387 = !DILocation(line: 370, column: 2, scope: !8383)
!8388 = !DILocation(line: 371, column: 1, scope: !8383)
!8389 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !645, file: !645, line: 243, type: !8390, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8392)
!8390 = !DISubroutineType(types: !8391)
!8391 = !{null, !103, !103, !674}
!8392 = !{!8393, !8394, !8395, !8396, !8398}
!8393 = !DILocalVariable(name: "min", arg: 1, scope: !8389, file: !645, line: 243, type: !103)
!8394 = !DILocalVariable(name: "max", arg: 2, scope: !8389, file: !645, line: 243, type: !103)
!8395 = !DILocalVariable(name: "dev", arg: 3, scope: !8389, file: !645, line: 243, type: !674)
!8396 = !DILocalVariable(name: "data", scope: !8389, file: !645, line: 245, type: !8397)
!8397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 32)
!8398 = !DILocalVariable(name: "line", scope: !8389, file: !645, line: 246, type: !103)
!8399 = !DILocation(line: 0, scope: !8389)
!8400 = !DILocation(line: 245, column: 38, scope: !8389)
!8401 = !DILocation(line: 249, column: 24, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !645, line: 249, column: 2)
!8403 = distinct !DILexicalBlock(scope: !8389, file: !645, line: 249, column: 2)
!8404 = !DILocation(line: 249, column: 2, scope: !8403)
!8405 = !DILocation(line: 251, column: 7, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !645, line: 251, column: 7)
!8407 = distinct !DILexicalBlock(scope: !8402, file: !645, line: 249, column: 39)
!8408 = !DILocation(line: 251, column: 7, scope: !8407)
!8409 = !DILocation(line: 253, column: 4, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8406, file: !645, line: 251, column: 36)
!8411 = !DILocation(line: 256, column: 24, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8410, file: !645, line: 256, column: 8)
!8413 = !DILocation(line: 256, column: 9, scope: !8412)
!8414 = !DILocation(line: 256, column: 8, scope: !8410)
!8415 = !DILocation(line: 260, column: 43, scope: !8410)
!8416 = !DILocation(line: 260, column: 4, scope: !8410)
!8417 = !DILocation(line: 261, column: 3, scope: !8410)
!8418 = !DILocation(line: 249, column: 35, scope: !8402)
!8419 = distinct !{!8419, !8404, !8420}
!8420 = !DILocation(line: 262, column: 2, scope: !8403)
!8421 = !DILocation(line: 263, column: 1, scope: !8389)
!8422 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !645, file: !645, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8423)
!8423 = !{!8424}
!8424 = !DILocalVariable(name: "line", arg: 1, scope: !8422, file: !645, line: 158, type: !103)
!8425 = !DILocation(line: 0, scope: !8422)
!8426 = !DILocation(line: 170, column: 38, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !645, line: 160, column: 17)
!8428 = distinct !DILexicalBlock(scope: !8422, file: !645, line: 160, column: 6)
!8429 = !DILocation(line: 170, column: 10, scope: !8427)
!8430 = !DILocation(line: 176, column: 1, scope: !8422)
!8431 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !645, file: !645, line: 183, type: !8432, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8434)
!8432 = !DISubroutineType(types: !8433)
!8433 = !{null, !103}
!8434 = !{!8435}
!8435 = !DILocalVariable(name: "line", arg: 1, scope: !8431, file: !645, line: 183, type: !103)
!8436 = !DILocation(line: 0, scope: !8431)
!8437 = !DILocation(line: 195, column: 28, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8439, file: !645, line: 185, column: 17)
!8439 = distinct !DILexicalBlock(scope: !8431, file: !645, line: 185, column: 6)
!8440 = !DILocation(line: 195, column: 3, scope: !8438)
!8441 = !DILocation(line: 200, column: 1, scope: !8431)
!8442 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8443, file: !8443, line: 910, type: !6881, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8444)
!8443 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8444 = !{!8445}
!8445 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8442, file: !8443, line: 910, type: !121)
!8446 = !DILocation(line: 0, scope: !8442)
!8447 = !DILocation(line: 912, column: 3, scope: !8442)
!8448 = !DILocation(line: 913, column: 1, scope: !8442)
!8449 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8443, file: !8443, line: 834, type: !7797, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8450)
!8450 = !{!8451}
!8451 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8449, file: !8443, line: 834, type: !121)
!8452 = !DILocation(line: 0, scope: !8449)
!8453 = !DILocation(line: 836, column: 11, scope: !8449)
!8454 = !DILocation(line: 836, column: 40, scope: !8449)
!8455 = !DILocation(line: 836, column: 3, scope: !8449)
!8456 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !645, file: !645, line: 304, type: !698, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8457)
!8457 = !{!8458}
!8458 = !DILocalVariable(name: "dev", arg: 1, scope: !8456, file: !645, line: 304, type: !674)
!8459 = !DILocation(line: 0, scope: !8456)
!8460 = !DILocation(line: 306, column: 2, scope: !8456)
!8461 = !DILocation(line: 307, column: 1, scope: !8456)
!8462 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !645, file: !645, line: 299, type: !698, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8463)
!8463 = !{!8464}
!8464 = !DILocalVariable(name: "dev", arg: 1, scope: !8462, file: !645, line: 299, type: !674)
!8465 = !DILocation(line: 0, scope: !8462)
!8466 = !DILocation(line: 301, column: 2, scope: !8462)
!8467 = !DILocation(line: 302, column: 1, scope: !8462)
!8468 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !645, file: !645, line: 294, type: !698, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8469)
!8469 = !{!8470}
!8470 = !DILocalVariable(name: "dev", arg: 1, scope: !8468, file: !645, line: 294, type: !674)
!8471 = !DILocation(line: 0, scope: !8468)
!8472 = !DILocation(line: 296, column: 2, scope: !8468)
!8473 = !DILocation(line: 297, column: 1, scope: !8468)
!8474 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !645, file: !645, line: 397, type: !698, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8475)
!8475 = !{!8476}
!8476 = !DILocalVariable(name: "dev", arg: 1, scope: !8474, file: !645, line: 397, type: !674)
!8477 = !DILocation(line: 0, scope: !8474)
!8478 = !DILocation(line: 399, column: 2, scope: !8474)
!8479 = !DILocation(line: 400, column: 1, scope: !8474)
!8480 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !645, file: !645, line: 392, type: !698, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8481)
!8481 = !{!8482}
!8482 = !DILocalVariable(name: "dev", arg: 1, scope: !8480, file: !645, line: 392, type: !674)
!8483 = !DILocation(line: 0, scope: !8480)
!8484 = !DILocation(line: 394, column: 2, scope: !8480)
!8485 = !DILocation(line: 395, column: 1, scope: !8480)
!8486 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !645, file: !645, line: 289, type: !698, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8487)
!8487 = !{!8488}
!8488 = !DILocalVariable(name: "dev", arg: 1, scope: !8486, file: !645, line: 289, type: !674)
!8489 = !DILocation(line: 0, scope: !8486)
!8490 = !DILocation(line: 291, column: 2, scope: !8486)
!8491 = !DILocation(line: 292, column: 1, scope: !8486)
!8492 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !645, file: !645, line: 387, type: !698, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8493)
!8493 = !{!8494}
!8494 = !DILocalVariable(name: "dev", arg: 1, scope: !8492, file: !645, line: 387, type: !674)
!8495 = !DILocation(line: 0, scope: !8492)
!8496 = !DILocation(line: 389, column: 2, scope: !8492)
!8497 = !DILocation(line: 390, column: 1, scope: !8492)
!8498 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !645, file: !645, line: 382, type: !698, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8499)
!8499 = !{!8500}
!8500 = !DILocalVariable(name: "dev", arg: 1, scope: !8498, file: !645, line: 382, type: !674)
!8501 = !DILocation(line: 0, scope: !8498)
!8502 = !DILocation(line: 384, column: 2, scope: !8498)
!8503 = !DILocation(line: 385, column: 1, scope: !8498)
!8504 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !645, file: !645, line: 373, type: !698, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8505)
!8505 = !{!8506}
!8506 = !DILocalVariable(name: "dev", arg: 1, scope: !8504, file: !645, line: 373, type: !674)
!8507 = !DILocation(line: 0, scope: !8504)
!8508 = !DILocation(line: 375, column: 2, scope: !8504)
!8509 = !DILocation(line: 376, column: 1, scope: !8504)
!8510 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !645, file: !645, line: 284, type: !698, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8511)
!8511 = !{!8512}
!8512 = !DILocalVariable(name: "dev", arg: 1, scope: !8510, file: !645, line: 284, type: !674)
!8513 = !DILocation(line: 0, scope: !8510)
!8514 = !DILocation(line: 286, column: 2, scope: !8510)
!8515 = !DILocation(line: 287, column: 1, scope: !8510)
!8516 = distinct !DISubprogram(name: "stm32_exti_init", scope: !645, file: !645, line: 416, type: !672, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8517)
!8517 = !{!8518}
!8518 = !DILocalVariable(name: "dev", arg: 1, scope: !8516, file: !645, line: 416, type: !674)
!8519 = !DILocation(line: 0, scope: !8516)
!8520 = !DILocation(line: 418, column: 2, scope: !8516)
!8521 = !DILocation(line: 420, column: 2, scope: !8516)
!8522 = !DILocation(line: 0, scope: !697)
!8523 = !DILocation(line: 493, column: 2, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !697, file: !645, line: 493, column: 2)
!8525 = !DILocation(line: 497, column: 2, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !697, file: !645, line: 497, column: 2)
!8527 = !DILocation(line: 507, column: 2, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !697, file: !645, line: 507, column: 2)
!8529 = !DILocation(line: 512, column: 2, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !697, file: !645, line: 512, column: 2)
!8531 = !DILocation(line: 516, column: 2, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !697, file: !645, line: 516, column: 2)
!8533 = !DILocation(line: 523, column: 2, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !697, file: !645, line: 523, column: 2)
!8535 = !DILocation(line: 527, column: 2, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !697, file: !645, line: 527, column: 2)
!8537 = !DILocation(line: 581, column: 2, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !697, file: !645, line: 581, column: 2)
!8539 = !DILocation(line: 586, column: 2, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !697, file: !645, line: 586, column: 2)
!8541 = !DILocation(line: 591, column: 2, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !697, file: !645, line: 591, column: 2)
!8543 = !DILocation(line: 595, column: 2, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !697, file: !645, line: 595, column: 2)
!8545 = !DILocation(line: 607, column: 1, scope: !697)
!8546 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !645, file: !645, line: 112, type: !8432, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8547)
!8547 = !{!8548, !8549}
!8548 = !DILocalVariable(name: "line", arg: 1, scope: !8546, file: !645, line: 112, type: !103)
!8549 = !DILocalVariable(name: "irqnum", scope: !8546, file: !645, line: 114, type: !103)
!8550 = !DILocation(line: 0, scope: !8546)
!8551 = !DILocation(line: 121, column: 11, scope: !8546)
!8552 = !DILocation(line: 130, column: 26, scope: !8546)
!8553 = !DILocation(line: 130, column: 2, scope: !8546)
!8554 = !DILocation(line: 134, column: 2, scope: !8546)
!8555 = !DILocation(line: 135, column: 1, scope: !8546)
!8556 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8443, file: !8443, line: 268, type: !6881, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8557)
!8557 = !{!8558}
!8558 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8556, file: !8443, line: 268, type: !121)
!8559 = !DILocation(line: 0, scope: !8556)
!8560 = !DILocation(line: 270, column: 3, scope: !8556)
!8561 = !DILocation(line: 271, column: 1, scope: !8556)
!8562 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !645, file: !645, line: 137, type: !8432, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8563)
!8563 = !{!8564}
!8564 = !DILocalVariable(name: "line", arg: 1, scope: !8562, file: !645, line: 137, type: !103)
!8565 = !DILocation(line: 0, scope: !8562)
!8566 = !DILocation(line: 141, column: 11, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8562, file: !645, line: 141, column: 6)
!8568 = !DILocation(line: 141, column: 6, scope: !8562)
!8569 = !DILocation(line: 145, column: 28, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8567, file: !645, line: 141, column: 17)
!8571 = !DILocation(line: 145, column: 3, scope: !8570)
!8572 = !DILocation(line: 147, column: 2, scope: !8570)
!8573 = !DILocation(line: 151, column: 1, scope: !8562)
!8574 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8443, file: !8443, line: 309, type: !6881, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8575)
!8575 = !{!8576}
!8576 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8574, file: !8443, line: 309, type: !121)
!8577 = !DILocation(line: 0, scope: !8574)
!8578 = !DILocation(line: 311, column: 3, scope: !8574)
!8579 = !DILocation(line: 312, column: 1, scope: !8574)
!8580 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !645, file: !645, line: 202, type: !8581, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8583)
!8581 = !DISubroutineType(types: !8582)
!8582 = !{null, !103, !103}
!8583 = !{!8584, !8585}
!8584 = !DILocalVariable(name: "line", arg: 1, scope: !8580, file: !645, line: 202, type: !103)
!8585 = !DILocalVariable(name: "trigger", arg: 2, scope: !8580, file: !645, line: 202, type: !103)
!8586 = !DILocation(line: 0, scope: !8580)
!8587 = !DILocation(line: 211, column: 2, scope: !8580)
!8588 = !DILocation(line: 213, column: 36, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8580, file: !645, line: 211, column: 19)
!8590 = !DILocation(line: 213, column: 3, scope: !8589)
!8591 = !DILocation(line: 214, column: 3, scope: !8589)
!8592 = !DILocation(line: 215, column: 3, scope: !8589)
!8593 = !DILocation(line: 217, column: 35, scope: !8589)
!8594 = !DILocation(line: 217, column: 3, scope: !8589)
!8595 = !DILocation(line: 218, column: 3, scope: !8589)
!8596 = !DILocation(line: 219, column: 3, scope: !8589)
!8597 = !DILocation(line: 221, column: 36, scope: !8589)
!8598 = !DILocation(line: 221, column: 3, scope: !8589)
!8599 = !DILocation(line: 222, column: 3, scope: !8589)
!8600 = !DILocation(line: 223, column: 3, scope: !8589)
!8601 = !DILocation(line: 225, column: 35, scope: !8589)
!8602 = !DILocation(line: 225, column: 3, scope: !8589)
!8603 = !DILocation(line: 226, column: 3, scope: !8589)
!8604 = !DILocation(line: 227, column: 3, scope: !8589)
!8605 = !DILocation(line: 232, column: 1, scope: !8580)
!8606 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8443, file: !8443, line: 573, type: !6881, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8607)
!8607 = !{!8608}
!8608 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8606, file: !8443, line: 573, type: !121)
!8609 = !DILocation(line: 0, scope: !8606)
!8610 = !DILocation(line: 575, column: 3, scope: !8606)
!8611 = !DILocation(line: 577, column: 1, scope: !8606)
!8612 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8443, file: !8443, line: 703, type: !6881, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8613)
!8613 = !{!8614}
!8614 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8612, file: !8443, line: 703, type: !121)
!8615 = !DILocation(line: 0, scope: !8612)
!8616 = !DILocation(line: 705, column: 3, scope: !8612)
!8617 = !DILocation(line: 706, column: 1, scope: !8612)
!8618 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8443, file: !8443, line: 529, type: !6881, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8619)
!8619 = !{!8620}
!8620 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8618, file: !8443, line: 529, type: !121)
!8621 = !DILocation(line: 0, scope: !8618)
!8622 = !DILocation(line: 531, column: 3, scope: !8618)
!8623 = !DILocation(line: 533, column: 1, scope: !8618)
!8624 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8443, file: !8443, line: 661, type: !6881, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8625)
!8625 = !{!8626}
!8626 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8624, file: !8443, line: 661, type: !121)
!8627 = !DILocation(line: 0, scope: !8624)
!8628 = !DILocation(line: 663, column: 3, scope: !8624)
!8629 = !DILocation(line: 664, column: 1, scope: !8624)
!8630 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !645, file: !645, line: 433, type: !8631, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8633)
!8631 = !DISubroutineType(types: !8632)
!8632 = !{!103, !103, !685, !102}
!8633 = !{!8634, !8635, !8636, !8637, !8639}
!8634 = !DILocalVariable(name: "line", arg: 1, scope: !8630, file: !645, line: 433, type: !103)
!8635 = !DILocalVariable(name: "cb", arg: 2, scope: !8630, file: !645, line: 433, type: !685)
!8636 = !DILocalVariable(name: "arg", arg: 3, scope: !8630, file: !645, line: 433, type: !102)
!8637 = !DILocalVariable(name: "dev", scope: !8630, file: !645, line: 435, type: !8638)
!8638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !674)
!8639 = !DILocalVariable(name: "data", scope: !8630, file: !645, line: 436, type: !8397)
!8640 = !DILocation(line: 0, scope: !8630)
!8641 = !DILocation(line: 438, column: 21, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8630, file: !645, line: 438, column: 6)
!8643 = !DILocation(line: 438, column: 6, scope: !8642)
!8644 = !DILocation(line: 438, column: 6, scope: !8630)
!8645 = !DILocation(line: 442, column: 20, scope: !8630)
!8646 = !DILocation(line: 443, column: 17, scope: !8630)
!8647 = !DILocation(line: 443, column: 22, scope: !8630)
!8648 = !DILocation(line: 445, column: 2, scope: !8630)
!8649 = !DILocation(line: 446, column: 1, scope: !8630)
!8650 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !645, file: !645, line: 448, type: !8432, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !561, retainedNodes: !8651)
!8651 = !{!8652, !8653, !8654}
!8652 = !DILocalVariable(name: "line", arg: 1, scope: !8650, file: !645, line: 448, type: !103)
!8653 = !DILocalVariable(name: "dev", scope: !8650, file: !645, line: 450, type: !8638)
!8654 = !DILocalVariable(name: "data", scope: !8650, file: !645, line: 451, type: !8397)
!8655 = !DILocation(line: 0, scope: !8650)
!8656 = !DILocation(line: 453, column: 17, scope: !8650)
!8657 = !DILocation(line: 453, column: 20, scope: !8650)
!8658 = !DILocation(line: 454, column: 17, scope: !8650)
!8659 = !DILocation(line: 454, column: 22, scope: !8650)
!8660 = !DILocation(line: 455, column: 1, scope: !8650)
!8661 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !829, file: !829, line: 183, type: !867, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8662)
!8662 = !{!8663, !8664, !8665, !8666, !8667}
!8663 = !DILocalVariable(name: "dev", arg: 1, scope: !8661, file: !829, line: 183, type: !858)
!8664 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8661, file: !829, line: 184, type: !869)
!8665 = !DILocalVariable(name: "pclken", scope: !8661, file: !829, line: 186, type: !819)
!8666 = !DILocalVariable(name: "reg", scope: !8661, file: !829, line: 187, type: !1575)
!8667 = !DILocalVariable(name: "reg_val", scope: !8661, file: !829, line: 188, type: !121)
!8668 = !DILocation(line: 0, scope: !8661)
!8669 = !DILocation(line: 192, column: 6, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8661, file: !829, line: 192, column: 6)
!8671 = !DILocation(line: 192, column: 6, scope: !8661)
!8672 = !DILocation(line: 197, column: 52, scope: !8661)
!8673 = !DILocation(line: 197, column: 8, scope: !8661)
!8674 = !DILocation(line: 198, column: 12, scope: !8661)
!8675 = !DILocation(line: 199, column: 21, scope: !8661)
!8676 = !DILocation(line: 199, column: 10, scope: !8661)
!8677 = !DILocation(line: 200, column: 7, scope: !8661)
!8678 = !DILocation(line: 202, column: 2, scope: !8661)
!8679 = !DILocation(line: 203, column: 1, scope: !8661)
!8680 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !829, file: !829, line: 205, type: !867, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8681)
!8681 = !{!8682, !8683, !8684, !8685, !8686}
!8682 = !DILocalVariable(name: "dev", arg: 1, scope: !8680, file: !829, line: 205, type: !858)
!8683 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8680, file: !829, line: 206, type: !869)
!8684 = !DILocalVariable(name: "pclken", scope: !8680, file: !829, line: 208, type: !819)
!8685 = !DILocalVariable(name: "reg", scope: !8680, file: !829, line: 209, type: !1575)
!8686 = !DILocalVariable(name: "reg_val", scope: !8680, file: !829, line: 210, type: !121)
!8687 = !DILocation(line: 0, scope: !8680)
!8688 = !DILocation(line: 214, column: 6, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8680, file: !829, line: 214, column: 6)
!8690 = !DILocation(line: 214, column: 6, scope: !8680)
!8691 = !DILocation(line: 219, column: 52, scope: !8680)
!8692 = !DILocation(line: 219, column: 8, scope: !8680)
!8693 = !DILocation(line: 220, column: 12, scope: !8680)
!8694 = !DILocation(line: 221, column: 22, scope: !8680)
!8695 = !DILocation(line: 221, column: 13, scope: !8680)
!8696 = !DILocation(line: 221, column: 10, scope: !8680)
!8697 = !DILocation(line: 222, column: 7, scope: !8680)
!8698 = !DILocation(line: 224, column: 2, scope: !8680)
!8699 = !DILocation(line: 225, column: 1, scope: !8680)
!8700 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !829, file: !829, line: 262, type: !883, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8701)
!8701 = !{!8702, !8703, !8704, !8705, !8706, !8707, !8708, !8709}
!8702 = !DILocalVariable(name: "clock", arg: 1, scope: !8700, file: !829, line: 262, type: !858)
!8703 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8700, file: !829, line: 263, type: !869)
!8704 = !DILocalVariable(name: "rate", arg: 3, scope: !8700, file: !829, line: 264, type: !825)
!8705 = !DILocalVariable(name: "pclken", scope: !8700, file: !829, line: 266, type: !819)
!8706 = !DILocalVariable(name: "ahb_clock", scope: !8700, file: !829, line: 273, type: !121)
!8707 = !DILocalVariable(name: "apb1_clock", scope: !8700, file: !829, line: 274, type: !121)
!8708 = !DILocalVariable(name: "apb2_clock", scope: !8700, file: !829, line: 276, type: !121)
!8709 = !DILocalVariable(name: "ahb3_clock", scope: !8700, file: !829, line: 286, type: !121)
!8710 = !DILocation(line: 0, scope: !8700)
!8711 = !DILocation(line: 273, column: 23, scope: !8700)
!8712 = !DILocation(line: 299, column: 18, scope: !8700)
!8713 = !DILocation(line: 299, column: 2, scope: !8700)
!8714 = !DILocation(line: 274, column: 24, scope: !8700)
!8715 = !DILocation(line: 319, column: 3, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8700, file: !829, line: 299, column: 23)
!8717 = !DILocation(line: 276, column: 24, scope: !8700)
!8718 = !DILocation(line: 323, column: 3, scope: !8716)
!8719 = !DILocation(line: 346, column: 33, scope: !8716)
!8720 = !DILocation(line: 346, column: 11, scope: !8716)
!8721 = !DILocation(line: 350, column: 3, scope: !8716)
!8722 = !DILocation(line: 374, column: 3, scope: !8716)
!8723 = !DILocation(line: 379, column: 3, scope: !8716)
!8724 = !DILocation(line: 0, scope: !8716)
!8725 = !DILocation(line: 396, column: 1, scope: !8700)
!8726 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !829, file: !829, line: 227, type: !899, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8727)
!8727 = !{!8728, !8729, !8730, !8731, !8732, !8733, !8734, !8735}
!8728 = !DILocalVariable(name: "dev", arg: 1, scope: !8726, file: !829, line: 227, type: !858)
!8729 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8726, file: !829, line: 228, type: !869)
!8730 = !DILocalVariable(name: "data", arg: 3, scope: !8726, file: !829, line: 229, type: !102)
!8731 = !DILocalVariable(name: "pclken", scope: !8726, file: !829, line: 233, type: !819)
!8732 = !DILocalVariable(name: "reg", scope: !8726, file: !829, line: 234, type: !1575)
!8733 = !DILocalVariable(name: "reg_val", scope: !8726, file: !829, line: 235, type: !121)
!8734 = !DILocalVariable(name: "dt_val", scope: !8726, file: !829, line: 235, type: !121)
!8735 = !DILocalVariable(name: "err", scope: !8726, file: !829, line: 236, type: !103)
!8736 = !DILocation(line: 0, scope: !8726)
!8737 = !DILocation(line: 241, column: 30, scope: !8726)
!8738 = !DILocation(line: 241, column: 8, scope: !8726)
!8739 = !DILocation(line: 242, column: 10, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8726, file: !829, line: 242, column: 6)
!8741 = !DILocation(line: 242, column: 6, scope: !8726)
!8742 = !DILocation(line: 247, column: 11, scope: !8726)
!8743 = !DILocation(line: 248, column: 6, scope: !8726)
!8744 = !DILocation(line: 247, column: 44, scope: !8726)
!8745 = !DILocation(line: 250, column: 6, scope: !8726)
!8746 = !DILocation(line: 249, column: 52, scope: !8726)
!8747 = !DILocation(line: 249, column: 8, scope: !8726)
!8748 = !DILocation(line: 251, column: 12, scope: !8726)
!8749 = !DILocation(line: 252, column: 10, scope: !8726)
!8750 = !DILocation(line: 253, column: 7, scope: !8726)
!8751 = !DILocation(line: 255, column: 2, scope: !8726)
!8752 = !DILocation(line: 260, column: 1, scope: !8726)
!8753 = distinct !DISubprogram(name: "enabled_clock", scope: !829, file: !829, line: 100, type: !8754, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8756)
!8754 = !DISubroutineType(types: !8755)
!8755 = !{!103, !121}
!8756 = !{!8757, !8758}
!8757 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8753, file: !829, line: 100, type: !121)
!8758 = !DILocalVariable(name: "r", scope: !8753, file: !829, line: 102, type: !103)
!8759 = !DILocation(line: 0, scope: !8753)
!8760 = !DILocation(line: 104, column: 2, scope: !8753)
!8761 = !DILocation(line: 180, column: 2, scope: !8753)
!8762 = !DILocation(line: 181, column: 1, scope: !8753)
!8763 = distinct !DISubprogram(name: "get_bus_clock", scope: !829, file: !829, line: 79, type: !8764, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8766)
!8764 = !DISubroutineType(types: !8765)
!8765 = !{!121, !121, !121}
!8766 = !{!8767, !8768}
!8767 = !DILocalVariable(name: "clock", arg: 1, scope: !8763, file: !829, line: 79, type: !121)
!8768 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8763, file: !829, line: 79, type: !121)
!8769 = !DILocation(line: 0, scope: !8763)
!8770 = !DILocation(line: 81, column: 15, scope: !8763)
!8771 = !DILocation(line: 81, column: 2, scope: !8763)
!8772 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !829, file: !829, line: 68, type: !8773, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8775)
!8773 = !DISubroutineType(types: !8774)
!8774 = !{!121, !121, !103, !103, !103}
!8775 = !{!8776, !8777, !8778, !8779}
!8776 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8772, file: !829, line: 68, type: !121)
!8777 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8772, file: !829, line: 69, type: !103)
!8778 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8772, file: !829, line: 70, type: !103)
!8779 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8772, file: !829, line: 71, type: !103)
!8780 = !DILocation(line: 0, scope: !8772)
!8781 = !DILocation(line: 75, column: 22, scope: !8772)
!8782 = !DILocation(line: 75, column: 34, scope: !8772)
!8783 = !DILocation(line: 75, column: 2, scope: !8772)
!8784 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !829, file: !829, line: 641, type: !856, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8785)
!8785 = !{!8786, !8787, !8788}
!8786 = !DILocalVariable(name: "dev", arg: 1, scope: !8784, file: !829, line: 641, type: !858)
!8787 = !DILocalVariable(name: "old_flash_freq", scope: !8784, file: !829, line: 664, type: !121)
!8788 = !DILocalVariable(name: "new_flash_freq", scope: !8784, file: !829, line: 665, type: !121)
!8789 = !DILocation(line: 0, scope: !8784)
!8790 = !DILocation(line: 646, column: 2, scope: !8784)
!8791 = !DILocation(line: 667, column: 19, scope: !8784)
!8792 = !DILocation(line: 674, column: 21, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8784, file: !829, line: 674, column: 6)
!8794 = !DILocation(line: 674, column: 6, scope: !8784)
!8795 = !DILocation(line: 675, column: 3, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8793, file: !829, line: 674, column: 59)
!8797 = !DILocation(line: 676, column: 2, scope: !8796)
!8798 = !DILocation(line: 680, column: 2, scope: !8784)
!8799 = !DILocation(line: 683, column: 2, scope: !8784)
!8800 = !DILocation(line: 690, column: 3, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8802, file: !829, line: 689, column: 9)
!8802 = distinct !DILexicalBlock(scope: !8784, file: !829, line: 685, column: 6)
!8803 = !DILocation(line: 695, column: 2, scope: !8784)
!8804 = !DILocation(line: 696, column: 2, scope: !8784)
!8805 = !DILocation(line: 696, column: 9, scope: !8784)
!8806 = !DILocation(line: 696, column: 34, scope: !8784)
!8807 = distinct !{!8807, !8804, !8808}
!8808 = !DILocation(line: 697, column: 2, scope: !8784)
!8809 = !DILocation(line: 720, column: 21, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8784, file: !829, line: 720, column: 6)
!8811 = !DILocation(line: 720, column: 6, scope: !8784)
!8812 = !DILocation(line: 721, column: 3, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8810, file: !829, line: 720, column: 60)
!8814 = !DILocation(line: 722, column: 2, scope: !8813)
!8815 = !DILocation(line: 725, column: 18, scope: !8784)
!8816 = !DILocation(line: 728, column: 2, scope: !8784)
!8817 = !DILocation(line: 730, column: 2, scope: !8784)
!8818 = !DILocation(line: 745, column: 2, scope: !8784)
!8819 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8820, file: !8820, line: 3275, type: !6871, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8820 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8821 = !DILocation(line: 3277, column: 21, scope: !8819)
!8822 = !DILocation(line: 3277, column: 3, scope: !8819)
!8823 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !829, file: !829, line: 507, type: !3220, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8824 = !DILocation(line: 534, column: 7, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8826, file: !829, line: 534, column: 7)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !829, line: 532, column: 37)
!8827 = distinct !DILexicalBlock(scope: !8823, file: !829, line: 532, column: 6)
!8828 = !DILocation(line: 534, column: 28, scope: !8825)
!8829 = !DILocation(line: 534, column: 7, scope: !8826)
!8830 = !DILocation(line: 536, column: 4, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8825, file: !829, line: 534, column: 34)
!8832 = !DILocation(line: 537, column: 4, scope: !8831)
!8833 = !DILocation(line: 537, column: 11, scope: !8831)
!8834 = !DILocation(line: 537, column: 32, scope: !8831)
!8835 = distinct !{!8835, !8832, !8836}
!8836 = !DILocation(line: 539, column: 4, scope: !8831)
!8837 = !DILocation(line: 583, column: 3, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !829, line: 577, column: 37)
!8839 = distinct !DILexicalBlock(scope: !8823, file: !829, line: 577, column: 6)
!8840 = !DILocation(line: 584, column: 3, scope: !8838)
!8841 = !DILocation(line: 584, column: 10, scope: !8838)
!8842 = !DILocation(line: 584, column: 31, scope: !8838)
!8843 = distinct !{!8843, !8840, !8844}
!8844 = !DILocation(line: 585, column: 3, scope: !8838)
!8845 = !DILocation(line: 627, column: 1, scope: !8823)
!8846 = distinct !DISubprogram(name: "set_up_plls", scope: !829, file: !829, line: 448, type: !3220, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8847 = !DILocation(line: 460, column: 6, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8846, file: !829, line: 460, column: 6)
!8849 = !DILocation(line: 460, column: 31, scope: !8848)
!8850 = !DILocation(line: 460, column: 6, scope: !8846)
!8851 = !DILocation(line: 461, column: 3, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8848, file: !829, line: 460, column: 67)
!8853 = !DILocation(line: 462, column: 3, scope: !8852)
!8854 = !DILocation(line: 463, column: 2, scope: !8852)
!8855 = !DILocation(line: 464, column: 2, scope: !8846)
!8856 = !DILocation(line: 488, column: 2, scope: !8846)
!8857 = !DILocation(line: 496, column: 2, scope: !8846)
!8858 = !DILocation(line: 499, column: 2, scope: !8846)
!8859 = !DILocation(line: 500, column: 2, scope: !8846)
!8860 = !DILocation(line: 500, column: 9, scope: !8846)
!8861 = !DILocation(line: 500, column: 30, scope: !8846)
!8862 = distinct !{!8862, !8859, !8863}
!8863 = !DILocation(line: 502, column: 2, scope: !8846)
!8864 = !DILocation(line: 505, column: 1, scope: !8846)
!8865 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8820, file: !8820, line: 3224, type: !6881, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8866)
!8866 = !{!8867}
!8867 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8865, file: !8820, line: 3224, type: !121)
!8868 = !DILocation(line: 0, scope: !8865)
!8869 = !DILocation(line: 3226, column: 3, scope: !8865)
!8870 = !DILocation(line: 3227, column: 1, scope: !8865)
!8871 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8820, file: !8820, line: 3188, type: !6881, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8872)
!8872 = !{!8873}
!8873 = !DILocalVariable(name: "Source", arg: 1, scope: !8871, file: !8820, line: 3188, type: !121)
!8874 = !DILocation(line: 0, scope: !8871)
!8875 = !DILocation(line: 3190, column: 3, scope: !8871)
!8876 = !DILocation(line: 3191, column: 1, scope: !8871)
!8877 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8820, file: !8820, line: 3204, type: !6871, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8878 = !DILocation(line: 3206, column: 21, scope: !8877)
!8879 = !DILocation(line: 3206, column: 3, scope: !8877)
!8880 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8820, file: !8820, line: 3240, type: !6881, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8881)
!8881 = !{!8882}
!8882 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8880, file: !8820, line: 3240, type: !121)
!8883 = !DILocation(line: 0, scope: !8880)
!8884 = !DILocation(line: 3242, column: 3, scope: !8880)
!8885 = !DILocation(line: 3243, column: 1, scope: !8880)
!8886 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8820, file: !8820, line: 3256, type: !6881, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !8887)
!8887 = !{!8888}
!8888 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8886, file: !8820, line: 3256, type: !121)
!8889 = !DILocation(line: 0, scope: !8886)
!8890 = !DILocation(line: 3258, column: 3, scope: !8886)
!8891 = !DILocation(line: 3259, column: 1, scope: !8886)
!8892 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !829, file: !829, line: 409, type: !3220, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8893 = !DILocation(line: 412, column: 6, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8892, file: !829, line: 412, column: 6)
!8895 = !DILocation(line: 412, column: 27, scope: !8894)
!8896 = !DILocation(line: 412, column: 6, scope: !8892)
!8897 = !DILocation(line: 414, column: 3, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8894, file: !829, line: 412, column: 33)
!8899 = !DILocation(line: 415, column: 3, scope: !8898)
!8900 = !DILocation(line: 415, column: 10, scope: !8898)
!8901 = !DILocation(line: 415, column: 31, scope: !8898)
!8902 = distinct !{!8902, !8899, !8903}
!8903 = !DILocation(line: 417, column: 3, scope: !8898)
!8904 = !DILocation(line: 421, column: 2, scope: !8892)
!8905 = !DILocation(line: 422, column: 2, scope: !8892)
!8906 = !DILocation(line: 422, column: 9, scope: !8892)
!8907 = !DILocation(line: 422, column: 34, scope: !8892)
!8908 = distinct !{!8908, !8905, !8909}
!8909 = !DILocation(line: 423, column: 2, scope: !8892)
!8910 = !DILocation(line: 424, column: 1, scope: !8892)
!8911 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8820, file: !8820, line: 4195, type: !3220, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8912 = !DILocation(line: 4197, column: 3, scope: !8911)
!8913 = !DILocation(line: 4198, column: 1, scope: !8911)
!8914 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8820, file: !8820, line: 4184, type: !3220, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8915 = !DILocation(line: 4186, column: 3, scope: !8914)
!8916 = !DILocation(line: 4187, column: 1, scope: !8914)
!8917 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8820, file: !8820, line: 4205, type: !6871, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8918 = !DILocation(line: 4207, column: 11, scope: !8917)
!8919 = !DILocation(line: 4207, column: 44, scope: !8917)
!8920 = !DILocation(line: 4207, column: 3, scope: !8917)
!8921 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8820, file: !8820, line: 3007, type: !6871, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8922 = !DILocation(line: 3009, column: 11, scope: !8921)
!8923 = !DILocation(line: 3009, column: 44, scope: !8921)
!8924 = !DILocation(line: 3009, column: 3, scope: !8921)
!8925 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8820, file: !8820, line: 2987, type: !3220, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8926 = !DILocation(line: 2989, column: 3, scope: !8925)
!8927 = !DILocation(line: 2990, column: 1, scope: !8925)
!8928 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8820, file: !8820, line: 3143, type: !3220, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8929 = !DILocation(line: 3145, column: 3, scope: !8928)
!8930 = !DILocation(line: 3146, column: 1, scope: !8928)
!8931 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8820, file: !8820, line: 3163, type: !6871, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !765, retainedNodes: !461)
!8932 = !DILocation(line: 3165, column: 11, scope: !8931)
!8933 = !DILocation(line: 3165, column: 46, scope: !8931)
!8934 = !DILocation(line: 3165, column: 3, scope: !8931)
!8935 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8936, file: !8936, line: 40, type: !6871, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !461)
!8936 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8937 = !DILocation(line: 43, column: 3, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !8936, line: 42, column: 37)
!8939 = distinct !DILexicalBlock(scope: !8935, file: !8936, line: 42, column: 6)
!8940 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8936, file: !8936, line: 56, type: !3220, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !461)
!8941 = !DILocation(line: 58, column: 2, scope: !8940)
!8942 = !DILocation(line: 62, column: 1, scope: !8940)
!8943 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8820, file: !8820, line: 4304, type: !8944, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !8946)
!8944 = !DISubroutineType(types: !8945)
!8945 = !{null, !121, !121, !121, !121}
!8946 = !{!8947, !8948, !8949, !8950}
!8947 = !DILocalVariable(name: "Source", arg: 1, scope: !8943, file: !8820, line: 4304, type: !121)
!8948 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8943, file: !8820, line: 4304, type: !121)
!8949 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8943, file: !8820, line: 4304, type: !121)
!8950 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8943, file: !8820, line: 4304, type: !121)
!8951 = !DILocation(line: 0, scope: !8943)
!8952 = !DILocation(line: 4306, column: 3, scope: !8943)
!8953 = !DILocation(line: 4308, column: 3, scope: !8943)
!8954 = !DILocation(line: 4312, column: 1, scope: !8943)
!8955 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8936, file: !8936, line: 69, type: !3220, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !461)
!8956 = !DILocation(line: 72, column: 2, scope: !8955)
!8957 = !DILocation(line: 73, column: 1, scope: !8955)
!8958 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8959, file: !8959, line: 1185, type: !6881, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !8960)
!8959 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8960 = !{!8961, !8962}
!8961 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8958, file: !8959, line: 1185, type: !121)
!8962 = !DILocalVariable(name: "tmpreg", scope: !8958, file: !8959, line: 1187, type: !120)
!8963 = !DILocation(line: 0, scope: !8958)
!8964 = !DILocation(line: 1187, column: 3, scope: !8958)
!8965 = !DILocation(line: 1187, column: 17, scope: !8958)
!8966 = !DILocation(line: 1188, column: 3, scope: !8958)
!8967 = !DILocation(line: 1190, column: 12, scope: !8958)
!8968 = !DILocation(line: 1190, column: 10, scope: !8958)
!8969 = !DILocation(line: 1191, column: 9, scope: !8958)
!8970 = !DILocation(line: 1192, column: 1, scope: !8958)
!8971 = distinct !DISubprogram(name: "uart_console_init", scope: !907, file: !907, line: 588, type: !944, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8972)
!8972 = !{!8973}
!8973 = !DILocalVariable(name: "arg", arg: 1, scope: !8971, file: !907, line: 588, type: !923)
!8974 = !DILocation(line: 0, scope: !8971)
!8975 = !DILocation(line: 593, column: 7, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8971, file: !907, line: 593, column: 6)
!8977 = !DILocation(line: 593, column: 6, scope: !8971)
!8978 = !DILocation(line: 597, column: 2, scope: !8971)
!8979 = !DILocation(line: 599, column: 2, scope: !8971)
!8980 = !DILocation(line: 600, column: 1, scope: !8971)
!8981 = distinct !DISubprogram(name: "device_is_ready", scope: !6631, file: !6631, line: 47, type: !8982, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8984)
!8982 = !DISubroutineType(types: !8983)
!8983 = !{!157, !923}
!8984 = !{!8985}
!8985 = !DILocalVariable(name: "dev", arg: 1, scope: !8981, file: !6631, line: 47, type: !923)
!8986 = !DILocation(line: 0, scope: !8981)
!8987 = !DILocation(line: 55, column: 2, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8981, file: !6631, line: 55, column: 2)
!8989 = !{i64 2154266213}
!8990 = !DILocation(line: 56, column: 9, scope: !8981)
!8991 = !DILocation(line: 56, column: 2, scope: !8981)
!8992 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !907, file: !907, line: 573, type: !3220, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !461)
!8993 = !DILocation(line: 576, column: 2, scope: !8992)
!8994 = !DILocation(line: 579, column: 2, scope: !8992)
!8995 = !DILocation(line: 581, column: 1, scope: !8992)
!8996 = distinct !DISubprogram(name: "console_out", scope: !907, file: !907, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8997)
!8997 = !{!8998, !8999}
!8998 = !DILocalVariable(name: "c", arg: 1, scope: !8996, file: !907, line: 77, type: !103)
!8999 = !DILocalVariable(name: "handled_by_debug_server", scope: !8996, file: !907, line: 81, type: !103)
!9000 = !DILocation(line: 0, scope: !8996)
!9001 = !DILocation(line: 81, column: 32, scope: !8996)
!9002 = !DILocation(line: 83, column: 6, scope: !8996)
!9003 = !DILocation(line: 89, column: 11, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8996, file: !907, line: 89, column: 6)
!9005 = !DILocation(line: 89, column: 6, scope: !8996)
!9006 = !DILocation(line: 90, column: 3, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9004, file: !907, line: 89, column: 17)
!9008 = !DILocation(line: 91, column: 2, scope: !9007)
!9009 = !DILocation(line: 92, column: 2, scope: !8996)
!9010 = !DILocation(line: 94, column: 2, scope: !8996)
!9011 = !DILocation(line: 95, column: 1, scope: !8996)
!9012 = distinct !DISubprogram(name: "uart_poll_out", scope: !5892, file: !5892, line: 95, type: !940, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9013)
!9013 = !{!9014, !9015}
!9014 = !DILocalVariable(name: "dev", arg: 1, scope: !9012, file: !5892, line: 95, type: !923)
!9015 = !DILocalVariable(name: "out_char", arg: 2, scope: !9012, file: !5892, line: 95, type: !155)
!9016 = !DILocation(line: 0, scope: !9012)
!9017 = !DILocation(line: 105, column: 2, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9012, file: !5892, line: 105, column: 2)
!9019 = !{i64 2154349458}
!9020 = !DILocation(line: 106, column: 2, scope: !9012)
!9021 = !DILocation(line: 107, column: 1, scope: !9012)
!9022 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !203, file: !203, line: 574, type: !940, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9023)
!9023 = !{!9024, !9025, !9026}
!9024 = !DILocalVariable(name: "dev", arg: 1, scope: !9022, file: !203, line: 574, type: !923)
!9025 = !DILocalVariable(name: "out_char", arg: 2, scope: !9022, file: !203, line: 575, type: !155)
!9026 = !DILocalVariable(name: "api", scope: !9022, file: !203, line: 577, type: !915)
!9027 = !DILocation(line: 0, scope: !9022)
!9028 = !DILocation(line: 578, column: 40, scope: !9022)
!9029 = !DILocation(line: 580, column: 7, scope: !9022)
!9030 = !DILocation(line: 580, column: 2, scope: !9022)
!9031 = !DILocation(line: 581, column: 1, scope: !9022)
!9032 = distinct !DISubprogram(name: "debug_hook_out_nop", scope: !907, file: !907, line: 49, type: !1057, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9033)
!9033 = !{!9034}
!9034 = !DILocalVariable(name: "c", arg: 1, scope: !9032, file: !907, line: 49, type: !146)
!9035 = !DILocation(line: 0, scope: !9032)
!9036 = !DILocation(line: 51, column: 2, scope: !9032)
!9037 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8982, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9038)
!9038 = !{!9039}
!9039 = !DILocalVariable(name: "dev", arg: 1, scope: !9037, file: !141, line: 730, type: !923)
!9040 = !DILocation(line: 0, scope: !9037)
!9041 = !DILocation(line: 732, column: 9, scope: !9037)
!9042 = !DILocation(line: 732, column: 2, scope: !9037)
!9043 = distinct !DISubprogram(name: "uart_console_in_debug_hook_install", scope: !907, file: !907, line: 44, type: !9044, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9046)
!9044 = !DISubroutineType(types: !9045)
!9045 = !{null, !1099}
!9046 = !{!9047}
!9047 = !DILocalVariable(name: "hook", arg: 1, scope: !9043, file: !907, line: 44, type: !1099)
!9048 = !DILocation(line: 0, scope: !9043)
!9049 = !DILocation(line: 46, column: 16, scope: !9043)
!9050 = !DILocation(line: 47, column: 1, scope: !9043)
!9051 = distinct !DISubprogram(name: "uart_console_out_debug_hook_install", scope: !907, file: !907, line: 55, type: !9052, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9054)
!9052 = !DISubroutineType(types: !9053)
!9053 = !{null, !1054}
!9054 = !{!9055}
!9055 = !DILocalVariable(name: "hook", arg: 1, scope: !9051, file: !907, line: 55, type: !1054)
!9056 = !DILocation(line: 0, scope: !9051)
!9057 = !DILocation(line: 57, column: 17, scope: !9051)
!9058 = !DILocation(line: 58, column: 1, scope: !9051)
!9059 = distinct !DISubprogram(name: "uart_register_input", scope: !907, file: !907, line: 549, type: !9060, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9062)
!9060 = !DISubroutineType(types: !9061)
!9061 = !{null, !1004, !1004, !1048}
!9062 = !{!9063, !9064, !9065}
!9063 = !DILocalVariable(name: "avail", arg: 1, scope: !9059, file: !907, line: 549, type: !1004)
!9064 = !DILocalVariable(name: "lines", arg: 2, scope: !9059, file: !907, line: 549, type: !1004)
!9065 = !DILocalVariable(name: "completion", arg: 3, scope: !9059, file: !907, line: 550, type: !1048)
!9066 = !DILocation(line: 0, scope: !9059)
!9067 = !DILocation(line: 552, column: 14, scope: !9059)
!9068 = !DILocation(line: 553, column: 14, scope: !9059)
!9069 = !DILocation(line: 554, column: 16, scope: !9059)
!9070 = !DILocation(line: 556, column: 2, scope: !9059)
!9071 = !DILocation(line: 557, column: 1, scope: !9059)
!9072 = distinct !DISubprogram(name: "console_input_init", scope: !907, file: !907, line: 532, type: !3220, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9073)
!9073 = !{!9074}
!9074 = !DILocalVariable(name: "c", scope: !9072, file: !907, line: 534, type: !154)
!9075 = !DILocation(line: 534, column: 2, scope: !9072)
!9076 = !DILocation(line: 536, column: 2, scope: !9072)
!9077 = !DILocation(line: 537, column: 2, scope: !9072)
!9078 = !DILocation(line: 539, column: 2, scope: !9072)
!9079 = !DILocation(line: 542, column: 9, scope: !9072)
!9080 = !DILocation(line: 542, column: 2, scope: !9072)
!9081 = !DILocation(line: 0, scope: !9072)
!9082 = !DILocation(line: 543, column: 3, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9072, file: !907, line: 542, column: 46)
!9084 = distinct !{!9084, !9080, !9085}
!9085 = !DILocation(line: 544, column: 2, scope: !9072)
!9086 = !DILocation(line: 546, column: 2, scope: !9072)
!9087 = !DILocation(line: 547, column: 1, scope: !9072)
!9088 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5892, file: !5892, line: 265, type: !974, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9089)
!9089 = !{!9090}
!9090 = !DILocalVariable(name: "dev", arg: 1, scope: !9088, file: !5892, line: 265, type: !923)
!9091 = !DILocation(line: 0, scope: !9088)
!9092 = !DILocation(line: 274, column: 2, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9088, file: !5892, line: 274, column: 2)
!9094 = !{i64 2154349934}
!9095 = !DILocation(line: 275, column: 2, scope: !9088)
!9096 = !DILocation(line: 276, column: 1, scope: !9088)
!9097 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5892, file: !5892, line: 217, type: !974, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9098)
!9098 = !{!9099}
!9099 = !DILocalVariable(name: "dev", arg: 1, scope: !9097, file: !5892, line: 217, type: !923)
!9100 = !DILocation(line: 0, scope: !9097)
!9101 = !DILocation(line: 226, column: 2, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9097, file: !5892, line: 226, column: 2)
!9103 = !{i64 2154349798}
!9104 = !DILocation(line: 227, column: 2, scope: !9097)
!9105 = !DILocation(line: 228, column: 1, scope: !9097)
!9106 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !203, file: !203, line: 1190, type: !9107, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9109)
!9107 = !DISubroutineType(types: !9108)
!9108 = !{null, !923, !990}
!9109 = !{!9110, !9111}
!9110 = !DILocalVariable(name: "dev", arg: 1, scope: !9106, file: !203, line: 1190, type: !923)
!9111 = !DILocalVariable(name: "cb", arg: 2, scope: !9106, file: !203, line: 1191, type: !990)
!9112 = !DILocation(line: 0, scope: !9106)
!9113 = !DILocation(line: 1193, column: 2, scope: !9106)
!9114 = !DILocation(line: 1194, column: 1, scope: !9106)
!9115 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !203, file: !203, line: 1024, type: !944, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9116)
!9116 = !{!9117, !9118}
!9117 = !DILocalVariable(name: "dev", arg: 1, scope: !9115, file: !203, line: 1024, type: !923)
!9118 = !DILocalVariable(name: "api", scope: !9115, file: !203, line: 1027, type: !915)
!9119 = !DILocation(line: 0, scope: !9115)
!9120 = !DILocation(line: 1028, column: 40, scope: !9115)
!9121 = !DILocation(line: 1030, column: 11, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9115, file: !203, line: 1030, column: 6)
!9123 = !DILocation(line: 1030, column: 24, scope: !9122)
!9124 = !DILocation(line: 1030, column: 6, scope: !9115)
!9125 = !DILocation(line: 1033, column: 9, scope: !9115)
!9126 = !DILocation(line: 1033, column: 2, scope: !9115)
!9127 = !DILocation(line: 1038, column: 1, scope: !9115)
!9128 = distinct !DISubprogram(name: "uart_fifo_read", scope: !203, file: !203, line: 785, type: !970, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9129)
!9129 = !{!9130, !9131, !9132, !9133}
!9130 = !DILocalVariable(name: "dev", arg: 1, scope: !9128, file: !203, line: 785, type: !923)
!9131 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9128, file: !203, line: 785, type: !261)
!9132 = !DILocalVariable(name: "size", arg: 3, scope: !9128, file: !203, line: 786, type: !262)
!9133 = !DILocalVariable(name: "api", scope: !9128, file: !203, line: 789, type: !915)
!9134 = !DILocation(line: 0, scope: !9128)
!9135 = !DILocation(line: 790, column: 40, scope: !9128)
!9136 = !DILocation(line: 792, column: 11, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9128, file: !203, line: 792, column: 6)
!9138 = !DILocation(line: 792, column: 21, scope: !9137)
!9139 = !DILocation(line: 792, column: 6, scope: !9128)
!9140 = !DILocation(line: 796, column: 9, scope: !9128)
!9141 = !DILocation(line: 796, column: 2, scope: !9128)
!9142 = !DILocation(line: 803, column: 1, scope: !9128)
!9143 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5892, file: !5892, line: 241, type: !974, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9144)
!9144 = !{!9145}
!9145 = !DILocalVariable(name: "dev", arg: 1, scope: !9143, file: !5892, line: 241, type: !923)
!9146 = !DILocation(line: 0, scope: !9143)
!9147 = !DILocation(line: 250, column: 2, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9143, file: !5892, line: 250, column: 2)
!9149 = !{i64 2154349866}
!9150 = !DILocation(line: 251, column: 2, scope: !9143)
!9151 = !DILocation(line: 252, column: 1, scope: !9143)
!9152 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !203, file: !203, line: 934, type: !974, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9153)
!9153 = !{!9154, !9155}
!9154 = !DILocalVariable(name: "dev", arg: 1, scope: !9152, file: !203, line: 934, type: !923)
!9155 = !DILocalVariable(name: "api", scope: !9152, file: !203, line: 937, type: !915)
!9156 = !DILocation(line: 0, scope: !9152)
!9157 = !DILocation(line: 938, column: 40, scope: !9152)
!9158 = !DILocation(line: 940, column: 11, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9152, file: !203, line: 940, column: 6)
!9160 = !DILocation(line: 940, column: 25, scope: !9159)
!9161 = !DILocation(line: 940, column: 6, scope: !9152)
!9162 = !DILocation(line: 941, column: 3, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9159, file: !203, line: 940, column: 34)
!9164 = !DILocation(line: 942, column: 2, scope: !9163)
!9165 = !DILocation(line: 946, column: 1, scope: !9152)
!9166 = !DILocation(line: 0, scope: !1064)
!9167 = !DILocation(line: 433, column: 9, scope: !1064)
!9168 = !DILocation(line: 433, column: 43, scope: !1064)
!9169 = !DILocation(line: 434, column: 9, scope: !1064)
!9170 = !DILocation(line: 433, column: 2, scope: !1064)
!9171 = !DILocation(line: 436, column: 3, scope: !1069)
!9172 = !DILocation(line: 439, column: 8, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !1069, file: !907, line: 439, column: 7)
!9174 = !DILocation(line: 439, column: 7, scope: !1069)
!9175 = distinct !{!9175, !9170, !9176}
!9176 = !DILocation(line: 529, column: 2, scope: !1064)
!9177 = !DILocation(line: 0, scope: !1069)
!9178 = !DILocation(line: 445, column: 8, scope: !1069)
!9179 = !DILocation(line: 446, column: 10, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !1069, file: !907, line: 446, column: 7)
!9181 = !DILocation(line: 446, column: 7, scope: !1069)
!9182 = !DILocation(line: 451, column: 7, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !1069, file: !907, line: 451, column: 7)
!9184 = !DILocation(line: 451, column: 21, scope: !9183)
!9185 = !DILocation(line: 451, column: 29, scope: !9183)
!9186 = !DILocation(line: 451, column: 46, scope: !9183)
!9187 = !DILocation(line: 451, column: 32, scope: !9183)
!9188 = !DILocation(line: 451, column: 52, scope: !9183)
!9189 = !DILocation(line: 451, column: 7, scope: !1069)
!9190 = !DILocation(line: 460, column: 8, scope: !1074)
!9191 = !DILocation(line: 460, column: 7, scope: !1069)
!9192 = !DILocation(line: 461, column: 10, scope: !1072)
!9193 = !DILocation(line: 0, scope: !1072)
!9194 = !DILocation(line: 461, column: 8, scope: !1073)
!9195 = !DILocation(line: 462, column: 9, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !1073, file: !907, line: 462, column: 8)
!9197 = !DILocation(line: 462, column: 8, scope: !1073)
!9198 = !DILocation(line: 477, column: 7, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !1069, file: !907, line: 477, column: 7)
!9200 = !DILocation(line: 477, column: 7, scope: !1069)
!9201 = !DILocation(line: 478, column: 16, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9199, file: !907, line: 477, column: 46)
!9203 = !DILocation(line: 478, column: 22, scope: !9202)
!9204 = !DILocation(line: 478, column: 4, scope: !9202)
!9205 = !DILocation(line: 479, column: 4, scope: !9202)
!9206 = !DILocation(line: 483, column: 7, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !1069, file: !907, line: 483, column: 7)
!9208 = !DILocation(line: 483, column: 7, scope: !1069)
!9209 = !DILocation(line: 484, column: 13, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9211, file: !907, line: 484, column: 8)
!9211 = distinct !DILexicalBlock(scope: !9207, file: !907, line: 483, column: 55)
!9212 = !DILocation(line: 484, column: 8, scope: !9211)
!9213 = !DILocation(line: 485, column: 5, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9210, file: !907, line: 484, column: 26)
!9215 = !DILocation(line: 486, column: 5, scope: !9214)
!9216 = !DILocation(line: 487, column: 4, scope: !9214)
!9217 = !DILocation(line: 493, column: 16, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !1069, file: !907, line: 493, column: 7)
!9219 = !DILocation(line: 493, column: 8, scope: !9218)
!9220 = !DILocation(line: 493, column: 7, scope: !1069)
!9221 = !DILocation(line: 494, column: 4, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9218, file: !907, line: 493, column: 23)
!9223 = !DILocation(line: 497, column: 9, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9225, file: !907, line: 497, column: 9)
!9225 = distinct !DILexicalBlock(scope: !9222, file: !907, line: 494, column: 18)
!9226 = !DILocation(line: 497, column: 13, scope: !9224)
!9227 = !DILocation(line: 497, column: 9, scope: !9225)
!9228 = !DILocation(line: 498, column: 16, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9224, file: !907, line: 497, column: 18)
!9230 = !DILocation(line: 498, column: 26, scope: !9229)
!9231 = !DILocation(line: 498, column: 34, scope: !9229)
!9232 = !DILocation(line: 498, column: 6, scope: !9229)
!9233 = !DILocation(line: 499, column: 5, scope: !9229)
!9234 = !DILocation(line: 502, column: 5, scope: !9225)
!9235 = !DILocation(line: 503, column: 5, scope: !9225)
!9236 = !DILocation(line: 505, column: 5, scope: !9225)
!9237 = !DILocation(line: 505, column: 15, scope: !9225)
!9238 = !DILocation(line: 505, column: 21, scope: !9225)
!9239 = !DILocation(line: 505, column: 19, scope: !9225)
!9240 = !DILocation(line: 505, column: 26, scope: !9225)
!9241 = !DILocation(line: 506, column: 5, scope: !9225)
!9242 = !DILocation(line: 507, column: 5, scope: !9225)
!9243 = !DILocation(line: 508, column: 9, scope: !9225)
!9244 = !DILocation(line: 509, column: 9, scope: !9225)
!9245 = !DILocation(line: 510, column: 5, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9225, file: !907, line: 510, column: 5)
!9247 = !DILocation(line: 511, column: 9, scope: !9225)
!9248 = !DILocation(line: 512, column: 5, scope: !9225)
!9249 = !DILocation(line: 514, column: 9, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9225, file: !907, line: 514, column: 9)
!9251 = !DILocation(line: 514, column: 23, scope: !9250)
!9252 = !DILocation(line: 515, column: 27, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9250, file: !907, line: 514, column: 32)
!9254 = !DILocation(line: 515, column: 38, scope: !9253)
!9255 = !DILocation(line: 515, column: 13, scope: !9253)
!9256 = !DILocation(line: 515, column: 10, scope: !9253)
!9257 = !DILocation(line: 516, column: 5, scope: !9253)
!9258 = !DILocation(line: 526, column: 7, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !1069, file: !907, line: 526, column: 7)
!9260 = !DILocation(line: 526, column: 13, scope: !9259)
!9261 = !DILocation(line: 526, column: 11, scope: !9259)
!9262 = !DILocation(line: 526, column: 17, scope: !9259)
!9263 = !DILocation(line: 526, column: 7, scope: !1069)
!9264 = !DILocation(line: 527, column: 17, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9259, file: !907, line: 526, column: 42)
!9266 = !DILocation(line: 527, column: 30, scope: !9265)
!9267 = !DILocation(line: 527, column: 4, scope: !9265)
!9268 = !DILocation(line: 528, column: 3, scope: !9265)
!9269 = !DILocation(line: 530, column: 1, scope: !1064)
!9270 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !203, file: !203, line: 1163, type: !988, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9271)
!9271 = !{!9272, !9273, !9274, !9275}
!9272 = !DILocalVariable(name: "dev", arg: 1, scope: !9270, file: !203, line: 1163, type: !923)
!9273 = !DILocalVariable(name: "cb", arg: 2, scope: !9270, file: !203, line: 1164, type: !990)
!9274 = !DILocalVariable(name: "user_data", arg: 3, scope: !9270, file: !203, line: 1165, type: !102)
!9275 = !DILocalVariable(name: "api", scope: !9270, file: !203, line: 1168, type: !915)
!9276 = !DILocation(line: 0, scope: !9270)
!9277 = !DILocation(line: 1169, column: 40, scope: !9270)
!9278 = !DILocation(line: 1171, column: 11, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9270, file: !203, line: 1171, column: 6)
!9280 = !DILocation(line: 1171, column: 20, scope: !9279)
!9281 = !DILocation(line: 1171, column: 29, scope: !9279)
!9282 = !DILocation(line: 1171, column: 46, scope: !9279)
!9283 = !DILocation(line: 1171, column: 6, scope: !9270)
!9284 = !DILocation(line: 1172, column: 3, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9279, file: !203, line: 1171, column: 56)
!9286 = !DILocation(line: 1173, column: 2, scope: !9285)
!9287 = !DILocation(line: 1179, column: 1, scope: !9270)
!9288 = distinct !DISubprogram(name: "uart_irq_update", scope: !5892, file: !5892, line: 360, type: !944, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9289)
!9289 = !{!9290}
!9290 = !DILocalVariable(name: "dev", arg: 1, scope: !9288, file: !5892, line: 360, type: !923)
!9291 = !DILocation(line: 0, scope: !9288)
!9292 = !DILocation(line: 368, column: 2, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9288, file: !5892, line: 368, column: 2)
!9294 = !{i64 2154350206}
!9295 = !DILocation(line: 369, column: 9, scope: !9288)
!9296 = !DILocation(line: 369, column: 2, scope: !9288)
!9297 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !5892, file: !5892, line: 337, type: !944, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9298)
!9298 = !{!9299}
!9299 = !DILocalVariable(name: "dev", arg: 1, scope: !9297, file: !5892, line: 337, type: !923)
!9300 = !DILocation(line: 0, scope: !9297)
!9301 = !DILocation(line: 345, column: 2, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9297, file: !5892, line: 345, column: 2)
!9303 = !{i64 2154350138}
!9304 = !DILocation(line: 346, column: 9, scope: !9297)
!9305 = !DILocation(line: 346, column: 2, scope: !9297)
!9306 = distinct !DISubprogram(name: "read_uart", scope: !907, file: !907, line: 127, type: !9307, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9309)
!9307 = !DISubroutineType(types: !9308)
!9308 = !{!103, !923, !261, !32}
!9309 = !{!9310, !9311, !9312, !9313}
!9310 = !DILocalVariable(name: "uart", arg: 1, scope: !9306, file: !907, line: 127, type: !923)
!9311 = !DILocalVariable(name: "buf", arg: 2, scope: !9306, file: !907, line: 127, type: !261)
!9312 = !DILocalVariable(name: "size", arg: 3, scope: !9306, file: !907, line: 128, type: !32)
!9313 = !DILocalVariable(name: "rx", scope: !9306, file: !907, line: 130, type: !103)
!9314 = !DILocation(line: 0, scope: !9306)
!9315 = !DILocation(line: 132, column: 7, scope: !9306)
!9316 = !DILocation(line: 133, column: 9, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9306, file: !907, line: 133, column: 6)
!9318 = !DILocation(line: 133, column: 6, scope: !9306)
!9319 = !DILocation(line: 135, column: 3, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9317, file: !907, line: 133, column: 14)
!9321 = !DILocation(line: 137, column: 3, scope: !9320)
!9322 = !DILocation(line: 141, column: 1, scope: !9306)
!9323 = distinct !DISubprogram(name: "k_queue_get", scope: !3653, file: !3653, line: 649, type: !9324, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9331)
!9324 = !DISubroutineType(types: !9325)
!9325 = !{!102, !9326, !9327}
!9326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!9327 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1677, line: 67, baseType: !9328)
!9328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1677, line: 65, size: 64, elements: !9329)
!9329 = !{!9330}
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9328, file: !1677, line: 66, baseType: !1676, size: 64)
!9331 = !{!9332, !9333}
!9332 = !DILocalVariable(name: "queue", arg: 1, scope: !9323, file: !3653, line: 649, type: !9326)
!9333 = !DILocalVariable(name: "timeout", arg: 2, scope: !9323, file: !3653, line: 649, type: !9327)
!9334 = !DILocation(line: 0, scope: !9323)
!9335 = !DILocation(line: 658, column: 2, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9323, file: !3653, line: 658, column: 2)
!9337 = !{i64 2154074584}
!9338 = !DILocation(line: 659, column: 9, scope: !9323)
!9339 = !DILocation(line: 659, column: 2, scope: !9323)
!9340 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1090, file: !1090, line: 131, type: !9341, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9345)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!157, !9343, !103}
!9343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9344, size: 32)
!9344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!9345 = !{!9346, !9347, !9348}
!9346 = !DILocalVariable(name: "target", arg: 1, scope: !9340, file: !1090, line: 131, type: !9343)
!9347 = !DILocalVariable(name: "bit", arg: 2, scope: !9340, file: !1090, line: 131, type: !103)
!9348 = !DILocalVariable(name: "val", scope: !9340, file: !1090, line: 133, type: !9349)
!9349 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1090, line: 23, baseType: !1089)
!9350 = !DILocation(line: 0, scope: !9340)
!9351 = !DILocation(line: 133, column: 21, scope: !9340)
!9352 = !DILocation(line: 135, column: 27, scope: !9340)
!9353 = !DILocation(line: 135, column: 50, scope: !9340)
!9354 = !DILocation(line: 135, column: 2, scope: !9340)
!9355 = distinct !DISubprogram(name: "handle_ansi", scope: !907, file: !907, line: 232, type: !9356, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9358)
!9356 = !DISubroutineType(types: !9357)
!9357 = !{null, !154, !1051}
!9358 = !{!9359, !9360, !9361}
!9359 = !DILocalVariable(name: "byte", arg: 1, scope: !9355, file: !907, line: 232, type: !154)
!9360 = !DILocalVariable(name: "line", arg: 2, scope: !9355, file: !907, line: 232, type: !1051)
!9361 = !DILabel(scope: !9355, name: "ansi_cmd", file: !907, line: 268)
!9362 = !DILocation(line: 0, scope: !9355)
!9363 = !DILocation(line: 234, column: 6, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9355, file: !907, line: 234, column: 6)
!9365 = !DILocation(line: 234, column: 6, scope: !9355)
!9366 = !DILocation(line: 235, column: 16, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9368, file: !907, line: 235, column: 7)
!9368 = distinct !DILexicalBlock(scope: !9364, file: !907, line: 234, column: 61)
!9369 = !DILocation(line: 235, column: 8, scope: !9367)
!9370 = !DILocation(line: 235, column: 7, scope: !9368)
!9371 = !DILocation(line: 236, column: 13, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9367, file: !907, line: 235, column: 23)
!9373 = !DILocation(line: 237, column: 4, scope: !9372)
!9374 = !DILocation(line: 240, column: 3, scope: !9368)
!9375 = !DILocation(line: 241, column: 19, scope: !9368)
!9376 = !DILocation(line: 241, column: 12, scope: !9368)
!9377 = !DILocation(line: 242, column: 14, scope: !9368)
!9378 = !DILocation(line: 243, column: 3, scope: !9368)
!9379 = !DILocation(line: 246, column: 6, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9355, file: !907, line: 246, column: 6)
!9381 = !DILocation(line: 246, column: 6, scope: !9355)
!9382 = !DILocation(line: 247, column: 15, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9384, file: !907, line: 247, column: 7)
!9384 = distinct !DILexicalBlock(scope: !9380, file: !907, line: 246, column: 49)
!9385 = !DILocation(line: 247, column: 7, scope: !9383)
!9386 = !DILocation(line: 247, column: 7, scope: !9384)
!9387 = !DILocation(line: 248, column: 8, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9389, file: !907, line: 248, column: 8)
!9389 = distinct !DILexicalBlock(scope: !9383, file: !907, line: 247, column: 22)
!9390 = !DILocation(line: 248, column: 8, scope: !9389)
!9391 = !DILocation(line: 249, column: 16, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9388, file: !907, line: 248, column: 53)
!9393 = !DILocation(line: 250, column: 24, scope: !9392)
!9394 = !DILocation(line: 250, column: 16, scope: !9392)
!9395 = !DILocation(line: 251, column: 4, scope: !9392)
!9396 = !DILocation(line: 252, column: 14, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9388, file: !907, line: 251, column: 11)
!9398 = !DILocation(line: 253, column: 22, scope: !9397)
!9399 = !DILocation(line: 253, column: 14, scope: !9397)
!9400 = !DILocation(line: 259, column: 12, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9384, file: !907, line: 259, column: 7)
!9402 = !DILocation(line: 259, column: 19, scope: !9401)
!9403 = !DILocation(line: 260, column: 8, scope: !9401)
!9404 = !DILocation(line: 259, column: 7, scope: !9384)
!9405 = !DILocation(line: 264, column: 3, scope: !9384)
!9406 = !DILocation(line: 265, column: 3, scope: !9384)
!9407 = !DILocation(line: 266, column: 2, scope: !9384)
!9408 = !DILocation(line: 268, column: 1, scope: !9355)
!9409 = !DILocation(line: 269, column: 2, scope: !9355)
!9410 = !DILocation(line: 271, column: 7, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9412, file: !907, line: 271, column: 7)
!9412 = distinct !DILexicalBlock(scope: !9355, file: !907, line: 269, column: 16)
!9413 = !DILocation(line: 271, column: 18, scope: !9411)
!9414 = !DILocation(line: 271, column: 16, scope: !9411)
!9415 = !DILocation(line: 271, column: 7, scope: !9412)
!9416 = !DILocation(line: 275, column: 7, scope: !9412)
!9417 = !DILocation(line: 276, column: 7, scope: !9412)
!9418 = !DILocation(line: 277, column: 3, scope: !9412)
!9419 = !DILocation(line: 278, column: 3, scope: !9412)
!9420 = !DILocation(line: 280, column: 7, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9412, file: !907, line: 280, column: 7)
!9422 = !DILocation(line: 280, column: 18, scope: !9421)
!9423 = !DILocation(line: 280, column: 16, scope: !9421)
!9424 = !DILocation(line: 280, column: 7, scope: !9412)
!9425 = !DILocation(line: 284, column: 7, scope: !9412)
!9426 = !DILocation(line: 285, column: 7, scope: !9412)
!9427 = !DILocation(line: 286, column: 3, scope: !9412)
!9428 = !DILocation(line: 287, column: 3, scope: !9412)
!9429 = !DILocation(line: 289, column: 8, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9412, file: !907, line: 289, column: 7)
!9431 = !DILocation(line: 289, column: 7, scope: !9412)
!9432 = !DILocation(line: 293, column: 19, scope: !9412)
!9433 = !DILocation(line: 293, column: 3, scope: !9412)
!9434 = !DILocation(line: 294, column: 10, scope: !9412)
!9435 = !DILocation(line: 294, column: 7, scope: !9412)
!9436 = !DILocation(line: 295, column: 7, scope: !9412)
!9437 = !DILocation(line: 296, column: 3, scope: !9412)
!9438 = !DILocation(line: 298, column: 8, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9412, file: !907, line: 298, column: 7)
!9440 = !DILocation(line: 298, column: 7, scope: !9412)
!9441 = !DILocation(line: 302, column: 18, scope: !9412)
!9442 = !DILocation(line: 302, column: 3, scope: !9412)
!9443 = !DILocation(line: 303, column: 10, scope: !9412)
!9444 = !DILocation(line: 303, column: 7, scope: !9412)
!9445 = !DILocation(line: 304, column: 7, scope: !9412)
!9446 = !DILocation(line: 305, column: 3, scope: !9412)
!9447 = !DILocation(line: 307, column: 8, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9412, file: !907, line: 307, column: 7)
!9449 = !DILocation(line: 307, column: 7, scope: !9412)
!9450 = !DILocation(line: 311, column: 3, scope: !9412)
!9451 = !DILocation(line: 312, column: 18, scope: !9412)
!9452 = !DILocation(line: 312, column: 13, scope: !9412)
!9453 = !DILocation(line: 312, column: 24, scope: !9412)
!9454 = !DILocation(line: 312, column: 3, scope: !9412)
!9455 = !DILocation(line: 313, column: 3, scope: !9412)
!9456 = !DILocation(line: 318, column: 2, scope: !9355)
!9457 = !DILocation(line: 319, column: 1, scope: !9355)
!9458 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1090, file: !1090, line: 152, type: !9459, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9462)
!9459 = !DISubroutineType(types: !9460)
!9460 = !{!157, !9461, !103}
!9461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!9462 = !{!9463, !9464, !9465, !9466}
!9463 = !DILocalVariable(name: "target", arg: 1, scope: !9458, file: !1090, line: 152, type: !9461)
!9464 = !DILocalVariable(name: "bit", arg: 2, scope: !9458, file: !1090, line: 152, type: !103)
!9465 = !DILocalVariable(name: "mask", scope: !9458, file: !1090, line: 154, type: !9349)
!9466 = !DILocalVariable(name: "old", scope: !9458, file: !1090, line: 155, type: !9349)
!9467 = !DILocation(line: 0, scope: !9458)
!9468 = !DILocation(line: 154, column: 22, scope: !9458)
!9469 = !DILocation(line: 157, column: 45, scope: !9458)
!9470 = !DILocation(line: 157, column: 8, scope: !9458)
!9471 = !DILocation(line: 159, column: 14, scope: !9458)
!9472 = !DILocation(line: 159, column: 22, scope: !9458)
!9473 = !DILocation(line: 159, column: 2, scope: !9458)
!9474 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1090, file: !1090, line: 217, type: !9475, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9477)
!9475 = !DISubroutineType(types: !9476)
!9476 = !{null, !9461, !103}
!9477 = !{!9478, !9479, !9480}
!9478 = !DILocalVariable(name: "target", arg: 1, scope: !9474, file: !1090, line: 217, type: !9461)
!9479 = !DILocalVariable(name: "bit", arg: 2, scope: !9474, file: !1090, line: 217, type: !103)
!9480 = !DILocalVariable(name: "mask", scope: !9474, file: !1090, line: 219, type: !9349)
!9481 = !DILocation(line: 0, scope: !9474)
!9482 = !DILocation(line: 219, column: 22, scope: !9474)
!9483 = !DILocation(line: 221, column: 8, scope: !9474)
!9484 = !DILocation(line: 222, column: 1, scope: !9474)
!9485 = distinct !DISubprogram(name: "isprint", scope: !4970, file: !4970, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9486)
!9486 = !{!9487}
!9487 = !DILocalVariable(name: "c", arg: 1, scope: !9485, file: !4970, line: 37, type: !103)
!9488 = !DILocation(line: 0, scope: !9485)
!9489 = !DILocation(line: 39, column: 38, scope: !9485)
!9490 = !DILocation(line: 39, column: 2, scope: !9485)
!9491 = distinct !DISubprogram(name: "del_char", scope: !907, file: !907, line: 191, type: !9492, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9494)
!9492 = !DISubroutineType(types: !9493)
!9493 = !{null, !1051, !154}
!9494 = !{!9495, !9496}
!9495 = !DILocalVariable(name: "pos", arg: 1, scope: !9491, file: !907, line: 191, type: !1051)
!9496 = !DILocalVariable(name: "end", arg: 2, scope: !9491, file: !907, line: 191, type: !154)
!9497 = !DILocation(line: 0, scope: !9491)
!9498 = !DILocation(line: 193, column: 2, scope: !9491)
!9499 = !DILocation(line: 195, column: 10, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9491, file: !907, line: 195, column: 6)
!9501 = !DILocation(line: 195, column: 6, scope: !9491)
!9502 = !DILocation(line: 196, column: 3, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9500, file: !907, line: 195, column: 17)
!9504 = !DILocation(line: 197, column: 3, scope: !9503)
!9505 = !DILocation(line: 198, column: 3, scope: !9503)
!9506 = !DILocation(line: 201, column: 2, scope: !9491)
!9507 = !DILocation(line: 203, column: 2, scope: !9491)
!9508 = !DILocation(line: 203, column: 12, scope: !9491)
!9509 = !DILocation(line: 204, column: 16, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9491, file: !907, line: 203, column: 20)
!9511 = !DILocation(line: 204, column: 10, scope: !9510)
!9512 = !DILocation(line: 204, column: 8, scope: !9510)
!9513 = !DILocation(line: 205, column: 3, scope: !9510)
!9514 = !DILocation(line: 203, column: 15, scope: !9491)
!9515 = distinct !{!9515, !9507, !9516}
!9516 = !DILocation(line: 206, column: 2, scope: !9491)
!9517 = !DILocation(line: 208, column: 2, scope: !9491)
!9518 = !DILocation(line: 211, column: 2, scope: !9491)
!9519 = !DILocation(line: 212, column: 1, scope: !9491)
!9520 = !DISubprogram(name: "k_queue_append", scope: !300, file: !300, line: 1775, type: !9521, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!9521 = !DISubroutineType(types: !9522)
!9522 = !{null, !9326, !102}
!9523 = distinct !DISubprogram(name: "insert_char", scope: !907, file: !907, line: 163, type: !9524, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9526)
!9524 = !DISubroutineType(types: !9525)
!9525 = !{null, !1051, !146, !154}
!9526 = !{!9527, !9528, !9529, !9530}
!9527 = !DILocalVariable(name: "pos", arg: 1, scope: !9523, file: !907, line: 163, type: !1051)
!9528 = !DILocalVariable(name: "c", arg: 2, scope: !9523, file: !907, line: 163, type: !146)
!9529 = !DILocalVariable(name: "end", arg: 3, scope: !9523, file: !907, line: 163, type: !154)
!9530 = !DILocalVariable(name: "tmp", scope: !9523, file: !907, line: 165, type: !146)
!9531 = !DILocation(line: 0, scope: !9523)
!9532 = !DILocation(line: 168, column: 2, scope: !9523)
!9533 = !DILocation(line: 170, column: 10, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9523, file: !907, line: 170, column: 6)
!9535 = !DILocation(line: 170, column: 6, scope: !9523)
!9536 = !DILocation(line: 171, column: 8, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9534, file: !907, line: 170, column: 17)
!9538 = !DILocation(line: 172, column: 3, scope: !9537)
!9539 = !DILocation(line: 175, column: 8, scope: !9523)
!9540 = !DILocation(line: 176, column: 11, scope: !9523)
!9541 = !DILocation(line: 178, column: 2, scope: !9523)
!9542 = !DILocation(line: 180, column: 2, scope: !9523)
!9543 = !DILocation(line: 180, column: 12, scope: !9523)
!9544 = !DILocation(line: 181, column: 3, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9523, file: !907, line: 180, column: 20)
!9546 = !DILocation(line: 182, column: 7, scope: !9545)
!9547 = !DILocation(line: 183, column: 12, scope: !9545)
!9548 = !DILocation(line: 180, column: 15, scope: !9523)
!9549 = distinct !{!9549, !9542, !9550}
!9550 = !DILocation(line: 185, column: 2, scope: !9523)
!9551 = !DILocation(line: 188, column: 2, scope: !9523)
!9552 = !DILocation(line: 189, column: 1, scope: !9523)
!9553 = distinct !DISubprogram(name: "cursor_save", scope: !907, file: !907, line: 153, type: !3220, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !461)
!9554 = !DILocation(line: 155, column: 2, scope: !9553)
!9555 = !DILocation(line: 156, column: 1, scope: !9553)
!9556 = distinct !DISubprogram(name: "cursor_restore", scope: !907, file: !907, line: 158, type: !3220, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !461)
!9557 = !DILocation(line: 160, column: 2, scope: !9556)
!9558 = !DILocation(line: 161, column: 1, scope: !9556)
!9559 = distinct !DISubprogram(name: "atomic_or", scope: !9560, file: !9560, line: 279, type: !9561, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9563)
!9560 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9561 = !DISubroutineType(types: !9562)
!9562 = !{!9349, !9461, !9349}
!9563 = !{!9564, !9565}
!9564 = !DILocalVariable(name: "target", arg: 1, scope: !9559, file: !9560, line: 279, type: !9461)
!9565 = !DILocalVariable(name: "value", arg: 2, scope: !9559, file: !9560, line: 279, type: !9349)
!9566 = !DILocation(line: 0, scope: !9559)
!9567 = !DILocation(line: 281, column: 9, scope: !9559)
!9568 = !DILocation(line: 281, column: 2, scope: !9559)
!9569 = distinct !DISubprogram(name: "atomic_and", scope: !9560, file: !9560, line: 319, type: !9561, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9570)
!9570 = !{!9571, !9572}
!9571 = !DILocalVariable(name: "target", arg: 1, scope: !9569, file: !9560, line: 319, type: !9461)
!9572 = !DILocalVariable(name: "value", arg: 2, scope: !9569, file: !9560, line: 319, type: !9349)
!9573 = !DILocation(line: 0, scope: !9569)
!9574 = !DILocation(line: 321, column: 9, scope: !9569)
!9575 = !DILocation(line: 321, column: 2, scope: !9569)
!9576 = distinct !DISubprogram(name: "isdigit", scope: !4970, file: !4970, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9577)
!9577 = !{!9578}
!9578 = !DILocalVariable(name: "a", arg: 1, scope: !9576, file: !4970, line: 43, type: !103)
!9579 = !DILocation(line: 0, scope: !9576)
!9580 = !DILocation(line: 45, column: 29, scope: !9576)
!9581 = !DILocation(line: 45, column: 45, scope: !9576)
!9582 = !DILocation(line: 45, column: 2, scope: !9576)
!9583 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1090, file: !1090, line: 176, type: !9459, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9584)
!9584 = !{!9585, !9586, !9587, !9588}
!9585 = !DILocalVariable(name: "target", arg: 1, scope: !9583, file: !1090, line: 176, type: !9461)
!9586 = !DILocalVariable(name: "bit", arg: 2, scope: !9583, file: !1090, line: 176, type: !103)
!9587 = !DILocalVariable(name: "mask", scope: !9583, file: !1090, line: 178, type: !9349)
!9588 = !DILocalVariable(name: "old", scope: !9583, file: !1090, line: 179, type: !9349)
!9589 = !DILocation(line: 0, scope: !9583)
!9590 = !DILocation(line: 181, column: 8, scope: !9583)
!9591 = !DILocation(line: 183, column: 14, scope: !9583)
!9592 = !DILocation(line: 183, column: 22, scope: !9583)
!9593 = !DILocation(line: 183, column: 2, scope: !9583)
!9594 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1090, file: !1090, line: 198, type: !9475, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9595)
!9595 = !{!9596, !9597, !9598}
!9596 = !DILocalVariable(name: "target", arg: 1, scope: !9594, file: !1090, line: 198, type: !9461)
!9597 = !DILocalVariable(name: "bit", arg: 2, scope: !9594, file: !1090, line: 198, type: !103)
!9598 = !DILocalVariable(name: "mask", scope: !9594, file: !1090, line: 200, type: !9349)
!9599 = !DILocation(line: 0, scope: !9594)
!9600 = !DILocation(line: 200, column: 22, scope: !9594)
!9601 = !DILocation(line: 202, column: 45, scope: !9594)
!9602 = !DILocation(line: 202, column: 8, scope: !9594)
!9603 = !DILocation(line: 203, column: 1, scope: !9594)
!9604 = distinct !DISubprogram(name: "cursor_backward", scope: !907, file: !907, line: 148, type: !5781, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9605)
!9605 = !{!9606}
!9606 = !DILocalVariable(name: "count", arg: 1, scope: !9604, file: !907, line: 148, type: !32)
!9607 = !DILocation(line: 0, scope: !9604)
!9608 = !DILocation(line: 150, column: 2, scope: !9604)
!9609 = !DILocation(line: 151, column: 1, scope: !9604)
!9610 = distinct !DISubprogram(name: "cursor_forward", scope: !907, file: !907, line: 143, type: !5781, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9611)
!9611 = !{!9612}
!9612 = !DILocalVariable(name: "count", arg: 1, scope: !9610, file: !907, line: 143, type: !32)
!9613 = !DILocation(line: 0, scope: !9610)
!9614 = !DILocation(line: 145, column: 2, scope: !9610)
!9615 = !DILocation(line: 146, column: 1, scope: !9610)
!9616 = distinct !DISubprogram(name: "atomic_get", scope: !9560, file: !9560, line: 159, type: !9617, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9619)
!9617 = !DISubroutineType(types: !9618)
!9618 = !{!9349, !9343}
!9619 = !{!9620}
!9620 = !DILocalVariable(name: "target", arg: 1, scope: !9616, file: !9560, line: 159, type: !9343)
!9621 = !DILocation(line: 0, scope: !9616)
!9622 = !DILocation(line: 161, column: 9, scope: !9616)
!9623 = !DILocation(line: 161, column: 2, scope: !9616)
!9624 = !DISubprogram(name: "z_impl_k_queue_get", scope: !3653, file: !3653, line: 646, type: !9324, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!9625 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !203, file: !203, line: 1093, type: !944, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9626)
!9626 = !{!9627, !9628}
!9627 = !DILocalVariable(name: "dev", arg: 1, scope: !9625, file: !203, line: 1093, type: !923)
!9628 = !DILocalVariable(name: "api", scope: !9625, file: !203, line: 1096, type: !915)
!9629 = !DILocation(line: 0, scope: !9625)
!9630 = !DILocation(line: 1097, column: 40, scope: !9625)
!9631 = !DILocation(line: 1099, column: 11, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9625, file: !203, line: 1099, column: 6)
!9633 = !DILocation(line: 1099, column: 26, scope: !9632)
!9634 = !DILocation(line: 1099, column: 6, scope: !9625)
!9635 = !DILocation(line: 1102, column: 9, scope: !9625)
!9636 = !DILocation(line: 1102, column: 2, scope: !9625)
!9637 = !DILocation(line: 1107, column: 1, scope: !9625)
!9638 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !203, file: !203, line: 1136, type: !944, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9639)
!9639 = !{!9640, !9641}
!9640 = !DILocalVariable(name: "dev", arg: 1, scope: !9638, file: !203, line: 1136, type: !923)
!9641 = !DILocalVariable(name: "api", scope: !9638, file: !203, line: 1139, type: !915)
!9642 = !DILocation(line: 0, scope: !9638)
!9643 = !DILocation(line: 1140, column: 40, scope: !9638)
!9644 = !DILocation(line: 1142, column: 11, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9638, file: !203, line: 1142, column: 6)
!9646 = !DILocation(line: 1142, column: 22, scope: !9645)
!9647 = !DILocation(line: 1142, column: 6, scope: !9638)
!9648 = !DILocation(line: 1145, column: 9, scope: !9638)
!9649 = !DILocation(line: 1145, column: 2, scope: !9638)
!9650 = !DILocation(line: 1150, column: 1, scope: !9638)
!9651 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !203, file: !203, line: 878, type: !974, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9652)
!9652 = !{!9653, !9654}
!9653 = !DILocalVariable(name: "dev", arg: 1, scope: !9651, file: !203, line: 878, type: !923)
!9654 = !DILocalVariable(name: "api", scope: !9651, file: !203, line: 881, type: !915)
!9655 = !DILocation(line: 0, scope: !9651)
!9656 = !DILocation(line: 882, column: 40, scope: !9651)
!9657 = !DILocation(line: 884, column: 11, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9651, file: !203, line: 884, column: 6)
!9659 = !DILocation(line: 884, column: 26, scope: !9658)
!9660 = !DILocation(line: 884, column: 6, scope: !9651)
!9661 = !DILocation(line: 885, column: 3, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9658, file: !203, line: 884, column: 35)
!9663 = !DILocation(line: 886, column: 2, scope: !9662)
!9664 = !DILocation(line: 890, column: 1, scope: !9651)
!9665 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !203, file: !203, line: 955, type: !974, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !9666)
!9666 = !{!9667, !9668}
!9667 = !DILocalVariable(name: "dev", arg: 1, scope: !9665, file: !203, line: 955, type: !923)
!9668 = !DILocalVariable(name: "api", scope: !9665, file: !203, line: 958, type: !915)
!9669 = !DILocation(line: 0, scope: !9665)
!9670 = !DILocation(line: 959, column: 40, scope: !9665)
!9671 = !DILocation(line: 961, column: 11, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9665, file: !203, line: 961, column: 6)
!9673 = !DILocation(line: 961, column: 26, scope: !9672)
!9674 = !DILocation(line: 961, column: 6, scope: !9665)
!9675 = !DILocation(line: 962, column: 3, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9672, file: !203, line: 961, column: 35)
!9677 = !DILocation(line: 963, column: 2, scope: !9676)
!9678 = !DILocation(line: 967, column: 1, scope: !9665)
!9679 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1274, file: !1274, line: 523, type: !1132, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9680)
!9680 = !{!9681, !9682, !9683, !9684, !9685}
!9681 = !DILocalVariable(name: "dev", arg: 1, scope: !9679, file: !1274, line: 523, type: !1134)
!9682 = !DILocalVariable(name: "pin", arg: 2, scope: !9679, file: !1274, line: 524, type: !1149)
!9683 = !DILocalVariable(name: "flags", arg: 3, scope: !9679, file: !1274, line: 524, type: !1150)
!9684 = !DILocalVariable(name: "err", scope: !9679, file: !1274, line: 526, type: !103)
!9685 = !DILocalVariable(name: "pincfg", scope: !9679, file: !1274, line: 527, type: !103)
!9686 = !DILocation(line: 0, scope: !9679)
!9687 = !DILocation(line: 527, column: 2, scope: !9679)
!9688 = !DILocation(line: 532, column: 8, scope: !9679)
!9689 = !DILocation(line: 533, column: 10, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9679, file: !1274, line: 533, column: 6)
!9691 = !DILocation(line: 533, column: 6, scope: !9679)
!9692 = !DILocation(line: 543, column: 13, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9679, file: !1274, line: 543, column: 6)
!9694 = !DILocation(line: 543, column: 28, scope: !9693)
!9695 = !DILocation(line: 543, column: 6, scope: !9679)
!9696 = !DILocation(line: 544, column: 14, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9698, file: !1274, line: 544, column: 7)
!9698 = distinct !DILexicalBlock(scope: !9693, file: !1274, line: 543, column: 34)
!9699 = !DILocation(line: 544, column: 39, scope: !9697)
!9700 = !DILocation(line: 544, column: 7, scope: !9698)
!9701 = !DILocation(line: 545, column: 38, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9697, file: !1274, line: 544, column: 45)
!9703 = !DILocation(line: 545, column: 4, scope: !9702)
!9704 = !DILocation(line: 546, column: 3, scope: !9702)
!9705 = !DILocation(line: 546, column: 21, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9697, file: !1274, line: 546, column: 14)
!9707 = !DILocation(line: 546, column: 45, scope: !9706)
!9708 = !DILocation(line: 546, column: 14, scope: !9697)
!9709 = !DILocation(line: 547, column: 40, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9706, file: !1274, line: 546, column: 51)
!9711 = !DILocation(line: 547, column: 4, scope: !9710)
!9712 = !DILocation(line: 548, column: 3, scope: !9710)
!9713 = !DILocation(line: 551, column: 32, scope: !9679)
!9714 = !DILocation(line: 551, column: 37, scope: !9679)
!9715 = !DILocation(line: 551, column: 2, scope: !9679)
!9716 = !DILocation(line: 554, column: 6, scope: !9679)
!9717 = !DILocation(line: 562, column: 1, scope: !9679)
!9718 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1274, file: !1274, line: 410, type: !9719, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9721)
!9719 = !DISubroutineType(types: !9720)
!9720 = !{!103, !1134, !825}
!9721 = !{!9722, !9723, !9724, !9726}
!9722 = !DILocalVariable(name: "dev", arg: 1, scope: !9718, file: !1274, line: 410, type: !1134)
!9723 = !DILocalVariable(name: "value", arg: 2, scope: !9718, file: !1274, line: 410, type: !825)
!9724 = !DILocalVariable(name: "cfg", scope: !9718, file: !1274, line: 412, type: !9725)
!9725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!9726 = !DILocalVariable(name: "gpio", scope: !9718, file: !1274, line: 413, type: !1207)
!9727 = !DILocation(line: 0, scope: !9718)
!9728 = !DILocation(line: 412, column: 45, scope: !9718)
!9729 = !DILocation(line: 413, column: 44, scope: !9718)
!9730 = !DILocation(line: 415, column: 11, scope: !9718)
!9731 = !DILocation(line: 415, column: 9, scope: !9718)
!9732 = !DILocation(line: 417, column: 2, scope: !9718)
!9733 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1274, file: !1274, line: 420, type: !1159, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9734)
!9734 = !{!9735, !9736, !9737, !9738, !9739, !9740}
!9735 = !DILocalVariable(name: "dev", arg: 1, scope: !9733, file: !1274, line: 420, type: !1134)
!9736 = !DILocalVariable(name: "mask", arg: 2, scope: !9733, file: !1274, line: 421, type: !1161)
!9737 = !DILocalVariable(name: "value", arg: 3, scope: !9733, file: !1274, line: 422, type: !1156)
!9738 = !DILocalVariable(name: "cfg", scope: !9733, file: !1274, line: 424, type: !9725)
!9739 = !DILocalVariable(name: "gpio", scope: !9733, file: !1274, line: 425, type: !1207)
!9740 = !DILocalVariable(name: "port_value", scope: !9733, file: !1274, line: 426, type: !121)
!9741 = !DILocation(line: 0, scope: !9733)
!9742 = !DILocation(line: 424, column: 45, scope: !9733)
!9743 = !DILocation(line: 425, column: 44, scope: !9733)
!9744 = !DILocation(line: 430, column: 15, scope: !9733)
!9745 = !DILocation(line: 431, column: 46, scope: !9733)
!9746 = !DILocation(line: 431, column: 44, scope: !9733)
!9747 = !DILocation(line: 431, column: 61, scope: !9733)
!9748 = !DILocation(line: 431, column: 53, scope: !9733)
!9749 = !DILocation(line: 431, column: 2, scope: !9733)
!9750 = !DILocation(line: 435, column: 2, scope: !9733)
!9751 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1274, file: !1274, line: 438, type: !1164, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9752)
!9752 = !{!9753, !9754, !9755, !9756}
!9753 = !DILocalVariable(name: "dev", arg: 1, scope: !9751, file: !1274, line: 438, type: !1134)
!9754 = !DILocalVariable(name: "pins", arg: 2, scope: !9751, file: !1274, line: 439, type: !1161)
!9755 = !DILocalVariable(name: "cfg", scope: !9751, file: !1274, line: 441, type: !9725)
!9756 = !DILocalVariable(name: "gpio", scope: !9751, file: !1274, line: 442, type: !1207)
!9757 = !DILocation(line: 0, scope: !9751)
!9758 = !DILocation(line: 441, column: 45, scope: !9751)
!9759 = !DILocation(line: 442, column: 44, scope: !9751)
!9760 = !DILocation(line: 448, column: 2, scope: !9751)
!9761 = !DILocation(line: 450, column: 2, scope: !9751)
!9762 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1274, file: !1274, line: 453, type: !1164, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9763)
!9763 = !{!9764, !9765, !9766, !9767}
!9764 = !DILocalVariable(name: "dev", arg: 1, scope: !9762, file: !1274, line: 453, type: !1134)
!9765 = !DILocalVariable(name: "pins", arg: 2, scope: !9762, file: !1274, line: 454, type: !1161)
!9766 = !DILocalVariable(name: "cfg", scope: !9762, file: !1274, line: 456, type: !9725)
!9767 = !DILocalVariable(name: "gpio", scope: !9762, file: !1274, line: 457, type: !1207)
!9768 = !DILocation(line: 0, scope: !9762)
!9769 = !DILocation(line: 456, column: 45, scope: !9762)
!9770 = !DILocation(line: 457, column: 44, scope: !9762)
!9771 = !DILocation(line: 467, column: 2, scope: !9762)
!9772 = !DILocation(line: 470, column: 2, scope: !9762)
!9773 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1274, file: !1274, line: 473, type: !1164, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9774)
!9774 = !{!9775, !9776, !9777, !9778}
!9775 = !DILocalVariable(name: "dev", arg: 1, scope: !9773, file: !1274, line: 473, type: !1134)
!9776 = !DILocalVariable(name: "pins", arg: 2, scope: !9773, file: !1274, line: 474, type: !1161)
!9777 = !DILocalVariable(name: "cfg", scope: !9773, file: !1274, line: 476, type: !9725)
!9778 = !DILocalVariable(name: "gpio", scope: !9773, file: !1274, line: 477, type: !1207)
!9779 = !DILocation(line: 0, scope: !9773)
!9780 = !DILocation(line: 476, column: 45, scope: !9773)
!9781 = !DILocation(line: 477, column: 44, scope: !9773)
!9782 = !DILocation(line: 484, column: 2, scope: !9773)
!9783 = !DILocation(line: 487, column: 2, scope: !9773)
!9784 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1274, file: !1274, line: 594, type: !1170, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9785)
!9785 = !{!9786, !9787, !9788, !9789, !9790, !9791, !9793, !9794, !9795}
!9786 = !DILocalVariable(name: "dev", arg: 1, scope: !9784, file: !1274, line: 594, type: !1134)
!9787 = !DILocalVariable(name: "pin", arg: 2, scope: !9784, file: !1274, line: 595, type: !1149)
!9788 = !DILocalVariable(name: "mode", arg: 3, scope: !9784, file: !1274, line: 596, type: !1108)
!9789 = !DILocalVariable(name: "trig", arg: 4, scope: !9784, file: !1274, line: 597, type: !1114)
!9790 = !DILocalVariable(name: "cfg", scope: !9784, file: !1274, line: 599, type: !9725)
!9791 = !DILocalVariable(name: "data", scope: !9784, file: !1274, line: 600, type: !9792)
!9792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!9793 = !DILocalVariable(name: "edge", scope: !9784, file: !1274, line: 601, type: !103)
!9794 = !DILocalVariable(name: "err", scope: !9784, file: !1274, line: 602, type: !103)
!9795 = !DILabel(scope: !9784, name: "exit", file: !1274, line: 643)
!9796 = !DILocation(line: 0, scope: !9784)
!9797 = !DILocation(line: 599, column: 45, scope: !9784)
!9798 = !DILocation(line: 604, column: 6, scope: !9784)
!9799 = !DILocation(line: 605, column: 34, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9801, file: !1274, line: 605, column: 7)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !1274, line: 604, column: 38)
!9802 = distinct !DILexicalBlock(scope: !9784, file: !1274, line: 604, column: 6)
!9803 = !DILocation(line: 605, column: 7, scope: !9800)
!9804 = !DILocation(line: 605, column: 47, scope: !9800)
!9805 = !DILocation(line: 605, column: 39, scope: !9800)
!9806 = !DILocation(line: 605, column: 7, scope: !9801)
!9807 = !DILocation(line: 606, column: 4, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9800, file: !1274, line: 605, column: 53)
!9809 = !DILocation(line: 607, column: 4, scope: !9808)
!9810 = !DILocation(line: 608, column: 4, scope: !9808)
!9811 = !DILocation(line: 609, column: 3, scope: !9808)
!9812 = !DILocation(line: 600, column: 38, scope: !9784)
!9813 = !DILocation(line: 620, column: 30, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9784, file: !1274, line: 620, column: 6)
!9815 = !DILocation(line: 620, column: 6, scope: !9814)
!9816 = !DILocation(line: 620, column: 57, scope: !9814)
!9817 = !DILocation(line: 620, column: 6, scope: !9784)
!9818 = !DILocation(line: 625, column: 29, scope: !9784)
!9819 = !DILocation(line: 625, column: 2, scope: !9784)
!9820 = !DILocation(line: 627, column: 2, scope: !9784)
!9821 = !DILocation(line: 630, column: 3, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9784, file: !1274, line: 627, column: 16)
!9823 = !DILocation(line: 633, column: 3, scope: !9822)
!9824 = !DILocation(line: 636, column: 3, scope: !9822)
!9825 = !DILocation(line: 639, column: 2, scope: !9784)
!9826 = !DILocation(line: 641, column: 2, scope: !9784)
!9827 = !DILocation(line: 643, column: 1, scope: !9784)
!9828 = !DILocation(line: 644, column: 2, scope: !9784)
!9829 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1274, file: !1274, line: 647, type: !1174, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9830)
!9830 = !{!9831, !9832, !9833, !9834}
!9831 = !DILocalVariable(name: "dev", arg: 1, scope: !9829, file: !1274, line: 647, type: !1134)
!9832 = !DILocalVariable(name: "callback", arg: 2, scope: !9829, file: !1274, line: 648, type: !1176)
!9833 = !DILocalVariable(name: "set", arg: 3, scope: !9829, file: !1274, line: 649, type: !157)
!9834 = !DILocalVariable(name: "data", scope: !9829, file: !1274, line: 651, type: !9792)
!9835 = !DILocation(line: 0, scope: !9829)
!9836 = !DILocation(line: 651, column: 38, scope: !9829)
!9837 = !DILocation(line: 653, column: 37, scope: !9829)
!9838 = !DILocation(line: 653, column: 9, scope: !9829)
!9839 = !DILocation(line: 653, column: 2, scope: !9829)
!9840 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9841, file: !9841, line: 38, type: !9842, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9845)
!9841 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9842 = !DISubroutineType(types: !9843)
!9843 = !{!103, !9844, !1176, !157}
!9844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!9845 = !{!9846, !9847, !9848}
!9846 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9840, file: !9841, line: 38, type: !9844)
!9847 = !DILocalVariable(name: "callback", arg: 2, scope: !9840, file: !9841, line: 39, type: !1176)
!9848 = !DILocalVariable(name: "set", arg: 3, scope: !9840, file: !9841, line: 40, type: !157)
!9849 = !DILocation(line: 0, scope: !9840)
!9850 = !DILocation(line: 45, column: 7, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9840, file: !9841, line: 45, column: 6)
!9852 = !DILocation(line: 45, column: 6, scope: !9840)
!9853 = !DILocation(line: 46, column: 56, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9855, file: !9841, line: 46, column: 7)
!9855 = distinct !DILexicalBlock(scope: !9851, file: !9841, line: 45, column: 38)
!9856 = !DILocation(line: 46, column: 8, scope: !9854)
!9857 = !DILocation(line: 46, column: 7, scope: !9855)
!9858 = !DILocation(line: 51, column: 13, scope: !9851)
!9859 = !DILocation(line: 56, column: 43, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9861, file: !9841, line: 55, column: 11)
!9861 = distinct !DILexicalBlock(scope: !9840, file: !9841, line: 55, column: 6)
!9862 = !DILocation(line: 56, column: 3, scope: !9860)
!9863 = !DILocation(line: 57, column: 2, scope: !9860)
!9864 = !DILocation(line: 60, column: 1, scope: !9840)
!9865 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1181, file: !1181, line: 261, type: !9866, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9868)
!9866 = !DISubroutineType(types: !9867)
!9867 = !{!157, !9844}
!9868 = !{!9869}
!9869 = !DILocalVariable(name: "list", arg: 1, scope: !9865, file: !1181, line: 261, type: !9844)
!9870 = !DILocation(line: 0, scope: !9865)
!9871 = !DILocation(line: 261, column: 1, scope: !9865)
!9872 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1181, file: !1181, line: 417, type: !9873, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9875)
!9873 = !DISubroutineType(types: !9874)
!9874 = !{!157, !9844, !1347}
!9875 = !{!9876, !9877, !9878, !9879}
!9876 = !DILocalVariable(name: "list", arg: 1, scope: !9872, file: !1181, line: 417, type: !9844)
!9877 = !DILocalVariable(name: "node", arg: 2, scope: !9872, file: !1181, line: 417, type: !1347)
!9878 = !DILocalVariable(name: "prev", scope: !9872, file: !1181, line: 417, type: !1347)
!9879 = !DILocalVariable(name: "test", scope: !9872, file: !1181, line: 417, type: !1347)
!9880 = !DILocation(line: 0, scope: !9872)
!9881 = !DILocation(line: 417, column: 1, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9872, file: !1181, line: 417, column: 1)
!9883 = !DILocation(line: 417, column: 1, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9882, file: !1181, line: 417, column: 1)
!9885 = !DILocation(line: 417, column: 1, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9887, file: !1181, line: 417, column: 1)
!9887 = distinct !DILexicalBlock(scope: !9884, file: !1181, line: 417, column: 1)
!9888 = !DILocation(line: 417, column: 1, scope: !9887)
!9889 = distinct !{!9889, !9881, !9881}
!9890 = !DILocation(line: 417, column: 1, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9886, file: !1181, line: 417, column: 1)
!9892 = !DILocation(line: 417, column: 1, scope: !9872)
!9893 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1181, file: !1181, line: 298, type: !9894, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9896)
!9894 = !DISubroutineType(types: !9895)
!9895 = !{null, !9844, !1347}
!9896 = !{!9897, !9898}
!9897 = !DILocalVariable(name: "list", arg: 1, scope: !9893, file: !1181, line: 298, type: !9844)
!9898 = !DILocalVariable(name: "node", arg: 2, scope: !9893, file: !1181, line: 298, type: !1347)
!9899 = !DILocation(line: 0, scope: !9893)
!9900 = !DILocation(line: 298, column: 1, scope: !9893)
!9901 = !DILocation(line: 298, column: 1, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9893, file: !1181, line: 298, column: 1)
!9903 = !DILocation(line: 298, column: 1, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9902, file: !1181, line: 298, column: 1)
!9905 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1181, file: !1181, line: 231, type: !9906, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9908)
!9906 = !DISubroutineType(types: !9907)
!9907 = !{!1347, !9844}
!9908 = !{!9909}
!9909 = !DILocalVariable(name: "list", arg: 1, scope: !9905, file: !1181, line: 231, type: !9844)
!9910 = !DILocation(line: 0, scope: !9905)
!9911 = !DILocation(line: 233, column: 15, scope: !9905)
!9912 = !DILocation(line: 233, column: 2, scope: !9905)
!9913 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1181, file: !1181, line: 209, type: !9914, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9916)
!9914 = !DISubroutineType(types: !9915)
!9915 = !{null, !1347, !1347}
!9916 = !{!9917, !9918}
!9917 = !DILocalVariable(name: "parent", arg: 1, scope: !9913, file: !1181, line: 209, type: !1347)
!9918 = !DILocalVariable(name: "child", arg: 2, scope: !9913, file: !1181, line: 209, type: !1347)
!9919 = !DILocation(line: 0, scope: !9913)
!9920 = !DILocation(line: 211, column: 10, scope: !9913)
!9921 = !DILocation(line: 211, column: 15, scope: !9913)
!9922 = !DILocation(line: 212, column: 1, scope: !9913)
!9923 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1181, file: !1181, line: 214, type: !9894, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9924)
!9924 = !{!9925, !9926}
!9925 = !DILocalVariable(name: "list", arg: 1, scope: !9923, file: !1181, line: 214, type: !9844)
!9926 = !DILocalVariable(name: "node", arg: 2, scope: !9923, file: !1181, line: 214, type: !1347)
!9927 = !DILocation(line: 0, scope: !9923)
!9928 = !DILocation(line: 216, column: 8, scope: !9923)
!9929 = !DILocation(line: 216, column: 13, scope: !9923)
!9930 = !DILocation(line: 217, column: 1, scope: !9923)
!9931 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1181, file: !1181, line: 243, type: !9906, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9932)
!9932 = !{!9933}
!9933 = !DILocalVariable(name: "list", arg: 1, scope: !9931, file: !1181, line: 243, type: !9844)
!9934 = !DILocation(line: 0, scope: !9931)
!9935 = !DILocation(line: 245, column: 15, scope: !9931)
!9936 = !DILocation(line: 245, column: 2, scope: !9931)
!9937 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1181, file: !1181, line: 219, type: !9894, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9938)
!9938 = !{!9939, !9940}
!9939 = !DILocalVariable(name: "list", arg: 1, scope: !9937, file: !1181, line: 219, type: !9844)
!9940 = !DILocalVariable(name: "node", arg: 2, scope: !9937, file: !1181, line: 219, type: !1347)
!9941 = !DILocation(line: 0, scope: !9937)
!9942 = !DILocation(line: 221, column: 8, scope: !9937)
!9943 = !DILocation(line: 221, column: 13, scope: !9937)
!9944 = !DILocation(line: 222, column: 1, scope: !9937)
!9945 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1181, file: !1181, line: 401, type: !9946, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9948)
!9946 = !DISubroutineType(types: !9947)
!9947 = !{null, !9844, !1347, !1347}
!9948 = !{!9949, !9950, !9951}
!9949 = !DILocalVariable(name: "list", arg: 1, scope: !9945, file: !1181, line: 401, type: !9844)
!9950 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9945, file: !1181, line: 401, type: !1347)
!9951 = !DILocalVariable(name: "node", arg: 3, scope: !9945, file: !1181, line: 401, type: !1347)
!9952 = !DILocation(line: 0, scope: !9945)
!9953 = !DILocation(line: 401, column: 1, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9945, file: !1181, line: 401, column: 1)
!9955 = !DILocation(line: 0, scope: !9954)
!9956 = !DILocation(line: 401, column: 1, scope: !9945)
!9957 = !DILocation(line: 401, column: 1, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9954, file: !1181, line: 401, column: 1)
!9959 = !DILocation(line: 401, column: 1, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9958, file: !1181, line: 401, column: 1)
!9961 = !DILocation(line: 401, column: 1, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9960, file: !1181, line: 401, column: 1)
!9963 = !DILocation(line: 401, column: 1, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9954, file: !1181, line: 401, column: 1)
!9965 = !DILocation(line: 401, column: 1, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9964, file: !1181, line: 401, column: 1)
!9967 = !DILocation(line: 401, column: 1, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9966, file: !1181, line: 401, column: 1)
!9969 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1181, file: !1181, line: 285, type: !9970, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9972)
!9970 = !DISubroutineType(types: !9971)
!9971 = !{!1347, !1347}
!9972 = !{!9973}
!9973 = !DILocalVariable(name: "node", arg: 1, scope: !9969, file: !1181, line: 285, type: !1347)
!9974 = !DILocation(line: 0, scope: !9969)
!9975 = !DILocation(line: 285, column: 1, scope: !9969)
!9976 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1181, file: !1181, line: 274, type: !9970, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9977)
!9977 = !{!9978}
!9978 = !DILocalVariable(name: "node", arg: 1, scope: !9976, file: !1181, line: 274, type: !1347)
!9979 = !DILocation(line: 0, scope: !9976)
!9980 = !DILocation(line: 274, column: 1, scope: !9976)
!9981 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1181, file: !1181, line: 204, type: !9970, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9982)
!9982 = !{!9983}
!9983 = !DILocalVariable(name: "node", arg: 1, scope: !9981, file: !1181, line: 204, type: !1347)
!9984 = !DILocation(line: 0, scope: !9981)
!9985 = !DILocation(line: 206, column: 15, scope: !9981)
!9986 = !DILocation(line: 206, column: 2, scope: !9981)
!9987 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1274, file: !1274, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9988)
!9988 = !{!9989, !9990, !9991}
!9989 = !DILocalVariable(name: "pin", arg: 1, scope: !9987, file: !1274, line: 342, type: !103)
!9990 = !DILocalVariable(name: "line", scope: !9987, file: !1274, line: 344, type: !121)
!9991 = !DILocalVariable(name: "port", scope: !9987, file: !1274, line: 345, type: !103)
!9992 = !DILocation(line: 0, scope: !9987)
!9993 = !DILocation(line: 344, column: 18, scope: !9987)
!9994 = !{i32 983040, i32 0}
!9995 = !DILocation(line: 356, column: 9, scope: !9987)
!9996 = !DILocation(line: 370, column: 2, scope: !9987)
!9997 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1274, file: !1274, line: 37, type: !688, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !9998)
!9998 = !{!9999, !10000, !10001}
!9999 = !DILocalVariable(name: "line", arg: 1, scope: !9997, file: !1274, line: 37, type: !103)
!10000 = !DILocalVariable(name: "arg", arg: 2, scope: !9997, file: !1274, line: 37, type: !102)
!10001 = !DILocalVariable(name: "data", scope: !9997, file: !1274, line: 39, type: !9792)
!10002 = !DILocation(line: 0, scope: !9997)
!10003 = !DILocation(line: 41, column: 29, scope: !9997)
!10004 = !DILocation(line: 41, column: 39, scope: !9997)
!10005 = !DILocation(line: 41, column: 44, scope: !9997)
!10006 = !DILocation(line: 41, column: 2, scope: !9997)
!10007 = !DILocation(line: 42, column: 1, scope: !9997)
!10008 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1274, file: !1274, line: 376, type: !10009, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10011)
!10009 = !DISubroutineType(types: !10010)
!10010 = !{!103, !103, !103}
!10011 = !{!10012, !10013, !10014, !10016, !10017}
!10012 = !DILocalVariable(name: "port", arg: 1, scope: !10008, file: !1274, line: 376, type: !103)
!10013 = !DILocalVariable(name: "pin", arg: 2, scope: !10008, file: !1274, line: 376, type: !103)
!10014 = !DILocalVariable(name: "clk", scope: !10008, file: !1274, line: 386, type: !10015)
!10015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1134)
!10016 = !DILocalVariable(name: "pclken", scope: !10008, file: !1274, line: 387, type: !1390)
!10017 = !DILocalVariable(name: "ret", scope: !10008, file: !1274, line: 396, type: !103)
!10018 = !DILocation(line: 0, scope: !10008)
!10019 = !DILocation(line: 387, column: 2, scope: !10008)
!10020 = !DILocation(line: 387, column: 22, scope: !10008)
!10021 = !DILocation(line: 399, column: 8, scope: !10008)
!10022 = !DILocation(line: 400, column: 10, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10008, file: !1274, line: 400, column: 6)
!10024 = !DILocation(line: 400, column: 6, scope: !10008)
!10025 = !DILocation(line: 405, column: 2, scope: !10008)
!10026 = !DILocation(line: 407, column: 2, scope: !10008)
!10027 = !DILocation(line: 408, column: 1, scope: !10008)
!10028 = distinct !DISubprogram(name: "clock_control_on", scope: !774, file: !774, line: 123, type: !1239, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10029)
!10029 = !{!10030, !10031, !10032}
!10030 = !DILocalVariable(name: "dev", arg: 1, scope: !10028, file: !774, line: 123, type: !1134)
!10031 = !DILocalVariable(name: "sys", arg: 2, scope: !10028, file: !774, line: 124, type: !869)
!10032 = !DILocalVariable(name: "api", scope: !10028, file: !774, line: 126, type: !1232)
!10033 = !DILocation(line: 0, scope: !10028)
!10034 = !DILocation(line: 127, column: 49, scope: !10028)
!10035 = !DILocation(line: 129, column: 14, scope: !10028)
!10036 = !DILocation(line: 129, column: 9, scope: !10028)
!10037 = !DILocation(line: 129, column: 2, scope: !10028)
!10038 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1274, file: !1274, line: 311, type: !8581, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10039)
!10039 = !{!10040, !10041, !10042}
!10040 = !DILocalVariable(name: "port", arg: 1, scope: !10038, file: !1274, line: 311, type: !103)
!10041 = !DILocalVariable(name: "pin", arg: 2, scope: !10038, file: !1274, line: 311, type: !103)
!10042 = !DILocalVariable(name: "line", scope: !10038, file: !1274, line: 313, type: !121)
!10043 = !DILocation(line: 0, scope: !10038)
!10044 = !DILocation(line: 313, column: 18, scope: !10038)
!10045 = !DILocation(line: 337, column: 2, scope: !10038)
!10046 = !DILocation(line: 340, column: 1, scope: !10038)
!10047 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1274, file: !1274, line: 295, type: !10048, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10050)
!10048 = !DISubroutineType(types: !10049)
!10049 = !{!121, !103}
!10050 = !{!10051}
!10051 = !DILocalVariable(name: "pin", arg: 1, scope: !10047, file: !1274, line: 295, type: !103)
!10052 = !DILocation(line: 0, scope: !10047)
!10053 = !DILocation(line: 307, column: 46, scope: !10047)
!10054 = !DILocation(line: 307, column: 27, scope: !10047)
!10055 = !DILocation(line: 307, column: 32, scope: !10047)
!10056 = !DILocation(line: 307, column: 14, scope: !10047)
!10057 = !DILocation(line: 307, column: 39, scope: !10047)
!10058 = !DILocation(line: 307, column: 2, scope: !10047)
!10059 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5791, file: !5791, line: 671, type: !10060, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10062)
!10060 = !DISubroutineType(types: !10061)
!10061 = !{null, !121, !121}
!10062 = !{!10063, !10064}
!10063 = !DILocalVariable(name: "Port", arg: 1, scope: !10059, file: !5791, line: 671, type: !121)
!10064 = !DILocalVariable(name: "Line", arg: 2, scope: !10059, file: !5791, line: 671, type: !121)
!10065 = !DILocation(line: 0, scope: !10059)
!10066 = !DILocation(line: 673, column: 3, scope: !10059)
!10067 = !DILocalVariable(name: "value", arg: 1, scope: !10068, file: !6790, line: 373, type: !121)
!10068 = distinct !DISubprogram(name: "__RBIT", scope: !6790, file: !6790, line: 373, type: !7797, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10069)
!10069 = !{!10067, !10070}
!10070 = !DILocalVariable(name: "result", scope: !10068, file: !6790, line: 375, type: !121)
!10071 = !DILocation(line: 0, scope: !10068, inlinedAt: !10072)
!10072 = distinct !DILocation(line: 673, column: 3, scope: !10059)
!10073 = !DILocation(line: 380, column: 4, scope: !10068, inlinedAt: !10072)
!10074 = !{i64 2831825}
!10075 = !DILocalVariable(name: "value", arg: 1, scope: !10076, file: !6790, line: 403, type: !121)
!10076 = distinct !DISubprogram(name: "__CLZ", scope: !6790, file: !6790, line: 403, type: !10077, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10079)
!10077 = !DISubroutineType(types: !10078)
!10078 = !{!154, !121}
!10079 = !{!10075}
!10080 = !DILocation(line: 0, scope: !10076, inlinedAt: !10081)
!10081 = distinct !DILocation(line: 673, column: 3, scope: !10059)
!10082 = !DILocation(line: 414, column: 7, scope: !10076, inlinedAt: !10081)
!10083 = !DILocation(line: 674, column: 1, scope: !10059)
!10084 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9841, file: !9841, line: 69, type: !10085, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10087)
!10085 = !DISubroutineType(types: !10086)
!10086 = !{null, !9844, !1134, !121}
!10087 = !{!10088, !10089, !10090, !10091, !10092}
!10088 = !DILocalVariable(name: "list", arg: 1, scope: !10084, file: !9841, line: 69, type: !9844)
!10089 = !DILocalVariable(name: "port", arg: 2, scope: !10084, file: !9841, line: 70, type: !1134)
!10090 = !DILocalVariable(name: "pins", arg: 3, scope: !10084, file: !9841, line: 71, type: !121)
!10091 = !DILocalVariable(name: "cb", scope: !10084, file: !9841, line: 73, type: !1176)
!10092 = !DILocalVariable(name: "tmp", scope: !10084, file: !9841, line: 73, type: !1176)
!10093 = !DILocation(line: 0, scope: !10084)
!10094 = !DILocation(line: 75, column: 2, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10084, file: !9841, line: 75, column: 2)
!10096 = !DILocation(line: 0, scope: !10095)
!10097 = !DILocation(line: 76, column: 11, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10099, file: !9841, line: 76, column: 7)
!10099 = distinct !DILexicalBlock(scope: !10100, file: !9841, line: 75, column: 57)
!10100 = distinct !DILexicalBlock(scope: !10095, file: !9841, line: 75, column: 2)
!10101 = !DILocation(line: 76, column: 20, scope: !10098)
!10102 = !DILocation(line: 76, column: 7, scope: !10099)
!10103 = !DILocation(line: 78, column: 8, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10098, file: !9841, line: 76, column: 28)
!10105 = !DILocation(line: 78, column: 4, scope: !10104)
!10106 = !DILocation(line: 79, column: 3, scope: !10104)
!10107 = !DILocation(line: 75, column: 2, scope: !10100)
!10108 = !DILocation(line: 81, column: 1, scope: !10084)
!10109 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5791, file: !5791, line: 710, type: !7797, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10110)
!10110 = !{!10111}
!10111 = !DILocalVariable(name: "Line", arg: 1, scope: !10109, file: !5791, line: 710, type: !121)
!10112 = !DILocation(line: 0, scope: !10109)
!10113 = !DILocation(line: 712, column: 21, scope: !10109)
!10114 = !DILocation(line: 0, scope: !10068, inlinedAt: !10115)
!10115 = distinct !DILocation(line: 712, column: 76, scope: !10109)
!10116 = !DILocation(line: 380, column: 4, scope: !10068, inlinedAt: !10115)
!10117 = !DILocation(line: 0, scope: !10076, inlinedAt: !10118)
!10118 = distinct !DILocation(line: 712, column: 76, scope: !10109)
!10119 = !DILocation(line: 414, column: 7, scope: !10076, inlinedAt: !10118)
!10120 = !DILocation(line: 712, column: 73, scope: !10109)
!10121 = !DILocation(line: 712, column: 3, scope: !10109)
!10122 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10123, file: !10123, line: 910, type: !10124, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10126)
!10123 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10124 = !DISubroutineType(types: !10125)
!10125 = !{null, !1207, !121}
!10126 = !{!10127, !10128}
!10127 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10122, file: !10123, line: 910, type: !1207)
!10128 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10122, file: !10123, line: 910, type: !121)
!10129 = !DILocation(line: 0, scope: !10122)
!10130 = !DILocation(line: 912, column: 3, scope: !10122)
!10131 = !DILocation(line: 913, column: 1, scope: !10122)
!10132 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10123, file: !10123, line: 823, type: !10133, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10135)
!10133 = !DISubroutineType(types: !10134)
!10134 = !{!121, !1207}
!10135 = !{!10136}
!10136 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10132, file: !10123, line: 823, type: !1207)
!10137 = !DILocation(line: 0, scope: !10132)
!10138 = !DILocation(line: 825, column: 21, scope: !10132)
!10139 = !DILocation(line: 825, column: 3, scope: !10132)
!10140 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10123, file: !10123, line: 812, type: !10124, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10141)
!10141 = !{!10142, !10143}
!10142 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10140, file: !10123, line: 812, type: !1207)
!10143 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10140, file: !10123, line: 812, type: !121)
!10144 = !DILocation(line: 0, scope: !10140)
!10145 = !DILocation(line: 814, column: 3, scope: !10140)
!10146 = !DILocation(line: 815, column: 1, scope: !10140)
!10147 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10123, file: !10123, line: 771, type: !10133, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10148)
!10148 = !{!10149}
!10149 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10147, file: !10123, line: 771, type: !1207)
!10150 = !DILocation(line: 0, scope: !10147)
!10151 = !DILocation(line: 773, column: 21, scope: !10147)
!10152 = !DILocation(line: 773, column: 3, scope: !10147)
!10153 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1274, file: !1274, line: 47, type: !10154, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10156)
!10154 = !DISubroutineType(types: !10155)
!10155 = !{!103, !1150, !2588}
!10156 = !{!10157, !10158}
!10157 = !DILocalVariable(name: "flags", arg: 1, scope: !10153, file: !1274, line: 47, type: !1150)
!10158 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10153, file: !1274, line: 47, type: !2588)
!10159 = !DILocation(line: 0, scope: !10153)
!10160 = !DILocation(line: 50, column: 13, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10153, file: !1274, line: 50, column: 6)
!10162 = !DILocation(line: 50, column: 28, scope: !10161)
!10163 = !DILocation(line: 50, column: 6, scope: !10153)
!10164 = !DILocation(line: 53, column: 11, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10161, file: !1274, line: 50, column: 34)
!10166 = !DILocation(line: 55, column: 14, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10165, file: !1274, line: 55, column: 7)
!10168 = !DILocation(line: 55, column: 35, scope: !10167)
!10169 = !DILocation(line: 55, column: 7, scope: !10165)
!10170 = !DILocation(line: 56, column: 14, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10172, file: !1274, line: 56, column: 8)
!10172 = distinct !DILexicalBlock(scope: !10167, file: !1274, line: 55, column: 41)
!10173 = !DILocation(line: 56, column: 8, scope: !10172)
!10174 = !DILocation(line: 0, scope: !10167)
!10175 = !DILocation(line: 66, column: 14, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10165, file: !1274, line: 66, column: 7)
!10177 = !DILocation(line: 66, column: 30, scope: !10176)
!10178 = !DILocation(line: 66, column: 7, scope: !10165)
!10179 = !DILocation(line: 67, column: 12, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10176, file: !1274, line: 66, column: 36)
!10181 = !DILocation(line: 68, column: 3, scope: !10180)
!10182 = !DILocation(line: 68, column: 21, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10176, file: !1274, line: 68, column: 14)
!10184 = !DILocation(line: 68, column: 39, scope: !10183)
!10185 = !DILocation(line: 68, column: 14, scope: !10176)
!10186 = !DILocation(line: 69, column: 12, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10183, file: !1274, line: 68, column: 45)
!10188 = !DILocation(line: 70, column: 3, scope: !10187)
!10189 = !DILocation(line: 72, column: 21, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10161, file: !1274, line: 72, column: 14)
!10191 = !DILocation(line: 72, column: 35, scope: !10190)
!10192 = !DILocation(line: 72, column: 14, scope: !10161)
!10193 = !DILocation(line: 77, column: 14, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10195, file: !1274, line: 77, column: 7)
!10195 = distinct !DILexicalBlock(scope: !10190, file: !1274, line: 72, column: 41)
!10196 = !DILocation(line: 77, column: 30, scope: !10194)
!10197 = !DILocation(line: 77, column: 7, scope: !10195)
!10198 = !DILocation(line: 0, scope: !10161)
!10199 = !DILocation(line: 90, column: 1, scope: !10153)
!10200 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1274, file: !1274, line: 157, type: !10201, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10203)
!10201 = !DISubroutineType(types: !10202)
!10202 = !{null, !1134, !103, !103, !103}
!10203 = !{!10204, !10205, !10206, !10207, !10208, !10209, !10210, !10211, !10212, !10213, !10214}
!10204 = !DILocalVariable(name: "dev", arg: 1, scope: !10200, file: !1274, line: 157, type: !1134)
!10205 = !DILocalVariable(name: "pin", arg: 2, scope: !10200, file: !1274, line: 157, type: !103)
!10206 = !DILocalVariable(name: "conf", arg: 3, scope: !10200, file: !1274, line: 158, type: !103)
!10207 = !DILocalVariable(name: "func", arg: 4, scope: !10200, file: !1274, line: 158, type: !103)
!10208 = !DILocalVariable(name: "cfg", scope: !10200, file: !1274, line: 160, type: !9725)
!10209 = !DILocalVariable(name: "gpio", scope: !10200, file: !1274, line: 161, type: !1207)
!10210 = !DILocalVariable(name: "pin_ll", scope: !10200, file: !1274, line: 163, type: !103)
!10211 = !DILocalVariable(name: "mode", scope: !10200, file: !1274, line: 227, type: !32)
!10212 = !DILocalVariable(name: "otype", scope: !10200, file: !1274, line: 227, type: !32)
!10213 = !DILocalVariable(name: "ospeed", scope: !10200, file: !1274, line: 227, type: !32)
!10214 = !DILocalVariable(name: "pupd", scope: !10200, file: !1274, line: 227, type: !32)
!10215 = !DILocation(line: 0, scope: !10200)
!10216 = !DILocation(line: 160, column: 45, scope: !10200)
!10217 = !DILocation(line: 161, column: 44, scope: !10200)
!10218 = !DILocation(line: 163, column: 15, scope: !10200)
!10219 = !DILocation(line: 229, column: 14, scope: !10200)
!10220 = !DILocation(line: 246, column: 47, scope: !10200)
!10221 = !DILocation(line: 246, column: 2, scope: !10200)
!10222 = !DILocation(line: 248, column: 43, scope: !10200)
!10223 = !DILocation(line: 248, column: 2, scope: !10200)
!10224 = !DILocation(line: 250, column: 40, scope: !10200)
!10225 = !DILocation(line: 250, column: 2, scope: !10200)
!10226 = !DILocation(line: 252, column: 11, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10200, file: !1274, line: 252, column: 6)
!10228 = !DILocation(line: 252, column: 6, scope: !10200)
!10229 = !DILocation(line: 253, column: 11, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10231, file: !1274, line: 253, column: 7)
!10231 = distinct !DILexicalBlock(scope: !10227, file: !1274, line: 252, column: 36)
!10232 = !DILocation(line: 253, column: 7, scope: !10231)
!10233 = !DILocation(line: 254, column: 4, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10230, file: !1274, line: 253, column: 16)
!10235 = !DILocation(line: 255, column: 3, scope: !10234)
!10236 = !DILocation(line: 256, column: 4, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10230, file: !1274, line: 255, column: 10)
!10238 = !DILocation(line: 260, column: 40, scope: !10200)
!10239 = !DILocation(line: 260, column: 2, scope: !10200)
!10240 = !DILocation(line: 265, column: 1, scope: !10200)
!10241 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1274, file: !1274, line: 137, type: !10048, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10242)
!10242 = !{!10243, !10244}
!10243 = !DILocalVariable(name: "pin", arg: 1, scope: !10241, file: !1274, line: 137, type: !103)
!10244 = !DILocalVariable(name: "pinval", scope: !10241, file: !1274, line: 139, type: !121)
!10245 = !DILocation(line: 0, scope: !10241)
!10246 = !DILocation(line: 149, column: 13, scope: !10241)
!10247 = !DILocation(line: 151, column: 2, scope: !10241)
!10248 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10123, file: !10123, line: 342, type: !10249, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10251)
!10249 = !DISubroutineType(types: !10250)
!10250 = !{null, !1207, !121, !121}
!10251 = !{!10252, !10253, !10254}
!10252 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10248, file: !10123, line: 342, type: !1207)
!10253 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10248, file: !10123, line: 342, type: !121)
!10254 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10248, file: !10123, line: 342, type: !121)
!10255 = !DILocation(line: 0, scope: !10248)
!10256 = !DILocation(line: 344, column: 3, scope: !10248)
!10257 = !DILocation(line: 345, column: 1, scope: !10248)
!10258 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10123, file: !10123, line: 413, type: !10249, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10259)
!10259 = !{!10260, !10261, !10262}
!10260 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10258, file: !10123, line: 413, type: !1207)
!10261 = !DILocalVariable(name: "Pin", arg: 2, scope: !10258, file: !10123, line: 413, type: !121)
!10262 = !DILocalVariable(name: "Speed", arg: 3, scope: !10258, file: !10123, line: 413, type: !121)
!10263 = !DILocation(line: 0, scope: !10258)
!10264 = !DILocation(line: 415, column: 3, scope: !10258)
!10265 = !DILocation(line: 0, scope: !10068, inlinedAt: !10266)
!10266 = distinct !DILocation(line: 415, column: 3, scope: !10258)
!10267 = !DILocation(line: 380, column: 4, scope: !10068, inlinedAt: !10266)
!10268 = !DILocation(line: 0, scope: !10076, inlinedAt: !10269)
!10269 = distinct !DILocation(line: 415, column: 3, scope: !10258)
!10270 = !DILocation(line: 414, column: 7, scope: !10076, inlinedAt: !10269)
!10271 = !DILocation(line: 0, scope: !10068, inlinedAt: !10272)
!10272 = distinct !DILocation(line: 415, column: 3, scope: !10258)
!10273 = !DILocation(line: 0, scope: !10076, inlinedAt: !10274)
!10274 = distinct !DILocation(line: 415, column: 3, scope: !10258)
!10275 = !DILocation(line: 417, column: 1, scope: !10258)
!10276 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10123, file: !10123, line: 484, type: !10249, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10277)
!10277 = !{!10278, !10279, !10280}
!10278 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10276, file: !10123, line: 484, type: !1207)
!10279 = !DILocalVariable(name: "Pin", arg: 2, scope: !10276, file: !10123, line: 484, type: !121)
!10280 = !DILocalVariable(name: "Pull", arg: 3, scope: !10276, file: !10123, line: 484, type: !121)
!10281 = !DILocation(line: 0, scope: !10276)
!10282 = !DILocation(line: 486, column: 3, scope: !10276)
!10283 = !DILocation(line: 0, scope: !10068, inlinedAt: !10284)
!10284 = distinct !DILocation(line: 486, column: 3, scope: !10276)
!10285 = !DILocation(line: 380, column: 4, scope: !10068, inlinedAt: !10284)
!10286 = !DILocation(line: 0, scope: !10076, inlinedAt: !10287)
!10287 = distinct !DILocation(line: 486, column: 3, scope: !10276)
!10288 = !DILocation(line: 414, column: 7, scope: !10076, inlinedAt: !10287)
!10289 = !DILocation(line: 0, scope: !10068, inlinedAt: !10290)
!10290 = distinct !DILocation(line: 486, column: 3, scope: !10276)
!10291 = !DILocation(line: 0, scope: !10076, inlinedAt: !10292)
!10292 = distinct !DILocation(line: 486, column: 3, scope: !10276)
!10293 = !DILocation(line: 487, column: 1, scope: !10276)
!10294 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10123, file: !10123, line: 556, type: !10249, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10295)
!10295 = !{!10296, !10297, !10298}
!10296 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10294, file: !10123, line: 556, type: !1207)
!10297 = !DILocalVariable(name: "Pin", arg: 2, scope: !10294, file: !10123, line: 556, type: !121)
!10298 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10294, file: !10123, line: 556, type: !121)
!10299 = !DILocation(line: 0, scope: !10294)
!10300 = !DILocation(line: 558, column: 3, scope: !10294)
!10301 = !DILocation(line: 0, scope: !10068, inlinedAt: !10302)
!10302 = distinct !DILocation(line: 558, column: 3, scope: !10294)
!10303 = !DILocation(line: 380, column: 4, scope: !10068, inlinedAt: !10302)
!10304 = !DILocation(line: 0, scope: !10076, inlinedAt: !10305)
!10305 = distinct !DILocation(line: 558, column: 3, scope: !10294)
!10306 = !DILocation(line: 414, column: 7, scope: !10076, inlinedAt: !10305)
!10307 = !DILocation(line: 0, scope: !10068, inlinedAt: !10308)
!10308 = distinct !DILocation(line: 558, column: 3, scope: !10294)
!10309 = !DILocation(line: 0, scope: !10076, inlinedAt: !10310)
!10310 = distinct !DILocation(line: 558, column: 3, scope: !10294)
!10311 = !DILocation(line: 560, column: 1, scope: !10294)
!10312 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10123, file: !10123, line: 633, type: !10249, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10313)
!10313 = !{!10314, !10315, !10316}
!10314 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10312, file: !10123, line: 633, type: !1207)
!10315 = !DILocalVariable(name: "Pin", arg: 2, scope: !10312, file: !10123, line: 633, type: !121)
!10316 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10312, file: !10123, line: 633, type: !121)
!10317 = !DILocation(line: 0, scope: !10312)
!10318 = !DILocation(line: 635, column: 3, scope: !10312)
!10319 = !DILocation(line: 0, scope: !10068, inlinedAt: !10320)
!10320 = distinct !DILocation(line: 635, column: 3, scope: !10312)
!10321 = !DILocation(line: 380, column: 4, scope: !10068, inlinedAt: !10320)
!10322 = !DILocation(line: 0, scope: !10076, inlinedAt: !10323)
!10323 = distinct !DILocation(line: 635, column: 3, scope: !10312)
!10324 = !DILocation(line: 414, column: 7, scope: !10076, inlinedAt: !10323)
!10325 = !DILocation(line: 0, scope: !10068, inlinedAt: !10326)
!10326 = distinct !DILocation(line: 635, column: 3, scope: !10312)
!10327 = !DILocation(line: 0, scope: !10076, inlinedAt: !10328)
!10328 = distinct !DILocation(line: 635, column: 3, scope: !10312)
!10329 = !DILocation(line: 637, column: 1, scope: !10312)
!10330 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10123, file: !10123, line: 273, type: !10249, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10331)
!10331 = !{!10332, !10333, !10334}
!10332 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10330, file: !10123, line: 273, type: !1207)
!10333 = !DILocalVariable(name: "Pin", arg: 2, scope: !10330, file: !10123, line: 273, type: !121)
!10334 = !DILocalVariable(name: "Mode", arg: 3, scope: !10330, file: !10123, line: 273, type: !121)
!10335 = !DILocation(line: 0, scope: !10330)
!10336 = !DILocation(line: 275, column: 3, scope: !10330)
!10337 = !DILocation(line: 0, scope: !10068, inlinedAt: !10338)
!10338 = distinct !DILocation(line: 275, column: 3, scope: !10330)
!10339 = !DILocation(line: 380, column: 4, scope: !10068, inlinedAt: !10338)
!10340 = !DILocation(line: 0, scope: !10076, inlinedAt: !10341)
!10341 = distinct !DILocation(line: 275, column: 3, scope: !10330)
!10342 = !DILocation(line: 414, column: 7, scope: !10076, inlinedAt: !10341)
!10343 = !DILocation(line: 0, scope: !10068, inlinedAt: !10344)
!10344 = distinct !DILocation(line: 275, column: 3, scope: !10330)
!10345 = !DILocation(line: 0, scope: !10076, inlinedAt: !10346)
!10346 = distinct !DILocation(line: 275, column: 3, scope: !10330)
!10347 = !DILocation(line: 276, column: 1, scope: !10330)
!10348 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1274, file: !1274, line: 698, type: !1287, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10349)
!10349 = !{!10350, !10351, !10352}
!10350 = !DILocalVariable(name: "dev", arg: 1, scope: !10348, file: !1274, line: 698, type: !1134)
!10351 = !DILocalVariable(name: "data", scope: !10348, file: !1274, line: 700, type: !9792)
!10352 = !DILocalVariable(name: "ret", scope: !10348, file: !1274, line: 701, type: !103)
!10353 = !DILocation(line: 0, scope: !10348)
!10354 = !DILocation(line: 700, column: 38, scope: !10348)
!10355 = !DILocation(line: 703, column: 8, scope: !10348)
!10356 = !DILocation(line: 703, column: 12, scope: !10348)
!10357 = !DILocation(line: 705, column: 7, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10348, file: !1274, line: 705, column: 6)
!10359 = !DILocation(line: 705, column: 6, scope: !10348)
!10360 = !DILocation(line: 722, column: 8, scope: !10348)
!10361 = !DILocation(line: 723, column: 10, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10348, file: !1274, line: 723, column: 6)
!10363 = !DILocation(line: 723, column: 6, scope: !10348)
!10364 = !DILocation(line: 731, column: 1, scope: !10348)
!10365 = distinct !DISubprogram(name: "device_is_ready", scope: !6631, file: !6631, line: 47, type: !10366, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10368)
!10366 = !DISubroutineType(types: !10367)
!10367 = !{!157, !1134}
!10368 = !{!10369}
!10369 = !DILocalVariable(name: "dev", arg: 1, scope: !10365, file: !6631, line: 47, type: !1134)
!10370 = !DILocation(line: 0, scope: !10365)
!10371 = !DILocation(line: 55, column: 2, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10365, file: !6631, line: 55, column: 2)
!10373 = !{i64 2154257420}
!10374 = !DILocation(line: 56, column: 9, scope: !10365)
!10375 = !DILocation(line: 56, column: 2, scope: !10365)
!10376 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1274, file: !1274, line: 270, type: !10377, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10379)
!10377 = !DISubroutineType(types: !10378)
!10378 = !{!103, !1134, !157}
!10379 = !{!10380, !10381, !10382, !10383, !10384}
!10380 = !DILocalVariable(name: "dev", arg: 1, scope: !10376, file: !1274, line: 270, type: !1134)
!10381 = !DILocalVariable(name: "on", arg: 2, scope: !10376, file: !1274, line: 270, type: !157)
!10382 = !DILocalVariable(name: "cfg", scope: !10376, file: !1274, line: 272, type: !9725)
!10383 = !DILocalVariable(name: "ret", scope: !10376, file: !1274, line: 273, type: !103)
!10384 = !DILocalVariable(name: "clk", scope: !10376, file: !1274, line: 278, type: !10015)
!10385 = !DILocation(line: 0, scope: !10376)
!10386 = !DILocation(line: 272, column: 45, scope: !10376)
!10387 = !DILocation(line: 282, column: 38, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10389, file: !1274, line: 280, column: 10)
!10389 = distinct !DILexicalBlock(scope: !10376, file: !1274, line: 280, column: 6)
!10390 = !DILocation(line: 282, column: 6, scope: !10388)
!10391 = !DILocation(line: 281, column: 9, scope: !10388)
!10392 = !DILocation(line: 293, column: 1, scope: !10376)
!10393 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !10366, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10394)
!10394 = !{!10395}
!10395 = !DILocalVariable(name: "dev", arg: 1, scope: !10393, file: !141, line: 730, type: !1134)
!10396 = !DILocation(line: 0, scope: !10393)
!10397 = !DILocation(line: 732, column: 9, scope: !10393)
!10398 = !DILocation(line: 732, column: 2, scope: !10393)
!10399 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1274, file: !1274, line: 496, type: !10400, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10402)
!10400 = !DISubroutineType(types: !10401)
!10401 = !{!103, !1134, !103, !103, !103}
!10402 = !{!10403, !10404, !10405, !10406, !10407, !10408}
!10403 = !DILocalVariable(name: "dev", arg: 1, scope: !10399, file: !1274, line: 496, type: !1134)
!10404 = !DILocalVariable(name: "pin", arg: 2, scope: !10399, file: !1274, line: 496, type: !103)
!10405 = !DILocalVariable(name: "conf", arg: 3, scope: !10399, file: !1274, line: 496, type: !103)
!10406 = !DILocalVariable(name: "func", arg: 4, scope: !10399, file: !1274, line: 496, type: !103)
!10407 = !DILocalVariable(name: "ret", scope: !10399, file: !1274, line: 498, type: !103)
!10408 = !DILocalVariable(name: "gpio_out", scope: !10409, file: !1274, line: 508, type: !121)
!10409 = distinct !DILexicalBlock(scope: !10410, file: !1274, line: 507, column: 27)
!10410 = distinct !DILexicalBlock(scope: !10399, file: !1274, line: 507, column: 6)
!10411 = !DILocation(line: 0, scope: !10399)
!10412 = !DILocation(line: 505, column: 2, scope: !10399)
!10413 = !DILocation(line: 507, column: 11, scope: !10410)
!10414 = !DILocation(line: 507, column: 6, scope: !10399)
!10415 = !DILocation(line: 508, column: 28, scope: !10409)
!10416 = !DILocation(line: 0, scope: !10409)
!10417 = !DILocation(line: 510, column: 16, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10409, file: !1274, line: 510, column: 7)
!10419 = !DILocation(line: 0, scope: !10418)
!10420 = !DILocation(line: 510, column: 7, scope: !10409)
!10421 = !DILocation(line: 511, column: 4, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10418, file: !1274, line: 510, column: 32)
!10423 = !DILocation(line: 512, column: 3, scope: !10422)
!10424 = !DILocation(line: 513, column: 4, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10426, file: !1274, line: 512, column: 39)
!10426 = distinct !DILexicalBlock(scope: !10418, file: !1274, line: 512, column: 14)
!10427 = !DILocation(line: 514, column: 3, scope: !10425)
!10428 = !DILocation(line: 518, column: 1, scope: !10399)
!10429 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1579, file: !1579, line: 526, type: !1450, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10430)
!10430 = !{!10431, !10432, !10433}
!10431 = !DILocalVariable(name: "dev", arg: 1, scope: !10429, file: !1579, line: 526, type: !1452)
!10432 = !DILocalVariable(name: "c", arg: 2, scope: !10429, file: !1579, line: 526, type: !224)
!10433 = !DILocalVariable(name: "config", scope: !10429, file: !1579, line: 528, type: !10434)
!10434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!10435 = !DILocation(line: 0, scope: !10429)
!10436 = !DILocation(line: 528, column: 48, scope: !10429)
!10437 = !DILocation(line: 531, column: 40, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10429, file: !1579, line: 531, column: 6)
!10439 = !DILocation(line: 531, column: 6, scope: !10438)
!10440 = !DILocation(line: 531, column: 6, scope: !10429)
!10441 = !DILocation(line: 532, column: 34, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10438, file: !1579, line: 531, column: 48)
!10443 = !DILocation(line: 532, column: 3, scope: !10442)
!10444 = !DILocation(line: 533, column: 2, scope: !10442)
!10445 = !DILocation(line: 539, column: 42, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10429, file: !1579, line: 539, column: 6)
!10447 = !DILocation(line: 539, column: 7, scope: !10446)
!10448 = !DILocation(line: 539, column: 6, scope: !10429)
!10449 = !DILocation(line: 543, column: 52, scope: !10429)
!10450 = !DILocation(line: 543, column: 22, scope: !10429)
!10451 = !DILocation(line: 543, column: 5, scope: !10429)
!10452 = !DILocation(line: 545, column: 2, scope: !10429)
!10453 = !DILocation(line: 546, column: 1, scope: !10429)
!10454 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1579, file: !1579, line: 548, type: !1469, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10455)
!10455 = !{!10456, !10457, !10458, !10459}
!10456 = !DILocalVariable(name: "dev", arg: 1, scope: !10454, file: !1579, line: 548, type: !1452)
!10457 = !DILocalVariable(name: "c", arg: 2, scope: !10454, file: !1579, line: 549, type: !155)
!10458 = !DILocalVariable(name: "config", scope: !10454, file: !1579, line: 551, type: !10434)
!10459 = !DILocalVariable(name: "key", scope: !10454, file: !1579, line: 555, type: !32)
!10460 = !DILocation(line: 0, scope: !10454)
!10461 = !DILocation(line: 551, column: 48, scope: !10454)
!10462 = !DILocation(line: 562, column: 2, scope: !10454)
!10463 = !DILocation(line: 563, column: 41, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10465, file: !1579, line: 563, column: 7)
!10465 = distinct !DILexicalBlock(scope: !10454, file: !1579, line: 562, column: 12)
!10466 = !DILocation(line: 563, column: 7, scope: !10464)
!10467 = !DILocation(line: 563, column: 7, scope: !10465)
!10468 = !DILocation(line: 55, column: 2, scope: !10469, inlinedAt: !10473)
!10469 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5770, file: !5770, line: 42, type: !5771, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10470)
!10470 = !{!10471, !10472}
!10471 = !DILocalVariable(name: "key", scope: !10469, file: !5770, line: 44, type: !32)
!10472 = !DILocalVariable(name: "tmp", scope: !10469, file: !5770, line: 53, type: !32)
!10473 = distinct !DILocation(line: 564, column: 10, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10464, file: !1579, line: 563, column: 49)
!10475 = !{i64 1997370}
!10476 = !DILocation(line: 0, scope: !10469, inlinedAt: !10473)
!10477 = !DILocation(line: 565, column: 42, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10474, file: !1579, line: 565, column: 8)
!10479 = !DILocation(line: 565, column: 8, scope: !10478)
!10480 = !DILocation(line: 565, column: 8, scope: !10474)
!10481 = !DILocalVariable(name: "key", arg: 1, scope: !10482, file: !5770, line: 84, type: !32)
!10482 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5770, file: !5770, line: 84, type: !5781, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10483)
!10483 = !{!10481}
!10484 = !DILocation(line: 0, scope: !10482, inlinedAt: !10485)
!10485 = distinct !DILocation(line: 568, column: 4, scope: !10474)
!10486 = !DILocation(line: 95, column: 2, scope: !10482, inlinedAt: !10485)
!10487 = !{i64 1998187}
!10488 = !DILocation(line: 569, column: 3, scope: !10474)
!10489 = distinct !{!10489, !10462, !10490}
!10490 = !DILocation(line: 570, column: 2, scope: !10454)
!10491 = !DILocation(line: 592, column: 33, scope: !10454)
!10492 = !DILocation(line: 592, column: 2, scope: !10454)
!10493 = !DILocation(line: 0, scope: !10482, inlinedAt: !10494)
!10494 = distinct !DILocation(line: 593, column: 2, scope: !10454)
!10495 = !DILocation(line: 95, column: 2, scope: !10482, inlinedAt: !10494)
!10496 = !DILocation(line: 594, column: 1, scope: !10454)
!10497 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1579, file: !1579, line: 596, type: !1473, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10498)
!10498 = !{!10499, !10500, !10501}
!10499 = !DILocalVariable(name: "dev", arg: 1, scope: !10497, file: !1579, line: 596, type: !1452)
!10500 = !DILocalVariable(name: "config", scope: !10497, file: !1579, line: 598, type: !10434)
!10501 = !DILocalVariable(name: "err", scope: !10497, file: !1579, line: 599, type: !121)
!10502 = !DILocation(line: 0, scope: !10497)
!10503 = !DILocation(line: 598, column: 48, scope: !10497)
!10504 = !DILocation(line: 606, column: 40, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10497, file: !1579, line: 606, column: 6)
!10506 = !DILocation(line: 606, column: 6, scope: !10505)
!10507 = !DILocation(line: 606, column: 6, scope: !10497)
!10508 = !DILocation(line: 610, column: 39, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10497, file: !1579, line: 610, column: 6)
!10510 = !DILocation(line: 610, column: 6, scope: !10509)
!10511 = !DILocation(line: 610, column: 6, scope: !10497)
!10512 = !DILocation(line: 614, column: 39, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10497, file: !1579, line: 614, column: 6)
!10514 = !DILocation(line: 614, column: 6, scope: !10513)
!10515 = !DILocation(line: 614, column: 6, scope: !10497)
!10516 = !DILocation(line: 619, column: 40, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10497, file: !1579, line: 619, column: 6)
!10518 = !DILocation(line: 619, column: 6, scope: !10517)
!10519 = !DILocation(line: 619, column: 6, scope: !10497)
!10520 = !DILocation(line: 623, column: 10, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10497, file: !1579, line: 623, column: 6)
!10522 = !DILocation(line: 623, column: 6, scope: !10497)
!10523 = !DILocation(line: 624, column: 34, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10521, file: !1579, line: 623, column: 24)
!10525 = !DILocation(line: 624, column: 3, scope: !10524)
!10526 = !DILocation(line: 625, column: 2, scope: !10524)
!10527 = !DILocation(line: 632, column: 10, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10497, file: !1579, line: 632, column: 6)
!10529 = !DILocation(line: 632, column: 6, scope: !10497)
!10530 = !DILocation(line: 633, column: 34, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10528, file: !1579, line: 632, column: 32)
!10532 = !DILocation(line: 633, column: 3, scope: !10531)
!10533 = !DILocation(line: 634, column: 2, scope: !10531)
!10534 = !DILocation(line: 636, column: 10, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10497, file: !1579, line: 636, column: 6)
!10536 = !DILocation(line: 636, column: 6, scope: !10497)
!10537 = !DILocation(line: 637, column: 33, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10535, file: !1579, line: 636, column: 31)
!10539 = !DILocation(line: 637, column: 3, scope: !10538)
!10540 = !DILocation(line: 638, column: 2, scope: !10538)
!10541 = !DILocation(line: 640, column: 10, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10497, file: !1579, line: 640, column: 6)
!10543 = !DILocation(line: 640, column: 6, scope: !10497)
!10544 = !DILocation(line: 641, column: 33, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10542, file: !1579, line: 640, column: 32)
!10546 = !DILocation(line: 641, column: 3, scope: !10545)
!10547 = !DILocation(line: 642, column: 2, scope: !10545)
!10548 = !DILocation(line: 646, column: 32, scope: !10497)
!10549 = !DILocation(line: 646, column: 2, scope: !10497)
!10550 = !DILocation(line: 648, column: 2, scope: !10497)
!10551 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1579, file: !1579, line: 419, type: !1477, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10552)
!10552 = !{!10553, !10554, !10555, !10556, !10558, !10559, !10560, !10561}
!10553 = !DILocalVariable(name: "dev", arg: 1, scope: !10551, file: !1579, line: 419, type: !1452)
!10554 = !DILocalVariable(name: "cfg", arg: 2, scope: !10551, file: !1579, line: 420, type: !1479)
!10555 = !DILocalVariable(name: "config", scope: !10551, file: !1579, line: 422, type: !10434)
!10556 = !DILocalVariable(name: "data", scope: !10551, file: !1579, line: 423, type: !10557)
!10557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 32)
!10558 = !DILocalVariable(name: "parity", scope: !10551, file: !1579, line: 424, type: !7058)
!10559 = !DILocalVariable(name: "stopbits", scope: !10551, file: !1579, line: 425, type: !7058)
!10560 = !DILocalVariable(name: "databits", scope: !10551, file: !1579, line: 426, type: !7058)
!10561 = !DILocalVariable(name: "flowctrl", scope: !10551, file: !1579, line: 428, type: !7058)
!10562 = !DILocation(line: 0, scope: !10551)
!10563 = !DILocation(line: 422, column: 48, scope: !10551)
!10564 = !DILocation(line: 423, column: 38, scope: !10551)
!10565 = !DILocation(line: 424, column: 56, scope: !10551)
!10566 = !DILocation(line: 424, column: 51, scope: !10551)
!10567 = !DILocation(line: 424, column: 26, scope: !10551)
!10568 = !DILocation(line: 425, column: 60, scope: !10551)
!10569 = !DILocation(line: 425, column: 55, scope: !10551)
!10570 = !DILocation(line: 425, column: 28, scope: !10551)
!10571 = !DILocation(line: 426, column: 60, scope: !10551)
!10572 = !DILocation(line: 426, column: 55, scope: !10551)
!10573 = !DILocation(line: 426, column: 28, scope: !10551)
!10574 = !DILocation(line: 428, column: 58, scope: !10551)
!10575 = !DILocation(line: 428, column: 53, scope: !10551)
!10576 = !DILocation(line: 428, column: 28, scope: !10551)
!10577 = !DILocation(line: 431, column: 44, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10551, file: !1579, line: 431, column: 6)
!10579 = !DILocation(line: 438, column: 22, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10551, file: !1579, line: 437, column: 6)
!10581 = !DILocation(line: 437, column: 6, scope: !10551)
!10582 = !DILocation(line: 448, column: 6, scope: !10551)
!10583 = !DILocation(line: 465, column: 47, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10551, file: !1579, line: 465, column: 6)
!10585 = !DILocation(line: 475, column: 21, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10551, file: !1579, line: 475, column: 6)
!10587 = !DILocation(line: 475, column: 6, scope: !10551)
!10588 = !DILocation(line: 476, column: 8, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10590, file: !1579, line: 476, column: 7)
!10590 = distinct !DILexicalBlock(scope: !10586, file: !1579, line: 475, column: 49)
!10591 = !DILocation(line: 477, column: 34, scope: !10589)
!10592 = !DILocation(line: 476, column: 7, scope: !10590)
!10593 = !DILocation(line: 482, column: 27, scope: !10551)
!10594 = !DILocation(line: 482, column: 2, scope: !10551)
!10595 = !DILocation(line: 484, column: 16, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10551, file: !1579, line: 484, column: 6)
!10597 = !DILocation(line: 484, column: 13, scope: !10596)
!10598 = !DILocation(line: 484, column: 6, scope: !10551)
!10599 = !DILocation(line: 485, column: 3, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10596, file: !1579, line: 484, column: 44)
!10601 = !DILocation(line: 486, column: 2, scope: !10600)
!10602 = !DILocation(line: 488, column: 18, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10551, file: !1579, line: 488, column: 6)
!10604 = !DILocation(line: 488, column: 15, scope: !10603)
!10605 = !DILocation(line: 488, column: 6, scope: !10551)
!10606 = !DILocation(line: 489, column: 3, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10603, file: !1579, line: 488, column: 48)
!10608 = !DILocation(line: 490, column: 2, scope: !10607)
!10609 = !DILocation(line: 492, column: 18, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10551, file: !1579, line: 492, column: 6)
!10611 = !DILocation(line: 492, column: 15, scope: !10610)
!10612 = !DILocation(line: 492, column: 6, scope: !10551)
!10613 = !DILocation(line: 493, column: 3, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10610, file: !1579, line: 492, column: 48)
!10615 = !DILocation(line: 494, column: 2, scope: !10614)
!10616 = !DILocation(line: 496, column: 18, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10551, file: !1579, line: 496, column: 6)
!10618 = !DILocation(line: 496, column: 15, scope: !10617)
!10619 = !DILocation(line: 496, column: 6, scope: !10551)
!10620 = !DILocation(line: 497, column: 3, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10617, file: !1579, line: 496, column: 46)
!10622 = !DILocation(line: 498, column: 2, scope: !10621)
!10623 = !DILocation(line: 500, column: 11, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10551, file: !1579, line: 500, column: 6)
!10625 = !DILocation(line: 500, column: 29, scope: !10624)
!10626 = !DILocation(line: 500, column: 20, scope: !10624)
!10627 = !DILocation(line: 500, column: 6, scope: !10551)
!10628 = !DILocation(line: 501, column: 3, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10624, file: !1579, line: 500, column: 40)
!10630 = !DILocation(line: 502, column: 26, scope: !10629)
!10631 = !DILocation(line: 502, column: 19, scope: !10629)
!10632 = !DILocation(line: 503, column: 2, scope: !10629)
!10633 = !DILocation(line: 505, column: 26, scope: !10551)
!10634 = !DILocation(line: 505, column: 2, scope: !10551)
!10635 = !DILocation(line: 506, column: 2, scope: !10551)
!10636 = !DILocation(line: 507, column: 1, scope: !10551)
!10637 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1579, file: !1579, line: 509, type: !1490, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10638)
!10638 = !{!10639, !10640, !10641}
!10639 = !DILocalVariable(name: "dev", arg: 1, scope: !10637, file: !1579, line: 509, type: !1452)
!10640 = !DILocalVariable(name: "cfg", arg: 2, scope: !10637, file: !1579, line: 510, type: !1492)
!10641 = !DILocalVariable(name: "data", scope: !10637, file: !1579, line: 512, type: !10557)
!10642 = !DILocation(line: 0, scope: !10637)
!10643 = !DILocation(line: 512, column: 38, scope: !10637)
!10644 = !DILocation(line: 514, column: 24, scope: !10637)
!10645 = !DILocation(line: 514, column: 7, scope: !10637)
!10646 = !DILocation(line: 514, column: 16, scope: !10637)
!10647 = !DILocation(line: 515, column: 41, scope: !10637)
!10648 = !{i32 0, i32 1537}
!10649 = !DILocation(line: 515, column: 16, scope: !10637)
!10650 = !DILocation(line: 515, column: 7, scope: !10637)
!10651 = !DILocation(line: 515, column: 14, scope: !10637)
!10652 = !DILocation(line: 517, column: 3, scope: !10637)
!10653 = !{i32 0, i32 12289}
!10654 = !DILocation(line: 516, column: 19, scope: !10637)
!10655 = !DILocation(line: 516, column: 7, scope: !10637)
!10656 = !DILocation(line: 516, column: 17, scope: !10637)
!10657 = !DILocation(line: 519, column: 3, scope: !10637)
!10658 = !DILocation(line: 519, column: 33, scope: !10637)
!10659 = !DILocation(line: 518, column: 19, scope: !10637)
!10660 = !DILocation(line: 518, column: 7, scope: !10637)
!10661 = !DILocation(line: 518, column: 17, scope: !10637)
!10662 = !DILocation(line: 521, column: 3, scope: !10637)
!10663 = !{i32 0, i32 769}
!10664 = !DILocation(line: 520, column: 19, scope: !10637)
!10665 = !DILocation(line: 520, column: 7, scope: !10637)
!10666 = !DILocation(line: 520, column: 17, scope: !10637)
!10667 = !DILocation(line: 522, column: 2, scope: !10637)
!10668 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1579, file: !1579, line: 661, type: !1495, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10669)
!10669 = !{!10670, !10671, !10672, !10673, !10674, !10675}
!10670 = !DILocalVariable(name: "dev", arg: 1, scope: !10668, file: !1579, line: 661, type: !1452)
!10671 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10668, file: !1579, line: 662, type: !255)
!10672 = !DILocalVariable(name: "size", arg: 3, scope: !10668, file: !1579, line: 663, type: !103)
!10673 = !DILocalVariable(name: "config", scope: !10668, file: !1579, line: 665, type: !10434)
!10674 = !DILocalVariable(name: "num_tx", scope: !10668, file: !1579, line: 666, type: !154)
!10675 = !DILocalVariable(name: "key", scope: !10668, file: !1579, line: 667, type: !32)
!10676 = !DILocation(line: 0, scope: !10668)
!10677 = !DILocation(line: 665, column: 48, scope: !10668)
!10678 = !DILocation(line: 669, column: 41, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10668, file: !1579, line: 669, column: 6)
!10680 = !DILocation(line: 669, column: 7, scope: !10679)
!10681 = !DILocation(line: 669, column: 6, scope: !10668)
!10682 = !DILocation(line: 55, column: 2, scope: !10469, inlinedAt: !10683)
!10683 = distinct !DILocation(line: 674, column: 8, scope: !10668)
!10684 = !DILocation(line: 0, scope: !10469, inlinedAt: !10683)
!10685 = !DILocation(line: 676, column: 24, scope: !10668)
!10686 = !DILocation(line: 676, column: 29, scope: !10668)
!10687 = !DILocation(line: 677, column: 43, scope: !10668)
!10688 = !DILocation(line: 677, column: 9, scope: !10668)
!10689 = !DILocation(line: 676, column: 2, scope: !10668)
!10690 = !DILocation(line: 681, column: 34, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10668, file: !1579, line: 677, column: 51)
!10692 = !DILocation(line: 681, column: 55, scope: !10691)
!10693 = !DILocation(line: 681, column: 41, scope: !10691)
!10694 = !DILocation(line: 681, column: 3, scope: !10691)
!10695 = !DILocation(line: 676, column: 17, scope: !10668)
!10696 = distinct !{!10696, !10689, !10697}
!10697 = !DILocation(line: 682, column: 2, scope: !10668)
!10698 = !DILocation(line: 0, scope: !10482, inlinedAt: !10699)
!10699 = distinct !DILocation(line: 684, column: 2, scope: !10668)
!10700 = !DILocation(line: 95, column: 2, scope: !10482, inlinedAt: !10699)
!10701 = !DILocation(line: 686, column: 2, scope: !10668)
!10702 = !DILocation(line: 687, column: 1, scope: !10668)
!10703 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1579, file: !1579, line: 689, type: !1499, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10704)
!10704 = !{!10705, !10706, !10707, !10708, !10709}
!10705 = !DILocalVariable(name: "dev", arg: 1, scope: !10703, file: !1579, line: 689, type: !1452)
!10706 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10703, file: !1579, line: 689, type: !261)
!10707 = !DILocalVariable(name: "size", arg: 3, scope: !10703, file: !1579, line: 690, type: !262)
!10708 = !DILocalVariable(name: "config", scope: !10703, file: !1579, line: 692, type: !10434)
!10709 = !DILocalVariable(name: "num_rx", scope: !10703, file: !1579, line: 693, type: !154)
!10710 = !DILocation(line: 0, scope: !10703)
!10711 = !DILocation(line: 692, column: 48, scope: !10703)
!10712 = !DILocation(line: 696, column: 44, scope: !10703)
!10713 = !DILocation(line: 695, column: 24, scope: !10703)
!10714 = !DILocation(line: 695, column: 29, scope: !10703)
!10715 = !DILocation(line: 696, column: 9, scope: !10703)
!10716 = !DILocation(line: 695, column: 2, scope: !10703)
!10717 = !DILocation(line: 700, column: 53, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10703, file: !1579, line: 696, column: 52)
!10719 = !DILocation(line: 700, column: 23, scope: !10718)
!10720 = !DILocation(line: 700, column: 17, scope: !10718)
!10721 = !DILocation(line: 700, column: 3, scope: !10718)
!10722 = !DILocation(line: 700, column: 21, scope: !10718)
!10723 = !DILocation(line: 703, column: 41, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10718, file: !1579, line: 703, column: 7)
!10725 = !DILocation(line: 703, column: 7, scope: !10724)
!10726 = !DILocation(line: 703, column: 7, scope: !10718)
!10727 = !DILocation(line: 704, column: 35, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10724, file: !1579, line: 703, column: 49)
!10729 = !DILocation(line: 704, column: 4, scope: !10728)
!10730 = !DILocation(line: 709, column: 3, scope: !10728)
!10731 = !DILocation(line: 695, column: 17, scope: !10703)
!10732 = distinct !{!10732, !10716, !10733}
!10733 = !DILocation(line: 710, column: 2, scope: !10703)
!10734 = !DILocation(line: 712, column: 2, scope: !10703)
!10735 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1579, file: !1579, line: 715, type: !1503, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10736)
!10736 = !{!10737, !10738}
!10737 = !DILocalVariable(name: "dev", arg: 1, scope: !10735, file: !1579, line: 715, type: !1452)
!10738 = !DILocalVariable(name: "config", scope: !10735, file: !1579, line: 717, type: !10434)
!10739 = !DILocation(line: 0, scope: !10735)
!10740 = !DILocation(line: 717, column: 48, scope: !10735)
!10741 = !DILocation(line: 729, column: 31, scope: !10735)
!10742 = !DILocation(line: 729, column: 2, scope: !10735)
!10743 = !DILocation(line: 734, column: 1, scope: !10735)
!10744 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1579, file: !1579, line: 736, type: !1503, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10745)
!10745 = !{!10746, !10747}
!10746 = !DILocalVariable(name: "dev", arg: 1, scope: !10744, file: !1579, line: 736, type: !1452)
!10747 = !DILocalVariable(name: "config", scope: !10744, file: !1579, line: 738, type: !10434)
!10748 = !DILocation(line: 0, scope: !10744)
!10749 = !DILocation(line: 738, column: 48, scope: !10744)
!10750 = !DILocation(line: 746, column: 32, scope: !10744)
!10751 = !DILocation(line: 746, column: 2, scope: !10744)
!10752 = !DILocation(line: 756, column: 1, scope: !10744)
!10753 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1579, file: !1579, line: 758, type: !1473, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10754)
!10754 = !{!10755, !10756}
!10755 = !DILocalVariable(name: "dev", arg: 1, scope: !10753, file: !1579, line: 758, type: !1452)
!10756 = !DILocalVariable(name: "config", scope: !10753, file: !1579, line: 760, type: !10434)
!10757 = !DILocation(line: 0, scope: !10753)
!10758 = !DILocation(line: 760, column: 48, scope: !10753)
!10759 = !DILocation(line: 762, column: 43, scope: !10753)
!10760 = !DILocation(line: 762, column: 9, scope: !10753)
!10761 = !DILocation(line: 762, column: 50, scope: !10753)
!10762 = !DILocation(line: 763, column: 35, scope: !10753)
!10763 = !DILocation(line: 763, column: 3, scope: !10753)
!10764 = !DILocation(line: 762, column: 2, scope: !10753)
!10765 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1579, file: !1579, line: 773, type: !1503, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10766)
!10766 = !{!10767, !10768}
!10767 = !DILocalVariable(name: "dev", arg: 1, scope: !10765, file: !1579, line: 773, type: !1452)
!10768 = !DILocalVariable(name: "config", scope: !10765, file: !1579, line: 775, type: !10434)
!10769 = !DILocation(line: 0, scope: !10765)
!10770 = !DILocation(line: 775, column: 48, scope: !10765)
!10771 = !DILocation(line: 777, column: 33, scope: !10765)
!10772 = !DILocation(line: 777, column: 2, scope: !10765)
!10773 = !DILocation(line: 778, column: 1, scope: !10765)
!10774 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1579, file: !1579, line: 780, type: !1503, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10775)
!10775 = !{!10776, !10777}
!10776 = !DILocalVariable(name: "dev", arg: 1, scope: !10774, file: !1579, line: 780, type: !1452)
!10777 = !DILocalVariable(name: "config", scope: !10774, file: !1579, line: 782, type: !10434)
!10778 = !DILocation(line: 0, scope: !10774)
!10779 = !DILocation(line: 782, column: 48, scope: !10774)
!10780 = !DILocation(line: 784, column: 34, scope: !10774)
!10781 = !DILocation(line: 784, column: 2, scope: !10774)
!10782 = !DILocation(line: 785, column: 1, scope: !10774)
!10783 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1579, file: !1579, line: 766, type: !1473, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10784)
!10784 = !{!10785, !10786}
!10785 = !DILocalVariable(name: "dev", arg: 1, scope: !10783, file: !1579, line: 766, type: !1452)
!10786 = !DILocalVariable(name: "config", scope: !10783, file: !1579, line: 768, type: !10434)
!10787 = !DILocation(line: 0, scope: !10783)
!10788 = !DILocation(line: 768, column: 48, scope: !10783)
!10789 = !DILocation(line: 770, column: 42, scope: !10783)
!10790 = !DILocation(line: 770, column: 9, scope: !10783)
!10791 = !DILocation(line: 770, column: 2, scope: !10783)
!10792 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1579, file: !1579, line: 787, type: !1473, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10793)
!10793 = !{!10794, !10795}
!10794 = !DILocalVariable(name: "dev", arg: 1, scope: !10792, file: !1579, line: 787, type: !1452)
!10795 = !DILocalVariable(name: "config", scope: !10792, file: !1579, line: 789, type: !10434)
!10796 = !DILocation(line: 0, scope: !10792)
!10797 = !DILocation(line: 789, column: 48, scope: !10792)
!10798 = !DILocation(line: 794, column: 44, scope: !10792)
!10799 = !DILocation(line: 794, column: 9, scope: !10792)
!10800 = !DILocation(line: 794, column: 2, scope: !10792)
!10801 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1579, file: !1579, line: 797, type: !1503, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10802)
!10802 = !{!10803, !10804}
!10803 = !DILocalVariable(name: "dev", arg: 1, scope: !10801, file: !1579, line: 797, type: !1452)
!10804 = !DILocalVariable(name: "config", scope: !10801, file: !1579, line: 799, type: !10434)
!10805 = !DILocation(line: 0, scope: !10801)
!10806 = !DILocation(line: 799, column: 48, scope: !10801)
!10807 = !DILocation(line: 802, column: 34, scope: !10801)
!10808 = !DILocation(line: 802, column: 2, scope: !10801)
!10809 = !DILocation(line: 805, column: 6, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10801, file: !1579, line: 805, column: 6)
!10811 = !DILocation(line: 806, column: 3, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10810, file: !1579, line: 805, column: 43)
!10813 = !DILocation(line: 810, column: 31, scope: !10801)
!10814 = !DILocation(line: 807, column: 2, scope: !10812)
!10815 = !DILocation(line: 810, column: 2, scope: !10801)
!10816 = !DILocation(line: 811, column: 1, scope: !10801)
!10817 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1579, file: !1579, line: 813, type: !1503, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10818)
!10818 = !{!10819, !10820}
!10819 = !DILocalVariable(name: "dev", arg: 1, scope: !10817, file: !1579, line: 813, type: !1452)
!10820 = !DILocalVariable(name: "config", scope: !10817, file: !1579, line: 815, type: !10434)
!10821 = !DILocation(line: 0, scope: !10817)
!10822 = !DILocation(line: 815, column: 48, scope: !10817)
!10823 = !DILocation(line: 818, column: 35, scope: !10817)
!10824 = !DILocation(line: 818, column: 2, scope: !10817)
!10825 = !DILocation(line: 821, column: 6, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10817, file: !1579, line: 821, column: 6)
!10827 = !DILocation(line: 822, column: 3, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10826, file: !1579, line: 821, column: 43)
!10829 = !DILocation(line: 826, column: 32, scope: !10817)
!10830 = !DILocation(line: 823, column: 2, scope: !10828)
!10831 = !DILocation(line: 826, column: 2, scope: !10817)
!10832 = !DILocation(line: 827, column: 1, scope: !10817)
!10833 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1579, file: !1579, line: 829, type: !1473, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10834)
!10834 = !{!10835, !10836}
!10835 = !DILocalVariable(name: "dev", arg: 1, scope: !10833, file: !1579, line: 829, type: !1452)
!10836 = !DILocalVariable(name: "config", scope: !10833, file: !1579, line: 831, type: !10434)
!10837 = !DILocation(line: 0, scope: !10833)
!10838 = !DILocation(line: 831, column: 48, scope: !10833)
!10839 = !DILocation(line: 833, column: 46, scope: !10833)
!10840 = !DILocation(line: 833, column: 11, scope: !10833)
!10841 = !DILocation(line: 833, column: 53, scope: !10833)
!10842 = !DILocation(line: 834, column: 38, scope: !10833)
!10843 = !DILocation(line: 834, column: 4, scope: !10833)
!10844 = !DILocation(line: 834, column: 46, scope: !10833)
!10845 = !DILocation(line: 835, column: 37, scope: !10833)
!10846 = !DILocation(line: 835, column: 4, scope: !10833)
!10847 = !DILocation(line: 835, column: 44, scope: !10833)
!10848 = !DILocation(line: 836, column: 36, scope: !10833)
!10849 = !DILocation(line: 836, column: 4, scope: !10833)
!10850 = !DILocation(line: 833, column: 2, scope: !10833)
!10851 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1579, file: !1579, line: 839, type: !1473, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10852)
!10852 = !{!10853}
!10853 = !DILocalVariable(name: "dev", arg: 1, scope: !10851, file: !1579, line: 839, type: !1452)
!10854 = !DILocation(line: 0, scope: !10851)
!10855 = !DILocation(line: 841, column: 2, scope: !10851)
!10856 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1579, file: !1579, line: 844, type: !1517, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10857)
!10857 = !{!10858, !10859, !10860, !10861}
!10858 = !DILocalVariable(name: "dev", arg: 1, scope: !10856, file: !1579, line: 844, type: !1452)
!10859 = !DILocalVariable(name: "cb", arg: 2, scope: !10856, file: !1579, line: 845, type: !1519)
!10860 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10856, file: !1579, line: 846, type: !102)
!10861 = !DILocalVariable(name: "data", scope: !10856, file: !1579, line: 848, type: !10557)
!10862 = !DILocation(line: 0, scope: !10856)
!10863 = !DILocation(line: 848, column: 38, scope: !10856)
!10864 = !DILocation(line: 850, column: 8, scope: !10856)
!10865 = !DILocation(line: 850, column: 16, scope: !10856)
!10866 = !DILocation(line: 851, column: 8, scope: !10856)
!10867 = !DILocation(line: 851, column: 18, scope: !10856)
!10868 = !DILocation(line: 852, column: 1, scope: !10856)
!10869 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10870, file: !10870, line: 1792, type: !10871, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10873)
!10870 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10871 = !DISubroutineType(types: !10872)
!10872 = !{!121, !1523}
!10873 = !{!10874}
!10874 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10869, file: !10870, line: 1792, type: !1523)
!10875 = !DILocation(line: 0, scope: !10869)
!10876 = !DILocation(line: 1794, column: 11, scope: !10869)
!10877 = !DILocation(line: 1794, column: 47, scope: !10869)
!10878 = !DILocation(line: 1794, column: 3, scope: !10869)
!10879 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10870, file: !10870, line: 2227, type: !10871, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10880)
!10880 = !{!10881}
!10881 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10879, file: !10870, line: 2227, type: !1523)
!10882 = !DILocation(line: 0, scope: !10879)
!10883 = !DILocation(line: 2229, column: 11, scope: !10879)
!10884 = !DILocation(line: 2229, column: 51, scope: !10879)
!10885 = !DILocation(line: 2229, column: 3, scope: !10879)
!10886 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10870, file: !10870, line: 1803, type: !10871, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10887)
!10887 = !{!10888}
!10888 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10886, file: !10870, line: 1803, type: !1523)
!10889 = !DILocation(line: 0, scope: !10886)
!10890 = !DILocation(line: 1805, column: 11, scope: !10886)
!10891 = !DILocation(line: 1805, column: 45, scope: !10886)
!10892 = !DILocation(line: 1805, column: 3, scope: !10886)
!10893 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10870, file: !10870, line: 2238, type: !10871, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10894)
!10894 = !{!10895}
!10895 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10893, file: !10870, line: 2238, type: !1523)
!10896 = !DILocation(line: 0, scope: !10893)
!10897 = !DILocation(line: 2240, column: 11, scope: !10893)
!10898 = !DILocation(line: 2240, column: 49, scope: !10893)
!10899 = !DILocation(line: 2240, column: 3, scope: !10893)
!10900 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10870, file: !10870, line: 2192, type: !10901, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10903)
!10901 = !DISubroutineType(types: !10902)
!10902 = !{null, !1523}
!10903 = !{!10904, !10905}
!10904 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10900, file: !10870, line: 2192, type: !1523)
!10905 = !DILocalVariable(name: "val", scope: !10906, file: !10870, line: 2194, type: !121)
!10906 = distinct !DILexicalBlock(scope: !10900, file: !10870, line: 2194, column: 3)
!10907 = !DILocation(line: 0, scope: !10900)
!10908 = !DILocation(line: 2194, column: 3, scope: !10906)
!10909 = !DILocalVariable(name: "addr", arg: 1, scope: !10910, file: !6790, line: 476, type: !1575)
!10910 = distinct !DISubprogram(name: "__LDREXW", scope: !6790, file: !6790, line: 476, type: !10911, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10913)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{!121, !1575}
!10913 = !{!10909, !10914}
!10914 = !DILocalVariable(name: "result", scope: !10910, file: !6790, line: 478, type: !121)
!10915 = !DILocation(line: 0, scope: !10910, inlinedAt: !10916)
!10916 = distinct !DILocation(line: 2194, column: 3, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10906, file: !10870, line: 2194, column: 3)
!10918 = !DILocation(line: 480, column: 4, scope: !10910, inlinedAt: !10916)
!10919 = !{i64 2859432}
!10920 = !DILocation(line: 2194, column: 3, scope: !10917)
!10921 = !DILocation(line: 0, scope: !10906)
!10922 = !DILocalVariable(name: "value", arg: 1, scope: !10923, file: !6790, line: 527, type: !121)
!10923 = distinct !DISubprogram(name: "__STREXW", scope: !6790, file: !6790, line: 527, type: !10924, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10926)
!10924 = !DISubroutineType(types: !10925)
!10925 = !{!121, !121, !1575}
!10926 = !{!10922, !10927, !10928}
!10927 = !DILocalVariable(name: "addr", arg: 2, scope: !10923, file: !6790, line: 527, type: !1575)
!10928 = !DILocalVariable(name: "result", scope: !10923, file: !6790, line: 529, type: !121)
!10929 = !DILocation(line: 0, scope: !10923, inlinedAt: !10930)
!10930 = distinct !DILocation(line: 2194, column: 3, scope: !10906)
!10931 = !DILocation(line: 531, column: 4, scope: !10923, inlinedAt: !10930)
!10932 = !{i64 2860868}
!10933 = distinct !{!10933, !10908, !10908}
!10934 = !DILocation(line: 2195, column: 1, scope: !10900)
!10935 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10870, file: !10870, line: 2177, type: !10901, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10936)
!10936 = !{!10937}
!10937 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10935, file: !10870, line: 2177, type: !1523)
!10938 = !DILocation(line: 0, scope: !10935)
!10939 = !DILocation(line: 2179, column: 3, scope: !10935)
!10940 = !DILocation(line: 2180, column: 1, scope: !10935)
!10941 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10870, file: !10870, line: 2164, type: !10901, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10942)
!10942 = !{!10943, !10944}
!10943 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10941, file: !10870, line: 2164, type: !1523)
!10944 = !DILocalVariable(name: "val", scope: !10945, file: !10870, line: 2166, type: !121)
!10945 = distinct !DILexicalBlock(scope: !10941, file: !10870, line: 2166, column: 3)
!10946 = !DILocation(line: 0, scope: !10941)
!10947 = !DILocation(line: 2166, column: 3, scope: !10945)
!10948 = !DILocation(line: 0, scope: !10910, inlinedAt: !10949)
!10949 = distinct !DILocation(line: 2166, column: 3, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10945, file: !10870, line: 2166, column: 3)
!10951 = !DILocation(line: 480, column: 4, scope: !10910, inlinedAt: !10949)
!10952 = !DILocation(line: 2166, column: 3, scope: !10950)
!10953 = !DILocation(line: 0, scope: !10945)
!10954 = !DILocation(line: 0, scope: !10923, inlinedAt: !10955)
!10955 = distinct !DILocation(line: 2166, column: 3, scope: !10945)
!10956 = !DILocation(line: 531, column: 4, scope: !10923, inlinedAt: !10955)
!10957 = distinct !{!10957, !10947, !10947}
!10958 = !DILocation(line: 2167, column: 1, scope: !10941)
!10959 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10870, file: !10870, line: 2096, type: !10901, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10960)
!10960 = !{!10961, !10962}
!10961 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10959, file: !10870, line: 2096, type: !1523)
!10962 = !DILocalVariable(name: "val", scope: !10963, file: !10870, line: 2098, type: !121)
!10963 = distinct !DILexicalBlock(scope: !10959, file: !10870, line: 2098, column: 3)
!10964 = !DILocation(line: 0, scope: !10959)
!10965 = !DILocation(line: 2098, column: 3, scope: !10963)
!10966 = !DILocation(line: 0, scope: !10910, inlinedAt: !10967)
!10967 = distinct !DILocation(line: 2098, column: 3, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10963, file: !10870, line: 2098, column: 3)
!10969 = !DILocation(line: 480, column: 4, scope: !10910, inlinedAt: !10967)
!10970 = !DILocation(line: 2098, column: 3, scope: !10968)
!10971 = !DILocation(line: 0, scope: !10963)
!10972 = !DILocation(line: 0, scope: !10923, inlinedAt: !10973)
!10973 = distinct !DILocation(line: 2098, column: 3, scope: !10963)
!10974 = !DILocation(line: 531, column: 4, scope: !10923, inlinedAt: !10973)
!10975 = distinct !{!10975, !10965, !10965}
!10976 = !DILocation(line: 2099, column: 1, scope: !10959)
!10977 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10870, file: !10870, line: 2081, type: !10901, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10978)
!10978 = !{!10979}
!10979 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10977, file: !10870, line: 2081, type: !1523)
!10980 = !DILocation(line: 0, scope: !10977)
!10981 = !DILocation(line: 2083, column: 3, scope: !10977)
!10982 = !DILocation(line: 2084, column: 1, scope: !10977)
!10983 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10870, file: !10870, line: 2068, type: !10901, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !10984)
!10984 = !{!10985, !10986}
!10985 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10983, file: !10870, line: 2068, type: !1523)
!10986 = !DILocalVariable(name: "val", scope: !10987, file: !10870, line: 2070, type: !121)
!10987 = distinct !DILexicalBlock(scope: !10983, file: !10870, line: 2070, column: 3)
!10988 = !DILocation(line: 0, scope: !10983)
!10989 = !DILocation(line: 2070, column: 3, scope: !10987)
!10990 = !DILocation(line: 0, scope: !10910, inlinedAt: !10991)
!10991 = distinct !DILocation(line: 2070, column: 3, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10987, file: !10870, line: 2070, column: 3)
!10993 = !DILocation(line: 480, column: 4, scope: !10910, inlinedAt: !10991)
!10994 = !DILocation(line: 2070, column: 3, scope: !10992)
!10995 = !DILocation(line: 0, scope: !10987)
!10996 = !DILocation(line: 0, scope: !10923, inlinedAt: !10997)
!10997 = distinct !DILocation(line: 2070, column: 3, scope: !10987)
!10998 = !DILocation(line: 531, column: 4, scope: !10923, inlinedAt: !10997)
!10999 = distinct !{!10999, !10989, !10989}
!11000 = !DILocation(line: 2071, column: 1, scope: !10983)
!11001 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10870, file: !10870, line: 2131, type: !10901, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11002)
!11002 = !{!11003, !11004}
!11003 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11001, file: !10870, line: 2131, type: !1523)
!11004 = !DILocalVariable(name: "val", scope: !11005, file: !10870, line: 2133, type: !121)
!11005 = distinct !DILexicalBlock(scope: !11001, file: !10870, line: 2133, column: 3)
!11006 = !DILocation(line: 0, scope: !11001)
!11007 = !DILocation(line: 2133, column: 3, scope: !11005)
!11008 = !DILocation(line: 0, scope: !10910, inlinedAt: !11009)
!11009 = distinct !DILocation(line: 2133, column: 3, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11005, file: !10870, line: 2133, column: 3)
!11011 = !DILocation(line: 480, column: 4, scope: !10910, inlinedAt: !11009)
!11012 = !DILocation(line: 2133, column: 3, scope: !11010)
!11013 = !DILocation(line: 0, scope: !11005)
!11014 = !DILocation(line: 0, scope: !10923, inlinedAt: !11015)
!11015 = distinct !DILocation(line: 2133, column: 3, scope: !11005)
!11016 = !DILocation(line: 531, column: 4, scope: !10923, inlinedAt: !11015)
!11017 = distinct !{!11017, !11007, !11007}
!11018 = !DILocation(line: 2134, column: 1, scope: !11001)
!11019 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10870, file: !10870, line: 2035, type: !10901, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11020)
!11020 = !{!11021, !11022}
!11021 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11019, file: !10870, line: 2035, type: !1523)
!11022 = !DILocalVariable(name: "val", scope: !11023, file: !10870, line: 2037, type: !121)
!11023 = distinct !DILexicalBlock(scope: !11019, file: !10870, line: 2037, column: 3)
!11024 = !DILocation(line: 0, scope: !11019)
!11025 = !DILocation(line: 2037, column: 3, scope: !11023)
!11026 = !DILocation(line: 0, scope: !10910, inlinedAt: !11027)
!11027 = distinct !DILocation(line: 2037, column: 3, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11023, file: !10870, line: 2037, column: 3)
!11029 = !DILocation(line: 480, column: 4, scope: !10910, inlinedAt: !11027)
!11030 = !DILocation(line: 2037, column: 3, scope: !11028)
!11031 = !DILocation(line: 0, scope: !11023)
!11032 = !DILocation(line: 0, scope: !10923, inlinedAt: !11033)
!11033 = distinct !DILocation(line: 2037, column: 3, scope: !11023)
!11034 = !DILocation(line: 531, column: 4, scope: !10923, inlinedAt: !11033)
!11035 = distinct !{!11035, !11025, !11025}
!11036 = !DILocation(line: 2038, column: 1, scope: !11019)
!11037 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10870, file: !10870, line: 1814, type: !10871, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11038)
!11038 = !{!11039}
!11039 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11037, file: !10870, line: 1814, type: !1523)
!11040 = !DILocation(line: 0, scope: !11037)
!11041 = !DILocation(line: 1816, column: 11, scope: !11037)
!11042 = !DILocation(line: 1816, column: 46, scope: !11037)
!11043 = !DILocation(line: 1816, column: 3, scope: !11037)
!11044 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10870, file: !10870, line: 2142, type: !10901, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11045)
!11045 = !{!11046, !11047}
!11046 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11044, file: !10870, line: 2142, type: !1523)
!11047 = !DILocalVariable(name: "val", scope: !11048, file: !10870, line: 2144, type: !121)
!11048 = distinct !DILexicalBlock(scope: !11044, file: !10870, line: 2144, column: 3)
!11049 = !DILocation(line: 0, scope: !11044)
!11050 = !DILocation(line: 2144, column: 3, scope: !11048)
!11051 = !DILocation(line: 0, scope: !10910, inlinedAt: !11052)
!11052 = distinct !DILocation(line: 2144, column: 3, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11048, file: !10870, line: 2144, column: 3)
!11054 = !DILocation(line: 480, column: 4, scope: !10910, inlinedAt: !11052)
!11055 = !DILocation(line: 2144, column: 3, scope: !11053)
!11056 = !DILocation(line: 0, scope: !11048)
!11057 = !DILocation(line: 0, scope: !10923, inlinedAt: !11058)
!11058 = distinct !DILocation(line: 2144, column: 3, scope: !11048)
!11059 = !DILocation(line: 531, column: 4, scope: !10923, inlinedAt: !11058)
!11060 = distinct !{!11060, !11050, !11050}
!11061 = !DILocation(line: 2145, column: 1, scope: !11044)
!11062 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10870, file: !10870, line: 2046, type: !10901, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11063)
!11063 = !{!11064, !11065}
!11064 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11062, file: !10870, line: 2046, type: !1523)
!11065 = !DILocalVariable(name: "val", scope: !11066, file: !10870, line: 2048, type: !121)
!11066 = distinct !DILexicalBlock(scope: !11062, file: !10870, line: 2048, column: 3)
!11067 = !DILocation(line: 0, scope: !11062)
!11068 = !DILocation(line: 2048, column: 3, scope: !11066)
!11069 = !DILocation(line: 0, scope: !10910, inlinedAt: !11070)
!11070 = distinct !DILocation(line: 2048, column: 3, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11066, file: !10870, line: 2048, column: 3)
!11072 = !DILocation(line: 480, column: 4, scope: !10910, inlinedAt: !11070)
!11073 = !DILocation(line: 2048, column: 3, scope: !11071)
!11074 = !DILocation(line: 0, scope: !11066)
!11075 = !DILocation(line: 0, scope: !10923, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 2048, column: 3, scope: !11066)
!11077 = !DILocation(line: 531, column: 4, scope: !10923, inlinedAt: !11076)
!11078 = distinct !{!11078, !11068, !11068}
!11079 = !DILocation(line: 2049, column: 1, scope: !11062)
!11080 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10870, file: !10870, line: 2403, type: !11081, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11083)
!11081 = !DISubroutineType(types: !11082)
!11082 = !{!154, !1523}
!11083 = !{!11084}
!11084 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11080, file: !10870, line: 2403, type: !1523)
!11085 = !DILocation(line: 0, scope: !11080)
!11086 = !DILocation(line: 2405, column: 20, scope: !11080)
!11087 = !DILocation(line: 2405, column: 10, scope: !11080)
!11088 = !DILocation(line: 2405, column: 3, scope: !11080)
!11089 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10870, file: !10870, line: 1770, type: !10871, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11090)
!11090 = !{!11091}
!11091 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11089, file: !10870, line: 1770, type: !1523)
!11092 = !DILocation(line: 0, scope: !11089)
!11093 = !DILocation(line: 1772, column: 11, scope: !11089)
!11094 = !DILocation(line: 1772, column: 46, scope: !11089)
!11095 = !DILocation(line: 1772, column: 3, scope: !11089)
!11096 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10870, file: !10870, line: 1934, type: !10901, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11097)
!11097 = !{!11098, !11099}
!11098 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11096, file: !10870, line: 1934, type: !1523)
!11099 = !DILocalVariable(name: "tmpreg", scope: !11096, file: !10870, line: 1936, type: !120)
!11100 = !DILocation(line: 0, scope: !11096)
!11101 = !DILocation(line: 1936, column: 3, scope: !11096)
!11102 = !DILocation(line: 1936, column: 17, scope: !11096)
!11103 = !DILocation(line: 1937, column: 20, scope: !11096)
!11104 = !DILocation(line: 1937, column: 10, scope: !11096)
!11105 = !DILocation(line: 1938, column: 10, scope: !11096)
!11106 = !DILocation(line: 1939, column: 20, scope: !11096)
!11107 = !DILocation(line: 1939, column: 10, scope: !11096)
!11108 = !DILocation(line: 1940, column: 10, scope: !11096)
!11109 = !DILocation(line: 1941, column: 1, scope: !11096)
!11110 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10870, file: !10870, line: 2426, type: !11111, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11113)
!11111 = !DISubroutineType(types: !11112)
!11112 = !{null, !1523, !154}
!11113 = !{!11114, !11115}
!11114 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11110, file: !10870, line: 2426, type: !1523)
!11115 = !DILocalVariable(name: "Value", arg: 2, scope: !11110, file: !10870, line: 2426, type: !154)
!11116 = !DILocation(line: 0, scope: !11110)
!11117 = !DILocation(line: 2428, column: 16, scope: !11110)
!11118 = !DILocation(line: 2428, column: 11, scope: !11110)
!11119 = !DILocation(line: 2428, column: 14, scope: !11110)
!11120 = !DILocation(line: 2429, column: 1, scope: !11110)
!11121 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1579, file: !1579, line: 205, type: !11122, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11124)
!11122 = !DISubroutineType(types: !11123)
!11123 = !{!121, !1452}
!11124 = !{!11125, !11126}
!11125 = !DILocalVariable(name: "dev", arg: 1, scope: !11121, file: !1579, line: 205, type: !1452)
!11126 = !DILocalVariable(name: "config", scope: !11121, file: !1579, line: 207, type: !10434)
!11127 = !DILocation(line: 0, scope: !11121)
!11128 = !DILocation(line: 207, column: 48, scope: !11121)
!11129 = !DILocation(line: 209, column: 36, scope: !11121)
!11130 = !DILocation(line: 209, column: 9, scope: !11121)
!11131 = !DILocation(line: 209, column: 2, scope: !11121)
!11132 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1579, file: !1579, line: 270, type: !11133, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11135)
!11133 = !DISubroutineType(types: !11134)
!11134 = !{!1418, !121}
!11135 = !{!11136}
!11136 = !DILocalVariable(name: "parity", arg: 1, scope: !11132, file: !1579, line: 270, type: !121)
!11137 = !DILocation(line: 0, scope: !11132)
!11138 = !DILocation(line: 272, column: 2, scope: !11132)
!11139 = !DILocation(line: 281, column: 1, scope: !11132)
!11140 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1579, file: !1579, line: 220, type: !11122, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11141)
!11141 = !{!11142, !11143}
!11142 = !DILocalVariable(name: "dev", arg: 1, scope: !11140, file: !1579, line: 220, type: !1452)
!11143 = !DILocalVariable(name: "config", scope: !11140, file: !1579, line: 222, type: !10434)
!11144 = !DILocation(line: 0, scope: !11140)
!11145 = !DILocation(line: 222, column: 48, scope: !11140)
!11146 = !DILocation(line: 224, column: 44, scope: !11140)
!11147 = !DILocation(line: 224, column: 9, scope: !11140)
!11148 = !DILocation(line: 224, column: 2, scope: !11140)
!11149 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1579, file: !1579, line: 304, type: !11150, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11152)
!11150 = !DISubroutineType(types: !11151)
!11151 = !{!1432, !121}
!11152 = !{!11153}
!11153 = !DILocalVariable(name: "sb", arg: 1, scope: !11149, file: !1579, line: 304, type: !121)
!11154 = !DILocation(line: 0, scope: !11149)
!11155 = !DILocation(line: 306, column: 2, scope: !11149)
!11156 = !DILocation(line: 0, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11149, file: !1579, line: 306, column: 14)
!11158 = !DILocation(line: 323, column: 1, scope: !11149)
!11159 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1579, file: !1579, line: 235, type: !11122, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11160)
!11160 = !{!11161, !11162}
!11161 = !DILocalVariable(name: "dev", arg: 1, scope: !11159, file: !1579, line: 235, type: !1452)
!11162 = !DILocalVariable(name: "config", scope: !11159, file: !1579, line: 237, type: !10434)
!11163 = !DILocation(line: 0, scope: !11159)
!11164 = !DILocation(line: 237, column: 48, scope: !11159)
!11165 = !DILocation(line: 239, column: 39, scope: !11159)
!11166 = !DILocation(line: 239, column: 9, scope: !11159)
!11167 = !DILocation(line: 239, column: 2, scope: !11159)
!11168 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1579, file: !1579, line: 355, type: !11169, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11171)
!11169 = !DISubroutineType(types: !11170)
!11170 = !{!1425, !121, !121}
!11171 = !{!11172, !11173}
!11172 = !DILocalVariable(name: "db", arg: 1, scope: !11168, file: !1579, line: 355, type: !121)
!11173 = !DILocalVariable(name: "p", arg: 2, scope: !11168, file: !1579, line: 356, type: !121)
!11174 = !DILocation(line: 0, scope: !11168)
!11175 = !DILocation(line: 358, column: 2, scope: !11168)
!11176 = !DILocation(line: 384, column: 1, scope: !11168)
!11177 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1579, file: !1579, line: 250, type: !11122, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11178)
!11178 = !{!11179, !11180}
!11179 = !DILocalVariable(name: "dev", arg: 1, scope: !11177, file: !1579, line: 250, type: !1452)
!11180 = !DILocalVariable(name: "config", scope: !11177, file: !1579, line: 252, type: !10434)
!11181 = !DILocation(line: 0, scope: !11177)
!11182 = !DILocation(line: 252, column: 48, scope: !11177)
!11183 = !DILocation(line: 254, column: 40, scope: !11177)
!11184 = !DILocation(line: 254, column: 9, scope: !11177)
!11185 = !DILocation(line: 254, column: 2, scope: !11177)
!11186 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1579, file: !1579, line: 409, type: !11187, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11189)
!11187 = !DISubroutineType(types: !11188)
!11188 = !{!1438, !121}
!11189 = !{!11190}
!11190 = !DILocalVariable(name: "fc", arg: 1, scope: !11186, file: !1579, line: 409, type: !121)
!11191 = !DILocation(line: 0, scope: !11186)
!11192 = !DILocation(line: 411, column: 9, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11186, file: !1579, line: 411, column: 6)
!11194 = !DILocation(line: 416, column: 1, scope: !11186)
!11195 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10870, file: !10870, line: 967, type: !10871, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11196)
!11196 = !{!11197}
!11197 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11195, file: !10870, line: 967, type: !1523)
!11198 = !DILocation(line: 0, scope: !11195)
!11199 = !DILocation(line: 969, column: 21, scope: !11195)
!11200 = !DILocation(line: 969, column: 3, scope: !11195)
!11201 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10870, file: !10870, line: 601, type: !10871, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11202)
!11202 = !{!11203}
!11203 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11201, file: !10870, line: 601, type: !1523)
!11204 = !DILocation(line: 0, scope: !11201)
!11205 = !DILocation(line: 603, column: 21, scope: !11201)
!11206 = !DILocation(line: 603, column: 3, scope: !11201)
!11207 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10870, file: !10870, line: 820, type: !10871, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11208)
!11208 = !{!11209}
!11209 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11207, file: !10870, line: 820, type: !1523)
!11210 = !DILocation(line: 0, scope: !11207)
!11211 = !DILocation(line: 822, column: 21, scope: !11207)
!11212 = !DILocation(line: 822, column: 3, scope: !11207)
!11213 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10870, file: !10870, line: 547, type: !10871, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11214)
!11214 = !{!11215}
!11215 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11213, file: !10870, line: 547, type: !1523)
!11216 = !DILocation(line: 0, scope: !11213)
!11217 = !DILocation(line: 549, column: 21, scope: !11213)
!11218 = !DILocation(line: 549, column: 3, scope: !11213)
!11219 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1579, file: !1579, line: 257, type: !11220, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11222)
!11220 = !DISubroutineType(types: !11221)
!11221 = !{!121, !1418}
!11222 = !{!11223}
!11223 = !DILocalVariable(name: "parity", arg: 1, scope: !11219, file: !1579, line: 257, type: !1418)
!11224 = !DILocation(line: 0, scope: !11219)
!11225 = !DILocation(line: 259, column: 2, scope: !11219)
!11226 = !DILocation(line: 268, column: 1, scope: !11219)
!11227 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1579, file: !1579, line: 283, type: !11228, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11230)
!11228 = !DISubroutineType(types: !11229)
!11229 = !{!121, !1432}
!11230 = !{!11231}
!11231 = !DILocalVariable(name: "sb", arg: 1, scope: !11227, file: !1579, line: 283, type: !1432)
!11232 = !DILocation(line: 0, scope: !11227)
!11233 = !DILocation(line: 285, column: 2, scope: !11227)
!11234 = !DILocation(line: 0, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11227, file: !1579, line: 285, column: 14)
!11236 = !DILocation(line: 302, column: 1, scope: !11227)
!11237 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1579, file: !1579, line: 325, type: !11238, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11240)
!11238 = !DISubroutineType(types: !11239)
!11239 = !{!121, !1425, !1418}
!11240 = !{!11241, !11242}
!11241 = !DILocalVariable(name: "db", arg: 1, scope: !11237, file: !1579, line: 325, type: !1425)
!11242 = !DILocalVariable(name: "p", arg: 2, scope: !11237, file: !1579, line: 326, type: !1418)
!11243 = !DILocation(line: 0, scope: !11237)
!11244 = !DILocation(line: 328, column: 2, scope: !11237)
!11245 = !DILocation(line: 353, column: 1, scope: !11237)
!11246 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1579, file: !1579, line: 393, type: !11247, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11249)
!11247 = !DISubroutineType(types: !11248)
!11248 = !{!121, !1438}
!11249 = !{!11250}
!11250 = !DILocalVariable(name: "fc", arg: 1, scope: !11246, file: !1579, line: 393, type: !1438)
!11251 = !DILocation(line: 0, scope: !11246)
!11252 = !DILocation(line: 395, column: 9, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11246, file: !1579, line: 395, column: 6)
!11254 = !DILocation(line: 400, column: 1, scope: !11246)
!11255 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10870, file: !10870, line: 424, type: !10901, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11256)
!11256 = !{!11257}
!11257 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11255, file: !10870, line: 424, type: !1523)
!11258 = !DILocation(line: 0, scope: !11255)
!11259 = !DILocation(line: 426, column: 3, scope: !11255)
!11260 = !DILocation(line: 427, column: 1, scope: !11255)
!11261 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1579, file: !1579, line: 197, type: !11262, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11264)
!11262 = !DISubroutineType(types: !11263)
!11263 = !{null, !1452, !121}
!11264 = !{!11265, !11266, !11267}
!11265 = !DILocalVariable(name: "dev", arg: 1, scope: !11261, file: !1579, line: 197, type: !1452)
!11266 = !DILocalVariable(name: "parity", arg: 2, scope: !11261, file: !1579, line: 198, type: !121)
!11267 = !DILocalVariable(name: "config", scope: !11261, file: !1579, line: 200, type: !10434)
!11268 = !DILocation(line: 0, scope: !11261)
!11269 = !DILocation(line: 200, column: 48, scope: !11261)
!11270 = !DILocation(line: 202, column: 29, scope: !11261)
!11271 = !DILocation(line: 202, column: 2, scope: !11261)
!11272 = !DILocation(line: 203, column: 1, scope: !11261)
!11273 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1579, file: !1579, line: 212, type: !11262, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11274)
!11274 = !{!11275, !11276, !11277}
!11275 = !DILocalVariable(name: "dev", arg: 1, scope: !11273, file: !1579, line: 212, type: !1452)
!11276 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11273, file: !1579, line: 213, type: !121)
!11277 = !DILocalVariable(name: "config", scope: !11273, file: !1579, line: 215, type: !10434)
!11278 = !DILocation(line: 0, scope: !11273)
!11279 = !DILocation(line: 215, column: 48, scope: !11273)
!11280 = !DILocation(line: 217, column: 37, scope: !11273)
!11281 = !DILocation(line: 217, column: 2, scope: !11273)
!11282 = !DILocation(line: 218, column: 1, scope: !11273)
!11283 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1579, file: !1579, line: 227, type: !11262, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11284)
!11284 = !{!11285, !11286, !11287}
!11285 = !DILocalVariable(name: "dev", arg: 1, scope: !11283, file: !1579, line: 227, type: !1452)
!11286 = !DILocalVariable(name: "databits", arg: 2, scope: !11283, file: !1579, line: 228, type: !121)
!11287 = !DILocalVariable(name: "config", scope: !11283, file: !1579, line: 230, type: !10434)
!11288 = !DILocation(line: 0, scope: !11283)
!11289 = !DILocation(line: 230, column: 48, scope: !11283)
!11290 = !DILocation(line: 232, column: 32, scope: !11283)
!11291 = !DILocation(line: 232, column: 2, scope: !11283)
!11292 = !DILocation(line: 233, column: 1, scope: !11283)
!11293 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1579, file: !1579, line: 242, type: !11262, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11294)
!11294 = !{!11295, !11296, !11297}
!11295 = !DILocalVariable(name: "dev", arg: 1, scope: !11293, file: !1579, line: 242, type: !1452)
!11296 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11293, file: !1579, line: 243, type: !121)
!11297 = !DILocalVariable(name: "config", scope: !11293, file: !1579, line: 245, type: !10434)
!11298 = !DILocation(line: 0, scope: !11293)
!11299 = !DILocation(line: 245, column: 48, scope: !11293)
!11300 = !DILocation(line: 247, column: 33, scope: !11293)
!11301 = !DILocation(line: 247, column: 2, scope: !11293)
!11302 = !DILocation(line: 248, column: 1, scope: !11293)
!11303 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1579, file: !1579, line: 107, type: !11262, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11304)
!11304 = !{!11305, !11306, !11307, !11308, !11309}
!11305 = !DILocalVariable(name: "dev", arg: 1, scope: !11303, file: !1579, line: 107, type: !1452)
!11306 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11303, file: !1579, line: 107, type: !121)
!11307 = !DILocalVariable(name: "config", scope: !11303, file: !1579, line: 109, type: !10434)
!11308 = !DILocalVariable(name: "data", scope: !11303, file: !1579, line: 110, type: !10557)
!11309 = !DILocalVariable(name: "clock_rate", scope: !11303, file: !1579, line: 112, type: !121)
!11310 = !DILocation(line: 0, scope: !11303)
!11311 = !DILocation(line: 109, column: 48, scope: !11303)
!11312 = !DILocation(line: 110, column: 38, scope: !11303)
!11313 = !DILocation(line: 112, column: 2, scope: !11303)
!11314 = !DILocation(line: 123, column: 36, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !1579, line: 123, column: 7)
!11316 = distinct !DILexicalBlock(scope: !11317, file: !1579, line: 122, column: 9)
!11317 = distinct !DILexicalBlock(scope: !11303, file: !1579, line: 115, column: 6)
!11318 = !DILocation(line: 124, column: 42, scope: !11315)
!11319 = !DILocation(line: 123, column: 7, scope: !11315)
!11320 = !DILocation(line: 125, column: 22, scope: !11315)
!11321 = !DILocation(line: 123, column: 7, scope: !11316)
!11322 = !DILocation(line: 176, column: 36, scope: !11303)
!11323 = !DILocation(line: 176, column: 3, scope: !11303)
!11324 = !DILocation(line: 179, column: 32, scope: !11303)
!11325 = !DILocation(line: 180, column: 10, scope: !11303)
!11326 = !DILocation(line: 179, column: 3, scope: !11303)
!11327 = !DILocation(line: 195, column: 1, scope: !11303)
!11328 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10870, file: !10870, line: 410, type: !10901, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11329)
!11329 = !{!11330}
!11330 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11328, file: !10870, line: 410, type: !1523)
!11331 = !DILocation(line: 0, scope: !11328)
!11332 = !DILocation(line: 412, column: 3, scope: !11328)
!11333 = !DILocation(line: 413, column: 1, scope: !11328)
!11334 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !774, file: !774, line: 216, type: !1556, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11335)
!11335 = !{!11336, !11337, !11338, !11339}
!11336 = !DILocalVariable(name: "dev", arg: 1, scope: !11334, file: !774, line: 216, type: !1452)
!11337 = !DILocalVariable(name: "sys", arg: 2, scope: !11334, file: !774, line: 217, type: !869)
!11338 = !DILocalVariable(name: "rate", arg: 3, scope: !11334, file: !774, line: 218, type: !825)
!11339 = !DILocalVariable(name: "api", scope: !11334, file: !774, line: 220, type: !1534)
!11340 = !DILocation(line: 0, scope: !11334)
!11341 = !DILocation(line: 221, column: 49, scope: !11334)
!11342 = !DILocation(line: 223, column: 11, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11334, file: !774, line: 223, column: 6)
!11344 = !DILocation(line: 223, column: 20, scope: !11343)
!11345 = !DILocation(line: 223, column: 6, scope: !11334)
!11346 = !DILocation(line: 227, column: 9, scope: !11334)
!11347 = !DILocation(line: 227, column: 2, scope: !11334)
!11348 = !DILocation(line: 228, column: 1, scope: !11334)
!11349 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10870, file: !10870, line: 615, type: !11350, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11352)
!11350 = !DISubroutineType(types: !11351)
!11351 = !{null, !1523, !121}
!11352 = !{!11353, !11354}
!11353 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11349, file: !10870, line: 615, type: !1523)
!11354 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11349, file: !10870, line: 615, type: !121)
!11355 = !DILocation(line: 0, scope: !11349)
!11356 = !DILocation(line: 617, column: 3, scope: !11349)
!11357 = !DILocation(line: 618, column: 1, scope: !11349)
!11358 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10870, file: !10870, line: 1020, type: !11359, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11361)
!11359 = !DISubroutineType(types: !11360)
!11360 = !{null, !1523, !121, !121, !121}
!11361 = !{!11362, !11363, !11364, !11365}
!11362 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11358, file: !10870, line: 1020, type: !1523)
!11363 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11358, file: !10870, line: 1020, type: !121)
!11364 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11358, file: !10870, line: 1020, type: !121)
!11365 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11358, file: !10870, line: 1021, type: !121)
!11366 = !DILocation(line: 0, scope: !11358)
!11367 = !DILocation(line: 1029, column: 30, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !10870, line: 1028, column: 3)
!11369 = distinct !DILexicalBlock(scope: !11358, file: !10870, line: 1023, column: 7)
!11370 = !DILocation(line: 1029, column: 19, scope: !11368)
!11371 = !DILocation(line: 1029, column: 13, scope: !11368)
!11372 = !DILocation(line: 1029, column: 17, scope: !11368)
!11373 = !DILocation(line: 1031, column: 1, scope: !11358)
!11374 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10870, file: !10870, line: 949, type: !11350, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11375)
!11375 = !{!11376, !11377}
!11376 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11374, file: !10870, line: 949, type: !1523)
!11377 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11374, file: !10870, line: 949, type: !121)
!11378 = !DILocation(line: 0, scope: !11374)
!11379 = !DILocation(line: 951, column: 3, scope: !11374)
!11380 = !DILocation(line: 952, column: 1, scope: !11374)
!11381 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10870, file: !10870, line: 588, type: !11350, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11382)
!11382 = !{!11383, !11384}
!11383 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11381, file: !10870, line: 588, type: !1523)
!11384 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11381, file: !10870, line: 588, type: !121)
!11385 = !DILocation(line: 0, scope: !11381)
!11386 = !DILocation(line: 590, column: 3, scope: !11381)
!11387 = !DILocation(line: 591, column: 1, scope: !11381)
!11388 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10870, file: !10870, line: 805, type: !11350, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11389)
!11389 = !{!11390, !11391}
!11390 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11388, file: !10870, line: 805, type: !1523)
!11391 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11388, file: !10870, line: 805, type: !121)
!11392 = !DILocation(line: 0, scope: !11388)
!11393 = !DILocation(line: 807, column: 3, scope: !11388)
!11394 = !DILocation(line: 808, column: 1, scope: !11388)
!11395 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10870, file: !10870, line: 532, type: !11350, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11396)
!11396 = !{!11397, !11398}
!11397 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11395, file: !10870, line: 532, type: !1523)
!11398 = !DILocalVariable(name: "Parity", arg: 2, scope: !11395, file: !10870, line: 532, type: !121)
!11399 = !DILocation(line: 0, scope: !11395)
!11400 = !DILocation(line: 534, column: 3, scope: !11395)
!11401 = !DILocation(line: 535, column: 1, scope: !11395)
!11402 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10870, file: !10870, line: 1737, type: !10871, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11403)
!11403 = !{!11404}
!11404 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11402, file: !10870, line: 1737, type: !1523)
!11405 = !DILocation(line: 0, scope: !11402)
!11406 = !DILocation(line: 1739, column: 11, scope: !11402)
!11407 = !DILocation(line: 1739, column: 3, scope: !11402)
!11408 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10870, file: !10870, line: 1748, type: !10871, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11409)
!11409 = !{!11410}
!11410 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11408, file: !10870, line: 1748, type: !1523)
!11411 = !DILocation(line: 0, scope: !11408)
!11412 = !DILocation(line: 1750, column: 11, scope: !11408)
!11413 = !DILocation(line: 1750, column: 45, scope: !11408)
!11414 = !DILocation(line: 1750, column: 3, scope: !11408)
!11415 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10870, file: !10870, line: 1827, type: !10871, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11416)
!11416 = !{!11417}
!11417 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11415, file: !10870, line: 1827, type: !1523)
!11418 = !DILocation(line: 0, scope: !11415)
!11419 = !DILocation(line: 1829, column: 11, scope: !11415)
!11420 = !DILocation(line: 1829, column: 46, scope: !11415)
!11421 = !DILocation(line: 1829, column: 3, scope: !11415)
!11422 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10870, file: !10870, line: 1992, type: !10901, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11423)
!11423 = !{!11424}
!11424 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11422, file: !10870, line: 1992, type: !1523)
!11425 = !DILocation(line: 0, scope: !11422)
!11426 = !DILocation(line: 1994, column: 3, scope: !11422)
!11427 = !DILocation(line: 1995, column: 1, scope: !11422)
!11428 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10870, file: !10870, line: 1877, type: !10901, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11429)
!11429 = !{!11430, !11431}
!11430 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11428, file: !10870, line: 1877, type: !1523)
!11431 = !DILocalVariable(name: "tmpreg", scope: !11428, file: !10870, line: 1879, type: !120)
!11432 = !DILocation(line: 0, scope: !11428)
!11433 = !DILocation(line: 1879, column: 3, scope: !11428)
!11434 = !DILocation(line: 1879, column: 17, scope: !11428)
!11435 = !DILocation(line: 1880, column: 20, scope: !11428)
!11436 = !DILocation(line: 1880, column: 10, scope: !11428)
!11437 = !DILocation(line: 1881, column: 10, scope: !11428)
!11438 = !DILocation(line: 1882, column: 20, scope: !11428)
!11439 = !DILocation(line: 1882, column: 10, scope: !11428)
!11440 = !DILocation(line: 1883, column: 10, scope: !11428)
!11441 = !DILocation(line: 1884, column: 1, scope: !11428)
!11442 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10870, file: !10870, line: 1896, type: !10901, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11443)
!11443 = !{!11444, !11445}
!11444 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11442, file: !10870, line: 1896, type: !1523)
!11445 = !DILocalVariable(name: "tmpreg", scope: !11442, file: !10870, line: 1898, type: !120)
!11446 = !DILocation(line: 0, scope: !11442)
!11447 = !DILocation(line: 1898, column: 3, scope: !11442)
!11448 = !DILocation(line: 1898, column: 17, scope: !11442)
!11449 = !DILocation(line: 1899, column: 20, scope: !11442)
!11450 = !DILocation(line: 1899, column: 10, scope: !11442)
!11451 = !DILocation(line: 1900, column: 10, scope: !11442)
!11452 = !DILocation(line: 1901, column: 20, scope: !11442)
!11453 = !DILocation(line: 1901, column: 10, scope: !11442)
!11454 = !DILocation(line: 1902, column: 10, scope: !11442)
!11455 = !DILocation(line: 1903, column: 1, scope: !11442)
!11456 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10870, file: !10870, line: 1915, type: !10901, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11457)
!11457 = !{!11458, !11459}
!11458 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11456, file: !10870, line: 1915, type: !1523)
!11459 = !DILocalVariable(name: "tmpreg", scope: !11456, file: !10870, line: 1917, type: !120)
!11460 = !DILocation(line: 0, scope: !11456)
!11461 = !DILocation(line: 1917, column: 3, scope: !11456)
!11462 = !DILocation(line: 1917, column: 17, scope: !11456)
!11463 = !DILocation(line: 1918, column: 20, scope: !11456)
!11464 = !DILocation(line: 1918, column: 10, scope: !11456)
!11465 = !DILocation(line: 1919, column: 10, scope: !11456)
!11466 = !DILocation(line: 1920, column: 20, scope: !11456)
!11467 = !DILocation(line: 1920, column: 10, scope: !11456)
!11468 = !DILocation(line: 1921, column: 10, scope: !11456)
!11469 = !DILocation(line: 1922, column: 1, scope: !11456)
!11470 = !DILocation(line: 0, scope: !1633)
!11471 = !DILocation(line: 1914, column: 1, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !1633, file: !1579, line: 1914, column: 1)
!11473 = !DILocation(line: 1914, column: 1, scope: !1633)
!11474 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1579, file: !1579, line: 987, type: !1503, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11475)
!11475 = !{!11476, !11477}
!11476 = !DILocalVariable(name: "dev", arg: 1, scope: !11474, file: !1579, line: 987, type: !1452)
!11477 = !DILocalVariable(name: "data", scope: !11474, file: !1579, line: 989, type: !10557)
!11478 = !DILocation(line: 0, scope: !11474)
!11479 = !DILocation(line: 989, column: 38, scope: !11474)
!11480 = !DILocation(line: 1014, column: 12, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11474, file: !1579, line: 1014, column: 6)
!11482 = !DILocation(line: 1014, column: 6, scope: !11481)
!11483 = !DILocation(line: 1014, column: 6, scope: !11474)
!11484 = !DILocation(line: 1015, column: 28, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11481, file: !1579, line: 1014, column: 21)
!11486 = !DILocation(line: 1015, column: 3, scope: !11485)
!11487 = !DILocation(line: 1016, column: 2, scope: !11485)
!11488 = !DILocation(line: 1059, column: 1, scope: !11474)
!11489 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1579, file: !1579, line: 1583, type: !1473, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11490)
!11490 = !{!11491, !11492, !11493, !11494, !11495, !11496}
!11491 = !DILocalVariable(name: "dev", arg: 1, scope: !11489, file: !1579, line: 1583, type: !1452)
!11492 = !DILocalVariable(name: "config", scope: !11489, file: !1579, line: 1585, type: !10434)
!11493 = !DILocalVariable(name: "data", scope: !11489, file: !1579, line: 1586, type: !10557)
!11494 = !DILocalVariable(name: "ll_parity", scope: !11489, file: !1579, line: 1587, type: !121)
!11495 = !DILocalVariable(name: "ll_datawidth", scope: !11489, file: !1579, line: 1588, type: !121)
!11496 = !DILocalVariable(name: "err", scope: !11489, file: !1579, line: 1589, type: !103)
!11497 = !DILocation(line: 0, scope: !11489)
!11498 = !DILocation(line: 1585, column: 48, scope: !11489)
!11499 = !DILocation(line: 1586, column: 38, scope: !11489)
!11500 = !DILocation(line: 1591, column: 2, scope: !11489)
!11501 = !DILocation(line: 1593, column: 29, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11489, file: !1579, line: 1593, column: 6)
!11503 = !DILocation(line: 1593, column: 7, scope: !11502)
!11504 = !DILocation(line: 1593, column: 6, scope: !11489)
!11505 = !DILocation(line: 1599, column: 31, scope: !11489)
!11506 = !DILocation(line: 1599, column: 71, scope: !11489)
!11507 = !DILocation(line: 1599, column: 8, scope: !11489)
!11508 = !DILocation(line: 1600, column: 10, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11489, file: !1579, line: 1600, column: 6)
!11510 = !DILocation(line: 1600, column: 6, scope: !11489)
!11511 = !DILocation(line: 1616, column: 36, scope: !11489)
!11512 = !DILocation(line: 1616, column: 8, scope: !11489)
!11513 = !DILocation(line: 1617, column: 10, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11489, file: !1579, line: 1617, column: 6)
!11515 = !DILocation(line: 1617, column: 6, scope: !11489)
!11516 = !DILocation(line: 1621, column: 27, scope: !11489)
!11517 = !DILocation(line: 1621, column: 2, scope: !11489)
!11518 = !DILocation(line: 1624, column: 40, scope: !11489)
!11519 = !DILocation(line: 1624, column: 2, scope: !11489)
!11520 = !DILocation(line: 1630, column: 14, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11489, file: !1579, line: 1630, column: 6)
!11522 = !DILocation(line: 1630, column: 6, scope: !11489)
!11523 = !DILocation(line: 1638, column: 2, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11525, file: !1579, line: 1634, column: 34)
!11525 = distinct !DILexicalBlock(scope: !11521, file: !1579, line: 1634, column: 13)
!11526 = !DILocation(line: 0, scope: !11521)
!11527 = !DILocation(line: 1649, column: 35, scope: !11489)
!11528 = !DILocation(line: 1649, column: 2, scope: !11489)
!11529 = !DILocation(line: 1654, column: 14, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11489, file: !1579, line: 1654, column: 6)
!11531 = !DILocation(line: 1654, column: 6, scope: !11489)
!11532 = !DILocation(line: 1655, column: 3, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11530, file: !1579, line: 1654, column: 31)
!11534 = !DILocation(line: 1656, column: 2, scope: !11533)
!11535 = !DILocation(line: 1659, column: 37, scope: !11489)
!11536 = !DILocation(line: 1659, column: 2, scope: !11489)
!11537 = !DILocation(line: 1662, column: 14, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11489, file: !1579, line: 1662, column: 6)
!11539 = !DILocation(line: 1662, column: 6, scope: !11489)
!11540 = !DILocation(line: 1663, column: 37, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11538, file: !1579, line: 1662, column: 27)
!11542 = !DILocation(line: 1663, column: 3, scope: !11541)
!11543 = !DILocation(line: 1664, column: 2, scope: !11541)
!11544 = !DILocation(line: 1684, column: 26, scope: !11489)
!11545 = !DILocation(line: 1684, column: 2, scope: !11489)
!11546 = !DILocation(line: 1701, column: 10, scope: !11489)
!11547 = !DILocation(line: 1701, column: 2, scope: !11489)
!11548 = !DILocation(line: 1722, column: 2, scope: !11489)
!11549 = !DILocation(line: 1724, column: 1, scope: !11489)
!11550 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1579, file: !1579, line: 651, type: !1503, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11551)
!11551 = !{!11552, !11553, !11554}
!11552 = !DILocalVariable(name: "dev", arg: 1, scope: !11550, file: !1579, line: 651, type: !1452)
!11553 = !DILocalVariable(name: "data", scope: !11550, file: !1579, line: 653, type: !10557)
!11554 = !DILocalVariable(name: "clk", scope: !11550, file: !1579, line: 654, type: !11555)
!11555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1452)
!11556 = !DILocation(line: 0, scope: !11550)
!11557 = !DILocation(line: 653, column: 38, scope: !11550)
!11558 = !DILocation(line: 656, column: 8, scope: !11550)
!11559 = !DILocation(line: 656, column: 14, scope: !11550)
!11560 = !DILocation(line: 657, column: 1, scope: !11550)
!11561 = distinct !DISubprogram(name: "device_is_ready", scope: !6631, file: !6631, line: 47, type: !11562, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11564)
!11562 = !DISubroutineType(types: !11563)
!11563 = !{!157, !1452}
!11564 = !{!11565}
!11565 = !DILocalVariable(name: "dev", arg: 1, scope: !11561, file: !6631, line: 47, type: !1452)
!11566 = !DILocation(line: 0, scope: !11561)
!11567 = !DILocation(line: 55, column: 2, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11561, file: !6631, line: 55, column: 2)
!11569 = !{i64 2154348583}
!11570 = !DILocation(line: 56, column: 9, scope: !11561)
!11571 = !DILocation(line: 56, column: 2, scope: !11561)
!11572 = distinct !DISubprogram(name: "clock_control_on", scope: !774, file: !774, line: 123, type: !1541, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11573)
!11573 = !{!11574, !11575, !11576}
!11574 = !DILocalVariable(name: "dev", arg: 1, scope: !11572, file: !774, line: 123, type: !1452)
!11575 = !DILocalVariable(name: "sys", arg: 2, scope: !11572, file: !774, line: 124, type: !869)
!11576 = !DILocalVariable(name: "api", scope: !11572, file: !774, line: 126, type: !1534)
!11577 = !DILocation(line: 0, scope: !11572)
!11578 = !DILocation(line: 127, column: 49, scope: !11572)
!11579 = !DILocation(line: 129, column: 14, scope: !11572)
!11580 = !DILocation(line: 129, column: 9, scope: !11572)
!11581 = !DILocation(line: 129, column: 2, scope: !11572)
!11582 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1606, file: !1606, line: 342, type: !11583, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11585)
!11583 = !DISubroutineType(types: !11584)
!11584 = !{!103, !1667, !154}
!11585 = !{!11586, !11587, !11588, !11589}
!11586 = !DILocalVariable(name: "config", arg: 1, scope: !11582, file: !1606, line: 342, type: !1667)
!11587 = !DILocalVariable(name: "id", arg: 2, scope: !11582, file: !1606, line: 343, type: !154)
!11588 = !DILocalVariable(name: "ret", scope: !11582, file: !1606, line: 345, type: !103)
!11589 = !DILocalVariable(name: "state", scope: !11582, file: !1606, line: 346, type: !1609)
!11590 = !DILocation(line: 0, scope: !11582)
!11591 = !DILocation(line: 346, column: 2, scope: !11582)
!11592 = !DILocation(line: 348, column: 8, scope: !11582)
!11593 = !DILocation(line: 349, column: 10, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11582, file: !1606, line: 349, column: 6)
!11595 = !DILocation(line: 349, column: 6, scope: !11582)
!11596 = !DILocation(line: 353, column: 44, scope: !11582)
!11597 = !DILocation(line: 353, column: 9, scope: !11582)
!11598 = !DILocation(line: 353, column: 2, scope: !11582)
!11599 = !DILocation(line: 354, column: 1, scope: !11582)
!11600 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10870, file: !10870, line: 497, type: !11350, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11601)
!11601 = !{!11602, !11603, !11604}
!11602 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11600, file: !10870, line: 497, type: !1523)
!11603 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11600, file: !10870, line: 497, type: !121)
!11604 = !DILocalVariable(name: "val", scope: !11605, file: !10870, line: 499, type: !121)
!11605 = distinct !DILexicalBlock(scope: !11600, file: !10870, line: 499, column: 3)
!11606 = !DILocation(line: 0, scope: !11600)
!11607 = !DILocation(line: 499, column: 3, scope: !11605)
!11608 = !DILocation(line: 0, scope: !10910, inlinedAt: !11609)
!11609 = distinct !DILocation(line: 499, column: 3, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11605, file: !10870, line: 499, column: 3)
!11611 = !DILocation(line: 480, column: 4, scope: !10910, inlinedAt: !11609)
!11612 = !DILocation(line: 499, column: 3, scope: !11610)
!11613 = !DILocation(line: 0, scope: !11605)
!11614 = !DILocation(line: 0, scope: !10923, inlinedAt: !11615)
!11615 = distinct !DILocation(line: 499, column: 3, scope: !11605)
!11616 = !DILocation(line: 531, column: 4, scope: !10923, inlinedAt: !11615)
!11617 = distinct !{!11617, !11607, !11607}
!11618 = !DILocation(line: 500, column: 1, scope: !11600)
!11619 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10870, file: !10870, line: 850, type: !11359, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11620)
!11620 = !{!11621, !11622, !11623, !11624}
!11621 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11619, file: !10870, line: 850, type: !1523)
!11622 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11619, file: !10870, line: 850, type: !121)
!11623 = !DILocalVariable(name: "Parity", arg: 3, scope: !11619, file: !10870, line: 850, type: !121)
!11624 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11619, file: !10870, line: 851, type: !121)
!11625 = !DILocation(line: 0, scope: !11619)
!11626 = !DILocation(line: 853, column: 3, scope: !11619)
!11627 = !DILocation(line: 854, column: 3, scope: !11619)
!11628 = !DILocation(line: 855, column: 1, scope: !11619)
!11629 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10870, file: !10870, line: 1337, type: !10901, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11630)
!11630 = !{!11631}
!11631 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11629, file: !10870, line: 1337, type: !1523)
!11632 = !DILocation(line: 0, scope: !11629)
!11633 = !DILocation(line: 1339, column: 3, scope: !11629)
!11634 = !DILocation(line: 1340, column: 1, scope: !11629)
!11635 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1606, file: !1606, line: 316, type: !11636, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11638)
!11636 = !DISubroutineType(types: !11637)
!11637 = !{!103, !1667, !1609}
!11638 = !{!11639, !11640, !11641}
!11639 = !DILocalVariable(name: "config", arg: 1, scope: !11635, file: !1606, line: 317, type: !1667)
!11640 = !DILocalVariable(name: "state", arg: 2, scope: !11635, file: !1606, line: 318, type: !1609)
!11641 = !DILocalVariable(name: "reg", scope: !11635, file: !1606, line: 320, type: !22)
!11642 = !DILocation(line: 0, scope: !11635)
!11643 = !DILocation(line: 329, column: 39, scope: !11635)
!11644 = !DILocation(line: 329, column: 52, scope: !11635)
!11645 = !DILocation(line: 329, column: 9, scope: !11635)
!11646 = !DILocation(line: 329, column: 2, scope: !11635)
!11647 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !11562, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1408, retainedNodes: !11648)
!11648 = !{!11649}
!11649 = !DILocalVariable(name: "dev", arg: 1, scope: !11647, file: !141, line: 730, type: !1452)
!11650 = !DILocation(line: 0, scope: !11647)
!11651 = !DILocation(line: 732, column: 9, scope: !11647)
!11652 = !DILocation(line: 732, column: 2, scope: !11647)
!11653 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1750, file: !1750, line: 270, type: !1756, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !11654)
!11654 = !{!11655}
!11655 = !DILocalVariable(name: "dev", arg: 1, scope: !11653, file: !1750, line: 270, type: !1758)
!11656 = !DILocation(line: 0, scope: !11653)
!11657 = !DILocation(line: 274, column: 2, scope: !11653)
!11658 = !DILocation(line: 275, column: 12, scope: !11653)
!11659 = !DILocation(line: 276, column: 15, scope: !11653)
!11660 = !DILocation(line: 277, column: 16, scope: !11653)
!11661 = !DILocation(line: 278, column: 15, scope: !11653)
!11662 = !DILocation(line: 279, column: 16, scope: !11653)
!11663 = !DILocation(line: 282, column: 2, scope: !11653)
!11664 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6824, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !11665)
!11665 = !{!11666, !11667}
!11666 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11664, file: !495, line: 1814, type: !730)
!11667 = !DILocalVariable(name: "priority", arg: 2, scope: !11664, file: !495, line: 1814, type: !121)
!11668 = !DILocation(line: 0, scope: !11664)
!11669 = !DILocation(line: 1822, column: 46, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !495, line: 1821, column: 3)
!11671 = distinct !DILexicalBlock(scope: !11664, file: !495, line: 1816, column: 7)
!11672 = !DILocation(line: 1824, column: 1, scope: !11664)
!11673 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1750, file: !1750, line: 118, type: !6727, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !11674)
!11674 = !{!11675, !11676}
!11675 = !DILocalVariable(name: "arg", arg: 1, scope: !11673, file: !1750, line: 118, type: !102)
!11676 = !DILocalVariable(name: "dticks", scope: !11673, file: !1750, line: 121, type: !121)
!11677 = !DILocation(line: 0, scope: !11673)
!11678 = !DILocation(line: 124, column: 2, scope: !11673)
!11679 = !DILocation(line: 129, column: 17, scope: !11673)
!11680 = !DILocation(line: 129, column: 14, scope: !11673)
!11681 = !DILocation(line: 130, column: 15, scope: !11673)
!11682 = !DILocation(line: 145, column: 27, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11684, file: !1750, line: 132, column: 16)
!11684 = distinct !DILexicalBlock(scope: !11673, file: !1750, line: 132, column: 6)
!11685 = !DILocation(line: 145, column: 25, scope: !11683)
!11686 = !DILocation(line: 145, column: 45, scope: !11683)
!11687 = !DILocation(line: 146, column: 30, scope: !11683)
!11688 = !DILocation(line: 146, column: 20, scope: !11683)
!11689 = !DILocation(line: 147, column: 3, scope: !11683)
!11690 = !DILocation(line: 151, column: 2, scope: !11673)
!11691 = !DILocation(line: 152, column: 1, scope: !11673)
!11692 = distinct !DISubprogram(name: "elapsed", scope: !1750, file: !1750, line: 85, type: !6871, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !11693)
!11693 = !{!11694, !11695, !11696}
!11694 = !DILocalVariable(name: "val1", scope: !11692, file: !1750, line: 87, type: !121)
!11695 = !DILocalVariable(name: "ctrl", scope: !11692, file: !1750, line: 88, type: !121)
!11696 = !DILocalVariable(name: "val2", scope: !11692, file: !1750, line: 89, type: !121)
!11697 = !DILocation(line: 87, column: 27, scope: !11692)
!11698 = !DILocation(line: 0, scope: !11692)
!11699 = !DILocation(line: 88, column: 27, scope: !11692)
!11700 = !DILocation(line: 89, column: 27, scope: !11692)
!11701 = !DILocation(line: 105, column: 12, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11692, file: !1750, line: 105, column: 6)
!11703 = !DILocation(line: 106, column: 6, scope: !11702)
!11704 = !DILocation(line: 107, column: 16, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11702, file: !1750, line: 106, column: 24)
!11706 = !DILocation(line: 111, column: 18, scope: !11705)
!11707 = !DILocation(line: 112, column: 2, scope: !11705)
!11708 = !DILocation(line: 114, column: 20, scope: !11692)
!11709 = !DILocation(line: 114, column: 30, scope: !11692)
!11710 = !DILocation(line: 114, column: 28, scope: !11692)
!11711 = !DILocation(line: 114, column: 2, scope: !11692)
!11712 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1750, file: !1750, line: 154, type: !11713, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !11715)
!11713 = !DISubroutineType(types: !11714)
!11714 = !{null, !332, !157}
!11715 = !{!11716, !11717, !11718, !11719, !11720, !11721, !11722, !11727, !11728}
!11716 = !DILocalVariable(name: "ticks", arg: 1, scope: !11712, file: !1750, line: 154, type: !332)
!11717 = !DILocalVariable(name: "idle", arg: 2, scope: !11712, file: !1750, line: 154, type: !157)
!11718 = !DILocalVariable(name: "delay", scope: !11712, file: !1750, line: 169, type: !121)
!11719 = !DILocalVariable(name: "val1", scope: !11712, file: !1750, line: 170, type: !121)
!11720 = !DILocalVariable(name: "val2", scope: !11712, file: !1750, line: 170, type: !121)
!11721 = !DILocalVariable(name: "last_load_", scope: !11712, file: !1750, line: 171, type: !121)
!11722 = !DILocalVariable(name: "key", scope: !11712, file: !1750, line: 176, type: !11723)
!11723 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !11724)
!11724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !11725)
!11725 = !{!11726}
!11726 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11724, file: !460, line: 33, baseType: !103, size: 32)
!11727 = !DILocalVariable(name: "pending", scope: !11712, file: !1750, line: 178, type: !121)
!11728 = !DILocalVariable(name: "unannounced", scope: !11712, file: !1750, line: 185, type: !121)
!11729 = !DILocation(line: 0, scope: !11712)
!11730 = !DILocation(line: 162, column: 49, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11712, file: !1750, line: 162, column: 6)
!11732 = !DILocation(line: 163, column: 17, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11731, file: !1750, line: 162, column: 78)
!11734 = !DILocation(line: 164, column: 13, scope: !11733)
!11735 = !DILocation(line: 165, column: 3, scope: !11733)
!11736 = !DILocation(line: 171, column: 24, scope: !11712)
!11737 = !DILocation(line: 173, column: 10, scope: !11712)
!11738 = !DILocation(line: 174, column: 10, scope: !11712)
!11739 = !DILocalVariable(name: "l", arg: 1, scope: !11740, file: !460, line: 136, type: !11743)
!11740 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !11741, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !11744)
!11741 = !DISubroutineType(types: !11742)
!11742 = !{!11723, !11743}
!11743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!11744 = !{!11739, !11745}
!11745 = !DILocalVariable(name: "k", scope: !11740, file: !460, line: 139, type: !11723)
!11746 = !DILocation(line: 0, scope: !11740, inlinedAt: !11747)
!11747 = distinct !DILocation(line: 176, column: 25, scope: !11712)
!11748 = !DILocation(line: 55, column: 2, scope: !11749, inlinedAt: !11753)
!11749 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5770, file: !5770, line: 42, type: !5771, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !11750)
!11750 = !{!11751, !11752}
!11751 = !DILocalVariable(name: "key", scope: !11749, file: !5770, line: 44, type: !32)
!11752 = !DILocalVariable(name: "tmp", scope: !11749, file: !5770, line: 53, type: !32)
!11753 = distinct !DILocation(line: 145, column: 10, scope: !11740, inlinedAt: !11747)
!11754 = !{i64 1921224}
!11755 = !DILocation(line: 0, scope: !11749, inlinedAt: !11753)
!11756 = !DILocation(line: 178, column: 21, scope: !11712)
!11757 = !DILocation(line: 180, column: 18, scope: !11712)
!11758 = !DILocation(line: 182, column: 14, scope: !11712)
!11759 = !DILocation(line: 183, column: 15, scope: !11712)
!11760 = !DILocation(line: 185, column: 39, scope: !11712)
!11761 = !DILocation(line: 185, column: 37, scope: !11712)
!11762 = !DILocation(line: 187, column: 27, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11712, file: !1750, line: 187, column: 6)
!11764 = !DILocation(line: 187, column: 6, scope: !11712)
!11765 = !DILocation(line: 202, column: 27, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11763, file: !1750, line: 195, column: 9)
!11767 = !DILocation(line: 202, column: 48, scope: !11766)
!11768 = !DILocation(line: 203, column: 9, scope: !11766)
!11769 = !DILocation(line: 204, column: 11, scope: !11766)
!11770 = !DILocation(line: 205, column: 13, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11766, file: !1750, line: 205, column: 7)
!11772 = !DILocation(line: 205, column: 7, scope: !11766)
!11773 = !DILocation(line: 0, scope: !11763)
!11774 = !DILocation(line: 212, column: 18, scope: !11712)
!11775 = !DILocation(line: 214, column: 28, scope: !11712)
!11776 = !DILocation(line: 214, column: 16, scope: !11712)
!11777 = !DILocation(line: 215, column: 15, scope: !11712)
!11778 = !DILocation(line: 227, column: 11, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11712, file: !1750, line: 227, column: 6)
!11780 = !DILocation(line: 227, column: 6, scope: !11712)
!11781 = !DILocation(line: 228, column: 15, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11779, file: !1750, line: 227, column: 19)
!11783 = !DILocation(line: 228, column: 38, scope: !11782)
!11784 = !DILocation(line: 228, column: 24, scope: !11782)
!11785 = !DILocation(line: 229, column: 2, scope: !11782)
!11786 = !DILocation(line: 230, column: 24, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11779, file: !1750, line: 229, column: 9)
!11788 = !DILocation(line: 230, column: 15, scope: !11787)
!11789 = !DILocation(line: 0, scope: !11779)
!11790 = !DILocalVariable(name: "key", arg: 2, scope: !11791, file: !460, line: 190, type: !11723)
!11791 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !11792, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !11794)
!11792 = !DISubroutineType(types: !11793)
!11793 = !{null, !11743, !11723}
!11794 = !{!11795, !11790}
!11795 = !DILocalVariable(name: "l", arg: 1, scope: !11791, file: !460, line: 189, type: !11743)
!11796 = !DILocation(line: 0, scope: !11791, inlinedAt: !11797)
!11797 = distinct !DILocation(line: 232, column: 2, scope: !11712)
!11798 = !DILocalVariable(name: "key", arg: 1, scope: !11799, file: !5770, line: 84, type: !32)
!11799 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5770, file: !5770, line: 84, type: !5781, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !11800)
!11800 = !{!11798}
!11801 = !DILocation(line: 0, scope: !11799, inlinedAt: !11802)
!11802 = distinct !DILocation(line: 215, column: 2, scope: !11791, inlinedAt: !11797)
!11803 = !DILocation(line: 95, column: 2, scope: !11799, inlinedAt: !11802)
!11804 = !{i64 1922041}
!11805 = !DILocation(line: 234, column: 1, scope: !11712)
!11806 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1750, file: !1750, line: 236, type: !6871, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !11807)
!11807 = !{!11808, !11809}
!11808 = !DILocalVariable(name: "key", scope: !11806, file: !1750, line: 242, type: !11723)
!11809 = !DILocalVariable(name: "cyc", scope: !11806, file: !1750, line: 243, type: !121)
!11810 = !DILocation(line: 0, scope: !11740, inlinedAt: !11811)
!11811 = distinct !DILocation(line: 242, column: 25, scope: !11806)
!11812 = !DILocation(line: 55, column: 2, scope: !11749, inlinedAt: !11813)
!11813 = distinct !DILocation(line: 145, column: 10, scope: !11740, inlinedAt: !11811)
!11814 = !DILocation(line: 0, scope: !11749, inlinedAt: !11813)
!11815 = !DILocation(line: 0, scope: !11806)
!11816 = !DILocation(line: 243, column: 17, scope: !11806)
!11817 = !DILocation(line: 243, column: 29, scope: !11806)
!11818 = !DILocation(line: 243, column: 27, scope: !11806)
!11819 = !DILocation(line: 243, column: 43, scope: !11806)
!11820 = !DILocation(line: 243, column: 41, scope: !11806)
!11821 = !DILocation(line: 0, scope: !11791, inlinedAt: !11822)
!11822 = distinct !DILocation(line: 245, column: 2, scope: !11806)
!11823 = !DILocation(line: 0, scope: !11799, inlinedAt: !11824)
!11824 = distinct !DILocation(line: 215, column: 2, scope: !11791, inlinedAt: !11822)
!11825 = !DILocation(line: 95, column: 2, scope: !11799, inlinedAt: !11824)
!11826 = !DILocation(line: 246, column: 13, scope: !11806)
!11827 = !DILocation(line: 246, column: 2, scope: !11806)
!11828 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1750, file: !1750, line: 249, type: !6871, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !11829)
!11829 = !{!11830, !11831}
!11830 = !DILocalVariable(name: "key", scope: !11828, file: !1750, line: 251, type: !11723)
!11831 = !DILocalVariable(name: "ret", scope: !11828, file: !1750, line: 252, type: !121)
!11832 = !DILocation(line: 0, scope: !11740, inlinedAt: !11833)
!11833 = distinct !DILocation(line: 251, column: 25, scope: !11828)
!11834 = !DILocation(line: 55, column: 2, scope: !11749, inlinedAt: !11835)
!11835 = distinct !DILocation(line: 145, column: 10, scope: !11740, inlinedAt: !11833)
!11836 = !DILocation(line: 0, scope: !11749, inlinedAt: !11835)
!11837 = !DILocation(line: 0, scope: !11828)
!11838 = !DILocation(line: 252, column: 17, scope: !11828)
!11839 = !DILocation(line: 252, column: 29, scope: !11828)
!11840 = !DILocation(line: 252, column: 27, scope: !11828)
!11841 = !DILocation(line: 0, scope: !11791, inlinedAt: !11842)
!11842 = distinct !DILocation(line: 254, column: 2, scope: !11828)
!11843 = !DILocation(line: 0, scope: !11799, inlinedAt: !11844)
!11844 = distinct !DILocation(line: 215, column: 2, scope: !11791, inlinedAt: !11842)
!11845 = !DILocation(line: 95, column: 2, scope: !11799, inlinedAt: !11844)
!11846 = !DILocation(line: 255, column: 2, scope: !11828)
!11847 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1750, file: !1750, line: 258, type: !3220, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !461)
!11848 = !DILocation(line: 260, column: 6, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11847, file: !1750, line: 260, column: 6)
!11850 = !DILocation(line: 260, column: 16, scope: !11849)
!11851 = !DILocation(line: 260, column: 6, scope: !11847)
!11852 = !DILocation(line: 261, column: 17, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11849, file: !1750, line: 260, column: 34)
!11854 = !DILocation(line: 262, column: 2, scope: !11853)
!11855 = !DILocation(line: 263, column: 1, scope: !11847)
!11856 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1750, file: !1750, line: 265, type: !3220, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !461)
!11857 = !DILocation(line: 267, column: 16, scope: !11856)
!11858 = !DILocation(line: 268, column: 1, scope: !11856)
!11859 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11860, file: !11860, line: 9, type: !11861, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11884)
!11860 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11861 = !DISubroutineType(types: !11862)
!11862 = !{!103, !11863, !154, !11883}
!11863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11864, size: 32)
!11864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11865)
!11865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1606, line: 60, size: 64, elements: !11866)
!11866 = !{!11867, !11882}
!11867 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11865, file: !1606, line: 69, baseType: !11868, size: 32)
!11868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11869, size: 32)
!11869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11870)
!11870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1606, line: 50, size: 64, elements: !11871)
!11871 = !{!11872, !11880, !11881}
!11872 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11870, file: !1606, line: 52, baseType: !11873, size: 32)
!11873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11874, size: 32)
!11874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11875)
!11875 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1617, line: 37, baseType: !11876)
!11876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1617, line: 32, size: 64, elements: !11877)
!11877 = !{!11878, !11879}
!11878 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11876, file: !1617, line: 34, baseType: !121, size: 32)
!11879 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11876, file: !1617, line: 36, baseType: !121, size: 32, offset: 32)
!11880 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11870, file: !1606, line: 54, baseType: !154, size: 8, offset: 32)
!11881 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11870, file: !1606, line: 56, baseType: !154, size: 8, offset: 40)
!11882 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11865, file: !1606, line: 71, baseType: !154, size: 8, offset: 32)
!11883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11868, size: 32)
!11884 = !{!11885, !11886, !11887}
!11885 = !DILocalVariable(name: "config", arg: 1, scope: !11859, file: !11860, line: 9, type: !11863)
!11886 = !DILocalVariable(name: "id", arg: 2, scope: !11859, file: !11860, line: 9, type: !154)
!11887 = !DILocalVariable(name: "state", arg: 3, scope: !11859, file: !11860, line: 10, type: !11883)
!11888 = !DILocation(line: 0, scope: !11859)
!11889 = !DILocation(line: 12, column: 20, scope: !11859)
!11890 = !DILocation(line: 13, column: 27, scope: !11859)
!11891 = !DILocation(line: 13, column: 42, scope: !11859)
!11892 = !DILocation(line: 13, column: 19, scope: !11859)
!11893 = !DILocation(line: 13, column: 16, scope: !11859)
!11894 = !DILocation(line: 13, column: 2, scope: !11859)
!11895 = distinct !{!11895, !11894, !11896}
!11896 = !DILocation(line: 19, column: 2, scope: !11859)
!11897 = !DILocation(line: 14, column: 23, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11899, file: !11860, line: 14, column: 7)
!11899 = distinct !DILexicalBlock(scope: !11859, file: !11860, line: 13, column: 54)
!11900 = !DILocation(line: 14, column: 10, scope: !11898)
!11901 = !DILocation(line: 18, column: 11, scope: !11899)
!11902 = !DILocation(line: 14, column: 7, scope: !11899)
!11903 = !DILocation(line: 22, column: 1, scope: !11859)
!11904 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1867, file: !1867, line: 193, type: !11905, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11914)
!11905 = !DISubroutineType(types: !11906)
!11906 = !{!103, !11907, !154, !22}
!11907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11908, size: 32)
!11908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11909)
!11909 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1617, line: 37, baseType: !11910)
!11910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1617, line: 32, size: 64, elements: !11911)
!11911 = !{!11912, !11913}
!11912 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11910, file: !1617, line: 34, baseType: !121, size: 32)
!11913 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11910, file: !1617, line: 36, baseType: !121, size: 32, offset: 32)
!11914 = !{!11915, !11916, !11917, !11918, !11919, !11920, !11921, !11922, !11924}
!11915 = !DILocalVariable(name: "pins", arg: 1, scope: !11904, file: !1867, line: 193, type: !11907)
!11916 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11904, file: !1867, line: 193, type: !154)
!11917 = !DILocalVariable(name: "reg", arg: 3, scope: !11904, file: !1867, line: 194, type: !22)
!11918 = !DILocalVariable(name: "pin", scope: !11904, file: !1867, line: 196, type: !121)
!11919 = !DILocalVariable(name: "mux", scope: !11904, file: !1867, line: 196, type: !121)
!11920 = !DILocalVariable(name: "pin_cgf", scope: !11904, file: !1867, line: 197, type: !121)
!11921 = !DILocalVariable(name: "ret", scope: !11904, file: !1867, line: 198, type: !103)
!11922 = !DILocalVariable(name: "i", scope: !11923, file: !1867, line: 209, type: !154)
!11923 = distinct !DILexicalBlock(scope: !11904, file: !1867, line: 209, column: 2)
!11924 = !DILocalVariable(name: "gpio_out", scope: !11925, file: !1867, line: 239, type: !121)
!11925 = distinct !DILexicalBlock(scope: !11926, file: !1867, line: 238, column: 55)
!11926 = distinct !DILexicalBlock(scope: !11927, file: !1867, line: 238, column: 14)
!11927 = distinct !DILexicalBlock(scope: !11928, file: !1867, line: 236, column: 14)
!11928 = distinct !DILexicalBlock(scope: !11929, file: !1867, line: 234, column: 7)
!11929 = distinct !DILexicalBlock(scope: !11930, file: !1867, line: 209, column: 41)
!11930 = distinct !DILexicalBlock(scope: !11923, file: !1867, line: 209, column: 2)
!11931 = !DILocation(line: 0, scope: !11904)
!11932 = !DILocation(line: 0, scope: !11923)
!11933 = !DILocation(line: 209, column: 25, scope: !11930)
!11934 = !DILocation(line: 209, column: 2, scope: !11923)
!11935 = distinct !{!11935, !11934, !11936}
!11936 = !DILocation(line: 259, column: 2, scope: !11923)
!11937 = !DILocation(line: 210, column: 17, scope: !11929)
!11938 = !DILocation(line: 234, column: 7, scope: !11928)
!11939 = !DILocation(line: 234, column: 33, scope: !11928)
!11940 = !DILocation(line: 234, column: 7, scope: !11929)
!11941 = !DILocation(line: 235, column: 22, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11928, file: !1867, line: 234, column: 49)
!11943 = !DILocation(line: 235, column: 29, scope: !11942)
!11944 = !DILocation(line: 236, column: 3, scope: !11942)
!11945 = !DILocation(line: 236, column: 14, scope: !11928)
!11946 = !DILocation(line: 239, column: 32, scope: !11925)
!11947 = !DILocation(line: 0, scope: !11925)
!11948 = !DILocation(line: 241, column: 8, scope: !11925)
!11949 = !DILocation(line: 246, column: 3, scope: !11925)
!11950 = !DILocation(line: 252, column: 9, scope: !11929)
!11951 = !DILocation(line: 255, column: 9, scope: !11929)
!11952 = !DILocation(line: 256, column: 11, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11929, file: !1867, line: 256, column: 7)
!11954 = !DILocation(line: 209, column: 37, scope: !11930)
!11955 = !DILocation(line: 256, column: 7, scope: !11929)
!11956 = !DILocation(line: 262, column: 1, scope: !11904)
!11957 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1867, file: !1867, line: 176, type: !11958, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11960)
!11958 = !DISubroutineType(types: !11959)
!11959 = !{!103, !121, !121, !121}
!11960 = !{!11961, !11962, !11963, !11964}
!11961 = !DILocalVariable(name: "pin", arg: 1, scope: !11957, file: !1867, line: 176, type: !121)
!11962 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11957, file: !1867, line: 176, type: !121)
!11963 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11957, file: !1867, line: 176, type: !121)
!11964 = !DILocalVariable(name: "port_device", scope: !11957, file: !1867, line: 178, type: !1797)
!11965 = !DILocation(line: 0, scope: !11957)
!11966 = !DILocation(line: 180, column: 22, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11957, file: !1867, line: 180, column: 6)
!11968 = !DILocation(line: 180, column: 6, scope: !11957)
!11969 = !DILocation(line: 180, column: 6, scope: !11967)
!11970 = !DILocation(line: 184, column: 16, scope: !11957)
!11971 = !DILocation(line: 186, column: 19, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11957, file: !1867, line: 186, column: 6)
!11973 = !DILocation(line: 186, column: 28, scope: !11972)
!11974 = !DILocation(line: 186, column: 33, scope: !11972)
!11975 = !DILocation(line: 186, column: 6, scope: !11957)
!11976 = !DILocation(line: 190, column: 43, scope: !11957)
!11977 = !DILocation(line: 190, column: 9, scope: !11957)
!11978 = !DILocation(line: 190, column: 2, scope: !11957)
!11979 = !DILocation(line: 191, column: 1, scope: !11957)
!11980 = distinct !DISubprogram(name: "device_is_ready", scope: !6631, file: !6631, line: 47, type: !11981, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11983)
!11981 = !DISubroutineType(types: !11982)
!11982 = !{!157, !1797}
!11983 = !{!11984}
!11984 = !DILocalVariable(name: "dev", arg: 1, scope: !11980, file: !6631, line: 47, type: !1797)
!11985 = !DILocation(line: 0, scope: !11980)
!11986 = !DILocation(line: 55, column: 2, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11980, file: !6631, line: 55, column: 2)
!11988 = !{i64 2149155233}
!11989 = !DILocation(line: 56, column: 9, scope: !11980)
!11990 = !DILocation(line: 56, column: 2, scope: !11980)
!11991 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !11981, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !11992)
!11992 = !{!11993}
!11993 = !DILocalVariable(name: "dev", arg: 1, scope: !11991, file: !141, line: 730, type: !1797)
!11994 = !DILocation(line: 0, scope: !11991)
!11995 = !DILocation(line: 732, column: 9, scope: !11991)
!11996 = !DILocation(line: 732, column: 2, scope: !11991)
!11997 = distinct !DISubprogram(name: "SystemInit", scope: !1917, file: !1917, line: 167, type: !3220, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !461)
!11998 = !DILocation(line: 182, column: 1, scope: !11997)
!11999 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1917, file: !1917, line: 220, type: !3220, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1875, retainedNodes: !12000)
!12000 = !{!12001, !12002, !12003, !12004, !12005}
!12001 = !DILocalVariable(name: "tmp", scope: !11999, file: !1917, line: 222, type: !121)
!12002 = !DILocalVariable(name: "pllvco", scope: !11999, file: !1917, line: 222, type: !121)
!12003 = !DILocalVariable(name: "pllp", scope: !11999, file: !1917, line: 222, type: !121)
!12004 = !DILocalVariable(name: "pllsource", scope: !11999, file: !1917, line: 222, type: !121)
!12005 = !DILocalVariable(name: "pllm", scope: !11999, file: !1917, line: 222, type: !121)
!12006 = !DILocation(line: 0, scope: !11999)
!12007 = !DILocation(line: 225, column: 14, scope: !11999)
!12008 = !DILocation(line: 225, column: 19, scope: !11999)
!12009 = !DILocation(line: 227, column: 3, scope: !11999)
!12010 = !DILocation(line: 234, column: 7, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !11999, file: !1917, line: 228, column: 3)
!12012 = !DILocation(line: 240, column: 25, scope: !12011)
!12013 = !DILocation(line: 241, column: 19, scope: !12011)
!12014 = !DILocation(line: 241, column: 27, scope: !12011)
!12015 = !DILocation(line: 243, column: 21, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12011, file: !1917, line: 243, column: 11)
!12017 = !DILocation(line: 0, scope: !12016)
!12018 = !DILocation(line: 254, column: 22, scope: !12011)
!12019 = !DILocation(line: 254, column: 62, scope: !12011)
!12020 = !DILocation(line: 255, column: 31, scope: !12011)
!12021 = !DILocation(line: 256, column: 7, scope: !12011)
!12022 = !DILocation(line: 0, scope: !12011)
!12023 = !DILocation(line: 263, column: 30, scope: !11999)
!12024 = !DILocation(line: 263, column: 52, scope: !11999)
!12025 = !DILocation(line: 263, column: 9, scope: !11999)
!12026 = !DILocation(line: 265, column: 19, scope: !11999)
!12027 = !DILocation(line: 266, column: 1, scope: !11999)
!12028 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12029, file: !12029, line: 200, type: !12030, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !461)
!12029 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12030 = !DISubroutineType(types: !12031)
!12031 = !{!12032}
!12032 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3033, line: 44, baseType: !3032)
!12033 = !DILocation(line: 202, column: 3, scope: !12028)
!12034 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12029, file: !12029, line: 219, type: !12035, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !12059)
!12035 = !DISubroutineType(types: !12036)
!12036 = !{!12032, !12037}
!12037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12038, size: 32)
!12038 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12039, line: 70, baseType: !12040)
!12039 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12039, line: 49, size: 384, elements: !12041)
!12041 = !{!12042, !12043, !12044, !12045, !12046, !12047, !12048}
!12042 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12040, file: !12039, line: 51, baseType: !121, size: 32)
!12043 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12040, file: !12039, line: 54, baseType: !121, size: 32, offset: 32)
!12044 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12040, file: !12039, line: 57, baseType: !121, size: 32, offset: 64)
!12045 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12040, file: !12039, line: 60, baseType: !121, size: 32, offset: 96)
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12040, file: !12039, line: 63, baseType: !121, size: 32, offset: 128)
!12047 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12040, file: !12039, line: 66, baseType: !121, size: 32, offset: 160)
!12048 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12040, file: !12039, line: 69, baseType: !12049, size: 192, offset: 192)
!12049 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12050, line: 73, baseType: !12051)
!12050 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12051 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12050, line: 45, size: 192, elements: !12052)
!12052 = !{!12053, !12054, !12055, !12056, !12057, !12058}
!12053 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12051, file: !12050, line: 47, baseType: !121, size: 32)
!12054 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12051, file: !12050, line: 50, baseType: !121, size: 32, offset: 32)
!12055 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12051, file: !12050, line: 53, baseType: !121, size: 32, offset: 64)
!12056 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12051, file: !12050, line: 56, baseType: !121, size: 32, offset: 96)
!12057 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12051, file: !12050, line: 60, baseType: !121, size: 32, offset: 128)
!12058 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12051, file: !12050, line: 63, baseType: !121, size: 32, offset: 160)
!12059 = !{!12060, !12061, !12062, !12063, !12067}
!12060 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12034, file: !12029, line: 219, type: !12037)
!12061 = !DILocalVariable(name: "tickstart", scope: !12034, file: !12029, line: 221, type: !121)
!12062 = !DILocalVariable(name: "pll_config", scope: !12034, file: !12029, line: 221, type: !121)
!12063 = !DILocalVariable(name: "pwrclkchanged", scope: !12064, file: !12029, line: 391, type: !12066)
!12064 = distinct !DILexicalBlock(scope: !12065, file: !12029, line: 390, column: 3)
!12065 = distinct !DILexicalBlock(scope: !12034, file: !12029, line: 389, column: 6)
!12066 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !769, line: 188, baseType: !3039)
!12067 = !DILocalVariable(name: "tmpreg", scope: !12068, file: !12029, line: 400, type: !120)
!12068 = distinct !DILexicalBlock(scope: !12069, file: !12029, line: 400, column: 7)
!12069 = distinct !DILexicalBlock(scope: !12070, file: !12029, line: 399, column: 5)
!12070 = distinct !DILexicalBlock(scope: !12064, file: !12029, line: 398, column: 8)
!12071 = !DILocation(line: 0, scope: !12034)
!12072 = !DILocation(line: 224, column: 24, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12034, file: !12029, line: 224, column: 6)
!12074 = !DILocation(line: 224, column: 6, scope: !12034)
!12075 = !DILocation(line: 232, column: 27, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12034, file: !12029, line: 232, column: 6)
!12077 = !DILocation(line: 232, column: 43, scope: !12076)
!12078 = !DILocation(line: 232, column: 69, scope: !12076)
!12079 = !DILocation(line: 232, column: 6, scope: !12034)
!12080 = !DILocation(line: 237, column: 9, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12082, file: !12029, line: 237, column: 8)
!12082 = distinct !DILexicalBlock(scope: !12076, file: !12029, line: 233, column: 3)
!12083 = !DILocation(line: 237, column: 39, scope: !12081)
!12084 = !DILocation(line: 237, column: 60, scope: !12081)
!12085 = !DILocation(line: 238, column: 9, scope: !12081)
!12086 = !DILocation(line: 238, column: 39, scope: !12081)
!12087 = !DILocation(line: 238, column: 60, scope: !12081)
!12088 = !DILocation(line: 238, column: 70, scope: !12081)
!12089 = !DILocation(line: 238, column: 78, scope: !12081)
!12090 = !DILocation(line: 238, column: 100, scope: !12081)
!12091 = !DILocation(line: 237, column: 8, scope: !12082)
!12092 = !DILocation(line: 240, column: 11, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12094, file: !12029, line: 240, column: 10)
!12094 = distinct !DILexicalBlock(scope: !12081, file: !12029, line: 239, column: 5)
!12095 = !DILocation(line: 240, column: 57, scope: !12093)
!12096 = !DILocation(line: 240, column: 80, scope: !12093)
!12097 = !DILocation(line: 240, column: 89, scope: !12093)
!12098 = !DILocation(line: 240, column: 10, scope: !12094)
!12099 = !DILocation(line: 248, column: 7, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12101, file: !12029, line: 248, column: 7)
!12101 = distinct !DILexicalBlock(scope: !12102, file: !12029, line: 248, column: 7)
!12102 = distinct !DILexicalBlock(scope: !12081, file: !12029, line: 246, column: 5)
!12103 = !DILocation(line: 248, column: 7, scope: !12101)
!12104 = !DILocation(line: 248, column: 7, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12100, file: !12029, line: 248, column: 7)
!12106 = !DILocation(line: 248, column: 7, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12108, file: !12029, line: 248, column: 7)
!12108 = distinct !DILexicalBlock(scope: !12100, file: !12029, line: 248, column: 7)
!12109 = !DILocation(line: 248, column: 7, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12108, file: !12029, line: 248, column: 7)
!12111 = !DILocation(line: 0, scope: !12100)
!12112 = !DILocation(line: 251, column: 30, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12102, file: !12029, line: 251, column: 10)
!12114 = !DILocation(line: 251, column: 40, scope: !12113)
!12115 = !DILocation(line: 0, scope: !12113)
!12116 = !DILocation(line: 251, column: 10, scope: !12102)
!12117 = !DILocation(line: 257, column: 15, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12113, file: !12029, line: 252, column: 7)
!12119 = !DILocation(line: 257, column: 51, scope: !12118)
!12120 = !DILocation(line: 257, column: 9, scope: !12118)
!12121 = !DILocation(line: 259, column: 15, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12123, file: !12029, line: 259, column: 14)
!12123 = distinct !DILexicalBlock(scope: !12118, file: !12029, line: 258, column: 9)
!12124 = !DILocation(line: 259, column: 29, scope: !12122)
!12125 = !DILocation(line: 259, column: 43, scope: !12122)
!12126 = !DILocation(line: 259, column: 14, scope: !12123)
!12127 = distinct !{!12127, !12120, !12128}
!12128 = !DILocation(line: 263, column: 9, scope: !12118)
!12129 = !DILocation(line: 271, column: 15, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12113, file: !12029, line: 266, column: 7)
!12131 = !DILocation(line: 271, column: 9, scope: !12130)
!12132 = !DILocation(line: 273, column: 15, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12134, file: !12029, line: 273, column: 14)
!12134 = distinct !DILexicalBlock(scope: !12130, file: !12029, line: 272, column: 9)
!12135 = !DILocation(line: 273, column: 29, scope: !12133)
!12136 = !DILocation(line: 273, column: 43, scope: !12133)
!12137 = !DILocation(line: 273, column: 14, scope: !12134)
!12138 = distinct !{!12138, !12131, !12139}
!12139 = !DILocation(line: 277, column: 9, scope: !12130)
!12140 = !DILocation(line: 282, column: 27, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12034, file: !12029, line: 282, column: 6)
!12142 = !DILocation(line: 282, column: 43, scope: !12141)
!12143 = !DILocation(line: 282, column: 69, scope: !12141)
!12144 = !DILocation(line: 282, column: 6, scope: !12034)
!12145 = !DILocation(line: 289, column: 9, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12147, file: !12029, line: 289, column: 8)
!12147 = distinct !DILexicalBlock(scope: !12141, file: !12029, line: 283, column: 3)
!12148 = !DILocation(line: 289, column: 39, scope: !12146)
!12149 = !DILocation(line: 289, column: 60, scope: !12146)
!12150 = !DILocation(line: 290, column: 9, scope: !12146)
!12151 = !DILocation(line: 290, column: 39, scope: !12146)
!12152 = !DILocation(line: 290, column: 60, scope: !12146)
!12153 = !DILocation(line: 290, column: 70, scope: !12146)
!12154 = !DILocation(line: 290, column: 78, scope: !12146)
!12155 = !DILocation(line: 290, column: 100, scope: !12146)
!12156 = !DILocation(line: 289, column: 8, scope: !12147)
!12157 = !DILocation(line: 293, column: 11, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12159, file: !12029, line: 293, column: 10)
!12159 = distinct !DILexicalBlock(scope: !12146, file: !12029, line: 291, column: 5)
!12160 = !DILocation(line: 293, column: 57, scope: !12158)
!12161 = !DILocation(line: 293, column: 80, scope: !12158)
!12162 = !DILocation(line: 293, column: 89, scope: !12158)
!12163 = !DILocation(line: 293, column: 10, scope: !12159)
!12164 = !DILocation(line: 307, column: 30, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12166, file: !12029, line: 307, column: 10)
!12166 = distinct !DILexicalBlock(scope: !12146, file: !12029, line: 305, column: 5)
!12167 = !DILocation(line: 307, column: 39, scope: !12165)
!12168 = !DILocation(line: 307, column: 10, scope: !12166)
!12169 = !DILocation(line: 310, column: 9, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12165, file: !12029, line: 308, column: 7)
!12171 = !DILocation(line: 313, column: 21, scope: !12170)
!12172 = !DILocation(line: 316, column: 9, scope: !12170)
!12173 = !DILocation(line: 316, column: 15, scope: !12170)
!12174 = !DILocation(line: 316, column: 51, scope: !12170)
!12175 = !DILocation(line: 318, column: 15, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12177, file: !12029, line: 318, column: 14)
!12177 = distinct !DILexicalBlock(scope: !12170, file: !12029, line: 317, column: 9)
!12178 = !DILocation(line: 318, column: 29, scope: !12176)
!12179 = !DILocation(line: 318, column: 43, scope: !12176)
!12180 = !DILocation(line: 318, column: 14, scope: !12177)
!12181 = distinct !{!12181, !12172, !12182}
!12182 = !DILocation(line: 322, column: 9, scope: !12170)
!12183 = !DILocation(line: 330, column: 9, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12165, file: !12029, line: 328, column: 7)
!12185 = !DILocation(line: 333, column: 21, scope: !12184)
!12186 = !DILocation(line: 336, column: 9, scope: !12184)
!12187 = !DILocation(line: 336, column: 15, scope: !12184)
!12188 = !DILocation(line: 338, column: 15, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12190, file: !12029, line: 338, column: 14)
!12190 = distinct !DILexicalBlock(scope: !12184, file: !12029, line: 337, column: 9)
!12191 = !DILocation(line: 338, column: 29, scope: !12189)
!12192 = !DILocation(line: 338, column: 43, scope: !12189)
!12193 = !DILocation(line: 338, column: 14, scope: !12190)
!12194 = distinct !{!12194, !12186, !12195}
!12195 = !DILocation(line: 342, column: 9, scope: !12184)
!12196 = !DILocation(line: 0, scope: !12146)
!12197 = !DILocation(line: 347, column: 27, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12034, file: !12029, line: 347, column: 6)
!12199 = !DILocation(line: 347, column: 43, scope: !12198)
!12200 = !DILocation(line: 347, column: 69, scope: !12198)
!12201 = !DILocation(line: 347, column: 6, scope: !12034)
!12202 = !DILocation(line: 353, column: 28, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12204, file: !12029, line: 353, column: 8)
!12204 = distinct !DILexicalBlock(scope: !12198, file: !12029, line: 348, column: 3)
!12205 = !DILocation(line: 353, column: 37, scope: !12203)
!12206 = !DILocation(line: 353, column: 8, scope: !12204)
!12207 = !DILocation(line: 356, column: 7, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12203, file: !12029, line: 354, column: 5)
!12209 = !DILocation(line: 359, column: 19, scope: !12208)
!12210 = !DILocation(line: 362, column: 7, scope: !12208)
!12211 = !DILocation(line: 362, column: 13, scope: !12208)
!12212 = !DILocation(line: 362, column: 49, scope: !12208)
!12213 = !DILocation(line: 364, column: 13, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12215, file: !12029, line: 364, column: 12)
!12215 = distinct !DILexicalBlock(scope: !12208, file: !12029, line: 363, column: 7)
!12216 = !DILocation(line: 364, column: 27, scope: !12214)
!12217 = !DILocation(line: 364, column: 41, scope: !12214)
!12218 = !DILocation(line: 364, column: 12, scope: !12215)
!12219 = distinct !{!12219, !12210, !12220}
!12220 = !DILocation(line: 368, column: 7, scope: !12208)
!12221 = !DILocation(line: 373, column: 7, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12203, file: !12029, line: 371, column: 5)
!12223 = !DILocation(line: 376, column: 19, scope: !12222)
!12224 = !DILocation(line: 379, column: 7, scope: !12222)
!12225 = !DILocation(line: 379, column: 13, scope: !12222)
!12226 = !DILocation(line: 381, column: 13, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !12228, file: !12029, line: 381, column: 12)
!12228 = distinct !DILexicalBlock(scope: !12222, file: !12029, line: 380, column: 7)
!12229 = !DILocation(line: 381, column: 27, scope: !12227)
!12230 = !DILocation(line: 381, column: 41, scope: !12227)
!12231 = !DILocation(line: 381, column: 12, scope: !12228)
!12232 = distinct !{!12232, !12224, !12233}
!12233 = !DILocation(line: 385, column: 7, scope: !12222)
!12234 = !DILocation(line: 389, column: 27, scope: !12065)
!12235 = !DILocation(line: 389, column: 43, scope: !12065)
!12236 = !DILocation(line: 389, column: 69, scope: !12065)
!12237 = !DILocation(line: 389, column: 6, scope: !12034)
!12238 = !DILocation(line: 0, scope: !12064)
!12239 = !DILocation(line: 398, column: 8, scope: !12070)
!12240 = !DILocation(line: 398, column: 8, scope: !12064)
!12241 = !DILocation(line: 400, column: 7, scope: !12068)
!12242 = !DILocation(line: 400, column: 7, scope: !12069)
!12243 = !DILocation(line: 402, column: 5, scope: !12069)
!12244 = !DILocation(line: 404, column: 8, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12064, file: !12029, line: 404, column: 8)
!12246 = !DILocation(line: 404, column: 8, scope: !12064)
!12247 = !DILocation(line: 407, column: 7, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12245, file: !12029, line: 405, column: 5)
!12249 = !DILocation(line: 410, column: 19, scope: !12248)
!12250 = !DILocation(line: 412, column: 7, scope: !12248)
!12251 = !DILocation(line: 412, column: 13, scope: !12248)
!12252 = !DILocation(line: 414, column: 13, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12254, file: !12029, line: 414, column: 12)
!12254 = distinct !DILexicalBlock(scope: !12248, file: !12029, line: 413, column: 7)
!12255 = !DILocation(line: 414, column: 27, scope: !12253)
!12256 = !DILocation(line: 414, column: 40, scope: !12253)
!12257 = !DILocation(line: 414, column: 12, scope: !12254)
!12258 = distinct !{!12258, !12250, !12259}
!12259 = !DILocation(line: 418, column: 7, scope: !12248)
!12260 = !DILocation(line: 422, column: 5, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12262, file: !12029, line: 422, column: 5)
!12262 = distinct !DILexicalBlock(scope: !12064, file: !12029, line: 422, column: 5)
!12263 = !DILocation(line: 422, column: 5, scope: !12262)
!12264 = !DILocation(line: 422, column: 5, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12261, file: !12029, line: 422, column: 5)
!12266 = !DILocation(line: 422, column: 5, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12268, file: !12029, line: 422, column: 5)
!12268 = distinct !DILexicalBlock(scope: !12261, file: !12029, line: 422, column: 5)
!12269 = !DILocation(line: 422, column: 5, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12268, file: !12029, line: 422, column: 5)
!12271 = !DILocation(line: 0, scope: !12261)
!12272 = !DILocation(line: 424, column: 28, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12064, file: !12029, line: 424, column: 8)
!12274 = !DILocation(line: 424, column: 38, scope: !12273)
!12275 = !DILocation(line: 0, scope: !12273)
!12276 = !DILocation(line: 424, column: 8, scope: !12064)
!12277 = !DILocation(line: 430, column: 13, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12273, file: !12029, line: 425, column: 5)
!12279 = !DILocation(line: 430, column: 49, scope: !12278)
!12280 = !DILocation(line: 430, column: 7, scope: !12278)
!12281 = !DILocation(line: 432, column: 13, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12283, file: !12029, line: 432, column: 12)
!12283 = distinct !DILexicalBlock(scope: !12278, file: !12029, line: 431, column: 7)
!12284 = !DILocation(line: 432, column: 27, scope: !12282)
!12285 = !DILocation(line: 432, column: 41, scope: !12282)
!12286 = !DILocation(line: 432, column: 12, scope: !12283)
!12287 = distinct !{!12287, !12280, !12288}
!12288 = !DILocation(line: 436, column: 7, scope: !12278)
!12289 = !DILocation(line: 444, column: 13, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12273, file: !12029, line: 439, column: 5)
!12291 = !DILocation(line: 444, column: 7, scope: !12290)
!12292 = !DILocation(line: 446, column: 13, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12294, file: !12029, line: 446, column: 12)
!12294 = distinct !DILexicalBlock(scope: !12290, file: !12029, line: 445, column: 7)
!12295 = !DILocation(line: 446, column: 27, scope: !12293)
!12296 = !DILocation(line: 446, column: 41, scope: !12293)
!12297 = !DILocation(line: 446, column: 12, scope: !12294)
!12298 = distinct !{!12298, !12291, !12299}
!12299 = !DILocation(line: 450, column: 7, scope: !12290)
!12300 = !DILocation(line: 454, column: 8, scope: !12064)
!12301 = !DILocation(line: 456, column: 7, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12303, file: !12029, line: 455, column: 5)
!12303 = distinct !DILexicalBlock(scope: !12064, file: !12029, line: 454, column: 8)
!12304 = !DILocation(line: 457, column: 5, scope: !12302)
!12305 = !DILocation(line: 462, column: 31, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12034, file: !12029, line: 462, column: 7)
!12307 = !DILocation(line: 462, column: 41, scope: !12306)
!12308 = !DILocation(line: 462, column: 7, scope: !12034)
!12309 = !DILocation(line: 465, column: 8, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12311, file: !12029, line: 465, column: 8)
!12311 = distinct !DILexicalBlock(scope: !12306, file: !12029, line: 463, column: 3)
!12312 = !DILocation(line: 465, column: 38, scope: !12310)
!12313 = !DILocation(line: 465, column: 8, scope: !12311)
!12314 = !DILocation(line: 467, column: 44, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12316, file: !12029, line: 467, column: 10)
!12316 = distinct !DILexicalBlock(scope: !12310, file: !12029, line: 466, column: 5)
!12317 = !DILocation(line: 0, scope: !12315)
!12318 = !DILocation(line: 467, column: 10, scope: !12316)
!12319 = !DILocation(line: 483, column: 15, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12315, file: !12029, line: 468, column: 7)
!12321 = !DILocation(line: 483, column: 9, scope: !12320)
!12322 = !DILocation(line: 485, column: 15, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12324, file: !12029, line: 485, column: 14)
!12324 = distinct !DILexicalBlock(scope: !12320, file: !12029, line: 484, column: 9)
!12325 = !DILocation(line: 485, column: 29, scope: !12323)
!12326 = !DILocation(line: 485, column: 43, scope: !12323)
!12327 = !DILocation(line: 485, column: 14, scope: !12324)
!12328 = distinct !{!12328, !12321, !12329}
!12329 = !DILocation(line: 489, column: 9, scope: !12320)
!12330 = !DILocation(line: 492, column: 9, scope: !12320)
!12331 = !DILocation(line: 498, column: 9, scope: !12320)
!12332 = !DILocation(line: 501, column: 21, scope: !12320)
!12333 = !DILocation(line: 504, column: 9, scope: !12320)
!12334 = !DILocation(line: 504, column: 15, scope: !12320)
!12335 = !DILocation(line: 504, column: 51, scope: !12320)
!12336 = !DILocation(line: 506, column: 15, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12338, file: !12029, line: 506, column: 14)
!12338 = distinct !DILexicalBlock(scope: !12320, file: !12029, line: 505, column: 9)
!12339 = !DILocation(line: 506, column: 29, scope: !12337)
!12340 = !DILocation(line: 506, column: 43, scope: !12337)
!12341 = !DILocation(line: 506, column: 14, scope: !12338)
!12342 = distinct !{!12342, !12333, !12343}
!12343 = !DILocation(line: 510, column: 9, scope: !12320)
!12344 = !DILocation(line: 521, column: 15, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12315, file: !12029, line: 513, column: 7)
!12346 = !DILocation(line: 521, column: 9, scope: !12345)
!12347 = !DILocation(line: 523, column: 15, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !12029, line: 523, column: 14)
!12349 = distinct !DILexicalBlock(scope: !12345, file: !12029, line: 522, column: 9)
!12350 = !DILocation(line: 523, column: 29, scope: !12348)
!12351 = !DILocation(line: 523, column: 43, scope: !12348)
!12352 = !DILocation(line: 523, column: 14, scope: !12349)
!12353 = distinct !{!12353, !12346, !12354}
!12354 = !DILocation(line: 527, column: 9, scope: !12345)
!12355 = !DILocation(line: 533, column: 44, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12357, file: !12029, line: 533, column: 10)
!12357 = distinct !DILexicalBlock(scope: !12310, file: !12029, line: 531, column: 5)
!12358 = !DILocation(line: 533, column: 10, scope: !12357)
!12359 = !DILocation(line: 540, column: 27, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12356, file: !12029, line: 538, column: 7)
!12361 = !DILocation(line: 551, column: 14, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12360, file: !12029, line: 550, column: 13)
!12363 = !DILocation(line: 551, column: 81, scope: !12362)
!12364 = !DILocation(line: 551, column: 55, scope: !12362)
!12365 = !DILocation(line: 551, column: 92, scope: !12362)
!12366 = !DILocation(line: 552, column: 14, scope: !12362)
!12367 = !DILocation(line: 552, column: 80, scope: !12362)
!12368 = !DILocation(line: 552, column: 53, scope: !12362)
!12369 = !DILocation(line: 552, column: 111, scope: !12362)
!12370 = !DILocation(line: 553, column: 14, scope: !12362)
!12371 = !DILocation(line: 553, column: 80, scope: !12362)
!12372 = !DILocation(line: 553, column: 86, scope: !12362)
!12373 = !DILocation(line: 553, column: 53, scope: !12362)
!12374 = !DILocation(line: 553, column: 111, scope: !12362)
!12375 = !DILocation(line: 554, column: 14, scope: !12362)
!12376 = !DILocation(line: 554, column: 82, scope: !12362)
!12377 = !DILocation(line: 554, column: 101, scope: !12362)
!12378 = !DILocation(line: 554, column: 53, scope: !12362)
!12379 = !DILocation(line: 554, column: 126, scope: !12362)
!12380 = !DILocation(line: 555, column: 14, scope: !12362)
!12381 = !DILocation(line: 555, column: 80, scope: !12362)
!12382 = !DILocation(line: 555, column: 85, scope: !12362)
!12383 = !DILocation(line: 555, column: 53, scope: !12362)
!12384 = !DILocation(line: 550, column: 13, scope: !12360)
!12385 = !DILocation(line: 563, column: 3, scope: !12034)
!12386 = !DILocation(line: 564, column: 1, scope: !12034)
!12387 = !DISubprogram(name: "HAL_GetTick", scope: !12388, file: !12388, line: 234, type: !6871, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!12388 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12389 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12029, file: !12029, line: 591, type: !12390, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !12401)
!12390 = !DISubroutineType(types: !12391)
!12391 = !{!12032, !12392, !121}
!12392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12393, size: 32)
!12393 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12039, line: 92, baseType: !12394)
!12394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12039, line: 75, size: 160, elements: !12395)
!12395 = !{!12396, !12397, !12398, !12399, !12400}
!12396 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12394, file: !12039, line: 77, baseType: !121, size: 32)
!12397 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12394, file: !12039, line: 80, baseType: !121, size: 32, offset: 32)
!12398 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12394, file: !12039, line: 83, baseType: !121, size: 32, offset: 64)
!12399 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12394, file: !12039, line: 86, baseType: !121, size: 32, offset: 96)
!12400 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12394, file: !12039, line: 89, baseType: !121, size: 32, offset: 128)
!12401 = !{!12402, !12403, !12404}
!12402 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12389, file: !12029, line: 591, type: !12392)
!12403 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12389, file: !12029, line: 591, type: !121)
!12404 = !DILocalVariable(name: "tickstart", scope: !12389, file: !12029, line: 593, type: !121)
!12405 = !DILocation(line: 0, scope: !12389)
!12406 = !DILocation(line: 596, column: 24, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12389, file: !12029, line: 596, column: 6)
!12408 = !DILocation(line: 596, column: 6, scope: !12389)
!12409 = !DILocation(line: 610, column: 17, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12389, file: !12029, line: 610, column: 6)
!12411 = !DILocation(line: 610, column: 15, scope: !12410)
!12412 = !DILocation(line: 610, column: 6, scope: !12389)
!12413 = !DILocation(line: 613, column: 5, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12410, file: !12029, line: 611, column: 3)
!12415 = !DILocation(line: 617, column: 8, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12414, file: !12029, line: 617, column: 8)
!12417 = !DILocation(line: 617, column: 34, scope: !12416)
!12418 = !DILocation(line: 617, column: 8, scope: !12414)
!12419 = !DILocation(line: 624, column: 27, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12389, file: !12029, line: 624, column: 6)
!12421 = !DILocation(line: 624, column: 38, scope: !12420)
!12422 = !DILocation(line: 624, column: 60, scope: !12420)
!12423 = !DILocation(line: 624, column: 6, scope: !12389)
!12424 = !DILocation(line: 628, column: 40, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12426, file: !12029, line: 628, column: 8)
!12426 = distinct !DILexicalBlock(scope: !12420, file: !12029, line: 625, column: 3)
!12427 = !DILocation(line: 628, column: 63, scope: !12425)
!12428 = !DILocation(line: 628, column: 8, scope: !12426)
!12429 = !DILocation(line: 630, column: 7, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12425, file: !12029, line: 629, column: 5)
!12431 = !DILocation(line: 633, column: 29, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12426, file: !12029, line: 633, column: 8)
!12433 = !DILocation(line: 631, column: 5, scope: !12430)
!12434 = !DILocation(line: 633, column: 40, scope: !12432)
!12435 = !DILocation(line: 633, column: 63, scope: !12432)
!12436 = !DILocation(line: 633, column: 8, scope: !12426)
!12437 = !DILocation(line: 635, column: 7, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12432, file: !12029, line: 634, column: 5)
!12439 = !DILocation(line: 636, column: 5, scope: !12438)
!12440 = !DILocation(line: 639, column: 5, scope: !12426)
!12441 = !DILocation(line: 643, column: 27, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12389, file: !12029, line: 643, column: 6)
!12443 = !DILocation(line: 640, column: 3, scope: !12426)
!12444 = !DILocation(line: 643, column: 38, scope: !12442)
!12445 = !DILocation(line: 643, column: 62, scope: !12442)
!12446 = !DILocation(line: 643, column: 6, scope: !12389)
!12447 = !DILocation(line: 648, column: 27, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12449, file: !12029, line: 648, column: 8)
!12449 = distinct !DILexicalBlock(scope: !12442, file: !12029, line: 644, column: 3)
!12450 = !DILocation(line: 648, column: 8, scope: !12449)
!12451 = !DILocation(line: 651, column: 10, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12453, file: !12029, line: 651, column: 10)
!12453 = distinct !DILexicalBlock(scope: !12448, file: !12029, line: 649, column: 5)
!12454 = !DILocation(line: 651, column: 46, scope: !12452)
!12455 = !DILocation(line: 651, column: 10, scope: !12453)
!12456 = !DILocation(line: 661, column: 10, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12458, file: !12029, line: 661, column: 10)
!12458 = distinct !DILexicalBlock(scope: !12459, file: !12029, line: 659, column: 5)
!12459 = distinct !DILexicalBlock(scope: !12448, file: !12029, line: 657, column: 13)
!12460 = !DILocation(line: 661, column: 46, scope: !12457)
!12461 = !DILocation(line: 661, column: 10, scope: !12458)
!12462 = !DILocation(line: 670, column: 10, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12464, file: !12029, line: 670, column: 10)
!12464 = distinct !DILexicalBlock(scope: !12459, file: !12029, line: 668, column: 5)
!12465 = !DILocation(line: 670, column: 46, scope: !12463)
!12466 = !DILocation(line: 670, column: 10, scope: !12464)
!12467 = !DILocation(line: 676, column: 5, scope: !12449)
!12468 = !DILocation(line: 679, column: 17, scope: !12449)
!12469 = !DILocation(line: 681, column: 5, scope: !12449)
!12470 = !DILocation(line: 681, column: 12, scope: !12449)
!12471 = !DILocation(line: 681, column: 65, scope: !12449)
!12472 = !DILocation(line: 681, column: 78, scope: !12449)
!12473 = !DILocation(line: 681, column: 42, scope: !12449)
!12474 = !DILocation(line: 683, column: 12, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12476, file: !12029, line: 683, column: 11)
!12476 = distinct !DILexicalBlock(scope: !12449, file: !12029, line: 682, column: 5)
!12477 = !DILocation(line: 683, column: 26, scope: !12475)
!12478 = !DILocation(line: 683, column: 39, scope: !12475)
!12479 = !DILocation(line: 683, column: 11, scope: !12476)
!12480 = distinct !{!12480, !12469, !12481}
!12481 = !DILocation(line: 687, column: 5, scope: !12449)
!12482 = !DILocation(line: 691, column: 17, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12389, file: !12029, line: 691, column: 6)
!12484 = !DILocation(line: 691, column: 15, scope: !12483)
!12485 = !DILocation(line: 691, column: 6, scope: !12389)
!12486 = !DILocation(line: 694, column: 5, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12483, file: !12029, line: 692, column: 3)
!12488 = !DILocation(line: 698, column: 8, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12487, file: !12029, line: 698, column: 8)
!12490 = !DILocation(line: 698, column: 34, scope: !12489)
!12491 = !DILocation(line: 698, column: 8, scope: !12487)
!12492 = !DILocation(line: 705, column: 27, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12389, file: !12029, line: 705, column: 6)
!12494 = !DILocation(line: 705, column: 38, scope: !12493)
!12495 = !DILocation(line: 705, column: 61, scope: !12493)
!12496 = !DILocation(line: 705, column: 6, scope: !12389)
!12497 = !DILocation(line: 708, column: 5, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12493, file: !12029, line: 706, column: 3)
!12499 = !DILocation(line: 712, column: 27, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12389, file: !12029, line: 712, column: 6)
!12501 = !DILocation(line: 709, column: 3, scope: !12498)
!12502 = !DILocation(line: 712, column: 38, scope: !12500)
!12503 = !DILocation(line: 712, column: 61, scope: !12500)
!12504 = !DILocation(line: 712, column: 6, scope: !12389)
!12505 = !DILocation(line: 715, column: 5, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12500, file: !12029, line: 713, column: 3)
!12507 = !DILocation(line: 716, column: 3, scope: !12506)
!12508 = !DILocation(line: 719, column: 21, scope: !12389)
!12509 = !DILocation(line: 719, column: 70, scope: !12389)
!12510 = !DILocation(line: 719, column: 91, scope: !12389)
!12511 = !DILocation(line: 719, column: 50, scope: !12389)
!12512 = !DILocation(line: 719, column: 47, scope: !12389)
!12513 = !DILocation(line: 719, column: 19, scope: !12389)
!12514 = !DILocation(line: 722, column: 17, scope: !12389)
!12515 = !DILocation(line: 722, column: 3, scope: !12389)
!12516 = !DILocation(line: 724, column: 3, scope: !12389)
!12517 = !DILocation(line: 725, column: 1, scope: !12389)
!12518 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12029, file: !12029, line: 885, type: !6871, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !12519)
!12519 = !{!12520, !12521, !12522, !12523}
!12520 = !DILocalVariable(name: "pllm", scope: !12518, file: !12029, line: 887, type: !121)
!12521 = !DILocalVariable(name: "pllvco", scope: !12518, file: !12029, line: 887, type: !121)
!12522 = !DILocalVariable(name: "pllp", scope: !12518, file: !12029, line: 887, type: !121)
!12523 = !DILocalVariable(name: "sysclockfreq", scope: !12518, file: !12029, line: 888, type: !121)
!12524 = !DILocation(line: 0, scope: !12518)
!12525 = !DILocation(line: 891, column: 16, scope: !12518)
!12526 = !DILocation(line: 891, column: 21, scope: !12518)
!12527 = !DILocation(line: 891, column: 3, scope: !12518)
!12528 = !DILocation(line: 901, column: 7, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12530, file: !12029, line: 899, column: 5)
!12530 = distinct !DILexicalBlock(scope: !12518, file: !12029, line: 892, column: 3)
!12531 = !DILocation(line: 907, column: 19, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12530, file: !12029, line: 904, column: 5)
!12533 = !DILocation(line: 907, column: 27, scope: !12532)
!12534 = !DILocation(line: 908, column: 10, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12532, file: !12029, line: 908, column: 10)
!12536 = !DILocation(line: 908, column: 40, scope: !12535)
!12537 = !DILocation(line: 0, scope: !12535)
!12538 = !DILocation(line: 908, column: 10, scope: !12532)
!12539 = !DILocation(line: 911, column: 53, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12535, file: !12029, line: 909, column: 7)
!12541 = !DILocation(line: 911, column: 130, scope: !12540)
!12542 = !DILocation(line: 912, column: 7, scope: !12540)
!12543 = !DILocation(line: 916, column: 56, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12535, file: !12029, line: 914, column: 7)
!12545 = !DILocation(line: 916, column: 53, scope: !12544)
!12546 = !DILocation(line: 916, column: 132, scope: !12544)
!12547 = !DILocation(line: 916, column: 130, scope: !12544)
!12548 = !DILocation(line: 916, column: 18, scope: !12544)
!12549 = !DILocation(line: 918, column: 23, scope: !12532)
!12550 = !DILocation(line: 918, column: 82, scope: !12532)
!12551 = !DILocation(line: 920, column: 28, scope: !12532)
!12552 = !DILocation(line: 921, column: 7, scope: !12532)
!12553 = !DILocation(line: 0, scope: !12530)
!12554 = !DILocation(line: 929, column: 3, scope: !12518)
!12555 = !DISubprogram(name: "HAL_InitTick", scope: !12388, file: !12388, line: 223, type: !12556, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!12556 = !DISubroutineType(types: !12557)
!12557 = !{!12032, !121}
!12558 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12029, file: !12029, line: 775, type: !12559, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !12561)
!12559 = !DISubroutineType(types: !12560)
!12560 = !{null, !121, !121, !121}
!12561 = !{!12562, !12563, !12564, !12565, !12575, !12579}
!12562 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12558, file: !12029, line: 775, type: !121)
!12563 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12558, file: !12029, line: 775, type: !121)
!12564 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12558, file: !12029, line: 775, type: !121)
!12565 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12558, file: !12029, line: 777, type: !12566)
!12566 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12567, line: 62, baseType: !12568)
!12567 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12567, line: 46, size: 160, elements: !12569)
!12569 = !{!12570, !12571, !12572, !12573, !12574}
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12568, file: !12567, line: 48, baseType: !121, size: 32)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12568, file: !12567, line: 51, baseType: !121, size: 32, offset: 32)
!12572 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12568, file: !12567, line: 54, baseType: !121, size: 32, offset: 64)
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12568, file: !12567, line: 57, baseType: !121, size: 32, offset: 96)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12568, file: !12567, line: 60, baseType: !121, size: 32, offset: 128)
!12575 = !DILocalVariable(name: "tmpreg", scope: !12576, file: !12029, line: 787, type: !120)
!12576 = distinct !DILexicalBlock(scope: !12577, file: !12029, line: 787, column: 5)
!12577 = distinct !DILexicalBlock(scope: !12578, file: !12029, line: 783, column: 3)
!12578 = distinct !DILexicalBlock(scope: !12558, file: !12029, line: 782, column: 6)
!12579 = !DILocalVariable(name: "tmpreg", scope: !12580, file: !12029, line: 811, type: !120)
!12580 = distinct !DILexicalBlock(scope: !12581, file: !12029, line: 811, column: 5)
!12581 = distinct !DILexicalBlock(scope: !12578, file: !12029, line: 807, column: 3)
!12582 = !DILocation(line: 0, scope: !12558)
!12583 = !DILocation(line: 777, column: 3, scope: !12558)
!12584 = !DILocation(line: 777, column: 20, scope: !12558)
!12585 = !DILocation(line: 782, column: 15, scope: !12578)
!12586 = !DILocation(line: 782, column: 6, scope: !12558)
!12587 = !DILocation(line: 787, column: 5, scope: !12576)
!12588 = !DILocation(line: 787, column: 5, scope: !12577)
!12589 = !DILocation(line: 790, column: 21, scope: !12577)
!12590 = !DILocation(line: 790, column: 25, scope: !12577)
!12591 = !DILocation(line: 791, column: 21, scope: !12577)
!12592 = !DILocation(line: 791, column: 26, scope: !12577)
!12593 = !DILocation(line: 792, column: 21, scope: !12577)
!12594 = !DILocation(line: 792, column: 27, scope: !12577)
!12595 = !DILocation(line: 793, column: 21, scope: !12577)
!12596 = !DILocation(line: 793, column: 26, scope: !12577)
!12597 = !DILocation(line: 794, column: 21, scope: !12577)
!12598 = !DILocation(line: 794, column: 31, scope: !12577)
!12599 = !DILocation(line: 795, column: 5, scope: !12577)
!12600 = !DILocation(line: 798, column: 5, scope: !12577)
!12601 = !DILocation(line: 804, column: 3, scope: !12577)
!12602 = !DILocation(line: 811, column: 5, scope: !12580)
!12603 = !DILocation(line: 811, column: 5, scope: !12581)
!12604 = !DILocation(line: 814, column: 21, scope: !12581)
!12605 = !DILocation(line: 814, column: 25, scope: !12581)
!12606 = !DILocation(line: 815, column: 21, scope: !12581)
!12607 = !DILocation(line: 815, column: 26, scope: !12581)
!12608 = !DILocation(line: 816, column: 21, scope: !12581)
!12609 = !DILocation(line: 816, column: 27, scope: !12581)
!12610 = !DILocation(line: 817, column: 21, scope: !12581)
!12611 = !DILocation(line: 817, column: 26, scope: !12581)
!12612 = !DILocation(line: 818, column: 21, scope: !12581)
!12613 = !DILocation(line: 818, column: 31, scope: !12581)
!12614 = !DILocation(line: 819, column: 5, scope: !12581)
!12615 = !DILocation(line: 822, column: 5, scope: !12581)
!12616 = !DILocation(line: 0, scope: !12578)
!12617 = !DILocation(line: 830, column: 1, scope: !12558)
!12618 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12567, file: !12567, line: 224, type: !12619, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!12619 = !DISubroutineType(types: !12620)
!12620 = !{null, !3102, !12621}
!12621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12566, size: 32)
!12622 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12029, file: !12029, line: 841, type: !3220, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !461)
!12623 = !DILocation(line: 843, column: 38, scope: !12622)
!12624 = !DILocation(line: 844, column: 1, scope: !12622)
!12625 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12029, file: !12029, line: 850, type: !3220, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !461)
!12626 = !DILocation(line: 852, column: 38, scope: !12625)
!12627 = !DILocation(line: 853, column: 1, scope: !12625)
!12628 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12029, file: !12029, line: 941, type: !6871, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !461)
!12629 = !DILocation(line: 943, column: 10, scope: !12628)
!12630 = !DILocation(line: 943, column: 3, scope: !12628)
!12631 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12029, file: !12029, line: 952, type: !6871, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !461)
!12632 = !DILocation(line: 955, column: 11, scope: !12631)
!12633 = !DILocation(line: 955, column: 56, scope: !12631)
!12634 = !DILocation(line: 955, column: 78, scope: !12631)
!12635 = !DILocation(line: 955, column: 36, scope: !12631)
!12636 = !DILocation(line: 955, column: 33, scope: !12631)
!12637 = !DILocation(line: 955, column: 3, scope: !12631)
!12638 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12029, file: !12029, line: 964, type: !6871, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !461)
!12639 = !DILocation(line: 967, column: 11, scope: !12638)
!12640 = !DILocation(line: 967, column: 55, scope: !12638)
!12641 = !DILocation(line: 967, column: 77, scope: !12638)
!12642 = !DILocation(line: 967, column: 35, scope: !12638)
!12643 = !DILocation(line: 967, column: 32, scope: !12638)
!12644 = !DILocation(line: 967, column: 3, scope: !12638)
!12645 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12029, file: !12029, line: 977, type: !12646, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !12648)
!12646 = !DISubroutineType(types: !12647)
!12647 = !{null, !12037}
!12648 = !{!12649}
!12649 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12645, file: !12029, line: 977, type: !12037)
!12650 = !DILocation(line: 0, scope: !12645)
!12651 = !DILocation(line: 980, column: 22, scope: !12645)
!12652 = !DILocation(line: 980, column: 37, scope: !12645)
!12653 = !DILocation(line: 983, column: 12, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12645, file: !12029, line: 983, column: 6)
!12655 = !DILocation(line: 983, column: 15, scope: !12654)
!12656 = !DILocation(line: 983, column: 31, scope: !12654)
!12657 = !DILocation(line: 983, column: 6, scope: !12645)
!12658 = !DILocation(line: 985, column: 24, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12654, file: !12029, line: 984, column: 3)
!12660 = !DILocation(line: 985, column: 33, scope: !12659)
!12661 = !DILocation(line: 986, column: 3, scope: !12659)
!12662 = !DILocation(line: 987, column: 17, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12654, file: !12029, line: 987, column: 11)
!12664 = !DILocation(line: 987, column: 20, scope: !12663)
!12665 = !DILocation(line: 987, column: 35, scope: !12663)
!12666 = !DILocation(line: 0, scope: !12663)
!12667 = !DILocation(line: 987, column: 11, scope: !12654)
!12668 = !DILocation(line: 989, column: 33, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12663, file: !12029, line: 988, column: 3)
!12670 = !DILocation(line: 990, column: 3, scope: !12669)
!12671 = !DILocation(line: 993, column: 33, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12663, file: !12029, line: 992, column: 3)
!12673 = !DILocation(line: 997, column: 12, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12645, file: !12029, line: 997, column: 6)
!12675 = !DILocation(line: 997, column: 15, scope: !12674)
!12676 = !DILocation(line: 1003, column: 24, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12674, file: !12029, line: 1002, column: 3)
!12678 = !DILocation(line: 1003, column: 33, scope: !12677)
!12679 = !DILocation(line: 1006, column: 61, scope: !12645)
!12680 = !DILocation(line: 1006, column: 81, scope: !12645)
!12681 = !DILocation(line: 1006, column: 22, scope: !12645)
!12682 = !DILocation(line: 1006, column: 42, scope: !12645)
!12683 = !DILocation(line: 1009, column: 12, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12645, file: !12029, line: 1009, column: 6)
!12685 = !DILocation(line: 1009, column: 17, scope: !12684)
!12686 = !DILocation(line: 1009, column: 35, scope: !12684)
!12687 = !DILocation(line: 1009, column: 6, scope: !12645)
!12688 = !DILocation(line: 1011, column: 24, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12684, file: !12029, line: 1010, column: 3)
!12690 = !DILocation(line: 1011, column: 33, scope: !12689)
!12691 = !DILocation(line: 1012, column: 3, scope: !12689)
!12692 = !DILocation(line: 1013, column: 17, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12684, file: !12029, line: 1013, column: 11)
!12694 = !DILocation(line: 1013, column: 22, scope: !12693)
!12695 = !DILocation(line: 1013, column: 39, scope: !12693)
!12696 = !DILocation(line: 0, scope: !12693)
!12697 = !DILocation(line: 1013, column: 11, scope: !12684)
!12698 = !DILocation(line: 1015, column: 33, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12693, file: !12029, line: 1014, column: 3)
!12700 = !DILocation(line: 1016, column: 3, scope: !12699)
!12701 = !DILocation(line: 1019, column: 33, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12693, file: !12029, line: 1018, column: 3)
!12703 = !DILocation(line: 1023, column: 12, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12645, file: !12029, line: 1023, column: 6)
!12705 = !DILocation(line: 1023, column: 16, scope: !12704)
!12706 = !DILocation(line: 1029, column: 24, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12704, file: !12029, line: 1028, column: 3)
!12708 = !DILocation(line: 1029, column: 33, scope: !12707)
!12709 = !DILocation(line: 1033, column: 12, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12645, file: !12029, line: 1033, column: 6)
!12711 = !DILocation(line: 1033, column: 15, scope: !12710)
!12712 = !DILocation(line: 1033, column: 30, scope: !12710)
!12713 = !DILocation(line: 1033, column: 6, scope: !12645)
!12714 = !DILocation(line: 1039, column: 28, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12710, file: !12029, line: 1038, column: 3)
!12716 = !DILocation(line: 1039, column: 37, scope: !12715)
!12717 = !DILocation(line: 1041, column: 54, scope: !12645)
!12718 = !DILocation(line: 1041, column: 62, scope: !12645)
!12719 = !DILocation(line: 1041, column: 26, scope: !12645)
!12720 = !DILocation(line: 1041, column: 36, scope: !12645)
!12721 = !DILocation(line: 1042, column: 49, scope: !12645)
!12722 = !DILocation(line: 1042, column: 57, scope: !12645)
!12723 = !DILocation(line: 1042, column: 26, scope: !12645)
!12724 = !DILocation(line: 1042, column: 31, scope: !12645)
!12725 = !DILocation(line: 1043, column: 50, scope: !12645)
!12726 = !DILocation(line: 1043, column: 78, scope: !12645)
!12727 = !DILocation(line: 1043, column: 26, scope: !12645)
!12728 = !DILocation(line: 1043, column: 31, scope: !12645)
!12729 = !DILocation(line: 1044, column: 52, scope: !12645)
!12730 = !DILocation(line: 1044, column: 102, scope: !12645)
!12731 = !DILocation(line: 1044, column: 109, scope: !12645)
!12732 = !DILocation(line: 1044, column: 26, scope: !12645)
!12733 = !DILocation(line: 1044, column: 31, scope: !12645)
!12734 = !DILocation(line: 1045, column: 50, scope: !12645)
!12735 = !DILocation(line: 1045, column: 78, scope: !12645)
!12736 = !DILocation(line: 1045, column: 26, scope: !12645)
!12737 = !DILocation(line: 1045, column: 31, scope: !12645)
!12738 = !DILocation(line: 1046, column: 1, scope: !12645)
!12739 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12029, file: !12029, line: 1056, type: !12740, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !12742)
!12740 = !DISubroutineType(types: !12741)
!12741 = !{null, !12392, !825}
!12742 = !{!12743, !12744}
!12743 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12739, file: !12029, line: 1056, type: !12392)
!12744 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12739, file: !12029, line: 1056, type: !825)
!12745 = !DILocation(line: 0, scope: !12739)
!12746 = !DILocation(line: 1059, column: 22, scope: !12739)
!12747 = !DILocation(line: 1059, column: 32, scope: !12739)
!12748 = !DILocation(line: 1062, column: 53, scope: !12739)
!12749 = !DILocation(line: 1062, column: 58, scope: !12739)
!12750 = !DILocation(line: 1062, column: 22, scope: !12739)
!12751 = !DILocation(line: 1062, column: 35, scope: !12739)
!12752 = !DILocation(line: 1065, column: 54, scope: !12739)
!12753 = !DILocation(line: 1065, column: 59, scope: !12739)
!12754 = !DILocation(line: 1065, column: 22, scope: !12739)
!12755 = !DILocation(line: 1065, column: 36, scope: !12739)
!12756 = !DILocation(line: 1068, column: 55, scope: !12739)
!12757 = !DILocation(line: 1068, column: 60, scope: !12739)
!12758 = !DILocation(line: 1068, column: 22, scope: !12739)
!12759 = !DILocation(line: 1068, column: 37, scope: !12739)
!12760 = !DILocation(line: 1071, column: 56, scope: !12739)
!12761 = !DILocation(line: 1071, column: 79, scope: !12739)
!12762 = !DILocation(line: 1071, column: 22, scope: !12739)
!12763 = !DILocation(line: 1071, column: 37, scope: !12739)
!12764 = !DILocation(line: 1074, column: 34, scope: !12739)
!12765 = !DILocation(line: 1074, column: 38, scope: !12739)
!12766 = !DILocation(line: 1074, column: 14, scope: !12739)
!12767 = !DILocation(line: 1075, column: 1, scope: !12739)
!12768 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12029, file: !12029, line: 1082, type: !3220, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !461)
!12769 = !DILocation(line: 1085, column: 6, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12768, file: !12029, line: 1085, column: 6)
!12771 = !DILocation(line: 1085, column: 6, scope: !12768)
!12772 = !DILocation(line: 1088, column: 5, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12770, file: !12029, line: 1086, column: 3)
!12774 = !DILocation(line: 1091, column: 5, scope: !12773)
!12775 = !DILocation(line: 1092, column: 3, scope: !12773)
!12776 = !DILocation(line: 1093, column: 1, scope: !12768)
!12777 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12029, file: !12029, line: 1099, type: !3220, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !461)
!12778 = !DILocation(line: 1104, column: 1, scope: !12777)
!12779 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12780, file: !12780, line: 257, type: !6881, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12781)
!12780 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12781 = !{!12782}
!12782 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12779, file: !12780, line: 257, type: !121)
!12783 = !DILocation(line: 0, scope: !12779)
!12784 = !DILocation(line: 260, column: 3, scope: !12779)
!12785 = !DILocation(line: 261, column: 1, scope: !12779)
!12786 = distinct !DISubprogram(name: "LL_InitTick", scope: !12787, file: !12787, line: 260, type: !10060, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12788)
!12787 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12788 = !{!12789, !12790}
!12789 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12786, file: !12787, line: 260, type: !121)
!12790 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12786, file: !12787, line: 260, type: !121)
!12791 = !DILocation(line: 0, scope: !12786)
!12792 = !DILocation(line: 263, column: 46, scope: !12786)
!12793 = !DILocation(line: 263, column: 55, scope: !12786)
!12794 = !DILocation(line: 263, column: 18, scope: !12786)
!12795 = !DILocation(line: 264, column: 18, scope: !12786)
!12796 = !DILocation(line: 265, column: 18, scope: !12786)
!12797 = !DILocation(line: 267, column: 1, scope: !12786)
!12798 = distinct !DISubprogram(name: "LL_mDelay", scope: !12780, file: !12780, line: 273, type: !6881, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12799)
!12799 = !{!12800, !12801}
!12800 = !DILocalVariable(name: "Delay", arg: 1, scope: !12798, file: !12780, line: 273, type: !121)
!12801 = !DILocalVariable(name: "tmp", scope: !12798, file: !12780, line: 275, type: !120)
!12802 = !DILocation(line: 0, scope: !12798)
!12803 = !DILocation(line: 275, column: 3, scope: !12798)
!12804 = !DILocation(line: 275, column: 18, scope: !12798)
!12805 = !DILocation(line: 275, column: 33, scope: !12798)
!12806 = !DILocation(line: 277, column: 10, scope: !12798)
!12807 = !DILocation(line: 280, column: 12, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12798, file: !12780, line: 280, column: 6)
!12809 = !DILocation(line: 285, column: 3, scope: !12798)
!12810 = !DILocation(line: 287, column: 18, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12812, file: !12780, line: 287, column: 8)
!12812 = distinct !DILexicalBlock(scope: !12798, file: !12780, line: 286, column: 3)
!12813 = !DILocation(line: 292, column: 1, scope: !12798)
!12814 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12780, file: !12780, line: 323, type: !6881, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12815)
!12815 = !{!12816}
!12816 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12814, file: !12780, line: 323, type: !121)
!12817 = !DILocation(line: 0, scope: !12814)
!12818 = !DILocation(line: 326, column: 19, scope: !12814)
!12819 = !DILocation(line: 327, column: 1, scope: !12814)
!12820 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12780, file: !12780, line: 338, type: !12821, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12824)
!12821 = !DISubroutineType(types: !12822)
!12822 = !{!12823, !121}
!12823 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !769, line: 201, baseType: !768)
!12824 = !{!12825, !12826, !12827, !12828, !12829}
!12825 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12820, file: !12780, line: 338, type: !121)
!12826 = !DILocalVariable(name: "timeout", scope: !12820, file: !12780, line: 340, type: !121)
!12827 = !DILocalVariable(name: "getlatency", scope: !12820, file: !12780, line: 341, type: !121)
!12828 = !DILocalVariable(name: "latency", scope: !12820, file: !12780, line: 342, type: !121)
!12829 = !DILocalVariable(name: "status", scope: !12820, file: !12780, line: 343, type: !12823)
!12830 = !DILocation(line: 0, scope: !12820)
!12831 = !DILocation(line: 347, column: 21, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12820, file: !12780, line: 347, column: 6)
!12833 = !DILocation(line: 347, column: 6, scope: !12820)
!12834 = !DILocation(line: 353, column: 8, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !12836, file: !12780, line: 353, column: 8)
!12836 = distinct !DILexicalBlock(scope: !12832, file: !12780, line: 352, column: 3)
!12837 = !DILocation(line: 353, column: 40, scope: !12835)
!12838 = !DILocation(line: 353, column: 8, scope: !12836)
!12839 = !DILocation(line: 374, column: 55, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12841, file: !12780, line: 374, column: 10)
!12841 = distinct !DILexicalBlock(scope: !12835, file: !12780, line: 354, column: 5)
!12842 = !DILocation(line: 368, column: 26, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12841, file: !12780, line: 368, column: 10)
!12844 = !DILocation(line: 368, column: 55, scope: !12843)
!12845 = !DILocation(line: 380, column: 57, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12847, file: !12780, line: 380, column: 12)
!12847 = distinct !DILexicalBlock(scope: !12840, file: !12780, line: 379, column: 7)
!12848 = !DILocation(line: 387, column: 8, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12836, file: !12780, line: 387, column: 8)
!12850 = !DILocation(line: 387, column: 40, scope: !12849)
!12851 = !DILocation(line: 387, column: 8, scope: !12836)
!12852 = !DILocation(line: 407, column: 26, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12854, file: !12780, line: 407, column: 10)
!12854 = distinct !DILexicalBlock(scope: !12849, file: !12780, line: 388, column: 5)
!12855 = !DILocation(line: 407, column: 55, scope: !12853)
!12856 = !DILocation(line: 413, column: 28, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !12780, line: 413, column: 12)
!12858 = distinct !DILexicalBlock(scope: !12853, file: !12780, line: 412, column: 7)
!12859 = !DILocation(line: 413, column: 57, scope: !12857)
!12860 = !DILocation(line: 0, scope: !12836)
!12861 = !DILocation(line: 420, column: 8, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12836, file: !12780, line: 420, column: 8)
!12863 = !DILocation(line: 420, column: 40, scope: !12862)
!12864 = !DILocation(line: 420, column: 8, scope: !12836)
!12865 = !DILocation(line: 429, column: 26, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !12780, line: 429, column: 10)
!12867 = distinct !DILexicalBlock(scope: !12862, file: !12780, line: 421, column: 5)
!12868 = !DILocation(line: 429, column: 55, scope: !12866)
!12869 = !DILocation(line: 435, column: 28, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12871, file: !12780, line: 435, column: 12)
!12871 = distinct !DILexicalBlock(scope: !12866, file: !12780, line: 434, column: 7)
!12872 = !DILocation(line: 435, column: 57, scope: !12870)
!12873 = !DILocation(line: 444, column: 5, scope: !12836)
!12874 = !DILocation(line: 448, column: 5, scope: !12836)
!12875 = !DILocation(line: 451, column: 18, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12836, file: !12780, line: 449, column: 5)
!12877 = !DILocation(line: 452, column: 12, scope: !12876)
!12878 = !DILocation(line: 453, column: 26, scope: !12836)
!12879 = !DILocation(line: 453, column: 38, scope: !12836)
!12880 = !DILocation(line: 453, column: 5, scope: !12876)
!12881 = distinct !{!12881, !12874, !12882}
!12882 = !DILocation(line: 453, column: 54, scope: !12836)
!12883 = !DILocation(line: 0, scope: !12832)
!12884 = !DILocation(line: 464, column: 3, scope: !12820)
!12885 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12886, file: !12886, line: 519, type: !6871, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!12886 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12887 = !DILocation(line: 521, column: 21, scope: !12885)
!12888 = !DILocation(line: 521, column: 3, scope: !12885)
!12889 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5791, file: !5791, line: 1543, type: !6881, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12890)
!12890 = !{!12891}
!12891 = !DILocalVariable(name: "Latency", arg: 1, scope: !12889, file: !5791, line: 1543, type: !121)
!12892 = !DILocation(line: 0, scope: !12889)
!12893 = !DILocation(line: 1545, column: 3, scope: !12889)
!12894 = !DILocation(line: 1546, column: 1, scope: !12889)
!12895 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5791, file: !5791, line: 1569, type: !6871, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!12896 = !DILocation(line: 1571, column: 21, scope: !12895)
!12897 = !DILocation(line: 1571, column: 3, scope: !12895)
!12898 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12780, file: !12780, line: 483, type: !12899, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12915)
!12899 = !DISubroutineType(types: !12900)
!12900 = !{!12823, !12901, !12908}
!12901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12902, size: 32)
!12902 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12787, line: 114, baseType: !12903)
!12903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12787, line: 94, size: 96, elements: !12904)
!12904 = !{!12905, !12906, !12907}
!12905 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12903, file: !12787, line: 96, baseType: !121, size: 32)
!12906 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12903, file: !12787, line: 102, baseType: !121, size: 32, offset: 32)
!12907 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12903, file: !12787, line: 109, baseType: !121, size: 32, offset: 64)
!12908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12909, size: 32)
!12909 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12787, line: 139, baseType: !12910)
!12910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12787, line: 119, size: 96, elements: !12911)
!12911 = !{!12912, !12913, !12914}
!12912 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12910, file: !12787, line: 121, baseType: !121, size: 32)
!12913 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12910, file: !12787, line: 127, baseType: !121, size: 32, offset: 32)
!12914 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12910, file: !12787, line: 133, baseType: !121, size: 32, offset: 64)
!12915 = !{!12916, !12917, !12918, !12919}
!12916 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12898, file: !12780, line: 483, type: !12901)
!12917 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12898, file: !12780, line: 484, type: !12908)
!12918 = !DILocalVariable(name: "status", scope: !12898, file: !12780, line: 486, type: !12823)
!12919 = !DILocalVariable(name: "pllfreq", scope: !12898, file: !12780, line: 487, type: !121)
!12920 = !DILocation(line: 0, scope: !12898)
!12921 = !DILocation(line: 490, column: 6, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12898, file: !12780, line: 490, column: 6)
!12923 = !DILocation(line: 490, column: 25, scope: !12922)
!12924 = !DILocation(line: 490, column: 6, scope: !12898)
!12925 = !DILocation(line: 493, column: 15, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12922, file: !12780, line: 491, column: 3)
!12927 = !DILocation(line: 496, column: 8, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12926, file: !12780, line: 496, column: 8)
!12929 = !DILocation(line: 496, column: 29, scope: !12928)
!12930 = !DILocation(line: 496, column: 8, scope: !12926)
!12931 = !DILocation(line: 498, column: 7, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12928, file: !12780, line: 497, column: 5)
!12933 = !DILocation(line: 499, column: 7, scope: !12932)
!12934 = !DILocation(line: 499, column: 14, scope: !12932)
!12935 = !DILocation(line: 499, column: 35, scope: !12932)
!12936 = distinct !{!12936, !12933, !12937}
!12937 = !DILocation(line: 502, column: 7, scope: !12932)
!12938 = !DILocation(line: 506, column: 76, scope: !12926)
!12939 = !DILocation(line: 506, column: 103, scope: !12926)
!12940 = !DILocation(line: 507, column: 54, scope: !12926)
!12941 = !DILocation(line: 506, column: 5, scope: !12926)
!12942 = !DILocation(line: 510, column: 14, scope: !12926)
!12943 = !DILocation(line: 511, column: 3, scope: !12926)
!12944 = !DILocation(line: 0, scope: !12922)
!12945 = !DILocation(line: 518, column: 3, scope: !12898)
!12946 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12780, file: !12780, line: 642, type: !12947, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12949)
!12947 = !DISubroutineType(types: !12948)
!12948 = !{!12823}
!12949 = !{!12950}
!12950 = !DILocalVariable(name: "status", scope: !12946, file: !12780, line: 644, type: !12823)
!12951 = !DILocation(line: 0, scope: !12946)
!12952 = !DILocation(line: 647, column: 6, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12946, file: !12780, line: 647, column: 6)
!12954 = !DILocation(line: 647, column: 27, scope: !12953)
!12955 = !DILocation(line: 663, column: 6, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12946, file: !12780, line: 663, column: 6)
!12957 = !DILocation(line: 663, column: 30, scope: !12956)
!12958 = !DILocation(line: 663, column: 6, scope: !12946)
!12959 = !DILocation(line: 669, column: 3, scope: !12946)
!12960 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12780, file: !12780, line: 611, type: !12961, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12963)
!12961 = !DISubroutineType(types: !12962)
!12962 = !{!121, !121, !12901}
!12963 = !{!12964, !12965, !12966}
!12964 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12960, file: !12780, line: 611, type: !121)
!12965 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12960, file: !12780, line: 611, type: !12901)
!12966 = !DILocalVariable(name: "pllfreq", scope: !12960, file: !12780, line: 613, type: !121)
!12967 = !DILocation(line: 0, scope: !12960)
!12968 = !DILocation(line: 622, column: 56, scope: !12960)
!12969 = !DILocation(line: 622, column: 61, scope: !12960)
!12970 = !DILocation(line: 622, column: 32, scope: !12960)
!12971 = !DILocation(line: 626, column: 45, scope: !12960)
!12972 = !DILocation(line: 626, column: 50, scope: !12960)
!12973 = !DILocation(line: 626, column: 21, scope: !12960)
!12974 = !DILocation(line: 630, column: 47, scope: !12960)
!12975 = !DILocation(line: 630, column: 82, scope: !12960)
!12976 = !DILocation(line: 630, column: 21, scope: !12960)
!12977 = !DILocation(line: 633, column: 3, scope: !12960)
!12978 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8820, file: !8820, line: 3007, type: !6871, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!12979 = !DILocation(line: 3009, column: 11, scope: !12978)
!12980 = !DILocation(line: 3009, column: 44, scope: !12978)
!12981 = !DILocation(line: 3009, column: 3, scope: !12978)
!12982 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8820, file: !8820, line: 2987, type: !3220, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!12983 = !DILocation(line: 2989, column: 3, scope: !12982)
!12984 = !DILocation(line: 2990, column: 1, scope: !12982)
!12985 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8820, file: !8820, line: 4304, type: !8944, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12986)
!12986 = !{!12987, !12988, !12989, !12990}
!12987 = !DILocalVariable(name: "Source", arg: 1, scope: !12985, file: !8820, line: 4304, type: !121)
!12988 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12985, file: !8820, line: 4304, type: !121)
!12989 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12985, file: !8820, line: 4304, type: !121)
!12990 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12985, file: !8820, line: 4304, type: !121)
!12991 = !DILocation(line: 0, scope: !12985)
!12992 = !DILocation(line: 4306, column: 3, scope: !12985)
!12993 = !DILocation(line: 4308, column: 3, scope: !12985)
!12994 = !DILocation(line: 4312, column: 1, scope: !12985)
!12995 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12780, file: !12780, line: 681, type: !12996, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12998)
!12996 = !DISubroutineType(types: !12997)
!12997 = !{!12823, !121, !12908}
!12998 = !{!12999, !13000, !13001, !13002}
!12999 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12995, file: !12780, line: 681, type: !121)
!13000 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12995, file: !12780, line: 681, type: !12908)
!13001 = !DILocalVariable(name: "status", scope: !12995, file: !12780, line: 683, type: !12823)
!13002 = !DILocalVariable(name: "hclk_frequency", scope: !12995, file: !12780, line: 684, type: !121)
!13003 = !DILocation(line: 0, scope: !12995)
!13004 = !DILocation(line: 691, column: 20, scope: !12995)
!13005 = !DILocation(line: 694, column: 6, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !12995, file: !12780, line: 694, column: 6)
!13007 = !DILocation(line: 694, column: 22, scope: !13006)
!13008 = !DILocation(line: 694, column: 6, scope: !12995)
!13009 = !DILocation(line: 697, column: 14, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !13006, file: !12780, line: 695, column: 3)
!13011 = !DILocation(line: 701, column: 13, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !12995, file: !12780, line: 701, column: 6)
!13013 = !DILocation(line: 701, column: 6, scope: !12995)
!13014 = !DILocation(line: 704, column: 5, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !13012, file: !12780, line: 702, column: 3)
!13016 = !DILocation(line: 705, column: 5, scope: !13015)
!13017 = !DILocation(line: 705, column: 12, scope: !13015)
!13018 = !DILocation(line: 705, column: 33, scope: !13015)
!13019 = distinct !{!13019, !13016, !13020}
!13020 = !DILocation(line: 708, column: 5, scope: !13015)
!13021 = !DILocation(line: 711, column: 49, scope: !13015)
!13022 = !DILocation(line: 711, column: 5, scope: !13015)
!13023 = !DILocation(line: 712, column: 5, scope: !13015)
!13024 = !DILocation(line: 713, column: 5, scope: !13015)
!13025 = !DILocation(line: 713, column: 12, scope: !13015)
!13026 = !DILocation(line: 713, column: 37, scope: !13015)
!13027 = distinct !{!13027, !13024, !13028}
!13028 = !DILocation(line: 716, column: 5, scope: !13015)
!13029 = !DILocation(line: 719, column: 50, scope: !13015)
!13030 = !DILocation(line: 719, column: 5, scope: !13015)
!13031 = !DILocation(line: 720, column: 50, scope: !13015)
!13032 = !DILocation(line: 720, column: 5, scope: !13015)
!13033 = !DILocation(line: 721, column: 3, scope: !13015)
!13034 = !DILocation(line: 724, column: 6, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !12995, file: !12780, line: 724, column: 6)
!13036 = !DILocation(line: 724, column: 22, scope: !13035)
!13037 = !DILocation(line: 724, column: 6, scope: !12995)
!13038 = !DILocation(line: 727, column: 14, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13035, file: !12780, line: 725, column: 3)
!13040 = !DILocation(line: 728, column: 3, scope: !13039)
!13041 = !DILocation(line: 731, column: 13, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !12995, file: !12780, line: 731, column: 6)
!13043 = !DILocation(line: 731, column: 6, scope: !12995)
!13044 = !DILocation(line: 733, column: 5, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13042, file: !12780, line: 732, column: 3)
!13046 = !DILocation(line: 734, column: 3, scope: !13045)
!13047 = !DILocation(line: 736, column: 3, scope: !12995)
!13048 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8820, file: !8820, line: 4184, type: !3220, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!13049 = !DILocation(line: 4186, column: 3, scope: !13048)
!13050 = !DILocation(line: 4187, column: 1, scope: !13048)
!13051 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8820, file: !8820, line: 4205, type: !6871, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!13052 = !DILocation(line: 4207, column: 11, scope: !13051)
!13053 = !DILocation(line: 4207, column: 44, scope: !13051)
!13054 = !DILocation(line: 4207, column: 3, scope: !13051)
!13055 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8820, file: !8820, line: 3224, type: !6881, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13056)
!13056 = !{!13057}
!13057 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13055, file: !8820, line: 3224, type: !121)
!13058 = !DILocation(line: 0, scope: !13055)
!13059 = !DILocation(line: 3226, column: 3, scope: !13055)
!13060 = !DILocation(line: 3227, column: 1, scope: !13055)
!13061 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8820, file: !8820, line: 3188, type: !6881, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13062)
!13062 = !{!13063}
!13063 = !DILocalVariable(name: "Source", arg: 1, scope: !13061, file: !8820, line: 3188, type: !121)
!13064 = !DILocation(line: 0, scope: !13061)
!13065 = !DILocation(line: 3190, column: 3, scope: !13061)
!13066 = !DILocation(line: 3191, column: 1, scope: !13061)
!13067 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8820, file: !8820, line: 3204, type: !6871, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!13068 = !DILocation(line: 3206, column: 21, scope: !13067)
!13069 = !DILocation(line: 3206, column: 3, scope: !13067)
!13070 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8820, file: !8820, line: 3240, type: !6881, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13071)
!13071 = !{!13072}
!13072 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13070, file: !8820, line: 3240, type: !121)
!13073 = !DILocation(line: 0, scope: !13070)
!13074 = !DILocation(line: 3242, column: 3, scope: !13070)
!13075 = !DILocation(line: 3243, column: 1, scope: !13070)
!13076 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8820, file: !8820, line: 3256, type: !6881, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13077)
!13077 = !{!13078}
!13078 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13076, file: !8820, line: 3256, type: !121)
!13079 = !DILocation(line: 0, scope: !13076)
!13080 = !DILocation(line: 3258, column: 3, scope: !13076)
!13081 = !DILocation(line: 3259, column: 1, scope: !13076)
!13082 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8820, file: !8820, line: 5153, type: !6871, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!13083 = !DILocation(line: 5155, column: 11, scope: !13082)
!13084 = !DILocation(line: 5155, column: 47, scope: !13082)
!13085 = !DILocation(line: 5155, column: 3, scope: !13082)
!13086 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12780, file: !12780, line: 540, type: !13087, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13089)
!13087 = !DISubroutineType(types: !13088)
!13088 = !{!12823, !121, !121, !12901, !12908}
!13089 = !{!13090, !13091, !13092, !13093, !13094, !13095}
!13090 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13086, file: !12780, line: 540, type: !121)
!13091 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13086, file: !12780, line: 540, type: !121)
!13092 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13086, file: !12780, line: 541, type: !12901)
!13093 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13086, file: !12780, line: 541, type: !12908)
!13094 = !DILocalVariable(name: "status", scope: !13086, file: !12780, line: 543, type: !12823)
!13095 = !DILocalVariable(name: "pllfreq", scope: !13086, file: !12780, line: 544, type: !121)
!13096 = !DILocation(line: 0, scope: !13086)
!13097 = !DILocation(line: 551, column: 6, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13086, file: !12780, line: 551, column: 6)
!13099 = !DILocation(line: 551, column: 25, scope: !13098)
!13100 = !DILocation(line: 551, column: 6, scope: !13086)
!13101 = !DILocation(line: 554, column: 15, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13098, file: !12780, line: 552, column: 3)
!13103 = !DILocation(line: 557, column: 8, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13102, file: !12780, line: 557, column: 8)
!13105 = !DILocation(line: 557, column: 29, scope: !13104)
!13106 = !DILocation(line: 557, column: 8, scope: !13102)
!13107 = !DILocation(line: 560, column: 20, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13109, file: !12780, line: 560, column: 10)
!13109 = distinct !DILexicalBlock(scope: !13104, file: !12780, line: 558, column: 5)
!13110 = !DILocation(line: 560, column: 10, scope: !13109)
!13111 = !DILocation(line: 562, column: 9, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13108, file: !12780, line: 561, column: 7)
!13113 = !DILocation(line: 563, column: 7, scope: !13112)
!13114 = !DILocation(line: 566, column: 9, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13108, file: !12780, line: 565, column: 7)
!13116 = !DILocation(line: 570, column: 7, scope: !13109)
!13117 = !DILocation(line: 571, column: 7, scope: !13109)
!13118 = !DILocation(line: 571, column: 14, scope: !13109)
!13119 = !DILocation(line: 571, column: 35, scope: !13109)
!13120 = distinct !{!13120, !13117, !13121}
!13121 = !DILocation(line: 574, column: 7, scope: !13109)
!13122 = !DILocation(line: 578, column: 76, scope: !13102)
!13123 = !DILocation(line: 578, column: 103, scope: !13102)
!13124 = !DILocation(line: 579, column: 54, scope: !13102)
!13125 = !DILocation(line: 578, column: 5, scope: !13102)
!13126 = !DILocation(line: 582, column: 14, scope: !13102)
!13127 = !DILocation(line: 583, column: 3, scope: !13102)
!13128 = !DILocation(line: 0, scope: !13098)
!13129 = !DILocation(line: 590, column: 3, scope: !13086)
!13130 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8820, file: !8820, line: 2969, type: !6871, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!13131 = !DILocation(line: 2971, column: 11, scope: !13130)
!13132 = !DILocation(line: 2971, column: 44, scope: !13130)
!13133 = !DILocation(line: 2971, column: 3, scope: !13130)
!13134 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8820, file: !8820, line: 2929, type: !3220, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!13135 = !DILocation(line: 2931, column: 3, scope: !13134)
!13136 = !DILocation(line: 2932, column: 1, scope: !13134)
!13137 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8820, file: !8820, line: 2939, type: !3220, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!13138 = !DILocation(line: 2941, column: 3, scope: !13137)
!13139 = !DILocation(line: 2942, column: 1, scope: !13137)
!13140 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8820, file: !8820, line: 2949, type: !3220, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !461)
!13141 = !DILocation(line: 2951, column: 3, scope: !13140)
!13142 = !DILocation(line: 2952, column: 1, scope: !13140)
!13143 = distinct !DISubprogram(name: "z_device_state_init", scope: !13144, file: !13144, line: 23, type: !3220, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13145)
!13144 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13145 = !{!13146}
!13146 = !DILocalVariable(name: "dev", scope: !13143, file: !13144, line: 25, type: !13147)
!13147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13148, size: 32)
!13148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13149)
!13149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !13150)
!13150 = !{!13151, !13152, !13153, !13154, !13160, !13161}
!13151 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13149, file: !141, line: 380, baseType: !144, size: 32)
!13152 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13149, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!13153 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13149, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!13154 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13149, file: !141, line: 386, baseType: !13155, size: 32, offset: 96)
!13155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13156, size: 32)
!13156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !13157)
!13157 = !{!13158, !13159}
!13158 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13156, file: !141, line: 359, baseType: !154, size: 8)
!13159 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13156, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13160 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13149, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!13161 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13149, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!13162 = !DILocation(line: 0, scope: !13143)
!13163 = !DILocation(line: 31, column: 1, scope: !13143)
!13164 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13144, file: !13144, line: 33, type: !13165, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13167)
!13165 = !DISubroutineType(types: !13166)
!13166 = !{!13147, !144}
!13167 = !{!13168, !13169}
!13168 = !DILocalVariable(name: "name", arg: 1, scope: !13164, file: !13144, line: 33, type: !144)
!13169 = !DILocalVariable(name: "dev", scope: !13164, file: !13144, line: 35, type: !13147)
!13170 = !DILocation(line: 0, scope: !13164)
!13171 = !DILocation(line: 40, column: 12, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13164, file: !13144, line: 40, column: 6)
!13173 = !DILocation(line: 40, column: 21, scope: !13172)
!13174 = !DILocation(line: 40, column: 25, scope: !13172)
!13175 = !DILocation(line: 40, column: 33, scope: !13172)
!13176 = !DILocation(line: 40, column: 6, scope: !13164)
!13177 = !DILocation(line: 55, column: 2, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13164, file: !13144, line: 55, column: 2)
!13179 = !DILocation(line: 50, column: 7, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13181, file: !13144, line: 50, column: 7)
!13181 = distinct !DILexicalBlock(scope: !13182, file: !13144, line: 49, column: 57)
!13182 = distinct !DILexicalBlock(scope: !13183, file: !13144, line: 49, column: 2)
!13183 = distinct !DILexicalBlock(scope: !13164, file: !13144, line: 49, column: 2)
!13184 = !DILocation(line: 50, column: 30, scope: !13180)
!13185 = !DILocation(line: 50, column: 39, scope: !13180)
!13186 = !DILocation(line: 50, column: 44, scope: !13180)
!13187 = !DILocation(line: 50, column: 7, scope: !13181)
!13188 = !DILocation(line: 49, column: 53, scope: !13182)
!13189 = !DILocation(line: 49, column: 33, scope: !13182)
!13190 = !DILocation(line: 49, column: 2, scope: !13183)
!13191 = distinct !{!13191, !13190, !13192}
!13192 = !DILocation(line: 53, column: 2, scope: !13183)
!13193 = !DILocation(line: 56, column: 7, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13195, file: !13144, line: 56, column: 7)
!13195 = distinct !DILexicalBlock(scope: !13196, file: !13144, line: 55, column: 57)
!13196 = distinct !DILexicalBlock(scope: !13178, file: !13144, line: 55, column: 2)
!13197 = !DILocation(line: 56, column: 30, scope: !13194)
!13198 = !DILocation(line: 56, column: 52, scope: !13194)
!13199 = !DILocation(line: 56, column: 34, scope: !13194)
!13200 = !DILocation(line: 56, column: 58, scope: !13194)
!13201 = !DILocation(line: 56, column: 7, scope: !13195)
!13202 = !DILocation(line: 55, column: 53, scope: !13196)
!13203 = !DILocation(line: 55, column: 33, scope: !13196)
!13204 = distinct !{!13204, !13177, !13205}
!13205 = !DILocation(line: 59, column: 2, scope: !13178)
!13206 = !DILocation(line: 62, column: 1, scope: !13164)
!13207 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13144, file: !13144, line: 93, type: !13208, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13210)
!13208 = !DISubroutineType(types: !13209)
!13209 = !{!157, !13147}
!13210 = !{!13211}
!13211 = !DILocalVariable(name: "dev", arg: 1, scope: !13207, file: !13144, line: 93, type: !13147)
!13212 = !DILocation(line: 0, scope: !13207)
!13213 = !DILocation(line: 99, column: 10, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13207, file: !13144, line: 99, column: 6)
!13215 = !DILocation(line: 99, column: 6, scope: !13207)
!13216 = !DILocation(line: 103, column: 14, scope: !13207)
!13217 = !DILocation(line: 103, column: 21, scope: !13207)
!13218 = !DILocation(line: 103, column: 33, scope: !13207)
!13219 = !DILocation(line: 103, column: 49, scope: !13207)
!13220 = !DILocation(line: 103, column: 58, scope: !13207)
!13221 = !DILocation(line: 104, column: 1, scope: !13207)
!13222 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13144, file: !13144, line: 87, type: !13223, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13226)
!13223 = !DISubroutineType(types: !13224)
!13224 = !{!344, !13225}
!13225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13147, size: 32)
!13226 = !{!13227}
!13227 = !DILocalVariable(name: "devices", arg: 1, scope: !13222, file: !13144, line: 87, type: !13225)
!13228 = !DILocation(line: 0, scope: !13222)
!13229 = !DILocation(line: 89, column: 11, scope: !13222)
!13230 = !DILocation(line: 90, column: 2, scope: !13222)
!13231 = distinct !DISubprogram(name: "device_required_foreach", scope: !13144, file: !13144, line: 125, type: !13232, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13238)
!13232 = !DISubroutineType(types: !13233)
!13233 = !{!103, !13147, !13234, !102}
!13234 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !13235)
!13235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13236, size: 32)
!13236 = !DISubroutineType(types: !13237)
!13237 = !{!103, !13147, !102}
!13238 = !{!13239, !13240, !13241, !13242, !13243}
!13239 = !DILocalVariable(name: "dev", arg: 1, scope: !13231, file: !13144, line: 125, type: !13147)
!13240 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13231, file: !13144, line: 126, type: !13234)
!13241 = !DILocalVariable(name: "context", arg: 3, scope: !13231, file: !13144, line: 127, type: !102)
!13242 = !DILocalVariable(name: "handle_count", scope: !13231, file: !13144, line: 129, type: !344)
!13243 = !DILocalVariable(name: "handles", scope: !13231, file: !13144, line: 130, type: !160)
!13244 = !DILocation(line: 0, scope: !13231)
!13245 = !DILocation(line: 129, column: 2, scope: !13231)
!13246 = !DILocation(line: 129, column: 9, scope: !13231)
!13247 = !DILocation(line: 130, column: 35, scope: !13231)
!13248 = !DILocation(line: 132, column: 33, scope: !13231)
!13249 = !DILocation(line: 132, column: 9, scope: !13231)
!13250 = !DILocation(line: 133, column: 1, scope: !13231)
!13251 = !DILocation(line: 132, column: 2, scope: !13231)
!13252 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !13253, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13255)
!13253 = !DISubroutineType(types: !13254)
!13254 = !{!160, !13147, !2594}
!13255 = !{!13256, !13257, !13258, !13259}
!13256 = !DILocalVariable(name: "dev", arg: 1, scope: !13252, file: !141, line: 493, type: !13147)
!13257 = !DILocalVariable(name: "count", arg: 2, scope: !13252, file: !141, line: 493, type: !2594)
!13258 = !DILocalVariable(name: "rv", scope: !13252, file: !141, line: 495, type: !160)
!13259 = !DILocalVariable(name: "i", scope: !13260, file: !141, line: 498, type: !344)
!13260 = distinct !DILexicalBlock(scope: !13261, file: !141, line: 497, column: 18)
!13261 = distinct !DILexicalBlock(scope: !13252, file: !141, line: 497, column: 6)
!13262 = !DILocation(line: 0, scope: !13252)
!13263 = !DILocation(line: 495, column: 35, scope: !13252)
!13264 = !DILocation(line: 497, column: 9, scope: !13261)
!13265 = !DILocation(line: 497, column: 6, scope: !13252)
!13266 = !DILocation(line: 0, scope: !13260)
!13267 = !DILocation(line: 500, column: 11, scope: !13260)
!13268 = !DILocation(line: 500, column: 40, scope: !13260)
!13269 = !DILocation(line: 502, column: 4, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13260, file: !141, line: 501, column: 40)
!13271 = distinct !{!13271, !13272, !13273}
!13272 = !DILocation(line: 500, column: 3, scope: !13260)
!13273 = !DILocation(line: 503, column: 3, scope: !13260)
!13274 = !DILocation(line: 504, column: 10, scope: !13260)
!13275 = !DILocation(line: 505, column: 2, scope: !13260)
!13276 = !DILocation(line: 507, column: 2, scope: !13252)
!13277 = distinct !DISubprogram(name: "device_visitor", scope: !13144, file: !13144, line: 106, type: !13278, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13280)
!13278 = !DISubroutineType(types: !13279)
!13279 = !{!103, !160, !344, !13234, !102}
!13280 = !{!13281, !13282, !13283, !13284, !13285, !13287, !13290, !13291}
!13281 = !DILocalVariable(name: "handles", arg: 1, scope: !13277, file: !13144, line: 106, type: !160)
!13282 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13277, file: !13144, line: 107, type: !344)
!13283 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13277, file: !13144, line: 108, type: !13234)
!13284 = !DILocalVariable(name: "context", arg: 4, scope: !13277, file: !13144, line: 109, type: !102)
!13285 = !DILocalVariable(name: "i", scope: !13286, file: !13144, line: 112, type: !344)
!13286 = distinct !DILexicalBlock(scope: !13277, file: !13144, line: 112, column: 2)
!13287 = !DILocalVariable(name: "dh", scope: !13288, file: !13144, line: 113, type: !162)
!13288 = distinct !DILexicalBlock(scope: !13289, file: !13144, line: 112, column: 44)
!13289 = distinct !DILexicalBlock(scope: !13286, file: !13144, line: 112, column: 2)
!13290 = !DILocalVariable(name: "rdev", scope: !13288, file: !13144, line: 114, type: !13147)
!13291 = !DILocalVariable(name: "rc", scope: !13288, file: !13144, line: 115, type: !103)
!13292 = !DILocation(line: 0, scope: !13277)
!13293 = !DILocation(line: 0, scope: !13286)
!13294 = !DILocation(line: 112, column: 23, scope: !13289)
!13295 = !DILocation(line: 112, column: 2, scope: !13286)
!13296 = distinct !{!13296, !13295, !13297}
!13297 = !DILocation(line: 120, column: 2, scope: !13286)
!13298 = !DILocation(line: 113, column: 24, scope: !13288)
!13299 = !DILocation(line: 0, scope: !13288)
!13300 = !DILocation(line: 114, column: 31, scope: !13288)
!13301 = !DILocation(line: 115, column: 12, scope: !13288)
!13302 = !DILocation(line: 117, column: 10, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13288, file: !13144, line: 117, column: 7)
!13304 = !DILocation(line: 112, column: 39, scope: !13289)
!13305 = !DILocation(line: 123, column: 1, scope: !13277)
!13306 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !13307, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13309)
!13307 = !DISubroutineType(types: !13308)
!13308 = !{!13147, !162}
!13309 = !{!13310, !13311, !13312}
!13310 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13306, file: !141, line: 439, type: !162)
!13311 = !DILocalVariable(name: "dev", scope: !13306, file: !141, line: 443, type: !13147)
!13312 = !DILocalVariable(name: "numdev", scope: !13306, file: !141, line: 444, type: !344)
!13313 = !DILocation(line: 0, scope: !13306)
!13314 = !DILocation(line: 446, column: 7, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13306, file: !141, line: 446, column: 6)
!13316 = !DILocation(line: 446, column: 18, scope: !13315)
!13317 = !DILocation(line: 446, column: 23, scope: !13315)
!13318 = !DILocation(line: 450, column: 2, scope: !13306)
!13319 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13144, file: !13144, line: 135, type: !13232, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13320)
!13320 = !{!13321, !13322, !13323, !13324, !13325}
!13321 = !DILocalVariable(name: "dev", arg: 1, scope: !13319, file: !13144, line: 135, type: !13147)
!13322 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13319, file: !13144, line: 136, type: !13234)
!13323 = !DILocalVariable(name: "context", arg: 3, scope: !13319, file: !13144, line: 137, type: !102)
!13324 = !DILocalVariable(name: "handle_count", scope: !13319, file: !13144, line: 139, type: !344)
!13325 = !DILocalVariable(name: "handles", scope: !13319, file: !13144, line: 140, type: !160)
!13326 = !DILocation(line: 0, scope: !13319)
!13327 = !DILocation(line: 139, column: 2, scope: !13319)
!13328 = !DILocation(line: 139, column: 9, scope: !13319)
!13329 = !DILocation(line: 140, column: 35, scope: !13319)
!13330 = !DILocation(line: 142, column: 33, scope: !13319)
!13331 = !DILocation(line: 142, column: 9, scope: !13319)
!13332 = !DILocation(line: 143, column: 1, scope: !13319)
!13333 = !DILocation(line: 142, column: 2, scope: !13319)
!13334 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !13253, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13335)
!13335 = !{!13336, !13337, !13338, !13339, !13340}
!13336 = !DILocalVariable(name: "dev", arg: 1, scope: !13334, file: !141, line: 573, type: !13147)
!13337 = !DILocalVariable(name: "count", arg: 2, scope: !13334, file: !141, line: 573, type: !2594)
!13338 = !DILocalVariable(name: "rv", scope: !13334, file: !141, line: 575, type: !160)
!13339 = !DILocalVariable(name: "region", scope: !13334, file: !141, line: 576, type: !344)
!13340 = !DILocalVariable(name: "i", scope: !13334, file: !141, line: 577, type: !344)
!13341 = !DILocation(line: 0, scope: !13334)
!13342 = !DILocation(line: 575, column: 35, scope: !13334)
!13343 = !DILocation(line: 579, column: 9, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13334, file: !141, line: 579, column: 6)
!13345 = !DILocation(line: 579, column: 6, scope: !13334)
!13346 = !DILocation(line: 582, column: 8, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13348, file: !141, line: 582, column: 8)
!13348 = distinct !DILexicalBlock(scope: !13349, file: !141, line: 581, column: 23)
!13349 = distinct !DILexicalBlock(scope: !13344, file: !141, line: 579, column: 18)
!13350 = !DILocation(line: 582, column: 12, scope: !13347)
!13351 = !DILocation(line: 585, column: 6, scope: !13348)
!13352 = !DILocation(line: 0, scope: !13349)
!13353 = !DILocation(line: 581, column: 17, scope: !13349)
!13354 = !DILocation(line: 581, column: 3, scope: !13349)
!13355 = !DILocation(line: 588, column: 10, scope: !13349)
!13356 = !DILocation(line: 588, column: 16, scope: !13349)
!13357 = !DILocation(line: 589, column: 4, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13349, file: !141, line: 588, column: 39)
!13359 = !DILocation(line: 588, column: 3, scope: !13349)
!13360 = distinct !{!13360, !13359, !13361}
!13361 = !DILocation(line: 590, column: 3, scope: !13349)
!13362 = !DILocation(line: 591, column: 10, scope: !13349)
!13363 = !DILocation(line: 592, column: 2, scope: !13349)
!13364 = !DILocation(line: 575, column: 25, scope: !13334)
!13365 = !DILocation(line: 594, column: 2, scope: !13334)
!13366 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1927, file: !1927, line: 49, type: !5962, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1924, retainedNodes: !461)
!13367 = !DILocation(line: 51, column: 10, scope: !13366)
!13368 = !DILocation(line: 51, column: 20, scope: !13366)
!13369 = !DILocation(line: 51, column: 2, scope: !13366)
!13370 = distinct !DISubprogram(name: "coredump", scope: !3187, file: !3187, line: 209, type: !13371, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13517)
!13371 = !DISubroutineType(types: !13372)
!13372 = !{null, !32, !13373, !13417}
!13373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13374, size: 32)
!13374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13375)
!13375 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2801, line: 141, baseType: !13376)
!13376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2801, line: 97, size: 256, elements: !13377)
!13377 = !{!13378}
!13378 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13376, file: !2801, line: 107, baseType: !13379, size: 256)
!13379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2801, line: 98, size: 256, elements: !13380)
!13380 = !{!13381, !13386, !13391, !13396, !13401, !13406, !13411, !13416}
!13381 = !DIDerivedType(tag: DW_TAG_member, scope: !13379, file: !2801, line: 99, baseType: !13382, size: 32)
!13382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13379, file: !2801, line: 99, size: 32, elements: !13383)
!13383 = !{!13384, !13385}
!13384 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13382, file: !2801, line: 99, baseType: !121, size: 32)
!13385 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13382, file: !2801, line: 99, baseType: !121, size: 32)
!13386 = !DIDerivedType(tag: DW_TAG_member, scope: !13379, file: !2801, line: 100, baseType: !13387, size: 32, offset: 32)
!13387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13379, file: !2801, line: 100, size: 32, elements: !13388)
!13388 = !{!13389, !13390}
!13389 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13387, file: !2801, line: 100, baseType: !121, size: 32)
!13390 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13387, file: !2801, line: 100, baseType: !121, size: 32)
!13391 = !DIDerivedType(tag: DW_TAG_member, scope: !13379, file: !2801, line: 101, baseType: !13392, size: 32, offset: 64)
!13392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13379, file: !2801, line: 101, size: 32, elements: !13393)
!13393 = !{!13394, !13395}
!13394 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13392, file: !2801, line: 101, baseType: !121, size: 32)
!13395 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13392, file: !2801, line: 101, baseType: !121, size: 32)
!13396 = !DIDerivedType(tag: DW_TAG_member, scope: !13379, file: !2801, line: 102, baseType: !13397, size: 32, offset: 96)
!13397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13379, file: !2801, line: 102, size: 32, elements: !13398)
!13398 = !{!13399, !13400}
!13399 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13397, file: !2801, line: 102, baseType: !121, size: 32)
!13400 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13397, file: !2801, line: 102, baseType: !121, size: 32)
!13401 = !DIDerivedType(tag: DW_TAG_member, scope: !13379, file: !2801, line: 103, baseType: !13402, size: 32, offset: 128)
!13402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13379, file: !2801, line: 103, size: 32, elements: !13403)
!13403 = !{!13404, !13405}
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13402, file: !2801, line: 103, baseType: !121, size: 32)
!13405 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13402, file: !2801, line: 103, baseType: !121, size: 32)
!13406 = !DIDerivedType(tag: DW_TAG_member, scope: !13379, file: !2801, line: 104, baseType: !13407, size: 32, offset: 160)
!13407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13379, file: !2801, line: 104, size: 32, elements: !13408)
!13408 = !{!13409, !13410}
!13409 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13407, file: !2801, line: 104, baseType: !121, size: 32)
!13410 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13407, file: !2801, line: 104, baseType: !121, size: 32)
!13411 = !DIDerivedType(tag: DW_TAG_member, scope: !13379, file: !2801, line: 105, baseType: !13412, size: 32, offset: 192)
!13412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13379, file: !2801, line: 105, size: 32, elements: !13413)
!13413 = !{!13414, !13415}
!13414 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13412, file: !2801, line: 105, baseType: !121, size: 32)
!13415 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13412, file: !2801, line: 105, baseType: !121, size: 32)
!13416 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13379, file: !2801, line: 106, baseType: !121, size: 32, offset: 224)
!13417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13418, size: 32)
!13418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !13419)
!13419 = !{!13420, !13478, !13490, !13491, !13492, !13493, !13499, !13512}
!13420 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13418, file: !355, line: 247, baseType: !13421, size: 384)
!13421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !13422)
!13422 = !{!13423, !13447, !13454, !13455, !13456, !13465, !13466, !13467}
!13423 = !DIDerivedType(tag: DW_TAG_member, scope: !13421, file: !355, line: 60, baseType: !13424, size: 64)
!13424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13421, file: !355, line: 60, size: 64, elements: !13425)
!13425 = !{!13426, !13441}
!13426 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13424, file: !355, line: 61, baseType: !13427, size: 64)
!13427 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !309, line: 49, baseType: !13428)
!13428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !309, line: 37, size: 64, elements: !13429)
!13429 = !{!13430, !13436}
!13430 = !DIDerivedType(tag: DW_TAG_member, scope: !13428, file: !309, line: 38, baseType: !13431, size: 32)
!13431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13428, file: !309, line: 38, size: 32, elements: !13432)
!13432 = !{!13433, !13435}
!13433 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13431, file: !309, line: 39, baseType: !13434, size: 32)
!13434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13428, size: 32)
!13435 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13431, file: !309, line: 40, baseType: !13434, size: 32)
!13436 = !DIDerivedType(tag: DW_TAG_member, scope: !13428, file: !309, line: 42, baseType: !13437, size: 32, offset: 32)
!13437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13428, file: !309, line: 42, size: 32, elements: !13438)
!13438 = !{!13439, !13440}
!13439 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13437, file: !309, line: 43, baseType: !13434, size: 32)
!13440 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13437, file: !309, line: 44, baseType: !13434, size: 32)
!13441 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13424, file: !355, line: 62, baseType: !13442, size: 64)
!13442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !13443)
!13443 = !{!13444}
!13444 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13442, file: !380, line: 50, baseType: !13445, size: 64)
!13445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13446, size: 64, elements: !385)
!13446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13442, size: 32)
!13447 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13421, file: !355, line: 68, baseType: !13448, size: 32, offset: 64)
!13448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13449, size: 32)
!13449 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !13450)
!13450 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !13451)
!13451 = !{!13452}
!13452 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13450, file: !304, line: 232, baseType: !13453, size: 64)
!13453 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !13428)
!13454 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13421, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!13455 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13421, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!13456 = !DIDerivedType(tag: DW_TAG_member, scope: !13421, file: !355, line: 90, baseType: !13457, size: 16, offset: 112)
!13457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13421, file: !355, line: 90, size: 16, elements: !13458)
!13458 = !{!13459, !13464}
!13459 = !DIDerivedType(tag: DW_TAG_member, scope: !13457, file: !355, line: 91, baseType: !13460, size: 16)
!13460 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13457, file: !355, line: 91, size: 16, elements: !13461)
!13461 = !{!13462, !13463}
!13462 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13460, file: !355, line: 96, baseType: !403, size: 8)
!13463 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13460, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!13464 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13457, file: !355, line: 100, baseType: !328, size: 16)
!13465 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13421, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!13466 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13421, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!13467 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13421, file: !355, line: 131, baseType: !13468, size: 192, offset: 192)
!13468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !13469)
!13469 = !{!13470, !13471, !13477}
!13470 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13468, file: !304, line: 245, baseType: !13427, size: 64)
!13471 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13468, file: !304, line: 246, baseType: !13472, size: 32, offset: 64)
!13472 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !13473)
!13473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13474, size: 32)
!13474 = !DISubroutineType(types: !13475)
!13475 = !{null, !13476}
!13476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13468, size: 32)
!13477 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13468, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!13478 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13418, file: !355, line: 250, baseType: !13479, size: 288, offset: 384)
!13479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !13480)
!13480 = !{!13481, !13482, !13483, !13484, !13485, !13486, !13487, !13488, !13489}
!13481 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13479, file: !424, line: 26, baseType: !121, size: 32)
!13482 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13479, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!13483 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13479, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!13484 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13479, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!13485 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13479, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13479, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!13487 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13479, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!13488 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13479, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!13489 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13479, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!13490 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13418, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13418, file: !355, line: 256, baseType: !13449, size: 64, offset: 704)
!13492 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13418, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!13493 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13418, file: !355, line: 300, baseType: !13494, size: 96, offset: 800)
!13494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !13495)
!13495 = !{!13496, !13497, !13498}
!13496 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13494, file: !355, line: 153, baseType: !22, size: 32)
!13497 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13494, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!13498 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13494, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!13499 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13418, file: !355, line: 325, baseType: !13500, size: 32, offset: 896)
!13500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13501, size: 32)
!13501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !13502)
!13502 = !{!13503, !13509, !13510}
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13501, file: !300, line: 5074, baseType: !13504, size: 96)
!13504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !13505)
!13505 = !{!13506, !13507, !13508}
!13506 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13504, file: !450, line: 57, baseType: !453, size: 32)
!13507 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13504, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!13508 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13504, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!13509 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13501, file: !300, line: 5075, baseType: !13449, size: 64, offset: 96)
!13510 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13501, file: !300, line: 5076, baseType: !13511, offset: 160)
!13511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!13512 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13418, file: !355, line: 343, baseType: !13513, size: 64, offset: 928)
!13513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !13514)
!13514 = !{!13515, !13516}
!13515 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13513, file: !424, line: 63, baseType: !121, size: 32)
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13513, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!13517 = !{!13518, !13519, !13520}
!13518 = !DILocalVariable(name: "reason", arg: 1, scope: !13370, file: !3187, line: 209, type: !32)
!13519 = !DILocalVariable(name: "esf", arg: 2, scope: !13370, file: !3187, line: 209, type: !13373)
!13520 = !DILocalVariable(name: "thread", arg: 3, scope: !13370, file: !3187, line: 210, type: !13417)
!13521 = !DILocation(line: 0, scope: !13370)
!13522 = !DILocation(line: 212, column: 1, scope: !13370)
!13523 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3187, file: !3187, line: 214, type: !13524, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13526)
!13524 = !DISubroutineType(types: !13525)
!13525 = !{null, !22, !22}
!13526 = !{!13527, !13528}
!13527 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13523, file: !3187, line: 214, type: !22)
!13528 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13523, file: !3187, line: 214, type: !22)
!13529 = !DILocation(line: 0, scope: !13523)
!13530 = !DILocation(line: 216, column: 1, scope: !13523)
!13531 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3187, file: !3187, line: 218, type: !13532, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13534)
!13532 = !DISubroutineType(types: !13533)
!13533 = !{null, !261, !344}
!13534 = !{!13535, !13536}
!13535 = !DILocalVariable(name: "buf", arg: 1, scope: !13531, file: !3187, line: 218, type: !261)
!13536 = !DILocalVariable(name: "buflen", arg: 2, scope: !13531, file: !3187, line: 218, type: !344)
!13537 = !DILocation(line: 0, scope: !13531)
!13538 = !DILocation(line: 220, column: 1, scope: !13531)
!13539 = distinct !DISubprogram(name: "coredump_query", scope: !3187, file: !3187, line: 222, type: !13540, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13542)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{!103, !3186, !102}
!13542 = !{!13543, !13544}
!13543 = !DILocalVariable(name: "query_id", arg: 1, scope: !13539, file: !3187, line: 222, type: !3186)
!13544 = !DILocalVariable(name: "arg", arg: 2, scope: !13539, file: !3187, line: 222, type: !102)
!13545 = !DILocation(line: 0, scope: !13539)
!13546 = !DILocation(line: 224, column: 2, scope: !13539)
!13547 = distinct !DISubprogram(name: "coredump_cmd", scope: !3187, file: !3187, line: 227, type: !13548, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13550)
!13548 = !DISubroutineType(types: !13549)
!13549 = !{!103, !3193, !102}
!13550 = !{!13551, !13552}
!13551 = !DILocalVariable(name: "query_id", arg: 1, scope: !13547, file: !3187, line: 227, type: !3193)
!13552 = !DILocalVariable(name: "arg", arg: 2, scope: !13547, file: !3187, line: 227, type: !102)
!13553 = !DILocation(line: 0, scope: !13547)
!13554 = !DILocation(line: 229, column: 2, scope: !13547)
!13555 = distinct !DISubprogram(name: "arch_system_halt", scope: !13556, file: !13556, line: 23, type: !5781, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13557)
!13556 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13557 = !{!13558}
!13558 = !DILocalVariable(name: "reason", arg: 1, scope: !13555, file: !13556, line: 23, type: !32)
!13559 = !DILocation(line: 0, scope: !13555)
!13560 = !DILocation(line: 55, column: 2, scope: !13561, inlinedAt: !13565)
!13561 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5770, file: !5770, line: 42, type: !5771, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13562)
!13562 = !{!13563, !13564}
!13563 = !DILocalVariable(name: "key", scope: !13561, file: !5770, line: 44, type: !32)
!13564 = !DILocalVariable(name: "tmp", scope: !13561, file: !5770, line: 53, type: !32)
!13565 = distinct !DILocation(line: 31, column: 8, scope: !13555)
!13566 = !{i64 1949930}
!13567 = !DILocation(line: 0, scope: !13561, inlinedAt: !13565)
!13568 = !DILocation(line: 32, column: 2, scope: !13555)
!13569 = !DILocation(line: 32, column: 2, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !13556, line: 32, column: 2)
!13571 = distinct !DILexicalBlock(scope: !13555, file: !13556, line: 32, column: 2)
!13572 = distinct !{!13572, !13573, !13574}
!13573 = !DILocation(line: 32, column: 2, scope: !13571)
!13574 = !DILocation(line: 34, column: 2, scope: !13571)
!13575 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13556, file: !13556, line: 39, type: !13576, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13578)
!13576 = !DISubroutineType(types: !13577)
!13577 = !{null, !32, !13373}
!13578 = !{!13579, !13580}
!13579 = !DILocalVariable(name: "reason", arg: 1, scope: !13575, file: !13556, line: 39, type: !32)
!13580 = !DILocalVariable(name: "esf", arg: 2, scope: !13575, file: !13556, line: 40, type: !13373)
!13581 = !DILocation(line: 0, scope: !13575)
!13582 = !DILocation(line: 46, column: 2, scope: !13575)
!13583 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13556, file: !13556, line: 81, type: !5781, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13584)
!13584 = !{!13585}
!13585 = !DILocalVariable(name: "reason", arg: 1, scope: !13583, file: !13556, line: 81, type: !32)
!13586 = !DILocation(line: 0, scope: !13583)
!13587 = !DILocation(line: 83, column: 2, scope: !13583)
!13588 = distinct !DISubprogram(name: "z_fatal_error", scope: !13556, file: !13556, line: 96, type: !13576, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13589)
!13589 = !{!13590, !13591, !13592, !13593}
!13590 = !DILocalVariable(name: "reason", arg: 1, scope: !13588, file: !13556, line: 96, type: !32)
!13591 = !DILocalVariable(name: "esf", arg: 2, scope: !13588, file: !13556, line: 96, type: !13373)
!13592 = !DILocalVariable(name: "key", scope: !13588, file: !13556, line: 102, type: !32)
!13593 = !DILocalVariable(name: "thread", scope: !13588, file: !13556, line: 103, type: !13417)
!13594 = !DILocation(line: 0, scope: !13588)
!13595 = !DILocation(line: 55, column: 2, scope: !13561, inlinedAt: !13596)
!13596 = distinct !DILocation(line: 102, column: 21, scope: !13588)
!13597 = !DILocation(line: 0, scope: !13561, inlinedAt: !13596)
!13598 = !DILocation(line: 119, column: 11, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13588, file: !13556, line: 119, column: 6)
!13600 = !DILocation(line: 119, column: 20, scope: !13599)
!13601 = !DILocation(line: 131, column: 2, scope: !13588)
!13602 = !DILocation(line: 151, column: 7, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13604, file: !13556, line: 146, column: 32)
!13604 = distinct !DILexicalBlock(scope: !13588, file: !13556, line: 146, column: 6)
!13605 = !DILocation(line: 151, column: 21, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13603, file: !13556, line: 151, column: 7)
!13607 = !DILocation(line: 104, column: 4, scope: !13588)
!13608 = !DILocalVariable(name: "key", arg: 1, scope: !13609, file: !5770, line: 84, type: !32)
!13609 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5770, file: !5770, line: 84, type: !5781, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13610)
!13610 = !{!13608}
!13611 = !DILocation(line: 0, scope: !13609, inlinedAt: !13612)
!13612 = distinct !DILocation(line: 186, column: 2, scope: !13588)
!13613 = !DILocation(line: 95, column: 2, scope: !13609, inlinedAt: !13612)
!13614 = !{i64 1950747}
!13615 = !DILocation(line: 189, column: 3, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13617, file: !13556, line: 188, column: 41)
!13617 = distinct !DILexicalBlock(scope: !13588, file: !13556, line: 188, column: 6)
!13618 = !DILocation(line: 191, column: 1, scope: !13588)
!13619 = distinct !DISubprogram(name: "k_current_get", scope: !300, file: !300, line: 530, type: !13620, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !461)
!13620 = !DISubroutineType(types: !13621)
!13621 = !{!13622}
!13622 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !13417)
!13623 = !DILocation(line: 535, column: 9, scope: !13619)
!13624 = !DILocation(line: 535, column: 2, scope: !13619)
!13625 = distinct !DISubprogram(name: "k_thread_abort", scope: !3653, file: !3653, line: 188, type: !13626, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !13628)
!13626 = !DISubroutineType(types: !13627)
!13627 = !{null, !13622}
!13628 = !{!13629}
!13629 = !DILocalVariable(name: "thread", arg: 1, scope: !13625, file: !3653, line: 188, type: !13622)
!13630 = !DILocation(line: 0, scope: !13625)
!13631 = !DILocation(line: 197, column: 2, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13625, file: !3653, line: 197, column: 2)
!13633 = !{i64 2154064970}
!13634 = !DILocation(line: 198, column: 2, scope: !13625)
!13635 = !DILocation(line: 199, column: 1, scope: !13625)
!13636 = distinct !DISubprogram(name: "z_current_get", scope: !3653, file: !3653, line: 173, type: !13620, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3183, retainedNodes: !461)
!13637 = !DILocation(line: 180, column: 2, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13636, file: !3653, line: 180, column: 2)
!13639 = !{i64 2154064902}
!13640 = !DILocation(line: 181, column: 9, scope: !13636)
!13641 = !DILocation(line: 181, column: 2, scope: !13636)
!13642 = distinct !DISubprogram(name: "z_early_memset", scope: !1934, file: !1934, line: 108, type: !13643, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13645)
!13643 = !DISubroutineType(types: !13644)
!13644 = !{null, !102, !103, !344}
!13645 = !{!13646, !13647, !13648}
!13646 = !DILocalVariable(name: "dst", arg: 1, scope: !13642, file: !1934, line: 108, type: !102)
!13647 = !DILocalVariable(name: "c", arg: 2, scope: !13642, file: !1934, line: 108, type: !103)
!13648 = !DILocalVariable(name: "n", arg: 3, scope: !13642, file: !1934, line: 108, type: !344)
!13649 = !DILocation(line: 0, scope: !13642)
!13650 = !DILocation(line: 110, column: 9, scope: !13642)
!13651 = !DILocation(line: 111, column: 1, scope: !13642)
!13652 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1934, file: !1934, line: 121, type: !13653, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13655)
!13653 = !DISubroutineType(types: !13654)
!13654 = !{null, !102, !13, !344}
!13655 = !{!13656, !13657, !13658}
!13656 = !DILocalVariable(name: "dst", arg: 1, scope: !13652, file: !1934, line: 121, type: !102)
!13657 = !DILocalVariable(name: "src", arg: 2, scope: !13652, file: !1934, line: 121, type: !13)
!13658 = !DILocalVariable(name: "n", arg: 3, scope: !13652, file: !1934, line: 121, type: !344)
!13659 = !DILocation(line: 0, scope: !13652)
!13660 = !DILocation(line: 123, column: 9, scope: !13652)
!13661 = !DILocation(line: 124, column: 1, scope: !13652)
!13662 = distinct !DISubprogram(name: "z_bss_zero", scope: !1934, file: !1934, line: 132, type: !3220, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !461)
!13663 = !DILocation(line: 143, column: 2, scope: !13662)
!13664 = !DILocation(line: 168, column: 1, scope: !13662)
!13665 = distinct !DISubprogram(name: "z_init_cpu", scope: !1934, file: !1934, line: 372, type: !8432, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13666)
!13666 = !{!13667}
!13667 = !DILocalVariable(name: "id", arg: 1, scope: !13665, file: !1934, line: 372, type: !103)
!13668 = !DILocation(line: 0, scope: !13665)
!13669 = !DILocation(line: 374, column: 2, scope: !13665)
!13670 = !DILocation(line: 375, column: 34, scope: !13665)
!13671 = !DILocation(line: 375, column: 19, scope: !13665)
!13672 = !DILocation(line: 375, column: 31, scope: !13665)
!13673 = !DILocation(line: 376, column: 24, scope: !13665)
!13674 = !DILocation(line: 376, column: 19, scope: !13665)
!13675 = !DILocation(line: 376, column: 22, scope: !13665)
!13676 = !DILocation(line: 378, column: 26, scope: !13665)
!13677 = !DILocation(line: 378, column: 4, scope: !13665)
!13678 = !DILocation(line: 378, column: 50, scope: !13665)
!13679 = !DILocation(line: 377, column: 19, scope: !13665)
!13680 = !DILocation(line: 377, column: 29, scope: !13665)
!13681 = !DILocation(line: 384, column: 1, scope: !13665)
!13682 = distinct !DISubprogram(name: "init_idle_thread", scope: !1934, file: !1934, line: 343, type: !8432, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13683)
!13683 = !{!13684, !13685, !13686, !13689}
!13684 = !DILocalVariable(name: "i", arg: 1, scope: !13682, file: !1934, line: 343, type: !103)
!13685 = !DILocalVariable(name: "thread", scope: !13682, file: !1934, line: 345, type: !2026)
!13686 = !DILocalVariable(name: "stack", scope: !13682, file: !1934, line: 346, type: !13687)
!13687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13688, size: 32)
!13688 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3532, line: 44, baseType: !2140)
!13689 = !DILocalVariable(name: "tname", scope: !13682, file: !1934, line: 358, type: !1051)
!13690 = !DILocation(line: 0, scope: !13682)
!13691 = !DILocation(line: 345, column: 29, scope: !13682)
!13692 = !DILocation(line: 346, column: 28, scope: !13682)
!13693 = !DILocation(line: 362, column: 37, scope: !13682)
!13694 = !DILocation(line: 362, column: 36, scope: !13682)
!13695 = !DILocation(line: 361, column: 2, scope: !13682)
!13696 = !DILocation(line: 365, column: 2, scope: !13682)
!13697 = !DILocation(line: 370, column: 1, scope: !13682)
!13698 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2141, file: !2141, line: 331, type: !13699, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13701)
!13699 = !DISubroutineType(types: !13700)
!13700 = !{!1051, !13687}
!13701 = !{!13702}
!13702 = !DILocalVariable(name: "sym", arg: 1, scope: !13698, file: !2141, line: 331, type: !13687)
!13703 = !DILocation(line: 0, scope: !13698)
!13704 = !DILocation(line: 333, column: 21, scope: !13698)
!13705 = !DILocation(line: 333, column: 2, scope: !13698)
!13706 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13707, file: !13707, line: 155, type: !13708, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13710)
!13707 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13708 = !DISubroutineType(types: !13709)
!13709 = !{null, !2026}
!13710 = !{!13711}
!13711 = !DILocalVariable(name: "thread", arg: 1, scope: !13706, file: !13707, line: 155, type: !2026)
!13712 = !DILocation(line: 0, scope: !13706)
!13713 = !DILocation(line: 157, column: 15, scope: !13706)
!13714 = !DILocation(line: 157, column: 28, scope: !13706)
!13715 = !DILocation(line: 158, column: 1, scope: !13706)
!13716 = distinct !DISubprogram(name: "z_cstart", scope: !1934, file: !1934, line: 501, type: !3220, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13717)
!13717 = !{!13718}
!13718 = !DILocalVariable(name: "dummy_thread", scope: !13716, file: !1934, line: 518, type: !2027)
!13719 = !DILocation(line: 507, column: 2, scope: !13716)
!13720 = !DILocation(line: 43, column: 14, scope: !13721, inlinedAt: !13725)
!13721 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13722, file: !13722, line: 40, type: !3220, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13723)
!13722 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13723 = !{!13724}
!13724 = !DILocalVariable(name: "msp", scope: !13721, file: !13722, line: 42, type: !121)
!13725 = distinct !DILocation(line: 44, column: 2, scope: !13726, inlinedAt: !13728)
!13726 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13727, file: !13727, line: 42, type: !3220, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !461)
!13727 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13728 = distinct !DILocation(line: 510, column: 2, scope: !13716)
!13729 = !DILocation(line: 43, column: 3, scope: !13721, inlinedAt: !13725)
!13730 = !DILocation(line: 43, column: 60, scope: !13721, inlinedAt: !13725)
!13731 = !DILocation(line: 0, scope: !13721, inlinedAt: !13725)
!13732 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13733, file: !6790, line: 1153, type: !121)
!13733 = distinct !DISubprogram(name: "__set_MSP", scope: !6790, file: !6790, line: 1153, type: !6881, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13734)
!13734 = !{!13732}
!13735 = !DILocation(line: 0, scope: !13733, inlinedAt: !13736)
!13736 = distinct !DILocation(line: 46, column: 2, scope: !13721, inlinedAt: !13725)
!13737 = !DILocation(line: 1155, column: 3, scope: !13733, inlinedAt: !13736)
!13738 = !{i64 2847174}
!13739 = !DILocation(line: 62, column: 11, scope: !13721, inlinedAt: !13725)
!13740 = !DILocation(line: 102, column: 2, scope: !13741, inlinedAt: !13742)
!13741 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7584, file: !7584, line: 97, type: !3220, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !461)
!13742 = distinct !DILocation(line: 45, column: 2, scope: !13726, inlinedAt: !13728)
!13743 = !DILocation(line: 108, column: 2, scope: !13741, inlinedAt: !13742)
!13744 = !DILocation(line: 112, column: 2, scope: !13741, inlinedAt: !13742)
!13745 = !DILocation(line: 113, column: 2, scope: !13741, inlinedAt: !13742)
!13746 = !DILocation(line: 114, column: 2, scope: !13741, inlinedAt: !13742)
!13747 = !DILocation(line: 116, column: 2, scope: !13741, inlinedAt: !13742)
!13748 = !DILocation(line: 123, column: 13, scope: !13741, inlinedAt: !13742)
!13749 = !DILocation(line: 46, column: 2, scope: !13726, inlinedAt: !13728)
!13750 = !DILocation(line: 47, column: 2, scope: !13726, inlinedAt: !13728)
!13751 = !DILocation(line: 174, column: 12, scope: !13752, inlinedAt: !13753)
!13752 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7584, file: !7584, line: 169, type: !3220, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !461)
!13753 = distinct !DILocation(line: 48, column: 2, scope: !13726, inlinedAt: !13728)
!13754 = !DILocation(line: 179, column: 12, scope: !13752, inlinedAt: !13753)
!13755 = !DILocation(line: 50, column: 2, scope: !13726, inlinedAt: !13728)
!13756 = !DILocation(line: 57, column: 2, scope: !13726, inlinedAt: !13728)
!13757 = !DILocation(line: 518, column: 2, scope: !13716)
!13758 = !DILocation(line: 518, column: 18, scope: !13716)
!13759 = !DILocation(line: 520, column: 2, scope: !13716)
!13760 = !DILocation(line: 523, column: 2, scope: !13716)
!13761 = !DILocation(line: 526, column: 2, scope: !13716)
!13762 = !DILocation(line: 527, column: 2, scope: !13716)
!13763 = !DILocation(line: 543, column: 24, scope: !13716)
!13764 = !DILocation(line: 543, column: 2, scope: !13716)
!13765 = !DILocation(line: 0, scope: !2160)
!13766 = !DILocation(line: 246, column: 15, scope: !2178)
!13767 = !DILocation(line: 246, column: 36, scope: !2177)
!13768 = !DILocation(line: 246, column: 2, scope: !2178)
!13769 = !DILocation(line: 247, column: 37, scope: !2176)
!13770 = !DILocation(line: 0, scope: !2176)
!13771 = !DILocation(line: 248, column: 19, scope: !2176)
!13772 = !DILocation(line: 248, column: 12, scope: !2176)
!13773 = !DILocation(line: 250, column: 11, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !2176, file: !1934, line: 250, column: 7)
!13775 = !DILocation(line: 250, column: 7, scope: !2176)
!13776 = !DILocation(line: 254, column: 11, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13778, file: !1934, line: 254, column: 8)
!13778 = distinct !DILexicalBlock(scope: !13774, file: !1934, line: 250, column: 20)
!13779 = !DILocation(line: 254, column: 8, scope: !13778)
!13780 = !DILocation(line: 255, column: 9, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13777, file: !1934, line: 254, column: 17)
!13782 = !DILocation(line: 258, column: 9, scope: !13781)
!13783 = !DILocation(line: 261, column: 28, scope: !13781)
!13784 = !DILocation(line: 261, column: 10, scope: !13781)
!13785 = !DILocation(line: 261, column: 17, scope: !13781)
!13786 = !DILocation(line: 261, column: 26, scope: !13781)
!13787 = !DILocation(line: 262, column: 4, scope: !13781)
!13788 = !DILocation(line: 263, column: 9, scope: !13778)
!13789 = !DILocation(line: 263, column: 16, scope: !13778)
!13790 = !DILocation(line: 263, column: 28, scope: !13778)
!13791 = !DILocation(line: 264, column: 3, scope: !13778)
!13792 = !DILocation(line: 246, column: 60, scope: !2177)
!13793 = distinct !{!13793, !13768, !13794}
!13794 = !DILocation(line: 265, column: 2, scope: !2178)
!13795 = !DILocation(line: 266, column: 1, scope: !2160)
!13796 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !495, file: !495, line: 1814, type: !6824, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13797)
!13797 = !{!13798, !13799}
!13798 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13796, file: !495, line: 1814, type: !730)
!13799 = !DILocalVariable(name: "priority", arg: 2, scope: !13796, file: !495, line: 1814, type: !121)
!13800 = !DILocation(line: 0, scope: !13796)
!13801 = !DILocation(line: 1822, column: 48, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13803, file: !495, line: 1821, column: 3)
!13803 = distinct !DILexicalBlock(scope: !13796, file: !495, line: 1816, column: 7)
!13804 = !DILocation(line: 1822, column: 32, scope: !13802)
!13805 = !DILocation(line: 1822, column: 40, scope: !13802)
!13806 = !DILocation(line: 1822, column: 5, scope: !13802)
!13807 = !DILocation(line: 1822, column: 46, scope: !13802)
!13808 = !DILocation(line: 1824, column: 1, scope: !13796)
!13809 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13727, file: !13727, line: 32, type: !3220, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!13810 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13811, file: !13811, line: 215, type: !13708, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13812)
!13811 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13812 = !{!13813}
!13813 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13810, file: !13811, line: 215, type: !2026)
!13814 = !DILocation(line: 0, scope: !13810)
!13815 = !DILocation(line: 217, column: 21, scope: !13810)
!13816 = !DILocation(line: 217, column: 34, scope: !13810)
!13817 = !DILocation(line: 221, column: 21, scope: !13810)
!13818 = !DILocation(line: 221, column: 34, scope: !13810)
!13819 = !DILocation(line: 223, column: 27, scope: !13810)
!13820 = !DILocation(line: 223, column: 33, scope: !13810)
!13821 = !DILocation(line: 224, column: 27, scope: !13810)
!13822 = !DILocation(line: 224, column: 32, scope: !13810)
!13823 = !DILocation(line: 232, column: 16, scope: !13810)
!13824 = !DILocation(line: 232, column: 30, scope: !13810)
!13825 = !DILocation(line: 239, column: 24, scope: !13810)
!13826 = !DILocation(line: 240, column: 1, scope: !13810)
!13827 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1934, file: !1934, line: 399, type: !13828, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13830)
!13828 = !DISubroutineType(types: !13829)
!13829 = !{!1051}
!13830 = !{!13831}
!13831 = !DILocalVariable(name: "stack_ptr", scope: !13827, file: !1934, line: 401, type: !1051)
!13832 = !DILocation(line: 404, column: 2, scope: !13827)
!13833 = !DILocation(line: 416, column: 24, scope: !13827)
!13834 = !DILocation(line: 418, column: 14, scope: !13827)
!13835 = !DILocation(line: 0, scope: !13827)
!13836 = !DILocation(line: 423, column: 2, scope: !13827)
!13837 = !DILocation(line: 424, column: 2, scope: !13827)
!13838 = !DILocation(line: 426, column: 2, scope: !13827)
!13839 = !DILocation(line: 428, column: 2, scope: !13827)
!13840 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1934, file: !1934, line: 432, type: !13841, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13843)
!13841 = !DISubroutineType(types: !13842)
!13842 = !{null, !1051}
!13843 = !{!13844}
!13844 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13840, file: !1934, line: 432, type: !1051)
!13845 = !DILocation(line: 0, scope: !13840)
!13846 = !DILocation(line: 435, column: 2, scope: !13840)
!13847 = !DILocation(line: 445, column: 2, scope: !13840)
!13848 = distinct !DISubprogram(name: "bg_thread_main", scope: !1934, file: !1934, line: 277, type: !3534, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !13849)
!13849 = !{!13850, !13851, !13852}
!13850 = !DILocalVariable(name: "unused1", arg: 1, scope: !13848, file: !1934, line: 277, type: !102)
!13851 = !DILocalVariable(name: "unused2", arg: 2, scope: !13848, file: !1934, line: 277, type: !102)
!13852 = !DILocalVariable(name: "unused3", arg: 3, scope: !13848, file: !1934, line: 277, type: !102)
!13853 = !DILocation(line: 0, scope: !13848)
!13854 = !DILocation(line: 291, column: 20, scope: !13848)
!13855 = !DILocation(line: 293, column: 2, scope: !13848)
!13856 = !DILocation(line: 297, column: 2, scope: !13848)
!13857 = !DILocation(line: 305, column: 2, scope: !13848)
!13858 = !DILocation(line: 307, column: 2, scope: !13848)
!13859 = !DILocation(line: 330, column: 8, scope: !13848)
!13860 = !DILocation(line: 333, column: 34, scope: !13848)
!13861 = !DILocation(line: 339, column: 1, scope: !13848)
!13862 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2189, file: !2189, line: 45, type: !13863, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !13871)
!13863 = !DISubroutineType(types: !13864)
!13864 = !{null, !13865, !102}
!13865 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !300, line: 103, baseType: !13866)
!13866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13867, size: 32)
!13867 = !DISubroutineType(types: !13868)
!13868 = !{null, !13869, !102}
!13869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13870, size: 32)
!13870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2194)
!13871 = !{!13872, !13873}
!13872 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13862, file: !2189, line: 45, type: !13865)
!13873 = !DILocalVariable(name: "user_data", arg: 2, scope: !13862, file: !2189, line: 45, type: !102)
!13874 = !DILocation(line: 0, scope: !13862)
!13875 = !DILocation(line: 71, column: 1, scope: !13862)
!13876 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2189, file: !2189, line: 73, type: !13863, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !13877)
!13877 = !{!13878, !13879}
!13878 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13876, file: !2189, line: 73, type: !13865)
!13879 = !DILocalVariable(name: "user_data", arg: 2, scope: !13876, file: !2189, line: 73, type: !102)
!13880 = !DILocation(line: 0, scope: !13876)
!13881 = !DILocation(line: 95, column: 1, scope: !13876)
!13882 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2189, file: !2189, line: 97, type: !7585, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !461)
!13883 = !DILocation(line: 1031, column: 3, scope: !13884, inlinedAt: !13887)
!13884 = distinct !DISubprogram(name: "__get_IPSR", scope: !6790, file: !6790, line: 1027, type: !6871, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !13885)
!13885 = !{!13886}
!13886 = !DILocalVariable(name: "result", scope: !13884, file: !6790, line: 1029, type: !121)
!13887 = distinct !DILocation(line: 48, column: 10, scope: !13888, inlinedAt: !13889)
!13888 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7584, file: !7584, line: 46, type: !7585, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !461)
!13889 = distinct !DILocation(line: 99, column: 9, scope: !13882)
!13890 = !{i64 2852825}
!13891 = !DILocation(line: 0, scope: !13884, inlinedAt: !13887)
!13892 = !DILocation(line: 48, column: 9, scope: !13888, inlinedAt: !13889)
!13893 = !DILocation(line: 99, column: 2, scope: !13882)
!13894 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2189, file: !2189, line: 106, type: !3220, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !461)
!13895 = !DILocation(line: 108, column: 2, scope: !13894)
!13896 = !DILocation(line: 108, column: 17, scope: !13894)
!13897 = !DILocation(line: 108, column: 30, scope: !13894)
!13898 = !DILocation(line: 109, column: 1, scope: !13894)
!13899 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2189, file: !2189, line: 116, type: !3220, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !461)
!13900 = !DILocation(line: 118, column: 2, scope: !13899)
!13901 = !DILocation(line: 118, column: 17, scope: !13899)
!13902 = !DILocation(line: 118, column: 30, scope: !13899)
!13903 = !DILocation(line: 119, column: 1, scope: !13899)
!13904 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2189, file: !2189, line: 126, type: !7585, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !461)
!13905 = !DILocation(line: 128, column: 10, scope: !13904)
!13906 = !DILocation(line: 128, column: 25, scope: !13904)
!13907 = !DILocation(line: 128, column: 38, scope: !13904)
!13908 = !DILocation(line: 128, column: 53, scope: !13904)
!13909 = !DILocation(line: 128, column: 2, scope: !13904)
!13910 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2189, file: !2189, line: 187, type: !13911, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !13913)
!13911 = !DISubroutineType(types: !13912)
!13912 = !{!103, !2193, !144}
!13913 = !{!13914, !13915}
!13914 = !DILocalVariable(name: "thread", arg: 1, scope: !13910, file: !2189, line: 187, type: !2193)
!13915 = !DILocalVariable(name: "value", arg: 2, scope: !13910, file: !2189, line: 187, type: !144)
!13916 = !DILocation(line: 0, scope: !13910)
!13917 = !DILocation(line: 206, column: 2, scope: !13910)
!13918 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2189, file: !2189, line: 238, type: !13919, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !13921)
!13919 = !DISubroutineType(types: !13920)
!13920 = !{!144, !2193}
!13921 = !{!13922}
!13922 = !DILocalVariable(name: "thread", arg: 1, scope: !13918, file: !2189, line: 238, type: !2193)
!13923 = !DILocation(line: 0, scope: !13918)
!13924 = !DILocation(line: 244, column: 2, scope: !13918)
!13925 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2189, file: !2189, line: 248, type: !13926, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !13928)
!13926 = !DISubroutineType(types: !13927)
!13927 = !{!103, !2192, !1051, !344}
!13928 = !{!13929, !13930, !13931}
!13929 = !DILocalVariable(name: "thread", arg: 1, scope: !13925, file: !2189, line: 248, type: !2192)
!13930 = !DILocalVariable(name: "buf", arg: 2, scope: !13925, file: !2189, line: 248, type: !1051)
!13931 = !DILocalVariable(name: "size", arg: 3, scope: !13925, file: !2189, line: 248, type: !344)
!13932 = !DILocation(line: 0, scope: !13925)
!13933 = !DILocation(line: 257, column: 2, scope: !13925)
!13934 = !DILocation(line: 0, scope: !2188)
!13935 = !DILocation(line: 281, column: 11, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !2188, file: !2189, line: 281, column: 6)
!13937 = !DILocation(line: 281, column: 20, scope: !13936)
!13938 = !DILocation(line: 275, column: 45, scope: !2188)
!13939 = !DILocation(line: 285, column: 10, scope: !2188)
!13940 = !DILocation(line: 0, scope: !2309)
!13941 = !DILocation(line: 293, column: 39, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !2309, file: !2189, line: 293, column: 2)
!13943 = !DILocation(line: 293, column: 2, scope: !2309)
!13944 = !DILocation(line: 273, column: 14, scope: !2188)
!13945 = !DILocation(line: 309, column: 2, scope: !2188)
!13946 = !DILocation(line: 309, column: 11, scope: !2188)
!13947 = !DILocation(line: 311, column: 2, scope: !2188)
!13948 = !DILocation(line: 293, column: 26, scope: !13942)
!13949 = !DILocation(line: 294, column: 9, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13942, file: !2189, line: 293, column: 54)
!13951 = !DILocation(line: 295, column: 21, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13950, file: !2189, line: 295, column: 7)
!13953 = !DILocation(line: 295, column: 28, scope: !13952)
!13954 = !DILocation(line: 295, column: 7, scope: !13950)
!13955 = !DILocation(line: 299, column: 25, scope: !13950)
!13956 = !DILocation(line: 299, column: 41, scope: !13950)
!13957 = !DILocation(line: 300, column: 7, scope: !13950)
!13958 = !DILocation(line: 300, column: 26, scope: !13950)
!13959 = !DILocation(line: 299, column: 10, scope: !13950)
!13960 = !DILocation(line: 299, column: 7, scope: !13950)
!13961 = !DILocation(line: 302, column: 16, scope: !13950)
!13962 = !DILocation(line: 304, column: 20, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13950, file: !2189, line: 304, column: 7)
!13964 = !DILocation(line: 304, column: 7, scope: !13950)
!13965 = !DILocation(line: 305, column: 26, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13963, file: !2189, line: 304, column: 26)
!13967 = !DILocation(line: 305, column: 42, scope: !13966)
!13968 = !DILocation(line: 305, column: 11, scope: !13966)
!13969 = !DILocation(line: 305, column: 8, scope: !13966)
!13970 = !DILocation(line: 306, column: 3, scope: !13966)
!13971 = !DILocation(line: 293, column: 50, scope: !13942)
!13972 = !DILocation(line: 312, column: 1, scope: !2188)
!13973 = distinct !DISubprogram(name: "copy_bytes", scope: !2189, file: !2189, line: 261, type: !13974, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !13976)
!13974 = !DISubroutineType(types: !13975)
!13975 = !{!344, !1051, !344, !144, !344}
!13976 = !{!13977, !13978, !13979, !13980, !13981}
!13977 = !DILocalVariable(name: "dest", arg: 1, scope: !13973, file: !2189, line: 261, type: !1051)
!13978 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13973, file: !2189, line: 261, type: !344)
!13979 = !DILocalVariable(name: "src", arg: 3, scope: !13973, file: !2189, line: 261, type: !144)
!13980 = !DILocalVariable(name: "src_size", arg: 4, scope: !13973, file: !2189, line: 261, type: !344)
!13981 = !DILocalVariable(name: "bytes_to_copy", scope: !13973, file: !2189, line: 263, type: !344)
!13982 = !DILocation(line: 0, scope: !13973)
!13983 = !DILocation(line: 265, column: 18, scope: !13973)
!13984 = !DILocation(line: 266, column: 2, scope: !13973)
!13985 = !DILocation(line: 268, column: 2, scope: !13973)
!13986 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2189, file: !2189, line: 383, type: !13987, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !13989)
!13987 = !DISubroutineType(types: !13988)
!13988 = !{null, !2193}
!13989 = !{!13990}
!13990 = !DILocalVariable(name: "thread", arg: 1, scope: !13986, file: !2189, line: 383, type: !2193)
!13991 = !DILocation(line: 0, scope: !13986)
!13992 = !DILocation(line: 387, column: 2, scope: !13986)
!13993 = !DILocation(line: 388, column: 1, scope: !13986)
!13994 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2189, file: !2189, line: 528, type: !13995, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14002)
!13995 = !DISubroutineType(types: !13996)
!13996 = !{!1051, !2193, !13997, !344, !3531, !102, !102, !102, !103, !121, !144}
!13997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13998, size: 32)
!13998 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3532, line: 44, baseType: !13999)
!13999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2141, line: 47, size: 8, elements: !14000)
!14000 = !{!14001}
!14001 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13999, file: !2141, line: 48, baseType: !146, size: 8)
!14002 = !{!14003, !14004, !14005, !14006, !14007, !14008, !14009, !14010, !14011, !14012, !14013}
!14003 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13994, file: !2189, line: 528, type: !2193)
!14004 = !DILocalVariable(name: "stack", arg: 2, scope: !13994, file: !2189, line: 529, type: !13997)
!14005 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13994, file: !2189, line: 529, type: !344)
!14006 = !DILocalVariable(name: "entry", arg: 4, scope: !13994, file: !2189, line: 530, type: !3531)
!14007 = !DILocalVariable(name: "p1", arg: 5, scope: !13994, file: !2189, line: 531, type: !102)
!14008 = !DILocalVariable(name: "p2", arg: 6, scope: !13994, file: !2189, line: 531, type: !102)
!14009 = !DILocalVariable(name: "p3", arg: 7, scope: !13994, file: !2189, line: 531, type: !102)
!14010 = !DILocalVariable(name: "prio", arg: 8, scope: !13994, file: !2189, line: 532, type: !103)
!14011 = !DILocalVariable(name: "options", arg: 9, scope: !13994, file: !2189, line: 532, type: !121)
!14012 = !DILocalVariable(name: "name", arg: 10, scope: !13994, file: !2189, line: 532, type: !144)
!14013 = !DILocalVariable(name: "stack_ptr", scope: !13994, file: !2189, line: 534, type: !1051)
!14014 = !DILocation(line: 0, scope: !13994)
!14015 = !DILocation(line: 550, column: 28, scope: !13994)
!14016 = !DILocation(line: 550, column: 2, scope: !13994)
!14017 = !DILocation(line: 553, column: 34, scope: !13994)
!14018 = !DILocation(line: 553, column: 2, scope: !13994)
!14019 = !DILocation(line: 554, column: 14, scope: !13994)
!14020 = !DILocation(line: 564, column: 2, scope: !13994)
!14021 = !DILocation(line: 567, column: 14, scope: !13994)
!14022 = !DILocation(line: 567, column: 24, scope: !13994)
!14023 = !DILocation(line: 612, column: 7, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !13994, file: !2189, line: 612, column: 6)
!14025 = !DILocation(line: 612, column: 6, scope: !13994)
!14026 = !DILocation(line: 627, column: 40, scope: !13994)
!14027 = !DILocation(line: 637, column: 2, scope: !13994)
!14028 = !DILocation(line: 613, column: 15, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14024, file: !2189, line: 612, column: 17)
!14030 = !DILocation(line: 613, column: 29, scope: !14029)
!14031 = !DILocation(line: 638, column: 1, scope: !13994)
!14032 = distinct !DISubprogram(name: "z_waitq_init", scope: !14033, file: !14033, line: 47, type: !14034, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14036)
!14033 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14034 = !DISubroutineType(types: !14035)
!14035 = !{null, !2224}
!14036 = !{!14037}
!14037 = !DILocalVariable(name: "w", arg: 1, scope: !14032, file: !14033, line: 47, type: !2224)
!14038 = !DILocation(line: 0, scope: !14032)
!14039 = !DILocation(line: 49, column: 21, scope: !14032)
!14040 = !DILocation(line: 49, column: 2, scope: !14032)
!14041 = !DILocation(line: 50, column: 1, scope: !14032)
!14042 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2189, file: !2189, line: 791, type: !14043, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14046)
!14043 = !DISubroutineType(types: !14044)
!14044 = !{null, !14045, !103, !121, !32}
!14045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 32)
!14046 = !{!14047, !14048, !14049, !14050}
!14047 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14042, file: !2189, line: 791, type: !14045)
!14048 = !DILocalVariable(name: "priority", arg: 2, scope: !14042, file: !2189, line: 791, type: !103)
!14049 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14042, file: !2189, line: 792, type: !121)
!14050 = !DILocalVariable(name: "options", arg: 4, scope: !14042, file: !2189, line: 792, type: !32)
!14051 = !DILocation(line: 0, scope: !14042)
!14052 = !DILocation(line: 795, column: 15, scope: !14042)
!14053 = !DILocation(line: 795, column: 25, scope: !14042)
!14054 = !DILocation(line: 796, column: 30, scope: !14042)
!14055 = !DILocation(line: 796, column: 15, scope: !14042)
!14056 = !DILocation(line: 796, column: 28, scope: !14042)
!14057 = !DILocation(line: 797, column: 30, scope: !14042)
!14058 = !DILocation(line: 797, column: 15, scope: !14042)
!14059 = !DILocation(line: 797, column: 28, scope: !14042)
!14060 = !DILocation(line: 799, column: 22, scope: !14042)
!14061 = !DILocation(line: 799, column: 15, scope: !14042)
!14062 = !DILocation(line: 799, column: 20, scope: !14042)
!14063 = !DILocation(line: 801, column: 15, scope: !14042)
!14064 = !DILocation(line: 801, column: 28, scope: !14042)
!14065 = !DILocation(line: 814, column: 2, scope: !14042)
!14066 = !DILocation(line: 815, column: 1, scope: !14042)
!14067 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2189, file: !2189, line: 449, type: !14068, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14070)
!14068 = !DISubroutineType(types: !14069)
!14069 = !{!1051, !2193, !13997, !344}
!14070 = !{!14071, !14072, !14073, !14074, !14075, !14076, !14077, !14078}
!14071 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14067, file: !2189, line: 449, type: !2193)
!14072 = !DILocalVariable(name: "stack", arg: 2, scope: !14067, file: !2189, line: 450, type: !13997)
!14073 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14067, file: !2189, line: 450, type: !344)
!14074 = !DILocalVariable(name: "stack_obj_size", scope: !14067, file: !2189, line: 452, type: !344)
!14075 = !DILocalVariable(name: "stack_buf_size", scope: !14067, file: !2189, line: 452, type: !344)
!14076 = !DILocalVariable(name: "stack_ptr", scope: !14067, file: !2189, line: 453, type: !1051)
!14077 = !DILocalVariable(name: "stack_buf_start", scope: !14067, file: !2189, line: 453, type: !1051)
!14078 = !DILocalVariable(name: "delta", scope: !14067, file: !2189, line: 454, type: !344)
!14079 = !DILocation(line: 0, scope: !14067)
!14080 = !DILocation(line: 465, column: 20, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14067, file: !2189, line: 463, column: 2)
!14082 = !DILocation(line: 466, column: 21, scope: !14081)
!14083 = !DILocation(line: 473, column: 28, scope: !14067)
!14084 = !DILocation(line: 514, column: 33, scope: !14067)
!14085 = !DILocation(line: 514, column: 25, scope: !14067)
!14086 = !DILocation(line: 514, column: 31, scope: !14067)
!14087 = !DILocation(line: 515, column: 25, scope: !14067)
!14088 = !DILocation(line: 515, column: 30, scope: !14067)
!14089 = !DILocation(line: 516, column: 25, scope: !14067)
!14090 = !DILocation(line: 516, column: 31, scope: !14067)
!14091 = !DILocation(line: 520, column: 2, scope: !14067)
!14092 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2141, file: !2141, line: 331, type: !14093, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14095)
!14093 = !DISubroutineType(types: !14094)
!14094 = !{!1051, !13997}
!14095 = !{!14096}
!14096 = !DILocalVariable(name: "sym", arg: 1, scope: !14092, file: !2141, line: 331, type: !13997)
!14097 = !DILocation(line: 0, scope: !14092)
!14098 = !DILocation(line: 333, column: 21, scope: !14092)
!14099 = !DILocation(line: 333, column: 2, scope: !14092)
!14100 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14101, file: !14101, line: 40, type: !14102, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14104)
!14101 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14102 = !DISubroutineType(types: !14103)
!14103 = !{null, !14045}
!14104 = !{!14105}
!14105 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14100, file: !14101, line: 40, type: !14045)
!14106 = !DILocation(line: 0, scope: !14100)
!14107 = !DILocation(line: 42, column: 31, scope: !14100)
!14108 = !DILocation(line: 42, column: 2, scope: !14100)
!14109 = !DILocation(line: 43, column: 1, scope: !14100)
!14110 = distinct !DISubprogram(name: "z_init_timeout", scope: !14101, file: !14101, line: 25, type: !2250, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14111)
!14111 = !{!14112}
!14112 = !DILocalVariable(name: "to", arg: 1, scope: !14110, file: !14101, line: 25, type: !2252)
!14113 = !DILocation(line: 0, scope: !14110)
!14114 = !DILocation(line: 27, column: 22, scope: !14110)
!14115 = !DILocation(line: 27, column: 2, scope: !14110)
!14116 = !DILocation(line: 28, column: 1, scope: !14110)
!14117 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !14118, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14120)
!14118 = !DISubroutineType(types: !14119)
!14119 = !{null, !2296}
!14120 = !{!14121}
!14121 = !DILocalVariable(name: "node", arg: 1, scope: !14117, file: !309, line: 211, type: !2296)
!14122 = !DILocation(line: 0, scope: !14117)
!14123 = !DILocation(line: 213, column: 8, scope: !14117)
!14124 = !DILocation(line: 213, column: 13, scope: !14117)
!14125 = !DILocation(line: 214, column: 8, scope: !14117)
!14126 = !DILocation(line: 214, column: 13, scope: !14117)
!14127 = !DILocation(line: 215, column: 1, scope: !14117)
!14128 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !14129, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14132)
!14129 = !DISubroutineType(types: !14130)
!14130 = !{null, !14131}
!14131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 32)
!14132 = !{!14133}
!14133 = !DILocalVariable(name: "list", arg: 1, scope: !14128, file: !309, line: 197, type: !14131)
!14134 = !DILocation(line: 0, scope: !14128)
!14135 = !DILocation(line: 199, column: 8, scope: !14128)
!14136 = !DILocation(line: 199, column: 13, scope: !14128)
!14137 = !DILocation(line: 200, column: 8, scope: !14128)
!14138 = !DILocation(line: 200, column: 13, scope: !14128)
!14139 = !DILocation(line: 201, column: 1, scope: !14128)
!14140 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2189, file: !2189, line: 641, type: !14141, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14147)
!14141 = !DISubroutineType(types: !14142)
!14142 = !{!2192, !2193, !13997, !344, !3531, !102, !102, !102, !103, !121, !14143}
!14143 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1677, line: 67, baseType: !14144)
!14144 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1677, line: 65, size: 64, elements: !14145)
!14145 = !{!14146}
!14146 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14144, file: !1677, line: 66, baseType: !1676, size: 64)
!14147 = !{!14148, !14149, !14150, !14151, !14152, !14153, !14154, !14155, !14156, !14157}
!14148 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14140, file: !2189, line: 641, type: !2193)
!14149 = !DILocalVariable(name: "stack", arg: 2, scope: !14140, file: !2189, line: 642, type: !13997)
!14150 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14140, file: !2189, line: 643, type: !344)
!14151 = !DILocalVariable(name: "entry", arg: 4, scope: !14140, file: !2189, line: 643, type: !3531)
!14152 = !DILocalVariable(name: "p1", arg: 5, scope: !14140, file: !2189, line: 644, type: !102)
!14153 = !DILocalVariable(name: "p2", arg: 6, scope: !14140, file: !2189, line: 644, type: !102)
!14154 = !DILocalVariable(name: "p3", arg: 7, scope: !14140, file: !2189, line: 644, type: !102)
!14155 = !DILocalVariable(name: "prio", arg: 8, scope: !14140, file: !2189, line: 645, type: !103)
!14156 = !DILocalVariable(name: "options", arg: 9, scope: !14140, file: !2189, line: 645, type: !121)
!14157 = !DILocalVariable(name: "delay", arg: 10, scope: !14140, file: !2189, line: 645, type: !14143)
!14158 = !DILocation(line: 0, scope: !14140)
!14159 = !DILocation(line: 649, column: 2, scope: !14140)
!14160 = !DILocation(line: 652, column: 7, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14140, file: !2189, line: 652, column: 6)
!14162 = !DILocation(line: 652, column: 6, scope: !14140)
!14163 = !DILocation(line: 653, column: 3, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14161, file: !2189, line: 652, column: 39)
!14165 = !DILocation(line: 654, column: 2, scope: !14164)
!14166 = !DILocation(line: 656, column: 2, scope: !14140)
!14167 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2189, file: !2189, line: 401, type: !14168, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14170)
!14168 = !DISubroutineType(types: !14169)
!14169 = !{null, !2193, !14143}
!14170 = !{!14171, !14172}
!14171 = !DILocalVariable(name: "thread", arg: 1, scope: !14167, file: !2189, line: 401, type: !2193)
!14172 = !DILocalVariable(name: "delay", arg: 2, scope: !14167, file: !2189, line: 401, type: !14143)
!14173 = !DILocation(line: 0, scope: !14167)
!14174 = !DILocation(line: 404, column: 6, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14167, file: !2189, line: 404, column: 6)
!14176 = !DILocation(line: 404, column: 6, scope: !14167)
!14177 = !DILocation(line: 405, column: 3, scope: !14178)
!14178 = distinct !DILexicalBlock(scope: !14175, file: !2189, line: 404, column: 38)
!14179 = !DILocation(line: 406, column: 2, scope: !14178)
!14180 = !DILocation(line: 407, column: 3, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14175, file: !2189, line: 406, column: 9)
!14182 = !DILocation(line: 413, column: 1, scope: !14167)
!14183 = distinct !DISubprogram(name: "k_thread_start", scope: !3653, file: !3653, line: 205, type: !14184, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14186)
!14184 = !DISubroutineType(types: !14185)
!14185 = !{null, !2192}
!14186 = !{!14187}
!14187 = !DILocalVariable(name: "thread", arg: 1, scope: !14183, file: !3653, line: 205, type: !2192)
!14188 = !DILocation(line: 0, scope: !14183)
!14189 = !DILocation(line: 214, column: 2, scope: !14190)
!14190 = distinct !DILexicalBlock(scope: !14183, file: !3653, line: 214, column: 2)
!14191 = !{i64 2154090194}
!14192 = !DILocation(line: 215, column: 2, scope: !14183)
!14193 = !DILocation(line: 216, column: 1, scope: !14183)
!14194 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14101, file: !14101, line: 47, type: !14168, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14195)
!14195 = !{!14196, !14197}
!14196 = !DILocalVariable(name: "thread", arg: 1, scope: !14194, file: !14101, line: 47, type: !2193)
!14197 = !DILocalVariable(name: "ticks", arg: 2, scope: !14194, file: !14101, line: 47, type: !14143)
!14198 = !DILocation(line: 0, scope: !14194)
!14199 = !DILocation(line: 49, column: 30, scope: !14194)
!14200 = !DILocation(line: 49, column: 2, scope: !14194)
!14201 = !DILocation(line: 50, column: 1, scope: !14194)
!14202 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2189, file: !2189, line: 748, type: !3220, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14203)
!14203 = !{!14204, !14222}
!14204 = !DILocalVariable(name: "thread_data", scope: !14205, file: !2189, line: 750, type: !14206)
!14205 = distinct !DILexicalBlock(scope: !14202, file: !2189, line: 750, column: 2)
!14206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14207, size: 32)
!14207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !300, line: 620, size: 384, elements: !14208)
!14208 = !{!14209, !14210, !14211, !14212, !14213, !14214, !14215, !14216, !14217, !14218, !14219, !14221}
!14209 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14207, file: !300, line: 621, baseType: !2193, size: 32)
!14210 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14207, file: !300, line: 622, baseType: !13997, size: 32, offset: 32)
!14211 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14207, file: !300, line: 623, baseType: !32, size: 32, offset: 64)
!14212 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14207, file: !300, line: 624, baseType: !3531, size: 32, offset: 96)
!14213 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14207, file: !300, line: 625, baseType: !102, size: 32, offset: 128)
!14214 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14207, file: !300, line: 626, baseType: !102, size: 32, offset: 160)
!14215 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14207, file: !300, line: 627, baseType: !102, size: 32, offset: 192)
!14216 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14207, file: !300, line: 628, baseType: !103, size: 32, offset: 224)
!14217 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14207, file: !300, line: 629, baseType: !121, size: 32, offset: 256)
!14218 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14207, file: !300, line: 630, baseType: !332, size: 32, offset: 288)
!14219 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14207, file: !300, line: 631, baseType: !14220, size: 32, offset: 320)
!14220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 32)
!14221 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14207, file: !300, line: 632, baseType: !144, size: 32, offset: 352)
!14222 = !DILocalVariable(name: "thread_data", scope: !14223, file: !2189, line: 781, type: !14206)
!14223 = distinct !DILexicalBlock(scope: !14202, file: !2189, line: 781, column: 2)
!14224 = !DILocation(line: 0, scope: !14205)
!14225 = !DILocation(line: 750, column: 2, scope: !14205)
!14226 = !DILocation(line: 780, column: 2, scope: !14202)
!14227 = !DILocation(line: 0, scope: !14223)
!14228 = !DILocation(line: 781, column: 2, scope: !14223)
!14229 = !DILocation(line: 752, column: 17, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14231, file: !2189, line: 750, column: 38)
!14231 = distinct !DILexicalBlock(scope: !14205, file: !2189, line: 750, column: 2)
!14232 = !DILocation(line: 753, column: 17, scope: !14230)
!14233 = !DILocation(line: 754, column: 17, scope: !14230)
!14234 = !DILocation(line: 755, column: 17, scope: !14230)
!14235 = !DILocation(line: 756, column: 17, scope: !14230)
!14236 = !DILocation(line: 757, column: 17, scope: !14230)
!14237 = !DILocation(line: 758, column: 17, scope: !14230)
!14238 = !DILocation(line: 759, column: 17, scope: !14230)
!14239 = !DILocation(line: 760, column: 17, scope: !14230)
!14240 = !DILocation(line: 751, column: 3, scope: !14230)
!14241 = !DILocation(line: 763, column: 16, scope: !14230)
!14242 = !DILocation(line: 763, column: 29, scope: !14230)
!14243 = !DILocation(line: 763, column: 39, scope: !14230)
!14244 = !DILocation(line: 750, column: 2, scope: !14231)
!14245 = !DILocation(line: 750, column: 2, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14231, file: !2189, line: 750, column: 2)
!14247 = distinct !{!14247, !14225, !14248}
!14248 = !DILocation(line: 764, column: 2, scope: !14205)
!14249 = !DILocation(line: 787, column: 2, scope: !14202)
!14250 = !DILocation(line: 788, column: 1, scope: !14202)
!14251 = !DILocation(line: 782, column: 20, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14253, file: !2189, line: 782, column: 7)
!14253 = distinct !DILexicalBlock(scope: !14254, file: !2189, line: 781, column: 38)
!14254 = distinct !DILexicalBlock(scope: !14223, file: !2189, line: 781, column: 2)
!14255 = !DILocation(line: 782, column: 31, scope: !14252)
!14256 = !DILocation(line: 782, column: 7, scope: !14253)
!14257 = !DILocation(line: 783, column: 37, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14252, file: !2189, line: 782, column: 51)
!14259 = !DILocation(line: 784, column: 10, scope: !14258)
!14260 = !DILocation(line: 783, column: 4, scope: !14258)
!14261 = !DILocation(line: 785, column: 3, scope: !14258)
!14262 = !DILocation(line: 781, column: 2, scope: !14254)
!14263 = !DILocation(line: 781, column: 2, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14254, file: !2189, line: 781, column: 2)
!14265 = distinct !{!14265, !14228, !14266}
!14266 = !DILocation(line: 786, column: 2, scope: !14223)
!14267 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5970, file: !5970, line: 403, type: !5971, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14268)
!14268 = !{!14269}
!14269 = !DILocalVariable(name: "t", arg: 1, scope: !14267, file: !5970, line: 403, type: !1573)
!14270 = !DILocation(line: 0, scope: !14267)
!14271 = !DILocalVariable(name: "t", arg: 1, scope: !14272, file: !5970, line: 102, type: !1573)
!14272 = distinct !DISubprogram(name: "z_tmcvt", scope: !5970, file: !5970, line: 102, type: !5978, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14273)
!14273 = !{!14271, !14274, !14275, !14276, !14277, !14278, !14279, !14280, !14281, !14282, !14283}
!14274 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14272, file: !5970, line: 102, type: !121)
!14275 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14272, file: !5970, line: 103, type: !121)
!14276 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14272, file: !5970, line: 103, type: !157)
!14277 = !DILocalVariable(name: "result32", arg: 5, scope: !14272, file: !5970, line: 104, type: !157)
!14278 = !DILocalVariable(name: "round_up", arg: 6, scope: !14272, file: !5970, line: 104, type: !157)
!14279 = !DILocalVariable(name: "round_off", arg: 7, scope: !14272, file: !5970, line: 105, type: !157)
!14280 = !DILocalVariable(name: "mul_ratio", scope: !14272, file: !5970, line: 107, type: !157)
!14281 = !DILocalVariable(name: "div_ratio", scope: !14272, file: !5970, line: 109, type: !157)
!14282 = !DILocalVariable(name: "off", scope: !14272, file: !5970, line: 116, type: !1573)
!14283 = !DILocalVariable(name: "rdivisor", scope: !14284, file: !5970, line: 119, type: !121)
!14284 = distinct !DILexicalBlock(scope: !14285, file: !5970, line: 118, column: 18)
!14285 = distinct !DILexicalBlock(scope: !14272, file: !5970, line: 118, column: 6)
!14286 = !DILocation(line: 0, scope: !14272, inlinedAt: !14287)
!14287 = distinct !DILocation(line: 406, column: 9, scope: !14267)
!14288 = !DILocation(line: 145, column: 13, scope: !14289, inlinedAt: !14287)
!14289 = distinct !DILexicalBlock(scope: !14290, file: !5970, line: 144, column: 10)
!14290 = distinct !DILexicalBlock(scope: !14291, file: !5970, line: 142, column: 7)
!14291 = distinct !DILexicalBlock(scope: !14292, file: !5970, line: 141, column: 24)
!14292 = distinct !DILexicalBlock(scope: !14293, file: !5970, line: 141, column: 13)
!14293 = distinct !DILexicalBlock(scope: !14272, file: !5970, line: 134, column: 6)
!14294 = !DILocation(line: 406, column: 2, scope: !14267)
!14295 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2189, file: !2189, line: 817, type: !3529, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14296)
!14296 = !{!14297, !14298, !14299, !14300}
!14297 = !DILocalVariable(name: "entry", arg: 1, scope: !14295, file: !2189, line: 817, type: !3531)
!14298 = !DILocalVariable(name: "p1", arg: 2, scope: !14295, file: !2189, line: 818, type: !102)
!14299 = !DILocalVariable(name: "p2", arg: 3, scope: !14295, file: !2189, line: 818, type: !102)
!14300 = !DILocalVariable(name: "p3", arg: 4, scope: !14295, file: !2189, line: 818, type: !102)
!14301 = !DILocation(line: 0, scope: !14295)
!14302 = !DILocation(line: 822, column: 2, scope: !14295)
!14303 = !DILocation(line: 822, column: 17, scope: !14295)
!14304 = !DILocation(line: 822, column: 30, scope: !14295)
!14305 = !DILocation(line: 823, column: 2, scope: !14295)
!14306 = !DILocation(line: 845, column: 2, scope: !14295)
!14307 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2189, file: !2189, line: 888, type: !14308, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14310)
!14308 = !DISubroutineType(types: !14309)
!14309 = !{!103, !2193}
!14310 = !{!14311}
!14311 = !DILocalVariable(name: "thread", arg: 1, scope: !14307, file: !2189, line: 888, type: !2193)
!14312 = !DILocation(line: 0, scope: !14307)
!14313 = !DILocation(line: 893, column: 2, scope: !14307)
!14314 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2189, file: !2189, line: 897, type: !14315, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14317)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{!103, !2193, !32}
!14317 = !{!14318, !14319}
!14318 = !DILocalVariable(name: "thread", arg: 1, scope: !14314, file: !2189, line: 897, type: !2193)
!14319 = !DILocalVariable(name: "options", arg: 2, scope: !14314, file: !2189, line: 897, type: !32)
!14320 = !DILocation(line: 0, scope: !14314)
!14321 = !DILocation(line: 902, column: 2, scope: !14314)
!14322 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2189, file: !2189, line: 1072, type: !14323, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14328)
!14323 = !DISubroutineType(types: !14324)
!14324 = !{!103, !2192, !14325}
!14325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14326, size: 32)
!14326 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !355, line: 234, baseType: !14327)
!14327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !355, line: 192, elements: !461)
!14328 = !{!14329, !14330}
!14329 = !DILocalVariable(name: "thread", arg: 1, scope: !14322, file: !2189, line: 1072, type: !2192)
!14330 = !DILocalVariable(name: "stats", arg: 2, scope: !14322, file: !2189, line: 1073, type: !14325)
!14331 = !DILocation(line: 0, scope: !14322)
!14332 = !DILocation(line: 1075, column: 14, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14322, file: !2189, line: 1075, column: 6)
!14334 = !DILocation(line: 1075, column: 23, scope: !14333)
!14335 = !DILocation(line: 1086, column: 1, scope: !14322)
!14336 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2189, file: !2189, line: 1088, type: !14337, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14339)
!14337 = !DISubroutineType(types: !14338)
!14338 = !{!103, !14325}
!14339 = !{!14340}
!14340 = !DILocalVariable(name: "stats", arg: 1, scope: !14336, file: !2189, line: 1088, type: !14325)
!14341 = !DILocation(line: 0, scope: !14336)
!14342 = !DILocation(line: 1094, column: 12, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14336, file: !2189, line: 1094, column: 6)
!14344 = !DILocation(line: 1120, column: 1, scope: !14336)
!14345 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14346, file: !14346, line: 20, type: !3220, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3201, retainedNodes: !461)
!14346 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14347 = !DILocation(line: 30, column: 2, scope: !14345)
!14348 = !DILocation(line: 31, column: 1, scope: !14345)
!14349 = distinct !DISubprogram(name: "idle", scope: !14346, file: !14346, line: 33, type: !3534, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3201, retainedNodes: !14350)
!14350 = !{!14351, !14352, !14353}
!14351 = !DILocalVariable(name: "unused1", arg: 1, scope: !14349, file: !14346, line: 33, type: !102)
!14352 = !DILocalVariable(name: "unused2", arg: 2, scope: !14349, file: !14346, line: 33, type: !102)
!14353 = !DILocalVariable(name: "unused3", arg: 3, scope: !14349, file: !14346, line: 33, type: !102)
!14354 = !DILocation(line: 0, scope: !14349)
!14355 = !DILocation(line: 41, column: 2, scope: !14349)
!14356 = !DILocation(line: 55, column: 2, scope: !14357, inlinedAt: !14361)
!14357 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5770, file: !5770, line: 42, type: !5771, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3201, retainedNodes: !14358)
!14358 = !{!14359, !14360}
!14359 = !DILocalVariable(name: "key", scope: !14357, file: !5770, line: 44, type: !32)
!14360 = !DILocalVariable(name: "tmp", scope: !14357, file: !5770, line: 53, type: !32)
!14361 = distinct !DILocation(line: 62, column: 10, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14349, file: !14346, line: 41, column: 15)
!14363 = !{i64 1948272}
!14364 = !DILocation(line: 0, scope: !14357, inlinedAt: !14361)
!14365 = !DILocation(line: 86, column: 3, scope: !14362)
!14366 = distinct !{!14366, !14355, !14367}
!14367 = !DILocation(line: 105, column: 2, scope: !14349)
!14368 = distinct !DISubprogram(name: "k_cpu_idle", scope: !300, file: !300, line: 5627, type: !3220, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3201, retainedNodes: !461)
!14369 = !DILocation(line: 5629, column: 2, scope: !14368)
!14370 = !DILocation(line: 5630, column: 1, scope: !14368)
!14371 = !DISubprogram(name: "arch_cpu_idle", scope: !3532, file: !3532, line: 167, type: !3220, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!14372 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2332, file: !2332, line: 41, type: !14373, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14386)
!14373 = !DISubroutineType(types: !14374)
!14374 = !{!103, !14375, !32, !32}
!14375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14376, size: 32)
!14376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !300, line: 2909, size: 128, elements: !14377)
!14377 = !{!14378, !14384, !14385}
!14378 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14376, file: !300, line: 2910, baseType: !14379, size: 64)
!14379 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !14380)
!14380 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !14381)
!14381 = !{!14382}
!14382 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14380, file: !304, line: 232, baseType: !14383, size: 64)
!14383 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2318)
!14384 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14376, file: !300, line: 2911, baseType: !32, size: 32, offset: 64)
!14385 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !14376, file: !300, line: 2912, baseType: !32, size: 32, offset: 96)
!14386 = !{!14387, !14388, !14389}
!14387 = !DILocalVariable(name: "sem", arg: 1, scope: !14372, file: !2332, line: 41, type: !14375)
!14388 = !DILocalVariable(name: "initial_count", arg: 2, scope: !14372, file: !2332, line: 41, type: !32)
!14389 = !DILocalVariable(name: "limit", arg: 3, scope: !14372, file: !2332, line: 42, type: !32)
!14390 = !DILocation(line: 0, scope: !14372)
!14391 = !DILocation(line: 47, column: 2, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14372, file: !2332, line: 47, column: 2)
!14393 = !DILocation(line: 53, column: 7, scope: !14372)
!14394 = !DILocation(line: 53, column: 13, scope: !14372)
!14395 = !DILocation(line: 54, column: 7, scope: !14372)
!14396 = !DILocation(line: 54, column: 13, scope: !14372)
!14397 = !DILocation(line: 58, column: 21, scope: !14372)
!14398 = !DILocation(line: 58, column: 2, scope: !14372)
!14399 = !DILocation(line: 64, column: 2, scope: !14372)
!14400 = !DILocation(line: 65, column: 1, scope: !14372)
!14401 = distinct !DISubprogram(name: "z_waitq_init", scope: !14033, file: !14033, line: 47, type: !14402, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14405)
!14402 = !DISubroutineType(types: !14403)
!14403 = !{null, !14404}
!14404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14379, size: 32)
!14405 = !{!14406}
!14406 = !DILocalVariable(name: "w", arg: 1, scope: !14401, file: !14033, line: 47, type: !14404)
!14407 = !DILocation(line: 0, scope: !14401)
!14408 = !DILocation(line: 49, column: 21, scope: !14401)
!14409 = !DILocation(line: 49, column: 2, scope: !14401)
!14410 = !DILocation(line: 50, column: 1, scope: !14401)
!14411 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !14412, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14415)
!14412 = !DISubroutineType(types: !14413)
!14413 = !{null, !14414}
!14414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14383, size: 32)
!14415 = !{!14416}
!14416 = !DILocalVariable(name: "list", arg: 1, scope: !14411, file: !309, line: 197, type: !14414)
!14417 = !DILocation(line: 0, scope: !14411)
!14418 = !DILocation(line: 199, column: 8, scope: !14411)
!14419 = !DILocation(line: 199, column: 13, scope: !14411)
!14420 = !DILocation(line: 200, column: 8, scope: !14411)
!14421 = !DILocation(line: 200, column: 13, scope: !14411)
!14422 = !DILocation(line: 201, column: 1, scope: !14411)
!14423 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2332, file: !2332, line: 86, type: !14424, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14426)
!14424 = !DISubroutineType(types: !14425)
!14425 = !{null, !14375}
!14426 = !{!14427, !14428, !14433}
!14427 = !DILocalVariable(name: "sem", arg: 1, scope: !14423, file: !2332, line: 86, type: !14375)
!14428 = !DILocalVariable(name: "key", scope: !14423, file: !2332, line: 88, type: !14429)
!14429 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !14430)
!14430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !14431)
!14431 = !{!14432}
!14432 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14430, file: !460, line: 33, baseType: !103, size: 32)
!14433 = !DILocalVariable(name: "thread", scope: !14423, file: !2332, line: 89, type: !14434)
!14434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14435, size: 32)
!14435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !355, line: 245, size: 1024, elements: !14436)
!14436 = !{!14437, !14475, !14487, !14488, !14489, !14490, !14496, !14508}
!14437 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14435, file: !355, line: 247, baseType: !14438, size: 384)
!14438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !355, line: 57, size: 384, elements: !14439)
!14439 = !{!14440, !14450, !14451, !14452, !14453, !14462, !14463, !14464}
!14440 = !DIDerivedType(tag: DW_TAG_member, scope: !14438, file: !355, line: 60, baseType: !14441, size: 64)
!14441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14438, file: !355, line: 60, size: 64, elements: !14442)
!14442 = !{!14443, !14444}
!14443 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14441, file: !355, line: 61, baseType: !2317, size: 64)
!14444 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14441, file: !355, line: 62, baseType: !14445, size: 64)
!14445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !380, line: 49, size: 64, elements: !14446)
!14446 = !{!14447}
!14447 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14445, file: !380, line: 50, baseType: !14448, size: 64)
!14448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14449, size: 64, elements: !385)
!14449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14445, size: 32)
!14450 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14438, file: !355, line: 68, baseType: !14404, size: 32, offset: 64)
!14451 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14438, file: !355, line: 71, baseType: !154, size: 8, offset: 96)
!14452 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14438, file: !355, line: 74, baseType: !154, size: 8, offset: 104)
!14453 = !DIDerivedType(tag: DW_TAG_member, scope: !14438, file: !355, line: 90, baseType: !14454, size: 16, offset: 112)
!14454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14438, file: !355, line: 90, size: 16, elements: !14455)
!14455 = !{!14456, !14461}
!14456 = !DIDerivedType(tag: DW_TAG_member, scope: !14454, file: !355, line: 91, baseType: !14457, size: 16)
!14457 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14454, file: !355, line: 91, size: 16, elements: !14458)
!14458 = !{!14459, !14460}
!14459 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14457, file: !355, line: 96, baseType: !403, size: 8)
!14460 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14457, file: !355, line: 97, baseType: !154, size: 8, offset: 8)
!14461 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14454, file: !355, line: 100, baseType: !328, size: 16)
!14462 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14438, file: !355, line: 107, baseType: !121, size: 32, offset: 128)
!14463 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14438, file: !355, line: 127, baseType: !102, size: 32, offset: 160)
!14464 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14438, file: !355, line: 131, baseType: !14465, size: 192, offset: 192)
!14465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !304, line: 244, size: 192, elements: !14466)
!14466 = !{!14467, !14468, !14474}
!14467 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14465, file: !304, line: 245, baseType: !2317, size: 64)
!14468 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14465, file: !304, line: 246, baseType: !14469, size: 32, offset: 64)
!14469 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !304, line: 242, baseType: !14470)
!14470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14471, size: 32)
!14471 = !DISubroutineType(types: !14472)
!14472 = !{null, !14473}
!14473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14465, size: 32)
!14474 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14465, file: !304, line: 249, baseType: !420, size: 64, offset: 128)
!14475 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14435, file: !355, line: 250, baseType: !14476, size: 288, offset: 384)
!14476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !424, line: 25, size: 288, elements: !14477)
!14477 = !{!14478, !14479, !14480, !14481, !14482, !14483, !14484, !14485, !14486}
!14478 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14476, file: !424, line: 26, baseType: !121, size: 32)
!14479 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14476, file: !424, line: 27, baseType: !121, size: 32, offset: 32)
!14480 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14476, file: !424, line: 28, baseType: !121, size: 32, offset: 64)
!14481 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14476, file: !424, line: 29, baseType: !121, size: 32, offset: 96)
!14482 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14476, file: !424, line: 30, baseType: !121, size: 32, offset: 128)
!14483 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14476, file: !424, line: 31, baseType: !121, size: 32, offset: 160)
!14484 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14476, file: !424, line: 32, baseType: !121, size: 32, offset: 192)
!14485 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14476, file: !424, line: 33, baseType: !121, size: 32, offset: 224)
!14486 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14476, file: !424, line: 34, baseType: !121, size: 32, offset: 256)
!14487 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14435, file: !355, line: 253, baseType: !102, size: 32, offset: 672)
!14488 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14435, file: !355, line: 256, baseType: !14379, size: 64, offset: 704)
!14489 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14435, file: !355, line: 294, baseType: !103, size: 32, offset: 768)
!14490 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14435, file: !355, line: 300, baseType: !14491, size: 96, offset: 800)
!14491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !355, line: 149, size: 96, elements: !14492)
!14492 = !{!14493, !14494, !14495}
!14493 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14491, file: !355, line: 153, baseType: !22, size: 32)
!14494 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14491, file: !355, line: 162, baseType: !344, size: 32, offset: 32)
!14495 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14491, file: !355, line: 168, baseType: !344, size: 32, offset: 64)
!14496 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14435, file: !355, line: 325, baseType: !14497, size: 32, offset: 896)
!14497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14498, size: 32)
!14498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !14499)
!14499 = !{!14500, !14506, !14507}
!14500 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14498, file: !300, line: 5074, baseType: !14501, size: 96)
!14501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !14502)
!14502 = !{!14503, !14504, !14505}
!14503 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14501, file: !450, line: 57, baseType: !453, size: 32)
!14504 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14501, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!14505 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14501, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14498, file: !300, line: 5075, baseType: !14379, size: 64, offset: 96)
!14507 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14498, file: !300, line: 5076, baseType: !2333, offset: 160)
!14508 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14435, file: !355, line: 343, baseType: !14509, size: 64, offset: 928)
!14509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !424, line: 60, size: 64, elements: !14510)
!14510 = !{!14511, !14512}
!14511 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14509, file: !424, line: 63, baseType: !121, size: 32)
!14512 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14509, file: !424, line: 66, baseType: !121, size: 32, offset: 32)
!14513 = !DILocation(line: 0, scope: !14423)
!14514 = !DILocalVariable(name: "l", arg: 1, scope: !14515, file: !460, line: 136, type: !14518)
!14515 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !14516, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14519)
!14516 = !DISubroutineType(types: !14517)
!14517 = !{!14429, !14518}
!14518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 32)
!14519 = !{!14514, !14520}
!14520 = !DILocalVariable(name: "k", scope: !14515, file: !460, line: 139, type: !14429)
!14521 = !DILocation(line: 0, scope: !14515, inlinedAt: !14522)
!14522 = distinct !DILocation(line: 88, column: 25, scope: !14423)
!14523 = !DILocation(line: 55, column: 2, scope: !14524, inlinedAt: !14528)
!14524 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5770, file: !5770, line: 42, type: !5771, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14525)
!14525 = !{!14526, !14527}
!14526 = !DILocalVariable(name: "key", scope: !14524, file: !5770, line: 44, type: !32)
!14527 = !DILocalVariable(name: "tmp", scope: !14524, file: !5770, line: 53, type: !32)
!14528 = distinct !DILocation(line: 145, column: 10, scope: !14515, inlinedAt: !14522)
!14529 = !{i64 1949834}
!14530 = !DILocation(line: 0, scope: !14524, inlinedAt: !14528)
!14531 = !DILocation(line: 93, column: 39, scope: !14423)
!14532 = !DILocation(line: 93, column: 11, scope: !14423)
!14533 = !DILocation(line: 95, column: 13, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14423, file: !2332, line: 95, column: 6)
!14535 = !DILocation(line: 95, column: 6, scope: !14423)
!14536 = !DILocalVariable(name: "thread", arg: 1, scope: !14537, file: !13727, line: 65, type: !14434)
!14537 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13727, file: !13727, line: 65, type: !14538, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14540)
!14538 = !DISubroutineType(types: !14539)
!14539 = !{null, !14434, !32}
!14540 = !{!14536, !14541}
!14541 = !DILocalVariable(name: "value", arg: 2, scope: !14537, file: !13727, line: 65, type: !32)
!14542 = !DILocation(line: 0, scope: !14537, inlinedAt: !14543)
!14543 = distinct !DILocation(line: 96, column: 3, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14534, file: !2332, line: 95, column: 22)
!14545 = !DILocation(line: 67, column: 15, scope: !14537, inlinedAt: !14543)
!14546 = !DILocation(line: 67, column: 33, scope: !14537, inlinedAt: !14543)
!14547 = !DILocation(line: 97, column: 3, scope: !14544)
!14548 = !DILocation(line: 98, column: 2, scope: !14544)
!14549 = !DILocation(line: 99, column: 23, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14534, file: !2332, line: 98, column: 9)
!14551 = !DILocation(line: 99, column: 37, scope: !14550)
!14552 = !DILocation(line: 99, column: 29, scope: !14550)
!14553 = !DILocation(line: 99, column: 17, scope: !14550)
!14554 = !DILocation(line: 99, column: 14, scope: !14550)
!14555 = !DILocation(line: 103, column: 2, scope: !14423)
!14556 = !DILocation(line: 106, column: 1, scope: !14423)
!14557 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2332, file: !2332, line: 117, type: !14558, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14564)
!14558 = !DISubroutineType(types: !14559)
!14559 = !{!103, !14375, !14560}
!14560 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1677, line: 67, baseType: !14561)
!14561 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1677, line: 65, size: 64, elements: !14562)
!14562 = !{!14563}
!14563 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14561, file: !1677, line: 66, baseType: !1676, size: 64)
!14564 = !{!14565, !14566, !14567, !14568, !14569}
!14565 = !DILocalVariable(name: "sem", arg: 1, scope: !14557, file: !2332, line: 117, type: !14375)
!14566 = !DILocalVariable(name: "timeout", arg: 2, scope: !14557, file: !2332, line: 117, type: !14560)
!14567 = !DILocalVariable(name: "ret", scope: !14557, file: !2332, line: 119, type: !103)
!14568 = !DILocalVariable(name: "key", scope: !14557, file: !2332, line: 124, type: !14429)
!14569 = !DILabel(scope: !14557, name: "out", file: !2332, line: 145)
!14570 = !DILocation(line: 0, scope: !14557)
!14571 = !DILocation(line: 0, scope: !14515, inlinedAt: !14572)
!14572 = distinct !DILocation(line: 124, column: 25, scope: !14557)
!14573 = !DILocation(line: 55, column: 2, scope: !14524, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 145, column: 10, scope: !14515, inlinedAt: !14572)
!14575 = !DILocation(line: 0, scope: !14524, inlinedAt: !14574)
!14576 = !DILocation(line: 128, column: 6, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !14557, file: !2332, line: 128, column: 6)
!14578 = !DILocation(line: 128, column: 6, scope: !14557)
!14579 = !{!"branch_weights", i32 1, i32 2000}
!14580 = !DILocation(line: 129, column: 13, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14577, file: !2332, line: 128, column: 31)
!14582 = !DILocalVariable(name: "key", arg: 2, scope: !14583, file: !460, line: 190, type: !14429)
!14583 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !14584, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14586)
!14584 = !DISubroutineType(types: !14585)
!14585 = !{null, !14518, !14429}
!14586 = !{!14587, !14582}
!14587 = !DILocalVariable(name: "l", arg: 1, scope: !14583, file: !460, line: 189, type: !14518)
!14588 = !DILocation(line: 0, scope: !14583, inlinedAt: !14589)
!14589 = distinct !DILocation(line: 130, column: 3, scope: !14581)
!14590 = !DILocalVariable(name: "key", arg: 1, scope: !14591, file: !5770, line: 84, type: !32)
!14591 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5770, file: !5770, line: 84, type: !5781, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14592)
!14592 = !{!14590}
!14593 = !DILocation(line: 0, scope: !14591, inlinedAt: !14594)
!14594 = distinct !DILocation(line: 215, column: 2, scope: !14583, inlinedAt: !14589)
!14595 = !DILocation(line: 95, column: 2, scope: !14591, inlinedAt: !14594)
!14596 = !{i64 1950651}
!14597 = !DILocation(line: 132, column: 3, scope: !14581)
!14598 = !DILocation(line: 135, column: 6, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14557, file: !2332, line: 135, column: 6)
!14600 = !DILocation(line: 135, column: 6, scope: !14557)
!14601 = !DILocation(line: 0, scope: !14583, inlinedAt: !14602)
!14602 = distinct !DILocation(line: 136, column: 3, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14599, file: !2332, line: 135, column: 40)
!14604 = !DILocation(line: 0, scope: !14591, inlinedAt: !14605)
!14605 = distinct !DILocation(line: 215, column: 2, scope: !14583, inlinedAt: !14602)
!14606 = !DILocation(line: 95, column: 2, scope: !14591, inlinedAt: !14605)
!14607 = !DILocation(line: 138, column: 3, scope: !14603)
!14608 = !DILocation(line: 143, column: 38, scope: !14557)
!14609 = !DILocation(line: 143, column: 8, scope: !14557)
!14610 = !DILocation(line: 143, column: 2, scope: !14557)
!14611 = !DILocation(line: 145, column: 1, scope: !14557)
!14612 = !DILocation(line: 148, column: 2, scope: !14557)
!14613 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2332, file: !2332, line: 151, type: !14424, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2313, retainedNodes: !14614)
!14614 = !{!14615, !14616, !14617}
!14615 = !DILocalVariable(name: "sem", arg: 1, scope: !14613, file: !2332, line: 151, type: !14375)
!14616 = !DILocalVariable(name: "thread", scope: !14613, file: !2332, line: 153, type: !14434)
!14617 = !DILocalVariable(name: "key", scope: !14613, file: !2332, line: 154, type: !14429)
!14618 = !DILocation(line: 0, scope: !14613)
!14619 = !DILocation(line: 0, scope: !14515, inlinedAt: !14620)
!14620 = distinct !DILocation(line: 154, column: 25, scope: !14613)
!14621 = !DILocation(line: 55, column: 2, scope: !14524, inlinedAt: !14622)
!14622 = distinct !DILocation(line: 145, column: 10, scope: !14515, inlinedAt: !14620)
!14623 = !DILocation(line: 0, scope: !14524, inlinedAt: !14622)
!14624 = !DILocation(line: 157, column: 12, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14613, file: !2332, line: 156, column: 15)
!14626 = !DILocation(line: 158, column: 14, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14625, file: !2332, line: 158, column: 7)
!14628 = !DILocation(line: 158, column: 7, scope: !14625)
!14629 = !DILocation(line: 0, scope: !14537, inlinedAt: !14630)
!14630 = distinct !DILocation(line: 161, column: 3, scope: !14625)
!14631 = !DILocation(line: 67, column: 15, scope: !14537, inlinedAt: !14630)
!14632 = !DILocation(line: 67, column: 33, scope: !14537, inlinedAt: !14630)
!14633 = !DILocation(line: 162, column: 3, scope: !14625)
!14634 = distinct !{!14634, !14635, !14636}
!14635 = !DILocation(line: 156, column: 2, scope: !14613)
!14636 = !DILocation(line: 163, column: 2, scope: !14613)
!14637 = !DILocation(line: 164, column: 7, scope: !14613)
!14638 = !DILocation(line: 164, column: 13, scope: !14613)
!14639 = !DILocation(line: 170, column: 2, scope: !14613)
!14640 = !DILocation(line: 171, column: 1, scope: !14613)
!14641 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2444, file: !2444, line: 93, type: !14642, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14644)
!14642 = !DISubroutineType(types: !14643)
!14643 = !{!332, !2339, !2339}
!14644 = !{!14645, !14646, !14647, !14648}
!14645 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14641, file: !2444, line: 93, type: !2339)
!14646 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14641, file: !2444, line: 94, type: !2339)
!14647 = !DILocalVariable(name: "b1", scope: !14641, file: !2444, line: 97, type: !332)
!14648 = !DILocalVariable(name: "b2", scope: !14641, file: !2444, line: 98, type: !332)
!14649 = !DILocation(line: 0, scope: !14641)
!14650 = !DILocation(line: 97, column: 30, scope: !14641)
!14651 = !DILocation(line: 98, column: 30, scope: !14641)
!14652 = !DILocation(line: 100, column: 9, scope: !14653)
!14653 = distinct !DILexicalBlock(scope: !14641, file: !2444, line: 100, column: 6)
!14654 = !DILocation(line: 100, column: 6, scope: !14641)
!14655 = !DILocation(line: 125, column: 1, scope: !14641)
!14656 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2444, file: !2444, line: 428, type: !14657, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14659)
!14657 = !DISubroutineType(types: !14658)
!14658 = !{null, !2339}
!14659 = !{!14660}
!14660 = !DILocalVariable(name: "curr", arg: 1, scope: !14656, file: !2444, line: 428, type: !2339)
!14661 = !DILocation(line: 0, scope: !14656)
!14662 = !DILocation(line: 434, column: 6, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14656, file: !2444, line: 434, column: 6)
!14664 = !DILocation(line: 434, column: 23, scope: !14663)
!14665 = !DILocation(line: 434, column: 6, scope: !14656)
!14666 = !DILocation(line: 435, column: 50, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14663, file: !2444, line: 434, column: 29)
!14668 = !DILocation(line: 435, column: 48, scope: !14667)
!14669 = !DILocation(line: 435, column: 29, scope: !14667)
!14670 = !DILocation(line: 436, column: 24, scope: !14667)
!14671 = !DILocation(line: 436, column: 3, scope: !14667)
!14672 = !DILocation(line: 437, column: 2, scope: !14667)
!14673 = !DILocation(line: 438, column: 1, scope: !14656)
!14674 = distinct !DISubprogram(name: "slice_time", scope: !2444, file: !2444, line: 407, type: !14675, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14677)
!14675 = !DISubroutineType(types: !14676)
!14676 = !{!103, !2339}
!14677 = !{!14678, !14679}
!14678 = !DILocalVariable(name: "curr", arg: 1, scope: !14674, file: !2444, line: 407, type: !2339)
!14679 = !DILocalVariable(name: "ret", scope: !14674, file: !2444, line: 409, type: !103)
!14680 = !DILocation(line: 0, scope: !14674)
!14681 = !DILocation(line: 409, column: 12, scope: !14674)
!14682 = !DILocation(line: 416, column: 2, scope: !14674)
!14683 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2444, file: !2444, line: 440, type: !14684, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14686)
!14684 = !DISubroutineType(types: !14685)
!14685 = !{null, !332, !103}
!14686 = !{!14687, !14688, !14689, !14695}
!14687 = !DILocalVariable(name: "slice", arg: 1, scope: !14683, file: !2444, line: 440, type: !332)
!14688 = !DILocalVariable(name: "prio", arg: 2, scope: !14683, file: !2444, line: 440, type: !103)
!14689 = !DILocalVariable(name: "__i", scope: !14690, file: !2444, line: 442, type: !14691)
!14690 = distinct !DILexicalBlock(scope: !14683, file: !2444, line: 442, column: 2)
!14691 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !14692)
!14692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !14693)
!14693 = !{!14694}
!14694 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14692, file: !460, line: 33, baseType: !103, size: 32)
!14695 = !DILocalVariable(name: "__key", scope: !14690, file: !2444, line: 442, type: !14691)
!14696 = !DILocation(line: 0, scope: !14683)
!14697 = !DILocation(line: 0, scope: !14690)
!14698 = !DILocalVariable(name: "l", arg: 1, scope: !14699, file: !460, line: 136, type: !14702)
!14699 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !14700, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14703)
!14700 = !DISubroutineType(types: !14701)
!14701 = !{!14691, !14702}
!14702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!14703 = !{!14698, !14704}
!14704 = !DILocalVariable(name: "k", scope: !14699, file: !460, line: 139, type: !14691)
!14705 = !DILocation(line: 0, scope: !14699, inlinedAt: !14706)
!14706 = distinct !DILocation(line: 442, column: 2, scope: !14690)
!14707 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !14712)
!14708 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5770, file: !5770, line: 42, type: !5771, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14709)
!14709 = !{!14710, !14711}
!14710 = !DILocalVariable(name: "key", scope: !14708, file: !5770, line: 44, type: !32)
!14711 = !DILocalVariable(name: "tmp", scope: !14708, file: !5770, line: 53, type: !32)
!14712 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !14706)
!14713 = !{i64 1992243}
!14714 = !DILocation(line: 0, scope: !14708, inlinedAt: !14712)
!14715 = !DILocation(line: 443, column: 29, scope: !14716)
!14716 = distinct !DILexicalBlock(scope: !14717, file: !2444, line: 442, column: 26)
!14717 = distinct !DILexicalBlock(scope: !14690, file: !2444, line: 442, column: 2)
!14718 = !DILocation(line: 444, column: 17, scope: !14716)
!14719 = !DILocation(line: 445, column: 51, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14716, file: !2444, line: 445, column: 7)
!14721 = !DILocation(line: 445, column: 7, scope: !14716)
!14722 = !DILocation(line: 0, scope: !14716)
!14723 = !DILocation(line: 451, column: 18, scope: !14716)
!14724 = !DILocation(line: 452, column: 3, scope: !14716)
!14725 = !DILocalVariable(name: "key", arg: 2, scope: !14726, file: !460, line: 190, type: !14691)
!14726 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !14727, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14729)
!14727 = !DISubroutineType(types: !14728)
!14728 = !{null, !14702, !14691}
!14729 = !{!14730, !14725}
!14730 = !DILocalVariable(name: "l", arg: 1, scope: !14726, file: !460, line: 189, type: !14702)
!14731 = !DILocation(line: 0, scope: !14726, inlinedAt: !14732)
!14732 = distinct !DILocation(line: 442, column: 2, scope: !14717)
!14733 = !DILocalVariable(name: "key", arg: 1, scope: !14734, file: !5770, line: 84, type: !32)
!14734 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5770, file: !5770, line: 84, type: !5781, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14735)
!14735 = !{!14733}
!14736 = !DILocation(line: 0, scope: !14734, inlinedAt: !14737)
!14737 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !14732)
!14738 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !14737)
!14739 = !{i64 1993060}
!14740 = !DILocation(line: 454, column: 1, scope: !14683)
!14741 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !5970, file: !5970, line: 389, type: !7797, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14742)
!14742 = !{!14743}
!14743 = !DILocalVariable(name: "t", arg: 1, scope: !14741, file: !5970, line: 389, type: !121)
!14744 = !DILocation(line: 0, scope: !14741)
!14745 = !DILocalVariable(name: "t", arg: 1, scope: !14746, file: !5970, line: 102, type: !1573)
!14746 = distinct !DISubprogram(name: "z_tmcvt", scope: !5970, file: !5970, line: 102, type: !5978, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14747)
!14747 = !{!14745, !14748, !14749, !14750, !14751, !14752, !14753, !14754, !14755, !14756, !14757}
!14748 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14746, file: !5970, line: 102, type: !121)
!14749 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14746, file: !5970, line: 103, type: !121)
!14750 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14746, file: !5970, line: 103, type: !157)
!14751 = !DILocalVariable(name: "result32", arg: 5, scope: !14746, file: !5970, line: 104, type: !157)
!14752 = !DILocalVariable(name: "round_up", arg: 6, scope: !14746, file: !5970, line: 104, type: !157)
!14753 = !DILocalVariable(name: "round_off", arg: 7, scope: !14746, file: !5970, line: 105, type: !157)
!14754 = !DILocalVariable(name: "mul_ratio", scope: !14746, file: !5970, line: 107, type: !157)
!14755 = !DILocalVariable(name: "div_ratio", scope: !14746, file: !5970, line: 109, type: !157)
!14756 = !DILocalVariable(name: "off", scope: !14746, file: !5970, line: 116, type: !1573)
!14757 = !DILocalVariable(name: "rdivisor", scope: !14758, file: !5970, line: 119, type: !121)
!14758 = distinct !DILexicalBlock(scope: !14759, file: !5970, line: 118, column: 18)
!14759 = distinct !DILexicalBlock(scope: !14746, file: !5970, line: 118, column: 6)
!14760 = !DILocation(line: 0, scope: !14746, inlinedAt: !14761)
!14761 = distinct !DILocation(line: 392, column: 9, scope: !14741)
!14762 = !DILocation(line: 143, column: 25, scope: !14763, inlinedAt: !14761)
!14763 = distinct !DILexicalBlock(scope: !14764, file: !5970, line: 142, column: 17)
!14764 = distinct !DILexicalBlock(scope: !14765, file: !5970, line: 142, column: 7)
!14765 = distinct !DILexicalBlock(scope: !14766, file: !5970, line: 141, column: 24)
!14766 = distinct !DILexicalBlock(scope: !14767, file: !5970, line: 141, column: 13)
!14767 = distinct !DILexicalBlock(scope: !14746, file: !5970, line: 134, column: 6)
!14768 = !DILocation(line: 392, column: 2, scope: !14741)
!14769 = distinct !DISubprogram(name: "z_time_slice", scope: !2444, file: !2444, line: 502, type: !8432, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14770)
!14770 = !{!14771, !14772}
!14771 = !DILocalVariable(name: "ticks", arg: 1, scope: !14769, file: !2444, line: 502, type: !103)
!14772 = !DILocalVariable(name: "key", scope: !14769, file: !2444, line: 511, type: !14691)
!14773 = !DILocation(line: 0, scope: !14769)
!14774 = !DILocation(line: 0, scope: !14699, inlinedAt: !14775)
!14775 = distinct !DILocation(line: 511, column: 25, scope: !14769)
!14776 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !14777)
!14777 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !14775)
!14778 = !DILocation(line: 0, scope: !14708, inlinedAt: !14777)
!14779 = !DILocation(line: 514, column: 6, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14769, file: !2444, line: 514, column: 6)
!14781 = !DILocation(line: 514, column: 25, scope: !14780)
!14782 = !DILocation(line: 514, column: 22, scope: !14780)
!14783 = !DILocation(line: 514, column: 6, scope: !14769)
!14784 = !DILocation(line: 515, column: 3, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14780, file: !2444, line: 514, column: 35)
!14786 = !DILocation(line: 0, scope: !14726, inlinedAt: !14787)
!14787 = distinct !DILocation(line: 516, column: 3, scope: !14785)
!14788 = !DILocation(line: 0, scope: !14734, inlinedAt: !14789)
!14789 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !14787)
!14790 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !14789)
!14791 = !DILocation(line: 517, column: 3, scope: !14785)
!14792 = !DILocation(line: 519, column: 18, scope: !14769)
!14793 = !DILocation(line: 522, column: 6, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14769, file: !2444, line: 522, column: 6)
!14795 = !DILocation(line: 522, column: 27, scope: !14794)
!14796 = !DILocation(line: 522, column: 30, scope: !14794)
!14797 = !DILocation(line: 522, column: 6, scope: !14769)
!14798 = !DILocation(line: 523, column: 30, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14800, file: !2444, line: 523, column: 7)
!14800 = distinct !DILexicalBlock(scope: !14794, file: !2444, line: 522, column: 51)
!14801 = !DILocation(line: 523, column: 13, scope: !14799)
!14802 = !DILocation(line: 523, column: 7, scope: !14800)
!14803 = !DILocation(line: 530, column: 10, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14799, file: !2444, line: 523, column: 43)
!14805 = !DILocation(line: 531, column: 3, scope: !14804)
!14806 = !DILocation(line: 532, column: 30, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14799, file: !2444, line: 531, column: 10)
!14808 = !DILocation(line: 535, column: 29, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14794, file: !2444, line: 534, column: 9)
!14810 = !DILocation(line: 0, scope: !14726, inlinedAt: !14811)
!14811 = distinct !DILocation(line: 537, column: 2, scope: !14769)
!14812 = !DILocation(line: 0, scope: !14734, inlinedAt: !14813)
!14813 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !14811)
!14814 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !14813)
!14815 = !DILocation(line: 538, column: 1, scope: !14769)
!14816 = distinct !DISubprogram(name: "sliceable", scope: !2444, file: !2444, line: 468, type: !14817, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14819)
!14817 = !DISubroutineType(types: !14818)
!14818 = !{!157, !2339}
!14819 = !{!14820, !14821}
!14820 = !DILocalVariable(name: "thread", arg: 1, scope: !14816, file: !2444, line: 468, type: !2339)
!14821 = !DILocalVariable(name: "ret", scope: !14816, file: !2444, line: 470, type: !157)
!14822 = !DILocation(line: 0, scope: !14816)
!14823 = !DILocation(line: 470, column: 13, scope: !14816)
!14824 = !DILocation(line: 471, column: 3, scope: !14816)
!14825 = !DILocation(line: 471, column: 7, scope: !14816)
!14826 = !DILocation(line: 472, column: 3, scope: !14816)
!14827 = !DILocation(line: 472, column: 37, scope: !14816)
!14828 = !DILocation(line: 472, column: 24, scope: !14816)
!14829 = !DILocation(line: 472, column: 43, scope: !14816)
!14830 = !DILocation(line: 472, column: 7, scope: !14816)
!14831 = !DILocation(line: 473, column: 3, scope: !14816)
!14832 = !DILocation(line: 473, column: 7, scope: !14816)
!14833 = !DILocation(line: 473, column: 6, scope: !14816)
!14834 = !DILocation(line: 479, column: 2, scope: !14816)
!14835 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2444, file: !2444, line: 482, type: !14836, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14838)
!14836 = !DISubroutineType(types: !14837)
!14837 = !{!14691, !14691}
!14838 = !{!14839, !14840}
!14839 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14835, file: !2444, line: 482, type: !14691)
!14840 = !DILocalVariable(name: "curr", scope: !14835, file: !2444, line: 484, type: !2339)
!14841 = !DILocation(line: 0, scope: !14835)
!14842 = !DILocation(line: 484, column: 26, scope: !14835)
!14843 = !DILocation(line: 493, column: 7, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14835, file: !2444, line: 493, column: 6)
!14845 = !DILocation(line: 493, column: 6, scope: !14835)
!14846 = !DILocation(line: 494, column: 3, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14844, file: !2444, line: 493, column: 49)
!14848 = !DILocation(line: 495, column: 2, scope: !14847)
!14849 = !DILocation(line: 496, column: 2, scope: !14835)
!14850 = !DILocation(line: 499, column: 1, scope: !14835)
!14851 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13707, file: !13707, line: 106, type: !14817, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14852)
!14852 = !{!14853, !14854}
!14853 = !DILocalVariable(name: "thread", arg: 1, scope: !14851, file: !13707, line: 106, type: !2339)
!14854 = !DILocalVariable(name: "state", scope: !14851, file: !13707, line: 108, type: !154)
!14855 = !DILocation(line: 0, scope: !14851)
!14856 = !DILocation(line: 108, column: 31, scope: !14851)
!14857 = !DILocation(line: 110, column: 16, scope: !14851)
!14858 = !DILocation(line: 111, column: 41, scope: !14851)
!14859 = !DILocation(line: 110, column: 2, scope: !14851)
!14860 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2444, file: !2444, line: 393, type: !14657, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14861)
!14861 = !{!14862}
!14862 = !DILocalVariable(name: "thread", arg: 1, scope: !14860, file: !2444, line: 393, type: !2339)
!14863 = !DILocation(line: 0, scope: !14860)
!14864 = !DILocation(line: 395, column: 6, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14860, file: !2444, line: 395, column: 6)
!14866 = !DILocation(line: 395, column: 6, scope: !14860)
!14867 = !DILocalVariable(name: "thread", arg: 1, scope: !14868, file: !2444, line: 264, type: !2339)
!14868 = distinct !DISubprogram(name: "dequeue_thread", scope: !2444, file: !2444, line: 264, type: !14657, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14869)
!14869 = !{!14867}
!14870 = !DILocation(line: 0, scope: !14868, inlinedAt: !14871)
!14871 = distinct !DILocation(line: 396, column: 3, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14865, file: !2444, line: 395, column: 34)
!14873 = !DILocation(line: 266, column: 15, scope: !14868, inlinedAt: !14871)
!14874 = !DILocation(line: 266, column: 28, scope: !14868, inlinedAt: !14871)
!14875 = !DILocalVariable(name: "thread", arg: 1, scope: !14876, file: !2444, line: 232, type: !2339)
!14876 = distinct !DISubprogram(name: "runq_remove", scope: !2444, file: !2444, line: 232, type: !14657, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14877)
!14877 = !{!14875}
!14878 = !DILocation(line: 0, scope: !14876, inlinedAt: !14879)
!14879 = distinct !DILocation(line: 268, column: 3, scope: !14880, inlinedAt: !14871)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !2444, line: 267, column: 35)
!14881 = distinct !DILexicalBlock(scope: !14868, file: !2444, line: 267, column: 6)
!14882 = !DILocation(line: 234, column: 2, scope: !14876, inlinedAt: !14879)
!14883 = !DILocation(line: 397, column: 2, scope: !14872)
!14884 = !DILocalVariable(name: "thread", arg: 1, scope: !14885, file: !2444, line: 250, type: !2339)
!14885 = distinct !DISubprogram(name: "queue_thread", scope: !2444, file: !2444, line: 250, type: !14657, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14886)
!14886 = !{!14884}
!14887 = !DILocation(line: 0, scope: !14885, inlinedAt: !14888)
!14888 = distinct !DILocation(line: 398, column: 2, scope: !14860)
!14889 = !DILocation(line: 252, column: 15, scope: !14885, inlinedAt: !14888)
!14890 = !DILocation(line: 252, column: 28, scope: !14885, inlinedAt: !14888)
!14891 = !DILocalVariable(name: "thread", arg: 1, scope: !14892, file: !2444, line: 227, type: !2339)
!14892 = distinct !DISubprogram(name: "runq_add", scope: !2444, file: !2444, line: 227, type: !14657, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14893)
!14893 = !{!14891}
!14894 = !DILocation(line: 0, scope: !14892, inlinedAt: !14895)
!14895 = distinct !DILocation(line: 254, column: 3, scope: !14896, inlinedAt: !14888)
!14896 = distinct !DILexicalBlock(scope: !14897, file: !2444, line: 253, column: 35)
!14897 = distinct !DILexicalBlock(scope: !14885, file: !2444, line: 253, column: 6)
!14898 = !DILocalVariable(name: "pq", arg: 1, scope: !14899, file: !2444, line: 181, type: !14902)
!14899 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2444, file: !2444, line: 181, type: !14900, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14903)
!14900 = !DISubroutineType(types: !14901)
!14901 = !{null, !14902, !2339}
!14902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!14903 = !{!14898, !14904, !14905}
!14904 = !DILocalVariable(name: "thread", arg: 2, scope: !14899, file: !2444, line: 182, type: !2339)
!14905 = !DILocalVariable(name: "t", scope: !14899, file: !2444, line: 184, type: !2339)
!14906 = !DILocation(line: 0, scope: !14899, inlinedAt: !14907)
!14907 = distinct !DILocation(line: 229, column: 2, scope: !14892, inlinedAt: !14895)
!14908 = !DILocation(line: 188, column: 2, scope: !14909, inlinedAt: !14907)
!14909 = distinct !DILexicalBlock(scope: !14899, file: !2444, line: 188, column: 2)
!14910 = !DILocation(line: 188, column: 2, scope: !14911, inlinedAt: !14907)
!14911 = distinct !DILexicalBlock(scope: !14909, file: !2444, line: 188, column: 2)
!14912 = !DILocation(line: 0, scope: !14909, inlinedAt: !14907)
!14913 = !DILocation(line: 189, column: 7, scope: !14914, inlinedAt: !14907)
!14914 = distinct !DILexicalBlock(scope: !14915, file: !2444, line: 189, column: 7)
!14915 = distinct !DILexicalBlock(scope: !14911, file: !2444, line: 188, column: 56)
!14916 = !DILocation(line: 189, column: 35, scope: !14914, inlinedAt: !14907)
!14917 = !DILocation(line: 189, column: 7, scope: !14915, inlinedAt: !14907)
!14918 = !DILocation(line: 191, column: 21, scope: !14919, inlinedAt: !14907)
!14919 = distinct !DILexicalBlock(scope: !14914, file: !2444, line: 189, column: 40)
!14920 = !DILocation(line: 190, column: 4, scope: !14919, inlinedAt: !14907)
!14921 = !DILocation(line: 192, column: 4, scope: !14919, inlinedAt: !14907)
!14922 = distinct !{!14922, !14908, !14923}
!14923 = !DILocation(line: 194, column: 2, scope: !14909, inlinedAt: !14907)
!14924 = !DILocation(line: 196, column: 37, scope: !14899, inlinedAt: !14907)
!14925 = !DILocation(line: 196, column: 2, scope: !14899, inlinedAt: !14907)
!14926 = !DILocation(line: 197, column: 1, scope: !14899, inlinedAt: !14907)
!14927 = !DILocation(line: 399, column: 25, scope: !14860)
!14928 = !DILocation(line: 399, column: 22, scope: !14860)
!14929 = !DILocation(line: 399, column: 2, scope: !14860)
!14930 = !DILocation(line: 400, column: 1, scope: !14860)
!14931 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13707, file: !13707, line: 136, type: !14817, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14932)
!14932 = !{!14933}
!14933 = !DILocalVariable(name: "thread", arg: 1, scope: !14931, file: !13707, line: 136, type: !2339)
!14934 = !DILocation(line: 0, scope: !14931)
!14935 = !DILocation(line: 138, column: 9, scope: !14931)
!14936 = !DILocation(line: 138, column: 2, scope: !14931)
!14937 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2444, file: !2444, line: 1137, type: !14900, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14938)
!14938 = !{!14939, !14940}
!14939 = !DILocalVariable(name: "pq", arg: 1, scope: !14937, file: !2444, line: 1137, type: !14902)
!14940 = !DILocalVariable(name: "thread", arg: 2, scope: !14937, file: !2444, line: 1137, type: !2339)
!14941 = !DILocation(line: 0, scope: !14937)
!14942 = !DILocation(line: 1141, column: 33, scope: !14937)
!14943 = !DILocation(line: 1141, column: 2, scope: !14937)
!14944 = !DILocation(line: 1142, column: 1, scope: !14937)
!14945 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !309, file: !309, line: 294, type: !14946, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14948)
!14946 = !DISubroutineType(types: !14947)
!14947 = !{!2440, !14902}
!14948 = !{!14949}
!14949 = !DILocalVariable(name: "list", arg: 1, scope: !14945, file: !309, line: 294, type: !14902)
!14950 = !DILocation(line: 0, scope: !14945)
!14951 = !DILocation(line: 296, column: 9, scope: !14945)
!14952 = !DILocation(line: 296, column: 49, scope: !14945)
!14953 = !DILocation(line: 296, column: 2, scope: !14945)
!14954 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !309, file: !309, line: 443, type: !14955, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14957)
!14955 = !DISubroutineType(types: !14956)
!14956 = !{null, !2440, !2440}
!14957 = !{!14958, !14959, !14960}
!14958 = !DILocalVariable(name: "successor", arg: 1, scope: !14954, file: !309, line: 443, type: !2440)
!14959 = !DILocalVariable(name: "node", arg: 2, scope: !14954, file: !309, line: 443, type: !2440)
!14960 = !DILocalVariable(name: "prev", scope: !14954, file: !309, line: 445, type: !14961)
!14961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2440)
!14962 = !DILocation(line: 0, scope: !14954)
!14963 = !DILocation(line: 445, column: 39, scope: !14954)
!14964 = !DILocation(line: 447, column: 8, scope: !14954)
!14965 = !DILocation(line: 447, column: 13, scope: !14954)
!14966 = !DILocation(line: 448, column: 8, scope: !14954)
!14967 = !DILocation(line: 448, column: 13, scope: !14954)
!14968 = !DILocation(line: 449, column: 8, scope: !14954)
!14969 = !DILocation(line: 449, column: 13, scope: !14954)
!14970 = !DILocation(line: 450, column: 18, scope: !14954)
!14971 = !DILocation(line: 451, column: 1, scope: !14954)
!14972 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !309, file: !309, line: 341, type: !14973, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14975)
!14973 = !DISubroutineType(types: !14974)
!14974 = !{!2440, !14902, !2440}
!14975 = !{!14976, !14977}
!14976 = !DILocalVariable(name: "list", arg: 1, scope: !14972, file: !309, line: 341, type: !14902)
!14977 = !DILocalVariable(name: "node", arg: 2, scope: !14972, file: !309, line: 342, type: !2440)
!14978 = !DILocation(line: 0, scope: !14972)
!14979 = !DILocation(line: 344, column: 15, scope: !14972)
!14980 = !DILocation(line: 344, column: 9, scope: !14972)
!14981 = !DILocation(line: 344, column: 26, scope: !14972)
!14982 = !DILocation(line: 344, column: 2, scope: !14972)
!14983 = distinct !DISubprogram(name: "sys_dlist_append", scope: !309, file: !309, line: 404, type: !14984, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !14986)
!14984 = !DISubroutineType(types: !14985)
!14985 = !{null, !14902, !2440}
!14986 = !{!14987, !14988, !14989}
!14987 = !DILocalVariable(name: "list", arg: 1, scope: !14983, file: !309, line: 404, type: !14902)
!14988 = !DILocalVariable(name: "node", arg: 2, scope: !14983, file: !309, line: 404, type: !2440)
!14989 = !DILocalVariable(name: "tail", scope: !14983, file: !309, line: 406, type: !14961)
!14990 = !DILocation(line: 0, scope: !14983)
!14991 = !DILocation(line: 406, column: 34, scope: !14983)
!14992 = !DILocation(line: 408, column: 8, scope: !14983)
!14993 = !DILocation(line: 408, column: 13, scope: !14983)
!14994 = !DILocation(line: 409, column: 8, scope: !14983)
!14995 = !DILocation(line: 409, column: 13, scope: !14983)
!14996 = !DILocation(line: 411, column: 8, scope: !14983)
!14997 = !DILocation(line: 411, column: 13, scope: !14983)
!14998 = !DILocation(line: 412, column: 13, scope: !14983)
!14999 = !DILocation(line: 413, column: 1, scope: !14983)
!15000 = distinct !DISubprogram(name: "update_cache", scope: !2444, file: !2444, line: 559, type: !8432, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15001)
!15001 = !{!15002, !15003}
!15002 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15000, file: !2444, line: 559, type: !103)
!15003 = !DILocalVariable(name: "thread", scope: !15000, file: !2444, line: 562, type: !2339)
!15004 = !DILocation(line: 0, scope: !15000)
!15005 = !DILocation(line: 239, column: 9, scope: !15006, inlinedAt: !15009)
!15006 = distinct !DISubprogram(name: "runq_best", scope: !2444, file: !2444, line: 237, type: !15007, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !461)
!15007 = !DISubroutineType(types: !15008)
!15008 = !{!2339}
!15009 = distinct !DILocation(line: 314, column: 28, scope: !15010, inlinedAt: !15013)
!15010 = distinct !DISubprogram(name: "next_up", scope: !2444, file: !2444, line: 312, type: !15007, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15011)
!15011 = !{!15012}
!15012 = !DILocalVariable(name: "thread", scope: !15010, file: !2444, line: 314, type: !2339)
!15013 = distinct !DILocation(line: 562, column: 28, scope: !15000)
!15014 = !DILocation(line: 0, scope: !15010, inlinedAt: !15013)
!15015 = !DILocation(line: 340, column: 17, scope: !15010, inlinedAt: !15013)
!15016 = !DILocation(line: 340, column: 9, scope: !15010, inlinedAt: !15013)
!15017 = !DILocalVariable(name: "thread", arg: 1, scope: !15018, file: !2444, line: 127, type: !2339)
!15018 = distinct !DISubprogram(name: "should_preempt", scope: !2444, file: !2444, line: 127, type: !15019, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15021)
!15019 = !DISubroutineType(types: !15020)
!15020 = !{!157, !2339, !103}
!15021 = !{!15017, !15022}
!15022 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15018, file: !2444, line: 128, type: !103)
!15023 = !DILocation(line: 0, scope: !15018, inlinedAt: !15024)
!15024 = distinct !DILocation(line: 564, column: 6, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !15000, file: !2444, line: 564, column: 6)
!15026 = !DILocation(line: 133, column: 17, scope: !15027, inlinedAt: !15024)
!15027 = distinct !DILexicalBlock(scope: !15018, file: !2444, line: 133, column: 6)
!15028 = !DILocation(line: 0, scope: !15025)
!15029 = !DILocation(line: 133, column: 6, scope: !15018, inlinedAt: !15024)
!15030 = !DILocation(line: 140, column: 6, scope: !15031, inlinedAt: !15024)
!15031 = distinct !DILexicalBlock(scope: !15018, file: !2444, line: 140, column: 6)
!15032 = !DILocation(line: 140, column: 6, scope: !15018, inlinedAt: !15024)
!15033 = !DILocation(line: 150, column: 9, scope: !15034, inlinedAt: !15024)
!15034 = distinct !DILexicalBlock(scope: !15018, file: !2444, line: 149, column: 6)
!15035 = !DILocation(line: 149, column: 6, scope: !15018, inlinedAt: !15024)
!15036 = !DILocation(line: 157, column: 6, scope: !15037, inlinedAt: !15024)
!15037 = distinct !DILexicalBlock(scope: !15018, file: !2444, line: 157, column: 6)
!15038 = !DILocation(line: 564, column: 6, scope: !15000)
!15039 = !DILocation(line: 566, column: 14, scope: !15040)
!15040 = distinct !DILexicalBlock(scope: !15041, file: !2444, line: 566, column: 7)
!15041 = distinct !DILexicalBlock(scope: !15025, file: !2444, line: 564, column: 42)
!15042 = !DILocation(line: 566, column: 7, scope: !15041)
!15043 = !DILocation(line: 567, column: 4, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !15040, file: !2444, line: 566, column: 27)
!15045 = !DILocation(line: 568, column: 3, scope: !15044)
!15046 = !DILocation(line: 585, column: 1, scope: !15000)
!15047 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2444, file: !2444, line: 1144, type: !15048, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15050)
!15048 = !DISubroutineType(types: !15049)
!15049 = !{!2339, !14902}
!15050 = !{!15051, !15052, !15053}
!15051 = !DILocalVariable(name: "pq", arg: 1, scope: !15047, file: !2444, line: 1144, type: !14902)
!15052 = !DILocalVariable(name: "thread", scope: !15047, file: !2444, line: 1146, type: !2339)
!15053 = !DILocalVariable(name: "n", scope: !15047, file: !2444, line: 1147, type: !2440)
!15054 = !DILocation(line: 0, scope: !15047)
!15055 = !DILocation(line: 1147, column: 19, scope: !15047)
!15056 = !DILocation(line: 1152, column: 2, scope: !15047)
!15057 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13707, file: !13707, line: 115, type: !14817, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15058)
!15058 = !{!15059}
!15059 = !DILocalVariable(name: "thread", arg: 1, scope: !15057, file: !13707, line: 115, type: !2339)
!15060 = !DILocation(line: 0, scope: !15057)
!15061 = !DILocation(line: 117, column: 46, scope: !15057)
!15062 = !DILocation(line: 117, column: 10, scope: !15057)
!15063 = !DILocation(line: 117, column: 9, scope: !15057)
!15064 = !DILocation(line: 117, column: 2, scope: !15057)
!15065 = distinct !DISubprogram(name: "is_preempt", scope: !2444, file: !2444, line: 62, type: !14675, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15066)
!15066 = !{!15067}
!15067 = !DILocalVariable(name: "thread", arg: 1, scope: !15065, file: !2444, line: 62, type: !2339)
!15068 = !DILocation(line: 0, scope: !15065)
!15069 = !DILocation(line: 65, column: 22, scope: !15065)
!15070 = !DILocation(line: 65, column: 30, scope: !15065)
!15071 = !DILocation(line: 65, column: 2, scope: !15065)
!15072 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14101, file: !14101, line: 35, type: !15073, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15077)
!15073 = !DISubroutineType(types: !15074)
!15074 = !{!157, !15075}
!15075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15076, size: 32)
!15076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2390)
!15077 = !{!15078}
!15078 = !DILocalVariable(name: "to", arg: 1, scope: !15072, file: !14101, line: 35, type: !15075)
!15079 = !DILocation(line: 0, scope: !15072)
!15080 = !DILocation(line: 37, column: 35, scope: !15072)
!15081 = !DILocation(line: 37, column: 10, scope: !15072)
!15082 = !DILocation(line: 37, column: 9, scope: !15072)
!15083 = !DILocation(line: 37, column: 2, scope: !15072)
!15084 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !309, file: !309, line: 225, type: !15085, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15089)
!15085 = !DISubroutineType(types: !15086)
!15086 = !{!157, !15087}
!15087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15088, size: 32)
!15088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2349)
!15089 = !{!15090}
!15090 = !DILocalVariable(name: "node", arg: 1, scope: !15084, file: !309, line: 225, type: !15087)
!15091 = !DILocation(line: 0, scope: !15084)
!15092 = !DILocation(line: 227, column: 15, scope: !15084)
!15093 = !DILocation(line: 227, column: 20, scope: !15084)
!15094 = !DILocation(line: 227, column: 2, scope: !15084)
!15095 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !309, file: !309, line: 325, type: !14973, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15096)
!15096 = !{!15097, !15098}
!15097 = !DILocalVariable(name: "list", arg: 1, scope: !15095, file: !309, line: 325, type: !14902)
!15098 = !DILocalVariable(name: "node", arg: 2, scope: !15095, file: !309, line: 326, type: !2440)
!15099 = !DILocation(line: 0, scope: !15095)
!15100 = !DILocation(line: 328, column: 24, scope: !15095)
!15101 = !DILocation(line: 328, column: 15, scope: !15095)
!15102 = !DILocation(line: 328, column: 9, scope: !15095)
!15103 = !DILocation(line: 328, column: 45, scope: !15095)
!15104 = !DILocation(line: 328, column: 2, scope: !15095)
!15105 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !309, file: !309, line: 266, type: !15106, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15108)
!15106 = !DISubroutineType(types: !15107)
!15107 = !{!157, !14902}
!15108 = !{!15109}
!15109 = !DILocalVariable(name: "list", arg: 1, scope: !15105, file: !309, line: 266, type: !14902)
!15110 = !DILocation(line: 0, scope: !15105)
!15111 = !DILocation(line: 268, column: 15, scope: !15105)
!15112 = !DILocation(line: 268, column: 20, scope: !15105)
!15113 = !DILocation(line: 268, column: 2, scope: !15105)
!15114 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !309, file: !309, line: 496, type: !15115, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15117)
!15115 = !DISubroutineType(types: !15116)
!15116 = !{null, !2440}
!15117 = !{!15118, !15119, !15120}
!15118 = !DILocalVariable(name: "node", arg: 1, scope: !15114, file: !309, line: 496, type: !2440)
!15119 = !DILocalVariable(name: "prev", scope: !15114, file: !309, line: 498, type: !14961)
!15120 = !DILocalVariable(name: "next", scope: !15114, file: !309, line: 499, type: !14961)
!15121 = !DILocation(line: 0, scope: !15114)
!15122 = !DILocation(line: 498, column: 34, scope: !15114)
!15123 = !DILocation(line: 499, column: 34, scope: !15114)
!15124 = !DILocation(line: 501, column: 8, scope: !15114)
!15125 = !DILocation(line: 501, column: 13, scope: !15114)
!15126 = !DILocation(line: 502, column: 8, scope: !15114)
!15127 = !DILocation(line: 502, column: 13, scope: !15114)
!15128 = !DILocation(line: 503, column: 2, scope: !15114)
!15129 = !DILocation(line: 504, column: 1, scope: !15114)
!15130 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !15115, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15131)
!15131 = !{!15132}
!15132 = !DILocalVariable(name: "node", arg: 1, scope: !15130, file: !309, line: 211, type: !2440)
!15133 = !DILocation(line: 0, scope: !15130)
!15134 = !DILocation(line: 213, column: 8, scope: !15130)
!15135 = !DILocation(line: 213, column: 13, scope: !15130)
!15136 = !DILocation(line: 214, column: 8, scope: !15130)
!15137 = !DILocation(line: 214, column: 13, scope: !15130)
!15138 = !DILocation(line: 215, column: 1, scope: !15130)
!15139 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13707, file: !13707, line: 131, type: !15140, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15142)
!15140 = !DISubroutineType(types: !15141)
!15141 = !{!157, !2339, !121}
!15142 = !{!15143, !15144}
!15143 = !DILocalVariable(name: "thread", arg: 1, scope: !15139, file: !13707, line: 131, type: !2339)
!15144 = !DILocalVariable(name: "state", arg: 2, scope: !15139, file: !13707, line: 131, type: !121)
!15145 = !DILocation(line: 0, scope: !15139)
!15146 = !DILocation(line: 133, column: 23, scope: !15139)
!15147 = !DILocation(line: 133, column: 45, scope: !15139)
!15148 = !DILocation(line: 133, column: 2, scope: !15139)
!15149 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13707, file: !13707, line: 211, type: !15150, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15152)
!15150 = !DISubroutineType(types: !15151)
!15151 = !{!157, !103, !103}
!15152 = !{!15153, !15154}
!15153 = !DILocalVariable(name: "prio", arg: 1, scope: !15149, file: !13707, line: 211, type: !103)
!15154 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15149, file: !13707, line: 211, type: !103)
!15155 = !DILocation(line: 0, scope: !15149)
!15156 = !DILocation(line: 213, column: 9, scope: !15149)
!15157 = !DILocation(line: 213, column: 2, scope: !15149)
!15158 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13707, file: !13707, line: 83, type: !14817, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15159)
!15159 = !{!15160}
!15160 = !DILocalVariable(name: "thread", arg: 1, scope: !15158, file: !13707, line: 83, type: !2339)
!15161 = !DILocation(line: 0, scope: !15158)
!15162 = !DILocation(line: 89, column: 16, scope: !15158)
!15163 = !DILocation(line: 89, column: 2, scope: !15158)
!15164 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13707, file: !13707, line: 206, type: !15150, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15165)
!15165 = !{!15166, !15167}
!15166 = !DILocalVariable(name: "prio1", arg: 1, scope: !15164, file: !13707, line: 206, type: !103)
!15167 = !DILocalVariable(name: "prio2", arg: 2, scope: !15164, file: !13707, line: 206, type: !103)
!15168 = !DILocation(line: 0, scope: !15164)
!15169 = !DILocation(line: 208, column: 15, scope: !15164)
!15170 = !DILocation(line: 208, column: 2, scope: !15164)
!15171 = distinct !DISubprogram(name: "z_ready_thread", scope: !2444, file: !2444, line: 635, type: !14657, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15172)
!15172 = !{!15173, !15174, !15176}
!15173 = !DILocalVariable(name: "thread", arg: 1, scope: !15171, file: !2444, line: 635, type: !2339)
!15174 = !DILocalVariable(name: "__i", scope: !15175, file: !2444, line: 637, type: !14691)
!15175 = distinct !DILexicalBlock(scope: !15171, file: !2444, line: 637, column: 2)
!15176 = !DILocalVariable(name: "__key", scope: !15175, file: !2444, line: 637, type: !14691)
!15177 = !DILocation(line: 0, scope: !15171)
!15178 = !DILocation(line: 0, scope: !15175)
!15179 = !DILocation(line: 0, scope: !14699, inlinedAt: !15180)
!15180 = distinct !DILocation(line: 637, column: 2, scope: !15175)
!15181 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15182)
!15182 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15180)
!15183 = !DILocation(line: 0, scope: !14708, inlinedAt: !15182)
!15184 = !DILocation(line: 639, column: 4, scope: !15185)
!15185 = distinct !DILexicalBlock(scope: !15186, file: !2444, line: 638, column: 41)
!15186 = distinct !DILexicalBlock(scope: !15187, file: !2444, line: 638, column: 7)
!15187 = distinct !DILexicalBlock(scope: !15188, file: !2444, line: 637, column: 26)
!15188 = distinct !DILexicalBlock(scope: !15175, file: !2444, line: 637, column: 2)
!15189 = !DILocation(line: 0, scope: !14726, inlinedAt: !15190)
!15190 = distinct !DILocation(line: 637, column: 2, scope: !15188)
!15191 = !DILocation(line: 0, scope: !14734, inlinedAt: !15192)
!15192 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15190)
!15193 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15192)
!15194 = !DILocation(line: 642, column: 1, scope: !15171)
!15195 = distinct !DISubprogram(name: "ready_thread", scope: !2444, file: !2444, line: 617, type: !14657, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15196)
!15196 = !{!15197}
!15197 = !DILocalVariable(name: "thread", arg: 1, scope: !15195, file: !2444, line: 617, type: !2339)
!15198 = !DILocation(line: 0, scope: !15195)
!15199 = !DILocation(line: 626, column: 7, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !15195, file: !2444, line: 626, column: 6)
!15201 = !DILocation(line: 626, column: 34, scope: !15200)
!15202 = !DILocation(line: 626, column: 37, scope: !15200)
!15203 = !DILocation(line: 626, column: 6, scope: !15195)
!15204 = !DILocation(line: 0, scope: !14885, inlinedAt: !15205)
!15205 = distinct !DILocation(line: 629, column: 3, scope: !15206)
!15206 = distinct !DILexicalBlock(scope: !15200, file: !2444, line: 626, column: 64)
!15207 = !DILocation(line: 252, column: 15, scope: !14885, inlinedAt: !15205)
!15208 = !DILocation(line: 252, column: 28, scope: !14885, inlinedAt: !15205)
!15209 = !DILocation(line: 0, scope: !14892, inlinedAt: !15210)
!15210 = distinct !DILocation(line: 254, column: 3, scope: !14896, inlinedAt: !15205)
!15211 = !DILocation(line: 0, scope: !14899, inlinedAt: !15212)
!15212 = distinct !DILocation(line: 229, column: 2, scope: !14892, inlinedAt: !15210)
!15213 = !DILocation(line: 188, column: 2, scope: !14909, inlinedAt: !15212)
!15214 = !DILocation(line: 188, column: 2, scope: !14911, inlinedAt: !15212)
!15215 = !DILocation(line: 0, scope: !14909, inlinedAt: !15212)
!15216 = !DILocation(line: 189, column: 7, scope: !14914, inlinedAt: !15212)
!15217 = !DILocation(line: 189, column: 35, scope: !14914, inlinedAt: !15212)
!15218 = !DILocation(line: 189, column: 7, scope: !14915, inlinedAt: !15212)
!15219 = !DILocation(line: 191, column: 21, scope: !14919, inlinedAt: !15212)
!15220 = !DILocation(line: 190, column: 4, scope: !14919, inlinedAt: !15212)
!15221 = !DILocation(line: 192, column: 4, scope: !14919, inlinedAt: !15212)
!15222 = distinct !{!15222, !15213, !15223}
!15223 = !DILocation(line: 194, column: 2, scope: !14909, inlinedAt: !15212)
!15224 = !DILocation(line: 196, column: 37, scope: !14899, inlinedAt: !15212)
!15225 = !DILocation(line: 196, column: 2, scope: !14899, inlinedAt: !15212)
!15226 = !DILocation(line: 197, column: 1, scope: !14899, inlinedAt: !15212)
!15227 = !DILocation(line: 630, column: 3, scope: !15206)
!15228 = !DILocation(line: 632, column: 2, scope: !15206)
!15229 = !DILocation(line: 633, column: 1, scope: !15195)
!15230 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13707, file: !13707, line: 120, type: !14817, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15231)
!15231 = !{!15232}
!15232 = !DILocalVariable(name: "thread", arg: 1, scope: !15230, file: !13707, line: 120, type: !2339)
!15233 = !DILocation(line: 0, scope: !15230)
!15234 = !DILocation(line: 122, column: 12, scope: !15230)
!15235 = !DILocation(line: 122, column: 62, scope: !15230)
!15236 = !DILocation(line: 123, column: 4, scope: !15230)
!15237 = !DILocation(line: 122, column: 2, scope: !15230)
!15238 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2444, file: !2444, line: 644, type: !14657, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15239)
!15239 = !{!15240, !15241, !15243}
!15240 = !DILocalVariable(name: "thread", arg: 1, scope: !15238, file: !2444, line: 644, type: !2339)
!15241 = !DILocalVariable(name: "__i", scope: !15242, file: !2444, line: 646, type: !14691)
!15242 = distinct !DILexicalBlock(scope: !15238, file: !2444, line: 646, column: 2)
!15243 = !DILocalVariable(name: "__key", scope: !15242, file: !2444, line: 646, type: !14691)
!15244 = !DILocation(line: 0, scope: !15238)
!15245 = !DILocation(line: 0, scope: !15242)
!15246 = !DILocation(line: 0, scope: !14699, inlinedAt: !15247)
!15247 = distinct !DILocation(line: 646, column: 2, scope: !15242)
!15248 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15249)
!15249 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15247)
!15250 = !DILocation(line: 0, scope: !14708, inlinedAt: !15249)
!15251 = !DILocation(line: 647, column: 3, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15253, file: !2444, line: 646, column: 26)
!15253 = distinct !DILexicalBlock(scope: !15242, file: !2444, line: 646, column: 2)
!15254 = !DILocation(line: 0, scope: !14726, inlinedAt: !15255)
!15255 = distinct !DILocation(line: 646, column: 2, scope: !15253)
!15256 = !DILocation(line: 0, scope: !14734, inlinedAt: !15257)
!15257 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15255)
!15258 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15257)
!15259 = !DILocation(line: 649, column: 1, scope: !15238)
!15260 = distinct !DISubprogram(name: "z_sched_start", scope: !2444, file: !2444, line: 651, type: !14657, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15261)
!15261 = !{!15262, !15263}
!15262 = !DILocalVariable(name: "thread", arg: 1, scope: !15260, file: !2444, line: 651, type: !2339)
!15263 = !DILocalVariable(name: "key", scope: !15260, file: !2444, line: 653, type: !14691)
!15264 = !DILocation(line: 0, scope: !15260)
!15265 = !DILocation(line: 0, scope: !14699, inlinedAt: !15266)
!15266 = distinct !DILocation(line: 653, column: 25, scope: !15260)
!15267 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15268)
!15268 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15266)
!15269 = !DILocation(line: 0, scope: !14708, inlinedAt: !15268)
!15270 = !DILocation(line: 655, column: 6, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15260, file: !2444, line: 655, column: 6)
!15272 = !DILocation(line: 655, column: 6, scope: !15260)
!15273 = !DILocation(line: 0, scope: !14726, inlinedAt: !15274)
!15274 = distinct !DILocation(line: 656, column: 3, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15271, file: !2444, line: 655, column: 36)
!15276 = !DILocation(line: 0, scope: !14734, inlinedAt: !15277)
!15277 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15274)
!15278 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15277)
!15279 = !DILocation(line: 657, column: 3, scope: !15275)
!15280 = !DILocation(line: 660, column: 2, scope: !15260)
!15281 = !DILocation(line: 661, column: 2, scope: !15260)
!15282 = !DILocation(line: 662, column: 2, scope: !15260)
!15283 = !DILocation(line: 663, column: 1, scope: !15260)
!15284 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13707, file: !13707, line: 126, type: !14817, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15285)
!15285 = !{!15286}
!15286 = !DILocalVariable(name: "thread", arg: 1, scope: !15284, file: !13707, line: 126, type: !2339)
!15287 = !DILocation(line: 0, scope: !15284)
!15288 = !DILocation(line: 128, column: 23, scope: !15284)
!15289 = !DILocation(line: 128, column: 36, scope: !15284)
!15290 = !DILocation(line: 128, column: 56, scope: !15284)
!15291 = !DILocation(line: 128, column: 2, scope: !15284)
!15292 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13707, file: !13707, line: 155, type: !14657, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15293)
!15293 = !{!15294}
!15294 = !DILocalVariable(name: "thread", arg: 1, scope: !15292, file: !13707, line: 155, type: !2339)
!15295 = !DILocation(line: 0, scope: !15292)
!15296 = !DILocation(line: 157, column: 15, scope: !15292)
!15297 = !DILocation(line: 157, column: 28, scope: !15292)
!15298 = !DILocation(line: 158, column: 1, scope: !15292)
!15299 = distinct !DISubprogram(name: "z_reschedule", scope: !2444, file: !2444, line: 967, type: !14727, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15300)
!15300 = !{!15301, !15302}
!15301 = !DILocalVariable(name: "lock", arg: 1, scope: !15299, file: !2444, line: 967, type: !14702)
!15302 = !DILocalVariable(name: "key", arg: 2, scope: !15299, file: !2444, line: 967, type: !14691)
!15303 = !DILocation(line: 0, scope: !15299)
!15304 = !DILocation(line: 969, column: 6, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !15299, file: !2444, line: 969, column: 6)
!15306 = !DILocation(line: 969, column: 23, scope: !15305)
!15307 = !DILocation(line: 969, column: 26, scope: !15305)
!15308 = !DILocation(line: 969, column: 6, scope: !15299)
!15309 = !DILocalVariable(name: "key", arg: 2, scope: !15310, file: !13811, line: 193, type: !14691)
!15310 = distinct !DISubprogram(name: "z_swap", scope: !13811, file: !13811, line: 193, type: !15311, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15313)
!15311 = !DISubroutineType(types: !15312)
!15312 = !{!103, !14702, !14691}
!15313 = !{!15314, !15309}
!15314 = !DILocalVariable(name: "lock", arg: 1, scope: !15310, file: !13811, line: 193, type: !14702)
!15315 = !DILocation(line: 0, scope: !15310, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 970, column: 3, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15305, file: !2444, line: 969, column: 39)
!15318 = !DILocation(line: 196, column: 9, scope: !15310, inlinedAt: !15316)
!15319 = !DILocation(line: 971, column: 2, scope: !15317)
!15320 = !DILocation(line: 0, scope: !14726, inlinedAt: !15321)
!15321 = distinct !DILocation(line: 972, column: 3, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15305, file: !2444, line: 971, column: 9)
!15323 = !DILocation(line: 0, scope: !14734, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15321)
!15325 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15324)
!15326 = !DILocation(line: 975, column: 1, scope: !15299)
!15327 = distinct !DISubprogram(name: "resched", scope: !2444, file: !2444, line: 940, type: !15328, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15330)
!15328 = !DISubroutineType(types: !15329)
!15329 = !{!157, !121}
!15330 = !{!15331}
!15331 = !DILocalVariable(name: "key", arg: 1, scope: !15327, file: !2444, line: 940, type: !121)
!15332 = !DILocation(line: 0, scope: !15327)
!15333 = !DILocalVariable(name: "key", arg: 1, scope: !15334, file: !5770, line: 112, type: !32)
!15334 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5770, file: !5770, line: 112, type: !15335, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15337)
!15335 = !DISubroutineType(types: !15336)
!15336 = !{!157, !32}
!15337 = !{!15333}
!15338 = !DILocation(line: 0, scope: !15334, inlinedAt: !15339)
!15339 = distinct !DILocation(line: 946, column: 9, scope: !15327)
!15340 = !DILocation(line: 115, column: 13, scope: !15334, inlinedAt: !15339)
!15341 = !DILocation(line: 946, column: 32, scope: !15327)
!15342 = !DILocation(line: 1031, column: 3, scope: !15343, inlinedAt: !15346)
!15343 = distinct !DISubprogram(name: "__get_IPSR", scope: !6790, file: !6790, line: 1027, type: !6871, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15344)
!15344 = !{!15345}
!15345 = !DILocalVariable(name: "result", scope: !15343, file: !6790, line: 1029, type: !121)
!15346 = distinct !DILocation(line: 48, column: 10, scope: !15347, inlinedAt: !15348)
!15347 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7584, file: !7584, line: 46, type: !7585, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !461)
!15348 = distinct !DILocation(line: 946, column: 36, scope: !15327)
!15349 = !{i64 2869982}
!15350 = !DILocation(line: 0, scope: !15343, inlinedAt: !15346)
!15351 = !DILocation(line: 48, column: 9, scope: !15347, inlinedAt: !15348)
!15352 = !DILocation(line: 946, column: 2, scope: !15327)
!15353 = distinct !DISubprogram(name: "need_swap", scope: !2444, file: !2444, line: 953, type: !7585, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15354)
!15354 = !{!15355}
!15355 = !DILocalVariable(name: "new_thread", scope: !15353, file: !2444, line: 959, type: !2339)
!15356 = !DILocation(line: 962, column: 31, scope: !15353)
!15357 = !DILocation(line: 0, scope: !15353)
!15358 = !DILocation(line: 963, column: 23, scope: !15353)
!15359 = !DILocation(line: 963, column: 20, scope: !15353)
!15360 = !DILocation(line: 963, column: 2, scope: !15353)
!15361 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13811, file: !13811, line: 181, type: !6800, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15362)
!15362 = !{!15363, !15364}
!15363 = !DILocalVariable(name: "key", arg: 1, scope: !15361, file: !13811, line: 181, type: !32)
!15364 = !DILocalVariable(name: "ret", scope: !15361, file: !13811, line: 183, type: !103)
!15365 = !DILocation(line: 0, scope: !15361)
!15366 = !DILocation(line: 185, column: 8, scope: !15361)
!15367 = !DILocation(line: 186, column: 2, scope: !15361)
!15368 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2444, file: !2444, line: 665, type: !14657, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15369)
!15369 = !{!15370, !15371, !15373}
!15370 = !DILocalVariable(name: "thread", arg: 1, scope: !15368, file: !2444, line: 665, type: !2339)
!15371 = !DILocalVariable(name: "__i", scope: !15372, file: !2444, line: 671, type: !14691)
!15372 = distinct !DILexicalBlock(scope: !15368, file: !2444, line: 671, column: 2)
!15373 = !DILocalVariable(name: "__key", scope: !15372, file: !2444, line: 671, type: !14691)
!15374 = !DILocation(line: 0, scope: !15368)
!15375 = !DILocation(line: 669, column: 8, scope: !15368)
!15376 = !DILocation(line: 0, scope: !15372)
!15377 = !DILocation(line: 0, scope: !14699, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 671, column: 2, scope: !15372)
!15379 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15380)
!15380 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15378)
!15381 = !DILocation(line: 0, scope: !14708, inlinedAt: !15380)
!15382 = !DILocation(line: 672, column: 7, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15384, file: !2444, line: 672, column: 7)
!15384 = distinct !DILexicalBlock(scope: !15385, file: !2444, line: 671, column: 26)
!15385 = distinct !DILexicalBlock(scope: !15372, file: !2444, line: 671, column: 2)
!15386 = !DILocation(line: 672, column: 7, scope: !15384)
!15387 = !DILocation(line: 0, scope: !14868, inlinedAt: !15388)
!15388 = distinct !DILocation(line: 673, column: 4, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15383, file: !2444, line: 672, column: 35)
!15390 = !DILocation(line: 266, column: 15, scope: !14868, inlinedAt: !15388)
!15391 = !DILocation(line: 266, column: 28, scope: !14868, inlinedAt: !15388)
!15392 = !DILocation(line: 0, scope: !14876, inlinedAt: !15393)
!15393 = distinct !DILocation(line: 268, column: 3, scope: !14880, inlinedAt: !15388)
!15394 = !DILocation(line: 234, column: 2, scope: !14876, inlinedAt: !15393)
!15395 = !DILocation(line: 674, column: 3, scope: !15389)
!15396 = !DILocation(line: 675, column: 3, scope: !15384)
!15397 = !DILocation(line: 676, column: 26, scope: !15384)
!15398 = !DILocation(line: 676, column: 23, scope: !15384)
!15399 = !DILocation(line: 676, column: 3, scope: !15384)
!15400 = !DILocation(line: 0, scope: !14726, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 671, column: 2, scope: !15385)
!15402 = !DILocation(line: 0, scope: !14734, inlinedAt: !15403)
!15403 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15401)
!15404 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15403)
!15405 = !DILocation(line: 679, column: 16, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15368, file: !2444, line: 679, column: 6)
!15407 = !DILocation(line: 679, column: 13, scope: !15406)
!15408 = !DILocation(line: 679, column: 6, scope: !15368)
!15409 = !DILocation(line: 680, column: 3, scope: !15410)
!15410 = distinct !DILexicalBlock(scope: !15406, file: !2444, line: 679, column: 26)
!15411 = !DILocation(line: 681, column: 2, scope: !15410)
!15412 = !DILocation(line: 684, column: 1, scope: !15368)
!15413 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14101, file: !14101, line: 52, type: !14675, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15414)
!15414 = !{!15415}
!15415 = !DILocalVariable(name: "thread", arg: 1, scope: !15413, file: !14101, line: 52, type: !2339)
!15416 = !DILocation(line: 0, scope: !15413)
!15417 = !DILocation(line: 54, column: 39, scope: !15413)
!15418 = !DILocation(line: 54, column: 9, scope: !15413)
!15419 = !DILocation(line: 54, column: 2, scope: !15413)
!15420 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13707, file: !13707, line: 141, type: !14657, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15421)
!15421 = !{!15422}
!15422 = !DILocalVariable(name: "thread", arg: 1, scope: !15420, file: !13707, line: 141, type: !2339)
!15423 = !DILocation(line: 0, scope: !15420)
!15424 = !DILocation(line: 143, column: 15, scope: !15420)
!15425 = !DILocation(line: 143, column: 28, scope: !15420)
!15426 = !DILocation(line: 146, column: 1, scope: !15420)
!15427 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13707, file: !13707, line: 73, type: !3220, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !461)
!15428 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15429)
!15429 = distinct !DILocation(line: 75, column: 30, scope: !15427)
!15430 = !DILocation(line: 0, scope: !14708, inlinedAt: !15429)
!15431 = !DILocation(line: 75, column: 9, scope: !15427)
!15432 = !DILocation(line: 76, column: 1, scope: !15427)
!15433 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2444, file: !2444, line: 977, type: !6881, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15434)
!15434 = !{!15435}
!15435 = !DILocalVariable(name: "key", arg: 1, scope: !15433, file: !2444, line: 977, type: !121)
!15436 = !DILocation(line: 0, scope: !15433)
!15437 = !DILocation(line: 979, column: 6, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15433, file: !2444, line: 979, column: 6)
!15439 = !DILocation(line: 979, column: 6, scope: !15433)
!15440 = !DILocation(line: 980, column: 3, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15438, file: !2444, line: 979, column: 20)
!15442 = !DILocation(line: 981, column: 2, scope: !15441)
!15443 = !DILocation(line: 0, scope: !14734, inlinedAt: !15444)
!15444 = distinct !DILocation(line: 982, column: 3, scope: !15445)
!15445 = distinct !DILexicalBlock(scope: !15438, file: !2444, line: 981, column: 9)
!15446 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15444)
!15447 = !DILocation(line: 985, column: 1, scope: !15433)
!15448 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2444, file: !2444, line: 695, type: !14657, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15449)
!15449 = !{!15450, !15451}
!15450 = !DILocalVariable(name: "thread", arg: 1, scope: !15448, file: !2444, line: 695, type: !2339)
!15451 = !DILocalVariable(name: "key", scope: !15448, file: !2444, line: 699, type: !14691)
!15452 = !DILocation(line: 0, scope: !15448)
!15453 = !DILocation(line: 0, scope: !14699, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 699, column: 25, scope: !15448)
!15455 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15456)
!15456 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15454)
!15457 = !DILocation(line: 0, scope: !14708, inlinedAt: !15456)
!15458 = !DILocation(line: 702, column: 7, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15448, file: !2444, line: 702, column: 6)
!15460 = !DILocation(line: 702, column: 6, scope: !15448)
!15461 = !DILocation(line: 0, scope: !14726, inlinedAt: !15462)
!15462 = distinct !DILocation(line: 703, column: 3, scope: !15463)
!15463 = distinct !DILexicalBlock(scope: !15459, file: !2444, line: 702, column: 38)
!15464 = !DILocation(line: 0, scope: !14734, inlinedAt: !15465)
!15465 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15462)
!15466 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15465)
!15467 = !DILocation(line: 704, column: 3, scope: !15463)
!15468 = !DILocation(line: 707, column: 2, scope: !15448)
!15469 = !DILocation(line: 708, column: 2, scope: !15448)
!15470 = !DILocation(line: 710, column: 2, scope: !15448)
!15471 = !DILocation(line: 713, column: 1, scope: !15448)
!15472 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13707, file: !13707, line: 96, type: !14817, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15473)
!15473 = !{!15474}
!15474 = !DILocalVariable(name: "thread", arg: 1, scope: !15472, file: !13707, line: 96, type: !2339)
!15475 = !DILocation(line: 0, scope: !15472)
!15476 = !DILocation(line: 98, column: 23, scope: !15472)
!15477 = !DILocation(line: 98, column: 36, scope: !15472)
!15478 = !DILocation(line: 98, column: 57, scope: !15472)
!15479 = !DILocation(line: 98, column: 2, scope: !15472)
!15480 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13707, file: !13707, line: 148, type: !14657, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15481)
!15481 = !{!15482}
!15482 = !DILocalVariable(name: "thread", arg: 1, scope: !15480, file: !13707, line: 148, type: !2339)
!15483 = !DILocation(line: 0, scope: !15480)
!15484 = !DILocation(line: 150, column: 15, scope: !15480)
!15485 = !DILocation(line: 150, column: 28, scope: !15480)
!15486 = !DILocation(line: 153, column: 1, scope: !15480)
!15487 = distinct !DISubprogram(name: "z_pend_thread", scope: !2444, file: !2444, line: 770, type: !15488, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15494)
!15488 = !DISubroutineType(types: !15489)
!15489 = !{null, !2339, !2370, !15490}
!15490 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1677, line: 67, baseType: !15491)
!15491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1677, line: 65, size: 64, elements: !15492)
!15492 = !{!15493}
!15493 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15491, file: !1677, line: 66, baseType: !1676, size: 64)
!15494 = !{!15495, !15496, !15497, !15498, !15500}
!15495 = !DILocalVariable(name: "thread", arg: 1, scope: !15487, file: !2444, line: 770, type: !2339)
!15496 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15487, file: !2444, line: 770, type: !2370)
!15497 = !DILocalVariable(name: "timeout", arg: 3, scope: !15487, file: !2444, line: 771, type: !15490)
!15498 = !DILocalVariable(name: "__i", scope: !15499, file: !2444, line: 774, type: !14691)
!15499 = distinct !DILexicalBlock(scope: !15487, file: !2444, line: 774, column: 2)
!15500 = !DILocalVariable(name: "__key", scope: !15499, file: !2444, line: 774, type: !14691)
!15501 = !DILocation(line: 0, scope: !15487)
!15502 = !DILocation(line: 0, scope: !15499)
!15503 = !DILocation(line: 0, scope: !14699, inlinedAt: !15504)
!15504 = distinct !DILocation(line: 774, column: 2, scope: !15499)
!15505 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15506)
!15506 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15504)
!15507 = !DILocation(line: 0, scope: !14708, inlinedAt: !15506)
!15508 = !DILocation(line: 775, column: 3, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15510, file: !2444, line: 774, column: 26)
!15510 = distinct !DILexicalBlock(scope: !15499, file: !2444, line: 774, column: 2)
!15511 = !DILocation(line: 0, scope: !14726, inlinedAt: !15512)
!15512 = distinct !DILocation(line: 774, column: 2, scope: !15510)
!15513 = !DILocation(line: 0, scope: !14734, inlinedAt: !15514)
!15514 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15512)
!15515 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15514)
!15516 = !DILocation(line: 777, column: 1, scope: !15487)
!15517 = distinct !DISubprogram(name: "pend_locked", scope: !2444, file: !2444, line: 760, type: !15488, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15518)
!15518 = !{!15519, !15520, !15521}
!15519 = !DILocalVariable(name: "thread", arg: 1, scope: !15517, file: !2444, line: 760, type: !2339)
!15520 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15517, file: !2444, line: 760, type: !2370)
!15521 = !DILocalVariable(name: "timeout", arg: 3, scope: !15517, file: !2444, line: 761, type: !15490)
!15522 = !DILocation(line: 0, scope: !15517)
!15523 = !DILocation(line: 766, column: 2, scope: !15517)
!15524 = !DILocation(line: 767, column: 2, scope: !15517)
!15525 = !DILocation(line: 768, column: 1, scope: !15517)
!15526 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2444, file: !2444, line: 740, type: !15527, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15529)
!15527 = !DISubroutineType(types: !15528)
!15528 = !{null, !2339, !2370}
!15529 = !{!15530, !15531}
!15530 = !DILocalVariable(name: "thread", arg: 1, scope: !15526, file: !2444, line: 740, type: !2339)
!15531 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15526, file: !2444, line: 740, type: !2370)
!15532 = !DILocation(line: 0, scope: !15526)
!15533 = !DILocation(line: 742, column: 2, scope: !15526)
!15534 = !DILocation(line: 743, column: 2, scope: !15526)
!15535 = !DILocation(line: 747, column: 13, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15526, file: !2444, line: 747, column: 6)
!15537 = !DILocation(line: 747, column: 6, scope: !15526)
!15538 = !DILocation(line: 748, column: 16, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15536, file: !2444, line: 747, column: 22)
!15540 = !DILocation(line: 748, column: 26, scope: !15539)
!15541 = !DILocation(line: 749, column: 28, scope: !15539)
!15542 = !DILocation(line: 0, scope: !14899, inlinedAt: !15543)
!15543 = distinct !DILocation(line: 749, column: 3, scope: !15539)
!15544 = !DILocation(line: 188, column: 2, scope: !14909, inlinedAt: !15543)
!15545 = !DILocation(line: 188, column: 2, scope: !14911, inlinedAt: !15543)
!15546 = !DILocation(line: 0, scope: !14909, inlinedAt: !15543)
!15547 = !DILocation(line: 189, column: 7, scope: !14914, inlinedAt: !15543)
!15548 = !DILocation(line: 189, column: 35, scope: !14914, inlinedAt: !15543)
!15549 = !DILocation(line: 189, column: 7, scope: !14915, inlinedAt: !15543)
!15550 = !DILocation(line: 191, column: 21, scope: !14919, inlinedAt: !15543)
!15551 = !DILocation(line: 190, column: 4, scope: !14919, inlinedAt: !15543)
!15552 = !DILocation(line: 192, column: 4, scope: !14919, inlinedAt: !15543)
!15553 = distinct !{!15553, !15544, !15554}
!15554 = !DILocation(line: 194, column: 2, scope: !14909, inlinedAt: !15543)
!15555 = !DILocation(line: 196, column: 37, scope: !14899, inlinedAt: !15543)
!15556 = !DILocation(line: 196, column: 2, scope: !14899, inlinedAt: !15543)
!15557 = !DILocation(line: 197, column: 1, scope: !14899, inlinedAt: !15543)
!15558 = !DILocation(line: 751, column: 1, scope: !15526)
!15559 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2444, file: !2444, line: 753, type: !15560, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15562)
!15560 = !DISubroutineType(types: !15561)
!15561 = !{null, !2339, !15490}
!15562 = !{!15563, !15564}
!15563 = !DILocalVariable(name: "thread", arg: 1, scope: !15559, file: !2444, line: 753, type: !2339)
!15564 = !DILocalVariable(name: "timeout", arg: 2, scope: !15559, file: !2444, line: 753, type: !15490)
!15565 = !DILocation(line: 0, scope: !15559)
!15566 = !DILocation(line: 755, column: 7, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15559, file: !2444, line: 755, column: 6)
!15568 = !DILocation(line: 755, column: 6, scope: !15559)
!15569 = !DILocation(line: 756, column: 3, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15567, file: !2444, line: 755, column: 41)
!15571 = !DILocation(line: 757, column: 2, scope: !15570)
!15572 = !DILocation(line: 758, column: 1, scope: !15559)
!15573 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14101, file: !14101, line: 47, type: !15560, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15574)
!15574 = !{!15575, !15576}
!15575 = !DILocalVariable(name: "thread", arg: 1, scope: !15573, file: !14101, line: 47, type: !2339)
!15576 = !DILocalVariable(name: "ticks", arg: 2, scope: !15573, file: !14101, line: 47, type: !15490)
!15577 = !DILocation(line: 0, scope: !15573)
!15578 = !DILocation(line: 49, column: 30, scope: !15573)
!15579 = !DILocation(line: 49, column: 2, scope: !15573)
!15580 = !DILocation(line: 50, column: 1, scope: !15573)
!15581 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2444, file: !2444, line: 795, type: !2396, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15582)
!15582 = !{!15583, !15584, !15585, !15587, !15588}
!15583 = !DILocalVariable(name: "timeout", arg: 1, scope: !15581, file: !2444, line: 795, type: !2398)
!15584 = !DILocalVariable(name: "thread", scope: !15581, file: !2444, line: 797, type: !2339)
!15585 = !DILocalVariable(name: "__i", scope: !15586, file: !2444, line: 800, type: !14691)
!15586 = distinct !DILexicalBlock(scope: !15581, file: !2444, line: 800, column: 2)
!15587 = !DILocalVariable(name: "__key", scope: !15586, file: !2444, line: 800, type: !14691)
!15588 = !DILocalVariable(name: "killed", scope: !15589, file: !2444, line: 801, type: !157)
!15589 = distinct !DILexicalBlock(scope: !15590, file: !2444, line: 800, column: 26)
!15590 = distinct !DILexicalBlock(scope: !15586, file: !2444, line: 800, column: 2)
!15591 = !DILocation(line: 0, scope: !15581)
!15592 = !DILocation(line: 797, column: 28, scope: !15581)
!15593 = !DILocation(line: 0, scope: !15586)
!15594 = !DILocation(line: 0, scope: !14699, inlinedAt: !15595)
!15595 = distinct !DILocation(line: 800, column: 2, scope: !15586)
!15596 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15597)
!15597 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15595)
!15598 = !DILocation(line: 0, scope: !14708, inlinedAt: !15597)
!15599 = !DILocation(line: 801, column: 27, scope: !15589)
!15600 = !DILocation(line: 801, column: 32, scope: !15589)
!15601 = !DILocation(line: 801, column: 61, scope: !15589)
!15602 = !DILocation(line: 0, scope: !15589)
!15603 = !DILocation(line: 804, column: 7, scope: !15589)
!15604 = !DILocation(line: 805, column: 21, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15606, file: !2444, line: 805, column: 8)
!15606 = distinct !DILexicalBlock(scope: !15607, file: !2444, line: 804, column: 16)
!15607 = distinct !DILexicalBlock(scope: !15589, file: !2444, line: 804, column: 7)
!15608 = !DILocation(line: 805, column: 31, scope: !15605)
!15609 = !DILocation(line: 805, column: 8, scope: !15606)
!15610 = !DILocation(line: 806, column: 5, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15605, file: !2444, line: 805, column: 40)
!15612 = !DILocation(line: 807, column: 4, scope: !15611)
!15613 = !DILocation(line: 808, column: 4, scope: !15606)
!15614 = !DILocation(line: 809, column: 4, scope: !15606)
!15615 = !DILocation(line: 810, column: 4, scope: !15606)
!15616 = !DILocation(line: 811, column: 3, scope: !15606)
!15617 = !DILocation(line: 0, scope: !14726, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 800, column: 2, scope: !15590)
!15619 = !DILocation(line: 0, scope: !14734, inlinedAt: !15620)
!15620 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15618)
!15621 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15620)
!15622 = !DILocation(line: 813, column: 1, scope: !15581)
!15623 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2444, file: !2444, line: 779, type: !14657, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15624)
!15624 = !{!15625}
!15625 = !DILocalVariable(name: "thread", arg: 1, scope: !15623, file: !2444, line: 779, type: !2339)
!15626 = !DILocation(line: 0, scope: !15623)
!15627 = !DILocation(line: 781, column: 2, scope: !15623)
!15628 = !DILocation(line: 782, column: 2, scope: !15623)
!15629 = !DILocation(line: 783, column: 15, scope: !15623)
!15630 = !DILocation(line: 783, column: 25, scope: !15623)
!15631 = !DILocation(line: 784, column: 1, scope: !15623)
!15632 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13707, file: !13707, line: 165, type: !14657, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15633)
!15633 = !{!15634}
!15634 = !DILocalVariable(name: "thread", arg: 1, scope: !15632, file: !13707, line: 165, type: !2339)
!15635 = !DILocation(line: 0, scope: !15632)
!15636 = !DILocation(line: 167, column: 15, scope: !15632)
!15637 = !DILocation(line: 167, column: 28, scope: !15632)
!15638 = !DILocation(line: 168, column: 1, scope: !15632)
!15639 = distinct !DISubprogram(name: "unready_thread", scope: !2444, file: !2444, line: 731, type: !14657, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15640)
!15640 = !{!15641}
!15641 = !DILocalVariable(name: "thread", arg: 1, scope: !15639, file: !2444, line: 731, type: !2339)
!15642 = !DILocation(line: 0, scope: !15639)
!15643 = !DILocation(line: 733, column: 6, scope: !15644)
!15644 = distinct !DILexicalBlock(scope: !15639, file: !2444, line: 733, column: 6)
!15645 = !DILocation(line: 733, column: 6, scope: !15639)
!15646 = !DILocation(line: 0, scope: !14868, inlinedAt: !15647)
!15647 = distinct !DILocation(line: 734, column: 3, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15644, file: !2444, line: 733, column: 34)
!15649 = !DILocation(line: 266, column: 15, scope: !14868, inlinedAt: !15647)
!15650 = !DILocation(line: 266, column: 28, scope: !14868, inlinedAt: !15647)
!15651 = !DILocation(line: 0, scope: !14876, inlinedAt: !15652)
!15652 = distinct !DILocation(line: 268, column: 3, scope: !14880, inlinedAt: !15647)
!15653 = !DILocation(line: 234, column: 2, scope: !14876, inlinedAt: !15652)
!15654 = !DILocation(line: 735, column: 2, scope: !15648)
!15655 = !DILocation(line: 736, column: 25, scope: !15639)
!15656 = !DILocation(line: 736, column: 22, scope: !15639)
!15657 = !DILocation(line: 736, column: 2, scope: !15639)
!15658 = !DILocation(line: 737, column: 1, scope: !15639)
!15659 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13707, file: !13707, line: 160, type: !14657, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15660)
!15660 = !{!15661}
!15661 = !DILocalVariable(name: "thread", arg: 1, scope: !15659, file: !13707, line: 160, type: !2339)
!15662 = !DILocation(line: 0, scope: !15659)
!15663 = !DILocation(line: 162, column: 15, scope: !15659)
!15664 = !DILocation(line: 162, column: 28, scope: !15659)
!15665 = !DILocation(line: 163, column: 1, scope: !15659)
!15666 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2444, file: !2444, line: 786, type: !14657, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15667)
!15667 = !{!15668, !15669, !15671}
!15668 = !DILocalVariable(name: "thread", arg: 1, scope: !15666, file: !2444, line: 786, type: !2339)
!15669 = !DILocalVariable(name: "__i", scope: !15670, file: !2444, line: 788, type: !14691)
!15670 = distinct !DILexicalBlock(scope: !15666, file: !2444, line: 788, column: 2)
!15671 = !DILocalVariable(name: "__key", scope: !15670, file: !2444, line: 788, type: !14691)
!15672 = !DILocation(line: 0, scope: !15666)
!15673 = !DILocation(line: 0, scope: !15670)
!15674 = !DILocation(line: 0, scope: !14699, inlinedAt: !15675)
!15675 = distinct !DILocation(line: 788, column: 2, scope: !15670)
!15676 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15677)
!15677 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15675)
!15678 = !DILocation(line: 0, scope: !14708, inlinedAt: !15677)
!15679 = !DILocation(line: 789, column: 3, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15681, file: !2444, line: 788, column: 26)
!15681 = distinct !DILexicalBlock(scope: !15670, file: !2444, line: 788, column: 2)
!15682 = !DILocation(line: 0, scope: !14726, inlinedAt: !15683)
!15683 = distinct !DILocation(line: 788, column: 2, scope: !15681)
!15684 = !DILocation(line: 0, scope: !14734, inlinedAt: !15685)
!15685 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15683)
!15686 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15685)
!15687 = !DILocation(line: 791, column: 1, scope: !15666)
!15688 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2444, file: !2444, line: 816, type: !15689, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15691)
!15689 = !DISubroutineType(types: !15690)
!15690 = !{!103, !121, !2370, !15490}
!15691 = !{!15692, !15693, !15694, !15695, !15696, !15698}
!15692 = !DILocalVariable(name: "key", arg: 1, scope: !15688, file: !2444, line: 816, type: !121)
!15693 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15688, file: !2444, line: 816, type: !2370)
!15694 = !DILocalVariable(name: "timeout", arg: 3, scope: !15688, file: !2444, line: 816, type: !15490)
!15695 = !DILocalVariable(name: "ret", scope: !15688, file: !2444, line: 828, type: !103)
!15696 = !DILocalVariable(name: "__i", scope: !15697, file: !2444, line: 829, type: !14691)
!15697 = distinct !DILexicalBlock(scope: !15688, file: !2444, line: 829, column: 2)
!15698 = !DILocalVariable(name: "__key", scope: !15697, file: !2444, line: 829, type: !14691)
!15699 = !DILocation(line: 0, scope: !15688)
!15700 = !DILocation(line: 823, column: 14, scope: !15688)
!15701 = !DILocation(line: 823, column: 2, scope: !15688)
!15702 = !DILocation(line: 826, column: 20, scope: !15688)
!15703 = !DILocation(line: 826, column: 18, scope: !15688)
!15704 = !DILocation(line: 828, column: 12, scope: !15688)
!15705 = !DILocation(line: 0, scope: !15697)
!15706 = !DILocation(line: 0, scope: !14699, inlinedAt: !15707)
!15707 = distinct !DILocation(line: 829, column: 2, scope: !15697)
!15708 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15709)
!15709 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15707)
!15710 = !DILocation(line: 0, scope: !14708, inlinedAt: !15709)
!15711 = !DILocation(line: 830, column: 7, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15713, file: !2444, line: 830, column: 7)
!15713 = distinct !DILexicalBlock(scope: !15714, file: !2444, line: 829, column: 26)
!15714 = distinct !DILexicalBlock(scope: !15697, file: !2444, line: 829, column: 2)
!15715 = !DILocation(line: 830, column: 26, scope: !15712)
!15716 = !DILocation(line: 830, column: 23, scope: !15712)
!15717 = !DILocation(line: 830, column: 7, scope: !15713)
!15718 = !DILocation(line: 831, column: 20, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15712, file: !2444, line: 830, column: 36)
!15720 = !DILocation(line: 832, column: 3, scope: !15719)
!15721 = !DILocation(line: 0, scope: !14726, inlinedAt: !15722)
!15722 = distinct !DILocation(line: 829, column: 2, scope: !15714)
!15723 = !DILocation(line: 0, scope: !14734, inlinedAt: !15724)
!15724 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15722)
!15725 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15724)
!15726 = !DILocation(line: 834, column: 2, scope: !15688)
!15727 = distinct !DISubprogram(name: "z_pend_curr", scope: !2444, file: !2444, line: 840, type: !15728, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15730)
!15728 = !DISubroutineType(types: !15729)
!15729 = !{!103, !14702, !14691, !2370, !15490}
!15730 = !{!15731, !15732, !15733, !15734}
!15731 = !DILocalVariable(name: "lock", arg: 1, scope: !15727, file: !2444, line: 840, type: !14702)
!15732 = !DILocalVariable(name: "key", arg: 2, scope: !15727, file: !2444, line: 840, type: !14691)
!15733 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15727, file: !2444, line: 841, type: !2370)
!15734 = !DILocalVariable(name: "timeout", arg: 4, scope: !15727, file: !2444, line: 841, type: !15490)
!15735 = !DILocation(line: 0, scope: !15727)
!15736 = !DILocation(line: 844, column: 20, scope: !15727)
!15737 = !DILocation(line: 844, column: 18, scope: !15727)
!15738 = !DILocation(line: 0, scope: !14699, inlinedAt: !15739)
!15739 = distinct !DILocation(line: 856, column: 9, scope: !15727)
!15740 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15741)
!15741 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15739)
!15742 = !DILocation(line: 0, scope: !14708, inlinedAt: !15741)
!15743 = !DILocation(line: 857, column: 14, scope: !15727)
!15744 = !DILocation(line: 857, column: 2, scope: !15727)
!15745 = !DILocation(line: 0, scope: !15310, inlinedAt: !15746)
!15746 = distinct !DILocation(line: 859, column: 9, scope: !15727)
!15747 = !DILocation(line: 196, column: 9, scope: !15310, inlinedAt: !15746)
!15748 = !DILocation(line: 859, column: 2, scope: !15727)
!15749 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2444, file: !2444, line: 862, type: !15750, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15752)
!15750 = !DISubroutineType(types: !15751)
!15751 = !{!2339, !2370}
!15752 = !{!15753, !15754, !15755, !15757}
!15753 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15749, file: !2444, line: 862, type: !2370)
!15754 = !DILocalVariable(name: "thread", scope: !15749, file: !2444, line: 864, type: !2339)
!15755 = !DILocalVariable(name: "__i", scope: !15756, file: !2444, line: 866, type: !14691)
!15756 = distinct !DILexicalBlock(scope: !15749, file: !2444, line: 866, column: 2)
!15757 = !DILocalVariable(name: "__key", scope: !15756, file: !2444, line: 866, type: !14691)
!15758 = !DILocation(line: 0, scope: !15749)
!15759 = !DILocation(line: 0, scope: !15756)
!15760 = !DILocation(line: 0, scope: !14699, inlinedAt: !15761)
!15761 = distinct !DILocation(line: 866, column: 2, scope: !15756)
!15762 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15763)
!15763 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15761)
!15764 = !DILocation(line: 0, scope: !14708, inlinedAt: !15763)
!15765 = !DILocation(line: 867, column: 12, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15767, file: !2444, line: 866, column: 26)
!15767 = distinct !DILexicalBlock(scope: !15756, file: !2444, line: 866, column: 2)
!15768 = !DILocation(line: 869, column: 14, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15766, file: !2444, line: 869, column: 7)
!15770 = !DILocation(line: 869, column: 7, scope: !15766)
!15771 = !DILocation(line: 870, column: 4, scope: !15772)
!15772 = distinct !DILexicalBlock(scope: !15769, file: !2444, line: 869, column: 23)
!15773 = !DILocation(line: 871, column: 3, scope: !15772)
!15774 = !DILocation(line: 0, scope: !14726, inlinedAt: !15775)
!15775 = distinct !DILocation(line: 866, column: 2, scope: !15767)
!15776 = !DILocation(line: 0, scope: !14734, inlinedAt: !15777)
!15777 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15775)
!15778 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15777)
!15779 = !DILocation(line: 874, column: 2, scope: !15749)
!15780 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2444, file: !2444, line: 877, type: !15750, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15781)
!15781 = !{!15782, !15783, !15784, !15786}
!15782 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15780, file: !2444, line: 877, type: !2370)
!15783 = !DILocalVariable(name: "thread", scope: !15780, file: !2444, line: 879, type: !2339)
!15784 = !DILocalVariable(name: "__i", scope: !15785, file: !2444, line: 881, type: !14691)
!15785 = distinct !DILexicalBlock(scope: !15780, file: !2444, line: 881, column: 2)
!15786 = !DILocalVariable(name: "__key", scope: !15785, file: !2444, line: 881, type: !14691)
!15787 = !DILocation(line: 0, scope: !15780)
!15788 = !DILocation(line: 0, scope: !15785)
!15789 = !DILocation(line: 0, scope: !14699, inlinedAt: !15790)
!15790 = distinct !DILocation(line: 881, column: 2, scope: !15785)
!15791 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15792)
!15792 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15790)
!15793 = !DILocation(line: 0, scope: !14708, inlinedAt: !15792)
!15794 = !DILocation(line: 882, column: 12, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15796, file: !2444, line: 881, column: 26)
!15796 = distinct !DILexicalBlock(scope: !15785, file: !2444, line: 881, column: 2)
!15797 = !DILocation(line: 884, column: 14, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15795, file: !2444, line: 884, column: 7)
!15799 = !DILocation(line: 884, column: 7, scope: !15795)
!15800 = !DILocation(line: 885, column: 4, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15798, file: !2444, line: 884, column: 23)
!15802 = !DILocation(line: 886, column: 10, scope: !15801)
!15803 = !DILocation(line: 887, column: 3, scope: !15801)
!15804 = !DILocation(line: 0, scope: !14726, inlinedAt: !15805)
!15805 = distinct !DILocation(line: 881, column: 2, scope: !15796)
!15806 = !DILocation(line: 0, scope: !14734, inlinedAt: !15807)
!15807 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15805)
!15808 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15807)
!15809 = !DILocation(line: 890, column: 2, scope: !15780)
!15810 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2444, file: !2444, line: 893, type: !14657, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15811)
!15811 = !{!15812}
!15812 = !DILocalVariable(name: "thread", arg: 1, scope: !15810, file: !2444, line: 893, type: !2339)
!15813 = !DILocation(line: 0, scope: !15810)
!15814 = !DILocation(line: 0, scope: !15666, inlinedAt: !15815)
!15815 = distinct !DILocation(line: 895, column: 2, scope: !15810)
!15816 = !DILocation(line: 0, scope: !15670, inlinedAt: !15815)
!15817 = !DILocation(line: 0, scope: !14699, inlinedAt: !15818)
!15818 = distinct !DILocation(line: 788, column: 2, scope: !15670, inlinedAt: !15815)
!15819 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15818)
!15821 = !DILocation(line: 0, scope: !14708, inlinedAt: !15820)
!15822 = !DILocation(line: 789, column: 3, scope: !15680, inlinedAt: !15815)
!15823 = !DILocation(line: 0, scope: !14726, inlinedAt: !15824)
!15824 = distinct !DILocation(line: 788, column: 2, scope: !15681, inlinedAt: !15815)
!15825 = !DILocation(line: 0, scope: !14734, inlinedAt: !15826)
!15826 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15824)
!15827 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15826)
!15828 = !DILocation(line: 896, column: 8, scope: !15810)
!15829 = !DILocation(line: 897, column: 1, scope: !15810)
!15830 = distinct !DISubprogram(name: "z_set_prio", scope: !2444, file: !2444, line: 902, type: !15019, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15831)
!15831 = !{!15832, !15833, !15834, !15835, !15837}
!15832 = !DILocalVariable(name: "thread", arg: 1, scope: !15830, file: !2444, line: 902, type: !2339)
!15833 = !DILocalVariable(name: "prio", arg: 2, scope: !15830, file: !2444, line: 902, type: !103)
!15834 = !DILocalVariable(name: "need_sched", scope: !15830, file: !2444, line: 904, type: !157)
!15835 = !DILocalVariable(name: "__i", scope: !15836, file: !2444, line: 906, type: !14691)
!15836 = distinct !DILexicalBlock(scope: !15830, file: !2444, line: 906, column: 2)
!15837 = !DILocalVariable(name: "__key", scope: !15836, file: !2444, line: 906, type: !14691)
!15838 = !DILocation(line: 0, scope: !15830)
!15839 = !DILocation(line: 0, scope: !15836)
!15840 = !DILocation(line: 0, scope: !14699, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 906, column: 2, scope: !15836)
!15842 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15843)
!15843 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15841)
!15844 = !DILocation(line: 0, scope: !14708, inlinedAt: !15843)
!15845 = !DILocation(line: 907, column: 16, scope: !15846)
!15846 = distinct !DILexicalBlock(scope: !15847, file: !2444, line: 906, column: 26)
!15847 = distinct !DILexicalBlock(scope: !15836, file: !2444, line: 906, column: 2)
!15848 = !DILocation(line: 909, column: 7, scope: !15846)
!15849 = !DILocation(line: 0, scope: !14868, inlinedAt: !15850)
!15850 = distinct !DILocation(line: 912, column: 5, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15852, file: !2444, line: 911, column: 63)
!15852 = distinct !DILexicalBlock(scope: !15853, file: !2444, line: 911, column: 8)
!15853 = distinct !DILexicalBlock(scope: !15854, file: !2444, line: 909, column: 19)
!15854 = distinct !DILexicalBlock(scope: !15846, file: !2444, line: 909, column: 7)
!15855 = !DILocation(line: 266, column: 28, scope: !14868, inlinedAt: !15850)
!15856 = !DILocation(line: 0, scope: !14876, inlinedAt: !15857)
!15857 = distinct !DILocation(line: 268, column: 3, scope: !14880, inlinedAt: !15850)
!15858 = !DILocation(line: 234, column: 2, scope: !14876, inlinedAt: !15857)
!15859 = !DILocation(line: 913, column: 23, scope: !15851)
!15860 = !DILocation(line: 0, scope: !14885, inlinedAt: !15861)
!15861 = distinct !DILocation(line: 914, column: 5, scope: !15851)
!15862 = !DILocation(line: 252, column: 28, scope: !14885, inlinedAt: !15861)
!15863 = !DILocation(line: 0, scope: !14892, inlinedAt: !15864)
!15864 = distinct !DILocation(line: 254, column: 3, scope: !14896, inlinedAt: !15861)
!15865 = !DILocation(line: 0, scope: !14899, inlinedAt: !15866)
!15866 = distinct !DILocation(line: 229, column: 2, scope: !14892, inlinedAt: !15864)
!15867 = !DILocation(line: 188, column: 2, scope: !14909, inlinedAt: !15866)
!15868 = !DILocation(line: 188, column: 2, scope: !14911, inlinedAt: !15866)
!15869 = !DILocation(line: 0, scope: !14909, inlinedAt: !15866)
!15870 = !DILocation(line: 189, column: 7, scope: !14914, inlinedAt: !15866)
!15871 = !DILocation(line: 189, column: 35, scope: !14914, inlinedAt: !15866)
!15872 = !DILocation(line: 189, column: 7, scope: !14915, inlinedAt: !15866)
!15873 = !DILocation(line: 190, column: 4, scope: !14919, inlinedAt: !15866)
!15874 = !DILocation(line: 192, column: 4, scope: !14919, inlinedAt: !15866)
!15875 = distinct !{!15875, !15867, !15876}
!15876 = !DILocation(line: 194, column: 2, scope: !14909, inlinedAt: !15866)
!15877 = !DILocation(line: 196, column: 2, scope: !14899, inlinedAt: !15866)
!15878 = !DILocation(line: 197, column: 1, scope: !14899, inlinedAt: !15866)
!15879 = !DILocation(line: 918, column: 4, scope: !15853)
!15880 = !DILocation(line: 919, column: 3, scope: !15853)
!15881 = !DILocation(line: 920, column: 22, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15854, file: !2444, line: 919, column: 10)
!15883 = !DILocation(line: 0, scope: !14726, inlinedAt: !15884)
!15884 = distinct !DILocation(line: 906, column: 2, scope: !15847)
!15885 = !DILocation(line: 0, scope: !14734, inlinedAt: !15886)
!15886 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15884)
!15887 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15886)
!15888 = !DILocation(line: 926, column: 2, scope: !15830)
!15889 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2444, file: !2444, line: 929, type: !15890, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15892)
!15890 = !DISubroutineType(types: !15891)
!15891 = !{null, !2339, !103}
!15892 = !{!15893, !15894, !15895}
!15893 = !DILocalVariable(name: "thread", arg: 1, scope: !15889, file: !2444, line: 929, type: !2339)
!15894 = !DILocalVariable(name: "prio", arg: 2, scope: !15889, file: !2444, line: 929, type: !103)
!15895 = !DILocalVariable(name: "need_sched", scope: !15889, file: !2444, line: 931, type: !157)
!15896 = !DILocation(line: 0, scope: !15889)
!15897 = !DILocation(line: 931, column: 20, scope: !15889)
!15898 = !DILocation(line: 935, column: 17, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15889, file: !2444, line: 935, column: 6)
!15900 = !DILocation(line: 935, column: 20, scope: !15899)
!15901 = !DILocation(line: 935, column: 35, scope: !15899)
!15902 = !DILocation(line: 935, column: 48, scope: !15899)
!15903 = !DILocation(line: 935, column: 6, scope: !15889)
!15904 = !DILocation(line: 936, column: 3, scope: !15905)
!15905 = distinct !DILexicalBlock(scope: !15899, file: !2444, line: 935, column: 55)
!15906 = !DILocation(line: 937, column: 2, scope: !15905)
!15907 = !DILocation(line: 938, column: 1, scope: !15889)
!15908 = distinct !DISubprogram(name: "k_sched_lock", scope: !2444, file: !2444, line: 987, type: !3220, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15909)
!15909 = !{!15910, !15912}
!15910 = !DILocalVariable(name: "__i", scope: !15911, file: !2444, line: 989, type: !14691)
!15911 = distinct !DILexicalBlock(scope: !15908, file: !2444, line: 989, column: 2)
!15912 = !DILocalVariable(name: "__key", scope: !15911, file: !2444, line: 989, type: !14691)
!15913 = !DILocation(line: 0, scope: !15911)
!15914 = !DILocation(line: 0, scope: !14699, inlinedAt: !15915)
!15915 = distinct !DILocation(line: 989, column: 2, scope: !15911)
!15916 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15917)
!15917 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15915)
!15918 = !DILocation(line: 0, scope: !14708, inlinedAt: !15917)
!15919 = !DILocation(line: 992, column: 3, scope: !15920)
!15920 = distinct !DILexicalBlock(scope: !15921, file: !2444, line: 989, column: 26)
!15921 = distinct !DILexicalBlock(scope: !15911, file: !2444, line: 989, column: 2)
!15922 = !DILocation(line: 0, scope: !14726, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 989, column: 2, scope: !15921)
!15924 = !DILocation(line: 0, scope: !14734, inlinedAt: !15925)
!15925 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15923)
!15926 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15925)
!15927 = !DILocation(line: 994, column: 1, scope: !15908)
!15928 = distinct !DISubprogram(name: "z_sched_lock", scope: !13707, file: !13707, line: 251, type: !3220, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !461)
!15929 = !DILocation(line: 256, column: 4, scope: !15928)
!15930 = !DILocation(line: 256, column: 19, scope: !15928)
!15931 = !DILocation(line: 256, column: 2, scope: !15928)
!15932 = !DILocation(line: 258, column: 2, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15928, file: !13707, line: 258, column: 2)
!15934 = !{i64 2154189370}
!15935 = !DILocation(line: 259, column: 1, scope: !15928)
!15936 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2444, file: !2444, line: 996, type: !3220, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15937)
!15937 = !{!15938, !15940}
!15938 = !DILocalVariable(name: "__i", scope: !15939, file: !2444, line: 998, type: !14691)
!15939 = distinct !DILexicalBlock(scope: !15936, file: !2444, line: 998, column: 2)
!15940 = !DILocalVariable(name: "__key", scope: !15939, file: !2444, line: 998, type: !14691)
!15941 = !DILocation(line: 0, scope: !15939)
!15942 = !DILocation(line: 0, scope: !14699, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 998, column: 2, scope: !15939)
!15944 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !15943)
!15946 = !DILocation(line: 0, scope: !14708, inlinedAt: !15945)
!15947 = !DILocation(line: 1002, column: 5, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !15949, file: !2444, line: 998, column: 26)
!15949 = distinct !DILexicalBlock(scope: !15939, file: !2444, line: 998, column: 2)
!15950 = !DILocation(line: 1002, column: 20, scope: !15948)
!15951 = !DILocation(line: 1002, column: 3, scope: !15948)
!15952 = !DILocation(line: 1003, column: 3, scope: !15948)
!15953 = !DILocation(line: 0, scope: !14726, inlinedAt: !15954)
!15954 = distinct !DILocation(line: 998, column: 2, scope: !15949)
!15955 = !DILocation(line: 0, scope: !14734, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !15954)
!15957 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !15956)
!15958 = !DILocation(line: 1011, column: 2, scope: !15936)
!15959 = !DILocation(line: 1012, column: 1, scope: !15936)
!15960 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2444, file: !2444, line: 1014, type: !15007, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !461)
!15961 = !DILocation(line: 1028, column: 25, scope: !15960)
!15962 = !DILocation(line: 1028, column: 2, scope: !15960)
!15963 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2444, file: !2444, line: 1155, type: !15964, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !15966)
!15964 = !DISubroutineType(types: !15965)
!15965 = !{!157, !2368, !2368}
!15966 = !{!15967, !15968, !15969, !15970, !15971}
!15967 = !DILocalVariable(name: "a", arg: 1, scope: !15963, file: !2444, line: 1155, type: !2368)
!15968 = !DILocalVariable(name: "b", arg: 2, scope: !15963, file: !2444, line: 1155, type: !2368)
!15969 = !DILocalVariable(name: "thread_a", scope: !15963, file: !2444, line: 1157, type: !2339)
!15970 = !DILocalVariable(name: "thread_b", scope: !15963, file: !2444, line: 1157, type: !2339)
!15971 = !DILocalVariable(name: "cmp", scope: !15963, file: !2444, line: 1158, type: !332)
!15972 = !DILocation(line: 0, scope: !15963)
!15973 = !DILocation(line: 1160, column: 13, scope: !15963)
!15974 = !DILocation(line: 1161, column: 13, scope: !15963)
!15975 = !DILocation(line: 1163, column: 8, scope: !15963)
!15976 = !DILocation(line: 1165, column: 10, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15963, file: !2444, line: 1165, column: 6)
!15978 = !DILocation(line: 1165, column: 6, scope: !15963)
!15979 = !DILocation(line: 1167, column: 17, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15977, file: !2444, line: 1167, column: 13)
!15981 = !DILocation(line: 1167, column: 13, scope: !15977)
!15982 = !DILocation(line: 1170, column: 25, scope: !15983)
!15983 = distinct !DILexicalBlock(scope: !15980, file: !2444, line: 1169, column: 9)
!15984 = !DILocation(line: 1170, column: 52, scope: !15983)
!15985 = !DILocation(line: 1170, column: 35, scope: !15983)
!15986 = !DILocation(line: 1170, column: 3, scope: !15983)
!15987 = !DILocation(line: 0, scope: !15977)
!15988 = !DILocation(line: 1173, column: 1, scope: !15963)
!15989 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2444, file: !2444, line: 1175, type: !15990, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16005)
!15990 = !DISubroutineType(types: !15991)
!15991 = !{null, !15992, !2339}
!15992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15993, size: 32)
!15993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15994, line: 37, size: 128, elements: !15995)
!15994 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15995 = !{!15996, !16004}
!15996 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15993, file: !15994, line: 38, baseType: !15997, size: 96)
!15997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !380, line: 83, size: 96, elements: !15998)
!15998 = !{!15999, !16000, !16003}
!15999 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15997, file: !380, line: 84, baseType: !2368, size: 32)
!16000 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15997, file: !380, line: 85, baseType: !16001, size: 32, offset: 32)
!16001 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !380, line: 81, baseType: !16002)
!16002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15964, size: 32)
!16003 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15997, file: !380, line: 86, baseType: !103, size: 32, offset: 64)
!16004 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15993, file: !15994, line: 39, baseType: !103, size: 32, offset: 96)
!16005 = !{!16006, !16007, !16008, !16009, !16018}
!16006 = !DILocalVariable(name: "pq", arg: 1, scope: !15989, file: !2444, line: 1175, type: !15992)
!16007 = !DILocalVariable(name: "thread", arg: 2, scope: !15989, file: !2444, line: 1175, type: !2339)
!16008 = !DILocalVariable(name: "t", scope: !15989, file: !2444, line: 1177, type: !2339)
!16009 = !DILocalVariable(name: "__f", scope: !16010, file: !2444, line: 1190, type: !16013)
!16010 = distinct !DILexicalBlock(scope: !16011, file: !2444, line: 1190, column: 3)
!16011 = distinct !DILexicalBlock(scope: !16012, file: !2444, line: 1189, column: 27)
!16012 = distinct !DILexicalBlock(scope: !15989, file: !2444, line: 1189, column: 6)
!16013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !380, line: 155, size: 96, elements: !16014)
!16014 = !{!16015, !16016, !16017}
!16015 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16013, file: !380, line: 156, baseType: !2439, size: 32)
!16016 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16013, file: !380, line: 157, baseType: !261, size: 32, offset: 32)
!16017 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16013, file: !380, line: 158, baseType: !332, size: 32, offset: 64)
!16018 = !DILocalVariable(name: "n", scope: !16019, file: !2444, line: 1190, type: !2368)
!16019 = distinct !DILexicalBlock(scope: !16020, file: !2444, line: 1190, column: 3)
!16020 = distinct !DILexicalBlock(scope: !16010, file: !2444, line: 1190, column: 3)
!16021 = !DILocation(line: 0, scope: !15989)
!16022 = !DILocation(line: 1181, column: 31, scope: !15989)
!16023 = !DILocation(line: 1181, column: 45, scope: !15989)
!16024 = !DILocation(line: 1181, column: 15, scope: !15989)
!16025 = !DILocation(line: 1181, column: 25, scope: !15989)
!16026 = !DILocation(line: 1189, column: 11, scope: !16012)
!16027 = !DILocation(line: 1189, column: 7, scope: !16012)
!16028 = !DILocation(line: 1189, column: 6, scope: !15989)
!16029 = !DILocation(line: 1190, column: 3, scope: !16010)
!16030 = !DILocation(line: 1190, column: 3, scope: !16019)
!16031 = !DILocation(line: 0, scope: !16019)
!16032 = !DILocation(line: 1190, column: 3, scope: !16020)
!16033 = !DILocation(line: 1193, column: 2, scope: !16011)
!16034 = !DILocation(line: 1191, column: 42, scope: !16035)
!16035 = distinct !DILexicalBlock(scope: !16020, file: !2444, line: 1190, column: 54)
!16036 = !DILocation(line: 1191, column: 12, scope: !16035)
!16037 = !DILocation(line: 1191, column: 22, scope: !16035)
!16038 = distinct !{!16038, !16029, !16039}
!16039 = !DILocation(line: 1192, column: 3, scope: !16010)
!16040 = !DILocation(line: 1195, column: 17, scope: !15989)
!16041 = !DILocation(line: 1195, column: 37, scope: !15989)
!16042 = !DILocation(line: 1195, column: 2, scope: !15989)
!16043 = !DILocation(line: 1196, column: 1, scope: !15989)
!16044 = !DISubprogram(name: "z_rb_foreach_next", scope: !380, file: !380, line: 176, type: !16045, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16045 = !DISubroutineType(types: !16046)
!16046 = !{!2368, !16047, !16048}
!16047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15997, size: 32)
!16048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16013, size: 32)
!16049 = !DISubprogram(name: "rb_insert", scope: !380, file: !380, line: 105, type: !16050, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16050 = !DISubroutineType(types: !16051)
!16051 = !{null, !16047, !2368}
!16052 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2444, file: !2444, line: 1198, type: !15990, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16053)
!16053 = !{!16054, !16055}
!16054 = !DILocalVariable(name: "pq", arg: 1, scope: !16052, file: !2444, line: 1198, type: !15992)
!16055 = !DILocalVariable(name: "thread", arg: 2, scope: !16052, file: !2444, line: 1198, type: !2339)
!16056 = !DILocation(line: 0, scope: !16052)
!16057 = !DILocation(line: 1202, column: 17, scope: !16052)
!16058 = !DILocation(line: 1202, column: 37, scope: !16052)
!16059 = !DILocation(line: 1202, column: 2, scope: !16052)
!16060 = !DILocation(line: 1204, column: 16, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16052, file: !2444, line: 1204, column: 6)
!16062 = !DILocation(line: 1204, column: 7, scope: !16061)
!16063 = !DILocation(line: 1204, column: 6, scope: !16052)
!16064 = !DILocation(line: 1205, column: 7, scope: !16065)
!16065 = distinct !DILexicalBlock(scope: !16061, file: !2444, line: 1204, column: 22)
!16066 = !DILocation(line: 1205, column: 22, scope: !16065)
!16067 = !DILocation(line: 1206, column: 2, scope: !16065)
!16068 = !DILocation(line: 1207, column: 1, scope: !16052)
!16069 = !DISubprogram(name: "rb_remove", scope: !380, file: !380, line: 110, type: !16050, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16070 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2444, file: !2444, line: 1209, type: !16071, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16073)
!16071 = !DISubroutineType(types: !16072)
!16072 = !{!2339, !15992}
!16073 = !{!16074, !16075, !16076}
!16074 = !DILocalVariable(name: "pq", arg: 1, scope: !16070, file: !2444, line: 1209, type: !15992)
!16075 = !DILocalVariable(name: "thread", scope: !16070, file: !2444, line: 1211, type: !2339)
!16076 = !DILocalVariable(name: "n", scope: !16070, file: !2444, line: 1212, type: !2368)
!16077 = !DILocation(line: 0, scope: !16070)
!16078 = !DILocation(line: 1212, column: 37, scope: !16070)
!16079 = !DILocation(line: 1212, column: 21, scope: !16070)
!16080 = !DILocation(line: 1217, column: 2, scope: !16070)
!16081 = distinct !DISubprogram(name: "rb_get_min", scope: !380, file: !380, line: 115, type: !16082, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16084)
!16082 = !DISubroutineType(types: !16083)
!16083 = !{!2368, !16047}
!16084 = !{!16085}
!16085 = !DILocalVariable(name: "tree", arg: 1, scope: !16081, file: !380, line: 115, type: !16047)
!16086 = !DILocation(line: 0, scope: !16081)
!16087 = !DILocation(line: 117, column: 9, scope: !16081)
!16088 = !DILocation(line: 117, column: 2, scope: !16081)
!16089 = !DISubprogram(name: "z_rb_get_minmax", scope: !380, file: !380, line: 100, type: !16090, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !461)
!16090 = !DISubroutineType(types: !16091)
!16091 = !{!2368, !16047, !154}
!16092 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2444, file: !2444, line: 1246, type: !16093, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16103)
!16093 = !DISubroutineType(types: !16094)
!16094 = !{!2339, !16095}
!16095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16096, size: 32)
!16096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15994, line: 53, size: 2080, elements: !16097)
!16097 = !{!16098, !16102}
!16098 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16096, file: !15994, line: 54, baseType: !16099, size: 2048)
!16099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2375, size: 2048, elements: !16100)
!16100 = !{!16101}
!16101 = !DISubrange(count: 32)
!16102 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16096, file: !15994, line: 55, baseType: !32, size: 32, offset: 2048)
!16103 = !{!16104, !16105, !16106, !16107}
!16104 = !DILocalVariable(name: "pq", arg: 1, scope: !16092, file: !2444, line: 1246, type: !16095)
!16105 = !DILocalVariable(name: "thread", scope: !16092, file: !2444, line: 1252, type: !2339)
!16106 = !DILocalVariable(name: "l", scope: !16092, file: !2444, line: 1253, type: !14902)
!16107 = !DILocalVariable(name: "n", scope: !16092, file: !2444, line: 1254, type: !2440)
!16108 = !DILocation(line: 0, scope: !16092)
!16109 = !DILocation(line: 1248, column: 11, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16092, file: !2444, line: 1248, column: 6)
!16111 = !DILocation(line: 1248, column: 7, scope: !16110)
!16112 = !DILocation(line: 1248, column: 6, scope: !16092)
!16113 = !DILocation(line: 1253, column: 31, scope: !16092)
!16114 = !DILocation(line: 1253, column: 20, scope: !16092)
!16115 = !DILocation(line: 1254, column: 19, scope: !16092)
!16116 = !DILocation(line: 1260, column: 1, scope: !16092)
!16117 = distinct !DISubprogram(name: "z_unpend_all", scope: !2444, file: !2444, line: 1262, type: !16118, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16120)
!16118 = !DISubroutineType(types: !16119)
!16119 = !{!103, !2370}
!16120 = !{!16121, !16122, !16123}
!16121 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16117, file: !2444, line: 1262, type: !2370)
!16122 = !DILocalVariable(name: "need_sched", scope: !16117, file: !2444, line: 1264, type: !103)
!16123 = !DILocalVariable(name: "thread", scope: !16117, file: !2444, line: 1265, type: !2339)
!16124 = !DILocation(line: 0, scope: !16117)
!16125 = !DILocation(line: 1267, column: 19, scope: !16117)
!16126 = !DILocation(line: 1267, column: 41, scope: !16117)
!16127 = !DILocation(line: 1267, column: 2, scope: !16117)
!16128 = !DILocation(line: 1268, column: 3, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16117, file: !2444, line: 1267, column: 50)
!16130 = !DILocation(line: 1269, column: 3, scope: !16129)
!16131 = distinct !{!16131, !16127, !16132}
!16132 = !DILocation(line: 1271, column: 2, scope: !16117)
!16133 = !DILocation(line: 1273, column: 2, scope: !16117)
!16134 = distinct !DISubprogram(name: "z_waitq_head", scope: !14033, file: !14033, line: 52, type: !15750, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16135)
!16135 = !{!16136}
!16136 = !DILocalVariable(name: "w", arg: 1, scope: !16134, file: !14033, line: 52, type: !2370)
!16137 = !DILocation(line: 0, scope: !16134)
!16138 = !DILocation(line: 54, column: 52, scope: !16134)
!16139 = !DILocation(line: 54, column: 28, scope: !16134)
!16140 = !DILocation(line: 54, column: 9, scope: !16134)
!16141 = !DILocation(line: 54, column: 2, scope: !16134)
!16142 = distinct !DISubprogram(name: "init_ready_q", scope: !2444, file: !2444, line: 1276, type: !16143, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16150)
!16143 = !DISubroutineType(types: !16144)
!16144 = !{null, !16145}
!16145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16146, size: 32)
!16146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !304, line: 83, size: 96, elements: !16147)
!16147 = !{!16148, !16149}
!16148 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16146, file: !304, line: 86, baseType: !2339, size: 32)
!16149 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16146, file: !304, line: 90, baseType: !2375, size: 64, offset: 32)
!16150 = !{!16151}
!16151 = !DILocalVariable(name: "rq", arg: 1, scope: !16142, file: !2444, line: 1276, type: !16145)
!16152 = !DILocation(line: 0, scope: !16142)
!16153 = !DILocation(line: 1289, column: 22, scope: !16142)
!16154 = !DILocation(line: 1289, column: 2, scope: !16142)
!16155 = !DILocation(line: 1291, column: 1, scope: !16142)
!16156 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !16157, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16159)
!16157 = !DISubroutineType(types: !16158)
!16158 = !{null, !14902}
!16159 = !{!16160}
!16160 = !DILocalVariable(name: "list", arg: 1, scope: !16156, file: !309, line: 197, type: !14902)
!16161 = !DILocation(line: 0, scope: !16156)
!16162 = !DILocation(line: 199, column: 8, scope: !16156)
!16163 = !DILocation(line: 199, column: 13, scope: !16156)
!16164 = !DILocation(line: 200, column: 8, scope: !16156)
!16165 = !DILocation(line: 200, column: 13, scope: !16156)
!16166 = !DILocation(line: 201, column: 1, scope: !16156)
!16167 = distinct !DISubprogram(name: "z_sched_init", scope: !2444, file: !2444, line: 1293, type: !3220, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !461)
!16168 = !DILocation(line: 1302, column: 2, scope: !16167)
!16169 = !DILocation(line: 1306, column: 2, scope: !16167)
!16170 = !DILocation(line: 1309, column: 1, scope: !16167)
!16171 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2444, file: !2444, line: 1311, type: !16172, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16175)
!16172 = !DISubroutineType(types: !16173)
!16173 = !{!103, !16174}
!16174 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !355, line: 347, baseType: !2339)
!16175 = !{!16176}
!16176 = !DILocalVariable(name: "thread", arg: 1, scope: !16171, file: !2444, line: 1311, type: !16174)
!16177 = !DILocation(line: 0, scope: !16171)
!16178 = !DILocation(line: 1313, column: 22, scope: !16171)
!16179 = !DILocation(line: 1313, column: 9, scope: !16171)
!16180 = !DILocation(line: 1313, column: 2, scope: !16171)
!16181 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2444, file: !2444, line: 1325, type: !16182, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16184)
!16182 = !DISubroutineType(types: !16183)
!16183 = !{null, !16174, !103}
!16184 = !{!16185, !16186, !16187}
!16185 = !DILocalVariable(name: "thread", arg: 1, scope: !16181, file: !2444, line: 1325, type: !16174)
!16186 = !DILocalVariable(name: "prio", arg: 2, scope: !16181, file: !2444, line: 1325, type: !103)
!16187 = !DILocalVariable(name: "th", scope: !16181, file: !2444, line: 1334, type: !2339)
!16188 = !DILocation(line: 0, scope: !16181)
!16189 = !DILocation(line: 1336, column: 2, scope: !16181)
!16190 = !DILocation(line: 1337, column: 1, scope: !16181)
!16191 = distinct !DISubprogram(name: "k_can_yield", scope: !2444, file: !2444, line: 1384, type: !7585, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !461)
!16192 = !DILocation(line: 1386, column: 11, scope: !16191)
!16193 = !DILocation(line: 1386, column: 29, scope: !16191)
!16194 = !DILocation(line: 1386, column: 32, scope: !16191)
!16195 = !DILocation(line: 1386, column: 46, scope: !16191)
!16196 = !DILocation(line: 1387, column: 28, scope: !16191)
!16197 = !DILocation(line: 1387, column: 4, scope: !16191)
!16198 = !DILocation(line: 1386, column: 2, scope: !16191)
!16199 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !300, file: !300, line: 989, type: !7585, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !461)
!16200 = !DILocation(line: 993, column: 10, scope: !16199)
!16201 = !DILocation(line: 993, column: 2, scope: !16199)
!16202 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2444, file: !2444, line: 1390, type: !3220, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16203)
!16203 = !{!16204}
!16204 = !DILocalVariable(name: "key", scope: !16202, file: !2444, line: 1396, type: !14691)
!16205 = !DILocation(line: 0, scope: !14699, inlinedAt: !16206)
!16206 = distinct !DILocation(line: 1396, column: 25, scope: !16202)
!16207 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !16208)
!16208 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !16206)
!16209 = !DILocation(line: 0, scope: !14708, inlinedAt: !16208)
!16210 = !DILocation(line: 0, scope: !16202)
!16211 = !DILocation(line: 1400, column: 18, scope: !16212)
!16212 = distinct !DILexicalBlock(scope: !16213, file: !2444, line: 1399, column: 36)
!16213 = distinct !DILexicalBlock(scope: !16202, file: !2444, line: 1398, column: 6)
!16214 = !DILocation(line: 0, scope: !14868, inlinedAt: !16215)
!16215 = distinct !DILocation(line: 1400, column: 3, scope: !16212)
!16216 = !DILocation(line: 266, column: 15, scope: !14868, inlinedAt: !16215)
!16217 = !DILocation(line: 266, column: 28, scope: !14868, inlinedAt: !16215)
!16218 = !DILocation(line: 0, scope: !14876, inlinedAt: !16219)
!16219 = distinct !DILocation(line: 268, column: 3, scope: !14880, inlinedAt: !16215)
!16220 = !DILocation(line: 234, column: 2, scope: !14876, inlinedAt: !16219)
!16221 = !DILocation(line: 1402, column: 15, scope: !16202)
!16222 = !DILocation(line: 0, scope: !14885, inlinedAt: !16223)
!16223 = distinct !DILocation(line: 1402, column: 2, scope: !16202)
!16224 = !DILocation(line: 252, column: 15, scope: !14885, inlinedAt: !16223)
!16225 = !DILocation(line: 252, column: 28, scope: !14885, inlinedAt: !16223)
!16226 = !DILocation(line: 0, scope: !14892, inlinedAt: !16227)
!16227 = distinct !DILocation(line: 254, column: 3, scope: !14896, inlinedAt: !16223)
!16228 = !DILocation(line: 0, scope: !14899, inlinedAt: !16229)
!16229 = distinct !DILocation(line: 229, column: 2, scope: !14892, inlinedAt: !16227)
!16230 = !DILocation(line: 188, column: 2, scope: !14909, inlinedAt: !16229)
!16231 = !DILocation(line: 188, column: 2, scope: !14911, inlinedAt: !16229)
!16232 = !DILocation(line: 0, scope: !14909, inlinedAt: !16229)
!16233 = !DILocation(line: 189, column: 7, scope: !14914, inlinedAt: !16229)
!16234 = !DILocation(line: 189, column: 35, scope: !14914, inlinedAt: !16229)
!16235 = !DILocation(line: 189, column: 7, scope: !14915, inlinedAt: !16229)
!16236 = !DILocation(line: 191, column: 21, scope: !14919, inlinedAt: !16229)
!16237 = !DILocation(line: 190, column: 4, scope: !14919, inlinedAt: !16229)
!16238 = !DILocation(line: 192, column: 4, scope: !14919, inlinedAt: !16229)
!16239 = distinct !{!16239, !16230, !16240}
!16240 = !DILocation(line: 194, column: 2, scope: !14909, inlinedAt: !16229)
!16241 = !DILocation(line: 196, column: 37, scope: !14899, inlinedAt: !16229)
!16242 = !DILocation(line: 196, column: 2, scope: !14899, inlinedAt: !16229)
!16243 = !DILocation(line: 197, column: 1, scope: !14899, inlinedAt: !16229)
!16244 = !DILocation(line: 1403, column: 2, scope: !16202)
!16245 = !DILocation(line: 0, scope: !15310, inlinedAt: !16246)
!16246 = distinct !DILocation(line: 1404, column: 2, scope: !16202)
!16247 = !DILocation(line: 196, column: 9, scope: !15310, inlinedAt: !16246)
!16248 = !DILocation(line: 1405, column: 1, scope: !16202)
!16249 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2444, file: !2444, line: 1459, type: !16250, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16252)
!16250 = !DISubroutineType(types: !16251)
!16251 = !{!332, !15490}
!16252 = !{!16253, !16254, !16255}
!16253 = !DILocalVariable(name: "timeout", arg: 1, scope: !16249, file: !2444, line: 1459, type: !15490)
!16254 = !DILocalVariable(name: "ticks", scope: !16249, file: !2444, line: 1461, type: !1676)
!16255 = !DILocalVariable(name: "ret", scope: !16249, file: !2444, line: 1480, type: !332)
!16256 = !DILocation(line: 0, scope: !16249)
!16257 = !DILocation(line: 1468, column: 6, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16249, file: !2444, line: 1468, column: 6)
!16259 = !DILocation(line: 1468, column: 6, scope: !16249)
!16260 = !DILocation(line: 1469, column: 20, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16258, file: !2444, line: 1468, column: 40)
!16262 = !DILocation(line: 1469, column: 3, scope: !16261)
!16263 = !DILocation(line: 1473, column: 3, scope: !16261)
!16264 = !DILocation(line: 1478, column: 10, scope: !16249)
!16265 = !DILocation(line: 1480, column: 16, scope: !16249)
!16266 = !DILocation(line: 1485, column: 1, scope: !16249)
!16267 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3653, file: !3653, line: 310, type: !16268, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16270)
!16268 = !DISubroutineType(types: !16269)
!16269 = !{null, !16174}
!16270 = !{!16271}
!16271 = !DILocalVariable(name: "thread", arg: 1, scope: !16267, file: !3653, line: 310, type: !16174)
!16272 = !DILocation(line: 0, scope: !16267)
!16273 = !DILocation(line: 319, column: 2, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16267, file: !3653, line: 319, column: 2)
!16275 = !{i64 2154107759}
!16276 = !DILocation(line: 320, column: 2, scope: !16267)
!16277 = !DILocation(line: 321, column: 1, scope: !16267)
!16278 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2444, file: !2444, line: 1415, type: !16279, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16281)
!16279 = !DISubroutineType(types: !16280)
!16280 = !{!332, !1676}
!16281 = !{!16282, !16283, !16284, !16285}
!16282 = !DILocalVariable(name: "ticks", arg: 1, scope: !16278, file: !2444, line: 1415, type: !1676)
!16283 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16278, file: !2444, line: 1418, type: !121)
!16284 = !DILocalVariable(name: "timeout", scope: !16278, file: !2444, line: 1430, type: !15490)
!16285 = !DILocalVariable(name: "key", scope: !16278, file: !2444, line: 1437, type: !14691)
!16286 = !DILocation(line: 0, scope: !16278)
!16287 = !DILocation(line: 1425, column: 12, scope: !16288)
!16288 = distinct !DILexicalBlock(scope: !16278, file: !2444, line: 1425, column: 6)
!16289 = !DILocation(line: 1425, column: 6, scope: !16278)
!16290 = !DILocation(line: 1426, column: 3, scope: !16291)
!16291 = distinct !DILexicalBlock(scope: !16288, file: !2444, line: 1425, column: 18)
!16292 = !DILocation(line: 1427, column: 3, scope: !16291)
!16293 = !DILocation(line: 1431, column: 24, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16278, file: !2444, line: 1431, column: 6)
!16295 = !DILocation(line: 1431, column: 6, scope: !16278)
!16296 = !DILocation(line: 1432, column: 35, scope: !16297)
!16297 = distinct !DILexicalBlock(scope: !16294, file: !2444, line: 1431, column: 30)
!16298 = !DILocation(line: 1432, column: 27, scope: !16297)
!16299 = !DILocation(line: 1433, column: 2, scope: !16297)
!16300 = !DILocation(line: 1434, column: 27, scope: !16301)
!16301 = distinct !DILexicalBlock(scope: !16294, file: !2444, line: 1433, column: 9)
!16302 = !DILocation(line: 0, scope: !16294)
!16303 = !DILocation(line: 0, scope: !14699, inlinedAt: !16304)
!16304 = distinct !DILocation(line: 1437, column: 25, scope: !16278)
!16305 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !16306)
!16306 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !16304)
!16307 = !DILocation(line: 0, scope: !14708, inlinedAt: !16306)
!16308 = !DILocation(line: 1440, column: 20, scope: !16278)
!16309 = !DILocation(line: 1440, column: 18, scope: !16278)
!16310 = !DILocation(line: 1442, column: 2, scope: !16278)
!16311 = !DILocation(line: 1443, column: 23, scope: !16278)
!16312 = !DILocation(line: 1443, column: 2, scope: !16278)
!16313 = !DILocation(line: 1444, column: 29, scope: !16278)
!16314 = !DILocation(line: 1444, column: 2, scope: !16278)
!16315 = !DILocation(line: 0, scope: !15310, inlinedAt: !16316)
!16316 = distinct !DILocation(line: 1446, column: 8, scope: !16278)
!16317 = !DILocation(line: 196, column: 9, scope: !15310, inlinedAt: !16316)
!16318 = !DILocation(line: 1450, column: 10, scope: !16278)
!16319 = !DILocation(line: 1450, column: 45, scope: !16278)
!16320 = !DILocation(line: 1450, column: 43, scope: !16278)
!16321 = !DILocation(line: 1451, column: 6, scope: !16278)
!16322 = !DILocation(line: 1457, column: 1, scope: !16278)
!16323 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !5970, file: !5970, line: 1103, type: !5971, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16324)
!16324 = !{!16325}
!16325 = !DILocalVariable(name: "t", arg: 1, scope: !16323, file: !5970, line: 1103, type: !1573)
!16326 = !DILocation(line: 0, scope: !16323)
!16327 = !DILocation(line: 0, scope: !14746, inlinedAt: !16328)
!16328 = distinct !DILocation(line: 1106, column: 9, scope: !16323)
!16329 = !DILocation(line: 139, column: 13, scope: !16330, inlinedAt: !16328)
!16330 = distinct !DILexicalBlock(scope: !16331, file: !5970, line: 138, column: 10)
!16331 = distinct !DILexicalBlock(scope: !16332, file: !5970, line: 136, column: 7)
!16332 = distinct !DILexicalBlock(scope: !14767, file: !5970, line: 134, column: 17)
!16333 = !DILocation(line: 1106, column: 2, scope: !16323)
!16334 = distinct !DISubprogram(name: "k_yield", scope: !3653, file: !3653, line: 140, type: !3220, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !461)
!16335 = !DILocation(line: 148, column: 2, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !16334, file: !3653, line: 148, column: 2)
!16337 = !{i64 2154107079}
!16338 = !DILocation(line: 149, column: 2, scope: !16334)
!16339 = !DILocation(line: 150, column: 1, scope: !16334)
!16340 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2444, file: !2444, line: 1495, type: !16341, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16343)
!16341 = !DISubroutineType(types: !16342)
!16342 = !{!332, !103}
!16343 = !{!16344, !16345}
!16344 = !DILocalVariable(name: "us", arg: 1, scope: !16340, file: !2444, line: 1495, type: !103)
!16345 = !DILocalVariable(name: "ticks", scope: !16340, file: !2444, line: 1497, type: !332)
!16346 = !DILocation(line: 0, scope: !16340)
!16347 = !DILocation(line: 1501, column: 31, scope: !16340)
!16348 = !DILocation(line: 1501, column: 10, scope: !16340)
!16349 = !DILocation(line: 1502, column: 23, scope: !16340)
!16350 = !DILocation(line: 1502, column: 10, scope: !16340)
!16351 = !DILocation(line: 1506, column: 31, scope: !16340)
!16352 = !DILocation(line: 1506, column: 9, scope: !16340)
!16353 = !DILocation(line: 1506, column: 2, scope: !16340)
!16354 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !5970, file: !5970, line: 571, type: !5971, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16355)
!16355 = !{!16356}
!16356 = !DILocalVariable(name: "t", arg: 1, scope: !16354, file: !5970, line: 571, type: !1573)
!16357 = !DILocation(line: 0, scope: !16354)
!16358 = !DILocation(line: 0, scope: !14746, inlinedAt: !16359)
!16359 = distinct !DILocation(line: 574, column: 9, scope: !16354)
!16360 = !DILocation(line: 135, column: 5, scope: !16332, inlinedAt: !16359)
!16361 = !DILocation(line: 139, column: 13, scope: !16330, inlinedAt: !16359)
!16362 = !DILocation(line: 574, column: 2, scope: !16354)
!16363 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !5970, file: !5970, line: 1187, type: !5971, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16364)
!16364 = !{!16365}
!16365 = !DILocalVariable(name: "t", arg: 1, scope: !16363, file: !5970, line: 1187, type: !1573)
!16366 = !DILocation(line: 0, scope: !16363)
!16367 = !DILocation(line: 0, scope: !14746, inlinedAt: !16368)
!16368 = distinct !DILocation(line: 1190, column: 9, scope: !16363)
!16369 = !DILocation(line: 145, column: 13, scope: !16370, inlinedAt: !16368)
!16370 = distinct !DILexicalBlock(scope: !14764, file: !5970, line: 144, column: 10)
!16371 = !DILocation(line: 1190, column: 2, scope: !16363)
!16372 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2444, file: !2444, line: 1517, type: !16268, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16373)
!16373 = !{!16374}
!16374 = !DILocalVariable(name: "thread", arg: 1, scope: !16372, file: !2444, line: 1517, type: !16174)
!16375 = !DILocation(line: 0, scope: !16372)
!16376 = !DILocation(line: 1521, column: 6, scope: !16377)
!16377 = distinct !DILexicalBlock(scope: !16372, file: !2444, line: 1521, column: 6)
!16378 = !DILocation(line: 1521, column: 6, scope: !16372)
!16379 = !DILocation(line: 1525, column: 6, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16372, file: !2444, line: 1525, column: 6)
!16381 = !DILocation(line: 1525, column: 37, scope: !16380)
!16382 = !DILocation(line: 1525, column: 6, scope: !16372)
!16383 = !DILocation(line: 1527, column: 20, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16385, file: !2444, line: 1527, column: 7)
!16385 = distinct !DILexicalBlock(scope: !16380, file: !2444, line: 1525, column: 42)
!16386 = !DILocation(line: 1527, column: 33, scope: !16384)
!16387 = !DILocation(line: 1527, column: 7, scope: !16385)
!16388 = !DILocation(line: 1532, column: 2, scope: !16372)
!16389 = !DILocation(line: 1533, column: 2, scope: !16372)
!16390 = !DILocation(line: 1031, column: 3, scope: !15343, inlinedAt: !16391)
!16391 = distinct !DILocation(line: 48, column: 10, scope: !15347, inlinedAt: !16392)
!16392 = distinct !DILocation(line: 1537, column: 7, scope: !16393)
!16393 = distinct !DILexicalBlock(scope: !16372, file: !2444, line: 1537, column: 6)
!16394 = !DILocation(line: 0, scope: !15343, inlinedAt: !16391)
!16395 = !DILocation(line: 48, column: 9, scope: !15347, inlinedAt: !16392)
!16396 = !DILocation(line: 1537, column: 6, scope: !16372)
!16397 = !DILocation(line: 1538, column: 3, scope: !16398)
!16398 = distinct !DILexicalBlock(scope: !16393, file: !2444, line: 1537, column: 25)
!16399 = !DILocation(line: 1539, column: 2, scope: !16398)
!16400 = !DILocation(line: 1540, column: 1, scope: !16372)
!16401 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13707, file: !13707, line: 101, type: !14817, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16402)
!16402 = !{!16403}
!16403 = !DILocalVariable(name: "thread", arg: 1, scope: !16401, file: !13707, line: 101, type: !2339)
!16404 = !DILocation(line: 0, scope: !16401)
!16405 = !DILocation(line: 103, column: 23, scope: !16401)
!16406 = !DILocation(line: 103, column: 36, scope: !16401)
!16407 = !DILocation(line: 103, column: 55, scope: !16401)
!16408 = !DILocation(line: 103, column: 2, scope: !16401)
!16409 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2444, file: !2444, line: 1567, type: !16410, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16412)
!16410 = !DISubroutineType(types: !16411)
!16411 = !{!16174}
!16412 = !{!16413}
!16413 = !DILocalVariable(name: "ret", scope: !16409, file: !2444, line: 1577, type: !16174)
!16414 = !DILocation(line: 1577, column: 30, scope: !16409)
!16415 = !DILocation(line: 0, scope: !16409)
!16416 = !DILocation(line: 1582, column: 2, scope: !16409)
!16417 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2444, file: !2444, line: 1593, type: !6594, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !461)
!16418 = !DILocation(line: 1031, column: 3, scope: !15343, inlinedAt: !16419)
!16419 = distinct !DILocation(line: 48, column: 10, scope: !15347, inlinedAt: !16420)
!16420 = distinct !DILocation(line: 1595, column: 10, scope: !16417)
!16421 = !DILocation(line: 0, scope: !15343, inlinedAt: !16419)
!16422 = !DILocation(line: 48, column: 9, scope: !15347, inlinedAt: !16420)
!16423 = !DILocation(line: 1595, column: 27, scope: !16417)
!16424 = !DILocation(line: 1595, column: 41, scope: !16417)
!16425 = !DILocation(line: 1595, column: 30, scope: !16417)
!16426 = !DILocation(line: 1595, column: 2, scope: !16417)
!16427 = distinct !DISubprogram(name: "z_thread_abort", scope: !2444, file: !2444, line: 1725, type: !14657, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16428)
!16428 = !{!16429, !16430}
!16429 = !DILocalVariable(name: "thread", arg: 1, scope: !16427, file: !2444, line: 1725, type: !2339)
!16430 = !DILocalVariable(name: "key", scope: !16427, file: !2444, line: 1727, type: !14691)
!16431 = !DILocation(line: 0, scope: !16427)
!16432 = !DILocation(line: 0, scope: !14699, inlinedAt: !16433)
!16433 = distinct !DILocation(line: 1727, column: 25, scope: !16427)
!16434 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !16435)
!16435 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !16433)
!16436 = !DILocation(line: 0, scope: !14708, inlinedAt: !16435)
!16437 = !DILocation(line: 1729, column: 20, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16427, file: !2444, line: 1729, column: 6)
!16439 = !DILocation(line: 1729, column: 33, scope: !16438)
!16440 = !DILocation(line: 1729, column: 48, scope: !16438)
!16441 = !DILocation(line: 1729, column: 6, scope: !16427)
!16442 = !DILocation(line: 0, scope: !14726, inlinedAt: !16443)
!16443 = distinct !DILocation(line: 1730, column: 3, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16438, file: !2444, line: 1729, column: 54)
!16445 = !DILocation(line: 0, scope: !14734, inlinedAt: !16446)
!16446 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !16443)
!16447 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !16446)
!16448 = !DILocation(line: 1732, column: 3, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16444, file: !2444, line: 1732, column: 3)
!16450 = !{i64 2154844489, i64 2154844505, i64 2154844531, i64 2154844559, i64 2154844579}
!16451 = !DILocation(line: 1733, column: 3, scope: !16444)
!16452 = !DILocation(line: 1736, column: 20, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16427, file: !2444, line: 1736, column: 6)
!16454 = !DILocation(line: 1736, column: 33, scope: !16453)
!16455 = !DILocation(line: 1736, column: 49, scope: !16453)
!16456 = !DILocation(line: 1736, column: 6, scope: !16427)
!16457 = !DILocation(line: 0, scope: !14726, inlinedAt: !16458)
!16458 = distinct !DILocation(line: 1737, column: 3, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16453, file: !2444, line: 1736, column: 56)
!16460 = !DILocation(line: 0, scope: !14734, inlinedAt: !16461)
!16461 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !16458)
!16462 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !16461)
!16463 = !DILocation(line: 1738, column: 3, scope: !16459)
!16464 = !DILocation(line: 1775, column: 2, scope: !16427)
!16465 = !DILocation(line: 1776, column: 16, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16427, file: !2444, line: 1776, column: 6)
!16467 = !DILocation(line: 1776, column: 13, scope: !16466)
!16468 = !DILocation(line: 1776, column: 25, scope: !16466)
!16469 = !DILocation(line: 1031, column: 3, scope: !15343, inlinedAt: !16470)
!16470 = distinct !DILocation(line: 48, column: 10, scope: !15347, inlinedAt: !16471)
!16471 = distinct !DILocation(line: 1776, column: 29, scope: !16466)
!16472 = !DILocation(line: 0, scope: !15343, inlinedAt: !16470)
!16473 = !DILocation(line: 48, column: 9, scope: !15347, inlinedAt: !16471)
!16474 = !DILocation(line: 1776, column: 6, scope: !16427)
!16475 = !DILocation(line: 0, scope: !15310, inlinedAt: !16476)
!16476 = distinct !DILocation(line: 1777, column: 3, scope: !16477)
!16477 = distinct !DILexicalBlock(scope: !16466, file: !2444, line: 1776, column: 47)
!16478 = !DILocation(line: 196, column: 9, scope: !15310, inlinedAt: !16476)
!16479 = !DILocation(line: 1779, column: 2, scope: !16477)
!16480 = !DILocation(line: 0, scope: !14726, inlinedAt: !16481)
!16481 = distinct !DILocation(line: 1780, column: 2, scope: !16427)
!16482 = !DILocation(line: 0, scope: !14734, inlinedAt: !16483)
!16483 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !16481)
!16484 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !16483)
!16485 = !DILocation(line: 1781, column: 1, scope: !16427)
!16486 = distinct !DISubprogram(name: "end_thread", scope: !2444, file: !2444, line: 1690, type: !14657, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16487)
!16487 = !{!16488}
!16488 = !DILocalVariable(name: "thread", arg: 1, scope: !16486, file: !2444, line: 1690, type: !2339)
!16489 = !DILocation(line: 0, scope: !16486)
!16490 = !DILocation(line: 1695, column: 20, scope: !16491)
!16491 = distinct !DILexicalBlock(scope: !16486, file: !2444, line: 1695, column: 6)
!16492 = !DILocation(line: 1695, column: 33, scope: !16491)
!16493 = !DILocation(line: 1695, column: 49, scope: !16491)
!16494 = !DILocation(line: 1695, column: 6, scope: !16486)
!16495 = !DILocation(line: 1697, column: 29, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16491, file: !2444, line: 1695, column: 56)
!16497 = !DILocation(line: 1698, column: 7, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16496, file: !2444, line: 1698, column: 7)
!16499 = !DILocation(line: 1698, column: 7, scope: !16496)
!16500 = !DILocation(line: 0, scope: !14868, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 1699, column: 4, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16498, file: !2444, line: 1698, column: 35)
!16503 = !DILocation(line: 266, column: 28, scope: !14868, inlinedAt: !16501)
!16504 = !DILocation(line: 0, scope: !14876, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 268, column: 3, scope: !14880, inlinedAt: !16501)
!16506 = !DILocation(line: 234, column: 2, scope: !14876, inlinedAt: !16505)
!16507 = !DILocation(line: 1700, column: 3, scope: !16502)
!16508 = !DILocation(line: 1701, column: 20, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16496, file: !2444, line: 1701, column: 7)
!16510 = !DILocation(line: 1701, column: 30, scope: !16509)
!16511 = !DILocation(line: 1701, column: 7, scope: !16496)
!16512 = !DILocation(line: 1702, column: 4, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16509, file: !2444, line: 1701, column: 39)
!16514 = !DILocation(line: 1703, column: 3, scope: !16513)
!16515 = !DILocation(line: 1704, column: 9, scope: !16496)
!16516 = !DILocation(line: 1705, column: 23, scope: !16496)
!16517 = !DILocation(line: 1705, column: 3, scope: !16496)
!16518 = !DILocation(line: 1706, column: 3, scope: !16496)
!16519 = !DILocation(line: 1722, column: 2, scope: !16496)
!16520 = !DILocation(line: 1723, column: 1, scope: !16486)
!16521 = distinct !DISubprogram(name: "unpend_all", scope: !2444, file: !2444, line: 1674, type: !16522, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16524)
!16522 = !DISubroutineType(types: !16523)
!16523 = !{null, !2370}
!16524 = !{!16525, !16526}
!16525 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16521, file: !2444, line: 1674, type: !2370)
!16526 = !DILocalVariable(name: "thread", scope: !16521, file: !2444, line: 1676, type: !2339)
!16527 = !DILocation(line: 0, scope: !16521)
!16528 = !DILocation(line: 1678, column: 19, scope: !16521)
!16529 = !DILocation(line: 1678, column: 41, scope: !16521)
!16530 = !DILocation(line: 1678, column: 2, scope: !16521)
!16531 = !DILocation(line: 1679, column: 3, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16521, file: !2444, line: 1678, column: 50)
!16533 = !DILocation(line: 1680, column: 9, scope: !16532)
!16534 = !DILocalVariable(name: "thread", arg: 1, scope: !16535, file: !13727, line: 65, type: !2339)
!16535 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13727, file: !13727, line: 65, type: !16536, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16538)
!16536 = !DISubroutineType(types: !16537)
!16537 = !{null, !2339, !32}
!16538 = !{!16534, !16539}
!16539 = !DILocalVariable(name: "value", arg: 2, scope: !16535, file: !13727, line: 65, type: !32)
!16540 = !DILocation(line: 0, scope: !16535, inlinedAt: !16541)
!16541 = distinct !DILocation(line: 1681, column: 3, scope: !16532)
!16542 = !DILocation(line: 67, column: 15, scope: !16535, inlinedAt: !16541)
!16543 = !DILocation(line: 67, column: 33, scope: !16535, inlinedAt: !16541)
!16544 = !DILocation(line: 1682, column: 3, scope: !16532)
!16545 = distinct !{!16545, !16530, !16546}
!16546 = !DILocation(line: 1683, column: 2, scope: !16521)
!16547 = !DILocation(line: 1684, column: 1, scope: !16521)
!16548 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2444, file: !2444, line: 1794, type: !16549, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16551)
!16549 = !DISubroutineType(types: !16550)
!16550 = !{!103, !2339, !15490}
!16551 = !{!16552, !16553, !16554, !16555}
!16552 = !DILocalVariable(name: "thread", arg: 1, scope: !16548, file: !2444, line: 1794, type: !2339)
!16553 = !DILocalVariable(name: "timeout", arg: 2, scope: !16548, file: !2444, line: 1794, type: !15490)
!16554 = !DILocalVariable(name: "key", scope: !16548, file: !2444, line: 1796, type: !14691)
!16555 = !DILocalVariable(name: "ret", scope: !16548, file: !2444, line: 1797, type: !103)
!16556 = !DILocation(line: 0, scope: !16548)
!16557 = !DILocation(line: 0, scope: !14699, inlinedAt: !16558)
!16558 = distinct !DILocation(line: 1796, column: 25, scope: !16548)
!16559 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !16560)
!16560 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !16558)
!16561 = !DILocation(line: 0, scope: !14708, inlinedAt: !16560)
!16562 = !DILocation(line: 1801, column: 20, scope: !16563)
!16563 = distinct !DILexicalBlock(scope: !16548, file: !2444, line: 1801, column: 6)
!16564 = !DILocation(line: 1801, column: 33, scope: !16563)
!16565 = !DILocation(line: 1801, column: 49, scope: !16563)
!16566 = !DILocation(line: 1801, column: 6, scope: !16548)
!16567 = !DILocation(line: 1803, column: 13, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16563, file: !2444, line: 1803, column: 13)
!16569 = !DILocation(line: 1803, column: 13, scope: !16563)
!16570 = !DILocation(line: 1805, column: 24, scope: !16571)
!16571 = distinct !DILexicalBlock(scope: !16568, file: !2444, line: 1805, column: 13)
!16572 = !DILocation(line: 1805, column: 21, scope: !16571)
!16573 = !DILocation(line: 1805, column: 34, scope: !16571)
!16574 = !DILocation(line: 1806, column: 20, scope: !16571)
!16575 = !DILocation(line: 1806, column: 44, scope: !16571)
!16576 = !DILocation(line: 1806, column: 30, scope: !16571)
!16577 = !DILocation(line: 1805, column: 13, scope: !16568)
!16578 = !DILocation(line: 1810, column: 42, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16571, file: !2444, line: 1808, column: 9)
!16580 = !DILocation(line: 1810, column: 3, scope: !16579)
!16581 = !DILocation(line: 1811, column: 22, scope: !16579)
!16582 = !DILocation(line: 1811, column: 3, scope: !16579)
!16583 = !DILocation(line: 0, scope: !15310, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 1814, column: 9, scope: !16579)
!16585 = !DILocation(line: 196, column: 9, scope: !15310, inlinedAt: !16584)
!16586 = !DILocation(line: 1817, column: 3, scope: !16579)
!16587 = !DILocation(line: 0, scope: !16563)
!16588 = !DILocation(line: 0, scope: !14726, inlinedAt: !16589)
!16589 = distinct !DILocation(line: 1822, column: 2, scope: !16548)
!16590 = !DILocation(line: 0, scope: !14734, inlinedAt: !16591)
!16591 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !16589)
!16592 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !16591)
!16593 = !DILocation(line: 1823, column: 2, scope: !16548)
!16594 = !DILocation(line: 1824, column: 1, scope: !16548)
!16595 = distinct !DISubprogram(name: "z_sched_wake", scope: !2444, file: !2444, line: 1882, type: !16596, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16598)
!16596 = !DISubroutineType(types: !16597)
!16597 = !{!157, !2370, !103, !102}
!16598 = !{!16599, !16600, !16601, !16602, !16603, !16604, !16606}
!16599 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16595, file: !2444, line: 1882, type: !2370)
!16600 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16595, file: !2444, line: 1882, type: !103)
!16601 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16595, file: !2444, line: 1882, type: !102)
!16602 = !DILocalVariable(name: "thread", scope: !16595, file: !2444, line: 1884, type: !2339)
!16603 = !DILocalVariable(name: "ret", scope: !16595, file: !2444, line: 1885, type: !157)
!16604 = !DILocalVariable(name: "__i", scope: !16605, file: !2444, line: 1887, type: !14691)
!16605 = distinct !DILexicalBlock(scope: !16595, file: !2444, line: 1887, column: 2)
!16606 = !DILocalVariable(name: "__key", scope: !16605, file: !2444, line: 1887, type: !14691)
!16607 = !DILocation(line: 0, scope: !16595)
!16608 = !DILocation(line: 0, scope: !16605)
!16609 = !DILocation(line: 0, scope: !14699, inlinedAt: !16610)
!16610 = distinct !DILocation(line: 1887, column: 2, scope: !16605)
!16611 = !DILocation(line: 55, column: 2, scope: !14708, inlinedAt: !16612)
!16612 = distinct !DILocation(line: 145, column: 10, scope: !14699, inlinedAt: !16610)
!16613 = !DILocation(line: 0, scope: !14708, inlinedAt: !16612)
!16614 = !DILocation(line: 1888, column: 12, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16616, file: !2444, line: 1887, column: 26)
!16616 = distinct !DILexicalBlock(scope: !16605, file: !2444, line: 1887, column: 2)
!16617 = !DILocation(line: 1890, column: 14, scope: !16618)
!16618 = distinct !DILexicalBlock(scope: !16615, file: !2444, line: 1890, column: 7)
!16619 = !DILocation(line: 1890, column: 7, scope: !16615)
!16620 = !DILocalVariable(name: "thread", arg: 1, scope: !16621, file: !16622, line: 134, type: !2339)
!16621 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16622, file: !16622, line: 134, type: !16623, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16625)
!16622 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16623 = !DISubroutineType(types: !16624)
!16624 = !{null, !2339, !32, !102}
!16625 = !{!16620, !16626, !16627}
!16626 = !DILocalVariable(name: "value", arg: 2, scope: !16621, file: !16622, line: 135, type: !32)
!16627 = !DILocalVariable(name: "data", arg: 3, scope: !16621, file: !16622, line: 136, type: !102)
!16628 = !DILocation(line: 0, scope: !16621, inlinedAt: !16629)
!16629 = distinct !DILocation(line: 1891, column: 4, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !16618, file: !2444, line: 1890, column: 23)
!16631 = !DILocation(line: 0, scope: !16535, inlinedAt: !16632)
!16632 = distinct !DILocation(line: 138, column: 2, scope: !16621, inlinedAt: !16629)
!16633 = !DILocation(line: 67, column: 15, scope: !16535, inlinedAt: !16632)
!16634 = !DILocation(line: 67, column: 33, scope: !16535, inlinedAt: !16632)
!16635 = !DILocation(line: 139, column: 15, scope: !16621, inlinedAt: !16629)
!16636 = !DILocation(line: 139, column: 25, scope: !16621, inlinedAt: !16629)
!16637 = !DILocation(line: 1894, column: 4, scope: !16630)
!16638 = !DILocation(line: 1895, column: 10, scope: !16630)
!16639 = !DILocation(line: 1896, column: 4, scope: !16630)
!16640 = !DILocation(line: 1898, column: 3, scope: !16630)
!16641 = !DILocation(line: 0, scope: !14726, inlinedAt: !16642)
!16642 = distinct !DILocation(line: 1887, column: 2, scope: !16616)
!16643 = !DILocation(line: 0, scope: !14734, inlinedAt: !16644)
!16644 = distinct !DILocation(line: 215, column: 2, scope: !14726, inlinedAt: !16642)
!16645 = !DILocation(line: 95, column: 2, scope: !14734, inlinedAt: !16644)
!16646 = !DILocation(line: 1901, column: 2, scope: !16595)
!16647 = distinct !DISubprogram(name: "z_sched_wait", scope: !2444, file: !2444, line: 1904, type: !16648, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !16651)
!16648 = !DISubroutineType(types: !16649)
!16649 = !{!103, !14702, !14691, !2370, !15490, !16650}
!16650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16651 = !{!16652, !16653, !16654, !16655, !16656, !16657}
!16652 = !DILocalVariable(name: "lock", arg: 1, scope: !16647, file: !2444, line: 1904, type: !14702)
!16653 = !DILocalVariable(name: "key", arg: 2, scope: !16647, file: !2444, line: 1904, type: !14691)
!16654 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16647, file: !2444, line: 1905, type: !2370)
!16655 = !DILocalVariable(name: "timeout", arg: 4, scope: !16647, file: !2444, line: 1905, type: !15490)
!16656 = !DILocalVariable(name: "data", arg: 5, scope: !16647, file: !2444, line: 1905, type: !16650)
!16657 = !DILocalVariable(name: "ret", scope: !16647, file: !2444, line: 1907, type: !103)
!16658 = !DILocation(line: 0, scope: !16647)
!16659 = !DILocation(line: 1907, column: 12, scope: !16647)
!16660 = !DILocation(line: 1909, column: 11, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16647, file: !2444, line: 1909, column: 6)
!16662 = !DILocation(line: 1909, column: 6, scope: !16647)
!16663 = !DILocation(line: 1910, column: 11, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16661, file: !2444, line: 1909, column: 20)
!16665 = !DILocation(line: 1910, column: 26, scope: !16664)
!16666 = !DILocation(line: 1910, column: 9, scope: !16664)
!16667 = !DILocation(line: 1911, column: 2, scope: !16664)
!16668 = !DILocation(line: 1912, column: 2, scope: !16647)
!16669 = distinct !DISubprogram(name: "z_data_copy", scope: !16670, file: !16670, line: 22, type: !3220, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !461)
!16670 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16671 = !DILocation(line: 24, column: 2, scope: !16669)
!16672 = !DILocation(line: 27, column: 2, scope: !16669)
!16673 = !DILocation(line: 71, column: 1, scope: !16669)
!16674 = distinct !DISubprogram(name: "z_add_timeout", scope: !2481, file: !2481, line: 88, type: !16675, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16681)
!16675 = !DISubroutineType(types: !16676)
!16676 = !{null, !2454, !2473, !16677}
!16677 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1677, line: 67, baseType: !16678)
!16678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1677, line: 65, size: 64, elements: !16679)
!16679 = !{!16680}
!16680 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16678, file: !1677, line: 66, baseType: !1676, size: 64)
!16681 = !{!16682, !16683, !16684, !16685, !16691, !16692, !16695, !16698}
!16682 = !DILocalVariable(name: "to", arg: 1, scope: !16674, file: !2481, line: 88, type: !2454)
!16683 = !DILocalVariable(name: "fn", arg: 2, scope: !16674, file: !2481, line: 88, type: !2473)
!16684 = !DILocalVariable(name: "timeout", arg: 3, scope: !16674, file: !2481, line: 89, type: !16677)
!16685 = !DILocalVariable(name: "__i", scope: !16686, file: !2481, line: 102, type: !16687)
!16686 = distinct !DILexicalBlock(scope: !16674, file: !2481, line: 102, column: 2)
!16687 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !16688)
!16688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !16689)
!16689 = !{!16690}
!16690 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16688, file: !460, line: 33, baseType: !103, size: 32)
!16691 = !DILocalVariable(name: "__key", scope: !16686, file: !2481, line: 102, type: !16687)
!16692 = !DILocalVariable(name: "t", scope: !16693, file: !2481, line: 103, type: !2454)
!16693 = distinct !DILexicalBlock(scope: !16694, file: !2481, line: 102, column: 24)
!16694 = distinct !DILexicalBlock(scope: !16686, file: !2481, line: 102, column: 2)
!16695 = !DILocalVariable(name: "ticks", scope: !16696, file: !2481, line: 107, type: !1676)
!16696 = distinct !DILexicalBlock(scope: !16697, file: !2481, line: 106, column: 39)
!16697 = distinct !DILexicalBlock(scope: !16693, file: !2481, line: 105, column: 7)
!16698 = !DILocalVariable(name: "next_time", scope: !16699, file: !2481, line: 137, type: !332)
!16699 = distinct !DILexicalBlock(scope: !16700, file: !2481, line: 127, column: 22)
!16700 = distinct !DILexicalBlock(scope: !16693, file: !2481, line: 127, column: 7)
!16701 = !DILocation(line: 0, scope: !16674)
!16702 = !DILocation(line: 91, column: 6, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16674, file: !2481, line: 91, column: 6)
!16704 = !DILocation(line: 91, column: 6, scope: !16674)
!16705 = !DILocation(line: 100, column: 6, scope: !16674)
!16706 = !DILocation(line: 100, column: 9, scope: !16674)
!16707 = !DILocation(line: 0, scope: !16686)
!16708 = !DILocalVariable(name: "l", arg: 1, scope: !16709, file: !460, line: 136, type: !16712)
!16709 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !16710, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16713)
!16710 = !DISubroutineType(types: !16711)
!16711 = !{!16687, !16712}
!16712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 32)
!16713 = !{!16708, !16714}
!16714 = !DILocalVariable(name: "k", scope: !16709, file: !460, line: 139, type: !16687)
!16715 = !DILocation(line: 0, scope: !16709, inlinedAt: !16716)
!16716 = distinct !DILocation(line: 102, column: 2, scope: !16686)
!16717 = !DILocation(line: 55, column: 2, scope: !16718, inlinedAt: !16722)
!16718 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5770, file: !5770, line: 42, type: !5771, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16719)
!16719 = !{!16720, !16721}
!16720 = !DILocalVariable(name: "key", scope: !16718, file: !5770, line: 44, type: !32)
!16721 = !DILocalVariable(name: "tmp", scope: !16718, file: !5770, line: 53, type: !32)
!16722 = distinct !DILocation(line: 145, column: 10, scope: !16709, inlinedAt: !16716)
!16723 = !{i64 1953785}
!16724 = !DILocation(line: 0, scope: !16718, inlinedAt: !16722)
!16725 = !DILocation(line: 106, column: 33, scope: !16697)
!16726 = !DILocation(line: 105, column: 7, scope: !16693)
!16727 = !DILocation(line: 107, column: 50, scope: !16696)
!16728 = !DILocation(line: 107, column: 48, scope: !16696)
!16729 = !DILocation(line: 0, scope: !16696)
!16730 = !DILocation(line: 109, column: 17, scope: !16696)
!16731 = !DILocation(line: 110, column: 3, scope: !16696)
!16732 = !DILocation(line: 111, column: 31, scope: !16733)
!16733 = distinct !DILexicalBlock(scope: !16697, file: !2481, line: 110, column: 10)
!16734 = !DILocation(line: 111, column: 37, scope: !16733)
!16735 = !DILocation(line: 111, column: 35, scope: !16733)
!16736 = !DILocation(line: 0, scope: !16697)
!16737 = !DILocation(line: 109, column: 8, scope: !16696)
!16738 = !DILocation(line: 109, column: 15, scope: !16696)
!16739 = !DILocation(line: 114, column: 12, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16693, file: !2481, line: 114, column: 3)
!16741 = !DILocation(line: 0, scope: !16693)
!16742 = !DILocation(line: 114, column: 3, scope: !16740)
!16743 = !DILocation(line: 115, column: 24, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16745, file: !2481, line: 115, column: 8)
!16745 = distinct !DILexicalBlock(scope: !16746, file: !2481, line: 114, column: 45)
!16746 = distinct !DILexicalBlock(scope: !16740, file: !2481, line: 114, column: 3)
!16747 = !DILocation(line: 115, column: 11, scope: !16744)
!16748 = !DILocation(line: 115, column: 18, scope: !16744)
!16749 = !DILocation(line: 115, column: 8, scope: !16745)
!16750 = !DILocation(line: 116, column: 15, scope: !16751)
!16751 = distinct !DILexicalBlock(scope: !16744, file: !2481, line: 115, column: 32)
!16752 = !DILocation(line: 117, column: 26, scope: !16751)
!16753 = !DILocation(line: 117, column: 37, scope: !16751)
!16754 = !DILocation(line: 117, column: 5, scope: !16751)
!16755 = !DILocation(line: 123, column: 7, scope: !16693)
!16756 = !DILocation(line: 120, column: 15, scope: !16745)
!16757 = !DILocation(line: 114, column: 36, scope: !16746)
!16758 = distinct !{!16758, !16742, !16759}
!16759 = !DILocation(line: 121, column: 3, scope: !16740)
!16760 = !DILocation(line: 124, column: 41, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16762, file: !2481, line: 123, column: 18)
!16762 = distinct !DILexicalBlock(scope: !16693, file: !2481, line: 123, column: 7)
!16763 = !DILocation(line: 124, column: 4, scope: !16761)
!16764 = !DILocation(line: 125, column: 3, scope: !16761)
!16765 = !DILocation(line: 127, column: 13, scope: !16700)
!16766 = !DILocation(line: 127, column: 10, scope: !16700)
!16767 = !DILocation(line: 127, column: 7, scope: !16693)
!16768 = !DILocation(line: 137, column: 24, scope: !16699)
!16769 = !DILocation(line: 0, scope: !16699)
!16770 = !DILocation(line: 139, column: 18, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !16699, file: !2481, line: 139, column: 8)
!16772 = !DILocation(line: 139, column: 23, scope: !16771)
!16773 = !DILocation(line: 141, column: 5, scope: !16774)
!16774 = distinct !DILexicalBlock(scope: !16771, file: !2481, line: 140, column: 48)
!16775 = !DILocation(line: 142, column: 4, scope: !16774)
!16776 = !DILocalVariable(name: "key", arg: 2, scope: !16777, file: !460, line: 190, type: !16687)
!16777 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !16778, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16780)
!16778 = !DISubroutineType(types: !16779)
!16779 = !{null, !16712, !16687}
!16780 = !{!16781, !16776}
!16781 = !DILocalVariable(name: "l", arg: 1, scope: !16777, file: !460, line: 189, type: !16712)
!16782 = !DILocation(line: 0, scope: !16777, inlinedAt: !16783)
!16783 = distinct !DILocation(line: 102, column: 2, scope: !16694)
!16784 = !DILocalVariable(name: "key", arg: 1, scope: !16785, file: !5770, line: 84, type: !32)
!16785 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5770, file: !5770, line: 84, type: !5781, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16786)
!16786 = !{!16784}
!16787 = !DILocation(line: 0, scope: !16785, inlinedAt: !16788)
!16788 = distinct !DILocation(line: 215, column: 2, scope: !16777, inlinedAt: !16783)
!16789 = !DILocation(line: 95, column: 2, scope: !16785, inlinedAt: !16788)
!16790 = !{i64 1954602}
!16791 = !DILocation(line: 148, column: 1, scope: !16674)
!16792 = distinct !DISubprogram(name: "elapsed", scope: !2481, file: !2481, line: 62, type: !16793, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !461)
!16793 = !DISubroutineType(types: !16794)
!16794 = !{!332}
!16795 = !DILocation(line: 64, column: 9, scope: !16792)
!16796 = !DILocation(line: 64, column: 28, scope: !16792)
!16797 = !DILocation(line: 64, column: 35, scope: !16792)
!16798 = !DILocation(line: 64, column: 2, scope: !16792)
!16799 = distinct !DISubprogram(name: "first", scope: !2481, file: !2481, line: 39, type: !16800, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16802)
!16800 = !DISubroutineType(types: !16801)
!16801 = !{!2454}
!16802 = !{!16803}
!16803 = !DILocalVariable(name: "t", scope: !16799, file: !2481, line: 41, type: !16804)
!16804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 32)
!16805 = !DILocation(line: 41, column: 19, scope: !16799)
!16806 = !DILocation(line: 0, scope: !16799)
!16807 = !DILocation(line: 43, column: 9, scope: !16799)
!16808 = !DILocation(line: 43, column: 2, scope: !16799)
!16809 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !309, file: !309, line: 443, type: !16810, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16812)
!16810 = !DISubroutineType(types: !16811)
!16811 = !{null, !16804, !16804}
!16812 = !{!16813, !16814, !16815}
!16813 = !DILocalVariable(name: "successor", arg: 1, scope: !16809, file: !309, line: 443, type: !16804)
!16814 = !DILocalVariable(name: "node", arg: 2, scope: !16809, file: !309, line: 443, type: !16804)
!16815 = !DILocalVariable(name: "prev", scope: !16809, file: !309, line: 445, type: !16816)
!16816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16804)
!16817 = !DILocation(line: 0, scope: !16809)
!16818 = !DILocation(line: 445, column: 39, scope: !16809)
!16819 = !DILocation(line: 447, column: 8, scope: !16809)
!16820 = !DILocation(line: 447, column: 13, scope: !16809)
!16821 = !DILocation(line: 448, column: 8, scope: !16809)
!16822 = !DILocation(line: 448, column: 13, scope: !16809)
!16823 = !DILocation(line: 449, column: 8, scope: !16809)
!16824 = !DILocation(line: 449, column: 13, scope: !16809)
!16825 = !DILocation(line: 450, column: 18, scope: !16809)
!16826 = !DILocation(line: 451, column: 1, scope: !16809)
!16827 = distinct !DISubprogram(name: "next", scope: !2481, file: !2481, line: 46, type: !16828, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16830)
!16828 = !DISubroutineType(types: !16829)
!16829 = !{!2454, !2454}
!16830 = !{!16831, !16832}
!16831 = !DILocalVariable(name: "t", arg: 1, scope: !16827, file: !2481, line: 46, type: !2454)
!16832 = !DILocalVariable(name: "n", scope: !16827, file: !2481, line: 48, type: !16804)
!16833 = !DILocation(line: 0, scope: !16827)
!16834 = !DILocation(line: 48, column: 58, scope: !16827)
!16835 = !DILocation(line: 48, column: 19, scope: !16827)
!16836 = !DILocation(line: 50, column: 9, scope: !16827)
!16837 = !DILocation(line: 50, column: 2, scope: !16827)
!16838 = distinct !DISubprogram(name: "sys_dlist_append", scope: !309, file: !309, line: 404, type: !16839, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16842)
!16839 = !DISubroutineType(types: !16840)
!16840 = !{null, !16841, !16804}
!16841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!16842 = !{!16843, !16844, !16845}
!16843 = !DILocalVariable(name: "list", arg: 1, scope: !16838, file: !309, line: 404, type: !16841)
!16844 = !DILocalVariable(name: "node", arg: 2, scope: !16838, file: !309, line: 404, type: !16804)
!16845 = !DILocalVariable(name: "tail", scope: !16838, file: !309, line: 406, type: !16816)
!16846 = !DILocation(line: 0, scope: !16838)
!16847 = !DILocation(line: 406, column: 34, scope: !16838)
!16848 = !DILocation(line: 408, column: 8, scope: !16838)
!16849 = !DILocation(line: 408, column: 13, scope: !16838)
!16850 = !DILocation(line: 409, column: 8, scope: !16838)
!16851 = !DILocation(line: 409, column: 13, scope: !16838)
!16852 = !DILocation(line: 411, column: 8, scope: !16838)
!16853 = !DILocation(line: 411, column: 13, scope: !16838)
!16854 = !DILocation(line: 412, column: 13, scope: !16838)
!16855 = !DILocation(line: 413, column: 1, scope: !16838)
!16856 = distinct !DISubprogram(name: "next_timeout", scope: !2481, file: !2481, line: 67, type: !16793, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16857)
!16857 = !{!16858, !16859, !16860}
!16858 = !DILocalVariable(name: "to", scope: !16856, file: !2481, line: 69, type: !2454)
!16859 = !DILocalVariable(name: "ticks_elapsed", scope: !16856, file: !2481, line: 70, type: !332)
!16860 = !DILocalVariable(name: "ret", scope: !16856, file: !2481, line: 71, type: !332)
!16861 = !DILocation(line: 69, column: 24, scope: !16856)
!16862 = !DILocation(line: 0, scope: !16856)
!16863 = !DILocation(line: 70, column: 26, scope: !16856)
!16864 = !DILocation(line: 73, column: 10, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16856, file: !2481, line: 73, column: 6)
!16866 = !DILocation(line: 73, column: 19, scope: !16865)
!16867 = !DILocation(line: 74, column: 21, scope: !16865)
!16868 = !DILocation(line: 74, column: 30, scope: !16865)
!16869 = !DILocation(line: 74, column: 28, scope: !16865)
!16870 = !DILocation(line: 74, column: 45, scope: !16865)
!16871 = !DILocation(line: 73, column: 6, scope: !16856)
!16872 = !DILocation(line: 77, column: 9, scope: !16873)
!16873 = distinct !DILexicalBlock(scope: !16865, file: !2481, line: 76, column: 9)
!16874 = !DILocation(line: 0, scope: !16865)
!16875 = !DILocation(line: 81, column: 20, scope: !16876)
!16876 = distinct !DILexicalBlock(scope: !16856, file: !2481, line: 81, column: 6)
!16877 = !DILocation(line: 81, column: 6, scope: !16876)
!16878 = !DILocation(line: 81, column: 32, scope: !16876)
!16879 = !DILocation(line: 85, column: 2, scope: !16856)
!16880 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !309, file: !309, line: 341, type: !16881, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16883)
!16881 = !DISubroutineType(types: !16882)
!16882 = !{!16804, !16841, !16804}
!16883 = !{!16884, !16885}
!16884 = !DILocalVariable(name: "list", arg: 1, scope: !16880, file: !309, line: 341, type: !16841)
!16885 = !DILocalVariable(name: "node", arg: 2, scope: !16880, file: !309, line: 342, type: !16804)
!16886 = !DILocation(line: 0, scope: !16880)
!16887 = !DILocation(line: 344, column: 15, scope: !16880)
!16888 = !DILocation(line: 344, column: 9, scope: !16880)
!16889 = !DILocation(line: 344, column: 26, scope: !16880)
!16890 = !DILocation(line: 344, column: 2, scope: !16880)
!16891 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !309, file: !309, line: 325, type: !16881, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16892)
!16892 = !{!16893, !16894}
!16893 = !DILocalVariable(name: "list", arg: 1, scope: !16891, file: !309, line: 325, type: !16841)
!16894 = !DILocalVariable(name: "node", arg: 2, scope: !16891, file: !309, line: 326, type: !16804)
!16895 = !DILocation(line: 0, scope: !16891)
!16896 = !DILocation(line: 328, column: 24, scope: !16891)
!16897 = !DILocation(line: 328, column: 15, scope: !16891)
!16898 = !DILocation(line: 328, column: 9, scope: !16891)
!16899 = !DILocation(line: 328, column: 45, scope: !16891)
!16900 = !DILocation(line: 328, column: 2, scope: !16891)
!16901 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !309, file: !309, line: 294, type: !16902, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16904)
!16902 = !DISubroutineType(types: !16903)
!16903 = !{!16804, !16841}
!16904 = !{!16905}
!16905 = !DILocalVariable(name: "list", arg: 1, scope: !16901, file: !309, line: 294, type: !16841)
!16906 = !DILocation(line: 0, scope: !16901)
!16907 = !DILocation(line: 296, column: 9, scope: !16901)
!16908 = !DILocation(line: 296, column: 2, scope: !16901)
!16909 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !309, file: !309, line: 266, type: !16910, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16912)
!16910 = !DISubroutineType(types: !16911)
!16911 = !{!157, !16841}
!16912 = !{!16913}
!16913 = !DILocalVariable(name: "list", arg: 1, scope: !16909, file: !309, line: 266, type: !16841)
!16914 = !DILocation(line: 0, scope: !16909)
!16915 = !DILocation(line: 268, column: 15, scope: !16909)
!16916 = !DILocation(line: 268, column: 20, scope: !16909)
!16917 = !DILocation(line: 268, column: 2, scope: !16909)
!16918 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2481, file: !2481, line: 150, type: !16919, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16921)
!16919 = !DISubroutineType(types: !16920)
!16920 = !{!103, !2454}
!16921 = !{!16922, !16923, !16924, !16926}
!16922 = !DILocalVariable(name: "to", arg: 1, scope: !16918, file: !2481, line: 150, type: !2454)
!16923 = !DILocalVariable(name: "ret", scope: !16918, file: !2481, line: 152, type: !103)
!16924 = !DILocalVariable(name: "__i", scope: !16925, file: !2481, line: 154, type: !16687)
!16925 = distinct !DILexicalBlock(scope: !16918, file: !2481, line: 154, column: 2)
!16926 = !DILocalVariable(name: "__key", scope: !16925, file: !2481, line: 154, type: !16687)
!16927 = !DILocation(line: 0, scope: !16918)
!16928 = !DILocation(line: 0, scope: !16925)
!16929 = !DILocation(line: 0, scope: !16709, inlinedAt: !16930)
!16930 = distinct !DILocation(line: 154, column: 2, scope: !16925)
!16931 = !DILocation(line: 55, column: 2, scope: !16718, inlinedAt: !16932)
!16932 = distinct !DILocation(line: 145, column: 10, scope: !16709, inlinedAt: !16930)
!16933 = !DILocation(line: 0, scope: !16718, inlinedAt: !16932)
!16934 = !DILocation(line: 155, column: 7, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16936, file: !2481, line: 155, column: 7)
!16936 = distinct !DILexicalBlock(scope: !16937, file: !2481, line: 154, column: 24)
!16937 = distinct !DILexicalBlock(scope: !16925, file: !2481, line: 154, column: 2)
!16938 = !DILocation(line: 155, column: 7, scope: !16936)
!16939 = !DILocation(line: 156, column: 4, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16935, file: !2481, line: 155, column: 39)
!16941 = !DILocation(line: 158, column: 3, scope: !16940)
!16942 = !DILocation(line: 0, scope: !16777, inlinedAt: !16943)
!16943 = distinct !DILocation(line: 154, column: 2, scope: !16937)
!16944 = !DILocation(line: 0, scope: !16785, inlinedAt: !16945)
!16945 = distinct !DILocation(line: 215, column: 2, scope: !16777, inlinedAt: !16943)
!16946 = !DILocation(line: 95, column: 2, scope: !16785, inlinedAt: !16945)
!16947 = !DILocation(line: 161, column: 2, scope: !16918)
!16948 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !309, file: !309, line: 225, type: !16949, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16953)
!16949 = !DISubroutineType(types: !16950)
!16950 = !{!157, !16951}
!16951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16952, size: 32)
!16952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2458)
!16953 = !{!16954}
!16954 = !DILocalVariable(name: "node", arg: 1, scope: !16948, file: !309, line: 225, type: !16951)
!16955 = !DILocation(line: 0, scope: !16948)
!16956 = !DILocation(line: 227, column: 15, scope: !16948)
!16957 = !DILocation(line: 227, column: 20, scope: !16948)
!16958 = !DILocation(line: 227, column: 2, scope: !16948)
!16959 = distinct !DISubprogram(name: "remove_timeout", scope: !2481, file: !2481, line: 53, type: !2475, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16960)
!16960 = !{!16961}
!16961 = !DILocalVariable(name: "t", arg: 1, scope: !16959, file: !2481, line: 53, type: !2454)
!16962 = !DILocation(line: 0, scope: !16959)
!16963 = !DILocation(line: 55, column: 6, scope: !16964)
!16964 = distinct !DILexicalBlock(scope: !16959, file: !2481, line: 55, column: 6)
!16965 = !DILocation(line: 55, column: 14, scope: !16964)
!16966 = !DILocation(line: 55, column: 6, scope: !16959)
!16967 = !DILocation(line: 56, column: 25, scope: !16968)
!16968 = distinct !DILexicalBlock(scope: !16964, file: !2481, line: 55, column: 23)
!16969 = !DILocation(line: 56, column: 12, scope: !16968)
!16970 = !DILocation(line: 56, column: 19, scope: !16968)
!16971 = !DILocation(line: 57, column: 2, scope: !16968)
!16972 = !DILocation(line: 59, column: 23, scope: !16959)
!16973 = !DILocation(line: 59, column: 2, scope: !16959)
!16974 = !DILocation(line: 60, column: 1, scope: !16959)
!16975 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !309, file: !309, line: 496, type: !16976, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16978)
!16976 = !DISubroutineType(types: !16977)
!16977 = !{null, !16804}
!16978 = !{!16979, !16980, !16981}
!16979 = !DILocalVariable(name: "node", arg: 1, scope: !16975, file: !309, line: 496, type: !16804)
!16980 = !DILocalVariable(name: "prev", scope: !16975, file: !309, line: 498, type: !16816)
!16981 = !DILocalVariable(name: "next", scope: !16975, file: !309, line: 499, type: !16816)
!16982 = !DILocation(line: 0, scope: !16975)
!16983 = !DILocation(line: 498, column: 34, scope: !16975)
!16984 = !DILocation(line: 499, column: 34, scope: !16975)
!16985 = !DILocation(line: 501, column: 8, scope: !16975)
!16986 = !DILocation(line: 501, column: 13, scope: !16975)
!16987 = !DILocation(line: 502, column: 8, scope: !16975)
!16988 = !DILocation(line: 502, column: 13, scope: !16975)
!16989 = !DILocation(line: 503, column: 2, scope: !16975)
!16990 = !DILocation(line: 504, column: 1, scope: !16975)
!16991 = distinct !DISubprogram(name: "sys_dnode_init", scope: !309, file: !309, line: 211, type: !16976, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !16992)
!16992 = !{!16993}
!16993 = !DILocalVariable(name: "node", arg: 1, scope: !16991, file: !309, line: 211, type: !16804)
!16994 = !DILocation(line: 0, scope: !16991)
!16995 = !DILocation(line: 213, column: 8, scope: !16991)
!16996 = !DILocation(line: 213, column: 13, scope: !16991)
!16997 = !DILocation(line: 214, column: 8, scope: !16991)
!16998 = !DILocation(line: 214, column: 13, scope: !16991)
!16999 = !DILocation(line: 215, column: 1, scope: !16991)
!17000 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2481, file: !2481, line: 183, type: !17001, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !17005)
!17001 = !DISubroutineType(types: !17002)
!17002 = !{!1676, !17003}
!17003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17004, size: 32)
!17004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2455)
!17005 = !{!17006, !17007, !17008, !17010}
!17006 = !DILocalVariable(name: "timeout", arg: 1, scope: !17000, file: !2481, line: 183, type: !17003)
!17007 = !DILocalVariable(name: "ticks", scope: !17000, file: !2481, line: 185, type: !1676)
!17008 = !DILocalVariable(name: "__i", scope: !17009, file: !2481, line: 187, type: !16687)
!17009 = distinct !DILexicalBlock(scope: !17000, file: !2481, line: 187, column: 2)
!17010 = !DILocalVariable(name: "__key", scope: !17009, file: !2481, line: 187, type: !16687)
!17011 = !DILocation(line: 0, scope: !17000)
!17012 = !DILocation(line: 0, scope: !17009)
!17013 = !DILocation(line: 0, scope: !16709, inlinedAt: !17014)
!17014 = distinct !DILocation(line: 187, column: 2, scope: !17009)
!17015 = !DILocation(line: 55, column: 2, scope: !16718, inlinedAt: !17016)
!17016 = distinct !DILocation(line: 145, column: 10, scope: !16709, inlinedAt: !17014)
!17017 = !DILocation(line: 0, scope: !16718, inlinedAt: !17016)
!17018 = !DILocation(line: 188, column: 11, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !17020, file: !2481, line: 187, column: 24)
!17020 = distinct !DILexicalBlock(scope: !17009, file: !2481, line: 187, column: 2)
!17021 = !DILocation(line: 0, scope: !16777, inlinedAt: !17022)
!17022 = distinct !DILocation(line: 187, column: 2, scope: !17020)
!17023 = !DILocation(line: 0, scope: !16785, inlinedAt: !17024)
!17024 = distinct !DILocation(line: 215, column: 2, scope: !16777, inlinedAt: !17022)
!17025 = !DILocation(line: 95, column: 2, scope: !16785, inlinedAt: !17024)
!17026 = !DILocation(line: 191, column: 2, scope: !17000)
!17027 = distinct !DISubprogram(name: "timeout_rem", scope: !2481, file: !2481, line: 165, type: !17001, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !17028)
!17028 = !{!17029, !17030, !17031}
!17029 = !DILocalVariable(name: "timeout", arg: 1, scope: !17027, file: !2481, line: 165, type: !17003)
!17030 = !DILocalVariable(name: "ticks", scope: !17027, file: !2481, line: 167, type: !1676)
!17031 = !DILocalVariable(name: "t", scope: !17032, file: !2481, line: 173, type: !2454)
!17032 = distinct !DILexicalBlock(scope: !17027, file: !2481, line: 173, column: 2)
!17033 = !DILocation(line: 0, scope: !17027)
!17034 = !DILocation(line: 169, column: 6, scope: !17035)
!17035 = distinct !DILexicalBlock(scope: !17027, file: !2481, line: 169, column: 6)
!17036 = !DILocation(line: 169, column: 6, scope: !17027)
!17037 = !DILocation(line: 173, column: 28, scope: !17032)
!17038 = !DILocation(line: 0, scope: !17032)
!17039 = !DILocation(line: 173, column: 39, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17032, file: !2481, line: 173, column: 2)
!17041 = !DILocation(line: 173, column: 2, scope: !17032)
!17042 = !DILocation(line: 174, column: 15, scope: !17043)
!17043 = distinct !DILexicalBlock(scope: !17040, file: !2481, line: 173, column: 61)
!17044 = !DILocation(line: 174, column: 9, scope: !17043)
!17045 = !DILocation(line: 175, column: 15, scope: !17046)
!17046 = distinct !DILexicalBlock(scope: !17043, file: !2481, line: 175, column: 7)
!17047 = !DILocation(line: 175, column: 7, scope: !17043)
!17048 = !DILocation(line: 173, column: 52, scope: !17040)
!17049 = distinct !{!17049, !17041, !17050}
!17050 = !DILocation(line: 178, column: 2, scope: !17032)
!17051 = !DILocation(line: 180, column: 17, scope: !17027)
!17052 = !DILocation(line: 180, column: 15, scope: !17027)
!17053 = !DILocation(line: 180, column: 2, scope: !17027)
!17054 = !DILocation(line: 181, column: 1, scope: !17027)
!17055 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14101, file: !14101, line: 35, type: !17056, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !17058)
!17056 = !DISubroutineType(types: !17057)
!17057 = !{!157, !17003}
!17058 = !{!17059}
!17059 = !DILocalVariable(name: "to", arg: 1, scope: !17055, file: !14101, line: 35, type: !17003)
!17060 = !DILocation(line: 0, scope: !17055)
!17061 = !DILocation(line: 37, column: 35, scope: !17055)
!17062 = !DILocation(line: 37, column: 10, scope: !17055)
!17063 = !DILocation(line: 37, column: 9, scope: !17055)
!17064 = !DILocation(line: 37, column: 2, scope: !17055)
!17065 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2481, file: !2481, line: 194, type: !17001, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !17066)
!17066 = !{!17067, !17068, !17069, !17071}
!17067 = !DILocalVariable(name: "timeout", arg: 1, scope: !17065, file: !2481, line: 194, type: !17003)
!17068 = !DILocalVariable(name: "ticks", scope: !17065, file: !2481, line: 196, type: !1676)
!17069 = !DILocalVariable(name: "__i", scope: !17070, file: !2481, line: 198, type: !16687)
!17070 = distinct !DILexicalBlock(scope: !17065, file: !2481, line: 198, column: 2)
!17071 = !DILocalVariable(name: "__key", scope: !17070, file: !2481, line: 198, type: !16687)
!17072 = !DILocation(line: 0, scope: !17065)
!17073 = !DILocation(line: 0, scope: !17070)
!17074 = !DILocation(line: 0, scope: !16709, inlinedAt: !17075)
!17075 = distinct !DILocation(line: 198, column: 2, scope: !17070)
!17076 = !DILocation(line: 55, column: 2, scope: !16718, inlinedAt: !17077)
!17077 = distinct !DILocation(line: 145, column: 10, scope: !16709, inlinedAt: !17075)
!17078 = !DILocation(line: 0, scope: !16718, inlinedAt: !17077)
!17079 = !DILocation(line: 199, column: 11, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !17081, file: !2481, line: 198, column: 24)
!17081 = distinct !DILexicalBlock(scope: !17070, file: !2481, line: 198, column: 2)
!17082 = !DILocation(line: 199, column: 23, scope: !17080)
!17083 = !DILocation(line: 0, scope: !16777, inlinedAt: !17084)
!17084 = distinct !DILocation(line: 198, column: 2, scope: !17081)
!17085 = !DILocation(line: 0, scope: !16785, inlinedAt: !17086)
!17086 = distinct !DILocation(line: 215, column: 2, scope: !16777, inlinedAt: !17084)
!17087 = !DILocation(line: 95, column: 2, scope: !16785, inlinedAt: !17086)
!17088 = !DILocation(line: 199, column: 21, scope: !17080)
!17089 = !DILocation(line: 202, column: 2, scope: !17065)
!17090 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2481, file: !2481, line: 205, type: !16793, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !17091)
!17091 = !{!17092, !17093, !17095}
!17092 = !DILocalVariable(name: "ret", scope: !17090, file: !2481, line: 207, type: !332)
!17093 = !DILocalVariable(name: "__i", scope: !17094, file: !2481, line: 209, type: !16687)
!17094 = distinct !DILexicalBlock(scope: !17090, file: !2481, line: 209, column: 2)
!17095 = !DILocalVariable(name: "__key", scope: !17094, file: !2481, line: 209, type: !16687)
!17096 = !DILocation(line: 0, scope: !17090)
!17097 = !DILocation(line: 0, scope: !17094)
!17098 = !DILocation(line: 0, scope: !16709, inlinedAt: !17099)
!17099 = distinct !DILocation(line: 209, column: 2, scope: !17094)
!17100 = !DILocation(line: 55, column: 2, scope: !16718, inlinedAt: !17101)
!17101 = distinct !DILocation(line: 145, column: 10, scope: !16709, inlinedAt: !17099)
!17102 = !DILocation(line: 0, scope: !16718, inlinedAt: !17101)
!17103 = !DILocation(line: 210, column: 9, scope: !17104)
!17104 = distinct !DILexicalBlock(scope: !17105, file: !2481, line: 209, column: 24)
!17105 = distinct !DILexicalBlock(scope: !17094, file: !2481, line: 209, column: 2)
!17106 = !DILocation(line: 0, scope: !16777, inlinedAt: !17107)
!17107 = distinct !DILocation(line: 209, column: 2, scope: !17105)
!17108 = !DILocation(line: 0, scope: !16785, inlinedAt: !17109)
!17109 = distinct !DILocation(line: 215, column: 2, scope: !16777, inlinedAt: !17107)
!17110 = !DILocation(line: 95, column: 2, scope: !16785, inlinedAt: !17109)
!17111 = !DILocation(line: 212, column: 2, scope: !17090)
!17112 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2481, file: !2481, line: 215, type: !11713, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !17113)
!17113 = !{!17114, !17115, !17116, !17118, !17119, !17122, !17123}
!17114 = !DILocalVariable(name: "ticks", arg: 1, scope: !17112, file: !2481, line: 215, type: !332)
!17115 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17112, file: !2481, line: 215, type: !157)
!17116 = !DILocalVariable(name: "__i", scope: !17117, file: !2481, line: 217, type: !16687)
!17117 = distinct !DILexicalBlock(scope: !17112, file: !2481, line: 217, column: 2)
!17118 = !DILocalVariable(name: "__key", scope: !17117, file: !2481, line: 217, type: !16687)
!17119 = !DILocalVariable(name: "next_to", scope: !17120, file: !2481, line: 218, type: !103)
!17120 = distinct !DILexicalBlock(scope: !17121, file: !2481, line: 217, column: 24)
!17121 = distinct !DILexicalBlock(scope: !17117, file: !2481, line: 217, column: 2)
!17122 = !DILocalVariable(name: "sooner", scope: !17120, file: !2481, line: 219, type: !157)
!17123 = !DILocalVariable(name: "imminent", scope: !17120, file: !2481, line: 221, type: !157)
!17124 = !DILocation(line: 0, scope: !17112)
!17125 = !DILocation(line: 0, scope: !17117)
!17126 = !DILocation(line: 0, scope: !16709, inlinedAt: !17127)
!17127 = distinct !DILocation(line: 217, column: 2, scope: !17117)
!17128 = !DILocation(line: 55, column: 2, scope: !16718, inlinedAt: !17129)
!17129 = distinct !DILocation(line: 145, column: 10, scope: !16709, inlinedAt: !17127)
!17130 = !DILocation(line: 0, scope: !16718, inlinedAt: !17129)
!17131 = !DILocation(line: 218, column: 17, scope: !17120)
!17132 = !DILocation(line: 0, scope: !17120)
!17133 = !DILocation(line: 221, column: 27, scope: !17120)
!17134 = !DILocation(line: 233, column: 17, scope: !17135)
!17135 = distinct !DILexicalBlock(scope: !17120, file: !2481, line: 233, column: 7)
!17136 = !DILocation(line: 234, column: 26, scope: !17137)
!17137 = distinct !DILexicalBlock(scope: !17135, file: !2481, line: 233, column: 56)
!17138 = !DILocation(line: 234, column: 4, scope: !17137)
!17139 = !DILocation(line: 235, column: 3, scope: !17137)
!17140 = !DILocation(line: 0, scope: !16777, inlinedAt: !17141)
!17141 = distinct !DILocation(line: 217, column: 2, scope: !17121)
!17142 = !DILocation(line: 0, scope: !16785, inlinedAt: !17143)
!17143 = distinct !DILocation(line: 215, column: 2, scope: !16777, inlinedAt: !17141)
!17144 = !DILocation(line: 95, column: 2, scope: !16785, inlinedAt: !17143)
!17145 = !DILocation(line: 237, column: 1, scope: !17112)
!17146 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2481, file: !2481, line: 239, type: !17147, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !17149)
!17147 = !DISubroutineType(types: !17148)
!17148 = !{null, !332}
!17149 = !{!17150, !17151, !17152, !17154}
!17150 = !DILocalVariable(name: "ticks", arg: 1, scope: !17146, file: !2481, line: 239, type: !332)
!17151 = !DILocalVariable(name: "key", scope: !17146, file: !2481, line: 245, type: !16687)
!17152 = !DILocalVariable(name: "t", scope: !17153, file: !2481, line: 262, type: !2454)
!17153 = distinct !DILexicalBlock(scope: !17146, file: !2481, line: 261, column: 67)
!17154 = !DILocalVariable(name: "dt", scope: !17153, file: !2481, line: 263, type: !103)
!17155 = !DILocation(line: 0, scope: !17146)
!17156 = !DILocation(line: 242, column: 2, scope: !17146)
!17157 = !DILocation(line: 0, scope: !16709, inlinedAt: !17158)
!17158 = distinct !DILocation(line: 245, column: 25, scope: !17146)
!17159 = !DILocation(line: 55, column: 2, scope: !16718, inlinedAt: !17160)
!17160 = distinct !DILocation(line: 145, column: 10, scope: !16709, inlinedAt: !17158)
!17161 = !DILocation(line: 0, scope: !16718, inlinedAt: !17160)
!17162 = !DILocation(line: 261, column: 9, scope: !17146)
!17163 = !DILocation(line: 261, column: 17, scope: !17146)
!17164 = !DILocation(line: 261, column: 25, scope: !17146)
!17165 = !DILocation(line: 261, column: 37, scope: !17146)
!17166 = !DILocation(line: 261, column: 47, scope: !17146)
!17167 = !DILocation(line: 261, column: 44, scope: !17146)
!17168 = !DILocation(line: 261, column: 2, scope: !17146)
!17169 = !DILocation(line: 0, scope: !17153)
!17170 = !DILocation(line: 263, column: 12, scope: !17153)
!17171 = !DILocation(line: 265, column: 16, scope: !17153)
!17172 = !DILocation(line: 265, column: 13, scope: !17153)
!17173 = !DILocation(line: 266, column: 13, scope: !17153)
!17174 = !DILocation(line: 267, column: 3, scope: !17153)
!17175 = !DILocation(line: 0, scope: !16777, inlinedAt: !17176)
!17176 = distinct !DILocation(line: 269, column: 3, scope: !17153)
!17177 = !DILocation(line: 0, scope: !16785, inlinedAt: !17178)
!17178 = distinct !DILocation(line: 215, column: 2, scope: !16777, inlinedAt: !17176)
!17179 = !DILocation(line: 95, column: 2, scope: !16785, inlinedAt: !17178)
!17180 = !DILocation(line: 270, column: 6, scope: !17153)
!17181 = !DILocation(line: 270, column: 3, scope: !17153)
!17182 = !DILocation(line: 0, scope: !16709, inlinedAt: !17183)
!17183 = distinct !DILocation(line: 271, column: 9, scope: !17153)
!17184 = !DILocation(line: 55, column: 2, scope: !16718, inlinedAt: !17185)
!17185 = distinct !DILocation(line: 145, column: 10, scope: !16709, inlinedAt: !17183)
!17186 = !DILocation(line: 0, scope: !16718, inlinedAt: !17185)
!17187 = !DILocation(line: 272, column: 22, scope: !17153)
!17188 = distinct !{!17188, !17168, !17189}
!17189 = !DILocation(line: 273, column: 2, scope: !17146)
!17190 = !DILocation(line: 276, column: 19, scope: !17191)
!17191 = distinct !DILexicalBlock(scope: !17192, file: !2481, line: 275, column: 23)
!17192 = distinct !DILexicalBlock(scope: !17146, file: !2481, line: 275, column: 6)
!17193 = !DILocation(line: 277, column: 2, scope: !17191)
!17194 = !DILocation(line: 279, column: 15, scope: !17146)
!17195 = !DILocation(line: 279, column: 12, scope: !17146)
!17196 = !DILocation(line: 280, column: 21, scope: !17146)
!17197 = !DILocation(line: 282, column: 24, scope: !17146)
!17198 = !DILocation(line: 282, column: 2, scope: !17146)
!17199 = !DILocation(line: 0, scope: !16777, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 284, column: 2, scope: !17146)
!17201 = !DILocation(line: 0, scope: !16785, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 215, column: 2, scope: !16777, inlinedAt: !17200)
!17203 = !DILocation(line: 95, column: 2, scope: !16785, inlinedAt: !17202)
!17204 = !DILocation(line: 285, column: 1, scope: !17146)
!17205 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2481, file: !2481, line: 287, type: !17206, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !17208)
!17206 = !DISubroutineType(types: !17207)
!17207 = !{!420}
!17208 = !{!17209, !17210, !17212}
!17209 = !DILocalVariable(name: "t", scope: !17205, file: !2481, line: 289, type: !1573)
!17210 = !DILocalVariable(name: "__i", scope: !17211, file: !2481, line: 291, type: !16687)
!17211 = distinct !DILexicalBlock(scope: !17205, file: !2481, line: 291, column: 2)
!17212 = !DILocalVariable(name: "__key", scope: !17211, file: !2481, line: 291, type: !16687)
!17213 = !DILocation(line: 0, scope: !17205)
!17214 = !DILocation(line: 0, scope: !17211)
!17215 = !DILocation(line: 0, scope: !16709, inlinedAt: !17216)
!17216 = distinct !DILocation(line: 291, column: 2, scope: !17211)
!17217 = !DILocation(line: 55, column: 2, scope: !16718, inlinedAt: !17218)
!17218 = distinct !DILocation(line: 145, column: 10, scope: !16709, inlinedAt: !17216)
!17219 = !DILocation(line: 0, scope: !16718, inlinedAt: !17218)
!17220 = !DILocation(line: 292, column: 7, scope: !17221)
!17221 = distinct !DILexicalBlock(scope: !17222, file: !2481, line: 291, column: 24)
!17222 = distinct !DILexicalBlock(scope: !17211, file: !2481, line: 291, column: 2)
!17223 = !DILocation(line: 292, column: 19, scope: !17221)
!17224 = !DILocation(line: 0, scope: !16777, inlinedAt: !17225)
!17225 = distinct !DILocation(line: 291, column: 2, scope: !17222)
!17226 = !DILocation(line: 0, scope: !16785, inlinedAt: !17227)
!17227 = distinct !DILocation(line: 215, column: 2, scope: !16777, inlinedAt: !17225)
!17228 = !DILocation(line: 95, column: 2, scope: !16785, inlinedAt: !17227)
!17229 = !DILocation(line: 292, column: 17, scope: !17221)
!17230 = !DILocation(line: 294, column: 2, scope: !17205)
!17231 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2481, file: !2481, line: 297, type: !6871, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !461)
!17232 = !DILocation(line: 300, column: 19, scope: !17231)
!17233 = !DILocation(line: 300, column: 9, scope: !17231)
!17234 = !DILocation(line: 300, column: 2, scope: !17231)
!17235 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2481, file: !2481, line: 306, type: !17206, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !461)
!17236 = !DILocation(line: 308, column: 9, scope: !17235)
!17237 = !DILocation(line: 308, column: 2, scope: !17235)
!17238 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2481, file: !2481, line: 319, type: !6881, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !17239)
!17239 = !{!17240, !17241, !17242, !17243}
!17240 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17238, file: !2481, line: 319, type: !121)
!17241 = !DILocalVariable(name: "start_cycles", scope: !17238, file: !2481, line: 328, type: !121)
!17242 = !DILocalVariable(name: "cycles_to_wait", scope: !17238, file: !2481, line: 331, type: !121)
!17243 = !DILocalVariable(name: "current_cycles", scope: !17244, file: !2481, line: 338, type: !121)
!17244 = distinct !DILexicalBlock(scope: !17245, file: !2481, line: 337, column: 11)
!17245 = distinct !DILexicalBlock(scope: !17246, file: !2481, line: 337, column: 2)
!17246 = distinct !DILexicalBlock(scope: !17238, file: !2481, line: 337, column: 2)
!17247 = !DILocation(line: 0, scope: !17238)
!17248 = !DILocation(line: 322, column: 19, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17238, file: !2481, line: 322, column: 6)
!17250 = !DILocation(line: 322, column: 6, scope: !17238)
!17251 = !DILocation(line: 328, column: 26, scope: !17238)
!17252 = !DILocation(line: 333, column: 43, scope: !17238)
!17253 = !DILocation(line: 337, column: 2, scope: !17238)
!17254 = !DILocation(line: 338, column: 29, scope: !17244)
!17255 = !DILocation(line: 0, scope: !17244)
!17256 = !DILocation(line: 341, column: 23, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17244, file: !2481, line: 341, column: 7)
!17258 = !DILocation(line: 341, column: 39, scope: !17257)
!17259 = !DILocation(line: 349, column: 1, scope: !17238)
!17260 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !300, file: !300, line: 1675, type: !6871, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !461)
!17261 = !DILocation(line: 1677, column: 9, scope: !17260)
!17262 = !DILocation(line: 1677, column: 2, scope: !17260)
!17263 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17264, file: !17264, line: 24, type: !6871, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !461)
!17264 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17265 = !DILocation(line: 26, column: 9, scope: !17263)
!17266 = !DILocation(line: 26, column: 2, scope: !17263)
!17267 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2481, file: !2481, line: 364, type: !17268, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2451, retainedNodes: !17270)
!17268 = !DISubroutineType(types: !17269)
!17269 = !{!1573, !16677}
!17270 = !{!17271, !17272}
!17271 = !DILocalVariable(name: "timeout", arg: 1, scope: !17267, file: !2481, line: 364, type: !16677)
!17272 = !DILocalVariable(name: "dt", scope: !17267, file: !2481, line: 366, type: !1676)
!17273 = !DILocation(line: 0, scope: !17267)
!17274 = !DILocation(line: 368, column: 6, scope: !17267)
!17275 = !DILocation(line: 371, column: 10, scope: !17276)
!17276 = distinct !DILexicalBlock(scope: !17277, file: !2481, line: 370, column: 47)
!17277 = distinct !DILexicalBlock(scope: !17278, file: !2481, line: 370, column: 13)
!17278 = distinct !DILexicalBlock(scope: !17267, file: !2481, line: 368, column: 6)
!17279 = !DILocation(line: 371, column: 3, scope: !17276)
!17280 = !DILocation(line: 376, column: 58, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17282, file: !2481, line: 376, column: 7)
!17282 = distinct !DILexicalBlock(scope: !17277, file: !2481, line: 372, column: 9)
!17283 = !DILocation(line: 376, column: 7, scope: !17282)
!17284 = !DILocation(line: 376, column: 43, scope: !17281)
!17285 = !DILocation(line: 377, column: 4, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17281, file: !2481, line: 376, column: 64)
!17287 = !DILocation(line: 379, column: 10, scope: !17282)
!17288 = !DILocation(line: 379, column: 33, scope: !17282)
!17289 = !DILocation(line: 379, column: 31, scope: !17282)
!17290 = !DILocation(line: 379, column: 3, scope: !17282)
!17291 = !DILocation(line: 0, scope: !17278)
!17292 = !DILocation(line: 381, column: 1, scope: !17267)
!17293 = distinct !DISubprogram(name: "boot_banner", scope: !17294, file: !17294, line: 26, type: !3220, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !461)
!17294 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17295 = !DILocation(line: 34, column: 2, scope: !17293)
!17296 = !DILocation(line: 36, column: 1, scope: !17293)
!17297 = distinct !DISubprogram(name: "statics_init", scope: !2509, file: !2509, line: 21, type: !2515, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !17298)
!17298 = !{!17299, !17300}
!17299 = !DILocalVariable(name: "unused", arg: 1, scope: !17297, file: !2509, line: 21, type: !2517)
!17300 = !DILocalVariable(name: "h", scope: !17301, file: !2509, line: 24, type: !17302)
!17301 = distinct !DILexicalBlock(scope: !17297, file: !2509, line: 24, column: 2)
!17302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17303, size: 32)
!17303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !300, line: 5073, size: 160, elements: !17304)
!17304 = !{!17305, !17311, !17317}
!17305 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17303, file: !300, line: 5074, baseType: !17306, size: 96)
!17306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !450, line: 56, size: 96, elements: !17307)
!17307 = !{!17308, !17309, !17310}
!17308 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17306, file: !450, line: 57, baseType: !453, size: 32)
!17309 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17306, file: !450, line: 58, baseType: !102, size: 32, offset: 32)
!17310 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17306, file: !450, line: 59, baseType: !344, size: 32, offset: 64)
!17311 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17303, file: !300, line: 5075, baseType: !17312, size: 64, offset: 96)
!17312 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !304, line: 233, baseType: !17313)
!17313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !304, line: 231, size: 64, elements: !17314)
!17314 = !{!17315}
!17315 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17313, file: !304, line: 232, baseType: !17316, size: 64)
!17316 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !309, line: 48, baseType: !2495)
!17317 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17303, file: !300, line: 5076, baseType: !17318, offset: 160)
!17318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !460, line: 43, elements: !461)
!17319 = !DILocation(line: 0, scope: !17297)
!17320 = !DILocation(line: 0, scope: !17301)
!17321 = !DILocation(line: 24, column: 2, scope: !17301)
!17322 = !DILocation(line: 52, column: 2, scope: !17297)
!17323 = !DILocation(line: 49, column: 27, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17325, file: !2509, line: 48, column: 3)
!17325 = distinct !DILexicalBlock(scope: !17326, file: !2509, line: 24, column: 36)
!17326 = distinct !DILexicalBlock(scope: !17301, file: !2509, line: 24, column: 2)
!17327 = !DILocation(line: 49, column: 45, scope: !17324)
!17328 = !DILocation(line: 49, column: 4, scope: !17324)
!17329 = !DILocation(line: 24, column: 2, scope: !17326)
!17330 = !DILocation(line: 24, column: 2, scope: !17331)
!17331 = distinct !DILexicalBlock(scope: !17326, file: !2509, line: 24, column: 2)
!17332 = distinct !{!17332, !17321, !17333}
!17333 = !DILocation(line: 51, column: 2, scope: !17301)
!17334 = distinct !DISubprogram(name: "k_heap_init", scope: !2509, file: !2509, line: 13, type: !17335, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !17337)
!17335 = !DISubroutineType(types: !17336)
!17336 = !{null, !17302, !102, !344}
!17337 = !{!17338, !17339, !17340}
!17338 = !DILocalVariable(name: "h", arg: 1, scope: !17334, file: !2509, line: 13, type: !17302)
!17339 = !DILocalVariable(name: "mem", arg: 2, scope: !17334, file: !2509, line: 13, type: !102)
!17340 = !DILocalVariable(name: "bytes", arg: 3, scope: !17334, file: !2509, line: 13, type: !344)
!17341 = !DILocation(line: 0, scope: !17334)
!17342 = !DILocation(line: 15, column: 19, scope: !17334)
!17343 = !DILocation(line: 15, column: 2, scope: !17334)
!17344 = !DILocation(line: 16, column: 20, scope: !17334)
!17345 = !DILocation(line: 16, column: 2, scope: !17334)
!17346 = !DILocation(line: 19, column: 1, scope: !17334)
!17347 = distinct !DISubprogram(name: "z_waitq_init", scope: !14033, file: !14033, line: 47, type: !17348, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !17351)
!17348 = !DISubroutineType(types: !17349)
!17349 = !{null, !17350}
!17350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17312, size: 32)
!17351 = !{!17352}
!17352 = !DILocalVariable(name: "w", arg: 1, scope: !17347, file: !14033, line: 47, type: !17350)
!17353 = !DILocation(line: 0, scope: !17347)
!17354 = !DILocation(line: 49, column: 21, scope: !17347)
!17355 = !DILocation(line: 49, column: 2, scope: !17347)
!17356 = !DILocation(line: 50, column: 1, scope: !17347)
!17357 = distinct !DISubprogram(name: "sys_dlist_init", scope: !309, file: !309, line: 197, type: !17358, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !17361)
!17358 = !DISubroutineType(types: !17359)
!17359 = !{null, !17360}
!17360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17316, size: 32)
!17361 = !{!17362}
!17362 = !DILocalVariable(name: "list", arg: 1, scope: !17357, file: !309, line: 197, type: !17360)
!17363 = !DILocation(line: 0, scope: !17357)
!17364 = !DILocation(line: 199, column: 8, scope: !17357)
!17365 = !DILocation(line: 199, column: 13, scope: !17357)
!17366 = !DILocation(line: 200, column: 8, scope: !17357)
!17367 = !DILocation(line: 200, column: 13, scope: !17357)
!17368 = !DILocation(line: 201, column: 1, scope: !17357)
!17369 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2509, file: !2509, line: 64, type: !17370, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !17376)
!17370 = !DISubroutineType(types: !17371)
!17371 = !{!102, !17302, !344, !344, !17372}
!17372 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1677, line: 67, baseType: !17373)
!17373 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1677, line: 65, size: 64, elements: !17374)
!17374 = !{!17375}
!17375 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17373, file: !1677, line: 66, baseType: !1676, size: 64)
!17376 = !{!17377, !17378, !17379, !17380, !17381, !17382, !17383, !17384, !17389}
!17377 = !DILocalVariable(name: "h", arg: 1, scope: !17369, file: !2509, line: 64, type: !17302)
!17378 = !DILocalVariable(name: "align", arg: 2, scope: !17369, file: !2509, line: 64, type: !344)
!17379 = !DILocalVariable(name: "bytes", arg: 3, scope: !17369, file: !2509, line: 64, type: !344)
!17380 = !DILocalVariable(name: "timeout", arg: 4, scope: !17369, file: !2509, line: 65, type: !17372)
!17381 = !DILocalVariable(name: "now", scope: !17369, file: !2509, line: 67, type: !420)
!17382 = !DILocalVariable(name: "end", scope: !17369, file: !2509, line: 67, type: !420)
!17383 = !DILocalVariable(name: "ret", scope: !17369, file: !2509, line: 68, type: !102)
!17384 = !DILocalVariable(name: "key", scope: !17369, file: !2509, line: 72, type: !17385)
!17385 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !460, line: 106, baseType: !17386)
!17386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !460, line: 32, size: 32, elements: !17387)
!17387 = !{!17388}
!17388 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17386, file: !460, line: 33, baseType: !103, size: 32)
!17389 = !DILocalVariable(name: "blocked_alloc", scope: !17369, file: !2509, line: 78, type: !157)
!17390 = !DILocation(line: 0, scope: !17369)
!17391 = !DILocation(line: 67, column: 21, scope: !17369)
!17392 = !DILocation(line: 70, column: 8, scope: !17369)
!17393 = !DILocation(line: 72, column: 41, scope: !17369)
!17394 = !DILocalVariable(name: "l", arg: 1, scope: !17395, file: !460, line: 136, type: !17398)
!17395 = distinct !DISubprogram(name: "k_spin_lock", scope: !460, file: !460, line: 136, type: !17396, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !17399)
!17396 = !DISubroutineType(types: !17397)
!17397 = !{!17385, !17398}
!17398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17318, size: 32)
!17399 = !{!17394, !17400}
!17400 = !DILocalVariable(name: "k", scope: !17395, file: !460, line: 139, type: !17385)
!17401 = !DILocation(line: 0, scope: !17395, inlinedAt: !17402)
!17402 = distinct !DILocation(line: 72, column: 25, scope: !17369)
!17403 = !DILocation(line: 55, column: 2, scope: !17404, inlinedAt: !17408)
!17404 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5770, file: !5770, line: 42, type: !5771, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !17405)
!17405 = !{!17406, !17407}
!17406 = !DILocalVariable(name: "key", scope: !17404, file: !5770, line: 44, type: !32)
!17407 = !DILocalVariable(name: "tmp", scope: !17404, file: !5770, line: 53, type: !32)
!17408 = distinct !DILocation(line: 145, column: 10, scope: !17395, inlinedAt: !17402)
!17409 = !{i64 1948839}
!17410 = !DILocation(line: 0, scope: !17404, inlinedAt: !17408)
!17411 = !DILocation(line: 81, column: 9, scope: !17412)
!17412 = distinct !DILexicalBlock(scope: !17369, file: !2509, line: 80, column: 22)
!17413 = !DILocation(line: 83, column: 9, scope: !17412)
!17414 = !DILocation(line: 85, column: 12, scope: !17415)
!17415 = distinct !DILexicalBlock(scope: !17412, file: !2509, line: 84, column: 7)
!17416 = !DILocation(line: 85, column: 21, scope: !17415)
!17417 = !DILocation(line: 85, column: 30, scope: !17415)
!17418 = !DILocation(line: 85, column: 37, scope: !17415)
!17419 = !DILocation(line: 84, column: 7, scope: !17412)
!17420 = !DILocation(line: 99, column: 10, scope: !17412)
!17421 = !DILocation(line: 0, scope: !17395, inlinedAt: !17422)
!17422 = distinct !DILocation(line: 101, column: 9, scope: !17412)
!17423 = !DILocation(line: 55, column: 2, scope: !17404, inlinedAt: !17424)
!17424 = distinct !DILocation(line: 145, column: 10, scope: !17395, inlinedAt: !17422)
!17425 = !DILocation(line: 0, scope: !17404, inlinedAt: !17424)
!17426 = distinct !{!17426, !17427, !17428}
!17427 = !DILocation(line: 80, column: 2, scope: !17369)
!17428 = !DILocation(line: 102, column: 2, scope: !17369)
!17429 = !DILocalVariable(name: "key", arg: 2, scope: !17430, file: !460, line: 190, type: !17385)
!17430 = distinct !DISubprogram(name: "k_spin_unlock", scope: !460, file: !460, line: 189, type: !17431, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !17433)
!17431 = !DISubroutineType(types: !17432)
!17432 = !{null, !17398, !17385}
!17433 = !{!17434, !17429}
!17434 = !DILocalVariable(name: "l", arg: 1, scope: !17430, file: !460, line: 189, type: !17398)
!17435 = !DILocation(line: 0, scope: !17430, inlinedAt: !17436)
!17436 = distinct !DILocation(line: 106, column: 2, scope: !17369)
!17437 = !DILocalVariable(name: "key", arg: 1, scope: !17438, file: !5770, line: 84, type: !32)
!17438 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5770, file: !5770, line: 84, type: !5781, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !17439)
!17439 = !{!17437}
!17440 = !DILocation(line: 0, scope: !17438, inlinedAt: !17441)
!17441 = distinct !DILocation(line: 215, column: 2, scope: !17430, inlinedAt: !17436)
!17442 = !DILocation(line: 95, column: 2, scope: !17438, inlinedAt: !17441)
!17443 = !{i64 1949656}
!17444 = !DILocation(line: 107, column: 2, scope: !17369)
!17445 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2509, file: !2509, line: 110, type: !17446, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !17448)
!17446 = !DISubroutineType(types: !17447)
!17447 = !{!102, !17302, !344, !17372}
!17448 = !{!17449, !17450, !17451, !17452}
!17449 = !DILocalVariable(name: "h", arg: 1, scope: !17445, file: !2509, line: 110, type: !17302)
!17450 = !DILocalVariable(name: "bytes", arg: 2, scope: !17445, file: !2509, line: 110, type: !344)
!17451 = !DILocalVariable(name: "timeout", arg: 3, scope: !17445, file: !2509, line: 110, type: !17372)
!17452 = !DILocalVariable(name: "ret", scope: !17445, file: !2509, line: 114, type: !102)
!17453 = !DILocation(line: 0, scope: !17445)
!17454 = !DILocation(line: 114, column: 14, scope: !17445)
!17455 = !DILocation(line: 118, column: 2, scope: !17445)
!17456 = distinct !DISubprogram(name: "k_heap_free", scope: !2509, file: !2509, line: 121, type: !17457, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !17459)
!17457 = !DISubroutineType(types: !17458)
!17458 = !{null, !17302, !102}
!17459 = !{!17460, !17461, !17462}
!17460 = !DILocalVariable(name: "h", arg: 1, scope: !17456, file: !2509, line: 121, type: !17302)
!17461 = !DILocalVariable(name: "mem", arg: 2, scope: !17456, file: !2509, line: 121, type: !102)
!17462 = !DILocalVariable(name: "key", scope: !17456, file: !2509, line: 123, type: !17385)
!17463 = !DILocation(line: 0, scope: !17456)
!17464 = !DILocation(line: 0, scope: !17395, inlinedAt: !17465)
!17465 = distinct !DILocation(line: 123, column: 25, scope: !17456)
!17466 = !DILocation(line: 55, column: 2, scope: !17404, inlinedAt: !17467)
!17467 = distinct !DILocation(line: 145, column: 10, scope: !17395, inlinedAt: !17465)
!17468 = !DILocation(line: 0, scope: !17404, inlinedAt: !17467)
!17469 = !DILocation(line: 125, column: 20, scope: !17456)
!17470 = !DILocation(line: 125, column: 2, scope: !17456)
!17471 = !DILocation(line: 128, column: 60, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17456, file: !2509, line: 128, column: 6)
!17473 = !DILocation(line: 128, column: 43, scope: !17472)
!17474 = !DILocation(line: 128, column: 68, scope: !17472)
!17475 = !DILocation(line: 128, column: 6, scope: !17456)
!17476 = !DILocation(line: 123, column: 41, scope: !17456)
!17477 = !DILocation(line: 129, column: 3, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17472, file: !2509, line: 128, column: 74)
!17479 = !DILocation(line: 130, column: 2, scope: !17478)
!17480 = !DILocation(line: 0, scope: !17430, inlinedAt: !17481)
!17481 = distinct !DILocation(line: 131, column: 3, scope: !17482)
!17482 = distinct !DILexicalBlock(scope: !17472, file: !2509, line: 130, column: 9)
!17483 = !DILocation(line: 0, scope: !17438, inlinedAt: !17484)
!17484 = distinct !DILocation(line: 215, column: 2, scope: !17430, inlinedAt: !17481)
!17485 = !DILocation(line: 95, column: 2, scope: !17438, inlinedAt: !17484)
!17486 = !DILocation(line: 133, column: 1, scope: !17456)
