; ModuleID = 'build/96b_neonkey/subsys/console/echo/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.tty_serial = type { %struct.device*, %struct.k_sem, i8*, i32, i16, i16, i32, %struct.k_sem, i8*, i32, i16, i16, i32 }
%struct.k_sem = type { %union.anon, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.k_spinlock = type {}
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232640 to i8*), void (i8*)* inttoptr (i32 134230227 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232640 to i8*), void (i8*)* inttoptr (i32 134230207 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232640 to i8*), void (i8*)* inttoptr (i32 134230197 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232640 to i8*), void (i8*)* inttoptr (i32 134230297 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232640 to i8*), void (i8*)* inttoptr (i32 134230287 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232640 to i8*), void (i8*)* inttoptr (i32 134230277 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232640 to i8*), void (i8*)* inttoptr (i32 134230267 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232640 to i8*), void (i8*)* inttoptr (i32 134230257 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232640 to i8*), void (i8*)* inttoptr (i32 134230247 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232856 to i8*), void (i8*)* inttoptr (i32 134231575 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232640 to i8*), void (i8*)* inttoptr (i32 134230237 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232640 to i8*), void (i8*)* inttoptr (i32 134230217 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [62 x i8] c"You should see another line with instructions below. If not,\0A\00", align 1
@.str.1 = private unnamed_addr constant [65 x i8] c"the (interrupt-driven) console device doesn't work as expected:\0A\00", align 1
@prompt = internal constant [50 x i8] c"Start typing characters to see them echoed back\0D\0A\00", align 1, !dbg !25
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !111
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [39 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !120
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !175
@console_serial = internal global %struct.tty_serial zeroinitializer, align 4, !dbg !204
@console_txbuf = internal global [512 x i8] zeroinitializer, align 1, !dbg !301
@console_rxbuf = internal global [64 x i8] zeroinitializer, align 1, !dbg !295
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !351
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !359
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !500
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !536
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.37, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !546
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !551
@.str.36 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.37 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !571
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !743
@.str.38 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !705
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !688
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !661
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !677
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !707
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !720
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !722
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !724
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !726
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !728
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !730
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !732
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !734
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !736
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !738
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !748
@.str.40 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !775
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !872
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !861
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@debug_hook_in = internal unnamed_addr global i32 (i8)* null, align 4, !dbg !913
@debug_hook_out = internal unnamed_addr global i32 (i8)* @debug_hook_out_nop, align 4, !dbg !1064
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1014
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1056
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1058
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1007
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1074
@esc_state = internal global i32 0, align 4, !dbg !1099
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1107
@end = internal unnamed_addr global i8 0, align 1, !dbg !1109
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1103
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1105
@.str.63 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.62 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !768
@.str.67 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1115
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1391
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1361
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1347
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1292
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !766
@.str.1.68 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1393
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1365
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1363
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1309
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !764
@.str.2.69 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1406
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1369
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1367
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1315
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !762
@.str.3.70 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1408
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1373
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1371
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1321
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !760
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1410
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1377
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1375
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1327
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !758
@.str.5.71 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1412
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1381
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1379
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1333
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !756
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1414
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1385
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1383
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1339
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !754
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1416
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1389
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1387
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1345
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !770
@.str.77 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1418
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1654
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1604
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1656
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1595
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1597
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1606
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1614
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1637
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1640
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1643
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !845
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1682
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1791
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1793
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1789
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1760
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1795
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1290
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.68, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1307
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.69, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1313
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.70, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1319
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1325
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.71, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1331
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1337
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1343
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1885
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1927
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1930
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1936
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1942
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2151
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2160
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2167
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2172
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.126 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.131, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.132, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.133, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.135, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.129, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.136, i32 0, i32 0)], align 4, !dbg !2200
@.str.130 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.131 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.132 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.133 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.134 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.135 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.129 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.136 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2312
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2325
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2348
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2456
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2459
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2461
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2165
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2162
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2463
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2499
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2029
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2497
@.str.206 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2502
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3230 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !3234, !srcloc !3235
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !3236, !srcloc !3237
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !3238, !srcloc !3239
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !3240, !srcloc !3241
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3242, !srcloc !3243
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !3244, !srcloc !3245
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !3246, !srcloc !3247
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !3248, !srcloc !3249
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !3250, !srcloc !3251
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !3252, !srcloc !3253
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !3254, !srcloc !3255
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !3256, !srcloc !3257
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !3258, !srcloc !3259
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !3260, !srcloc !3261
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !3262, !srcloc !3263
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !3264, !srcloc !3265
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !3266, !srcloc !3267
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !3268, !srcloc !3269
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3270, !srcloc !3271
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !3272, !srcloc !3273
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !3274, !srcloc !3275
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3276, !srcloc !3277
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !3278, !srcloc !3279
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3280, !srcloc !3281
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3282, !srcloc !3283
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3284, !srcloc !3285
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3286, !srcloc !3287
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3288, !srcloc !3291
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3292, !srcloc !3293
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3294, !srcloc !3295
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3296, !srcloc !3297
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3298, !srcloc !3299
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3300, !srcloc !3301
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3302, !srcloc !3303
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3304, !srcloc !3305
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3306, !srcloc !3307
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3308, !srcloc !3309
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3310, !srcloc !3311
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3312, !srcloc !3313
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3314, !srcloc !3315
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3316, !srcloc !3317
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3338, !srcloc !3339
  ret void, !dbg !3340
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3343 {
  %1 = tail call i32 @console_init() #25, !dbg !3347
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i32 0, i32 0)) #25, !dbg !3348
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3349
  %2 = tail call i32 @console_write(i8* noundef null, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @prompt, i32 0, i32 0), i32 noundef 49) #25, !dbg !3350
  br label %3, !dbg !3351

3:                                                ; preds = %11, %0
  %4 = tail call i32 @console_getchar() #25, !dbg !3352
  %5 = trunc i32 %4 to i8, !dbg !3352
  call void @llvm.dbg.value(metadata i8 %5, metadata !3345, metadata !DIExpression()), !dbg !3353
  %6 = tail call i32 @console_putchar(i8 noundef zeroext %5) #25, !dbg !3354
  %7 = and i32 %4, 255, !dbg !3355
  %8 = icmp eq i32 %7, 13, !dbg !3357
  br i1 %8, label %9, label %11, !dbg !3358

9:                                                ; preds = %3
  %10 = tail call i32 @console_putchar(i8 noundef zeroext 10) #25, !dbg !3359
  br label %11, !dbg !3361

11:                                               ; preds = %9, %3
  br label %3, !dbg !3352, !llvm.loop !3362
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3366, metadata !DIExpression()), !dbg !3367
  ret i32 0, !dbg !3368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3369 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3373, metadata !DIExpression()), !dbg !3374
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3375
  ret void, !dbg !3376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3377 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3380
  ret i8* %1, !dbg !3381
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3382 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3394, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i8* %0, metadata !3393, metadata !DIExpression()), !dbg !3403
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3404
  ret void, !dbg !3406
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3411, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i8* %1, metadata !3412, metadata !DIExpression()), !dbg !3413
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3414
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3414
  ret i32 %4, !dbg !3415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3416 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3428, metadata !DIExpression()), !dbg !3429
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3425, metadata !DIExpression()), !dbg !3429
  call void @llvm.dbg.value(metadata i8* %1, metadata !3426, metadata !DIExpression()), !dbg !3429
  call void @llvm.dbg.value(metadata i8* %2, metadata !3427, metadata !DIExpression()), !dbg !3429
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3430
  ret void, !dbg !3431
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3432 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3436, metadata !DIExpression()), !dbg !3439
  call void @llvm.dbg.value(metadata i32 %1, metadata !3437, metadata !DIExpression()), !dbg !3439
  call void @llvm.dbg.value(metadata i32 0, metadata !3438, metadata !DIExpression()), !dbg !3439
  %3 = icmp eq i32 %1, 0, !dbg !3440
  br i1 %3, label %13, label %4, !dbg !3443

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3438, metadata !DIExpression()), !dbg !3439
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3444
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3446
  %8 = load i8, i8* %7, align 1, !dbg !3446
  %9 = zext i8 %8 to i32, !dbg !3446
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3444
  %11 = add nuw i32 %5, 1, !dbg !3447
  call void @llvm.dbg.value(metadata i32 %11, metadata !3438, metadata !DIExpression()), !dbg !3439
  %12 = icmp eq i32 %11, %1, !dbg !3440
  br i1 %12, label %13, label %4, !dbg !3443, !llvm.loop !3448

13:                                               ; preds = %4, %2
  ret void, !dbg !3450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3451 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3455, metadata !DIExpression()), !dbg !3457
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3458
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3458
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3456, metadata !DIExpression()), !dbg !3459
  call void @llvm.va_start(i8* nonnull %3), !dbg !3460
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3461
  %5 = load i32, i32* %4, align 4, !dbg !3461
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3461
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3461
  call void @llvm.va_end(i8* nonnull %3), !dbg !3462
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3463
  ret void, !dbg !3463
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3464 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3468, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata i32 %1, metadata !3469, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata i8* %2, metadata !3470, metadata !DIExpression()), !dbg !3473
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3474
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3474
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3471, metadata !DIExpression()), !dbg !3475
  call void @llvm.va_start(i8* nonnull %5), !dbg !3476
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3477
  %7 = load i32, i32* %6, align 4, !dbg !3477
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3477
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3477
  call void @llvm.dbg.value(metadata i32 %9, metadata !3472, metadata !DIExpression()), !dbg !3473
  call void @llvm.va_end(i8* nonnull %5), !dbg !3478
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3479
  ret i32 %9, !dbg !3480
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3481 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3488, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i8* %0, metadata !3485, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i32 %1, metadata !3486, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i8* %2, metadata !3487, metadata !DIExpression()), !dbg !3495
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3496
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3496
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3489, metadata !DIExpression()), !dbg !3497
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3498
  store i8* %0, i8** %7, align 4, !dbg !3498
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3498
  store i32 %1, i32* %8, align 4, !dbg !3498
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3498
  store i32 0, i32* %9, align 4, !dbg !3498
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3499
  %10 = load i32, i32* %9, align 4, !dbg !3500
  %11 = load i32, i32* %8, align 4, !dbg !3502
  %12 = icmp slt i32 %10, %11, !dbg !3503
  br i1 %12, label %13, label %15, !dbg !3504

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3505
  store i8 0, i8* %14, align 1, !dbg !3507
  br label %15, !dbg !3508

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3509
  ret i32 %10, !dbg !3510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3516, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3517, metadata !DIExpression()), !dbg !3518
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3519
  %4 = load i8*, i8** %3, align 4, !dbg !3519
  %5 = icmp eq i8* %4, null, !dbg !3521
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3522
  br i1 %5, label %12, label %8, !dbg !3523

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3524
  %10 = load i32, i32* %9, align 4, !dbg !3524
  %11 = icmp slt i32 %7, %10, !dbg !3525
  br i1 %11, label %15, label %12, !dbg !3526

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3527
  %14 = add nsw i32 %7, 1, !dbg !3529
  store i32 %14, i32* %13, align 4, !dbg !3529
  br label %25, !dbg !3530

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3531
  %17 = icmp eq i32 %7, %16, !dbg !3533
  br i1 %17, label %18, label %21, !dbg !3534

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3535
  store i32 %19, i32* %6, align 4, !dbg !3535
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3537
  store i8 0, i8* %20, align 1, !dbg !3538
  br label %25, !dbg !3539

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3540
  %23 = add nsw i32 %7, 1, !dbg !3542
  store i32 %23, i32* %6, align 4, !dbg !3542
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3543
  store i8 %22, i8* %24, align 1, !dbg !3544
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3545
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3546 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3556, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.value(metadata i8* %1, metadata !3557, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.value(metadata i8* %2, metadata !3558, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.value(metadata i8* %3, metadata !3559, metadata !DIExpression()), !dbg !3560
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3561
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3562
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3563
  unreachable, !dbg !3564
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3565 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3669
  ret %struct.k_thread* %1, !dbg !3670
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3671 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3676, metadata !DIExpression()), !dbg !3677
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3678, !srcloc !3680
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3681
  ret void, !dbg !3682
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3683 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3684, !srcloc !3686
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3687
  ret %struct.k_thread* %1, !dbg !3688
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3689 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3700, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata i8* %1, metadata !3701, metadata !DIExpression()), !dbg !3704
  %3 = icmp eq i8* %1, null, !dbg !3705
  br i1 %3, label %8, label %4, !dbg !3707

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3708
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3708
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3702, metadata !DIExpression()), !dbg !3704
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3709, !range !3710
  call void @llvm.dbg.value(metadata i32 %7, metadata !3703, metadata !DIExpression()), !dbg !3704
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3711
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3712
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3714 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3718, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i8* %1, metadata !3719, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i8* %1, metadata !3720, metadata !DIExpression()), !dbg !3722
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3723
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3721, metadata !DIExpression()), !dbg !3722
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3724
  %5 = ptrtoint i8* %4 to i32, !dbg !3725
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3725
  %7 = sub i32 %5, %6, !dbg !3725
  %8 = lshr i32 %7, 3, !dbg !3726
  ret i32 %8, !dbg !3727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3728 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3732, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i32 %1, metadata !3733, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i1 %2, metadata !3734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3737
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3738
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3735, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3736, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3737
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3739
  %6 = bitcast i8* %5 to i16*, !dbg !3739
  %7 = load i16, i16* %6, align 2, !dbg !3739
  %8 = and i16 %7, -2, !dbg !3743
  %9 = zext i1 %2 to i16, !dbg !3743
  %10 = or i16 %8, %9, !dbg !3743
  store i16 %10, i16* %6, align 2, !dbg !3739
  ret void, !dbg !3744
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3745 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3749, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.value(metadata i32 %1, metadata !3750, metadata !DIExpression()), !dbg !3751
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3752
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3754
  br i1 %4, label %7, label %5, !dbg !3755

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3756
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3758
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3759
  br label %7, !dbg !3760

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3761, !range !3763
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3764
  br i1 %9, label %13, label %10, !dbg !3765

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3766
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3768, !range !3763
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3769
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3770
  call void @llvm.dbg.value(metadata i32 %12, metadata !3750, metadata !DIExpression()), !dbg !3751
  br label %13, !dbg !3771

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3750, metadata !DIExpression()), !dbg !3751
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3772
  ret void, !dbg !3773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3774 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3778, metadata !DIExpression()), !dbg !3780
  call void @llvm.dbg.value(metadata i32 %1, metadata !3779, metadata !DIExpression()), !dbg !3780
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3781
  %4 = add i32 %3, %1, !dbg !3782
  ret i32 %4, !dbg !3783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3784 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3788, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i32 %1, metadata !3789, metadata !DIExpression()), !dbg !3790
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3791
  %4 = and i32 %3, 1, !dbg !3792
  %5 = icmp ne i32 %4, 0, !dbg !3791
  ret i1 %5, !dbg !3793
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3794 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3796, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.value(metadata i32 %1, metadata !3797, metadata !DIExpression()), !dbg !3801
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3802, !range !3803
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %4, metadata !3798, metadata !DIExpression()), !dbg !3805
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3806
  ret void, !dbg !3807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3808 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3812, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %1, metadata !3813, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 %2, metadata !3814, metadata !DIExpression()), !dbg !3817
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3818
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3819
  %6 = add i32 %5, %4, !dbg !3820
  call void @llvm.dbg.value(metadata i32 %6, metadata !3815, metadata !DIExpression()), !dbg !3817
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3821
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3822
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3823
  ret void, !dbg !3824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3825 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3827, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 %1, metadata !3828, metadata !DIExpression()), !dbg !3829
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3830
  %4 = sub i32 %1, %3, !dbg !3831
  ret i32 %4, !dbg !3832
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3833 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3835, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i32 %1, metadata !3836, metadata !DIExpression()), !dbg !3840
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3841, !range !3803
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3842
  call void @llvm.dbg.value(metadata i32 %4, metadata !3837, metadata !DIExpression()), !dbg !3843
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3844
  ret void, !dbg !3845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3846 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3850, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata i32 %1, metadata !3851, metadata !DIExpression()), !dbg !3852
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3853
  %4 = lshr i32 %3, 1, !dbg !3854
  ret i32 %4, !dbg !3855
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3856 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3860, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i32 %1, metadata !3861, metadata !DIExpression()), !dbg !3863
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3864
  %4 = add i32 %1, 1, !dbg !3865
  %5 = sub i32 %4, %3, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %5, metadata !3862, metadata !DIExpression()), !dbg !3863
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3867, !range !3868
  %7 = sub nsw i32 31, %6, !dbg !3869
  ret i32 %7, !dbg !3870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3871 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3875, metadata !DIExpression()), !dbg !3884
  call void @llvm.dbg.value(metadata i32 %1, metadata !3876, metadata !DIExpression()), !dbg !3884
  call void @llvm.dbg.value(metadata i32 %2, metadata !3877, metadata !DIExpression()), !dbg !3884
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3878, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3884
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3885
  %5 = load i32, i32* %4, align 4, !dbg !3885
  %6 = icmp eq i32 %5, 0, !dbg !3886
  br i1 %6, label %7, label %12, !dbg !3887

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3888
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3890
  %10 = load i32, i32* %9, align 4, !dbg !3891
  %11 = or i32 %10, %8, !dbg !3891
  store i32 %11, i32* %9, align 4, !dbg !3891
  store i32 %1, i32* %4, align 4, !dbg !3892
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3893
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3894
  br label %14, !dbg !3895

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3880, metadata !DIExpression()), !dbg !3896
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3897, !range !3898
  call void @llvm.dbg.value(metadata i32 %13, metadata !3883, metadata !DIExpression()), !dbg !3896
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3899
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3900
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3901
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3902
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3904 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3906, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.value(metadata i32 %1, metadata !3907, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.value(metadata i32 %2, metadata !3908, metadata !DIExpression()), !dbg !3909
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3910
  ret void, !dbg !3911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3912 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3914, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata i32 %1, metadata !3915, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata i32 %2, metadata !3916, metadata !DIExpression()), !dbg !3917
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3918
  ret void, !dbg !3919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3920 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3922, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata i32 %1, metadata !3923, metadata !DIExpression()), !dbg !3924
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3925
  ret i32 %3, !dbg !3926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3927 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3931, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %1, metadata !3932, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %2, metadata !3933, metadata !DIExpression()), !dbg !3936
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3937
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3934, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3935, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3936
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3935, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3936
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3938
  call void @llvm.dbg.value(metadata i8* %5, metadata !3935, metadata !DIExpression()), !dbg !3936
  %6 = bitcast i8* %5 to i16*, !dbg !3939
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3942
  %8 = load i16, i16* %7, align 2, !dbg !3942
  %9 = zext i16 %8 to i32, !dbg !3942
  ret i32 %9, !dbg !3943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3944 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3948, metadata !DIExpression()), !dbg !3949
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3950
  ret %struct.chunk_unit_t* %2, !dbg !3951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3952 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3956, metadata !DIExpression()), !dbg !3962
  call void @llvm.dbg.value(metadata i32 %1, metadata !3957, metadata !DIExpression()), !dbg !3962
  call void @llvm.dbg.value(metadata i32 %2, metadata !3958, metadata !DIExpression()), !dbg !3962
  call void @llvm.dbg.value(metadata i32 %3, metadata !3959, metadata !DIExpression()), !dbg !3962
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3963
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3960, metadata !DIExpression()), !dbg !3962
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3961, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3962
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3964
  call void @llvm.dbg.value(metadata i8* %6, metadata !3961, metadata !DIExpression()), !dbg !3962
  %7 = trunc i32 %3 to i16, !dbg !3965
  %8 = bitcast i8* %6 to i16*, !dbg !3968
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3969
  store i16 %7, i16* %9, align 2, !dbg !3970
  ret void, !dbg !3971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3972 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3976, metadata !DIExpression()), !dbg !3977
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3978
  ret i32 %2, !dbg !3979
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3980 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3984, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata i32 %1, metadata !3985, metadata !DIExpression()), !dbg !3986
  %3 = add i32 %1, 4, !dbg !3987
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3988
  ret i32 %4, !dbg !3989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3994, metadata !DIExpression()), !dbg !3995
  %2 = add i32 %0, 7, !dbg !3996
  %3 = lshr i32 %2, 3, !dbg !3997
  ret i32 %3, !dbg !3998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3999 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4003, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %1, metadata !4004, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %2, metadata !4005, metadata !DIExpression()), !dbg !4006
  %4 = shl i32 %2, 1, !dbg !4007
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4008
  ret void, !dbg !4009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4010 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4012, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata i32 %1, metadata !4013, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata i32 %2, metadata !4014, metadata !DIExpression()), !dbg !4015
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4016
  ret void, !dbg !4017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4018 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4020, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32 %1, metadata !4021, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32 %2, metadata !4022, metadata !DIExpression()), !dbg !4028
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4029
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4023, metadata !DIExpression()), !dbg !4028
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4030
  %6 = icmp eq i32 %5, %1, !dbg !4031
  br i1 %6, label %7, label %14, !dbg !4032

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4033
  %9 = xor i32 %8, -1, !dbg !4035
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4036
  %11 = load i32, i32* %10, align 4, !dbg !4037
  %12 = and i32 %11, %9, !dbg !4037
  store i32 %12, i32* %10, align 4, !dbg !4037
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4038
  store i32 0, i32* %13, align 4, !dbg !4039
  br label %17, !dbg !4040

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4041
  call void @llvm.dbg.value(metadata i32 %15, metadata !4024, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %5, metadata !4027, metadata !DIExpression()), !dbg !4042
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4043
  store i32 %5, i32* %16, align 4, !dbg !4044
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4045
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4046
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4048 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4050, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 %1, metadata !4051, metadata !DIExpression()), !dbg !4052
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4053
  ret i32 %3, !dbg !4054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4055 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4059, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8* %1, metadata !4060, metadata !DIExpression()), !dbg !4066
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4067
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4067
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4061, metadata !DIExpression()), !dbg !4066
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %5, metadata !4062, metadata !DIExpression()), !dbg !4066
  %6 = ptrtoint i8* %1 to i32, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %6, metadata !4063, metadata !DIExpression()), !dbg !4066
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4070
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4070
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %9, metadata !4064, metadata !DIExpression()), !dbg !4066
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4072
  %11 = shl i32 %10, 3, !dbg !4073
  call void @llvm.dbg.value(metadata i32 %11, metadata !4065, metadata !DIExpression()), !dbg !4066
  %12 = sub i32 %9, %6, !dbg !4074
  %13 = add i32 %12, %11, !dbg !4075
  ret i32 %13, !dbg !4076
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4077 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4081, metadata !DIExpression()), !dbg !4087
  call void @llvm.dbg.value(metadata i32 %1, metadata !4082, metadata !DIExpression()), !dbg !4087
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4088
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4088
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4083, metadata !DIExpression()), !dbg !4087
  %5 = icmp eq i32 %1, 0, !dbg !4089
  br i1 %5, label %19, label %6, !dbg !4091

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4092
  br i1 %7, label %19, label %8, !dbg !4093

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4094, !range !3710
  call void @llvm.dbg.value(metadata i32 %9, metadata !4085, metadata !DIExpression()), !dbg !4087
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4095
  call void @llvm.dbg.value(metadata i32 %10, metadata !4086, metadata !DIExpression()), !dbg !4087
  %11 = icmp eq i32 %10, 0, !dbg !4096
  br i1 %11, label %19, label %12, !dbg !4098

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4099
  %14 = icmp ugt i32 %13, %9, !dbg !4101
  br i1 %14, label %15, label %17, !dbg !4102

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4103
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4105
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4106
  br label %17, !dbg !4107

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4108
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4109
  call void @llvm.dbg.value(metadata i8* %18, metadata !4084, metadata !DIExpression()), !dbg !4087
  br label %19, !dbg !4110

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4087
  ret i8* %20, !dbg !4111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4112 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4116, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata i32 %1, metadata !4117, metadata !DIExpression()), !dbg !4118
  %3 = lshr i32 %1, 3, !dbg !4119
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4120
  %5 = load i32, i32* %4, align 4, !dbg !4120
  %6 = icmp uge i32 %3, %5, !dbg !4121
  ret i1 %6, !dbg !4122
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4123 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4127, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.value(metadata i32 %1, metadata !4128, metadata !DIExpression()), !dbg !4142
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4143
  call void @llvm.dbg.value(metadata i32 %3, metadata !4129, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4130, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4142
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4144
  %5 = load i32, i32* %4, align 4, !dbg !4144
  %6 = icmp eq i32 %5, 0, !dbg !4145
  br i1 %6, label %19, label %7, !dbg !4146

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4147
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4148
  call void @llvm.dbg.value(metadata i32 %9, metadata !4134, metadata !DIExpression()), !dbg !4148
  call void @llvm.dbg.value(metadata i32 %8, metadata !4135, metadata !DIExpression()), !dbg !4149
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4150
  %11 = icmp ult i32 %10, %1, !dbg !4152
  br i1 %11, label %13, label %12, !dbg !4153

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4154
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4156
  store i32 %14, i32* %4, align 4, !dbg !4157
  %15 = add nsw i32 %9, -1, !dbg !4158
  call void @llvm.dbg.value(metadata i32 %15, metadata !4134, metadata !DIExpression()), !dbg !4148
  %16 = icmp eq i32 %15, 0, !dbg !4158
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4159
  br i1 %18, label %19, label %7, !dbg !4159, !llvm.loop !4160

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4163
  %21 = load i32, i32* %20, align 4, !dbg !4163
  %22 = add nsw i32 %3, 1, !dbg !4164
  %23 = shl nsw i32 -1, %22, !dbg !4164
  %24 = and i32 %21, %23, !dbg !4165
  call void @llvm.dbg.value(metadata i32 %24, metadata !4137, metadata !DIExpression()), !dbg !4142
  %25 = icmp eq i32 %24, 0, !dbg !4166
  br i1 %25, label %30, label %26, !dbg !4167

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4168, !range !3868
  call void @llvm.dbg.value(metadata i32 %27, metadata !4138, metadata !DIExpression()), !dbg !4169
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4170
  %29 = load i32, i32* %28, align 4, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %29, metadata !4141, metadata !DIExpression()), !dbg !4169
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4171
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4142
  ret i32 %31, !dbg !4172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4173 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4175, metadata !DIExpression()), !dbg !4181
  call void @llvm.dbg.value(metadata i32 %1, metadata !4176, metadata !DIExpression()), !dbg !4181
  call void @llvm.dbg.value(metadata i32 %2, metadata !4177, metadata !DIExpression()), !dbg !4181
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %4, metadata !4178, metadata !DIExpression()), !dbg !4181
  %5 = sub i32 %2, %1, !dbg !4183
  call void @llvm.dbg.value(metadata i32 %5, metadata !4179, metadata !DIExpression()), !dbg !4181
  %6 = sub i32 %4, %5, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %6, metadata !4180, metadata !DIExpression()), !dbg !4181
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4185
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4186
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4187
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4188
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4189
  ret void, !dbg !4190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4191 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4195, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %1, metadata !4196, metadata !DIExpression()), !dbg !4199
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4200
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4197, metadata !DIExpression()), !dbg !4199
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4201
  call void @llvm.dbg.value(metadata i8* %4, metadata !4198, metadata !DIExpression()), !dbg !4199
  ret i8* %4, !dbg !4202
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4203 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4207, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i32 %1, metadata !4208, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i32 %2, metadata !4209, metadata !DIExpression()), !dbg !4219
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4220
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4220
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4210, metadata !DIExpression()), !dbg !4219
  %6 = sub i32 0, %1, !dbg !4221
  %7 = and i32 %6, %1, !dbg !4222
  call void @llvm.dbg.value(metadata i32 %7, metadata !4212, metadata !DIExpression()), !dbg !4219
  %8 = icmp eq i32 %7, %1, !dbg !4223
  br i1 %8, label %13, label %9, !dbg !4225

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %10, metadata !4208, metadata !DIExpression()), !dbg !4219
  %11 = icmp ult i32 %7, 4, !dbg !4228
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4228
  br label %17, !dbg !4228

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4229
  br i1 %14, label %15, label %17, !dbg !4232

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4233
  br label %57, !dbg !4235

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4219
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4236
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4208, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i32 %19, metadata !4211, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i32 %18, metadata !4212, metadata !DIExpression()), !dbg !4219
  %21 = icmp eq i32 %2, 0, !dbg !4237
  br i1 %21, label %57, label %22, !dbg !4239

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4240
  br i1 %23, label %57, label %24, !dbg !4241

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4242
  %26 = add i32 %25, %20, !dbg !4243
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4244, !range !3710
  call void @llvm.dbg.value(metadata i32 %27, metadata !4213, metadata !DIExpression()), !dbg !4219
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4245
  call void @llvm.dbg.value(metadata i32 %28, metadata !4214, metadata !DIExpression()), !dbg !4219
  %29 = icmp eq i32 %28, 0, !dbg !4246
  br i1 %29, label %57, label %30, !dbg !4248

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4249
  call void @llvm.dbg.value(metadata i8* %31, metadata !4215, metadata !DIExpression()), !dbg !4219
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4250
  %33 = ptrtoint i8* %32 to i32, !dbg !4250
  %34 = add i32 %20, -1, !dbg !4250
  %35 = add i32 %34, %33, !dbg !4250
  %36 = sub i32 0, %20, !dbg !4250
  %37 = and i32 %35, %36, !dbg !4250
  %38 = inttoptr i32 %37 to i8*, !dbg !4251
  %39 = sub i32 0, %18, !dbg !4252
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4252
  call void @llvm.dbg.value(metadata i8* %40, metadata !4215, metadata !DIExpression()), !dbg !4219
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4253
  %42 = ptrtoint i8* %41 to i32, !dbg !4253
  %43 = add i32 %42, 7, !dbg !4253
  %44 = and i32 %43, -8, !dbg !4253
  call void @llvm.dbg.value(metadata i32 %44, metadata !4216, metadata !DIExpression()), !dbg !4219
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %45, metadata !4217, metadata !DIExpression()), !dbg !4219
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4255
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4256
  %48 = sub i32 %44, %47, !dbg !4256
  %49 = ashr exact i32 %48, 3, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %49, metadata !4218, metadata !DIExpression()), !dbg !4219
  %50 = icmp ugt i32 %45, %28, !dbg !4257
  br i1 %50, label %51, label %52, !dbg !4259

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4260
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4262
  br label %52, !dbg !4263

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4264
  %54 = icmp ugt i32 %53, %49, !dbg !4266
  br i1 %54, label %55, label %56, !dbg !4267

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4268
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4270
  br label %56, !dbg !4271

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4272
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4219
  ret i8* %58, !dbg !4273
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4274 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4278, metadata !DIExpression()), !dbg !4297
  call void @llvm.dbg.value(metadata i8* %1, metadata !4279, metadata !DIExpression()), !dbg !4297
  call void @llvm.dbg.value(metadata i32 %2, metadata !4280, metadata !DIExpression()), !dbg !4297
  call void @llvm.dbg.value(metadata i32 %3, metadata !4281, metadata !DIExpression()), !dbg !4297
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4298
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4298
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4282, metadata !DIExpression()), !dbg !4297
  %7 = icmp eq i8* %1, null, !dbg !4299
  br i1 %7, label %8, label %10, !dbg !4301

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4302
  br label %59, !dbg !4304

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4305
  br i1 %11, label %12, label %13, !dbg !4307

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4308
  br label %59, !dbg !4310

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4311
  br i1 %14, label %59, label %15, !dbg !4313

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4314, !range !3710
  call void @llvm.dbg.value(metadata i32 %16, metadata !4283, metadata !DIExpression()), !dbg !4297
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4315
  call void @llvm.dbg.value(metadata i32 %17, metadata !4284, metadata !DIExpression()), !dbg !4297
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4316
  %19 = ptrtoint i8* %1 to i32, !dbg !4317
  %20 = ptrtoint i8* %18 to i32, !dbg !4317
  %21 = sub i32 %19, %20, !dbg !4317
  call void @llvm.dbg.value(metadata i32 %21, metadata !4285, metadata !DIExpression()), !dbg !4297
  %22 = add i32 %21, %3, !dbg !4318
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4319
  call void @llvm.dbg.value(metadata i32 %23, metadata !4286, metadata !DIExpression()), !dbg !4297
  %24 = icmp eq i32 %2, 0, !dbg !4320
  br i1 %24, label %29, label %25, !dbg !4321

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4322
  %27 = and i32 %26, %19, !dbg !4323
  %28 = icmp eq i32 %27, 0, !dbg !4323
  br i1 %28, label %29, label %49, !dbg !4324

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4325
  %31 = icmp eq i32 %23, %30, !dbg !4326
  br i1 %31, label %59, label %32, !dbg !4327

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4328
  br i1 %33, label %34, label %36, !dbg !4329

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4330
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4332
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4333
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4334
  br label %59, !dbg !4335

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4336
  br i1 %37, label %49, label %38, !dbg !4337

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4338
  %40 = add i32 %39, %30, !dbg !4339
  %41 = icmp ult i32 %40, %23, !dbg !4340
  br i1 %41, label %49, label %42, !dbg !4341

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4342
  call void @llvm.dbg.value(metadata i32 %43, metadata !4287, metadata !DIExpression()), !dbg !4343
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4344
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4345
  %45 = icmp ult i32 %43, %44, !dbg !4347
  br i1 %45, label %46, label %48, !dbg !4348

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4349
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4351
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4352
  br label %48, !dbg !4353

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4354
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4355
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4356
  call void @llvm.dbg.value(metadata i8* %50, metadata !4293, metadata !DIExpression()), !dbg !4297
  %51 = icmp eq i8* %50, null, !dbg !4357
  br i1 %51, label %59, label %52, !dbg !4358

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4359, !range !3803
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4360
  %55 = sub i32 %54, %21, !dbg !4361
  call void @llvm.dbg.value(metadata i32 %55, metadata !4294, metadata !DIExpression()), !dbg !4362
  %56 = icmp ult i32 %55, %3, !dbg !4363
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4363
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !4364
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4365
  br label %59, !dbg !4366

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4297
  ret i8* %60, !dbg !4367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4368 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4372, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata i32 %1, metadata !4373, metadata !DIExpression()), !dbg !4374
  %3 = shl i32 %1, 3, !dbg !4375
  %4 = add i32 %3, -4, !dbg !4376
  ret i32 %4, !dbg !4377
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4378 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4382, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i8* %1, metadata !4383, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 %2, metadata !4384, metadata !DIExpression()), !dbg !4393
  %4 = add i32 %2, -4, !dbg !4394
  call void @llvm.dbg.value(metadata i32 %4, metadata !4384, metadata !DIExpression()), !dbg !4393
  %5 = ptrtoint i8* %1 to i32, !dbg !4395
  %6 = add i32 %5, 7, !dbg !4395
  %7 = and i32 %6, -8, !dbg !4395
  call void @llvm.dbg.value(metadata i32 %7, metadata !4385, metadata !DIExpression()), !dbg !4393
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4396
  %9 = ptrtoint i8* %8 to i32, !dbg !4396
  %10 = and i32 %9, -8, !dbg !4396
  call void @llvm.dbg.value(metadata i32 %10, metadata !4386, metadata !DIExpression()), !dbg !4393
  %11 = sub i32 %10, %7, !dbg !4397
  %12 = lshr exact i32 %11, 3, !dbg !4398
  call void @llvm.dbg.value(metadata i32 %12, metadata !4387, metadata !DIExpression()), !dbg !4393
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4399
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4388, metadata !DIExpression()), !dbg !4393
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4400
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4401
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4402
  store i32 %12, i32* %15, align 8, !dbg !4403
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4404
  store i32 0, i32* %16, align 4, !dbg !4405
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %17, metadata !4389, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4393
  %18 = shl i32 %17, 2, !dbg !4407
  %19 = add i32 %18, 20, !dbg !4408
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %20, metadata !4390, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 0, metadata !4391, metadata !DIExpression()), !dbg !4410
  %21 = icmp slt i32 %17, 0, !dbg !4411
  br i1 %21, label %22, label %24, !dbg !4413

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4414
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4415
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4416
  %23 = sub i32 %12, %20, !dbg !4417
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4418
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4419
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4420
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4421
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4422
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4423
  ret void, !dbg !4424

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4391, metadata !DIExpression()), !dbg !4410
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4425
  store i32 0, i32* %26, align 4, !dbg !4427
  %27 = add nuw i32 %25, 1, !dbg !4428
  call void @llvm.dbg.value(metadata i32 %27, metadata !4391, metadata !DIExpression()), !dbg !4410
  %28 = icmp eq i32 %25, %17, !dbg !4411
  br i1 %28, label %22, label %24, !dbg !4413, !llvm.loop !4429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4431 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4444, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4441, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i8* %1, metadata !4442, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i8* %2, metadata !4443, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 %4, metadata !4445, metadata !DIExpression()), !dbg !4572
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4573
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4573
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4446, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.value(metadata i32 0, metadata !4450, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i1 undef, metadata !4452, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4572
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4575

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4575

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4576
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4444, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i8* %30, metadata !4443, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 %29, metadata !4450, metadata !DIExpression()), !dbg !4572
  %31 = load i8, i8* %30, align 1, !dbg !4577
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4575

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4577
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4578
  call void @llvm.dbg.value(metadata i8* %34, metadata !4443, metadata !DIExpression()), !dbg !4572
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4578
  call void @llvm.dbg.value(metadata i32 %35, metadata !4454, metadata !DIExpression()), !dbg !4579
  %36 = icmp slt i32 %35, 0, !dbg !4580
  %37 = add i32 %29, 1, !dbg !4578
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression()), !dbg !4572
  br i1 %36, label %365, label %28, !llvm.loop !4582

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4584
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4459, metadata !DIExpression()), !dbg !4585
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4585
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4504, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4507, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8* %30, metadata !4510, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i32 -1, metadata !4511, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i32 -1, metadata !4512, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8* null, metadata !4513, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8* %14, metadata !4514, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8 0, metadata !4515, metadata !DIExpression()), !dbg !4586
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4587
  call void @llvm.dbg.value(metadata i8* %39, metadata !4443, metadata !DIExpression()), !dbg !4572
  %40 = load i24, i24* %15, align 8, !dbg !4588
  %41 = and i24 %40, 256, !dbg !4588
  %42 = icmp eq i24 %41, 0, !dbg !4588
  br i1 %42, label %51, label %43, !dbg !4590

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4591
  call void @llvm.dbg.value(metadata i8* %44, metadata !4444, metadata !DIExpression()), !dbg !4572
  %45 = bitcast i8* %27 to i32*, !dbg !4591
  %46 = load i32, i32* %45, align 4, !dbg !4591
  call void @llvm.dbg.value(metadata i32 %46, metadata !4511, metadata !DIExpression()), !dbg !4586
  %47 = icmp slt i32 %46, 0, !dbg !4593
  br i1 %47, label %48, label %56, !dbg !4595

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4596
  store i24 %49, i24* %15, align 8, !dbg !4596
  %50 = sub nsw i32 0, %46, !dbg !4598
  call void @llvm.dbg.value(metadata i32 %50, metadata !4511, metadata !DIExpression()), !dbg !4586
  br label %56, !dbg !4599

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4600
  %53 = icmp eq i24 %52, 0, !dbg !4600
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4602
  br label %56, !dbg !4602

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4603
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4586
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4444, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 %58, metadata !4511, metadata !DIExpression()), !dbg !4586
  %60 = and i24 %57, 1024, !dbg !4603
  %61 = icmp eq i24 %60, 0, !dbg !4603
  br i1 %61, label %69, label %62, !dbg !4604

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4605
  call void @llvm.dbg.value(metadata i8* %63, metadata !4444, metadata !DIExpression()), !dbg !4572
  %64 = bitcast i8* %59 to i32*, !dbg !4605
  %65 = load i32, i32* %64, align 4, !dbg !4605
  call void @llvm.dbg.value(metadata i32 %65, metadata !4516, metadata !DIExpression()), !dbg !4606
  %66 = icmp slt i32 %65, 0, !dbg !4607
  br i1 %66, label %67, label %74, !dbg !4609

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4610
  store i24 %68, i24* %15, align 8, !dbg !4610
  br label %74, !dbg !4612

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4613
  %71 = icmp eq i24 %70, 0, !dbg !4613
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4615
  br label %74, !dbg !4615

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4616
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4586
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4586
  call void @llvm.dbg.value(metadata i8* %77, metadata !4444, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 %76, metadata !4512, metadata !DIExpression()), !dbg !4586
  store i32 0, i32* %16, align 4, !dbg !4617
  store i32 0, i32* %17, align 8, !dbg !4618
  %78 = lshr i24 %75, 16, !dbg !4616
  call void @llvm.dbg.value(metadata i24 %78, metadata !4519, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4586
  %79 = lshr i24 %75, 11, !dbg !4619
  %80 = and i24 %79, 15, !dbg !4619
  %81 = zext i24 %80 to i32, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %81, metadata !4520, metadata !DIExpression()), !dbg !4586
  %82 = trunc i24 %78 to i3, !dbg !4620
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4620

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4621

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4624
  call void @llvm.dbg.value(metadata i8* %85, metadata !4444, metadata !DIExpression()), !dbg !4572
  %86 = bitcast i8* %77 to i32*, !dbg !4624
  %87 = load i32, i32* %86, align 4, !dbg !4624
  %88 = sext i32 %87 to i64, !dbg !4624
  store i64 %88, i64* %20, align 8, !dbg !4626
  br label %115, !dbg !4627

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4628
  call void @llvm.dbg.value(metadata i8* %90, metadata !4444, metadata !DIExpression()), !dbg !4572
  %91 = bitcast i8* %77 to i32*, !dbg !4628
  %92 = load i32, i32* %91, align 4, !dbg !4628
  %93 = sext i32 %92 to i64, !dbg !4628
  store i64 %93, i64* %20, align 8, !dbg !4631
  br label %115, !dbg !4632

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4633
  %96 = add i32 %95, 7, !dbg !4633
  %97 = and i32 %96, -8, !dbg !4633
  %98 = inttoptr i32 %97 to i8*, !dbg !4633
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4633
  call void @llvm.dbg.value(metadata i8* %99, metadata !4444, metadata !DIExpression()), !dbg !4572
  %100 = inttoptr i32 %97 to i64*, !dbg !4633
  %101 = load i64, i64* %100, align 8, !dbg !4633
  store i64 %101, i64* %20, align 8, !dbg !4634
  br label %115, !dbg !4635

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4636
  %104 = add i32 %103, 7, !dbg !4636
  %105 = and i32 %104, -8, !dbg !4636
  %106 = inttoptr i32 %105 to i8*, !dbg !4636
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4636
  call void @llvm.dbg.value(metadata i8* %107, metadata !4444, metadata !DIExpression()), !dbg !4572
  %108 = inttoptr i32 %105 to i64*, !dbg !4636
  %109 = load i64, i64* %108, align 8, !dbg !4636
  store i64 %109, i64* %20, align 8, !dbg !4637
  br label %115, !dbg !4638

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4639
  call void @llvm.dbg.value(metadata i8* %111, metadata !4444, metadata !DIExpression()), !dbg !4572
  %112 = bitcast i8* %77 to i32*, !dbg !4639
  %113 = load i32, i32* %112, align 4, !dbg !4639
  %114 = sext i32 %113 to i64, !dbg !4640
  store i64 %114, i64* %20, align 8, !dbg !4641
  br label %115, !dbg !4642

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4643
  call void @llvm.dbg.value(metadata i8* %117, metadata !4444, metadata !DIExpression()), !dbg !4572
  %118 = trunc i24 %79 to i4, !dbg !4644
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4644

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4645
  %121 = ashr exact i64 %120, 56, !dbg !4645
  store i64 %121, i64* %20, align 8, !dbg !4648
  br label %177, !dbg !4649

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4650
  %124 = ashr exact i64 %123, 48, !dbg !4650
  store i64 %124, i64* %20, align 8, !dbg !4653
  br label %177, !dbg !4654

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4655

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4658
  call void @llvm.dbg.value(metadata i8* %127, metadata !4444, metadata !DIExpression()), !dbg !4572
  %128 = bitcast i8* %77 to i32*, !dbg !4658
  %129 = load i32, i32* %128, align 4, !dbg !4658
  %130 = zext i32 %129 to i64, !dbg !4658
  store i64 %130, i64* %20, align 8, !dbg !4660
  br label %157, !dbg !4661

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4662
  call void @llvm.dbg.value(metadata i8* %132, metadata !4444, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i8* %132, metadata !4444, metadata !DIExpression()), !dbg !4572
  %133 = bitcast i8* %77 to i32*, !dbg !4662
  %134 = load i32, i32* %133, align 4, !dbg !4662
  %135 = zext i32 %134 to i64, !dbg !4662
  store i64 %135, i64* %20, align 8, !dbg !4662
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4664
  %138 = add i32 %137, 7, !dbg !4664
  %139 = and i32 %138, -8, !dbg !4664
  %140 = inttoptr i32 %139 to i8*, !dbg !4664
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4664
  call void @llvm.dbg.value(metadata i8* %141, metadata !4444, metadata !DIExpression()), !dbg !4572
  %142 = inttoptr i32 %139 to i64*, !dbg !4664
  %143 = load i64, i64* %142, align 8, !dbg !4664
  store i64 %143, i64* %20, align 8, !dbg !4665
  br label %157, !dbg !4666

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4667
  %146 = add i32 %145, 7, !dbg !4667
  %147 = and i32 %146, -8, !dbg !4667
  %148 = inttoptr i32 %147 to i8*, !dbg !4667
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4667
  call void @llvm.dbg.value(metadata i8* %149, metadata !4444, metadata !DIExpression()), !dbg !4572
  %150 = inttoptr i32 %147 to i64*, !dbg !4667
  %151 = load i64, i64* %150, align 8, !dbg !4667
  store i64 %151, i64* %20, align 8, !dbg !4668
  br label %157, !dbg !4669

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4670
  call void @llvm.dbg.value(metadata i8* %153, metadata !4444, metadata !DIExpression()), !dbg !4572
  %154 = bitcast i8* %77 to i32*, !dbg !4670
  %155 = load i32, i32* %154, align 4, !dbg !4670
  %156 = zext i32 %155 to i64, !dbg !4671
  store i64 %156, i64* %20, align 8, !dbg !4672
  br label %157, !dbg !4673

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4674
  call void @llvm.dbg.value(metadata i8* %159, metadata !4444, metadata !DIExpression()), !dbg !4572
  %160 = trunc i24 %79 to i4, !dbg !4675
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4675

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4676
  store i64 %162, i64* %20, align 8, !dbg !4679
  br label %177, !dbg !4680

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4681
  store i64 %164, i64* %20, align 8, !dbg !4684
  br label %177, !dbg !4685

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4686
  %167 = add i32 %166, 7, !dbg !4686
  %168 = and i32 %167, -8, !dbg !4686
  %169 = inttoptr i32 %168 to i8*, !dbg !4686
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4686
  call void @llvm.dbg.value(metadata i8* %170, metadata !4444, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i8* %170, metadata !4444, metadata !DIExpression()), !dbg !4572
  %171 = inttoptr i32 %168 to double*, !dbg !4686
  %172 = load double, double* %171, align 8, !dbg !4686
  store double %172, double* %19, align 8, !dbg !4686
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4690
  call void @llvm.dbg.value(metadata i8* %174, metadata !4444, metadata !DIExpression()), !dbg !4572
  %175 = bitcast i8* %77 to i8**, !dbg !4690
  %176 = load i8*, i8** %175, align 4, !dbg !4690
  store i8* %176, i8** %18, align 8, !dbg !4693
  br label %177, !dbg !4694

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4586
  call void @llvm.dbg.value(metadata i8* %178, metadata !4444, metadata !DIExpression()), !dbg !4572
  %179 = and i24 %75, 3, !dbg !4695
  %180 = icmp eq i24 %179, 0, !dbg !4695
  br i1 %180, label %185, label %181, !dbg !4695

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4696
  call void @llvm.dbg.value(metadata i32 %182, metadata !4521, metadata !DIExpression()), !dbg !4697
  %183 = icmp slt i32 %182, 0, !dbg !4698
  %184 = add i32 %182, %29, !dbg !4696
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression()), !dbg !4572
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4700
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4701

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4702
  call void @llvm.dbg.value(metadata i32 %188, metadata !4525, metadata !DIExpression()), !dbg !4703
  %189 = icmp slt i32 %188, 0, !dbg !4704
  %190 = add i32 %29, 1, !dbg !4702
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression()), !dbg !4572
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4706
  call void @llvm.dbg.value(metadata i8* %192, metadata !4513, metadata !DIExpression()), !dbg !4586
  %193 = icmp sgt i32 %76, -1, !dbg !4707
  br i1 %193, label %194, label %196, !dbg !4709

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4710
  call void @llvm.dbg.value(metadata i32 %195, metadata !4528, metadata !DIExpression()), !dbg !4712
  br label %241, !dbg !4713

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %197, metadata !4528, metadata !DIExpression()), !dbg !4712
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4513, metadata !DIExpression()), !dbg !4586
  %199 = load i64, i64* %20, align 8, !dbg !4716
  %200 = trunc i64 %199 to i8, !dbg !4717
  store i8 %200, i8* %10, align 1, !dbg !4718
  call void @llvm.dbg.value(metadata i8* %23, metadata !4514, metadata !DIExpression()), !dbg !4586
  br label %245, !dbg !4719

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4720
  %203 = icmp eq i24 %202, 0, !dbg !4720
  %204 = trunc i24 %75 to i8, !dbg !4722
  %205 = shl i8 %204, 1, !dbg !4722
  %206 = and i8 %205, 32, !dbg !4722
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4722
  call void @llvm.dbg.value(metadata i8 %207, metadata !4515, metadata !DIExpression()), !dbg !4586
  %208 = load i64, i64* %20, align 8, !dbg !4723
  call void @llvm.dbg.value(metadata i64 %208, metadata !4451, metadata !DIExpression()), !dbg !4572
  %209 = icmp slt i64 %208, 0, !dbg !4724
  br i1 %209, label %210, label %212, !dbg !4726

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4515, metadata !DIExpression()), !dbg !4586
  %211 = sub nsw i64 0, %208, !dbg !4727
  store i64 %211, i64* %20, align 8, !dbg !4729
  br label %212, !dbg !4730

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4586
  call void @llvm.dbg.value(metadata i8 %213, metadata !4515, metadata !DIExpression()), !dbg !4586
  %214 = load i64, i64* %20, align 8, !dbg !4731
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4732
  call void @llvm.dbg.value(metadata i8* %215, metadata !4513, metadata !DIExpression()), !dbg !4586
  br label %216, !dbg !4733

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4734
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4735
  call void @llvm.dbg.value(metadata i8* %218, metadata !4513, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8 %217, metadata !4515, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.label(metadata !4571), !dbg !4736
  %219 = icmp sgt i32 %76, -1, !dbg !4737
  br i1 %219, label %222, label %220, !dbg !4738

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4739
  br label %245, !dbg !4738

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4741
  %224 = sub i32 %22, %223, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %224, metadata !4530, metadata !DIExpression()), !dbg !4742
  %225 = load i24, i24* %15, align 8, !dbg !4743
  %226 = and i24 %225, -65, !dbg !4743
  store i24 %226, i24* %15, align 8, !dbg !4743
  %227 = icmp ugt i32 %76, %224, !dbg !4744
  br i1 %227, label %228, label %245, !dbg !4746

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4747
  store i32 %229, i32* %16, align 4, !dbg !4749
  br label %245, !dbg !4750

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4751
  %232 = icmp eq i8* %231, null, !dbg !4753
  br i1 %232, label %245, label %233, !dbg !4754

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4755
  %235 = zext i32 %234 to i64, !dbg !4755
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4757
  call void @llvm.dbg.value(metadata i8* %236, metadata !4513, metadata !DIExpression()), !dbg !4586
  %237 = load i24, i24* %15, align 8, !dbg !4758
  %238 = or i24 %237, 1048576, !dbg !4758
  store i24 %238, i24* %15, align 8, !dbg !4758
  store i8 120, i8* %21, align 1, !dbg !4759
  br label %216, !dbg !4760

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4761
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4764
  br label %363, !dbg !4765

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4766
  call void @llvm.dbg.value(metadata i32 %242, metadata !4528, metadata !DIExpression()), !dbg !4712
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4767
  call void @llvm.dbg.value(metadata i32 -1, metadata !4512, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i32 %29, metadata !4450, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i8* %192, metadata !4513, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8* %243, metadata !4514, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8 0, metadata !4515, metadata !DIExpression()), !dbg !4586
  %244 = icmp eq i8* %192, null, !dbg !4768
  br i1 %244, label %363, label %245, !dbg !4770, !llvm.loop !4582

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4739
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata i32 0, metadata !4534, metadata !DIExpression()), !dbg !4586
  %250 = zext i8 %249 to i32, !dbg !4771
  %251 = icmp eq i8 %249, 0, !dbg !4773
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4586
  %252 = icmp sgt i32 %58, 0, !dbg !4774
  br i1 %252, label %253, label %302, !dbg !4775

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4739
  %255 = icmp eq i24 %254, 0, !dbg !4739
  %256 = ptrtoint i8* %248 to i32, !dbg !4776
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %257 = ptrtoint i8* %247 to i32, !dbg !4776
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %258 = xor i1 %251, true, !dbg !4777
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %259 = sext i1 %258 to i32, !dbg !4777
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %260 = lshr i24 %246, 19, !dbg !4778
  %261 = and i24 %260, 1, !dbg !4778
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4778
  %263 = zext i24 %262 to i32, !dbg !4778
  %264 = add i32 %257, %259, !dbg !4778
  %265 = add i32 %256, %263, !dbg !4778
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  %266 = and i24 %246, 4194304, !dbg !4779
  %267 = icmp eq i24 %266, 0, !dbg !4779
  %268 = load i32, i32* %16, align 4, !dbg !4781
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4533, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4586
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4586
  %269 = load i32, i32* %17, align 8, !dbg !4782
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4782
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4586
  %271 = add i32 %264, %58, !dbg !4782
  %272 = add i32 %265, %268, !dbg !4782
  %273 = add i32 %272, %270, !dbg !4783
  %274 = sub i32 %271, %273, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %274, metadata !4511, metadata !DIExpression()), !dbg !4586
  %275 = and i24 %246, 4, !dbg !4784
  %276 = icmp eq i24 %275, 0, !dbg !4784
  br i1 %276, label %277, label %302, !dbg !4785

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4535, metadata !DIExpression()), !dbg !4786
  %278 = and i24 %246, 64, !dbg !4787
  %279 = icmp eq i24 %278, 0, !dbg !4787
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4788
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4788
  %282 = select i1 %279, i32 32, i32 48, !dbg !4788
  br i1 %280, label %287, label %283, !dbg !4788

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4789
  call void @llvm.dbg.value(metadata i32 %284, metadata !4540, metadata !DIExpression()), !dbg !4790
  %285 = icmp slt i32 %284, 0, !dbg !4791
  %286 = add i32 %29, 1, !dbg !4789
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression()), !dbg !4572
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4586
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4576
  call void @llvm.dbg.value(metadata i32 %290, metadata !4450, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i8 undef, metadata !4535, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 %288, metadata !4515, metadata !DIExpression()), !dbg !4586
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4793
  %292 = add i32 %291, -1, !dbg !4793
  br label %293, !dbg !4793

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4794
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4576
  call void @llvm.dbg.value(metadata i32 %295, metadata !4450, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 %294, metadata !4511, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i32 %294, metadata !4511, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4586
  %296 = icmp sgt i32 %294, 0, !dbg !4795
  br i1 %296, label %297, label %302, !dbg !4793

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4796
  call void @llvm.dbg.value(metadata i32 %298, metadata !4511, metadata !DIExpression()), !dbg !4586
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4797
  call void @llvm.dbg.value(metadata i32 %299, metadata !4546, metadata !DIExpression()), !dbg !4798
  %300 = icmp slt i32 %299, 0, !dbg !4799
  %301 = add i32 %295, 1, !dbg !4797
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression()), !dbg !4572
  br i1 %300, label %361, label %293, !llvm.loop !4801

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4586
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4586
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4576
  call void @llvm.dbg.value(metadata i32 %305, metadata !4450, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 %304, metadata !4511, metadata !DIExpression()), !dbg !4586
  call void @llvm.dbg.value(metadata i8 %303, metadata !4515, metadata !DIExpression()), !dbg !4586
  %306 = icmp eq i8 %303, 0, !dbg !4803
  br i1 %306, label %312, label %307, !dbg !4804

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4805
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %309, metadata !4549, metadata !DIExpression()), !dbg !4807
  %310 = icmp slt i32 %309, 0, !dbg !4808
  %311 = add i32 %305, 1, !dbg !4806
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression()), !dbg !4572
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4576
  call void @llvm.dbg.value(metadata i32 %313, metadata !4450, metadata !DIExpression()), !dbg !4572
  %314 = lshr i24 %246, 20, !dbg !4810
  %315 = lshr i24 %246, 19, !dbg !4811
  %316 = or i24 %314, %315, !dbg !4812
  %317 = and i24 %316, 1, !dbg !4812
  %318 = icmp eq i24 %317, 0, !dbg !4812
  br i1 %318, label %323, label %319, !dbg !4813

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4814
  call void @llvm.dbg.value(metadata i32 %320, metadata !4553, metadata !DIExpression()), !dbg !4815
  %321 = icmp slt i32 %320, 0, !dbg !4816
  %322 = add i32 %313, 1, !dbg !4814
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression()), !dbg !4572
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4576
  call void @llvm.dbg.value(metadata i32 %324, metadata !4450, metadata !DIExpression()), !dbg !4572
  %325 = and i24 %246, 1048576, !dbg !4818
  %326 = icmp eq i24 %325, 0, !dbg !4818
  br i1 %326, label %333, label %327, !dbg !4819

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4820
  %329 = zext i8 %328 to i32, !dbg !4820
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4820
  call void @llvm.dbg.value(metadata i32 %330, metadata !4559, metadata !DIExpression()), !dbg !4821
  %331 = icmp slt i32 %330, 0, !dbg !4822
  %332 = add i32 %324, 1, !dbg !4820
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression()), !dbg !4572
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4576
  call void @llvm.dbg.value(metadata i32 %334, metadata !4450, metadata !DIExpression()), !dbg !4572
  %335 = load i32, i32* %16, align 4, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %335, metadata !4534, metadata !DIExpression()), !dbg !4586
  br label %336, !dbg !4825

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4826
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4576
  call void @llvm.dbg.value(metadata i32 %338, metadata !4450, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 %337, metadata !4534, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4586
  %339 = icmp sgt i32 %337, 0, !dbg !4827
  br i1 %339, label %340, label %345, !dbg !4825

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %341, metadata !4534, metadata !DIExpression()), !dbg !4586
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %342, metadata !4563, metadata !DIExpression()), !dbg !4830
  %343 = icmp slt i32 %342, 0, !dbg !4831
  %344 = add i32 %338, 1, !dbg !4829
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression()), !dbg !4572
  br i1 %343, label %361, label %336, !llvm.loop !4833

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %346, metadata !4566, metadata !DIExpression()), !dbg !4836
  %347 = icmp slt i32 %346, 0, !dbg !4837
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression()), !dbg !4572
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %349, metadata !4450, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 %304, metadata !4511, metadata !DIExpression()), !dbg !4586
  %350 = icmp sgt i32 %304, 0, !dbg !4839
  br i1 %350, label %351, label %363, !dbg !4840

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4840
  %353 = add i32 %352, %338, !dbg !4840
  br label %354, !dbg !4840

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 %355, metadata !4511, metadata !DIExpression()), !dbg !4586
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4841
  call void @llvm.dbg.value(metadata i32 %356, metadata !4568, metadata !DIExpression()), !dbg !4842
  %357 = icmp slt i32 %356, 0, !dbg !4843
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4845
  call void @llvm.dbg.value(metadata i32 undef, metadata !4450, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4572
  call void @llvm.dbg.value(metadata i32 %359, metadata !4511, metadata !DIExpression()), !dbg !4586
  %360 = icmp sgt i32 %355, 1, !dbg !4839
  br i1 %360, label %354, label %363, !dbg !4840, !llvm.loop !4846

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4450, metadata !DIExpression()), !dbg !4572
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4583
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4576
  call void @llvm.dbg.value(metadata i32 %364, metadata !4450, metadata !DIExpression()), !dbg !4572
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4583
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4572
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4848
  ret i32 %366, !dbg !4848
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4849 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4853, metadata !DIExpression()), !dbg !4855
  call void @llvm.dbg.value(metadata i8* %1, metadata !4854, metadata !DIExpression()), !dbg !4855
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4856
  store i24 0, i24* %3, align 4, !dbg !4856
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4856
  store i8 0, i8* %4, align 1, !dbg !4856
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4856
  store i32 0, i32* %5, align 4, !dbg !4856
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4856
  store i32 0, i32* %6, align 4, !dbg !4856
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4857
  call void @llvm.dbg.value(metadata i8* %7, metadata !4854, metadata !DIExpression()), !dbg !4855
  %8 = load i8, i8* %7, align 1, !dbg !4858
  %9 = icmp eq i8 %8, 37, !dbg !4860
  br i1 %9, label %10, label %12, !dbg !4861

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4862
  call void @llvm.dbg.value(metadata i8* %11, metadata !4854, metadata !DIExpression()), !dbg !4855
  store i8 37, i8* %4, align 1, !dbg !4864
  br label %18, !dbg !4865

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4866
  call void @llvm.dbg.value(metadata i8* %13, metadata !4854, metadata !DIExpression()), !dbg !4855
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %14, metadata !4854, metadata !DIExpression()), !dbg !4855
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4868
  call void @llvm.dbg.value(metadata i8* %15, metadata !4854, metadata !DIExpression()), !dbg !4855
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4869
  call void @llvm.dbg.value(metadata i8* %16, metadata !4854, metadata !DIExpression()), !dbg !4855
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4870
  call void @llvm.dbg.value(metadata i8* %17, metadata !4854, metadata !DIExpression()), !dbg !4855
  br label %18, !dbg !4871

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4855
  ret i8* %19, !dbg !4872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4873 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4877, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i8* %1, metadata !4878, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i8* %2, metadata !4879, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i8* %3, metadata !4880, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i32 0, metadata !4881, metadata !DIExpression()), !dbg !4884
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4885

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4886
  call void @llvm.dbg.value(metadata i32 %9, metadata !4881, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i8* %8, metadata !4879, metadata !DIExpression()), !dbg !4884
  %10 = icmp ult i8* %8, %3, !dbg !4887
  br i1 %10, label %11, label %13, !dbg !4888

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4889
  br label %17, !dbg !4888

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4890

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4891
  %16 = icmp eq i8 %15, 0, !dbg !4890
  br i1 %16, label %24, label %17, !dbg !4885

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4889
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4892
  call void @llvm.dbg.value(metadata i8* %19, metadata !4879, metadata !DIExpression()), !dbg !4884
  %20 = zext i8 %18 to i32, !dbg !4893
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4894
  call void @llvm.dbg.value(metadata i32 %21, metadata !4882, metadata !DIExpression()), !dbg !4895
  %22 = icmp slt i32 %21, 0, !dbg !4896
  %23 = add i32 %9, 1, !dbg !4898
  call void @llvm.dbg.value(metadata i32 undef, metadata !4881, metadata !DIExpression()), !dbg !4884
  br i1 %22, label %24, label %7, !llvm.loop !4899

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4884
  ret i32 %25, !dbg !4901
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4902 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4906, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4907, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %2, metadata !4908, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %3, metadata !4909, metadata !DIExpression()), !dbg !4916
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4917
  %6 = load i8, i8* %5, align 1, !dbg !4917
  %7 = zext i8 %6 to i32, !dbg !4918
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !4919
  %9 = icmp eq i32 %8, 0, !dbg !4919
  call void @llvm.dbg.value(metadata i1 %9, metadata !4910, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4916
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !4920
  call void @llvm.dbg.value(metadata i32 %10, metadata !4911, metadata !DIExpression()), !dbg !4916
  %11 = ptrtoint i8* %3 to i32, !dbg !4921
  %12 = ptrtoint i8* %2 to i32, !dbg !4921
  %13 = sub i32 %11, %12, !dbg !4921
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4922
  call void @llvm.dbg.value(metadata i8* %14, metadata !4913, metadata !DIExpression()), !dbg !4916
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4923

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4916
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4906, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %18, metadata !4913, metadata !DIExpression()), !dbg !4916
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4924
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %25, metadata !4914, metadata !DIExpression()), !dbg !4926
  %26 = icmp ult i32 %25, 10, !dbg !4927
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4928
  %28 = add i32 %27, %25, !dbg !4926
  %29 = trunc i32 %28 to i8, !dbg !4928
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4929
  call void @llvm.dbg.value(metadata i8* %30, metadata !4913, metadata !DIExpression()), !dbg !4916
  store i8 %29, i8* %30, align 1, !dbg !4930
  call void @llvm.dbg.value(metadata i64 %22, metadata !4906, metadata !DIExpression()), !dbg !4916
  %31 = icmp uge i64 %19, %15, !dbg !4931
  %32 = icmp ugt i8* %30, %2, !dbg !4932
  %33 = and i1 %31, %32, !dbg !4932
  br i1 %33, label %17, label %34, !dbg !4933, !llvm.loop !4934

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4936
  %36 = load i24, i24* %35, align 4, !dbg !4936
  %37 = and i24 %36, 32, !dbg !4936
  %38 = icmp eq i24 %37, 0, !dbg !4936
  br i1 %38, label %44, label %39, !dbg !4938

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4939

40:                                               ; preds = %39
  br label %41, !dbg !4941

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4945
  store i24 %43, i24* %35, align 4, !dbg !4945
  br label %44, !dbg !4946

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4946
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4947 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4953, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i8* %1, metadata !4954, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.value(metadata i32 %2, metadata !4955, metadata !DIExpression()), !dbg !4956
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4957
  %5 = load i24, i24* %4, align 4, !dbg !4957
  %6 = lshr i24 %5, 11, !dbg !4957
  %7 = and i24 %6, 15, !dbg !4957
  %8 = zext i24 %7 to i32, !dbg !4957
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4958

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4959
  store i32 %2, i32* %10, align 4, !dbg !4961
  br label %28, !dbg !4962

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4963
  store i8 %12, i8* %1, align 1, !dbg !4964
  br label %28, !dbg !4965

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4966
  %15 = bitcast i8* %1 to i16*, !dbg !4967
  store i16 %14, i16* %15, align 2, !dbg !4968
  br label %28, !dbg !4969

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4970
  store i32 %2, i32* %17, align 4, !dbg !4971
  br label %28, !dbg !4972

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4973
  %20 = bitcast i8* %1 to i64*, !dbg !4974
  store i64 %19, i64* %20, align 8, !dbg !4975
  br label %28, !dbg !4976

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4977
  %23 = bitcast i8* %1 to i64*, !dbg !4978
  store i64 %22, i64* %23, align 8, !dbg !4979
  br label %28, !dbg !4980

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4981
  store i32 %2, i32* %25, align 4, !dbg !4982
  br label %28, !dbg !4983

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4984
  store i32 %2, i32* %27, align 4, !dbg !4985
  br label %28, !dbg !4986

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4987
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4991, metadata !DIExpression()), !dbg !4992
  %2 = add i32 %0, -65, !dbg !4993
  %3 = icmp ult i32 %2, 26, !dbg !4994
  %4 = zext i1 %3 to i32, !dbg !4994
  ret i32 %4, !dbg !4995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4996 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5000, metadata !DIExpression()), !dbg !5001
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5002

2:                                                ; preds = %1
  br label %4, !dbg !5003

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5005

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5006
  ret i32 %5, !dbg !5007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5008 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5010, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i8* %1, metadata !5011, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i8 1, metadata !5012, metadata !DIExpression()), !dbg !5013
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5014

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5012, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i8* %5, metadata !5011, metadata !DIExpression()), !dbg !5013
  %6 = load i8, i8* %5, align 1, !dbg !5015
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5017

7:                                                ; preds = %4
  br label %11, !dbg !5018

8:                                                ; preds = %4
  br label %11, !dbg !5020

9:                                                ; preds = %4
  br label %11, !dbg !5021

10:                                               ; preds = %4
  br label %11, !dbg !5022

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5023
  %14 = or i24 %13, %12, !dbg !5023
  store i24 %14, i24* %3, align 4, !dbg !5023
  call void @llvm.dbg.value(metadata i8 poison, metadata !5012, metadata !DIExpression()), !dbg !5013
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5011, metadata !DIExpression()), !dbg !5013
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5012, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i8* %15, metadata !5011, metadata !DIExpression()), !dbg !5013
  %17 = load i24, i24* %3, align 4, !dbg !5024
  %18 = and i24 %17, 68, !dbg !5026
  %19 = icmp eq i24 %18, 68, !dbg !5026
  br i1 %19, label %20, label %22, !dbg !5026

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5027
  store i24 %21, i24* %3, align 4, !dbg !5027
  br label %22, !dbg !5029

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5030
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5031 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5033, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %1, metadata !5034, metadata !DIExpression()), !dbg !5037
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5038
  %5 = load i24, i24* %4, align 4, !dbg !5039
  %6 = or i24 %5, 128, !dbg !5039
  store i24 %6, i24* %4, align 4, !dbg !5039
  call void @llvm.dbg.value(metadata i8* %1, metadata !5034, metadata !DIExpression()), !dbg !5037
  %7 = load i8, i8* %1, align 1, !dbg !5040
  %8 = icmp eq i8 %7, 42, !dbg !5042
  br i1 %8, label %9, label %12, !dbg !5043

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5044
  store i24 %10, i24* %4, align 4, !dbg !5044
  call void @llvm.dbg.value(metadata i8* %1, metadata !5034, metadata !DIExpression()), !dbg !5037
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5046
  call void @llvm.dbg.value(metadata i8* %11, metadata !5034, metadata !DIExpression()), !dbg !5037
  store i8* %11, i8** %3, align 4, !dbg !5046
  br label %29, !dbg !5047

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5035, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8** %3, metadata !5034, metadata !DIExpression(DW_OP_deref)), !dbg !5037
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5048
  call void @llvm.dbg.value(metadata i32 %13, metadata !5036, metadata !DIExpression()), !dbg !5037
  %14 = load i8*, i8** %3, align 4, !dbg !5049
  call void @llvm.dbg.value(metadata i8* %14, metadata !5034, metadata !DIExpression()), !dbg !5037
  %15 = icmp eq i8* %14, %1, !dbg !5051
  br i1 %15, label %29, label %16, !dbg !5052

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5053
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5055
  store i32 %13, i32* %18, align 4, !dbg !5056
  %19 = lshr i32 %13, 31, !dbg !5057
  %20 = lshr i24 %17, 1, !dbg !5058
  %21 = and i24 %20, 1, !dbg !5058
  %22 = zext i24 %21 to i32, !dbg !5058
  %23 = or i32 %19, %22, !dbg !5058
  %24 = trunc i32 %23 to i24, !dbg !5058
  %25 = shl nuw nsw i24 %24, 1, !dbg !5058
  %26 = and i24 %17, -131, !dbg !5058
  %27 = or i24 %26, 128, !dbg !5058
  %28 = or i24 %25, %27, !dbg !5058
  store i24 %28, i24* %4, align 4, !dbg !5058
  br label %29, !dbg !5059

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5037
  ret i8* %30, !dbg !5060
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5061 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5063, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %1, metadata !5064, metadata !DIExpression()), !dbg !5066
  %4 = load i8, i8* %1, align 1, !dbg !5067
  %5 = icmp eq i8 %4, 46, !dbg !5068
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5069
  %7 = load i24, i24* %6, align 4, !dbg !5070
  %8 = select i1 %5, i24 512, i24 0, !dbg !5070
  %9 = and i24 %7, -513, !dbg !5070
  %10 = or i24 %9, %8, !dbg !5070
  store i24 %10, i24* %6, align 4, !dbg !5070
  br i1 %5, label %11, label %32, !dbg !5071

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5064, metadata !DIExpression()), !dbg !5066
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5072
  call void @llvm.dbg.value(metadata i8* %12, metadata !5064, metadata !DIExpression()), !dbg !5066
  store i8* %12, i8** %3, align 4, !dbg !5072
  %13 = load i8, i8* %12, align 1, !dbg !5073
  %14 = icmp eq i8 %13, 42, !dbg !5075
  br i1 %14, label %15, label %18, !dbg !5076

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5077
  store i24 %16, i24* %6, align 4, !dbg !5077
  call void @llvm.dbg.value(metadata i8* %12, metadata !5064, metadata !DIExpression()), !dbg !5066
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5079
  call void @llvm.dbg.value(metadata i8* %17, metadata !5064, metadata !DIExpression()), !dbg !5066
  store i8* %17, i8** %3, align 4, !dbg !5079
  br label %32, !dbg !5080

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5064, metadata !DIExpression(DW_OP_deref)), !dbg !5066
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5081
  call void @llvm.dbg.value(metadata i32 %19, metadata !5065, metadata !DIExpression()), !dbg !5066
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5082
  store i32 %19, i32* %20, align 4, !dbg !5083
  %21 = lshr i32 %19, 31, !dbg !5084
  %22 = load i24, i24* %6, align 4, !dbg !5085
  %23 = lshr i24 %22, 1, !dbg !5085
  %24 = and i24 %23, 1, !dbg !5085
  %25 = zext i24 %24 to i32, !dbg !5085
  %26 = or i32 %21, %25, !dbg !5085
  %27 = trunc i32 %26 to i24, !dbg !5085
  %28 = shl nuw nsw i24 %27, 1, !dbg !5085
  %29 = and i24 %22, -3, !dbg !5085
  %30 = or i24 %28, %29, !dbg !5085
  store i24 %30, i24* %6, align 4, !dbg !5085
  %31 = load i8*, i8** %3, align 4, !dbg !5086
  call void @llvm.dbg.value(metadata i8* %31, metadata !5064, metadata !DIExpression()), !dbg !5066
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5066
  ret i8* %33, !dbg !5087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5088 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5090, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %1, metadata !5091, metadata !DIExpression()), !dbg !5092
  %3 = load i8, i8* %1, align 1, !dbg !5093
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5094

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5095
  call void @llvm.dbg.value(metadata i8* %5, metadata !5091, metadata !DIExpression()), !dbg !5092
  %6 = load i8, i8* %5, align 1, !dbg !5098
  %7 = icmp eq i8 %6, 104, !dbg !5099
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5100
  %9 = load i24, i24* %8, align 4, !dbg !5100
  %10 = and i24 %9, -30721, !dbg !5100
  br i1 %7, label %11, label %14, !dbg !5101

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5102
  store i24 %12, i24* %8, align 4, !dbg !5102
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5104
  call void @llvm.dbg.value(metadata i8* %13, metadata !5091, metadata !DIExpression()), !dbg !5092
  br label %56, !dbg !5105

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5106
  store i24 %15, i24* %8, align 4, !dbg !5106
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5108
  call void @llvm.dbg.value(metadata i8* %17, metadata !5091, metadata !DIExpression()), !dbg !5092
  %18 = load i8, i8* %17, align 1, !dbg !5110
  %19 = icmp eq i8 %18, 108, !dbg !5111
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5112
  %21 = load i24, i24* %20, align 4, !dbg !5112
  %22 = and i24 %21, -30721, !dbg !5112
  br i1 %19, label %23, label %26, !dbg !5113

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5114
  store i24 %24, i24* %20, align 4, !dbg !5114
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5116
  call void @llvm.dbg.value(metadata i8* %25, metadata !5091, metadata !DIExpression()), !dbg !5092
  br label %56, !dbg !5117

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5118
  store i24 %27, i24* %20, align 4, !dbg !5118
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5120
  %30 = load i24, i24* %29, align 4, !dbg !5121
  %31 = and i24 %30, -30721, !dbg !5121
  %32 = or i24 %31, 10240, !dbg !5121
  store i24 %32, i24* %29, align 4, !dbg !5121
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5122
  call void @llvm.dbg.value(metadata i8* %33, metadata !5091, metadata !DIExpression()), !dbg !5092
  br label %56, !dbg !5123

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5124
  %36 = load i24, i24* %35, align 4, !dbg !5125
  %37 = and i24 %36, -30721, !dbg !5125
  %38 = or i24 %37, 12288, !dbg !5125
  store i24 %38, i24* %35, align 4, !dbg !5125
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5126
  call void @llvm.dbg.value(metadata i8* %39, metadata !5091, metadata !DIExpression()), !dbg !5092
  br label %56, !dbg !5127

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5128
  %42 = load i24, i24* %41, align 4, !dbg !5129
  %43 = and i24 %42, -30721, !dbg !5129
  %44 = or i24 %43, 14336, !dbg !5129
  store i24 %44, i24* %41, align 4, !dbg !5129
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5130
  call void @llvm.dbg.value(metadata i8* %45, metadata !5091, metadata !DIExpression()), !dbg !5092
  br label %56, !dbg !5131

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5132
  %48 = load i24, i24* %47, align 4, !dbg !5133
  %49 = and i24 %48, -30723, !dbg !5133
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5134
  call void @llvm.dbg.value(metadata i8* %50, metadata !5091, metadata !DIExpression()), !dbg !5092
  %51 = or i24 %49, 16386, !dbg !5135
  store i24 %51, i24* %47, align 4, !dbg !5135
  br label %56, !dbg !5136

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5137
  %54 = load i24, i24* %53, align 4, !dbg !5138
  %55 = and i24 %54, -30721, !dbg !5138
  store i24 %55, i24* %53, align 4, !dbg !5138
  br label %56, !dbg !5139

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5091, metadata !DIExpression()), !dbg !5092
  ret i8* %57, !dbg !5140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5141 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5143, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.value(metadata i8* %1, metadata !5144, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.value(metadata i8 0, metadata !5145, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.value(metadata i8* %1, metadata !5144, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5148
  %3 = load i8, i8* %1, align 1, !dbg !5149
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5150
  store i8 %3, i8* %4, align 1, !dbg !5151
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5152

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5153

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5154
  %9 = load i24, i24* %8, align 4, !dbg !5154
  %10 = and i24 %9, -458753, !dbg !5154
  %11 = or i24 %10, %7, !dbg !5154
  call void @llvm.dbg.label(metadata !5146), !dbg !5155
  %12 = and i24 %9, 30720, !dbg !5156
  %13 = icmp eq i24 %12, 16384, !dbg !5156
  %14 = zext i1 %13 to i24, !dbg !5158
  %15 = or i24 %11, %14, !dbg !5158
  %16 = icmp eq i8 %3, 99, !dbg !5159
  br i1 %16, label %17, label %43, !dbg !5161

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5162
  %19 = icmp ne i24 %18, 0, !dbg !5162
  call void @llvm.dbg.value(metadata i1 %19, metadata !5145, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5148
  br label %43, !dbg !5164

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5165
  %22 = load i24, i24* %21, align 4, !dbg !5166
  %23 = and i24 %22, -458753, !dbg !5166
  %24 = or i24 %23, 262144, !dbg !5166
  call void @llvm.dbg.value(metadata i8 1, metadata !5145, metadata !DIExpression()), !dbg !5148
  br label %43, !dbg !5167

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5170
  %27 = load i24, i24* %26, align 4, !dbg !5171
  %28 = and i24 %27, -458753, !dbg !5171
  %29 = or i24 %28, 196608, !dbg !5171
  %30 = and i24 %27, 30720, !dbg !5172
  %31 = icmp eq i24 %30, 16384, !dbg !5172
  br label %43, !dbg !5174

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5175
  %34 = load i24, i24* %33, align 4, !dbg !5176
  %35 = and i24 %34, -458753, !dbg !5176
  %36 = or i24 %35, 196608, !dbg !5176
  %37 = and i24 %34, 30720, !dbg !5177
  %38 = icmp ne i24 %37, 0, !dbg !5177
  br label %43, !dbg !5179

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5180
  %41 = load i24, i24* %40, align 4, !dbg !5181
  %42 = or i24 %41, 1, !dbg !5181
  br label %43, !dbg !5182

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5183
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5184
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5185
  call void @llvm.dbg.value(metadata i8* %48, metadata !5144, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.value(metadata i8 poison, metadata !5145, metadata !DIExpression()), !dbg !5148
  %49 = lshr i24 %44, 1, !dbg !5183
  %50 = and i24 %49, 1, !dbg !5183
  %51 = zext i24 %50 to i32, !dbg !5183
  %52 = or i32 %51, %47, !dbg !5183
  %53 = trunc i32 %52 to i24, !dbg !5183
  %54 = shl nuw nsw i24 %53, 1, !dbg !5183
  %55 = and i24 %44, -3, !dbg !5183
  %56 = or i24 %54, %55, !dbg !5183
  store i24 %56, i24* %46, align 4, !dbg !5183
  ret i8* %48, !dbg !5186
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5187 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5192, metadata !DIExpression()), !dbg !5195
  %2 = load i8*, i8** %0, align 4, !dbg !5196
  call void @llvm.dbg.value(metadata i8* %2, metadata !5193, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i32 0, metadata !5194, metadata !DIExpression()), !dbg !5195
  %3 = load i8, i8* %2, align 1, !dbg !5197
  %4 = zext i8 %3 to i32, !dbg !5198
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5199
  %6 = icmp eq i32 %5, 0, !dbg !5200
  br i1 %6, label %19, label %7, !dbg !5200

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5194, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i8* %10, metadata !5193, metadata !DIExpression()), !dbg !5195
  %11 = mul i32 %9, 10, !dbg !5201
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5203
  call void @llvm.dbg.value(metadata i8* %12, metadata !5193, metadata !DIExpression()), !dbg !5195
  %13 = add i32 %11, -48, !dbg !5204
  %14 = add i32 %13, %8, !dbg !5205
  call void @llvm.dbg.value(metadata i32 %14, metadata !5194, metadata !DIExpression()), !dbg !5195
  %15 = load i8, i8* %12, align 1, !dbg !5197
  %16 = zext i8 %15 to i32, !dbg !5198
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5199
  %18 = icmp eq i32 %17, 0, !dbg !5200
  br i1 %18, label %19, label %7, !dbg !5200, !llvm.loop !5206

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5195
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5195
  store i8* %20, i8** %0, align 4, !dbg !5208
  ret i32 %21, !dbg !5209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5212, metadata !DIExpression()), !dbg !5213
  %2 = add i32 %0, -48, !dbg !5214
  %3 = icmp ult i32 %2, 10, !dbg !5215
  %4 = zext i1 %3 to i32, !dbg !5215
  ret i32 %4, !dbg !5216
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5217 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5219, !srcloc !5220
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5221, !srcloc !5222
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !5223, !srcloc !5224
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5225, !srcloc !5226
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5227, !srcloc !5228
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5229, !srcloc !5230
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5231, !srcloc !5232
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5233, !srcloc !5234
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5235, !srcloc !5236
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5237, !srcloc !5238
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5239, !srcloc !5240
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5241, !srcloc !5242
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5243, !srcloc !5244
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5245, !srcloc !5246
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5247, !srcloc !5248
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5249, !srcloc !5250
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #24, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #24, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #24, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #24, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #24, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS\0A\09.equ\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,1\0A\09.type\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,%object", ""() #24, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #24, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR\0A\09.equ\09CONFIG_CONSOLE_GETCHAR,1\0A\09.type\09CONFIG_CONSOLE_GETCHAR,%object", ""() #24, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,64\0A\09.type\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,%object", ""() #24, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,512\0A\09.type\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,%object", ""() #24, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !5777, !srcloc !5778
  ret void, !dbg !5779
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5780 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5782, metadata !DIExpression()), !dbg !5784
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5785
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5786
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5787, !srcloc !5796
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5787
  call void @llvm.dbg.value(metadata i32 %3, metadata !5793, metadata !DIExpression()) #24, !dbg !5797
  call void @llvm.dbg.value(metadata i32 undef, metadata !5794, metadata !DIExpression()) #24, !dbg !5797
  call void @llvm.dbg.value(metadata i32 %3, metadata !5783, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i32 %3, metadata !5798, metadata !DIExpression()) #24, !dbg !5803
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !5805, !srcloc !5806
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5807
  ret i32 0, !dbg !5808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5809 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5811
  %2 = or i32 %1, 512, !dbg !5811
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5811
  ret void, !dbg !5812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5813 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5814
  %2 = or i32 %1, 1024, !dbg !5814
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5814
  ret void, !dbg !5815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5816 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5818, metadata !DIExpression()), !dbg !5819
  ret i32 0, !dbg !5820
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_write(%struct.tty_serial* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5821 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5867, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i8* %1, metadata !5868, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 %2, metadata !5869, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i8* %1, metadata !5870, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 0, metadata !5871, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 0, metadata !5872, metadata !DIExpression()), !dbg !5873
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5874
  %5 = load i32, i32* %4, align 4, !dbg !5874
  %6 = icmp eq i32 %5, 0, !dbg !5876
  %7 = icmp eq i32 %2, 0, !dbg !5873
  br i1 %6, label %9, label %8, !dbg !5877

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5871, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i8* %1, metadata !5870, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 %2, metadata !5869, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 %2, metadata !5869, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5873
  br i1 %7, label %37, label %20, !dbg !5878

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !5870, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 %2, metadata !5869, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 %2, metadata !5869, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5873
  br i1 %7, label %37, label %10, !dbg !5879

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %12, !dbg !5879

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %1, %10 ], [ %17, %12 ]
  %14 = phi i32 [ %2, %10 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5870, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 %14, metadata !5869, metadata !DIExpression()), !dbg !5873
  %15 = add i32 %14, -1, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %15, metadata !5869, metadata !DIExpression()), !dbg !5873
  %16 = load %struct.device*, %struct.device** %11, align 4, !dbg !5882
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5884
  call void @llvm.dbg.value(metadata i8* %17, metadata !5870, metadata !DIExpression()), !dbg !5873
  %18 = load i8, i8* %13, align 1, !dbg !5885
  tail call fastcc void @uart_poll_out(%struct.device* noundef %16, i8 noundef zeroext %18) #26, !dbg !5886
  call void @llvm.dbg.value(metadata i32 %15, metadata !5869, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5873
  %19 = icmp eq i32 %15, 0, !dbg !5879
  br i1 %19, label %37, label %12, !dbg !5879, !llvm.loop !5887

20:                                               ; preds = %8, %33
  %21 = phi i32 [ %24, %33 ], [ %2, %8 ]
  %22 = phi i32 [ %35, %33 ], [ 0, %8 ]
  %23 = phi i8* [ %34, %33 ], [ %1, %8 ]
  %24 = add i32 %21, -1, !dbg !5889
  call void @llvm.dbg.value(metadata i32 %22, metadata !5871, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i8* %23, metadata !5870, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i8* %23, metadata !5870, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5873
  %25 = load i8, i8* %23, align 1, !dbg !5890
  %26 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %25) #26, !dbg !5892
  call void @llvm.dbg.value(metadata i32 %26, metadata !5872, metadata !DIExpression()), !dbg !5873
  %27 = icmp slt i32 %26, 0, !dbg !5893
  br i1 %27, label %28, label %33, !dbg !5895

28:                                               ; preds = %20
  %29 = icmp eq i32 %22, 0, !dbg !5896
  br i1 %29, label %30, label %37, !dbg !5899

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %26, !dbg !5900
  %32 = tail call fastcc i32* @z_errno() #26, !dbg !5902
  store i32 %31, i32* %32, align 4, !dbg !5903
  br label %37, !dbg !5904

33:                                               ; preds = %20
  %34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5905
  call void @llvm.dbg.value(metadata i8* %34, metadata !5870, metadata !DIExpression()), !dbg !5873
  %35 = add nuw i32 %22, 1, !dbg !5906
  call void @llvm.dbg.value(metadata i32 %35, metadata !5871, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 %24, metadata !5869, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.value(metadata i32 %24, metadata !5869, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5873
  %36 = icmp eq i32 %24, 0, !dbg !5878
  br i1 %36, label %37, label %20, !dbg !5878, !llvm.loop !5907

37:                                               ; preds = %33, %12, %8, %9, %28, %30
  %38 = phi i32 [ %26, %30 ], [ %22, %28 ], [ 0, %9 ], [ 0, %8 ], [ %2, %12 ], [ %2, %33 ], !dbg !5873
  ret i32 %38, !dbg !5909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5910 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5913, metadata !DIExpression()), !dbg !5915
  call void @llvm.dbg.value(metadata i8 %1, metadata !5914, metadata !DIExpression()), !dbg !5915
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5916, !srcloc !5918
  tail call fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) #26, !dbg !5919
  ret void, !dbg !5920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5921 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5925, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata i8 %1, metadata !5926, metadata !DIExpression()), !dbg !5930
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !5931
  %4 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !5932
  br i1 %4, label %14, label %5, !dbg !5932

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !5933
  %7 = load i32, i32* %6, align 4, !dbg !5933
  %8 = icmp eq i32 %7, -1, !dbg !5933
  br i1 %8, label %14, label %9, !dbg !5933

9:                                                ; preds = %5
  %10 = icmp sgt i32 %7, 0, !dbg !5933
  %11 = select i1 %10, i32 %7, i32 0, !dbg !5933
  %12 = zext i32 %11 to i64, !dbg !5933
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #26, !dbg !5933
  br label %14, !dbg !5933

14:                                               ; preds = %5, %2, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ], [ -1, %5 ], !dbg !5930
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !5934
  %17 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %3, [1 x i64] %16) #26, !dbg !5934
  call void @llvm.dbg.value(metadata i32 %17, metadata !5929, metadata !DIExpression()), !dbg !5930
  %18 = icmp slt i32 %17, 0, !dbg !5935
  br i1 %18, label %42, label %19, !dbg !5937

19:                                               ; preds = %14
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5938, !srcloc !5944
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !5938
  call void @llvm.dbg.value(metadata i32 %21, metadata !5941, metadata !DIExpression()) #24, !dbg !5945
  call void @llvm.dbg.value(metadata i32 undef, metadata !5942, metadata !DIExpression()) #24, !dbg !5945
  call void @llvm.dbg.value(metadata i32 %21, metadata !5927, metadata !DIExpression()), !dbg !5930
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !5946
  %23 = load i16, i16* %22, align 2, !dbg !5946
  %24 = zext i16 %23 to i32, !dbg !5947
  %25 = add nuw nsw i32 %24, 1, !dbg !5948
  call void @llvm.dbg.value(metadata i32 %25, metadata !5928, metadata !DIExpression()), !dbg !5930
  %26 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5949
  %27 = load i32, i32* %26, align 4, !dbg !5949
  %28 = icmp ult i32 %25, %27, !dbg !5951
  %29 = select i1 %28, i32 %25, i32 0, !dbg !5952
  call void @llvm.dbg.value(metadata i32 %29, metadata !5928, metadata !DIExpression()), !dbg !5930
  %30 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !5953
  %31 = load i16, i16* %30, align 4, !dbg !5953
  %32 = zext i16 %31 to i32, !dbg !5955
  %33 = icmp eq i32 %29, %32, !dbg !5956
  br i1 %33, label %34, label %35, !dbg !5957

34:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %21, metadata !5958, metadata !DIExpression()) #24, !dbg !5961
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5964, !srcloc !5965
  br label %42, !dbg !5966

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !5967
  %37 = load i8*, i8** %36, align 4, !dbg !5967
  %38 = getelementptr inbounds i8, i8* %37, i32 %24, !dbg !5968
  store i8 %1, i8* %38, align 1, !dbg !5969
  %39 = trunc i32 %29 to i16, !dbg !5970
  store i16 %39, i16* %22, align 2, !dbg !5971
  call void @llvm.dbg.value(metadata i32 %21, metadata !5958, metadata !DIExpression()) #24, !dbg !5972
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5974, !srcloc !5965
  %40 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !5975
  %41 = load %struct.device*, %struct.device** %40, align 4, !dbg !5975
  tail call fastcc void @uart_irq_tx_enable(%struct.device* noundef %41) #26, !dbg !5976
  br label %42, !dbg !5977

42:                                               ; preds = %14, %35, %34
  %43 = phi i32 [ -28, %34 ], [ 0, %35 ], [ %17, %14 ], !dbg !5930
  ret i32 %43, !dbg !5978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !5979 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5983, !srcloc !5985
  %1 = tail call i32* @z_impl_z_errno() #25, !dbg !5986
  ret i32* %1, !dbg !5987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !5988 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5993, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i64 %0, metadata !5995, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i32 1000, metadata !6000, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i32 10000, metadata !6001, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8 1, metadata !6002, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8 0, metadata !6003, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8 1, metadata !6004, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8 0, metadata !6005, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8 1, metadata !6006, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8 0, metadata !6007, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i64 0, metadata !6008, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i64 0, metadata !6008, metadata !DIExpression()), !dbg !6012
  %2 = mul i64 %0, 10, !dbg !6014
  ret i64 %2, !dbg !6020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !6021 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6031, metadata !DIExpression()), !dbg !6032
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6030, metadata !DIExpression()), !dbg !6032
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6033, !srcloc !6035
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #25, !dbg !6036
  ret i32 %3, !dbg !6037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6038 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6040, metadata !DIExpression()), !dbg !6041
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6042, !srcloc !6044
  tail call fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) #26, !dbg !6045
  ret void, !dbg !6046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6047 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6049, metadata !DIExpression()), !dbg !6051
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6052
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6052
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6052
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6050, metadata !DIExpression()), !dbg !6051
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 7, !dbg !6053
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6053
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6055
  br i1 %7, label %9, label %8, !dbg !6056

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6057
  br label %9, !dbg !6059

9:                                                ; preds = %8, %1
  ret void, !dbg !6060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6061 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6063, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i8 %1, metadata !6064, metadata !DIExpression()), !dbg !6066
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6067
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6067
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6067
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6065, metadata !DIExpression()), !dbg !6066
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 1, !dbg !6068
  %7 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %6, align 4, !dbg !6068
  tail call void %7(%struct.device* noundef %0, i8 noundef zeroext %1) #25, !dbg !6069
  ret void, !dbg !6070
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_read(%struct.tty_serial* noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6071 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6075, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i8* %1, metadata !6076, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %2, metadata !6077, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i8* %1, metadata !6078, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 0, metadata !6079, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 0, metadata !6080, metadata !DIExpression()), !dbg !6081
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6082
  %5 = load i32, i32* %4, align 4, !dbg !6082
  %6 = icmp eq i32 %5, 0, !dbg !6084
  br i1 %6, label %9, label %7, !dbg !6085

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !6079, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i8* %1, metadata !6078, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %2, metadata !6077, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %2, metadata !6077, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6081
  %8 = icmp eq i32 %2, 0, !dbg !6086
  br i1 %8, label %28, label %11, !dbg !6086

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @tty_read_unbuf(%struct.tty_serial* noundef nonnull %0, i8* noundef %1, i32 noundef %2) #26, !dbg !6087
  br label %28, !dbg !6089

11:                                               ; preds = %7, %23
  %12 = phi i32 [ %15, %23 ], [ %2, %7 ]
  %13 = phi i32 [ %26, %23 ], [ 0, %7 ]
  %14 = phi i8* [ %25, %23 ], [ %1, %7 ]
  %15 = add i32 %12, -1, !dbg !6090
  call void @llvm.dbg.value(metadata i32 %13, metadata !6079, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i8* %14, metadata !6078, metadata !DIExpression()), !dbg !6081
  %16 = tail call fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) #26, !dbg !6091
  call void @llvm.dbg.value(metadata i32 %16, metadata !6080, metadata !DIExpression()), !dbg !6081
  %17 = icmp slt i32 %16, 0, !dbg !6093
  br i1 %17, label %18, label %23, !dbg !6095

18:                                               ; preds = %11
  %19 = icmp eq i32 %13, 0, !dbg !6096
  br i1 %19, label %20, label %28, !dbg !6099

20:                                               ; preds = %18
  %21 = sub nsw i32 0, %16, !dbg !6100
  %22 = tail call fastcc i32* @z_errno() #26, !dbg !6102
  store i32 %21, i32* %22, align 4, !dbg !6103
  br label %28, !dbg !6104

23:                                               ; preds = %11
  %24 = trunc i32 %16 to i8, !dbg !6105
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6106
  call void @llvm.dbg.value(metadata i8* %25, metadata !6078, metadata !DIExpression()), !dbg !6081
  store i8 %24, i8* %14, align 1, !dbg !6107
  %26 = add nuw i32 %13, 1, !dbg !6108
  call void @llvm.dbg.value(metadata i32 %26, metadata !6079, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %15, metadata !6077, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %15, metadata !6077, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6081
  %27 = icmp eq i32 %15, 0, !dbg !6086
  br i1 %27, label %28, label %11, !dbg !6086, !llvm.loop !6109

28:                                               ; preds = %23, %7, %18, %20, %9
  %29 = phi i32 [ %10, %9 ], [ %16, %20 ], [ %13, %18 ], [ 0, %7 ], [ %2, %23 ], !dbg !6081
  ret i32 %29, !dbg !6111
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_read_unbuf(%struct.tty_serial* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #1 !dbg !6112 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6114, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i8* %1, metadata !6115, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 %2, metadata !6116, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i8* %1, metadata !6117, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 0, metadata !6118, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 0, metadata !6119, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 undef, metadata !6120, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 0, metadata !6118, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i8* %1, metadata !6117, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 %2, metadata !6116, metadata !DIExpression()), !dbg !6123
  %5 = icmp eq i32 %2, 0, !dbg !6124
  br i1 %5, label %48, label %6, !dbg !6124

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6125
  %8 = load i32, i32* %7, align 4, !dbg !6125
  call void @llvm.dbg.value(metadata i32 %8, metadata !6120, metadata !DIExpression()), !dbg !6123
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %10, !dbg !6124

10:                                               ; preds = %6, %46
  %11 = phi i32 [ %8, %6 ], [ %39, %46 ]
  %12 = phi i32 [ 0, %6 ], [ %31, %46 ]
  %13 = phi i8* [ %1, %6 ], [ %32, %46 ]
  %14 = phi i32 [ %2, %6 ], [ %33, %46 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6120, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 %12, metadata !6118, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i8* %13, metadata !6117, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 %14, metadata !6116, metadata !DIExpression()), !dbg !6123
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6126
  %15 = load %struct.device*, %struct.device** %9, align 4, !dbg !6127
  call void @llvm.dbg.value(metadata i8* %4, metadata !6121, metadata !DIExpression(DW_OP_deref)), !dbg !6128
  %16 = call fastcc i32 @uart_poll_in(%struct.device* noundef %15, i8* noundef nonnull %4) #26, !dbg !6129
  call void @llvm.dbg.value(metadata i32 %16, metadata !6119, metadata !DIExpression()), !dbg !6123
  %17 = icmp slt i32 %16, -1, !dbg !6130
  br i1 %17, label %18, label %22, !dbg !6132

18:                                               ; preds = %10
  %19 = icmp eq i32 %12, 0, !dbg !6133
  br i1 %19, label %20, label %44, !dbg !6136

20:                                               ; preds = %18
  %21 = call fastcc i32* @z_errno() #26, !dbg !6137
  store i32 %16, i32* %21, align 4, !dbg !6139
  call void @llvm.dbg.value(metadata i32 %39, metadata !6120, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 undef, metadata !6118, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i8* %32, metadata !6117, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 %33, metadata !6116, metadata !DIExpression()), !dbg !6123
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6140
  br label %48

22:                                               ; preds = %10
  %23 = icmp eq i32 %16, 0, !dbg !6141
  br i1 %23, label %24, label %30, !dbg !6143

24:                                               ; preds = %22
  %25 = load i8, i8* %4, align 1, !dbg !6144
  call void @llvm.dbg.value(metadata i8 %25, metadata !6121, metadata !DIExpression()), !dbg !6128
  %26 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6146
  call void @llvm.dbg.value(metadata i8* %26, metadata !6117, metadata !DIExpression()), !dbg !6123
  store i8 %25, i8* %13, align 1, !dbg !6147
  %27 = add i32 %12, 1, !dbg !6148
  call void @llvm.dbg.value(metadata i32 %27, metadata !6118, metadata !DIExpression()), !dbg !6123
  %28 = add i32 %14, -1, !dbg !6149
  call void @llvm.dbg.value(metadata i32 %28, metadata !6116, metadata !DIExpression()), !dbg !6123
  %29 = icmp eq i32 %28, 0, !dbg !6150
  br i1 %29, label %44, label %30, !dbg !6152

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %27, %24 ], [ %12, %22 ]
  %32 = phi i8* [ %26, %24 ], [ %13, %22 ]
  %33 = phi i32 [ %28, %24 ], [ %14, %22 ]
  %34 = icmp eq i32 %11, -1, !dbg !6153
  br i1 %34, label %38, label %35, !dbg !6154

35:                                               ; preds = %30
  %36 = add i32 %11, -1, !dbg !6155
  call void @llvm.dbg.value(metadata i32 %36, metadata !6120, metadata !DIExpression()), !dbg !6123
  %37 = icmp eq i32 %11, 0, !dbg !6156
  br i1 %37, label %44, label %38, !dbg !6157

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %36, %35 ], [ -1, %30 ], !dbg !6123
  call void @llvm.dbg.value(metadata i32 %39, metadata !6120, metadata !DIExpression()), !dbg !6123
  %40 = icmp eq i32 %16, -1, !dbg !6158
  br i1 %40, label %41, label %46, !dbg !6160

41:                                               ; preds = %38
  %42 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1) #26, !dbg !6161
  %43 = insertvalue [1 x i64] poison, i64 %42, 0, !dbg !6163
  call fastcc void @k_sleep([1 x i64] %43) #26, !dbg !6163
  br label %46, !dbg !6164

44:                                               ; preds = %35, %24, %18
  %45 = phi i32 [ %12, %18 ], [ %31, %35 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !6120, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 undef, metadata !6118, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i8* %32, metadata !6117, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 %33, metadata !6116, metadata !DIExpression()), !dbg !6123
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6140
  br label %48

46:                                               ; preds = %38, %41
  call void @llvm.dbg.value(metadata i32 %39, metadata !6120, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 %31, metadata !6118, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i8* %32, metadata !6117, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 %33, metadata !6116, metadata !DIExpression()), !dbg !6123
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6140
  %47 = icmp eq i32 %33, 0, !dbg !6124
  br i1 %47, label %48, label %10, !dbg !6124

48:                                               ; preds = %46, %3, %44, %20
  %49 = phi i32 [ -1, %20 ], [ %45, %44 ], [ 0, %3 ], [ %31, %46 ], !dbg !6123
  ret i32 %49, !dbg !6165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) unnamed_addr #1 !dbg !6166 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6170, metadata !DIExpression()), !dbg !6174
  %2 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6175
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6176
  %4 = load i32, i32* %3, align 4, !dbg !6176
  %5 = icmp eq i32 %4, -1, !dbg !6176
  br i1 %5, label %11, label %6, !dbg !6176

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0, !dbg !6176
  %8 = select i1 %7, i32 %4, i32 0, !dbg !6176
  %9 = zext i32 %8 to i64, !dbg !6176
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %9) #26, !dbg !6176
  br label %11, !dbg !6176

11:                                               ; preds = %1, %6
  %12 = phi i64 [ %10, %6 ], [ -1, %1 ], !dbg !6176
  %13 = insertvalue [1 x i64] poison, i64 %12, 0, !dbg !6177
  %14 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %2, [1 x i64] %13) #26, !dbg !6177
  call void @llvm.dbg.value(metadata i32 %14, metadata !6173, metadata !DIExpression()), !dbg !6174
  %15 = icmp slt i32 %14, 0, !dbg !6178
  br i1 %15, label %33, label %16, !dbg !6180

16:                                               ; preds = %11
  %17 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6181, !srcloc !5944
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !6181
  call void @llvm.dbg.value(metadata i32 %18, metadata !5941, metadata !DIExpression()) #24, !dbg !6183
  call void @llvm.dbg.value(metadata i32 undef, metadata !5942, metadata !DIExpression()) #24, !dbg !6183
  call void @llvm.dbg.value(metadata i32 %18, metadata !6171, metadata !DIExpression()), !dbg !6174
  %19 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6184
  %20 = load i8*, i8** %19, align 4, !dbg !6184
  %21 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6185
  %22 = load i16, i16* %21, align 4, !dbg !6186
  %23 = add i16 %22, 1, !dbg !6186
  store i16 %23, i16* %21, align 4, !dbg !6186
  %24 = zext i16 %22 to i32, !dbg !6187
  %25 = getelementptr inbounds i8, i8* %20, i32 %24, !dbg !6187
  %26 = load i8, i8* %25, align 1, !dbg !6187
  call void @llvm.dbg.value(metadata i8 %26, metadata !6172, metadata !DIExpression()), !dbg !6174
  %27 = zext i16 %23 to i32, !dbg !6188
  %28 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6190
  %29 = load i32, i32* %28, align 4, !dbg !6190
  %30 = icmp ugt i32 %29, %27, !dbg !6191
  %31 = select i1 %30, i16 %23, i16 0, !dbg !6192
  store i16 %31, i16* %21, align 4, !dbg !6174
  call void @llvm.dbg.value(metadata i32 %18, metadata !5958, metadata !DIExpression()) #24, !dbg !6193
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !6195, !srcloc !5965
  %32 = zext i8 %26 to i32, !dbg !6196
  br label %33, !dbg !6197

33:                                               ; preds = %11, %16
  %34 = phi i32 [ %32, %16 ], [ %14, %11 ], !dbg !6174
  ret i32 %34, !dbg !6198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6199 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6201, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %1, metadata !6202, metadata !DIExpression()), !dbg !6203
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6204, !srcloc !6206
  %3 = tail call fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !6207
  ret i32 %3, !dbg !6208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !6209 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6213, metadata !DIExpression()), !dbg !6214
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6215, !srcloc !6217
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !6218
  ret void, !dbg !6219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6220 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6222, metadata !DIExpression()), !dbg !6225
  call void @llvm.dbg.value(metadata i8* %1, metadata !6223, metadata !DIExpression()), !dbg !6225
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6226
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6226
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6226
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6224, metadata !DIExpression()), !dbg !6225
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 0, !dbg !6227
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !6227
  %8 = icmp eq i32 (%struct.device*, i8*)* %7, null, !dbg !6229
  br i1 %8, label %11, label %9, !dbg !6230

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1) #25, !dbg !6231
  br label %11, !dbg !6232

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6225
  ret i32 %12, !dbg !6233
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_init(%struct.tty_serial* noundef %0, %struct.device* noundef %1) local_unnamed_addr #1 !dbg !6234 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6238, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !6239, metadata !DIExpression()), !dbg !6240
  %3 = icmp eq %struct.device* %1, null, !dbg !6241
  br i1 %3, label %17, label %4, !dbg !6243

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6244
  store %struct.device* %1, %struct.device** %5, align 4, !dbg !6245
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6246
  store i8* null, i8** %6, align 4, !dbg !6247
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6248
  store i32 0, i32* %7, align 4, !dbg !6249
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6250
  store i8* null, i8** %8, align 4, !dbg !6251
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6252
  store i32 0, i32* %9, align 4, !dbg !6253
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6254
  store i16 0, i16* %10, align 2, !dbg !6255
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6256
  store i16 0, i16* %11, align 4, !dbg !6257
  %12 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6258
  store i16 0, i16* %12, align 2, !dbg !6259
  %13 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6260
  store i16 0, i16* %13, align 4, !dbg !6261
  %14 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6262
  store i32 -1, i32* %14, align 4, !dbg !6263
  %15 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6264
  store i32 -1, i32* %15, align 4, !dbg !6265
  %16 = bitcast %struct.tty_serial* %0 to i8*, !dbg !6266
  tail call fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef nonnull %1, i8* noundef %16) #26, !dbg !6267
  br label %17, !dbg !6268

17:                                               ; preds = %2, %4
  %18 = phi i32 [ 0, %4 ], [ -19, %2 ], !dbg !6240
  ret i32 %18, !dbg !6269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6270 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6272, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @tty_uart_isr, metadata !6273, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata i8* %1, metadata !6274, metadata !DIExpression()), !dbg !6276
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6277
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6277
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6277
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6275, metadata !DIExpression()), !dbg !6276
  %6 = icmp eq %struct.uart_driver_api* %5, null, !dbg !6278
  br i1 %6, label %12, label %7, !dbg !6280

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 18, !dbg !6281
  %9 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %8, align 4, !dbg !6281
  %10 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %9, null, !dbg !6282
  br i1 %10, label %12, label %11, !dbg !6283

11:                                               ; preds = %7
  tail call void %9(%struct.device* noundef nonnull %0, void (%struct.device*, i8*)* noundef nonnull @tty_uart_isr, i8* noundef %1) #25, !dbg !6284
  br label %12, !dbg !6286

12:                                               ; preds = %11, %7, %2
  ret void, !dbg !6287
}

; Function Attrs: noinline nounwind optsize
define internal void @tty_uart_isr(%struct.device* noundef %0, i8* noundef %1) #1 !dbg !6288 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6290, metadata !DIExpression()), !dbg !6296
  call void @llvm.dbg.value(metadata i8* %1, metadata !6291, metadata !DIExpression()), !dbg !6296
  %4 = bitcast i8* %1 to %struct.tty_serial*, !dbg !6297
  call void @llvm.dbg.value(metadata %struct.tty_serial* %4, metadata !6292, metadata !DIExpression()), !dbg !6296
  tail call fastcc void @uart_irq_update(%struct.device* noundef %0) #26, !dbg !6298
  %5 = tail call fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) #26, !dbg !6299
  %6 = icmp eq i32 %5, 0, !dbg !6299
  br i1 %6, label %15, label %7, !dbg !6300

7:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6301
  call void @llvm.dbg.value(metadata i8* %3, metadata !6293, metadata !DIExpression(DW_OP_deref)), !dbg !6302
  %8 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6303
  %9 = icmp eq i32 %8, 0, !dbg !6306
  br i1 %9, label %14, label %10, !dbg !6307

10:                                               ; preds = %7, %10
  %11 = load i8, i8* %3, align 1, !dbg !6308
  call void @llvm.dbg.value(metadata i8 %11, metadata !6293, metadata !DIExpression()), !dbg !6302
  call fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %4, i8 noundef zeroext %11) #26, !dbg !6309
  call void @llvm.dbg.value(metadata i8* %3, metadata !6293, metadata !DIExpression(DW_OP_deref)), !dbg !6302
  %12 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6303
  %13 = icmp eq i32 %12, 0, !dbg !6306
  br i1 %13, label %14, label %10, !dbg !6307, !llvm.loop !6310

14:                                               ; preds = %10, %7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6313
  br label %15, !dbg !6314

15:                                               ; preds = %14, %2
  %16 = call fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) #26, !dbg !6315
  %17 = icmp eq i32 %16, 0, !dbg !6315
  br i1 %17, label %44, label %18, !dbg !6317

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !6318
  %20 = bitcast i8* %19 to i16*, !dbg !6318
  %21 = load i16, i16* %20, align 4, !dbg !6318
  %22 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !6321
  %23 = bitcast i8* %22 to i16*, !dbg !6321
  %24 = load i16, i16* %23, align 2, !dbg !6321
  %25 = icmp eq i16 %21, %24, !dbg !6322
  br i1 %25, label %26, label %27, !dbg !6323

26:                                               ; preds = %18
  call fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6324
  br label %44, !dbg !6326

27:                                               ; preds = %18
  %28 = zext i16 %21 to i32, !dbg !6327
  %29 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !6328
  %30 = bitcast i8* %29 to i8**, !dbg !6328
  %31 = load i8*, i8** %30, align 4, !dbg !6328
  %32 = add i16 %21, 1, !dbg !6330
  store i16 %32, i16* %20, align 4, !dbg !6330
  %33 = getelementptr inbounds i8, i8* %31, i32 %28, !dbg !6331
  call fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %33) #26, !dbg !6332
  %34 = load i16, i16* %20, align 4, !dbg !6333
  %35 = zext i16 %34 to i32, !dbg !6335
  %36 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !6336
  %37 = bitcast i8* %36 to i32*, !dbg !6336
  %38 = load i32, i32* %37, align 4, !dbg !6336
  %39 = icmp ugt i32 %38, %35, !dbg !6337
  br i1 %39, label %41, label %40, !dbg !6338

40:                                               ; preds = %27
  store i16 0, i16* %20, align 4, !dbg !6339
  br label %41, !dbg !6341

41:                                               ; preds = %40, %27
  %42 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !6342
  %43 = bitcast i8* %42 to %struct.k_sem*, !dbg !6342
  call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %43) #26, !dbg !6343
  br label %44

44:                                               ; preds = %26, %41, %15
  ret void, !dbg !6344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6345 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6347, metadata !DIExpression()), !dbg !6348
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6349, !srcloc !6351
  tail call fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) #26, !dbg !6352
  ret void, !dbg !6353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6354 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6356, metadata !DIExpression()), !dbg !6358
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6359
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6359
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6359
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6357, metadata !DIExpression()), !dbg !6358
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 13, !dbg !6360
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6360
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6362
  br i1 %7, label %10, label %8, !dbg !6363

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6364
  br label %10, !dbg !6365

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6358
  ret i32 %11, !dbg !6366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6367 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6369, metadata !DIExpression()), !dbg !6373
  call void @llvm.dbg.value(metadata i8* %1, metadata !6370, metadata !DIExpression()), !dbg !6373
  call void @llvm.dbg.value(metadata i32 1, metadata !6371, metadata !DIExpression()), !dbg !6373
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6374
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6374
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6374
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6372, metadata !DIExpression()), !dbg !6373
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 6, !dbg !6375
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6375
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6377
  br i1 %8, label %11, label %9, !dbg !6378

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6379
  br label %11, !dbg !6380

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6373
  ret i32 %12, !dbg !6381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6382 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6384, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.value(metadata i8 %1, metadata !6385, metadata !DIExpression()), !dbg !6387
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6388
  %4 = load i16, i16* %3, align 2, !dbg !6388
  %5 = zext i16 %4 to i32, !dbg !6389
  %6 = add nuw nsw i32 %5, 1, !dbg !6390
  call void @llvm.dbg.value(metadata i32 %6, metadata !6386, metadata !DIExpression()), !dbg !6387
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6391
  %8 = load i32, i32* %7, align 4, !dbg !6391
  %9 = icmp ult i32 %6, %8, !dbg !6393
  %10 = select i1 %9, i32 %6, i32 0, !dbg !6394
  call void @llvm.dbg.value(metadata i32 %10, metadata !6386, metadata !DIExpression()), !dbg !6387
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6395
  %12 = load i16, i16* %11, align 4, !dbg !6395
  %13 = zext i16 %12 to i32, !dbg !6397
  %14 = icmp eq i32 %10, %13, !dbg !6398
  br i1 %14, label %15, label %17, !dbg !6399

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef nonnull %0, i8 noundef zeroext 126) #26, !dbg !6400
  br label %23, !dbg !6402

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6403
  %19 = load i8*, i8** %18, align 4, !dbg !6403
  %20 = getelementptr inbounds i8, i8* %19, i32 %5, !dbg !6404
  store i8 %1, i8* %20, align 1, !dbg !6405
  %21 = trunc i32 %10 to i16, !dbg !6406
  store i16 %21, i16* %3, align 2, !dbg !6407
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6408
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %22) #26, !dbg !6409
  br label %23, !dbg !6410

23:                                               ; preds = %17, %15
  ret void, !dbg !6411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6414, metadata !DIExpression()), !dbg !6416
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6417
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6417
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6417
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6415, metadata !DIExpression()), !dbg !6416
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 9, !dbg !6418
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6418
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6420
  br i1 %7, label %10, label %8, !dbg !6421

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6422
  br label %10, !dbg !6423

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6416
  ret i32 %11, !dbg !6424
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6425 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6427, metadata !DIExpression()), !dbg !6428
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6429, !srcloc !6431
  tail call fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6432
  ret void, !dbg !6433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6434 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6436, metadata !DIExpression()), !dbg !6440
  call void @llvm.dbg.value(metadata i8* %1, metadata !6437, metadata !DIExpression()), !dbg !6440
  call void @llvm.dbg.value(metadata i32 1, metadata !6438, metadata !DIExpression()), !dbg !6440
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6441
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6441
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6441
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6439, metadata !DIExpression()), !dbg !6440
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 5, !dbg !6442
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6442
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6444
  br i1 %8, label %11, label %9, !dbg !6445

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6446
  br label %11, !dbg !6447

11:                                               ; preds = %2, %9
  ret void, !dbg !6448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !6449 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6453, metadata !DIExpression()), !dbg !6454
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6455, !srcloc !6457
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #25, !dbg !6458
  ret void, !dbg !6459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6462, metadata !DIExpression()), !dbg !6464
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6465
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6465
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6465
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6463, metadata !DIExpression()), !dbg !6464
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 8, !dbg !6466
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6466
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6468
  br i1 %7, label %9, label %8, !dbg !6469

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6470
  br label %9, !dbg !6472

9:                                                ; preds = %8, %1
  ret void, !dbg !6473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6476, metadata !DIExpression()), !dbg !6478
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6479
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6479
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6479
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6477, metadata !DIExpression()), !dbg !6478
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 17, !dbg !6480
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6480
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6482
  br i1 %7, label %10, label %8, !dbg !6483

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6484
  br label %10, !dbg !6485

10:                                               ; preds = %1, %8
  ret void, !dbg !6486
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_rx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6487 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6491, metadata !DIExpression()), !dbg !6494
  call void @llvm.dbg.value(metadata i8* %1, metadata !6492, metadata !DIExpression()), !dbg !6494
  call void @llvm.dbg.value(metadata i32 %2, metadata !6493, metadata !DIExpression()), !dbg !6494
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6495
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6495
  tail call fastcc void @uart_irq_rx_disable(%struct.device* noundef %5) #26, !dbg !6496
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6497
  store i8* %1, i8** %6, align 4, !dbg !6498
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6499
  store i32 %2, i32* %7, align 4, !dbg !6500
  %8 = icmp eq i32 %2, 0, !dbg !6501
  br i1 %8, label %12, label %9, !dbg !6503

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6504
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %10, i32 noundef 0) #26, !dbg !6506
  %11 = load %struct.device*, %struct.device** %4, align 4, !dbg !6507
  tail call fastcc void @uart_irq_rx_enable(%struct.device* noundef %11) #26, !dbg !6508
  br label %12, !dbg !6509

12:                                               ; preds = %9, %3
  ret i32 0, !dbg !6510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6511 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6513, metadata !DIExpression()), !dbg !6514
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6515, !srcloc !6517
  tail call fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) #26, !dbg !6518
  ret void, !dbg !6519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6520 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6524, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata i32 %1, metadata !6525, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata i32 -1, metadata !6526, metadata !DIExpression()), !dbg !6527
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6528, !srcloc !6530
  %3 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef -1) #25, !dbg !6531
  ret void, !dbg !6532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6533 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6535, metadata !DIExpression()), !dbg !6536
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6537, !srcloc !6539
  tail call fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) #26, !dbg !6540
  ret void, !dbg !6541
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6542 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6544, metadata !DIExpression()), !dbg !6546
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6547
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6547
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6547
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6545, metadata !DIExpression()), !dbg !6546
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 10, !dbg !6548
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6548
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6550
  br i1 %7, label %9, label %8, !dbg !6551

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6552
  br label %9, !dbg !6554

9:                                                ; preds = %8, %1
  ret void, !dbg !6555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6558, metadata !DIExpression()), !dbg !6560
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6561
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6561
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6561
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6559, metadata !DIExpression()), !dbg !6560
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 11, !dbg !6562
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6562
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6564
  br i1 %7, label %9, label %8, !dbg !6565

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6566
  br label %9, !dbg !6568

9:                                                ; preds = %8, %1
  ret void, !dbg !6569
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_tx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6570 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6572, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i8* %1, metadata !6573, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i32 %2, metadata !6574, metadata !DIExpression()), !dbg !6575
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6576
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6576
  tail call fastcc void @uart_irq_tx_disable(%struct.device* noundef %5) #26, !dbg !6577
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6578
  store i8* %1, i8** %6, align 4, !dbg !6579
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6580
  store i32 %2, i32* %7, align 4, !dbg !6581
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6582
  %9 = add i32 %2, -1, !dbg !6583
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %8, i32 noundef %9) #26, !dbg !6584
  ret i32 0, !dbg !6585
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_write(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6586 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6590, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata i8* %1, metadata !6591, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata i32 %2, metadata !6592, metadata !DIExpression()), !dbg !6593
  %4 = tail call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6594
  ret i32 %4, !dbg !6595
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_read(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6596 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6600, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i8* %1, metadata !6601, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i32 %2, metadata !6602, metadata !DIExpression()), !dbg !6603
  %4 = tail call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6604
  ret i32 %4, !dbg !6605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_putchar(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !6606 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !6608, metadata !DIExpression()), !dbg !6609
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6608, metadata !DIExpression(DW_OP_deref)), !dbg !6609
  %3 = call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %2, i32 noundef 1) #25, !dbg !6610
  ret i32 %3, !dbg !6611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_getchar() local_unnamed_addr #1 !dbg !6612 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6618
  call void @llvm.dbg.value(metadata i8* %1, metadata !6616, metadata !DIExpression(DW_OP_deref)), !dbg !6619
  %2 = call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %1, i32 noundef 1) #25, !dbg !6620
  call void @llvm.dbg.value(metadata i32 %2, metadata !6617, metadata !DIExpression()), !dbg !6619
  %3 = icmp slt i32 %2, 0, !dbg !6621
  %4 = load i8, i8* %1, align 1, !dbg !6623
  %5 = zext i8 %4 to i32, !dbg !6623
  %6 = select i1 %3, i32 %2, i32 %5, !dbg !6623
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6624
  ret i32 %6, !dbg !6624
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_init() local_unnamed_addr #1 !dbg !6625 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6627, metadata !DIExpression()), !dbg !6632
  %1 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !6633
  br i1 %1, label %2, label %13, !dbg !6635

2:                                                ; preds = %0
  %3 = tail call i32 @tty_init(%struct.tty_serial* noundef nonnull @console_serial, %struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !6636
  call void @llvm.dbg.value(metadata i32 %3, metadata !6628, metadata !DIExpression()), !dbg !6632
  %4 = icmp eq i32 %3, 0, !dbg !6637
  br i1 %4, label %5, label %13, !dbg !6639

5:                                                ; preds = %2
  %6 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6640
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %6, metadata !6629, metadata !DIExpression()), !dbg !6641
  %7 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %6, i32 0, i32 18, !dbg !6642
  %8 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %7, align 4, !dbg !6642
  %9 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %8, null, !dbg !6644
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @tty_set_tx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([512 x i8], [512 x i8]* @console_txbuf, i32 0, i32 0), i32 noundef 512) #25, !dbg !6645
  %12 = tail call i32 @tty_set_rx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @console_rxbuf, i32 0, i32 0), i32 noundef 64) #25, !dbg !6646
  br label %13, !dbg !6647

13:                                               ; preds = %2, %0, %5, %10
  %14 = phi i32 [ 0, %10 ], [ -134, %5 ], [ -19, %0 ], [ %3, %2 ]
  ret i32 %14, !dbg !6648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6649 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6654, metadata !DIExpression()), !dbg !6655
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6656, !srcloc !6658
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !6659
  ret i1 %1, !dbg !6660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6661 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !6663, metadata !DIExpression()), !dbg !6664
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !6665
  ret i1 %1, !dbg !6666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6716, metadata !DIExpression()), !dbg !6718
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6717, metadata !DIExpression()), !dbg !6718
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6719
  ret void, !dbg !6720
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6721 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6738, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6739, metadata !DIExpression()), !dbg !6741
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6742
  %4 = load i32, i32* %3, align 4, !dbg !6742
  call void @llvm.dbg.value(metadata i32 %4, metadata !6740, metadata !DIExpression()), !dbg !6741
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6743
  ret void, !dbg !6744
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6745 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6749, metadata !DIExpression()), !dbg !6752
  call void @llvm.dbg.value(metadata i8* %0, metadata !6750, metadata !DIExpression()), !dbg !6752
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6753
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6753
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6751, metadata !DIExpression()), !dbg !6754
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6754
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6755
  %5 = bitcast i8* %4 to i32*, !dbg !6755
  %6 = load i32, i32* %5, align 4, !dbg !6755
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6756
  store i32 %6, i32* %7, align 4, !dbg !6757
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6758
  unreachable, !dbg !6759
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6763, metadata !DIExpression()), !dbg !6764
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6765
  ret void, !dbg !6766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6771, metadata !DIExpression()), !dbg !6772
  %2 = icmp sgt i32 %0, -1, !dbg !6773
  br i1 %2, label %3, label %8, !dbg !6775

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6776, !srcloc !6778
  %4 = and i32 %0, 31, !dbg !6779
  %5 = shl nuw i32 1, %4, !dbg !6780
  %6 = lshr i32 %0, 5, !dbg !6781
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6782
  store volatile i32 %5, i32* %7, align 4, !dbg !6783
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6784, !srcloc !6785
  br label %8, !dbg !6786

8:                                                ; preds = %3, %1
  ret void, !dbg !6787
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6790, metadata !DIExpression()), !dbg !6791
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6792
  ret void, !dbg !6793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6796, metadata !DIExpression()), !dbg !6797
  %2 = icmp sgt i32 %0, -1, !dbg !6798
  br i1 %2, label %3, label %8, !dbg !6800

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6801
  %5 = shl nuw i32 1, %4, !dbg !6803
  %6 = lshr i32 %0, 5, !dbg !6804
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6805
  store volatile i32 %5, i32* %7, align 4, !dbg !6806
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6807, !srcloc !6811
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6812, !srcloc !6815
  br label %8, !dbg !6816

8:                                                ; preds = %3, %1
  ret void, !dbg !6817
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6822, metadata !DIExpression()), !dbg !6823
  %2 = lshr i32 %0, 5, !dbg !6824
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6825
  %4 = load volatile i32, i32* %3, align 4, !dbg !6825
  %5 = and i32 %0, 31, !dbg !6826
  %6 = shl nuw i32 1, %5, !dbg !6826
  %7 = and i32 %4, %6, !dbg !6827
  ret i32 %7, !dbg !6828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6833, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.value(metadata i32 %1, metadata !6834, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.value(metadata i32 %2, metadata !6835, metadata !DIExpression()), !dbg !6836
  %4 = add i32 %1, 1, !dbg !6837
  call void @llvm.dbg.value(metadata i32 %4, metadata !6834, metadata !DIExpression()), !dbg !6836
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6840
  ret void, !dbg !6841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6846, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata i32 %1, metadata !6847, metadata !DIExpression()), !dbg !6848
  %3 = trunc i32 %1 to i8, !dbg !6849
  %4 = shl i8 %3, 4, !dbg !6849
  %5 = and i32 %0, 15, !dbg !6851
  %6 = add nsw i32 %5, -4, !dbg !6851
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6851
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6851
  %9 = icmp slt i32 %0, 0, !dbg !6851
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6851
  store volatile i8 %4, i8* %10, align 1, !dbg !6849
  ret void, !dbg !6852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6853 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6855, metadata !DIExpression()), !dbg !6856
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6857
  ret void, !dbg !6858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6859 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6861
  tail call void @z_arm_int_exit() #25, !dbg !6862
  ret void, !dbg !6863
}

; Function Attrs: optsize
declare !dbg !6864 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6865 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6867 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6869
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6870
  tail call void @z_bss_zero() #25, !dbg !6871
  tail call void @z_data_copy() #25, !dbg !6872
  tail call void @z_arm_interrupt_init() #25, !dbg !6873
  tail call void @z_cstart() #28, !dbg !6874
  unreachable, !dbg !6874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6875 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6876
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6877, !srcloc !6880
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6881, !srcloc !6884
  ret void, !dbg !6885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6886 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6887
  %2 = and i32 %1, -15728641, !dbg !6887
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6887
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6888, !srcloc !6895
  call void @llvm.dbg.value(metadata i32 %3, metadata !6893, metadata !DIExpression()) #24, !dbg !6896
  %4 = and i32 %3, -5, !dbg !6897
  call void @llvm.dbg.value(metadata i32 %4, metadata !6898, metadata !DIExpression()) #24, !dbg !6903
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6905, !srcloc !6906
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6907, !srcloc !6884
  ret void, !dbg !6909
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6913, metadata !DIExpression()), !dbg !6914
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6915
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6916
  store i32 %0, i32* %3, align 4, !dbg !6917
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6918
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6919
  store i32 %4, i32* %5, align 4, !dbg !6920
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6921
  %7 = or i32 %6, 268435456, !dbg !6921
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6921
  call void @llvm.dbg.value(metadata i32 0, metadata !6922, metadata !DIExpression()) #24, !dbg !6925
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6927, !srcloc !6928
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6929
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6930
  %10 = load i32, i32* %9, align 4, !dbg !6930
  ret i32 %10, !dbg !6931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7042, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7043, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i8* %2, metadata !7044, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7045, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i8* %4, metadata !7046, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i8* %5, metadata !7047, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i8* %6, metadata !7048, metadata !DIExpression()), !dbg !7050
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7051
  call void @llvm.dbg.value(metadata i8* %8, metadata !7049, metadata !DIExpression()), !dbg !7050
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7052
  %10 = bitcast i8* %9 to i32*, !dbg !7052
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7053
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7054
  %12 = bitcast i8* %8 to i32*, !dbg !7055
  store i32 %11, i32* %12, align 4, !dbg !7056
  %13 = ptrtoint i8* %4 to i32, !dbg !7057
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7058
  %15 = bitcast i8* %14 to i32*, !dbg !7058
  store i32 %13, i32* %15, align 4, !dbg !7059
  %16 = ptrtoint i8* %5 to i32, !dbg !7060
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7061
  %18 = bitcast i8* %17 to i32*, !dbg !7061
  store i32 %16, i32* %18, align 4, !dbg !7062
  %19 = ptrtoint i8* %6 to i32, !dbg !7063
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7064
  %21 = bitcast i8* %20 to i32*, !dbg !7064
  store i32 %19, i32* %21, align 4, !dbg !7065
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7066
  %23 = bitcast i8* %22 to i32*, !dbg !7066
  store i32 16777216, i32* %23, align 4, !dbg !7067
  %24 = ptrtoint i8* %8 to i32, !dbg !7068
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7069
  store i32 %24, i32* %25, align 8, !dbg !7070
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7071
  store i32 0, i32* %26, align 4, !dbg !7072
  ret void, !dbg !7073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !7074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7079, metadata !DIExpression()), !dbg !7085
  call void @llvm.dbg.value(metadata i32 %1, metadata !7080, metadata !DIExpression()), !dbg !7085
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7086
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7081, metadata !DIExpression()), !dbg !7085
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7087
  br i1 %4, label %19, label %5, !dbg !7089

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7084, metadata !DIExpression()), !dbg !7085
  %6 = icmp eq i32 %0, -22, !dbg !7090
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7090
  %8 = load i32, i32* %7, align 4, !dbg !7090
  br i1 %6, label %16, label %9, !dbg !7092

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7090
  %11 = icmp ule i32 %10, %0, !dbg !7090
  %12 = icmp ugt i32 %8, %0, !dbg !7090
  %13 = and i1 %12, %11, !dbg !7090
  %14 = icmp ugt i32 %8, %1, !dbg !7090
  %15 = and i1 %14, %13, !dbg !7090
  br i1 %15, label %18, label %19, !dbg !7090

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7090
  br i1 %17, label %18, label %19, !dbg !7092

18:                                               ; preds = %9, %16
  br label %19, !dbg !7093

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7085
  ret i32 %20, !dbg !7095
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7100, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i8* %1, metadata !7101, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7102, metadata !DIExpression()), !dbg !7103
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7104
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7105
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7106, !srcloc !7107
  unreachable, !dbg !7108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7109 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7127, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata i32 %1, metadata !7128, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata i32 %2, metadata !7129, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7130, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata i32 0, metadata !7131, metadata !DIExpression()), !dbg !7137
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7138
  %9 = and i32 %8, 511, !dbg !7139
  call void @llvm.dbg.value(metadata i32 %9, metadata !7132, metadata !DIExpression()), !dbg !7137
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7140
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7140
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7141
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7141
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7136, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata i32 0, metadata !7143, metadata !DIExpression()) #24, !dbg !7146
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7148, !srcloc !7149
  call void @llvm.dbg.value(metadata i8* %6, metadata !7134, metadata !DIExpression(DW_OP_deref)), !dbg !7137
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7150
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7135, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata i8* %5, metadata !7133, metadata !DIExpression(DW_OP_deref)), !dbg !7137
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7151
  call void @llvm.dbg.value(metadata i32 %12, metadata !7131, metadata !DIExpression()), !dbg !7137
  %13 = load i8, i8* %5, align 1, !dbg !7152, !range !7154
  call void @llvm.dbg.value(metadata i8 %13, metadata !7133, metadata !DIExpression()), !dbg !7137
  %14 = icmp eq i8 %13, 0, !dbg !7152
  br i1 %14, label %15, label %32, !dbg !7155

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7156
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7157
  %18 = load i8, i8* %6, align 1, !dbg !7158, !range !7154
  call void @llvm.dbg.value(metadata i8 %18, metadata !7134, metadata !DIExpression()), !dbg !7137
  %19 = icmp eq i8 %18, 0, !dbg !7158
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7160
  %21 = load i32, i32* %20, align 4, !dbg !7160
  br i1 %19, label %27, label %22, !dbg !7161

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7162
  %24 = icmp eq i32 %23, 0, !dbg !7165
  br i1 %24, label %25, label %31, !dbg !7166

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7167
  br label %29, !dbg !7169

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7170
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7160
  br label %31, !dbg !7172

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7172
  br label %32, !dbg !7173

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7173
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7173
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7173
  ret void, !dbg !7173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !7174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7179, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.value(metadata i32 %1, metadata !7180, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.value(metadata i32 %2, metadata !7181, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.value(metadata i8* %3, metadata !7182, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.value(metadata i8 0, metadata !7183, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7184, metadata !DIExpression()), !dbg !7185
  store i8 0, i8* %3, align 1, !dbg !7186
  %5 = icmp ult i32 %2, -16777216, !dbg !7187
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !7189
  br i1 %8, label %16, label %9, !dbg !7189

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !7190
  %11 = icmp eq i32 %10, 0, !dbg !7190
  br i1 %11, label %12, label %13, !dbg !7192

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !7184, metadata !DIExpression()), !dbg !7185
  store i8 1, i8* %3, align 1, !dbg !7195
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !7185
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !7184, metadata !DIExpression()), !dbg !7185
  br label %16, !dbg !7198

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !7185
  ret %struct.__esf* %17, !dbg !7199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7200 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7204, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i32 %1, metadata !7205, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i8* %2, metadata !7206, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i32 0, metadata !7207, metadata !DIExpression()), !dbg !7208
  store i8 0, i8* %2, align 1, !dbg !7209
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7210

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7211
  call void @llvm.dbg.value(metadata i32 %5, metadata !7207, metadata !DIExpression()), !dbg !7208
  br label %11, !dbg !7213

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7214
  call void @llvm.dbg.value(metadata i32 %7, metadata !7207, metadata !DIExpression()), !dbg !7208
  br label %11, !dbg !7215

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7216
  call void @llvm.dbg.value(metadata i32 0, metadata !7207, metadata !DIExpression()), !dbg !7208
  br label %11, !dbg !7217

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7218
  call void @llvm.dbg.value(metadata i32 0, metadata !7207, metadata !DIExpression()), !dbg !7208
  br label %11, !dbg !7219

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7220
  br label %11, !dbg !7221

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !7222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7223 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7227, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i8* %1, metadata !7228, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i32 0, metadata !7229, metadata !DIExpression()), !dbg !7230
  store i8 0, i8* %1, align 1, !dbg !7231
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7232
  %4 = and i32 %3, 2, !dbg !7234
  %5 = icmp eq i32 %4, 0, !dbg !7235
  br i1 %5, label %6, label %33, !dbg !7236

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7237
  %8 = icmp sgt i32 %7, -1, !dbg !7239
  br i1 %8, label %9, label %33, !dbg !7240

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7241
  %11 = and i32 %10, 1073741824, !dbg !7243
  %12 = icmp eq i32 %11, 0, !dbg !7244
  br i1 %12, label %33, label %13, !dbg !7245

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7246
  br i1 %14, label %15, label %18, !dbg !7249

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7250
  %17 = load i32, i32* %16, align 4, !dbg !7250
  call void @llvm.dbg.value(metadata i32 %17, metadata !7229, metadata !DIExpression()), !dbg !7230
  br label %33, !dbg !7252

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7253
  %20 = and i32 %19, 255, !dbg !7255
  %21 = icmp eq i32 %20, 0, !dbg !7256
  br i1 %21, label %24, label %22, !dbg !7257

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7258
  call void @llvm.dbg.value(metadata i32 %23, metadata !7229, metadata !DIExpression()), !dbg !7230
  br label %33, !dbg !7260

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7261
  %26 = and i32 %25, 65280, !dbg !7263
  %27 = icmp eq i32 %26, 0, !dbg !7264
  br i1 %27, label %29, label %28, !dbg !7265

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7266
  call void @llvm.dbg.value(metadata i32 0, metadata !7229, metadata !DIExpression()), !dbg !7230
  br label %33, !dbg !7268

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7269
  %31 = icmp ult i32 %30, 65536, !dbg !7271
  br i1 %31, label %33, label %32, !dbg !7272

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !7273
  call void @llvm.dbg.value(metadata i32 0, metadata !7229, metadata !DIExpression()), !dbg !7230
  br label %33, !dbg !7275

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !7230
  call void @llvm.dbg.value(metadata i32 %34, metadata !7229, metadata !DIExpression()), !dbg !7230
  ret i32 %34, !dbg !7276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7277 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7279, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i32 %1, metadata !7280, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i8* %2, metadata !7281, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i32 0, metadata !7282, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i32 -22, metadata !7283, metadata !DIExpression()), !dbg !7292
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7293
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7295
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7297
  %7 = and i32 %6, 2, !dbg !7298
  %8 = icmp eq i32 %7, 0, !dbg !7299
  br i1 %8, label %19, label %9, !dbg !7300

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7301
  call void @llvm.dbg.value(metadata i32 %10, metadata !7284, metadata !DIExpression()), !dbg !7302
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7303
  %12 = and i32 %11, 128, !dbg !7305
  %13 = icmp eq i32 %12, 0, !dbg !7306
  br i1 %13, label %19, label %14, !dbg !7307

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !7283, metadata !DIExpression()), !dbg !7292
  %15 = icmp eq i32 %1, 0, !dbg !7308
  br i1 %15, label %19, label %16, !dbg !7311

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7312
  %18 = and i32 %17, -129, !dbg !7312
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7312
  br label %19, !dbg !7314

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !7292
  call void @llvm.dbg.value(metadata i32 %20, metadata !7283, metadata !DIExpression()), !dbg !7292
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7315
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7317
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7319
  %24 = and i32 %23, 16, !dbg !7320
  %25 = icmp eq i32 %24, 0, !dbg !7320
  br i1 %25, label %26, label %30, !dbg !7321

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7322
  %28 = and i32 %27, 2, !dbg !7323
  %29 = icmp eq i32 %28, 0, !dbg !7323
  br i1 %29, label %39, label %30, !dbg !7324

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7325
  %32 = and i32 %31, 2048, !dbg !7326
  %33 = icmp eq i32 %32, 0, !dbg !7326
  br i1 %33, label %39, label %34, !dbg !7327

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !7328
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !7329
  call void @llvm.dbg.value(metadata i32 %36, metadata !7287, metadata !DIExpression()), !dbg !7330
  %37 = icmp eq i32 %36, 0, !dbg !7331
  br i1 %37, label %39, label %38, !dbg !7333

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !7334, metadata !DIExpression()) #24, !dbg !7337
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !7340, !srcloc !7341
  call void @llvm.dbg.value(metadata i32 2, metadata !7282, metadata !DIExpression()), !dbg !7292
  br label %39, !dbg !7342

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !7292
  call void @llvm.dbg.value(metadata i32 %40, metadata !7282, metadata !DIExpression()), !dbg !7292
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7343
  %42 = and i32 %41, 32, !dbg !7345
  %43 = icmp eq i32 %42, 0, !dbg !7346
  br i1 %43, label %47, label %44, !dbg !7347

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7348
  %46 = and i32 %45, -8193, !dbg !7348
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7348
  br label %47, !dbg !7350

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7351
  %49 = or i32 %48, 255, !dbg !7351
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7351
  store i8 0, i8* %2, align 1, !dbg !7352
  ret i32 %40, !dbg !7353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !7354 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7358, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i32 %0, metadata !7359, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i8* %1, metadata !7360, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i32 0, metadata !7361, metadata !DIExpression()), !dbg !7365
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7366
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7368
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7370
  %6 = and i32 %5, 512, !dbg !7371
  %7 = icmp eq i32 %6, 0, !dbg !7371
  br i1 %7, label %18, label %8, !dbg !7372

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7373
  call void @llvm.dbg.value(metadata i32 %9, metadata !7362, metadata !DIExpression()), !dbg !7374
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7375
  %11 = and i32 %10, 32768, !dbg !7377
  %12 = icmp ne i32 %11, 0, !dbg !7378
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7379
  br i1 %14, label %15, label %18, !dbg !7379

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7380
  %17 = and i32 %16, -32769, !dbg !7380
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7380
  br label %18, !dbg !7384

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7385
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7387
  %21 = and i32 %20, 256, !dbg !7389
  %22 = icmp eq i32 %21, 0, !dbg !7390
  br i1 %22, label %23, label %25, !dbg !7391

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7392
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7394
  %27 = or i32 %26, 65280, !dbg !7394
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7394
  store i8 0, i8* %1, align 1, !dbg !7395
  ret void, !dbg !7396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7397 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7403, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.value(metadata i32 0, metadata !7404, metadata !DIExpression()), !dbg !7405
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7406
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7408
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7410
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7412
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7414
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7416
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7418
  %8 = or i32 %7, -65536, !dbg !7418
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7418
  ret void, !dbg !7419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7420 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7424, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i8* %0, metadata !7425, metadata !DIExpression()), !dbg !7426
  store i8 0, i8* %0, align 1, !dbg !7427
  ret void, !dbg !7428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7429 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7433, metadata !DIExpression()), !dbg !7436
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7437
  %3 = load i32, i32* %2, align 4, !dbg !7437
  %4 = inttoptr i32 %3 to i16*, !dbg !7438
  call void @llvm.dbg.value(metadata i16* %4, metadata !7434, metadata !DIExpression()), !dbg !7436
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7439
  %6 = or i32 %5, 256, !dbg !7439
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7439
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7440, !srcloc !7443
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7444, !srcloc !7447
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7448
  %8 = load i16, i16* %7, align 2, !dbg !7449
  call void @llvm.dbg.value(metadata i16 %8, metadata !7435, metadata !DIExpression()), !dbg !7436
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7450
  %10 = and i32 %9, -257, !dbg !7450
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7450
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7451, !srcloc !7443
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7453, !srcloc !7447
  %11 = icmp eq i16 %8, -8446, !dbg !7455
  ret i1 %11, !dbg !7457
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7458 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7459
  %2 = or i32 %1, 16, !dbg !7459
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7459
  ret void, !dbg !7460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7461 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7464, metadata !DIExpression()), !dbg !7465
  br label %1, !dbg !7466

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7464, metadata !DIExpression()), !dbg !7465
  tail call fastcc void @__NVIC_SetPriority.19(i32 noundef %2) #26, !dbg !7468
  %3 = add nuw nsw i32 %2, 1, !dbg !7471
  call void @llvm.dbg.value(metadata i32 %3, metadata !7464, metadata !DIExpression()), !dbg !7465
  %4 = icmp eq i32 %3, 86, !dbg !7472
  br i1 %4, label %5, label %1, !dbg !7466, !llvm.loop !7473

5:                                                ; preds = %1
  ret void, !dbg !7475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.19(i32 noundef %0) unnamed_addr #15 !dbg !7476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7478, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 1, metadata !7479, metadata !DIExpression()), !dbg !7480
  %2 = and i32 %0, 15, !dbg !7481
  %3 = add nsw i32 %2, -4, !dbg !7481
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7481
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7481
  %6 = icmp slt i32 %0, 0, !dbg !7481
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7481
  store volatile i8 16, i8* %7, align 1, !dbg !7482
  ret void, !dbg !7484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7591, metadata !DIExpression()), !dbg !7592
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7593
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7595
  br i1 %3, label %4, label %12, !dbg !7596

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7597, !srcloc !7609
  call void @llvm.dbg.value(metadata i32 %5, metadata !7600, metadata !DIExpression()) #24, !dbg !7610
  %6 = icmp eq i32 %5, 0, !dbg !7611
  br i1 %6, label %12, label %7, !dbg !7612

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7613
  %9 = or i32 %8, 268435456, !dbg !7613
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7613
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7615
  %11 = and i32 %10, -32769, !dbg !7615
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7615
  br label %12, !dbg !7616

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7617
  ret void, !dbg !7618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7619 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7620
  ret void, !dbg !7621
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !480, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata i8 0, metadata !481, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata i32 64, metadata !483, metadata !DIExpression()), !dbg !7622
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7623
  %3 = load i32, i32* %2, align 4, !dbg !7623
  %4 = add i32 %3, -64, !dbg !7625
  call void @llvm.dbg.value(metadata i32 %4, metadata !482, metadata !DIExpression()), !dbg !7622
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7626
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7627
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7628
  call void @llvm.dbg.value(metadata i8 1, metadata !481, metadata !DIExpression()), !dbg !7622
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7629
  ret void, !dbg !7630
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7631 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7632
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7633, !srcloc !7636
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7637, !srcloc !7640
  ret void, !dbg !7641
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7642 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7643, !srcloc !7646
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7647
  ret void, !dbg !7648
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7649 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7664, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i8 %1, metadata !7665, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32 %2, metadata !7666, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32 %3, metadata !7667, metadata !DIExpression()), !dbg !7668
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7669
  ret void, !dbg !7671
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7672 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7677, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i8 %1, metadata !7678, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i32 undef, metadata !7679, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i32 undef, metadata !7680, metadata !DIExpression()), !dbg !7682
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7683
  call void @llvm.dbg.value(metadata i8 %3, metadata !7681, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7682
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7684
  call void @llvm.dbg.value(metadata i32 %4, metadata !7681, metadata !DIExpression()), !dbg !7682
  %5 = trunc i32 %4 to i8, !dbg !7685
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7686
  ret void, !dbg !7687
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7688 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7692, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i8 %1, metadata !7693, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i8 %2, metadata !7694, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i1 %3, metadata !7695, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7698
  %5 = zext i8 %2 to i32, !dbg !7699
  call void @llvm.dbg.value(metadata i32 %5, metadata !7697, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i32 0, metadata !7696, metadata !DIExpression()), !dbg !7698
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7697, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i32 0, metadata !7696, metadata !DIExpression()), !dbg !7698
  %7 = icmp eq i8 %1, 0, !dbg !7700
  br i1 %7, label %29, label %8, !dbg !7703

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7697, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata i32 %10, metadata !7696, metadata !DIExpression()), !dbg !7698
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7704
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7707
  %13 = load i32, i32* %12, align 4, !dbg !7707
  %14 = icmp eq i32 %13, 0, !dbg !7708
  br i1 %14, label %25, label %15, !dbg !7709

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7710

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7712
  %18 = icmp eq i32 %17, 0, !dbg !7712
  br i1 %18, label %29, label %19, !dbg !7713

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7714
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7715
  call void @llvm.dbg.value(metadata i32 %21, metadata !7697, metadata !DIExpression()), !dbg !7698
  %22 = icmp eq i32 %21, -22, !dbg !7716
  br i1 %22, label %29, label %23, !dbg !7718

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7719
  call void @llvm.dbg.value(metadata i32 %24, metadata !7697, metadata !DIExpression()), !dbg !7698
  br label %25, !dbg !7720

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7698
  call void @llvm.dbg.value(metadata i32 %26, metadata !7697, metadata !DIExpression()), !dbg !7698
  %27 = add nuw nsw i32 %10, 1, !dbg !7721
  call void @llvm.dbg.value(metadata i32 %27, metadata !7696, metadata !DIExpression()), !dbg !7698
  %28 = icmp eq i32 %27, %6, !dbg !7700
  br i1 %28, label %29, label %8, !dbg !7703, !llvm.loop !7722

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7698
  ret i32 %30, !dbg !7724
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7725 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7729, metadata !DIExpression()), !dbg !7731
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7732
  %3 = load i32, i32* %2, align 4, !dbg !7732
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7733, !range !3868
  %5 = icmp ult i32 %4, 2, !dbg !7733
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7734
  br i1 %7, label %8, label %15, !dbg !7734

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7735
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7736
  %11 = load i32, i32* %10, align 4, !dbg !7736
  %12 = and i32 %11, %9, !dbg !7737
  %13 = icmp eq i32 %12, 0, !dbg !7738
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7730, metadata !DIExpression()), !dbg !7731
  ret i32 %16, !dbg !7739
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7740 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7744, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7745, metadata !DIExpression()), !dbg !7747
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7748
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7748
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7746, metadata !DIExpression()), !dbg !7749
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7750
  %6 = load i32, i32* %5, align 4, !dbg !7750
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7751
  store i32 %6, i32* %7, align 4, !dbg !7752
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7753
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7754
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7755
  %11 = load i32, i32* %10, align 4, !dbg !7755
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7756
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7757
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7758
  ret i32 %12, !dbg !7759
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7760 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7767, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7768, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i32 undef, metadata !7769, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.value(metadata i32 %2, metadata !7770, metadata !DIExpression()), !dbg !7771
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7772
  %5 = load i32, i32* %4, align 4, !dbg !7772
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7773
  %7 = or i32 %6, %5, !dbg !7774
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7775
  store i32 %7, i32* %8, align 4, !dbg !7776
  ret void, !dbg !7777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7778 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7782, metadata !DIExpression()), !dbg !7784
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7783, metadata !DIExpression()), !dbg !7784
  %3 = zext i8 %0 to i32, !dbg !7785
  %4 = icmp ugt i8 %0, 7, !dbg !7787
  br i1 %4, label %6, label %5, !dbg !7788

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7789
  br label %6, !dbg !7790

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7784
  ret i32 %7, !dbg !7791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7796, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7797, metadata !DIExpression()), !dbg !7798
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7799
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7800
  %4 = load i32, i32* %3, align 4, !dbg !7800
  %5 = and i32 %4, -32, !dbg !7801
  %6 = or i32 %5, %0, !dbg !7802
  %7 = or i32 %6, 16, !dbg !7802
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7803
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7804
  %9 = load i32, i32* %8, align 4, !dbg !7804
  %10 = or i32 %9, 1, !dbg !7805
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7806
  ret void, !dbg !7807
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7811, metadata !DIExpression()), !dbg !7812
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7813
  ret void, !dbg !7814
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7819, metadata !DIExpression()), !dbg !7820
  %2 = icmp ult i32 %0, 33, !dbg !7821
  br i1 %2, label %11, label %3, !dbg !7823

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7824
  br i1 %4, label %11, label %5, !dbg !7826

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7827
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7828, !range !3868
  %8 = mul nsw i32 %7, -2, !dbg !7829
  %9 = add nsw i32 %8, 62, !dbg !7829
  %10 = and i32 %9, 62, !dbg !7830
  br label %11, !dbg !7831

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7820
  ret i32 %12, !dbg !7832
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7833 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7837, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i8 %1, metadata !7838, metadata !DIExpression()), !dbg !7839
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7840
  ret void, !dbg !7842
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7843 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7847, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i8 %1, metadata !7848, metadata !DIExpression()), !dbg !7854
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7855
  call void @llvm.dbg.value(metadata i8 %3, metadata !7849, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7854
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7856
  call void @llvm.dbg.value(metadata i32 %4, metadata !7849, metadata !DIExpression()), !dbg !7854
  %5 = icmp ne i32 %4, -22, !dbg !7857
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7858
  call void @llvm.dbg.value(metadata i32 %4, metadata !7850, metadata !DIExpression()), !dbg !7859
  br i1 %7, label %8, label %12, !dbg !7858

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7850, metadata !DIExpression()), !dbg !7859
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7860
  %10 = add i32 %9, 1, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %10, metadata !7850, metadata !DIExpression()), !dbg !7859
  %11 = icmp eq i32 %10, 8, !dbg !7864
  br i1 %11, label %12, label %8, !dbg !7865, !llvm.loop !7866

12:                                               ; preds = %8, %2
  ret void, !dbg !7868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7872, metadata !DIExpression()), !dbg !7873
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7874
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7875
  ret void, !dbg !7876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7877 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7880
  %2 = icmp ugt i32 %1, 8, !dbg !7882
  br i1 %2, label %14, label %3, !dbg !7883

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7884
  call void @llvm.dbg.value(metadata i32 0, metadata !7879, metadata !DIExpression()), !dbg !7885
  %4 = icmp eq i32 %1, 0, !dbg !7886
  br i1 %4, label %12, label %5, !dbg !7889

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7889

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7879, metadata !DIExpression()), !dbg !7885
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7890
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7892
  %10 = add nuw i32 %8, 1, !dbg !7893
  call void @llvm.dbg.value(metadata i32 %10, metadata !7879, metadata !DIExpression()), !dbg !7885
  %11 = icmp eq i32 %10, %1, !dbg !7886
  br i1 %11, label %12, label %7, !dbg !7889, !llvm.loop !7894

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7896
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7897
  tail call void @arm_core_mpu_enable() #26, !dbg !7898
  br label %14, !dbg !7899

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7885
  ret i32 %15, !dbg !7900
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7901 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7908, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i8* %1, metadata !7909, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i8* %0, metadata !7910, metadata !DIExpression()), !dbg !7911
  %3 = load i8, i8* %1, align 1, !dbg !7912
  %4 = icmp eq i8 %3, 0, !dbg !7913
  br i1 %4, label %13, label %5, !dbg !7914

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7908, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i8* %8, metadata !7909, metadata !DIExpression()), !dbg !7911
  store i8 %6, i8* %7, align 1, !dbg !7915
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7917
  call void @llvm.dbg.value(metadata i8* %9, metadata !7908, metadata !DIExpression()), !dbg !7911
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7918
  call void @llvm.dbg.value(metadata i8* %10, metadata !7909, metadata !DIExpression()), !dbg !7911
  %11 = load i8, i8* %10, align 1, !dbg !7912
  %12 = icmp eq i8 %11, 0, !dbg !7913
  br i1 %12, label %13, label %5, !dbg !7914, !llvm.loop !7919

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7921
  ret i8* %0, !dbg !7922
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7923 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7927, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i8* %1, metadata !7928, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i32 %2, metadata !7929, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i8* %0, metadata !7930, metadata !DIExpression()), !dbg !7931
  %4 = icmp eq i32 %2, 0, !dbg !7932
  br i1 %4, label %22, label %5, !dbg !7933

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7927, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i32 %7, metadata !7929, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i8* %8, metadata !7928, metadata !DIExpression()), !dbg !7931
  %9 = load i8, i8* %8, align 1, !dbg !7934
  %10 = icmp eq i8 %9, 0, !dbg !7935
  br i1 %10, label %16, label %11, !dbg !7936

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7937
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7939
  call void @llvm.dbg.value(metadata i8* %12, metadata !7928, metadata !DIExpression()), !dbg !7931
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7940
  call void @llvm.dbg.value(metadata i8* %13, metadata !7927, metadata !DIExpression()), !dbg !7931
  %14 = add i32 %7, -1, !dbg !7941
  call void @llvm.dbg.value(metadata i32 %14, metadata !7929, metadata !DIExpression()), !dbg !7931
  %15 = icmp eq i32 %14, 0, !dbg !7932
  br i1 %15, label %22, label %5, !dbg !7933, !llvm.loop !7942

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7927, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i32 %18, metadata !7929, metadata !DIExpression()), !dbg !7931
  store i8 0, i8* %17, align 1, !dbg !7944
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7946
  call void @llvm.dbg.value(metadata i8* %19, metadata !7927, metadata !DIExpression()), !dbg !7931
  %20 = add i32 %18, -1, !dbg !7947
  call void @llvm.dbg.value(metadata i32 %20, metadata !7929, metadata !DIExpression()), !dbg !7931
  %21 = icmp eq i32 %20, 0, !dbg !7948
  br i1 %21, label %22, label %16, !dbg !7949, !llvm.loop !7950

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7952
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7953 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7957, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.value(metadata i32 %1, metadata !7958, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.value(metadata i32 %1, metadata !7959, metadata !DIExpression()), !dbg !7960
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7961

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7957, metadata !DIExpression()), !dbg !7960
  %6 = load i8, i8* %5, align 1, !dbg !7962
  %7 = icmp eq i8 %6, %3, !dbg !7963
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7964
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7965
  call void @llvm.dbg.value(metadata i8* %10, metadata !7957, metadata !DIExpression()), !dbg !7960
  br i1 %9, label %11, label %4, !dbg !7964, !llvm.loop !7967

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7969
  ret i8* %12, !dbg !7970
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7971 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7973, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i32 %1, metadata !7974, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* null, metadata !7975, metadata !DIExpression()), !dbg !7976
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7977

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7976
  call void @llvm.dbg.value(metadata i8* %6, metadata !7975, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata i8* %5, metadata !7973, metadata !DIExpression()), !dbg !7976
  %7 = load i8, i8* %5, align 1, !dbg !7978
  %8 = icmp eq i8 %7, %3, !dbg !7981
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7982
  call void @llvm.dbg.value(metadata i8* %9, metadata !7975, metadata !DIExpression()), !dbg !7976
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7983
  call void @llvm.dbg.value(metadata i8* %10, metadata !7973, metadata !DIExpression()), !dbg !7976
  %11 = icmp eq i8 %7, 0, !dbg !7984
  br i1 %11, label %12, label %4, !dbg !7984, !llvm.loop !7985

12:                                               ; preds = %4
  ret i8* %9, !dbg !7987
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7988 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7992, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.value(metadata i32 0, metadata !7993, metadata !DIExpression()), !dbg !7994
  %2 = load i8, i8* %0, align 1, !dbg !7995
  %3 = icmp eq i8 %2, 0, !dbg !7996
  br i1 %3, label %11, label %4, !dbg !7997

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7993, metadata !DIExpression()), !dbg !7994
  call void @llvm.dbg.value(metadata i8* %6, metadata !7992, metadata !DIExpression()), !dbg !7994
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7998
  call void @llvm.dbg.value(metadata i8* %7, metadata !7992, metadata !DIExpression()), !dbg !7994
  %8 = add i32 %5, 1, !dbg !8000
  call void @llvm.dbg.value(metadata i32 %8, metadata !7993, metadata !DIExpression()), !dbg !7994
  %9 = load i8, i8* %7, align 1, !dbg !7995
  %10 = icmp eq i8 %9, 0, !dbg !7996
  br i1 %10, label %11, label %4, !dbg !7997, !llvm.loop !8001

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7994
  ret i32 %12, !dbg !8003
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !8004 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8008, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.value(metadata i32 %1, metadata !8009, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.value(metadata i32 0, metadata !8010, metadata !DIExpression()), !dbg !8011
  %3 = load i8, i8* %0, align 1, !dbg !8012
  %4 = icmp ne i8 %3, 0, !dbg !8013
  %5 = icmp ne i32 %1, 0, !dbg !8014
  %6 = and i1 %4, %5, !dbg !8014
  br i1 %6, label %7, label %16, !dbg !8015

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8010, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.value(metadata i8* %9, metadata !8008, metadata !DIExpression()), !dbg !8011
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8016
  call void @llvm.dbg.value(metadata i8* %10, metadata !8008, metadata !DIExpression()), !dbg !8011
  %11 = add nuw i32 %8, 1, !dbg !8018
  call void @llvm.dbg.value(metadata i32 %11, metadata !8010, metadata !DIExpression()), !dbg !8011
  %12 = load i8, i8* %10, align 1, !dbg !8012
  %13 = icmp ne i8 %12, 0, !dbg !8013
  %14 = icmp ult i32 %11, %1, !dbg !8014
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8014
  br i1 %15, label %7, label %16, !dbg !8015, !llvm.loop !8019

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8011
  ret i32 %17, !dbg !8021
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !8022 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8026, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i8* %1, metadata !8027, metadata !DIExpression()), !dbg !8028
  %3 = load i8, i8* %0, align 1, !dbg !8029
  %4 = load i8, i8* %1, align 1, !dbg !8030
  %5 = icmp ne i8 %3, %4, !dbg !8031
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8032
  br i1 %7, label %18, label %8, !dbg !8032

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8027, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i8* %10, metadata !8026, metadata !DIExpression()), !dbg !8028
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8033
  call void @llvm.dbg.value(metadata i8* %11, metadata !8026, metadata !DIExpression()), !dbg !8028
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8035
  call void @llvm.dbg.value(metadata i8* %12, metadata !8027, metadata !DIExpression()), !dbg !8028
  %13 = load i8, i8* %11, align 1, !dbg !8029
  %14 = load i8, i8* %12, align 1, !dbg !8030
  %15 = icmp ne i8 %13, %14, !dbg !8031
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8032
  br i1 %17, label %18, label %8, !dbg !8032, !llvm.loop !8036

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8029
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8030
  %21 = zext i8 %19 to i32, !dbg !8039
  %22 = zext i8 %20 to i32, !dbg !8040
  %23 = sub nsw i32 %21, %22, !dbg !8041
  ret i32 %23, !dbg !8042
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8043 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8047, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %1, metadata !8048, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32 %2, metadata !8049, metadata !DIExpression()), !dbg !8050
  %4 = icmp eq i32 %2, 0, !dbg !8051
  br i1 %4, label %23, label %5, !dbg !8051

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8049, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %7, metadata !8048, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %8, metadata !8047, metadata !DIExpression()), !dbg !8050
  %9 = load i8, i8* %8, align 1, !dbg !8052
  %10 = load i8, i8* %7, align 1, !dbg !8053
  %11 = icmp ne i8 %9, %10, !dbg !8054
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8055
  br i1 %13, label %19, label %14, !dbg !8055

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8056
  call void @llvm.dbg.value(metadata i8* %15, metadata !8047, metadata !DIExpression()), !dbg !8050
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8058
  call void @llvm.dbg.value(metadata i8* %16, metadata !8048, metadata !DIExpression()), !dbg !8050
  %17 = add i32 %6, -1, !dbg !8059
  call void @llvm.dbg.value(metadata i32 %17, metadata !8049, metadata !DIExpression()), !dbg !8050
  %18 = icmp eq i32 %17, 0, !dbg !8051
  br i1 %18, label %23, label %5, !dbg !8051, !llvm.loop !8060

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8063
  %21 = zext i8 %10 to i32, !dbg !8064
  %22 = sub nsw i32 %20, %21, !dbg !8065
  br label %23, !dbg !8066

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8066
  ret i32 %24, !dbg !8067
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8068 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8073, metadata !DIExpression()), !dbg !8078
  call void @llvm.dbg.value(metadata i8* %1, metadata !8074, metadata !DIExpression()), !dbg !8078
  call void @llvm.dbg.value(metadata i8** %2, metadata !8075, metadata !DIExpression()), !dbg !8078
  %4 = icmp eq i8* %0, null, !dbg !8079
  br i1 %4, label %5, label %7, !dbg !8079

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8080
  br label %7, !dbg !8079

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8079
  call void @llvm.dbg.value(metadata i8* %8, metadata !8076, metadata !DIExpression()), !dbg !8078
  %9 = load i8, i8* %8, align 1, !dbg !8081
  %10 = icmp eq i8 %9, 0, !dbg !8081
  br i1 %10, label %33, label %11, !dbg !8082

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8076, metadata !DIExpression()), !dbg !8078
  %14 = zext i8 %12 to i32, !dbg !8081
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8083
  %16 = icmp eq i8* %15, null, !dbg !8082
  br i1 %16, label %21, label %17, !dbg !8084

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8085
  call void @llvm.dbg.value(metadata i8* %18, metadata !8076, metadata !DIExpression()), !dbg !8078
  %19 = load i8, i8* %18, align 1, !dbg !8081
  %20 = icmp eq i8 %19, 0, !dbg !8081
  br i1 %20, label %33, label %11, !dbg !8082, !llvm.loop !8087

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8077, metadata !DIExpression()), !dbg !8078
  %24 = zext i8 %22 to i32, !dbg !8089
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8090
  %26 = icmp eq i8* %25, null, !dbg !8091
  br i1 %26, label %27, label %31, !dbg !8092

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8093
  call void @llvm.dbg.value(metadata i8* %28, metadata !8077, metadata !DIExpression()), !dbg !8078
  %29 = load i8, i8* %28, align 1, !dbg !8089
  %30 = icmp eq i8 %29, 0, !dbg !8089
  br i1 %30, label %33, label %21, !dbg !8095, !llvm.loop !8096

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8098
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8101
  br label %33, !dbg !8102

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8078
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8078
  store i8* %34, i8** %2, align 4, !dbg !8078
  ret i8* %35, !dbg !8103
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8104 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8106, metadata !DIExpression()), !dbg !8108
  call void @llvm.dbg.value(metadata i8* %1, metadata !8107, metadata !DIExpression()), !dbg !8108
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8109
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8110
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8111
  ret i8* %0, !dbg !8112
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8113 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8115, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i8* %1, metadata !8116, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 %2, metadata !8117, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i8* %0, metadata !8118, metadata !DIExpression()), !dbg !8120
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8121
  call void @llvm.dbg.value(metadata i32 %4, metadata !8119, metadata !DIExpression()), !dbg !8120
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8122
  call void @llvm.dbg.value(metadata i8* %5, metadata !8115, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i8* %1, metadata !8116, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 %2, metadata !8117, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 %2, metadata !8117, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8120
  %6 = icmp eq i32 %2, 0, !dbg !8123
  br i1 %6, label %18, label %7, !dbg !8124

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8125
  call void @llvm.dbg.value(metadata i8* %9, metadata !8115, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i8* %10, metadata !8116, metadata !DIExpression()), !dbg !8120
  %12 = load i8, i8* %10, align 1, !dbg !8126
  %13 = icmp eq i8 %12, 0, !dbg !8127
  br i1 %13, label %18, label %14, !dbg !8128

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8129
  call void @llvm.dbg.value(metadata i8* %15, metadata !8116, metadata !DIExpression()), !dbg !8120
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8131
  call void @llvm.dbg.value(metadata i8* %16, metadata !8115, metadata !DIExpression()), !dbg !8120
  store i8 %12, i8* %9, align 1, !dbg !8132
  call void @llvm.dbg.value(metadata i32 %11, metadata !8117, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.value(metadata i32 %11, metadata !8117, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8120
  %17 = icmp eq i32 %11, 0, !dbg !8123
  br i1 %17, label %18, label %7, !dbg !8124, !llvm.loop !8133

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8120
  store i8 0, i8* %19, align 1, !dbg !8135
  ret i8* %0, !dbg !8136
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8137 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8141, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %1, metadata !8142, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %2, metadata !8143, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %0, metadata !8144, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %1, metadata !8145, metadata !DIExpression()), !dbg !8146
  %4 = icmp eq i32 %2, 0, !dbg !8147
  br i1 %4, label %31, label %5, !dbg !8149

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8145, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %0, metadata !8144, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %2, metadata !8143, metadata !DIExpression()), !dbg !8146
  %6 = add i32 %2, -1, !dbg !8150
  call void @llvm.dbg.value(metadata i32 %6, metadata !8143, metadata !DIExpression()), !dbg !8146
  %7 = icmp eq i32 %6, 0, !dbg !8151
  br i1 %7, label %23, label %8, !dbg !8152

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8153
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8153
  br label %11, !dbg !8153

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8145, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %14, metadata !8144, metadata !DIExpression()), !dbg !8146
  %15 = load i8, i8* %14, align 1, !dbg !8154
  %16 = load i8, i8* %13, align 1, !dbg !8155
  %17 = icmp eq i8 %15, %16, !dbg !8156
  br i1 %17, label %18, label %23, !dbg !8153

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8157
  call void @llvm.dbg.value(metadata i8* %19, metadata !8144, metadata !DIExpression()), !dbg !8146
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8159
  call void @llvm.dbg.value(metadata i8* %20, metadata !8145, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %12, metadata !8143, metadata !DIExpression()), !dbg !8146
  %21 = add i32 %12, -1, !dbg !8150
  call void @llvm.dbg.value(metadata i32 %21, metadata !8143, metadata !DIExpression()), !dbg !8146
  %22 = icmp eq i32 %21, 0, !dbg !8151
  br i1 %22, label %23, label %11, !dbg !8152, !llvm.loop !8160

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8146
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8146
  %26 = load i8, i8* %24, align 1, !dbg !8162
  %27 = zext i8 %26 to i32, !dbg !8162
  %28 = load i8, i8* %25, align 1, !dbg !8163
  %29 = zext i8 %28 to i32, !dbg !8163
  %30 = sub nsw i32 %27, %29, !dbg !8164
  br label %31, !dbg !8165

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8146
  ret i32 %32, !dbg !8166
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8167 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8171, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i8* %1, metadata !8172, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i32 %2, metadata !8173, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i8* %0, metadata !8174, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i8* %1, metadata !8175, metadata !DIExpression()), !dbg !8176
  %4 = ptrtoint i8* %0 to i32, !dbg !8177
  %5 = ptrtoint i8* %1 to i32, !dbg !8177
  %6 = sub i32 %4, %5, !dbg !8177
  %7 = icmp ult i32 %6, %2, !dbg !8179
  br i1 %7, label %10, label %8, !dbg !8180

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8175, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i8* %0, metadata !8174, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i32 %2, metadata !8173, metadata !DIExpression()), !dbg !8176
  %9 = icmp eq i32 %2, 0, !dbg !8181
  br i1 %9, label %26, label %17, !dbg !8183

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8173, metadata !DIExpression()), !dbg !8176
  %12 = add i32 %11, -1, !dbg !8184
  call void @llvm.dbg.value(metadata i32 %12, metadata !8173, metadata !DIExpression()), !dbg !8176
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8187
  %14 = load i8, i8* %13, align 1, !dbg !8187
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8188
  store i8 %14, i8* %15, align 1, !dbg !8189
  %16 = icmp eq i32 %12, 0, !dbg !8190
  br i1 %16, label %26, label %10, !dbg !8191, !llvm.loop !8192

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8175, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i8* %19, metadata !8174, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i32 %20, metadata !8173, metadata !DIExpression()), !dbg !8176
  %21 = load i8, i8* %18, align 1, !dbg !8194
  store i8 %21, i8* %19, align 1, !dbg !8196
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8197
  call void @llvm.dbg.value(metadata i8* %22, metadata !8174, metadata !DIExpression()), !dbg !8176
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8198
  call void @llvm.dbg.value(metadata i8* %23, metadata !8175, metadata !DIExpression()), !dbg !8176
  %24 = add i32 %20, -1, !dbg !8199
  call void @llvm.dbg.value(metadata i32 %24, metadata !8173, metadata !DIExpression()), !dbg !8176
  %25 = icmp eq i32 %24, 0, !dbg !8181
  br i1 %25, label %26, label %17, !dbg !8183, !llvm.loop !8200

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8202
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8203 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8209, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i8* %1, metadata !8210, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i32 %2, metadata !8211, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i8* %0, metadata !8212, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i8* %1, metadata !8213, metadata !DIExpression()), !dbg !8214
  %4 = icmp eq i32 %2, 0, !dbg !8215
  br i1 %4, label %14, label %5, !dbg !8216

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8213, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i8* %7, metadata !8212, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i32 %8, metadata !8211, metadata !DIExpression()), !dbg !8214
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8217
  call void @llvm.dbg.value(metadata i8* %9, metadata !8213, metadata !DIExpression()), !dbg !8214
  %10 = load i8, i8* %6, align 1, !dbg !8219
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8220
  call void @llvm.dbg.value(metadata i8* %11, metadata !8212, metadata !DIExpression()), !dbg !8214
  store i8 %10, i8* %7, align 1, !dbg !8221
  %12 = add i32 %8, -1, !dbg !8222
  call void @llvm.dbg.value(metadata i32 %12, metadata !8211, metadata !DIExpression()), !dbg !8214
  %13 = icmp eq i32 %12, 0, !dbg !8215
  br i1 %13, label %14, label %5, !dbg !8216, !llvm.loop !8223

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8225
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8226 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8230, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.value(metadata i32 %1, metadata !8231, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.value(metadata i32 %2, metadata !8232, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.value(metadata i8* %0, metadata !8233, metadata !DIExpression()), !dbg !8235
  %4 = trunc i32 %1 to i8, !dbg !8236
  call void @llvm.dbg.value(metadata i8 %4, metadata !8234, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.value(metadata i32 %2, metadata !8232, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.value(metadata i8* %0, metadata !8233, metadata !DIExpression()), !dbg !8235
  %5 = icmp eq i32 %2, 0, !dbg !8237
  br i1 %5, label %12, label %6, !dbg !8238

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8232, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.value(metadata i8* %8, metadata !8233, metadata !DIExpression()), !dbg !8235
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8239
  call void @llvm.dbg.value(metadata i8* %9, metadata !8233, metadata !DIExpression()), !dbg !8235
  store i8 %4, i8* %8, align 1, !dbg !8241
  %10 = add i32 %7, -1, !dbg !8242
  call void @llvm.dbg.value(metadata i32 %10, metadata !8232, metadata !DIExpression()), !dbg !8235
  %11 = icmp eq i32 %10, 0, !dbg !8237
  br i1 %11, label %12, label %6, !dbg !8238, !llvm.loop !8243

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8245
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8246 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8250, metadata !DIExpression()), !dbg !8256
  call void @llvm.dbg.value(metadata i32 %1, metadata !8251, metadata !DIExpression()), !dbg !8256
  call void @llvm.dbg.value(metadata i32 %2, metadata !8252, metadata !DIExpression()), !dbg !8256
  %4 = icmp eq i32 %2, 0, !dbg !8257
  br i1 %4, label %17, label %5, !dbg !8258

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8259

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8260
  call void @llvm.dbg.value(metadata i8* %9, metadata !8253, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i32 %8, metadata !8252, metadata !DIExpression()), !dbg !8256
  call void @llvm.dbg.value(metadata i8* %9, metadata !8253, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8260
  %10 = load i8, i8* %9, align 1, !dbg !8261
  %11 = icmp eq i8 %10, %6, !dbg !8264
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8265
  call void @llvm.dbg.value(metadata i8* %12, metadata !8253, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i32 %13, metadata !8252, metadata !DIExpression()), !dbg !8256
  br i1 %15, label %16, label %7, !dbg !8265, !llvm.loop !8266

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8268

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8256
  ret i8* %19, !dbg !8269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !8270 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8272, metadata !DIExpression()), !dbg !8273
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8274
  ret void, !dbg !8275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !8276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8278, metadata !DIExpression()), !dbg !8279
  ret i32 -1, !dbg !8280
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8285, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata i32* %1, metadata !8286, metadata !DIExpression()), !dbg !8287
  %3 = ptrtoint i32* %1 to i32, !dbg !8288
  %4 = and i32 %3, -2, !dbg !8288
  %5 = icmp eq i32 %4, 2, !dbg !8288
  br i1 %5, label %6, label %9, !dbg !8288

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8289
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8289
  br label %9, !dbg !8290

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8290
  ret i32 %10, !dbg !8291
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8294, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.value(metadata i32* %1, metadata !8295, metadata !DIExpression()), !dbg !8296
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8297
  ret i32 %3, !dbg !8298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32* %1, metadata !8303, metadata !DIExpression()), !dbg !8304
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8305, !srcloc !8307
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8308
  ret i32 %3, !dbg !8309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8310 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8315, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata i32* %1, metadata !8316, metadata !DIExpression()), !dbg !8319
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8320
  call void @llvm.dbg.value(metadata i32 %3, metadata !8317, metadata !DIExpression()), !dbg !8319
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8321
  call void @llvm.dbg.value(metadata i32 %4, metadata !8318, metadata !DIExpression()), !dbg !8319
  %5 = icmp ne i32 %3, %4, !dbg !8322
  %6 = sext i1 %5 to i32, !dbg !8323
  ret i32 %6, !dbg !8324
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8325 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8329, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i32 %1, metadata !8330, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i32 %2, metadata !8331, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i32* %3, metadata !8332, metadata !DIExpression()), !dbg !8333
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8334
  ret i32 %5, !dbg !8335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8336 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8338, metadata !DIExpression()), !dbg !8342
  call void @llvm.dbg.value(metadata i32 %1, metadata !8339, metadata !DIExpression()), !dbg !8342
  call void @llvm.dbg.value(metadata i32 %2, metadata !8340, metadata !DIExpression()), !dbg !8342
  call void @llvm.dbg.value(metadata i32* %3, metadata !8341, metadata !DIExpression()), !dbg !8342
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8343, !srcloc !8345
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8346
  ret i32 %5, !dbg !8347
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8348 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8350, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32 %1, metadata !8351, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32 %2, metadata !8352, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32* %3, metadata !8353, metadata !DIExpression()), !dbg !8358
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8359
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8361
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8361
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8361
  br i1 %11, label %33, label %12, !dbg !8361

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8358
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8358
  call void @llvm.dbg.value(metadata i8* %14, metadata !8356, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32 %13, metadata !8354, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32 %1, metadata !8355, metadata !DIExpression()), !dbg !8358
  br label %15, !dbg !8362

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8364
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8358
  call void @llvm.dbg.value(metadata i8* %17, metadata !8356, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32 %16, metadata !8355, metadata !DIExpression()), !dbg !8358
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8365
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8368
  call void @llvm.dbg.value(metadata i8* %19, metadata !8356, metadata !DIExpression()), !dbg !8358
  %20 = load i8, i8* %17, align 1, !dbg !8369
  %21 = zext i8 %20 to i32, !dbg !8370
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8365
  %23 = icmp eq i32 %22, -1, !dbg !8371
  br i1 %23, label %30, label %24, !dbg !8372

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8373
  call void @llvm.dbg.value(metadata i32 %25, metadata !8355, metadata !DIExpression()), !dbg !8358
  %26 = icmp eq i32 %25, 0, !dbg !8374
  br i1 %26, label %27, label %15, !dbg !8375, !llvm.loop !8376

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8378
  call void @llvm.dbg.value(metadata i32 %28, metadata !8354, metadata !DIExpression()), !dbg !8358
  %29 = icmp eq i32 %28, 0, !dbg !8379
  br i1 %29, label %30, label %12, !dbg !8380, !llvm.loop !8381

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8358
  call void @llvm.dbg.value(metadata i32 %31, metadata !8354, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.label(metadata !8357), !dbg !8384
  %32 = sub i32 %2, %31, !dbg !8385
  br label %33, !dbg !8386

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8358
  ret i32 %34, !dbg !8387
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8388 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8392, metadata !DIExpression()), !dbg !8393
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8394
  %3 = icmp eq i32 %2, -1, !dbg !8396
  br i1 %3, label %8, label %4, !dbg !8397

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8398
  %6 = icmp eq i32 %5, -1, !dbg !8399
  %7 = sext i1 %6 to i32, !dbg !8398
  br label %8, !dbg !8400

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8393
  ret i32 %9, !dbg !8401
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8402 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8404, metadata !DIExpression()), !dbg !8405
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8406
  ret void, !dbg !8407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8412, metadata !DIExpression()), !dbg !8418
  call void @llvm.dbg.value(metadata i32 %1, metadata !8413, metadata !DIExpression()), !dbg !8418
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8414, metadata !DIExpression()), !dbg !8418
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8419
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8419
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8419
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8415, metadata !DIExpression()), !dbg !8418
  call void @llvm.dbg.value(metadata i32 %0, metadata !8417, metadata !DIExpression()), !dbg !8418
  %7 = icmp slt i32 %0, %1, !dbg !8420
  br i1 %7, label %8, label %22, !dbg !8423

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8417, metadata !DIExpression()), !dbg !8418
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8424
  %11 = icmp eq i32 %10, 0, !dbg !8424
  br i1 %11, label %19, label %12, !dbg !8427

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8428
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8430
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8430
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8432
  br i1 %15, label %19, label %16, !dbg !8433

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8434
  %18 = load i8*, i8** %17, align 4, !dbg !8434
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8435
  br label %19, !dbg !8436

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8437
  call void @llvm.dbg.value(metadata i32 %20, metadata !8417, metadata !DIExpression()), !dbg !8418
  %21 = icmp eq i32 %20, %1, !dbg !8420
  br i1 %21, label %22, label %8, !dbg !8423, !llvm.loop !8438

22:                                               ; preds = %19, %3
  ret void, !dbg !8440
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8443, metadata !DIExpression()), !dbg !8444
  %2 = shl nuw i32 1, %0, !dbg !8445
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8448
  ret i32 %3, !dbg !8449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8454, metadata !DIExpression()), !dbg !8455
  %2 = shl nuw i32 1, %0, !dbg !8456
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8459
  ret void, !dbg !8460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8464, metadata !DIExpression()), !dbg !8465
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8466
  ret void, !dbg !8467
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8468 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8470, metadata !DIExpression()), !dbg !8471
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8472
  %3 = and i32 %2, %0, !dbg !8472
  %4 = icmp eq i32 %3, %0, !dbg !8473
  %5 = zext i1 %4 to i32, !dbg !8473
  ret i32 %5, !dbg !8474
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8477, metadata !DIExpression()), !dbg !8478
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8479
  ret void, !dbg !8480
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8481 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8483, metadata !DIExpression()), !dbg !8484
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8485
  ret void, !dbg !8486
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8489, metadata !DIExpression()), !dbg !8490
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8491
  ret void, !dbg !8492
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8493 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8495, metadata !DIExpression()), !dbg !8496
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8497
  ret void, !dbg !8498
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8499 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8501, metadata !DIExpression()), !dbg !8502
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8503
  ret void, !dbg !8504
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8507, metadata !DIExpression()), !dbg !8508
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8509
  ret void, !dbg !8510
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8511 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8513, metadata !DIExpression()), !dbg !8514
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8515
  ret void, !dbg !8516
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8517 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8519, metadata !DIExpression()), !dbg !8520
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8521
  ret void, !dbg !8522
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8523 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8525, metadata !DIExpression()), !dbg !8526
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8527
  ret void, !dbg !8528
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8529 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8531, metadata !DIExpression()), !dbg !8532
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8533
  ret void, !dbg !8534
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8535 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8537, metadata !DIExpression()), !dbg !8538
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8539
  ret i32 0, !dbg !8540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !709 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !713, metadata !DIExpression()), !dbg !8541
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8542
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8544
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8546
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8548
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8550
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8552
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8554
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8556
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8558
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8560
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8562
  ret void, !dbg !8564
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8567, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i32 0, metadata !8568, metadata !DIExpression()), !dbg !8569
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8570
  %3 = load i32, i32* %2, align 4, !dbg !8570
  call void @llvm.dbg.value(metadata i32 %3, metadata !8568, metadata !DIExpression()), !dbg !8569
  %4 = shl nuw i32 1, %0, !dbg !8571
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8572
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8573
  ret void, !dbg !8574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8577, metadata !DIExpression()), !dbg !8578
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8579
  %3 = or i32 %2, %0, !dbg !8579
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8579
  ret void, !dbg !8580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8583, metadata !DIExpression()), !dbg !8584
  %2 = icmp slt i32 %0, 32, !dbg !8585
  br i1 %2, label %3, label %5, !dbg !8587

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8588
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8590
  br label %5, !dbg !8591

5:                                                ; preds = %1, %3
  ret void, !dbg !8592
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8595, metadata !DIExpression()), !dbg !8596
  %2 = xor i32 %0, -1, !dbg !8597
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8597
  %4 = and i32 %3, %2, !dbg !8597
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8597
  ret void, !dbg !8598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8603, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata i32 %1, metadata !8604, metadata !DIExpression()), !dbg !8605
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8606

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8607
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8609
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8610
  br label %11, !dbg !8611

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8612
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8613
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8614
  br label %11, !dbg !8615

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8616
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8617
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8618
  br label %11, !dbg !8619

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8620
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8621
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8622
  br label %11, !dbg !8623

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8627, metadata !DIExpression()), !dbg !8628
  %2 = xor i32 %0, -1, !dbg !8629
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8629
  %4 = and i32 %3, %2, !dbg !8629
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8629
  ret void, !dbg !8630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8633, metadata !DIExpression()), !dbg !8634
  %2 = xor i32 %0, -1, !dbg !8635
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8635
  %4 = and i32 %3, %2, !dbg !8635
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8635
  ret void, !dbg !8636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8639, metadata !DIExpression()), !dbg !8640
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8641
  %3 = or i32 %2, %0, !dbg !8641
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8641
  ret void, !dbg !8642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8645, metadata !DIExpression()), !dbg !8646
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8647
  %3 = or i32 %2, %0, !dbg !8647
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8647
  ret void, !dbg !8648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !8649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8653, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8654, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.value(metadata i8* %2, metadata !8655, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8656, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8658, metadata !DIExpression()), !dbg !8659
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8660
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8660
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8662
  br i1 %6, label %7, label %9, !dbg !8663

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8664
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8665
  store i8* %2, i8** %8, align 4, !dbg !8666
  br label %9, !dbg !8667

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8659
  ret i32 %10, !dbg !8668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8671, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8672, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8673, metadata !DIExpression()), !dbg !8674
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8675
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8676
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8677
  store i8* null, i8** %3, align 4, !dbg !8678
  ret void, !dbg !8679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8682, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.value(metadata i8* %1, metadata !8683, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.value(metadata i8* %1, metadata !8684, metadata !DIExpression()), !dbg !8687
  %3 = bitcast i8* %1 to i32*, !dbg !8688
  %4 = load i32, i32* %3, align 4, !dbg !8688
  %5 = add i32 %4, -169, !dbg !8688
  %6 = icmp ult i32 %5, -121, !dbg !8688
  br i1 %6, label %15, label %7, !dbg !8690

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8691
  %9 = inttoptr i32 %8 to i32*, !dbg !8692
  call void @llvm.dbg.value(metadata i32* %9, metadata !8685, metadata !DIExpression()), !dbg !8687
  %10 = load volatile i32, i32* %9, align 4, !dbg !8693
  call void @llvm.dbg.value(metadata i32 %10, metadata !8686, metadata !DIExpression()), !dbg !8687
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8694
  %12 = bitcast i8* %11 to i32*, !dbg !8694
  %13 = load i32, i32* %12, align 4, !dbg !8694
  %14 = or i32 %13, %10, !dbg !8695
  call void @llvm.dbg.value(metadata i32 %14, metadata !8686, metadata !DIExpression()), !dbg !8687
  store volatile i32 %14, i32* %9, align 4, !dbg !8696
  br label %15, !dbg !8697

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8687
  ret i32 %16, !dbg !8698
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8699 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8701, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i8* %1, metadata !8702, metadata !DIExpression()), !dbg !8706
  call void @llvm.dbg.value(metadata i8* %1, metadata !8703, metadata !DIExpression()), !dbg !8706
  %3 = bitcast i8* %1 to i32*, !dbg !8707
  %4 = load i32, i32* %3, align 4, !dbg !8707
  %5 = add i32 %4, -169, !dbg !8707
  %6 = icmp ult i32 %5, -121, !dbg !8707
  br i1 %6, label %16, label %7, !dbg !8709

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8710
  %9 = inttoptr i32 %8 to i32*, !dbg !8711
  call void @llvm.dbg.value(metadata i32* %9, metadata !8704, metadata !DIExpression()), !dbg !8706
  %10 = load volatile i32, i32* %9, align 4, !dbg !8712
  call void @llvm.dbg.value(metadata i32 %10, metadata !8705, metadata !DIExpression()), !dbg !8706
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8713
  %12 = bitcast i8* %11 to i32*, !dbg !8713
  %13 = load i32, i32* %12, align 4, !dbg !8713
  %14 = xor i32 %13, -1, !dbg !8714
  %15 = and i32 %10, %14, !dbg !8715
  call void @llvm.dbg.value(metadata i32 %15, metadata !8705, metadata !DIExpression()), !dbg !8706
  store volatile i32 %15, i32* %9, align 4, !dbg !8716
  br label %16, !dbg !8717

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8706
  ret i32 %17, !dbg !8718
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8721, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i8* %1, metadata !8722, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i32* %2, metadata !8723, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i8* %1, metadata !8724, metadata !DIExpression()), !dbg !8729
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8730
  call void @llvm.dbg.value(metadata i32 %4, metadata !8725, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i32 undef, metadata !8726, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i32 undef, metadata !8727, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i32 %4, metadata !8728, metadata !DIExpression()), !dbg !8729
  %5 = bitcast i8* %1 to i32*, !dbg !8731
  %6 = load i32, i32* %5, align 4, !dbg !8731
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !8732

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8733
  call void @llvm.dbg.value(metadata i32 %8, metadata !8726, metadata !DIExpression()), !dbg !8729
  br label %16, !dbg !8734

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8736
  call void @llvm.dbg.value(metadata i32 %10, metadata !8727, metadata !DIExpression()), !dbg !8729
  br label %16, !dbg !8737

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8738
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #26, !dbg !8739
  br label %16, !dbg !8740

14:                                               ; preds = %3
  br label %16, !dbg !8741

15:                                               ; preds = %3
  br label %16, !dbg !8742

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !8743
  br label %18, !dbg !8744

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !8729
  ret i32 %19, !dbg !8744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8745 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8747, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i8* %1, metadata !8748, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i8* %2, metadata !8749, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i8* %1, metadata !8750, metadata !DIExpression()), !dbg !8755
  %4 = bitcast i8* %1 to i32*, !dbg !8756
  %5 = load i32, i32* %4, align 4, !dbg !8756
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8757
  call void @llvm.dbg.value(metadata i32 %6, metadata !8754, metadata !DIExpression()), !dbg !8755
  %7 = icmp slt i32 %6, 0, !dbg !8758
  br i1 %7, label %22, label %8, !dbg !8760

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8750, metadata !DIExpression()), !dbg !8755
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8761
  %10 = bitcast i8* %9 to i32*, !dbg !8761
  %11 = load i32, i32* %10, align 4, !dbg !8761
  %12 = lshr i32 %11, 16, !dbg !8761
  %13 = and i32 %12, 7, !dbg !8761
  %14 = lshr i32 %11, 8, !dbg !8762
  %15 = and i32 %14, 31, !dbg !8762
  %16 = shl i32 %13, %15, !dbg !8763
  call void @llvm.dbg.value(metadata i32 %16, metadata !8753, metadata !DIExpression()), !dbg !8755
  %17 = and i32 %11, 255, !dbg !8764
  %18 = or i32 %17, 1073887232, !dbg !8765
  %19 = inttoptr i32 %18 to i32*, !dbg !8766
  call void @llvm.dbg.value(metadata i32* %19, metadata !8751, metadata !DIExpression()), !dbg !8755
  %20 = load volatile i32, i32* %19, align 4, !dbg !8767
  call void @llvm.dbg.value(metadata i32 %20, metadata !8752, metadata !DIExpression()), !dbg !8755
  %21 = or i32 %16, %20, !dbg !8768
  call void @llvm.dbg.value(metadata i32 %21, metadata !8752, metadata !DIExpression()), !dbg !8755
  store volatile i32 %21, i32* %19, align 4, !dbg !8769
  br label %22, !dbg !8770

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8755
  ret i32 %23, !dbg !8771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8776, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i32 0, metadata !8777, metadata !DIExpression()), !dbg !8778
  %2 = add i32 %0, -1, !dbg !8779
  %3 = icmp ult i32 %2, 6, !dbg !8779
  br i1 %3, label %4, label %7, !dbg !8779

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8779
  %6 = load i32, i32* %5, align 4, !dbg !8779
  call void @llvm.dbg.value(metadata i32 %6, metadata !8777, metadata !DIExpression()), !dbg !8778
  br label %7, !dbg !8780

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8778
  ret i32 %8, !dbg !8781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8786, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %1, metadata !8787, metadata !DIExpression()), !dbg !8788
  %3 = udiv i32 %0, %1, !dbg !8789
  ret i32 %3, !dbg !8790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #11 !dbg !8791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8795, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i32 16, metadata !8796, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i32 336, metadata !8797, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i32 4, metadata !8798, metadata !DIExpression()), !dbg !8799
  %2 = mul i32 %0, 336, !dbg !8800
  %3 = lshr i32 %2, 6, !dbg !8801
  ret i32 %3, !dbg !8802
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8803 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8805, metadata !DIExpression()), !dbg !8808
  tail call void @config_enable_default_clocks() #25, !dbg !8809
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8810
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8810
  %4 = lshr i32 %3, 4, !dbg !8810
  %5 = and i32 %4, 15, !dbg !8810
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8810
  %7 = load i8, i8* %6, align 1, !dbg !8810
  %8 = zext i8 %7 to i32, !dbg !8810
  %9 = lshr i32 %2, %8, !dbg !8810
  call void @llvm.dbg.value(metadata i32 %9, metadata !8806, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8807, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8808
  %10 = icmp ult i32 %9, 84000000, !dbg !8811
  br i1 %10, label %11, label %13, !dbg !8813

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8814
  br label %13, !dbg !8816

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8817
  tail call fastcc void @set_up_plls() #26, !dbg !8818
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8819
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8822
  br label %14, !dbg !8823

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8824
  %16 = icmp eq i32 %15, 8, !dbg !8825
  br i1 %16, label %17, label %14, !dbg !8823, !llvm.loop !8826

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8828
  br i1 %18, label %19, label %21, !dbg !8830

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8831
  br label %21, !dbg !8833

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8834
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8835
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8836
  ret i32 0, !dbg !8837
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8838 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8840
  %2 = and i32 %1, 240, !dbg !8840
  ret i32 %2, !dbg !8841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8842 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8843
  %2 = icmp eq i32 %1, 1, !dbg !8847
  br i1 %2, label %7, label %3, !dbg !8848

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8849
  br label %4, !dbg !8851

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8852
  %6 = icmp eq i32 %5, 1, !dbg !8853
  br i1 %6, label %7, label %4, !dbg !8851, !llvm.loop !8854

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8856
  br label %8, !dbg !8859

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8860
  %10 = icmp eq i32 %9, 1, !dbg !8861
  br i1 %10, label %11, label %8, !dbg !8859, !llvm.loop !8862

11:                                               ; preds = %8
  ret void, !dbg !8864
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8865 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8866
  %2 = icmp eq i32 %1, 8, !dbg !8868
  br i1 %2, label %3, label %4, !dbg !8869

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8870
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8872
  br label %4, !dbg !8873

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8874
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8875
  %6 = and i32 %5, -196609, !dbg !8875
  %7 = or i32 %6, 65536, !dbg !8875
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8875
  tail call void @config_pll_sysclock() #25, !dbg !8876
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8877
  br label %8, !dbg !8878

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8879
  %10 = icmp eq i32 %9, 1, !dbg !8880
  br i1 %10, label %11, label %8, !dbg !8878, !llvm.loop !8881

11:                                               ; preds = %8
  ret void, !dbg !8883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8884 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8886, metadata !DIExpression()), !dbg !8887
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8888
  %2 = and i32 %1, -241, !dbg !8888
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8888
  ret void, !dbg !8889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8892, metadata !DIExpression()), !dbg !8893
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8894
  %3 = and i32 %2, -4, !dbg !8894
  %4 = or i32 %3, %0, !dbg !8894
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8894
  ret void, !dbg !8895
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8896 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8897
  %2 = and i32 %1, 12, !dbg !8897
  ret i32 %2, !dbg !8898
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8899 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8901, metadata !DIExpression()), !dbg !8902
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8903
  %2 = and i32 %1, -7169, !dbg !8903
  %3 = or i32 %2, 4096, !dbg !8903
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8903
  ret void, !dbg !8904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8905 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8907, metadata !DIExpression()), !dbg !8908
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8909
  %2 = and i32 %1, -57345, !dbg !8909
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8909
  ret void, !dbg !8910
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8911 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8912
  %2 = icmp eq i32 %1, 1, !dbg !8914
  br i1 %2, label %7, label %3, !dbg !8915

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8916
  br label %4, !dbg !8918

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8919
  %6 = icmp eq i32 %5, 1, !dbg !8920
  br i1 %6, label %7, label %4, !dbg !8918, !llvm.loop !8921

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8923
  br label %8, !dbg !8924

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8925
  %10 = icmp eq i32 %9, 0, !dbg !8926
  br i1 %10, label %11, label %8, !dbg !8924, !llvm.loop !8927

11:                                               ; preds = %8
  ret void, !dbg !8929
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8930 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8931
  %2 = and i32 %1, -16777217, !dbg !8931
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8931
  ret void, !dbg !8932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8933 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8934
  %2 = or i32 %1, 16777216, !dbg !8934
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8934
  ret void, !dbg !8935
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8936 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8937
  %2 = lshr i32 %1, 25, !dbg !8938
  %3 = and i32 %2, 1, !dbg !8938
  ret i32 %3, !dbg !8939
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8940 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8941
  %2 = lshr i32 %1, 1, !dbg !8942
  %3 = and i32 %2, 1, !dbg !8942
  ret i32 %3, !dbg !8943
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8944 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8945
  %2 = or i32 %1, 1, !dbg !8945
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8945
  ret void, !dbg !8946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8947 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8948
  %2 = or i32 %1, 1, !dbg !8948
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8948
  ret void, !dbg !8949
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8950 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8951
  %2 = lshr i32 %1, 1, !dbg !8952
  %3 = and i32 %2, 1, !dbg !8952
  ret i32 %3, !dbg !8953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8954 {
  ret i32 16000000, !dbg !8956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8959 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8960
  ret void, !dbg !8961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8962 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8966, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.value(metadata i32 16, metadata !8967, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.value(metadata i32 336, metadata !8968, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.value(metadata i32 65536, metadata !8969, metadata !DIExpression()), !dbg !8970
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8971
  %2 = and i32 %1, -4227072, !dbg !8971
  %3 = or i32 %2, 21520, !dbg !8971
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8971
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8972
  %5 = and i32 %4, -196609, !dbg !8972
  %6 = or i32 %5, 65536, !dbg !8972
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8972
  ret void, !dbg !8973
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8974 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8975
  ret void, !dbg !8976
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8977 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8980, metadata !DIExpression()), !dbg !8982
  %2 = bitcast i32* %1 to i8*, !dbg !8983
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8983
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8981, metadata !DIExpression()), !dbg !8984
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8985
  %4 = or i32 %3, 268435456, !dbg !8985
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8985
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8986
  %6 = and i32 %5, 268435456, !dbg !8986
  store volatile i32 %6, i32* %1, align 4, !dbg !8987
  %7 = load volatile i32, i32* %1, align 4, !dbg !8988
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8989
  ret void, !dbg !8989
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8990 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8992, metadata !DIExpression()), !dbg !8993
  %2 = tail call fastcc zeroext i1 @device_is_ready.49() #26, !dbg !8994
  br i1 %2, label %3, label %4, !dbg !8996

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8997
  br label %4, !dbg !8998

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8993
  ret i32 %5, !dbg !8999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.49() unnamed_addr #1 !dbg !9000 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9004, metadata !DIExpression()), !dbg !9005
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9006, !srcloc !9008
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.52() #26, !dbg !9009
  ret i1 %1, !dbg !9010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9011 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9012
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9013
  ret void, !dbg !9014
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9017, metadata !DIExpression()), !dbg !9019
  %2 = load i32 (i8)*, i32 (i8)** @debug_hook_out, align 4, !dbg !9020
  %3 = trunc i32 %0 to i8, !dbg !9020
  %4 = tail call i32 %2(i8 noundef zeroext %3) #25, !dbg !9020
  %5 = icmp eq i32 %4, 1, !dbg !9020
  call void @llvm.dbg.value(metadata i1 %5, metadata !9018, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9019
  br i1 %5, label %10, label %6, !dbg !9021

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 10, !dbg !9022
  br i1 %7, label %8, label %9, !dbg !9024

8:                                                ; preds = %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 13) #26, !dbg !9025
  br label %9, !dbg !9027

9:                                                ; preds = %8, %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %3) #26, !dbg !9028
  br label %10, !dbg !9029

10:                                               ; preds = %1, %9
  ret i32 %0, !dbg !9030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.50(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9031 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9033, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i8 %0, metadata !9034, metadata !DIExpression()), !dbg !9035
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9036, !srcloc !9038
  tail call fastcc void @z_impl_uart_poll_out.51(i8 noundef zeroext %0) #26, !dbg !9039
  ret void, !dbg !9040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.51(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9041 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9043, metadata !DIExpression()), !dbg !9046
  call void @llvm.dbg.value(metadata i8 %0, metadata !9044, metadata !DIExpression()), !dbg !9046
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9047
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9045, metadata !DIExpression()), !dbg !9046
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9048
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9048
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !9049
  ret void, !dbg !9050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @debug_hook_out_nop(i8 noundef zeroext %0) #11 !dbg !9051 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9053, metadata !DIExpression()), !dbg !9054
  ret i32 0, !dbg !9055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.52() unnamed_addr #1 !dbg !9056 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9058, metadata !DIExpression()), !dbg !9059
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9060
  ret i1 %1, !dbg !9061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_in_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9062 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9066, metadata !DIExpression()), !dbg !9067
  store i32 (i8)* %0, i32 (i8)** @debug_hook_in, align 4, !dbg !9068
  ret void, !dbg !9069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_out_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9070 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9074, metadata !DIExpression()), !dbg !9075
  store i32 (i8)* %0, i32 (i8)** @debug_hook_out, align 4, !dbg !9076
  ret void, !dbg !9077
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !9078 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9082, metadata !DIExpression()), !dbg !9085
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9083, metadata !DIExpression()), !dbg !9085
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9084, metadata !DIExpression()), !dbg !9085
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !9086
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !9087
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9088
  tail call fastcc void @console_input_init() #26, !dbg !9089
  ret void, !dbg !9090
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !9091 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9094
  tail call fastcc void @uart_irq_rx_disable.53() #26, !dbg !9095
  tail call fastcc void @uart_irq_tx_disable.54() #26, !dbg !9096
  tail call fastcc void @uart_irq_callback_set() #26, !dbg !9097
  %2 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9098
  %3 = icmp eq i32 %2, 0, !dbg !9099
  br i1 %3, label %8, label %4, !dbg !9099

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !9093, metadata !DIExpression(DW_OP_deref)), !dbg !9100
  %5 = call fastcc i32 @uart_fifo_read.56(i8* noundef nonnull %1) #26, !dbg !9101
  %6 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9098
  %7 = icmp eq i32 %6, 0, !dbg !9099
  br i1 %7, label %8, label %4, !dbg !9099, !llvm.loop !9103

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable.57() #26, !dbg !9105
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9106
  ret void, !dbg !9106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable.53() unnamed_addr #1 !dbg !9107 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9109, metadata !DIExpression()), !dbg !9110
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9111, !srcloc !9113
  tail call fastcc void @z_impl_uart_irq_rx_disable.66() #26, !dbg !9114
  ret void, !dbg !9115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable.54() unnamed_addr #1 !dbg !9116 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9118, metadata !DIExpression()), !dbg !9119
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9120, !srcloc !9122
  tail call fastcc void @z_impl_uart_irq_tx_disable.65() #26, !dbg !9123
  ret void, !dbg !9124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !9125 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9129, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9130, metadata !DIExpression()), !dbg !9131
  tail call fastcc void @uart_irq_callback_user_data_set.59() #26, !dbg !9132
  ret void, !dbg !9133
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready.55() unnamed_addr #1 !dbg !9134 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9136, metadata !DIExpression()), !dbg !9138
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9139
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9137, metadata !DIExpression()), !dbg !9138
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !9140
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9140
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9142
  br i1 %4, label %7, label %5, !dbg !9143

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9144
  br label %7, !dbg !9145

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9138
  ret i32 %8, !dbg !9146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read.56(i8* noundef %0) unnamed_addr #1 !dbg !9147 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9149, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i8* %0, metadata !9150, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata i32 1, metadata !9151, metadata !DIExpression()), !dbg !9153
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9154
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9152, metadata !DIExpression()), !dbg !9153
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !9155
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !9155
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !9157
  br i1 %5, label %8, label %6, !dbg !9158

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8* noundef %0, i32 noundef 1) #25, !dbg !9159
  br label %8, !dbg !9160

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !9153
  ret i32 %9, !dbg !9161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable.57() unnamed_addr #1 !dbg !9162 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9164, metadata !DIExpression()), !dbg !9165
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9166, !srcloc !9168
  tail call fastcc void @z_impl_uart_irq_rx_enable.58() #26, !dbg !9169
  ret void, !dbg !9170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable.58() unnamed_addr #1 !dbg !9171 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9173, metadata !DIExpression()), !dbg !9175
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9176
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9174, metadata !DIExpression()), !dbg !9175
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !9177
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9177
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9179
  br i1 %4, label %6, label %5, !dbg !9180

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9181
  br label %6, !dbg !9183

6:                                                ; preds = %5, %0
  ret void, !dbg !9184
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1076 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1078, metadata !DIExpression()), !dbg !9185
  call void @llvm.dbg.value(metadata i8* %1, metadata !1079, metadata !DIExpression()), !dbg !9185
  %4 = call fastcc i32 @uart_irq_update.60() #26, !dbg !9186
  %5 = icmp eq i32 %4, 0, !dbg !9186
  br i1 %5, label %96, label %6, !dbg !9187

6:                                                ; preds = %2, %93
  %7 = call fastcc i32 @uart_irq_is_pending() #26, !dbg !9188
  %8 = icmp eq i32 %7, 0, !dbg !9187
  br i1 %8, label %96, label %9, !dbg !9189

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9190
  %10 = call fastcc i32 @uart_irq_rx_ready.55() #26, !dbg !9191
  %11 = icmp eq i32 %10, 0, !dbg !9191
  br i1 %11, label %93, label %12, !dbg !9193, !llvm.loop !9194

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1080, metadata !DIExpression(DW_OP_deref)), !dbg !9196
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #26, !dbg !9197
  call void @llvm.dbg.value(metadata i32 %13, metadata !1082, metadata !DIExpression()), !dbg !9196
  %14 = icmp slt i32 %13, 0, !dbg !9198
  br i1 %14, label %92, label %15, !dbg !9200

15:                                               ; preds = %12
  %16 = load i32 (i8)*, i32 (i8)** @debug_hook_in, align 4, !dbg !9201
  %17 = icmp eq i32 (i8)* %16, null, !dbg !9203
  br i1 %17, label %22, label %18, !dbg !9204

18:                                               ; preds = %15
  %19 = load i8, i8* %3, align 1, !dbg !9205
  call void @llvm.dbg.value(metadata i8 %19, metadata !1080, metadata !DIExpression()), !dbg !9196
  %20 = call i32 %16(i8 noundef zeroext %19) #25, !dbg !9206
  %21 = icmp eq i32 %20, 0, !dbg !9207
  br i1 %21, label %22, label %92, !dbg !9208

22:                                               ; preds = %18, %15
  %23 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9209
  %24 = icmp eq %struct.console_input* %23, null, !dbg !9209
  br i1 %24, label %25, label %30, !dbg !9210

25:                                               ; preds = %22
  %26 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !9211
  %27 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %26, i32 0, i32 0, !dbg !9211
  %28 = call fastcc i8* @k_queue_get(%struct.k_queue* noundef %27) #26, !dbg !9211
  call void @llvm.dbg.value(metadata i8* %28, metadata !1083, metadata !DIExpression()), !dbg !9212
  store i8* %28, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9213
  %29 = icmp eq i8* %28, null, !dbg !9214
  br i1 %29, label %92, label %30, !dbg !9216

30:                                               ; preds = %25, %22
  %31 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #26, !dbg !9217
  br i1 %31, label %32, label %36, !dbg !9219

32:                                               ; preds = %30
  %33 = load i8, i8* %3, align 1, !dbg !9220
  call void @llvm.dbg.value(metadata i8 %33, metadata !1080, metadata !DIExpression()), !dbg !9196
  %34 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9222
  %35 = getelementptr inbounds %struct.console_input, %struct.console_input* %34, i32 0, i32 2, i32 0, !dbg !9222
  call fastcc void @handle_ansi(i8 noundef zeroext %33, i8* noundef nonnull %35) #26, !dbg !9223
  br label %93, !dbg !9224, !llvm.loop !9194

36:                                               ; preds = %30
  %37 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #26, !dbg !9225
  %38 = load i8, i8* %3, align 1, !dbg !9196
  call void @llvm.dbg.value(metadata i8 %38, metadata !1080, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.value(metadata i8 %38, metadata !1080, metadata !DIExpression()), !dbg !9196
  br i1 %37, label %39, label %42, !dbg !9227

39:                                               ; preds = %36
  %40 = icmp eq i8 %38, 91, !dbg !9228
  br i1 %40, label %41, label %93, !dbg !9231, !llvm.loop !9194

41:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 1) #26, !dbg !9232
  call fastcc void @atomic_set_bit(i32 noundef 2) #26, !dbg !9234
  br label %93, !dbg !9235, !llvm.loop !9194

42:                                               ; preds = %36
  %43 = zext i8 %38 to i32, !dbg !9236
  %44 = call fastcc i32 @isprint(i32 noundef %43) #26, !dbg !9238
  %45 = icmp eq i32 %44, 0, !dbg !9238
  br i1 %45, label %46, label %81, !dbg !9239

46:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i8 undef, metadata !1080, metadata !DIExpression()), !dbg !9196
  switch i8 %38, label %93 [
    i8 8, label %47
    i8 127, label %47
    i8 27, label %56
    i8 13, label %57
    i8 9, label %68
  ], !dbg !9240, !llvm.loop !9194

47:                                               ; preds = %46, %46
  %48 = load i8, i8* @cur, align 1, !dbg !9242
  %49 = icmp eq i8 %48, 0, !dbg !9245
  br i1 %49, label %93, label %50, !dbg !9246, !llvm.loop !9194

50:                                               ; preds = %47
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9247
  %52 = add i8 %48, -1, !dbg !9249
  store i8 %52, i8* @cur, align 1, !dbg !9249
  %53 = zext i8 %52 to i32, !dbg !9247
  %54 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %53, !dbg !9247
  %55 = load i8, i8* @end, align 1, !dbg !9250
  call fastcc void @del_char(i8* noundef nonnull %54, i8 noundef zeroext %55) #26, !dbg !9251
  br label %93, !dbg !9252, !llvm.loop !9194

56:                                               ; preds = %46
  call fastcc void @atomic_set_bit(i32 noundef 0) #26, !dbg !9253
  br label %93, !dbg !9254, !llvm.loop !9194

57:                                               ; preds = %46
  %58 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9255
  %59 = load i8, i8* @cur, align 1, !dbg !9256
  %60 = zext i8 %59 to i32, !dbg !9256
  %61 = load i8, i8* @end, align 1, !dbg !9257
  %62 = zext i8 %61 to i32, !dbg !9257
  %63 = add nuw nsw i32 %62, %60, !dbg !9258
  %64 = getelementptr inbounds %struct.console_input, %struct.console_input* %58, i32 0, i32 2, i32 %63, !dbg !9255
  store i8 0, i8* %64, align 1, !dbg !9259
  call fastcc void @uart_poll_out.50(i8 noundef zeroext 13) #26, !dbg !9260
  call fastcc void @uart_poll_out.50(i8 noundef zeroext 10) #26, !dbg !9261
  store i8 0, i8* @cur, align 1, !dbg !9262
  store i8 0, i8* @end, align 1, !dbg !9263
  %65 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !9264
  %66 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %65, i32 0, i32 0, !dbg !9264
  %67 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9264
  call void @k_queue_append(%struct.k_queue* noundef %66, i8* noundef %67) #25, !dbg !9264
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9266
  br label %93, !dbg !9267, !llvm.loop !9194

68:                                               ; preds = %46
  %69 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9268
  %70 = icmp eq i8 (i8*, i8)* %69, null, !dbg !9268
  %71 = load i8, i8* @end, align 1
  %72 = icmp ne i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72, !dbg !9270
  br i1 %73, label %93, label %74, !dbg !9270, !llvm.loop !9194

74:                                               ; preds = %68
  %75 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9271
  %76 = getelementptr inbounds %struct.console_input, %struct.console_input* %75, i32 0, i32 2, i32 0, !dbg !9271
  %77 = load i8, i8* @cur, align 1, !dbg !9273
  %78 = call zeroext i8 %69(i8* noundef nonnull %76, i8 noundef zeroext %77) #25, !dbg !9274
  %79 = load i8, i8* @cur, align 1, !dbg !9275
  %80 = add i8 %79, %78, !dbg !9275
  store i8 %80, i8* @cur, align 1, !dbg !9275
  br label %93, !dbg !9276, !llvm.loop !9194

81:                                               ; preds = %42
  %82 = load i8, i8* @cur, align 1, !dbg !9277
  %83 = zext i8 %82 to i32, !dbg !9277
  %84 = load i8, i8* @end, align 1, !dbg !9279
  %85 = zext i8 %84 to i32, !dbg !9279
  %86 = add nuw nsw i32 %85, %83, !dbg !9280
  %87 = icmp ult i32 %86, 127, !dbg !9281
  br i1 %87, label %88, label %93, !dbg !9282

88:                                               ; preds = %81
  %89 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9283
  %90 = add i8 %82, 1, !dbg !9285
  store i8 %90, i8* @cur, align 1, !dbg !9285
  %91 = getelementptr inbounds %struct.console_input, %struct.console_input* %89, i32 0, i32 2, i32 %83, !dbg !9283
  call void @llvm.dbg.value(metadata i8 %38, metadata !1080, metadata !DIExpression()), !dbg !9196
  call fastcc void @insert_char(i8* noundef nonnull %91, i8 noundef zeroext %38, i8 noundef zeroext %84) #26, !dbg !9286
  br label %93, !dbg !9287

92:                                               ; preds = %12, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9195
  br label %96

93:                                               ; preds = %81, %88, %56, %57, %50, %47, %74, %68, %46, %39, %41, %9, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9195
  %94 = call fastcc i32 @uart_irq_update.60() #26, !dbg !9186
  %95 = icmp eq i32 %94, 0, !dbg !9186
  br i1 %95, label %96, label %6, !dbg !9187

96:                                               ; preds = %6, %93, %2, %92
  ret void, !dbg !9288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set.59() unnamed_addr #1 !dbg !9289 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9291, metadata !DIExpression()), !dbg !9295
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9292, metadata !DIExpression()), !dbg !9295
  call void @llvm.dbg.value(metadata i8* null, metadata !9293, metadata !DIExpression()), !dbg !9295
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9296
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9294, metadata !DIExpression()), !dbg !9295
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !9297
  br i1 %2, label %8, label %3, !dbg !9299

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !9300
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !9300
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !9301
  br i1 %6, label %8, label %7, !dbg !9302

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_45, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #25, !dbg !9303
  br label %8, !dbg !9305

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !9306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update.60() unnamed_addr #1 !dbg !9307 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9309, metadata !DIExpression()), !dbg !9310
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9311, !srcloc !9313
  %1 = tail call fastcc i32 @z_impl_uart_irq_update.64() #26, !dbg !9314
  ret i32 %1, !dbg !9315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !9316 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9318, metadata !DIExpression()), !dbg !9319
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9320, !srcloc !9322
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #26, !dbg !9323
  ret i32 %1, !dbg !9324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !9325 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9329, metadata !DIExpression()), !dbg !9333
  call void @llvm.dbg.value(metadata i8* %0, metadata !9330, metadata !DIExpression()), !dbg !9333
  call void @llvm.dbg.value(metadata i32 1, metadata !9331, metadata !DIExpression()), !dbg !9333
  %2 = tail call fastcc i32 @uart_fifo_read.56(i8* noundef %0) #26, !dbg !9334
  call void @llvm.dbg.value(metadata i32 %2, metadata !9332, metadata !DIExpression()), !dbg !9333
  %3 = icmp slt i32 %2, 0, !dbg !9335
  br i1 %3, label %4, label %5, !dbg !9337

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable.53() #26, !dbg !9338
  br label %5, !dbg !9340

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !9333
  ret i32 %6, !dbg !9341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !9342 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9352, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9351, metadata !DIExpression()), !dbg !9353
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9354, !srcloc !9356
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !9357
  ret i8* %2, !dbg !9358
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !9359 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9365, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i32 %0, metadata !9366, metadata !DIExpression()), !dbg !9369
  %2 = tail call fastcc i32 @atomic_get() #26, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %2, metadata !9367, metadata !DIExpression()), !dbg !9369
  %3 = and i32 %0, 31, !dbg !9371
  %4 = shl nuw i32 1, %3, !dbg !9372
  %5 = and i32 %2, %4, !dbg !9372
  %6 = icmp ne i32 %5, 0, !dbg !9372
  ret i1 %6, !dbg !9373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !9374 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9378, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.value(metadata i8* %1, metadata !9379, metadata !DIExpression()), !dbg !9381
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #26, !dbg !9382
  br i1 %3, label %4, label %11, !dbg !9384

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9385
  %6 = tail call fastcc i32 @isdigit.61(i32 noundef %5) #26, !dbg !9388
  %7 = icmp eq i32 %6, 0, !dbg !9388
  br i1 %7, label %8, label %9, !dbg !9389

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !9390
  br label %34, !dbg !9392

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #26, !dbg !9393
  %10 = add nsw i32 %5, -48, !dbg !9394
  store i32 %10, i32* @ansi_val, align 4, !dbg !9395
  store i32 0, i32* @ansi_val_2, align 4, !dbg !9396
  br label %81, !dbg !9397

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #26, !dbg !9398
  br i1 %12, label %13, label %34, !dbg !9400

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !9401
  %15 = tail call fastcc i32 @isdigit.61(i32 noundef %14) #26, !dbg !9404
  %16 = icmp eq i32 %15, 0, !dbg !9404
  br i1 %16, label %29, label %17, !dbg !9405

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #26, !dbg !9406
  br i1 %18, label %19, label %24, !dbg !9409

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !9410
  %21 = mul i32 %20, 10, !dbg !9410
  %22 = add nsw i32 %14, -48, !dbg !9412
  %23 = add i32 %22, %21, !dbg !9413
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !9413
  br label %81, !dbg !9414

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !9415
  %26 = mul i32 %25, 10, !dbg !9415
  %27 = add nsw i32 %14, -48, !dbg !9417
  %28 = add i32 %27, %26, !dbg !9418
  store i32 %28, i32* @ansi_val, align 4, !dbg !9418
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !9419
  br i1 %30, label %31, label %33, !dbg !9421

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #26, !dbg !9422
  br i1 %32, label %33, label %81, !dbg !9423

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #26, !dbg !9424
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #26, !dbg !9425
  br label %34, !dbg !9426

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !9380), !dbg !9427
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !9428

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !9429
  %37 = load i8, i8* @cur, align 1, !dbg !9432
  %38 = zext i8 %37 to i32, !dbg !9432
  %39 = icmp ugt i32 %36, %38, !dbg !9433
  br i1 %39, label %80, label %40, !dbg !9434

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !9435
  %42 = trunc i32 %36 to i8, !dbg !9435
  %43 = add i8 %41, %42, !dbg !9435
  store i8 %43, i8* @end, align 1, !dbg !9435
  %44 = sub i8 %37, %42, !dbg !9436
  store i8 %44, i8* @cur, align 1, !dbg !9436
  tail call fastcc void @cursor_backward(i32 noundef %36) #26, !dbg !9437
  br label %80, !dbg !9438

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !9439
  %47 = load i8, i8* @end, align 1, !dbg !9441
  %48 = zext i8 %47 to i32, !dbg !9441
  %49 = icmp ugt i32 %46, %48, !dbg !9442
  br i1 %49, label %80, label %50, !dbg !9443

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !9444
  %52 = sub i8 %47, %51, !dbg !9444
  store i8 %52, i8* @end, align 1, !dbg !9444
  %53 = load i8, i8* @cur, align 1, !dbg !9445
  %54 = add i8 %53, %51, !dbg !9445
  store i8 %54, i8* @cur, align 1, !dbg !9445
  tail call fastcc void @cursor_forward(i32 noundef %46) #26, !dbg !9446
  br label %80, !dbg !9447

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !9448
  %57 = icmp eq i8 %56, 0, !dbg !9448
  br i1 %57, label %80, label %58, !dbg !9450

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !9451
  tail call fastcc void @cursor_backward(i32 noundef %59) #26, !dbg !9452
  %60 = load i8, i8* @cur, align 1, !dbg !9453
  %61 = load i8, i8* @end, align 1, !dbg !9454
  %62 = add i8 %61, %60, !dbg !9454
  store i8 %62, i8* @end, align 1, !dbg !9454
  store i8 0, i8* @cur, align 1, !dbg !9455
  br label %80, !dbg !9456

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !9457
  %65 = icmp eq i8 %64, 0, !dbg !9457
  br i1 %65, label %80, label %66, !dbg !9459

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !9460
  tail call fastcc void @cursor_forward(i32 noundef %67) #26, !dbg !9461
  %68 = load i8, i8* @end, align 1, !dbg !9462
  %69 = load i8, i8* @cur, align 1, !dbg !9463
  %70 = add i8 %69, %68, !dbg !9463
  store i8 %70, i8* @cur, align 1, !dbg !9463
  store i8 0, i8* @end, align 1, !dbg !9464
  br label %80, !dbg !9465

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !9466
  %73 = icmp eq i8 %72, 0, !dbg !9466
  br i1 %73, label %80, label %74, !dbg !9468

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #26, !dbg !9469
  %75 = load i8, i8* @cur, align 1, !dbg !9470
  %76 = zext i8 %75 to i32, !dbg !9471
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !9471
  %78 = load i8, i8* @end, align 1, !dbg !9472
  %79 = add i8 %78, -1, !dbg !9472
  store i8 %79, i8* @end, align 1, !dbg !9472
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #26, !dbg !9473
  br label %80, !dbg !9474

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #26, !dbg !9475
  br label %81, !dbg !9476

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !9476
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9477 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9482, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata i32 %0, metadata !9483, metadata !DIExpression()), !dbg !9486
  %2 = and i32 %0, 31, !dbg !9487
  %3 = shl nuw i32 1, %2, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %3, metadata !9484, metadata !DIExpression()), !dbg !9486
  %4 = xor i32 %3, -1, !dbg !9488
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9489
  call void @llvm.dbg.value(metadata i32 %5, metadata !9485, metadata !DIExpression()), !dbg !9486
  %6 = and i32 %5, %3, !dbg !9490
  %7 = icmp ne i32 %6, 0, !dbg !9491
  ret i1 %7, !dbg !9492
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !9493 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9497, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 %0, metadata !9498, metadata !DIExpression()), !dbg !9500
  %2 = and i32 %0, 31, !dbg !9501
  %3 = shl nuw i32 1, %2, !dbg !9501
  call void @llvm.dbg.value(metadata i32 %3, metadata !9499, metadata !DIExpression()), !dbg !9500
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #26, !dbg !9502
  ret void, !dbg !9503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !9504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9506, metadata !DIExpression()), !dbg !9507
  %2 = add i32 %0, -32, !dbg !9508
  %3 = icmp ult i32 %2, 95, !dbg !9508
  %4 = zext i1 %3 to i32, !dbg !9508
  ret i32 %4, !dbg !9509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9510 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9514, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.value(metadata i8 %1, metadata !9515, metadata !DIExpression()), !dbg !9516
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 8) #26, !dbg !9517
  %3 = icmp eq i8 %1, 0, !dbg !9518
  br i1 %3, label %4, label %5, !dbg !9520

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 32) #26, !dbg !9521
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 8) #26, !dbg !9523
  br label %14, !dbg !9524

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #26, !dbg !9525
  call void @llvm.dbg.value(metadata i8 %1, metadata !9515, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.value(metadata i8* %0, metadata !9514, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.value(metadata i8 %1, metadata !9515, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9516
  br label %6, !dbg !9526

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !9515, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.value(metadata i8* %8, metadata !9514, metadata !DIExpression()), !dbg !9516
  %9 = add i8 %7, -1, !dbg !9527
  call void @llvm.dbg.value(metadata i8 %9, metadata !9515, metadata !DIExpression()), !dbg !9516
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9528
  %11 = load i8, i8* %10, align 1, !dbg !9530
  store i8 %11, i8* %8, align 1, !dbg !9531
  call void @llvm.dbg.value(metadata i8* %10, metadata !9514, metadata !DIExpression()), !dbg !9516
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %11) #26, !dbg !9532
  call void @llvm.dbg.value(metadata i8 %9, metadata !9515, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9516
  %12 = icmp eq i8 %9, 0, !dbg !9533
  br i1 %12, label %13, label %6, !dbg !9526, !llvm.loop !9534

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext 32) #26, !dbg !9536
  tail call fastcc void @cursor_restore() #26, !dbg !9537
  br label %14, !dbg !9538

14:                                               ; preds = %13, %4
  ret void, !dbg !9538
}

; Function Attrs: optsize
declare !dbg !9539 dso_local void @k_queue_append(%struct.k_queue* noundef, i8* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !9542 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9546, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8 %1, metadata !9547, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8 %2, metadata !9548, metadata !DIExpression()), !dbg !9550
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %1) #26, !dbg !9551
  %4 = icmp eq i8 %2, 0, !dbg !9552
  br i1 %4, label %5, label %6, !dbg !9554

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !9555
  br label %17, !dbg !9557

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !9558
  call void @llvm.dbg.value(metadata i8 %7, metadata !9549, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8* %0, metadata !9546, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9550
  store i8 %1, i8* %0, align 1, !dbg !9559
  tail call fastcc void @cursor_save() #26, !dbg !9560
  call void @llvm.dbg.value(metadata i8 %7, metadata !9549, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8 %2, metadata !9548, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8* %0, metadata !9546, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9550
  call void @llvm.dbg.value(metadata i8 %2, metadata !9548, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9550
  br label %8, !dbg !9561

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9550
  call void @llvm.dbg.value(metadata i8 %10, metadata !9549, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8 %11, metadata !9548, metadata !DIExpression()), !dbg !9550
  %13 = add i8 %11, -1, !dbg !9562
  call void @llvm.dbg.value(metadata i8 %13, metadata !9548, metadata !DIExpression()), !dbg !9550
  tail call fastcc void @uart_poll_out.50(i8 noundef zeroext %10) #26, !dbg !9563
  %14 = load i8, i8* %12, align 1, !dbg !9565
  call void @llvm.dbg.value(metadata i8 %14, metadata !9547, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8* %12, metadata !9546, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9550
  store i8 %10, i8* %12, align 1, !dbg !9566
  call void @llvm.dbg.value(metadata i8 %14, metadata !9549, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8* %12, metadata !9546, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9550
  call void @llvm.dbg.value(metadata i8 %13, metadata !9548, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9550
  %15 = icmp eq i8 %13, 0, !dbg !9567
  br i1 %15, label %16, label %8, !dbg !9561, !llvm.loop !9568

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #26, !dbg !9570
  br label %17, !dbg !9571

17:                                               ; preds = %16, %5
  ret void, !dbg !9571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !9572 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #25, !dbg !9573
  ret void, !dbg !9574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !9575 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !9576
  ret void, !dbg !9577
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !9578 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9583, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %0, metadata !9584, metadata !DIExpression()), !dbg !9585
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9586
  ret i32 %2, !dbg !9587
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !9588 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9590, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %0, metadata !9591, metadata !DIExpression()), !dbg !9592
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9593
  ret i32 %2, !dbg !9594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.61(i32 noundef %0) unnamed_addr #11 !dbg !9595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9597, metadata !DIExpression()), !dbg !9598
  %2 = add i32 %0, -48, !dbg !9599
  %3 = icmp ult i32 %2, 10, !dbg !9600
  %4 = zext i1 %3 to i32, !dbg !9600
  ret i32 %4, !dbg !9601
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !9602 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9604, metadata !DIExpression()), !dbg !9608
  call void @llvm.dbg.value(metadata i32 4, metadata !9605, metadata !DIExpression()), !dbg !9608
  call void @llvm.dbg.value(metadata i32 16, metadata !9606, metadata !DIExpression()), !dbg !9608
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #26, !dbg !9609
  call void @llvm.dbg.value(metadata i32 %1, metadata !9607, metadata !DIExpression()), !dbg !9608
  %2 = and i32 %1, 16, !dbg !9610
  %3 = icmp ne i32 %2, 0, !dbg !9611
  ret i1 %3, !dbg !9612
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !9613 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9615, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.value(metadata i32 %0, metadata !9616, metadata !DIExpression()), !dbg !9618
  %2 = and i32 %0, 31, !dbg !9619
  %3 = shl nuw i32 1, %2, !dbg !9619
  call void @llvm.dbg.value(metadata i32 %3, metadata !9617, metadata !DIExpression()), !dbg !9618
  %4 = xor i32 %3, -1, !dbg !9620
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !9623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9625, metadata !DIExpression()), !dbg !9626
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 noundef %0) #25, !dbg !9627
  ret void, !dbg !9628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !9629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9631, metadata !DIExpression()), !dbg !9632
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.62, i32 0, i32 0), i32 noundef %0) #25, !dbg !9633
  ret void, !dbg !9634
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !9635 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9639, metadata !DIExpression()), !dbg !9640
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !9641
  ret i32 %1, !dbg !9642
}

; Function Attrs: optsize
declare !dbg !9643 dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef, [1 x i64]) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !9644 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9646, metadata !DIExpression()), !dbg !9648
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9649
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9647, metadata !DIExpression()), !dbg !9648
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !9650
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9650
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9652
  br i1 %4, label %7, label %5, !dbg !9653

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9654
  br label %7, !dbg !9655

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9648
  ret i32 %8, !dbg !9656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update.64() unnamed_addr #1 !dbg !9657 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9659, metadata !DIExpression()), !dbg !9661
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9662
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9660, metadata !DIExpression()), !dbg !9661
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !9663
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9663
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9665
  br i1 %4, label %7, label %5, !dbg !9666

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9667
  br label %7, !dbg !9668

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9661
  ret i32 %8, !dbg !9669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable.65() unnamed_addr #1 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9672, metadata !DIExpression()), !dbg !9674
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9675
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9673, metadata !DIExpression()), !dbg !9674
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !9676
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9676
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9678
  br i1 %4, label %6, label %5, !dbg !9679

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9680
  br label %6, !dbg !9682

6:                                                ; preds = %5, %0
  ret void, !dbg !9683
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable.66() unnamed_addr #1 !dbg !9684 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9686, metadata !DIExpression()), !dbg !9688
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9689
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9687, metadata !DIExpression()), !dbg !9688
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !9690
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9690
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9692
  br i1 %4, label %6, label %5, !dbg !9693

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9694
  br label %6, !dbg !9696

6:                                                ; preds = %5, %0
  ret void, !dbg !9697
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9698 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9700, metadata !DIExpression()), !dbg !9705
  call void @llvm.dbg.value(metadata i8 %1, metadata !9701, metadata !DIExpression()), !dbg !9705
  call void @llvm.dbg.value(metadata i32 %2, metadata !9702, metadata !DIExpression()), !dbg !9705
  %5 = bitcast i32* %4 to i8*, !dbg !9706
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9706
  call void @llvm.dbg.value(metadata i32* %4, metadata !9704, metadata !DIExpression(DW_OP_deref)), !dbg !9705
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !9707
  call void @llvm.dbg.value(metadata i32 %6, metadata !9703, metadata !DIExpression()), !dbg !9705
  %7 = icmp eq i32 %6, 0, !dbg !9708
  br i1 %7, label %8, label %31, !dbg !9710

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9703, metadata !DIExpression()), !dbg !9705
  %9 = and i32 %2, 131072, !dbg !9711
  %10 = icmp eq i32 %9, 0, !dbg !9713
  br i1 %10, label %28, label %11, !dbg !9714

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9715
  %13 = icmp eq i32 %12, 0, !dbg !9718
  br i1 %13, label %18, label %14, !dbg !9719

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9720
  %16 = shl nuw i32 1, %15, !dbg !9720
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !9722
  br label %25, !dbg !9723

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9724
  %20 = icmp eq i32 %19, 0, !dbg !9726
  %21 = zext i8 %1 to i32, !dbg !9705
  br i1 %20, label %25, label %22, !dbg !9727

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9728
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !9730
  br label %25, !dbg !9731

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9732
  %27 = load i32, i32* %4, align 4, !dbg !9733
  call void @llvm.dbg.value(metadata i32 %30, metadata !9704, metadata !DIExpression()), !dbg !9705
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !9734
  br label %31, !dbg !9735

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9732
  %30 = load i32, i32* %4, align 4, !dbg !9733
  call void @llvm.dbg.value(metadata i32 %30, metadata !9704, metadata !DIExpression()), !dbg !9705
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !9734
  call void @llvm.dbg.value(metadata i32 0, metadata !9703, metadata !DIExpression()), !dbg !9705
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9736
  ret i32 %6, !dbg !9736
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9737 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9741, metadata !DIExpression()), !dbg !9746
  call void @llvm.dbg.value(metadata i32* %1, metadata !9742, metadata !DIExpression()), !dbg !9746
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9747
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9747
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9747
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9743, metadata !DIExpression()), !dbg !9746
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9748
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9748
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9748
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9745, metadata !DIExpression()), !dbg !9746
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !9749
  store i32 %9, i32* %1, align 4, !dbg !9750
  ret i32 0, !dbg !9751
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9752 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9754, metadata !DIExpression()), !dbg !9760
  call void @llvm.dbg.value(metadata i32 %1, metadata !9755, metadata !DIExpression()), !dbg !9760
  call void @llvm.dbg.value(metadata i32 %2, metadata !9756, metadata !DIExpression()), !dbg !9760
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9761
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9761
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9761
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9757, metadata !DIExpression()), !dbg !9760
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9762
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9762
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9762
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9758, metadata !DIExpression()), !dbg !9760
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !9763
  call void @llvm.dbg.value(metadata i32 %10, metadata !9759, metadata !DIExpression()), !dbg !9760
  %11 = xor i32 %1, -1, !dbg !9764
  %12 = and i32 %10, %11, !dbg !9765
  %13 = and i32 %2, %1, !dbg !9766
  %14 = or i32 %12, %13, !dbg !9767
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !9768
  ret i32 0, !dbg !9769
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9770 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9772, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata i32 %1, metadata !9773, metadata !DIExpression()), !dbg !9776
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9777
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9777
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9777
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9774, metadata !DIExpression()), !dbg !9776
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9778
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9778
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9778
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9775, metadata !DIExpression()), !dbg !9776
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9779
  store volatile i32 %1, i32* %9, align 4, !dbg !9779
  ret i32 0, !dbg !9780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9783, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 %1, metadata !9784, metadata !DIExpression()), !dbg !9787
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9788
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9788
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9788
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9785, metadata !DIExpression()), !dbg !9787
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9789
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9789
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9789
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9786, metadata !DIExpression()), !dbg !9787
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !9790
  ret i32 0, !dbg !9791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9794, metadata !DIExpression()), !dbg !9798
  call void @llvm.dbg.value(metadata i32 %1, metadata !9795, metadata !DIExpression()), !dbg !9798
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9799
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9799
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9799
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9796, metadata !DIExpression()), !dbg !9798
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9800
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9800
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9800
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9797, metadata !DIExpression()), !dbg !9798
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9801
  %10 = load volatile i32, i32* %9, align 4, !dbg !9801
  %11 = xor i32 %10, %1, !dbg !9801
  store volatile i32 %11, i32* %9, align 4, !dbg !9801
  ret i32 0, !dbg !9802
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9803 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9805, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i8 %1, metadata !9806, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 %2, metadata !9807, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 %3, metadata !9808, metadata !DIExpression()), !dbg !9815
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9816
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9816
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9816
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9809, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i8* undef, metadata !9810, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 0, metadata !9812, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 0, metadata !9813, metadata !DIExpression()), !dbg !9815
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9817

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9818
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !9822
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9823
  %12 = load i32, i32* %11, align 4, !dbg !9823
  %13 = icmp eq i32 %10, %12, !dbg !9824
  br i1 %13, label %14, label %29, !dbg !9825

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9826
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9828
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9829
  br label %29, !dbg !9830

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9831
  %17 = load i8*, i8** %16, align 4, !dbg !9831
  call void @llvm.dbg.value(metadata i8* %17, metadata !9810, metadata !DIExpression()), !dbg !9815
  %18 = zext i8 %1 to i32, !dbg !9832
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9834
  %20 = icmp eq i32 %19, 0, !dbg !9835
  br i1 %20, label %21, label %29, !dbg !9836

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9837
  %23 = load i32, i32* %22, align 4, !dbg !9837
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !9838
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9839

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9812, metadata !DIExpression()), !dbg !9815
  br label %27, !dbg !9840

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9812, metadata !DIExpression()), !dbg !9815
  br label %27, !dbg !9842

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9812, metadata !DIExpression()), !dbg !9815
  br label %27, !dbg !9843

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9815
  call void @llvm.dbg.value(metadata i32 %28, metadata !9812, metadata !DIExpression()), !dbg !9815
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9844
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9845
  br label %29, !dbg !9845

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9815
  call void @llvm.dbg.value(metadata i32 %30, metadata !9813, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.label(metadata !9814), !dbg !9846
  ret i32 %30, !dbg !9847
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9850, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9851, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i1 %2, metadata !9852, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9854
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9855
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9855
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9855
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9853, metadata !DIExpression()), !dbg !9854
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9856
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !9857
  ret i32 %8, !dbg !9858
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9859 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9865, metadata !DIExpression()), !dbg !9868
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9866, metadata !DIExpression()), !dbg !9868
  call void @llvm.dbg.value(metadata i1 %2, metadata !9867, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9868
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !9869
  br i1 %4, label %10, label %5, !dbg !9871

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9872
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !9875
  %8 = or i1 %7, %2, !dbg !9876
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9876
  br i1 %2, label %11, label %13, !dbg !9876

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9877

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9878
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !9881
  br label %13, !dbg !9882

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9868
  ret i32 %14, !dbg !9883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9884 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9888, metadata !DIExpression()), !dbg !9889
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9890
  %3 = icmp eq %struct._snode* %2, null, !dbg !9890
  ret i1 %3, !dbg !9890
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9891 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9895, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9896, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9897, metadata !DIExpression()), !dbg !9899
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9900
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9898, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9897, metadata !DIExpression()), !dbg !9899
  %4 = icmp eq %struct._snode* %3, null, !dbg !9902
  br i1 %4, label %15, label %5, !dbg !9900

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9898, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9897, metadata !DIExpression()), !dbg !9899
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9904
  br i1 %6, label %9, label %11, !dbg !9907

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9898, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9897, metadata !DIExpression()), !dbg !9899
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9904
  br i1 %8, label %9, label %11, !dbg !9907, !llvm.loop !9908

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !9909
  br label %15, !dbg !9909

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9898, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9897, metadata !DIExpression()), !dbg !9899
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !9902
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9898, metadata !DIExpression()), !dbg !9899
  %14 = icmp eq %struct._snode* %13, null, !dbg !9902
  br i1 %14, label %15, label %7, !dbg !9900, !llvm.loop !9908

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9912 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9916, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9917, metadata !DIExpression()), !dbg !9918
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9919
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !9919
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !9919
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9920
  %5 = icmp eq %struct._snode* %4, null, !dbg !9920
  br i1 %5, label %6, label %8, !dbg !9919

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9922
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !9922
  br label %8, !dbg !9922

8:                                                ; preds = %6, %2
  ret void, !dbg !9919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9924 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9928, metadata !DIExpression()), !dbg !9929
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9930
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9930
  ret %struct._snode* %3, !dbg !9931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9932 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9936, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9937, metadata !DIExpression()), !dbg !9938
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9939
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9940
  ret void, !dbg !9941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9942 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9944, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9945, metadata !DIExpression()), !dbg !9946
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9947
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9948
  ret void, !dbg !9949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9950 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9952, metadata !DIExpression()), !dbg !9953
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9954
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9954
  ret %struct._snode* %3, !dbg !9955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9956 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9958, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9959, metadata !DIExpression()), !dbg !9960
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9961
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9962
  ret void, !dbg !9963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9964 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9968, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9969, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9970, metadata !DIExpression()), !dbg !9971
  %4 = icmp eq %struct._snode* %1, null, !dbg !9972
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !9974
  br i1 %4, label %6, label %11, !dbg !9975

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !9976
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9978
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9978
  br i1 %8, label %9, label %15, !dbg !9976

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9980
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !9980
  br label %15, !dbg !9980

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !9982
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9984
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9984
  br i1 %13, label %14, label %15, !dbg !9982

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !9986
  br label %15, !dbg !9986

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !9975
  ret void, !dbg !9975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9988 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9992, metadata !DIExpression()), !dbg !9993
  %2 = icmp eq %struct._snode* %0, null, !dbg !9994
  br i1 %2, label %5, label %3, !dbg !9994

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !9994
  br label %5, !dbg !9994

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9994
  ret %struct._snode* %6, !dbg !9994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9995 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9997, metadata !DIExpression()), !dbg !9998
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !9999
  ret %struct._snode* %2, !dbg !9999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10000 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10002, metadata !DIExpression()), !dbg !10003
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10004
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10004
  ret %struct._snode* %3, !dbg !10005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10008, metadata !DIExpression()), !dbg !10011
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10012, !range !10013
  call void @llvm.dbg.value(metadata i32 %2, metadata !10009, metadata !DIExpression()), !dbg !10011
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10014
  call void @llvm.dbg.value(metadata i32 %3, metadata !10010, metadata !DIExpression()), !dbg !10011
  ret i32 %3, !dbg !10015
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10018, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i8* %1, metadata !10019, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i8* %1, metadata !10020, metadata !DIExpression()), !dbg !10021
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10022
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10022
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10023
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10023
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10023
  %8 = shl nuw i32 1, %0, !dbg !10024
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10025
  ret void, !dbg !10026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10027 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10031, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.value(metadata i32 %1, metadata !10032, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10033, metadata !DIExpression()), !dbg !10037
  %4 = bitcast i64* %3 to i8*, !dbg !10038
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10038
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10035, metadata !DIExpression()), !dbg !10037
  store i64 70368744177732, i64* %3, align 8, !dbg !10039
  call void @llvm.dbg.value(metadata i64* %3, metadata !10035, metadata !DIExpression(DW_OP_deref)), !dbg !10037
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10040
  call void @llvm.dbg.value(metadata i32 %5, metadata !10036, metadata !DIExpression()), !dbg !10037
  %6 = icmp eq i32 %5, 0, !dbg !10041
  br i1 %6, label %7, label %8, !dbg !10043

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10044
  br label %8, !dbg !10045

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10046
  ret void, !dbg !10046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10047 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10049, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i8* %0, metadata !10050, metadata !DIExpression()), !dbg !10052
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10053
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10051, metadata !DIExpression()), !dbg !10052
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10054
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10054
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10055
  ret i32 %5, !dbg !10056
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10059, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.value(metadata i32 %1, metadata !10060, metadata !DIExpression()), !dbg !10062
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10063
  call void @llvm.dbg.value(metadata i32 %3, metadata !10061, metadata !DIExpression()), !dbg !10062
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10064
  ret void, !dbg !10065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !10066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10070, metadata !DIExpression()), !dbg !10071
  %2 = sdiv i32 %0, 4, !dbg !10072
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10073
  %6 = add nsw i32 %5, 16, !dbg !10074
  %7 = shl i32 15, %6, !dbg !10075
  %8 = or i32 %7, %2, !dbg !10076
  ret i32 %8, !dbg !10077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10082, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata i32 %1, metadata !10083, metadata !DIExpression()), !dbg !10084
  %3 = and i32 %1, 255, !dbg !10085
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10085
  %5 = load volatile i32, i32* %4, align 4, !dbg !10085
  %6 = lshr i32 %1, 16, !dbg !10085
  %7 = xor i32 %6, -1, !dbg !10085
  %8 = and i32 %5, %7, !dbg !10085
  call void @llvm.dbg.value(metadata i32 %6, metadata !10086, metadata !DIExpression()) #24, !dbg !10090
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10092, !srcloc !10093
  call void @llvm.dbg.value(metadata i32 %9, metadata !10089, metadata !DIExpression()) #24, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %9, metadata !10094, metadata !DIExpression()) #24, !dbg !10099
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !10101, !range !3868
  %11 = shl i32 %0, %10, !dbg !10085
  %12 = or i32 %11, %8, !dbg !10085
  store volatile i32 %12, i32* %4, align 4, !dbg !10085
  ret void, !dbg !10102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10103 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10107, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10108, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.value(metadata i32 %2, metadata !10109, metadata !DIExpression()), !dbg !10112
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10113
  %5 = icmp eq %struct._snode* %4, null, !dbg !10113
  br i1 %5, label %21, label %6, !dbg !10113

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10115
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10111, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10110, metadata !DIExpression()), !dbg !10112
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10116
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10116
  %11 = load i32, i32* %10, align 4, !dbg !10116
  %12 = and i32 %11, %2, !dbg !10120
  %13 = icmp eq i32 %12, 0, !dbg !10120
  br i1 %13, label %19, label %14, !dbg !10121

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10110, metadata !DIExpression()), !dbg !10112
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10122
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10122
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10122
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10124
  br label %19, !dbg !10125

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10110, metadata !DIExpression()), !dbg !10112
  %20 = icmp eq %struct._snode* %8, null, !dbg !10126
  br i1 %20, label %21, label %6, !dbg !10126

21:                                               ; preds = %19, %3
  ret void, !dbg !10127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10130, metadata !DIExpression()), !dbg !10131
  %2 = and i32 %0, 255, !dbg !10132
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10132
  %4 = load volatile i32, i32* %3, align 4, !dbg !10132
  %5 = lshr i32 %0, 16, !dbg !10132
  %6 = and i32 %4, %5, !dbg !10132
  call void @llvm.dbg.value(metadata i32 %5, metadata !10086, metadata !DIExpression()) #24, !dbg !10133
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !10135, !srcloc !10093
  call void @llvm.dbg.value(metadata i32 %7, metadata !10089, metadata !DIExpression()) #24, !dbg !10133
  call void @llvm.dbg.value(metadata i32 %7, metadata !10094, metadata !DIExpression()) #24, !dbg !10136
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10138, !range !3868
  %9 = lshr i32 %6, %8, !dbg !10139
  ret i32 %9, !dbg !10140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10141 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10146, metadata !DIExpression()), !dbg !10148
  call void @llvm.dbg.value(metadata i32 %1, metadata !10147, metadata !DIExpression()), !dbg !10148
  %3 = shl i32 %1, 16, !dbg !10149
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10149
  store volatile i32 %3, i32* %4, align 4, !dbg !10149
  ret void, !dbg !10150
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10151 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10155, metadata !DIExpression()), !dbg !10156
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10157
  %3 = load volatile i32, i32* %2, align 4, !dbg !10157
  ret i32 %3, !dbg !10158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10159 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10161, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i32 %1, metadata !10162, metadata !DIExpression()), !dbg !10163
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10164
  store volatile i32 %1, i32* %3, align 4, !dbg !10164
  ret void, !dbg !10165
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10166 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10168, metadata !DIExpression()), !dbg !10169
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10170
  %3 = load volatile i32, i32* %2, align 4, !dbg !10170
  ret i32 %3, !dbg !10171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !10172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10176, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.value(metadata i32* %1, metadata !10177, metadata !DIExpression()), !dbg !10178
  %3 = and i32 %0, 131072, !dbg !10179
  %4 = icmp eq i32 %3, 0, !dbg !10181
  br i1 %4, label %22, label %5, !dbg !10182

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10183
  %6 = and i32 %0, 2, !dbg !10185
  %7 = icmp eq i32 %6, 0, !dbg !10187
  br i1 %7, label %11, label %8, !dbg !10188

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10189
  %10 = icmp eq i32 %9, 0, !dbg !10189
  br i1 %10, label %33, label %11, !dbg !10192

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10193
  store i32 %12, i32* %1, align 4, !dbg !10193
  %13 = and i32 %0, 16, !dbg !10194
  %14 = icmp eq i32 %13, 0, !dbg !10196
  br i1 %14, label %17, label %15, !dbg !10197

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10198
  br label %31, !dbg !10200

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10201
  %19 = icmp eq i32 %18, 0, !dbg !10203
  br i1 %19, label %33, label %20, !dbg !10204

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10205
  br label %31, !dbg !10207

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10208
  %24 = icmp eq i32 %23, 0, !dbg !10210
  br i1 %24, label %31, label %25, !dbg !10211

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10212
  %27 = icmp eq i32 %26, 0, !dbg !10215
  br i1 %27, label %28, label %31, !dbg !10216

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10217
  br label %33, !dbg !10218

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10178
  ret i32 %34, !dbg !10218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10219 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10223, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i32 %1, metadata !10224, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i32 %2, metadata !10225, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i32 %3, metadata !10226, metadata !DIExpression()), !dbg !10234
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10235
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10235
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10235
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10227, metadata !DIExpression()), !dbg !10234
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10236
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10236
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10236
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10228, metadata !DIExpression()), !dbg !10234
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10237
  call void @llvm.dbg.value(metadata i32 %11, metadata !10229, metadata !DIExpression()), !dbg !10234
  %12 = and i32 %2, 48, !dbg !10238
  call void @llvm.dbg.value(metadata i32 %12, metadata !10230, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i32 %2, metadata !10231, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10234
  call void @llvm.dbg.value(metadata i32 %2, metadata !10232, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10234
  call void @llvm.dbg.value(metadata i32 %2, metadata !10233, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10234
  %13 = lshr i32 %2, 6, !dbg !10239
  %14 = and i32 %13, 1, !dbg !10239
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10240
  %15 = lshr i32 %2, 7, !dbg !10241
  %16 = and i32 %15, 3, !dbg !10241
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10242
  %17 = lshr i32 %2, 9, !dbg !10243
  %18 = and i32 %17, 3, !dbg !10243
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10244
  %19 = icmp eq i32 %12, 32, !dbg !10245
  br i1 %19, label %20, label %24, !dbg !10247

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10248
  br i1 %21, label %22, label %23, !dbg !10251

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10252
  br label %24, !dbg !10254

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10255
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10257
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10258
  ret void, !dbg !10259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !10260 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10262, metadata !DIExpression()), !dbg !10264
  %2 = shl nuw i32 1, %0, !dbg !10265
  call void @llvm.dbg.value(metadata i32 %2, metadata !10263, metadata !DIExpression()), !dbg !10264
  ret i32 %2, !dbg !10266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10267 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10271, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i32 %1, metadata !10272, metadata !DIExpression()), !dbg !10274
  call void @llvm.dbg.value(metadata i32 %2, metadata !10273, metadata !DIExpression()), !dbg !10274
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10275
  %5 = load volatile i32, i32* %4, align 4, !dbg !10275
  %6 = xor i32 %1, -1, !dbg !10275
  %7 = and i32 %5, %6, !dbg !10275
  %8 = mul i32 %2, %1, !dbg !10275
  %9 = or i32 %7, %8, !dbg !10275
  store volatile i32 %9, i32* %4, align 4, !dbg !10275
  ret void, !dbg !10276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10277 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10279, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %1, metadata !10280, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %2, metadata !10281, metadata !DIExpression()), !dbg !10282
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10283
  %5 = load volatile i32, i32* %4, align 4, !dbg !10283
  call void @llvm.dbg.value(metadata i32 %1, metadata !10086, metadata !DIExpression()) #24, !dbg !10284
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10286, !srcloc !10093
  call void @llvm.dbg.value(metadata i32 %6, metadata !10089, metadata !DIExpression()) #24, !dbg !10284
  call void @llvm.dbg.value(metadata i32 %6, metadata !10094, metadata !DIExpression()) #24, !dbg !10287
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10289, !range !3868
  %8 = shl nuw nsw i32 %7, 1, !dbg !10283
  %9 = shl i32 3, %8, !dbg !10283
  %10 = xor i32 %9, -1, !dbg !10283
  %11 = and i32 %5, %10, !dbg !10283
  call void @llvm.dbg.value(metadata i32 %1, metadata !10086, metadata !DIExpression()) #24, !dbg !10290
  call void @llvm.dbg.value(metadata i32 %6, metadata !10089, metadata !DIExpression()) #24, !dbg !10290
  call void @llvm.dbg.value(metadata i32 %6, metadata !10094, metadata !DIExpression()) #24, !dbg !10292
  %12 = shl i32 %2, %8, !dbg !10283
  %13 = or i32 %11, %12, !dbg !10283
  store volatile i32 %13, i32* %4, align 4, !dbg !10283
  ret void, !dbg !10294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10295 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10297, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.value(metadata i32 %1, metadata !10298, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.value(metadata i32 %2, metadata !10299, metadata !DIExpression()), !dbg !10300
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10301
  %5 = load volatile i32, i32* %4, align 4, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %1, metadata !10086, metadata !DIExpression()) #24, !dbg !10302
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10304, !srcloc !10093
  call void @llvm.dbg.value(metadata i32 %6, metadata !10089, metadata !DIExpression()) #24, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %6, metadata !10094, metadata !DIExpression()) #24, !dbg !10305
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10307, !range !3868
  %8 = shl nuw nsw i32 %7, 1, !dbg !10301
  %9 = shl i32 3, %8, !dbg !10301
  %10 = xor i32 %9, -1, !dbg !10301
  %11 = and i32 %5, %10, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %1, metadata !10086, metadata !DIExpression()) #24, !dbg !10308
  call void @llvm.dbg.value(metadata i32 %6, metadata !10089, metadata !DIExpression()) #24, !dbg !10308
  call void @llvm.dbg.value(metadata i32 %6, metadata !10094, metadata !DIExpression()) #24, !dbg !10310
  %12 = shl i32 %2, %8, !dbg !10301
  %13 = or i32 %11, %12, !dbg !10301
  store volatile i32 %13, i32* %4, align 4, !dbg !10301
  ret void, !dbg !10312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10313 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10315, metadata !DIExpression()), !dbg !10318
  call void @llvm.dbg.value(metadata i32 %1, metadata !10316, metadata !DIExpression()), !dbg !10318
  call void @llvm.dbg.value(metadata i32 %2, metadata !10317, metadata !DIExpression()), !dbg !10318
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10319
  %5 = load volatile i32, i32* %4, align 4, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %1, metadata !10086, metadata !DIExpression()) #24, !dbg !10320
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10322, !srcloc !10093
  call void @llvm.dbg.value(metadata i32 %6, metadata !10089, metadata !DIExpression()) #24, !dbg !10320
  call void @llvm.dbg.value(metadata i32 %6, metadata !10094, metadata !DIExpression()) #24, !dbg !10323
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10325, !range !3868
  %8 = shl nuw nsw i32 %7, 2, !dbg !10319
  %9 = shl i32 15, %8, !dbg !10319
  %10 = xor i32 %9, -1, !dbg !10319
  %11 = and i32 %5, %10, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %1, metadata !10086, metadata !DIExpression()) #24, !dbg !10326
  call void @llvm.dbg.value(metadata i32 %6, metadata !10089, metadata !DIExpression()) #24, !dbg !10326
  call void @llvm.dbg.value(metadata i32 %6, metadata !10094, metadata !DIExpression()) #24, !dbg !10328
  %12 = shl i32 %2, %8, !dbg !10319
  %13 = or i32 %11, %12, !dbg !10319
  store volatile i32 %13, i32* %4, align 4, !dbg !10319
  ret void, !dbg !10330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10331 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10333, metadata !DIExpression()), !dbg !10336
  call void @llvm.dbg.value(metadata i32 %1, metadata !10334, metadata !DIExpression()), !dbg !10336
  call void @llvm.dbg.value(metadata i32 %2, metadata !10335, metadata !DIExpression()), !dbg !10336
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10337
  %5 = load volatile i32, i32* %4, align 4, !dbg !10337
  %6 = lshr i32 %1, 8, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %6, metadata !10086, metadata !DIExpression()) #24, !dbg !10338
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10340, !srcloc !10093
  call void @llvm.dbg.value(metadata i32 %7, metadata !10089, metadata !DIExpression()) #24, !dbg !10338
  call void @llvm.dbg.value(metadata i32 %7, metadata !10094, metadata !DIExpression()) #24, !dbg !10341
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10343, !range !3868
  %9 = shl nuw nsw i32 %8, 2, !dbg !10337
  %10 = shl i32 15, %9, !dbg !10337
  %11 = xor i32 %10, -1, !dbg !10337
  %12 = and i32 %5, %11, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %6, metadata !10086, metadata !DIExpression()) #24, !dbg !10344
  call void @llvm.dbg.value(metadata i32 %7, metadata !10089, metadata !DIExpression()) #24, !dbg !10344
  call void @llvm.dbg.value(metadata i32 %7, metadata !10094, metadata !DIExpression()) #24, !dbg !10346
  %13 = shl i32 %2, %9, !dbg !10337
  %14 = or i32 %12, %13, !dbg !10337
  store volatile i32 %14, i32* %4, align 4, !dbg !10337
  ret void, !dbg !10348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10349 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10351, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 %1, metadata !10352, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 %2, metadata !10353, metadata !DIExpression()), !dbg !10354
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10355
  %5 = load volatile i32, i32* %4, align 4, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %1, metadata !10086, metadata !DIExpression()) #24, !dbg !10356
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10358, !srcloc !10093
  call void @llvm.dbg.value(metadata i32 %6, metadata !10089, metadata !DIExpression()) #24, !dbg !10356
  call void @llvm.dbg.value(metadata i32 %6, metadata !10094, metadata !DIExpression()) #24, !dbg !10359
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10361, !range !3868
  %8 = shl nuw nsw i32 %7, 1, !dbg !10355
  %9 = shl i32 3, %8, !dbg !10355
  %10 = xor i32 %9, -1, !dbg !10355
  %11 = and i32 %5, %10, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %1, metadata !10086, metadata !DIExpression()) #24, !dbg !10362
  call void @llvm.dbg.value(metadata i32 %6, metadata !10089, metadata !DIExpression()) #24, !dbg !10362
  call void @llvm.dbg.value(metadata i32 %6, metadata !10094, metadata !DIExpression()) #24, !dbg !10364
  %12 = shl i32 %2, %8, !dbg !10355
  %13 = or i32 %11, %12, !dbg !10355
  store volatile i32 %13, i32* %4, align 4, !dbg !10355
  ret void, !dbg !10366
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10367 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10369, metadata !DIExpression()), !dbg !10372
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10373
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10373
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10373
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10370, metadata !DIExpression()), !dbg !10372
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10374
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10375
  %6 = tail call fastcc zeroext i1 @device_is_ready.73() #26, !dbg !10376
  br i1 %6, label %7, label %11, !dbg !10378

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10379
  call void @llvm.dbg.value(metadata i32 %8, metadata !10371, metadata !DIExpression()), !dbg !10372
  %9 = icmp slt i32 %8, 0, !dbg !10380
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10382
  br label %11, !dbg !10382

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10372
  ret i32 %12, !dbg !10383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.73() unnamed_addr #1 !dbg !10384 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10388, metadata !DIExpression()), !dbg !10389
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10390, !srcloc !10392
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.74() #26, !dbg !10393
  ret i1 %1, !dbg !10394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10395 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10399, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i8 1, metadata !10400, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10401, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 0, metadata !10402, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10403, metadata !DIExpression()), !dbg !10404
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10405
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10405
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10405
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10401, metadata !DIExpression()), !dbg !10404
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10406
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10409
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10410
  call void @llvm.dbg.value(metadata i32 %7, metadata !10402, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %7, metadata !10402, metadata !DIExpression()), !dbg !10404
  ret i32 %7, !dbg !10411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.74() unnamed_addr #1 !dbg !10412 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10414, metadata !DIExpression()), !dbg !10415
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10416
  ret i1 %1, !dbg !10417
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10418 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10422, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 %1, metadata !10423, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 %2, metadata !10424, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 %3, metadata !10425, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 0, metadata !10426, metadata !DIExpression()), !dbg !10430
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10431
  %5 = icmp eq i32 %3, 17, !dbg !10432
  br i1 %5, label %6, label %14, !dbg !10433

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10434
  call void @llvm.dbg.value(metadata i32 %7, metadata !10427, metadata !DIExpression()), !dbg !10435
  %8 = icmp eq i32 %7, 0, !dbg !10436
  %9 = shl nuw i32 1, %1, !dbg !10438
  br i1 %8, label %12, label %10, !dbg !10439

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10440
  br label %14, !dbg !10442

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10443
  br label %14, !dbg !10446

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10447
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !10448 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10450, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.value(metadata i8* %1, metadata !10451, metadata !DIExpression()), !dbg !10454
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10455
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10455
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10455
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10452, metadata !DIExpression()), !dbg !10454
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10456
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10456
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10458
  %9 = icmp eq i32 %8, 0, !dbg !10458
  br i1 %9, label %12, label %10, !dbg !10459

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10460
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10462
  br label %12, !dbg !10463

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10464
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10466
  %15 = icmp eq i32 %14, 0, !dbg !10466
  br i1 %15, label %19, label %16, !dbg !10467

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10468
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10469
  store i8 %18, i8* %1, align 1, !dbg !10470
  br label %19, !dbg !10471

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10454
  ret i32 %20, !dbg !10472
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10473 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10475, metadata !DIExpression()), !dbg !10479
  call void @llvm.dbg.value(metadata i8 %1, metadata !10476, metadata !DIExpression()), !dbg !10479
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10480
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10480
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10480
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10477, metadata !DIExpression()), !dbg !10479
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10481

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10482
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10485
  %10 = icmp eq i32 %9, 0, !dbg !10485
  br i1 %10, label %18, label %11, !dbg !10486

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10487, !srcloc !10494
  call void @llvm.dbg.value(metadata i32 undef, metadata !10490, metadata !DIExpression()) #24, !dbg !10495
  call void @llvm.dbg.value(metadata i32 undef, metadata !10491, metadata !DIExpression()) #24, !dbg !10495
  call void @llvm.dbg.value(metadata i32 undef, metadata !10478, metadata !DIExpression()), !dbg !10479
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10496
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10498
  %15 = icmp eq i32 %14, 0, !dbg !10498
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10487
  br i1 %15, label %17, label %19, !dbg !10499

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10490, metadata !DIExpression()) #24, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %16, metadata !10478, metadata !DIExpression()), !dbg !10479
  call void @llvm.dbg.value(metadata i32 undef, metadata !10500, metadata !DIExpression()) #24, !dbg !10503
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !10505, !srcloc !10506
  br label %18, !dbg !10507

18:                                               ; preds = %17, %7
  br label %7, !dbg !10482, !llvm.loop !10508

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10487
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10510
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !10511
  call void @llvm.dbg.value(metadata i32 %20, metadata !10500, metadata !DIExpression()) #24, !dbg !10512
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !10514, !srcloc !10506
  ret void, !dbg !10515
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !10516 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10518, metadata !DIExpression()), !dbg !10521
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10522
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10522
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10522
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10519, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.value(metadata i32 0, metadata !10520, metadata !DIExpression()), !dbg !10521
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10523
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10523
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10525
  %8 = icmp ne i32 %7, 0, !dbg !10525
  %9 = zext i1 %8 to i32, !dbg !10526
  call void @llvm.dbg.value(metadata i32 %9, metadata !10520, metadata !DIExpression()), !dbg !10521
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10527
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10529
  %12 = icmp eq i32 %11, 0, !dbg !10529
  %13 = or i32 %9, 2, !dbg !10530
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10530
  call void @llvm.dbg.value(metadata i32 %14, metadata !10520, metadata !DIExpression()), !dbg !10521
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10531
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !10533
  %17 = icmp eq i32 %16, 0, !dbg !10533
  %18 = or i32 %14, 4, !dbg !10534
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10534
  call void @llvm.dbg.value(metadata i32 %19, metadata !10520, metadata !DIExpression()), !dbg !10521
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10535
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !10537
  %22 = icmp eq i32 %21, 0, !dbg !10537
  %23 = or i32 %19, 8, !dbg !10538
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10538
  call void @llvm.dbg.value(metadata i32 %24, metadata !10520, metadata !DIExpression()), !dbg !10521
  %25 = and i32 %24, 8, !dbg !10539
  %26 = icmp eq i32 %25, 0, !dbg !10539
  br i1 %26, label %29, label %27, !dbg !10541

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10542
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !10544
  br label %29, !dbg !10545

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10546
  %31 = icmp eq i32 %30, 0, !dbg !10546
  br i1 %31, label %34, label %32, !dbg !10548

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10549
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !10551
  br label %34, !dbg !10552

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10553
  %36 = icmp eq i32 %35, 0, !dbg !10553
  br i1 %36, label %39, label %37, !dbg !10555

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10556
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !10558
  br label %39, !dbg !10559

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10560
  %41 = icmp eq i32 %40, 0, !dbg !10560
  br i1 %41, label %44, label %42, !dbg !10562

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10563
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !10565
  br label %44, !dbg !10566

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10567
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !10568
  ret i32 %24, !dbg !10569
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10570 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10572, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10573, metadata !DIExpression()), !dbg !10581
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10582
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10582
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10582
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10574, metadata !DIExpression()), !dbg !10581
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10583
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10583
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10583
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10575, metadata !DIExpression()), !dbg !10581
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10584
  %10 = load i8, i8* %9, align 4, !dbg !10584
  %11 = zext i8 %10 to i32, !dbg !10585
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !10586
  call void @llvm.dbg.value(metadata i32 %12, metadata !10577, metadata !DIExpression()), !dbg !10581
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10587
  %14 = load i8, i8* %13, align 1, !dbg !10587
  %15 = zext i8 %14 to i32, !dbg !10588
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !10589
  call void @llvm.dbg.value(metadata i32 %16, metadata !10578, metadata !DIExpression()), !dbg !10581
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10590
  %18 = load i8, i8* %17, align 2, !dbg !10590
  %19 = zext i8 %18 to i32, !dbg !10591
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !10592
  call void @llvm.dbg.value(metadata i32 %20, metadata !10579, metadata !DIExpression()), !dbg !10581
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10593
  %22 = load i8, i8* %21, align 1, !dbg !10593
  %23 = zext i8 %22 to i32, !dbg !10594
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !10595
  call void @llvm.dbg.value(metadata i32 %24, metadata !10580, metadata !DIExpression()), !dbg !10581
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10596

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10598
  br i1 %26, label %69, label %27, !dbg !10600

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10601

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10602
  br i1 %29, label %65, label %30, !dbg !10602

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10604
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10581
  br i1 %31, label %38, label %34, !dbg !10606

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10607
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !10607

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10610
  br i1 %37, label %38, label %69, !dbg !10611

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10612
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !10613
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !10614
  %41 = icmp eq i32 %12, %40, !dbg !10616
  br i1 %41, label %43, label %42, !dbg !10617

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !10618
  br label %43, !dbg !10620

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !10621
  %45 = icmp eq i32 %16, %44, !dbg !10623
  br i1 %45, label %47, label %46, !dbg !10624

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !10625
  br label %47, !dbg !10627

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !10628
  %49 = icmp eq i32 %20, %48, !dbg !10630
  br i1 %49, label %51, label %50, !dbg !10631

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !10632
  br label %51, !dbg !10634

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !10635
  %53 = icmp eq i32 %24, %52, !dbg !10637
  br i1 %53, label %55, label %54, !dbg !10638

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !10639
  br label %55, !dbg !10641

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10642
  %57 = load i32, i32* %56, align 4, !dbg !10642
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10644
  %59 = load i32, i32* %58, align 4, !dbg !10644
  %60 = icmp eq i32 %57, %59, !dbg !10645
  br i1 %60, label %63, label %61, !dbg !10646

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !10647
  %62 = load i32, i32* %56, align 4, !dbg !10649
  store i32 %62, i32* %58, align 4, !dbg !10650
  br label %63, !dbg !10651

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10652
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !10653
  br label %69, !dbg !10654

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10602
  %67 = and i8 %66, 1, !dbg !10602
  %68 = icmp eq i8 %67, 0, !dbg !10602
  br i1 %68, label %30, label %69, !dbg !10602

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10581
  ret i32 %70, !dbg !10655
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !10656 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10658, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10659, metadata !DIExpression()), !dbg !10661
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10662
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10662
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10662
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10660, metadata !DIExpression()), !dbg !10661
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10663
  %7 = load i32, i32* %6, align 4, !dbg !10663
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10664
  store i32 %7, i32* %8, align 4, !dbg !10665
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10666, !range !10667
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !10668
  %11 = trunc i32 %10 to i8, !dbg !10668
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10669
  store i8 %11, i8* %12, align 4, !dbg !10670
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !10671, !range !10672
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !10673
  %15 = trunc i32 %14 to i8, !dbg !10673
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10674
  store i8 %15, i8* %16, align 1, !dbg !10675
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !10676
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10677, !range !10667
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !10678
  %20 = trunc i32 %19 to i8, !dbg !10678
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10679
  store i8 %20, i8* %21, align 2, !dbg !10680
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !10681, !range !10682
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !10683
  %24 = trunc i32 %23 to i8, !dbg !10683
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10684
  store i8 %24, i8* %25, align 1, !dbg !10685
  ret i32 0, !dbg !10686
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !10687 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10689, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i8* %1, metadata !10690, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i32 %2, metadata !10691, metadata !DIExpression()), !dbg !10695
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10696
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10696
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10696
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10692, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i8 0, metadata !10693, metadata !DIExpression()), !dbg !10695
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10697
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10697
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10699
  %10 = icmp eq i32 %9, 0, !dbg !10699
  br i1 %10, label %30, label %11, !dbg !10700

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10701, !srcloc !10494
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !10701
  call void @llvm.dbg.value(metadata i32 %13, metadata !10490, metadata !DIExpression()) #24, !dbg !10703
  call void @llvm.dbg.value(metadata i32 undef, metadata !10491, metadata !DIExpression()) #24, !dbg !10703
  call void @llvm.dbg.value(metadata i32 %13, metadata !10694, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i8 0, metadata !10693, metadata !DIExpression()), !dbg !10695
  %14 = icmp sgt i32 %2, 0, !dbg !10704
  br i1 %14, label %15, label %28, !dbg !10705

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !10693, metadata !DIExpression()), !dbg !10695
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10706
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !10707
  %20 = icmp eq i32 %19, 0, !dbg !10705
  br i1 %20, label %28, label %21, !dbg !10708

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10709
  %23 = add i8 %17, 1, !dbg !10711
  call void @llvm.dbg.value(metadata i8 %23, metadata !10693, metadata !DIExpression()), !dbg !10695
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !10712
  %25 = load i8, i8* %24, align 1, !dbg !10712
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !10713
  %26 = zext i8 %23 to i32, !dbg !10714
  %27 = icmp slt i32 %26, %2, !dbg !10704
  br i1 %27, label %15, label %28, !dbg !10705, !llvm.loop !10715

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !10714
  call void @llvm.dbg.value(metadata i32 %13, metadata !10500, metadata !DIExpression()) #24, !dbg !10717
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !10719, !srcloc !10506
  br label %30, !dbg !10720

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !10695
  ret i32 %31, !dbg !10721
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !10722 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10724, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i8* %1, metadata !10725, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i32 %2, metadata !10726, metadata !DIExpression()), !dbg !10729
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10730
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10730
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10730
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10727, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata i8 0, metadata !10728, metadata !DIExpression()), !dbg !10729
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10731
  call void @llvm.dbg.value(metadata i8 0, metadata !10728, metadata !DIExpression()), !dbg !10729
  %8 = icmp sgt i32 %2, 0, !dbg !10732
  br i1 %8, label %9, label %28, !dbg !10733

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !10728, metadata !DIExpression()), !dbg !10729
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10731
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10734
  %14 = icmp eq i32 %13, 0, !dbg !10733
  br i1 %14, label %28, label %15, !dbg !10735

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10736
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !10738
  %18 = add i8 %11, 1, !dbg !10739
  call void @llvm.dbg.value(metadata i8 %18, metadata !10728, metadata !DIExpression()), !dbg !10729
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !10740
  store i8 %17, i8* %19, align 1, !dbg !10741
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10742
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !10744
  %22 = icmp eq i32 %21, 0, !dbg !10744
  br i1 %22, label %25, label %23, !dbg !10745

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10746
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !10748
  br label %25, !dbg !10749

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !10728, metadata !DIExpression()), !dbg !10729
  %26 = zext i8 %18 to i32, !dbg !10750
  %27 = icmp slt i32 %26, %2, !dbg !10732
  br i1 %27, label %9, label %28, !dbg !10733, !llvm.loop !10751

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !10750
  ret i32 %29, !dbg !10753
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10756, metadata !DIExpression()), !dbg !10758
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10759
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10759
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10759
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10757, metadata !DIExpression()), !dbg !10758
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10760
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10760
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10761
  ret void, !dbg !10762
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10763 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10765, metadata !DIExpression()), !dbg !10767
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10768
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10768
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10768
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10766, metadata !DIExpression()), !dbg !10767
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10769
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10769
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10770
  ret void, !dbg !10771
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10772 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10774, metadata !DIExpression()), !dbg !10776
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10777
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10777
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10777
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10775, metadata !DIExpression()), !dbg !10776
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10778
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10778
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10779
  %8 = icmp eq i32 %7, 0, !dbg !10779
  br i1 %8, label %14, label %9, !dbg !10780

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10781
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !10782
  %12 = icmp ne i32 %11, 0, !dbg !10780
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !10783
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10784 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10786, metadata !DIExpression()), !dbg !10788
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10789
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10789
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10789
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10787, metadata !DIExpression()), !dbg !10788
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10790
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10790
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10791
  ret void, !dbg !10792
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10793 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10795, metadata !DIExpression()), !dbg !10797
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10798
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10798
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10798
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10796, metadata !DIExpression()), !dbg !10797
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10799
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10799
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10800
  ret void, !dbg !10801
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !10802 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10804, metadata !DIExpression()), !dbg !10806
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10807
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10807
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10807
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10805, metadata !DIExpression()), !dbg !10806
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10808
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10808
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10809
  ret i32 %7, !dbg !10810
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10813, metadata !DIExpression()), !dbg !10815
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10816
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10816
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10816
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10814, metadata !DIExpression()), !dbg !10815
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10817
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10817
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10818
  ret i32 %7, !dbg !10819
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10820 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10822, metadata !DIExpression()), !dbg !10824
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10825
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10825
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10825
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10823, metadata !DIExpression()), !dbg !10824
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10826
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10826
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10827
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10828
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10828
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !10828

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10830
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10832
  br label %11, !dbg !10833

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10832
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10834
  ret void, !dbg !10835
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10836 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10838, metadata !DIExpression()), !dbg !10840
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10841
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10841
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10841
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10839, metadata !DIExpression()), !dbg !10840
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10842
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10842
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10843
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10844
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10844
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073812480, label %9
  ], !dbg !10844

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10846
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10848
  br label %11, !dbg !10849

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10848
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10850
  ret void, !dbg !10851
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !10852 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10854, metadata !DIExpression()), !dbg !10856
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10857
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10857
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10857
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10855, metadata !DIExpression()), !dbg !10856
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10858
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10858
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10859
  %8 = icmp eq i32 %7, 0, !dbg !10859
  br i1 %8, label %13, label %9, !dbg !10860

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10861
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10862
  %12 = icmp eq i32 %11, 0, !dbg !10862
  br i1 %12, label %13, label %22, !dbg !10863

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10864
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !10865
  %16 = icmp eq i32 %15, 0, !dbg !10865
  br i1 %16, label %22, label %17, !dbg !10866

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10867
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !10868
  %20 = icmp ne i32 %19, 0, !dbg !10866
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10872, metadata !DIExpression()), !dbg !10873
  ret i32 1, !dbg !10874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10875 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10877, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10878, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.value(metadata i8* %2, metadata !10879, metadata !DIExpression()), !dbg !10881
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10882
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10882
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10882
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10880, metadata !DIExpression()), !dbg !10881
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10883
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10884
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10885
  store i8* %2, i8** %8, align 4, !dbg !10886
  ret void, !dbg !10887
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10888 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10893, metadata !DIExpression()), !dbg !10894
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10895
  %3 = load volatile i32, i32* %2, align 4, !dbg !10895
  %4 = lshr i32 %3, 5, !dbg !10896
  %5 = and i32 %4, 1, !dbg !10896
  ret i32 %5, !dbg !10897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10898 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10900, metadata !DIExpression()), !dbg !10901
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10902
  %3 = load volatile i32, i32* %2, align 4, !dbg !10902
  %4 = lshr i32 %3, 5, !dbg !10903
  %5 = and i32 %4, 1, !dbg !10903
  ret i32 %5, !dbg !10904
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10905 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10907, metadata !DIExpression()), !dbg !10908
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10909
  %3 = load volatile i32, i32* %2, align 4, !dbg !10909
  %4 = lshr i32 %3, 6, !dbg !10910
  %5 = and i32 %4, 1, !dbg !10910
  ret i32 %5, !dbg !10911
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10912 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10914, metadata !DIExpression()), !dbg !10915
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10916
  %3 = load volatile i32, i32* %2, align 4, !dbg !10916
  %4 = lshr i32 %3, 6, !dbg !10917
  %5 = and i32 %4, 1, !dbg !10917
  ret i32 %5, !dbg !10918
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10919 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10923, metadata !DIExpression()), !dbg !10926
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10927

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10928, metadata !DIExpression()) #24, !dbg !10934
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10937, !srcloc !10938
  call void @llvm.dbg.value(metadata i32 %4, metadata !10933, metadata !DIExpression()) #24, !dbg !10934
  %5 = and i32 %4, -2, !dbg !10939
  call void @llvm.dbg.value(metadata i32 %5, metadata !10924, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.value(metadata i32 %5, metadata !10941, metadata !DIExpression()) #24, !dbg !10948
  call void @llvm.dbg.value(metadata i32* %2, metadata !10946, metadata !DIExpression()) #24, !dbg !10948
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10950, !srcloc !10951
  call void @llvm.dbg.value(metadata i32 %6, metadata !10947, metadata !DIExpression()) #24, !dbg !10948
  %7 = icmp eq i32 %6, 0, !dbg !10927
  br i1 %7, label %8, label %3, !dbg !10939, !llvm.loop !10952

8:                                                ; preds = %3
  ret void, !dbg !10953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10954 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10956, metadata !DIExpression()), !dbg !10957
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10958
  %3 = load volatile i32, i32* %2, align 4, !dbg !10958
  %4 = and i32 %3, -65, !dbg !10958
  store volatile i32 %4, i32* %2, align 4, !dbg !10958
  ret void, !dbg !10959
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10960 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10962, metadata !DIExpression()), !dbg !10965
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10966

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10928, metadata !DIExpression()) #24, !dbg !10967
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10970, !srcloc !10938
  call void @llvm.dbg.value(metadata i32 %4, metadata !10933, metadata !DIExpression()) #24, !dbg !10967
  %5 = and i32 %4, -257, !dbg !10971
  call void @llvm.dbg.value(metadata i32 %5, metadata !10963, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.value(metadata i32 %5, metadata !10941, metadata !DIExpression()) #24, !dbg !10973
  call void @llvm.dbg.value(metadata i32* %2, metadata !10946, metadata !DIExpression()) #24, !dbg !10973
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10975, !srcloc !10951
  call void @llvm.dbg.value(metadata i32 %6, metadata !10947, metadata !DIExpression()) #24, !dbg !10973
  %7 = icmp eq i32 %6, 0, !dbg !10966
  br i1 %7, label %8, label %3, !dbg !10971, !llvm.loop !10976

8:                                                ; preds = %3
  ret void, !dbg !10977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10978 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10980, metadata !DIExpression()), !dbg !10983
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10984

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10928, metadata !DIExpression()) #24, !dbg !10985
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10988, !srcloc !10938
  call void @llvm.dbg.value(metadata i32 %4, metadata !10933, metadata !DIExpression()) #24, !dbg !10985
  %5 = or i32 %4, 1, !dbg !10989
  call void @llvm.dbg.value(metadata i32 %5, metadata !10981, metadata !DIExpression()), !dbg !10990
  call void @llvm.dbg.value(metadata i32 %5, metadata !10941, metadata !DIExpression()) #24, !dbg !10991
  call void @llvm.dbg.value(metadata i32* %2, metadata !10946, metadata !DIExpression()) #24, !dbg !10991
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10993, !srcloc !10951
  call void @llvm.dbg.value(metadata i32 %6, metadata !10947, metadata !DIExpression()) #24, !dbg !10991
  %7 = icmp eq i32 %6, 0, !dbg !10984
  br i1 %7, label %8, label %3, !dbg !10989, !llvm.loop !10994

8:                                                ; preds = %3
  ret void, !dbg !10995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10996 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10998, metadata !DIExpression()), !dbg !10999
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11000
  %3 = load volatile i32, i32* %2, align 4, !dbg !11000
  %4 = or i32 %3, 64, !dbg !11000
  store volatile i32 %4, i32* %2, align 4, !dbg !11000
  ret void, !dbg !11001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11002 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11004, metadata !DIExpression()), !dbg !11007
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11008

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10928, metadata !DIExpression()) #24, !dbg !11009
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11012, !srcloc !10938
  call void @llvm.dbg.value(metadata i32 %4, metadata !10933, metadata !DIExpression()) #24, !dbg !11009
  %5 = or i32 %4, 256, !dbg !11013
  call void @llvm.dbg.value(metadata i32 %5, metadata !11005, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata i32 %5, metadata !10941, metadata !DIExpression()) #24, !dbg !11015
  call void @llvm.dbg.value(metadata i32* %2, metadata !10946, metadata !DIExpression()) #24, !dbg !11015
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11017, !srcloc !10951
  call void @llvm.dbg.value(metadata i32 %6, metadata !10947, metadata !DIExpression()) #24, !dbg !11015
  %7 = icmp eq i32 %6, 0, !dbg !11008
  br i1 %7, label %8, label %3, !dbg !11013, !llvm.loop !11018

8:                                                ; preds = %3
  ret void, !dbg !11019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11020 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11022, metadata !DIExpression()), !dbg !11025
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11026

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10928, metadata !DIExpression()) #24, !dbg !11027
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11030, !srcloc !10938
  call void @llvm.dbg.value(metadata i32 %4, metadata !10933, metadata !DIExpression()) #24, !dbg !11027
  %5 = and i32 %4, -33, !dbg !11031
  call void @llvm.dbg.value(metadata i32 %5, metadata !11023, metadata !DIExpression()), !dbg !11032
  call void @llvm.dbg.value(metadata i32 %5, metadata !10941, metadata !DIExpression()) #24, !dbg !11033
  call void @llvm.dbg.value(metadata i32* %2, metadata !10946, metadata !DIExpression()) #24, !dbg !11033
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11035, !srcloc !10951
  call void @llvm.dbg.value(metadata i32 %6, metadata !10947, metadata !DIExpression()) #24, !dbg !11033
  %7 = icmp eq i32 %6, 0, !dbg !11026
  br i1 %7, label %8, label %3, !dbg !11031, !llvm.loop !11036

8:                                                ; preds = %3
  ret void, !dbg !11037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11038 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11040, metadata !DIExpression()), !dbg !11043
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11044

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10928, metadata !DIExpression()) #24, !dbg !11045
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11048, !srcloc !10938
  call void @llvm.dbg.value(metadata i32 %4, metadata !10933, metadata !DIExpression()) #24, !dbg !11045
  %5 = or i32 %4, 32, !dbg !11049
  call void @llvm.dbg.value(metadata i32 %5, metadata !11041, metadata !DIExpression()), !dbg !11050
  call void @llvm.dbg.value(metadata i32 %5, metadata !10941, metadata !DIExpression()) #24, !dbg !11051
  call void @llvm.dbg.value(metadata i32* %2, metadata !10946, metadata !DIExpression()) #24, !dbg !11051
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11053, !srcloc !10951
  call void @llvm.dbg.value(metadata i32 %6, metadata !10947, metadata !DIExpression()) #24, !dbg !11051
  %7 = icmp eq i32 %6, 0, !dbg !11044
  br i1 %7, label %8, label %3, !dbg !11049, !llvm.loop !11054

8:                                                ; preds = %3
  ret void, !dbg !11055
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11056 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11058, metadata !DIExpression()), !dbg !11059
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11060
  %3 = load volatile i32, i32* %2, align 4, !dbg !11060
  %4 = lshr i32 %3, 7, !dbg !11061
  %5 = and i32 %4, 1, !dbg !11061
  ret i32 %5, !dbg !11062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11063 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11065, metadata !DIExpression()), !dbg !11068
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11069

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10928, metadata !DIExpression()) #24, !dbg !11070
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11073, !srcloc !10938
  call void @llvm.dbg.value(metadata i32 %4, metadata !10933, metadata !DIExpression()) #24, !dbg !11070
  %5 = and i32 %4, -65, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %5, metadata !11066, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata i32 %5, metadata !10941, metadata !DIExpression()) #24, !dbg !11076
  call void @llvm.dbg.value(metadata i32* %2, metadata !10946, metadata !DIExpression()) #24, !dbg !11076
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11078, !srcloc !10951
  call void @llvm.dbg.value(metadata i32 %6, metadata !10947, metadata !DIExpression()) #24, !dbg !11076
  %7 = icmp eq i32 %6, 0, !dbg !11069
  br i1 %7, label %8, label %3, !dbg !11074, !llvm.loop !11079

8:                                                ; preds = %3
  ret void, !dbg !11080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11081 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11083, metadata !DIExpression()), !dbg !11086
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11087

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10928, metadata !DIExpression()) #24, !dbg !11088
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11091, !srcloc !10938
  call void @llvm.dbg.value(metadata i32 %4, metadata !10933, metadata !DIExpression()) #24, !dbg !11088
  %5 = or i32 %4, 64, !dbg !11092
  call void @llvm.dbg.value(metadata i32 %5, metadata !11084, metadata !DIExpression()), !dbg !11093
  call void @llvm.dbg.value(metadata i32 %5, metadata !10941, metadata !DIExpression()) #24, !dbg !11094
  call void @llvm.dbg.value(metadata i32* %2, metadata !10946, metadata !DIExpression()) #24, !dbg !11094
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11096, !srcloc !10951
  call void @llvm.dbg.value(metadata i32 %6, metadata !10947, metadata !DIExpression()) #24, !dbg !11094
  %7 = icmp eq i32 %6, 0, !dbg !11087
  br i1 %7, label %8, label %3, !dbg !11092, !llvm.loop !11097

8:                                                ; preds = %3
  ret void, !dbg !11098
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11099 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11103, metadata !DIExpression()), !dbg !11104
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11105
  %3 = load volatile i32, i32* %2, align 4, !dbg !11105
  %4 = trunc i32 %3 to i8, !dbg !11106
  ret i8 %4, !dbg !11107
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11108 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11110, metadata !DIExpression()), !dbg !11111
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11112
  %3 = load volatile i32, i32* %2, align 4, !dbg !11112
  %4 = lshr i32 %3, 3, !dbg !11113
  %5 = and i32 %4, 1, !dbg !11113
  ret i32 %5, !dbg !11114
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11115 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11117, metadata !DIExpression()), !dbg !11119
  %3 = bitcast i32* %2 to i8*, !dbg !11120
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11120
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11118, metadata !DIExpression()), !dbg !11121
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11122
  %5 = load volatile i32, i32* %4, align 4, !dbg !11122
  store volatile i32 %5, i32* %2, align 4, !dbg !11123
  %6 = load volatile i32, i32* %2, align 4, !dbg !11124
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11125
  %8 = load volatile i32, i32* %7, align 4, !dbg !11125
  store volatile i32 %8, i32* %2, align 4, !dbg !11126
  %9 = load volatile i32, i32* %2, align 4, !dbg !11127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11128
  ret void, !dbg !11128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11129 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11133, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i8 %1, metadata !11134, metadata !DIExpression()), !dbg !11135
  %3 = zext i8 %1 to i32, !dbg !11136
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11137
  store volatile i32 %3, i32* %4, align 4, !dbg !11138
  ret void, !dbg !11139
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11140 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11144, metadata !DIExpression()), !dbg !11146
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11147
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11147
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11147
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11145, metadata !DIExpression()), !dbg !11146
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11148
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11148
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11149
  ret i32 %7, !dbg !11150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !11151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11155, metadata !DIExpression()), !dbg !11156
  %2 = icmp eq i32 %0, 1024, !dbg !11157
  %3 = select i1 %2, i32 2, i32 0, !dbg !11157
  %4 = icmp eq i32 %0, 1536, !dbg !11157
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11157
  ret i32 %5, !dbg !11158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11159 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11161, metadata !DIExpression()), !dbg !11163
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11164
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11164
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11164
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11162, metadata !DIExpression()), !dbg !11163
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11165
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11165
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11166
  ret i32 %7, !dbg !11167
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !11168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11172, metadata !DIExpression()), !dbg !11173
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11174
  %3 = icmp ult i32 %2, 4, !dbg !11174
  br i1 %3, label %4, label %7, !dbg !11174

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11174
  %6 = load i32, i32* %5, align 4, !dbg !11174
  br label %7, !dbg !11174

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11175
  ret i32 %8, !dbg !11177
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11178 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11180, metadata !DIExpression()), !dbg !11182
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11183
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11183
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11183
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11181, metadata !DIExpression()), !dbg !11182
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11184
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11184
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11185
  ret i32 %7, !dbg !11186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11191, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 %1, metadata !11192, metadata !DIExpression()), !dbg !11193
  %3 = icmp eq i32 %0, 4096, !dbg !11194
  %4 = icmp eq i32 %1, 0, !dbg !11194
  %5 = select i1 %4, i32 4, i32 3, !dbg !11194
  %6 = select i1 %4, i32 3, i32 2, !dbg !11194
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11194
  ret i32 %7, !dbg !11195
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !11196 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11198, metadata !DIExpression()), !dbg !11200
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11201
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11201
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11201
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11199, metadata !DIExpression()), !dbg !11200
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11202
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11202
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11203
  ret i32 %7, !dbg !11204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11209, metadata !DIExpression()), !dbg !11210
  %2 = icmp eq i32 %0, 768, !dbg !11211
  %3 = zext i1 %2 to i32, !dbg !11210
  ret i32 %3, !dbg !11213
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11214 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11216, metadata !DIExpression()), !dbg !11217
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11218
  %3 = load volatile i32, i32* %2, align 4, !dbg !11218
  %4 = and i32 %3, 768, !dbg !11218
  ret i32 %4, !dbg !11219
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11220 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11222, metadata !DIExpression()), !dbg !11223
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11224
  %3 = load volatile i32, i32* %2, align 4, !dbg !11224
  %4 = and i32 %3, 4096, !dbg !11224
  ret i32 %4, !dbg !11225
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11226 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11228, metadata !DIExpression()), !dbg !11229
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11230
  %3 = load volatile i32, i32* %2, align 4, !dbg !11230
  %4 = and i32 %3, 12288, !dbg !11230
  ret i32 %4, !dbg !11231
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11232 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11234, metadata !DIExpression()), !dbg !11235
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11236
  %3 = load volatile i32, i32* %2, align 4, !dbg !11236
  %4 = and i32 %3, 1536, !dbg !11236
  ret i32 %4, !dbg !11237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !11238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11242, metadata !DIExpression()), !dbg !11243
  %2 = icmp eq i32 %0, 2, !dbg !11244
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11244
  %4 = icmp eq i32 %0, 1, !dbg !11244
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11244
  ret i32 %5, !dbg !11245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11250, metadata !DIExpression()), !dbg !11251
  %2 = icmp ult i32 %0, 3, !dbg !11252
  br i1 %2, label %3, label %6, !dbg !11252

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11252
  %5 = load i32, i32* %4, align 4, !dbg !11252
  br label %6, !dbg !11252

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11253
  ret i32 %7, !dbg !11255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11260, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.value(metadata i32 %1, metadata !11261, metadata !DIExpression()), !dbg !11262
  %3 = icmp eq i32 %0, 4, !dbg !11263
  %4 = icmp eq i32 %1, 0, !dbg !11263
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11263
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11263
  ret i32 %6, !dbg !11264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11269, metadata !DIExpression()), !dbg !11270
  %2 = icmp eq i32 %0, 1, !dbg !11271
  %3 = select i1 %2, i32 768, i32 0, !dbg !11270
  ret i32 %3, !dbg !11273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11274 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11276, metadata !DIExpression()), !dbg !11277
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11278
  %3 = load volatile i32, i32* %2, align 4, !dbg !11278
  %4 = and i32 %3, -8193, !dbg !11278
  store volatile i32 %4, i32* %2, align 4, !dbg !11278
  ret void, !dbg !11279
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11280 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11284, metadata !DIExpression()), !dbg !11287
  call void @llvm.dbg.value(metadata i32 %1, metadata !11285, metadata !DIExpression()), !dbg !11287
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11288
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11288
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11288
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11286, metadata !DIExpression()), !dbg !11287
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11289
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11289
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11290
  ret void, !dbg !11291
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11292 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11294, metadata !DIExpression()), !dbg !11297
  call void @llvm.dbg.value(metadata i32 %1, metadata !11295, metadata !DIExpression()), !dbg !11297
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11298
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11298
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11298
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11296, metadata !DIExpression()), !dbg !11297
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11299
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11299
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11300
  ret void, !dbg !11301
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11302 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11304, metadata !DIExpression()), !dbg !11307
  call void @llvm.dbg.value(metadata i32 %1, metadata !11305, metadata !DIExpression()), !dbg !11307
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11308
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11308
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11308
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11306, metadata !DIExpression()), !dbg !11307
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11309
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11309
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11310
  ret void, !dbg !11311
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11312 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11314, metadata !DIExpression()), !dbg !11317
  call void @llvm.dbg.value(metadata i32 %1, metadata !11315, metadata !DIExpression()), !dbg !11317
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11318
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11318
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11318
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11316, metadata !DIExpression()), !dbg !11317
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11319
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11319
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11320
  ret void, !dbg !11321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11322 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11324, metadata !DIExpression()), !dbg !11329
  call void @llvm.dbg.value(metadata i32 %1, metadata !11325, metadata !DIExpression()), !dbg !11329
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11330
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11330
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11330
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11326, metadata !DIExpression()), !dbg !11329
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11331
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11331
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11331
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11327, metadata !DIExpression()), !dbg !11329
  %10 = bitcast i32* %3 to i8*, !dbg !11332
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11332
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11333
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11333
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11337
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11337
  %15 = load i8*, i8** %14, align 4, !dbg !11337
  call void @llvm.dbg.value(metadata i32* %3, metadata !11328, metadata !DIExpression(DW_OP_deref)), !dbg !11329
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11338
  %17 = icmp slt i32 %16, 0, !dbg !11339
  br i1 %17, label %23, label %18, !dbg !11340

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11341
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11341
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !11342
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11343
  %22 = load i32, i32* %3, align 4, !dbg !11344
  call void @llvm.dbg.value(metadata i32 %22, metadata !11328, metadata !DIExpression()), !dbg !11329
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !11345
  br label %23, !dbg !11346

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11346
  ret void, !dbg !11346
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11347 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11349, metadata !DIExpression()), !dbg !11350
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11351
  %3 = load volatile i32, i32* %2, align 4, !dbg !11351
  %4 = or i32 %3, 8192, !dbg !11351
  store volatile i32 %4, i32* %2, align 4, !dbg !11351
  ret void, !dbg !11352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11355, metadata !DIExpression()), !dbg !11359
  call void @llvm.dbg.value(metadata i8* %1, metadata !11356, metadata !DIExpression()), !dbg !11359
  call void @llvm.dbg.value(metadata i32* %2, metadata !11357, metadata !DIExpression()), !dbg !11359
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11360
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11360
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11360
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11358, metadata !DIExpression()), !dbg !11359
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11361
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11361
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11363
  br i1 %9, label %12, label %10, !dbg !11364

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11365
  br label %12, !dbg !11366

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11359
  ret i32 %13, !dbg !11367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11368 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11372, metadata !DIExpression()), !dbg !11374
  call void @llvm.dbg.value(metadata i32 0, metadata !11373, metadata !DIExpression()), !dbg !11374
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11375
  %3 = load volatile i32, i32* %2, align 4, !dbg !11375
  %4 = and i32 %3, -32769, !dbg !11375
  store volatile i32 %4, i32* %2, align 4, !dbg !11375
  ret void, !dbg !11376
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11377 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11381, metadata !DIExpression()), !dbg !11385
  call void @llvm.dbg.value(metadata i32 %1, metadata !11382, metadata !DIExpression()), !dbg !11385
  call void @llvm.dbg.value(metadata i32 0, metadata !11383, metadata !DIExpression()), !dbg !11385
  call void @llvm.dbg.value(metadata i32 %2, metadata !11384, metadata !DIExpression()), !dbg !11385
  %4 = zext i32 %1 to i64, !dbg !11386
  %5 = mul nuw nsw i64 %4, 25, !dbg !11386
  %6 = zext i32 %2 to i64, !dbg !11386
  %7 = shl nuw nsw i64 %6, 2, !dbg !11386
  %8 = udiv i64 %5, %7, !dbg !11386
  %9 = trunc i64 %8 to i32, !dbg !11386
  %10 = udiv i32 %9, 100, !dbg !11386
  %11 = shl nuw nsw i32 %10, 4, !dbg !11386
  %12 = mul i32 %10, -100, !dbg !11386
  %13 = add i32 %12, %9, !dbg !11386
  %14 = shl i32 %13, 4, !dbg !11386
  %15 = add i32 %14, 50, !dbg !11386
  %16 = udiv i32 %15, 100, !dbg !11386
  %17 = and i32 %16, 240, !dbg !11386
  %18 = add nuw nsw i32 %17, %11, !dbg !11386
  %19 = and i32 %16, 15, !dbg !11386
  %20 = and i32 %18, 65520, !dbg !11389
  %21 = or i32 %20, %19, !dbg !11389
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11390
  store volatile i32 %21, i32* %22, align 4, !dbg !11391
  ret void, !dbg !11392
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11393 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11395, metadata !DIExpression()), !dbg !11397
  call void @llvm.dbg.value(metadata i32 %1, metadata !11396, metadata !DIExpression()), !dbg !11397
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11398
  %4 = load volatile i32, i32* %3, align 4, !dbg !11398
  %5 = and i32 %4, -769, !dbg !11398
  %6 = or i32 %5, %1, !dbg !11398
  store volatile i32 %6, i32* %3, align 4, !dbg !11398
  ret void, !dbg !11399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11400 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11402, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.value(metadata i32 %1, metadata !11403, metadata !DIExpression()), !dbg !11404
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11405
  %4 = load volatile i32, i32* %3, align 4, !dbg !11405
  %5 = and i32 %4, -4097, !dbg !11405
  %6 = or i32 %5, %1, !dbg !11405
  store volatile i32 %6, i32* %3, align 4, !dbg !11405
  ret void, !dbg !11406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11407 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11409, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32 %1, metadata !11410, metadata !DIExpression()), !dbg !11411
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11412
  %4 = load volatile i32, i32* %3, align 4, !dbg !11412
  %5 = and i32 %4, -12289, !dbg !11412
  %6 = or i32 %5, %1, !dbg !11412
  store volatile i32 %6, i32* %3, align 4, !dbg !11412
  ret void, !dbg !11413
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11414 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11416, metadata !DIExpression()), !dbg !11418
  call void @llvm.dbg.value(metadata i32 %1, metadata !11417, metadata !DIExpression()), !dbg !11418
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11419
  %4 = load volatile i32, i32* %3, align 4, !dbg !11419
  %5 = and i32 %4, -1537, !dbg !11419
  %6 = or i32 %5, %1, !dbg !11419
  store volatile i32 %6, i32* %3, align 4, !dbg !11419
  ret void, !dbg !11420
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11421 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11423, metadata !DIExpression()), !dbg !11424
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11425
  %3 = load volatile i32, i32* %2, align 4, !dbg !11425
  %4 = and i32 %3, 1, !dbg !11425
  ret i32 %4, !dbg !11426
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11427 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11429, metadata !DIExpression()), !dbg !11430
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11431
  %3 = load volatile i32, i32* %2, align 4, !dbg !11431
  %4 = lshr i32 %3, 1, !dbg !11432
  %5 = and i32 %4, 1, !dbg !11432
  ret i32 %5, !dbg !11433
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11434 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11436, metadata !DIExpression()), !dbg !11437
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11438
  %3 = load volatile i32, i32* %2, align 4, !dbg !11438
  %4 = lshr i32 %3, 8, !dbg !11439
  %5 = and i32 %4, 1, !dbg !11439
  ret i32 %5, !dbg !11440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11441 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11443, metadata !DIExpression()), !dbg !11444
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11445
  store volatile i32 -257, i32* %2, align 4, !dbg !11445
  ret void, !dbg !11446
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11447 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11449, metadata !DIExpression()), !dbg !11451
  %3 = bitcast i32* %2 to i8*, !dbg !11452
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11452
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11450, metadata !DIExpression()), !dbg !11453
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11454
  %5 = load volatile i32, i32* %4, align 4, !dbg !11454
  store volatile i32 %5, i32* %2, align 4, !dbg !11455
  %6 = load volatile i32, i32* %2, align 4, !dbg !11456
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11457
  %8 = load volatile i32, i32* %7, align 4, !dbg !11457
  store volatile i32 %8, i32* %2, align 4, !dbg !11458
  %9 = load volatile i32, i32* %2, align 4, !dbg !11459
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11460
  ret void, !dbg !11460
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11461 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11463, metadata !DIExpression()), !dbg !11465
  %3 = bitcast i32* %2 to i8*, !dbg !11466
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11466
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11464, metadata !DIExpression()), !dbg !11467
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11468
  %5 = load volatile i32, i32* %4, align 4, !dbg !11468
  store volatile i32 %5, i32* %2, align 4, !dbg !11469
  %6 = load volatile i32, i32* %2, align 4, !dbg !11470
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11471
  %8 = load volatile i32, i32* %7, align 4, !dbg !11471
  store volatile i32 %8, i32* %2, align 4, !dbg !11472
  %9 = load volatile i32, i32* %2, align 4, !dbg !11473
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11474
  ret void, !dbg !11474
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11475 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11477, metadata !DIExpression()), !dbg !11479
  %3 = bitcast i32* %2 to i8*, !dbg !11480
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11480
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11478, metadata !DIExpression()), !dbg !11481
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11482
  %5 = load volatile i32, i32* %4, align 4, !dbg !11482
  store volatile i32 %5, i32* %2, align 4, !dbg !11483
  %6 = load volatile i32, i32* %2, align 4, !dbg !11484
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11485
  %8 = load volatile i32, i32* %7, align 4, !dbg !11485
  store volatile i32 %8, i32* %2, align 4, !dbg !11486
  %9 = load volatile i32, i32* %2, align 4, !dbg !11487
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11488
  ret void, !dbg !11488
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1645 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1647, metadata !DIExpression()), !dbg !11489
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #25, !dbg !11490
  tail call void @arch_irq_enable(i32 noundef 37) #25, !dbg !11492
  ret void, !dbg !11492
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !11493 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11495, metadata !DIExpression()), !dbg !11497
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11498
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11498
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11498
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11496, metadata !DIExpression()), !dbg !11497
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !11499
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !11499
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !11501
  br i1 %7, label %11, label %8, !dbg !11502

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !11503
  %10 = load i8*, i8** %9, align 4, !dbg !11503
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !11505
  br label %11, !dbg !11506

11:                                               ; preds = %8, %1
  ret void, !dbg !11507
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !11508 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11510, metadata !DIExpression()), !dbg !11516
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11517
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11517
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11517
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11511, metadata !DIExpression()), !dbg !11516
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11518
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11518
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11518
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11512, metadata !DIExpression()), !dbg !11516
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11519
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11520
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11520
  %10 = tail call fastcc zeroext i1 @device_is_ready.79(%struct.device* noundef %9) #26, !dbg !11522
  br i1 %10, label %11, label %51, !dbg !11523

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !11524
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11525
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11525
  %15 = load i8*, i8** %14, align 4, !dbg !11525
  %16 = tail call fastcc i32 @clock_control_on.80(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !11526
  call void @llvm.dbg.value(metadata i32 %16, metadata !11515, metadata !DIExpression()), !dbg !11516
  %17 = icmp eq i32 %16, 0, !dbg !11527
  br i1 %17, label %18, label %51, !dbg !11529

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11530
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !11530
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !11531
  call void @llvm.dbg.value(metadata i32 %21, metadata !11515, metadata !DIExpression()), !dbg !11516
  %22 = icmp slt i32 %21, 0, !dbg !11532
  br i1 %22, label %51, label %23, !dbg !11534

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11535
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11535
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !11536
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11537
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !11538
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11539
  %28 = load i32, i32* %27, align 4, !dbg !11539
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !11541

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !11513, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.value(metadata i32 4096, metadata !11514, metadata !DIExpression()), !dbg !11516
  br label %31, !dbg !11542

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !11513, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.value(metadata i32 0, metadata !11514, metadata !DIExpression()), !dbg !11516
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !11545
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !11545
  call void @llvm.dbg.value(metadata i32 %33, metadata !11514, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.value(metadata i32 %32, metadata !11513, metadata !DIExpression()), !dbg !11516
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11546
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !11547
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11548
  %36 = load i8, i8* %35, align 4, !dbg !11548, !range !7154
  %37 = icmp eq i8 %36, 0, !dbg !11548
  br i1 %37, label %39, label %38, !dbg !11550

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11551
  br label %39, !dbg !11553

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11554
  %41 = load i32, i32* %40, align 4, !dbg !11554
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !11555
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11556
  %43 = load i8, i8* %42, align 4, !dbg !11556, !range !7154
  %44 = icmp eq i8 %43, 0, !dbg !11556
  br i1 %44, label %47, label %45, !dbg !11558

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11559
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !11561
  br label %47, !dbg !11562

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11563
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !11564
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !11565
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !11565
  tail call void %50(%struct.device* noundef nonnull %0) #25, !dbg !11566
  br label %51, !dbg !11567

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !11516
  ret i32 %52, !dbg !11568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11571, metadata !DIExpression()), !dbg !11575
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11576
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11576
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11576
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11572, metadata !DIExpression()), !dbg !11575
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11573, metadata !DIExpression()), !dbg !11575
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11577
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11578
  ret void, !dbg !11579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.79(%struct.device* noundef %0) unnamed_addr #1 !dbg !11580 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11584, metadata !DIExpression()), !dbg !11585
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11586, !srcloc !11588
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.81(%struct.device* noundef %0) #26, !dbg !11589
  ret i1 %2, !dbg !11590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.80(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11591 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11593, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.value(metadata i8* %1, metadata !11594, metadata !DIExpression()), !dbg !11596
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11597
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11597
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11597
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11595, metadata !DIExpression()), !dbg !11596
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11598
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11598
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11599
  ret i32 %8, !dbg !11600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11601 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11605, metadata !DIExpression()), !dbg !11609
  call void @llvm.dbg.value(metadata i8 0, metadata !11606, metadata !DIExpression()), !dbg !11609
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11610
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11610
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11608, metadata !DIExpression(DW_OP_deref)), !dbg !11609
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11611
  call void @llvm.dbg.value(metadata i32 %4, metadata !11607, metadata !DIExpression()), !dbg !11609
  %5 = icmp slt i32 %4, 0, !dbg !11612
  br i1 %5, label %9, label %6, !dbg !11614

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11615
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11608, metadata !DIExpression()), !dbg !11609
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11616
  br label %9, !dbg !11617

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11609
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11618
  ret i32 %10, !dbg !11618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11619 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11621, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i32 12, metadata !11622, metadata !DIExpression()), !dbg !11625
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11626

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10928, metadata !DIExpression()) #24, !dbg !11627
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !11630, !srcloc !10938
  call void @llvm.dbg.value(metadata i32 %4, metadata !10933, metadata !DIExpression()) #24, !dbg !11627
  %5 = or i32 %4, 12, !dbg !11631
  call void @llvm.dbg.value(metadata i32 %5, metadata !11623, metadata !DIExpression()), !dbg !11632
  call void @llvm.dbg.value(metadata i32 %5, metadata !10941, metadata !DIExpression()) #24, !dbg !11633
  call void @llvm.dbg.value(metadata i32* %2, metadata !10946, metadata !DIExpression()) #24, !dbg !11633
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !11635, !srcloc !10951
  call void @llvm.dbg.value(metadata i32 %6, metadata !10947, metadata !DIExpression()) #24, !dbg !11633
  %7 = icmp eq i32 %6, 0, !dbg !11626
  br i1 %7, label %8, label %3, !dbg !11631, !llvm.loop !11636

8:                                                ; preds = %3
  ret void, !dbg !11637
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11638 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11640, metadata !DIExpression()), !dbg !11644
  call void @llvm.dbg.value(metadata i32 %1, metadata !11641, metadata !DIExpression()), !dbg !11644
  call void @llvm.dbg.value(metadata i32 %2, metadata !11642, metadata !DIExpression()), !dbg !11644
  call void @llvm.dbg.value(metadata i32 0, metadata !11643, metadata !DIExpression()), !dbg !11644
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11645
  %5 = load volatile i32, i32* %4, align 4, !dbg !11645
  %6 = and i32 %5, -5633, !dbg !11645
  %7 = or i32 %2, %1, !dbg !11645
  %8 = or i32 %7, %6, !dbg !11645
  store volatile i32 %8, i32* %4, align 4, !dbg !11645
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11646
  %10 = load volatile i32, i32* %9, align 4, !dbg !11646
  %11 = and i32 %10, -12289, !dbg !11646
  store volatile i32 %11, i32* %9, align 4, !dbg !11646
  ret void, !dbg !11647
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11648 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11650, metadata !DIExpression()), !dbg !11651
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11652
  %3 = load volatile i32, i32* %2, align 4, !dbg !11652
  %4 = or i32 %3, 8, !dbg !11652
  store volatile i32 %4, i32* %2, align 4, !dbg !11652
  ret void, !dbg !11653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11654 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11658, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11659, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.value(metadata i32 0, metadata !11660, metadata !DIExpression()), !dbg !11661
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11662
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11662
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11663
  %5 = load i8, i8* %4, align 4, !dbg !11663
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11664
  ret i32 %6, !dbg !11665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.81(%struct.device* noundef %0) unnamed_addr #1 !dbg !11666 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11668, metadata !DIExpression()), !dbg !11669
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11670
  ret i1 %2, !dbg !11671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11672 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11674, metadata !DIExpression()), !dbg !11675
  tail call fastcc void @__NVIC_SetPriority.83() #26, !dbg !11676
  store i32 8399, i32* @last_load, align 4, !dbg !11677
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11678
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11679
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11680
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11681
  %3 = or i32 %2, 7, !dbg !11681
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11681
  ret i32 0, !dbg !11682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.83() unnamed_addr #15 !dbg !11683 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11685, metadata !DIExpression()), !dbg !11687
  call void @llvm.dbg.value(metadata i32 1, metadata !11686, metadata !DIExpression()), !dbg !11687
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11688
  ret void, !dbg !11691
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11692 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11694, metadata !DIExpression()), !dbg !11696
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11697
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11698
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11699
  %5 = add i32 %4, %3, !dbg !11699
  store i32 %5, i32* @cycle_count, align 4, !dbg !11699
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11700
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11701
  %7 = sub i32 %5, %6, !dbg !11704
  %8 = udiv i32 %7, 8400, !dbg !11705
  call void @llvm.dbg.value(metadata i32 %8, metadata !11695, metadata !DIExpression()), !dbg !11696
  %9 = mul nuw i32 %8, 8400, !dbg !11706
  %10 = add i32 %9, %6, !dbg !11707
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11707
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11708
  tail call void @z_arm_int_exit() #25, !dbg !11709
  ret void, !dbg !11710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11711 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11716
  call void @llvm.dbg.value(metadata i32 %1, metadata !11713, metadata !DIExpression()), !dbg !11717
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11718
  call void @llvm.dbg.value(metadata i32 %2, metadata !11714, metadata !DIExpression()), !dbg !11717
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11719
  call void @llvm.dbg.value(metadata i32 %3, metadata !11715, metadata !DIExpression()), !dbg !11717
  %4 = and i32 %2, 65536, !dbg !11720
  %5 = icmp ne i32 %4, 0, !dbg !11720
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11722
  %8 = load i32, i32* @last_load, align 4, !dbg !11717
  br i1 %7, label %9, label %13, !dbg !11722

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11723
  %11 = add i32 %10, %8, !dbg !11723
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11723
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11725
  br label %13, !dbg !11726

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11727
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11728
  %16 = add i32 %14, %15, !dbg !11729
  ret i32 %16, !dbg !11730
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11735, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata i1 %1, metadata !11736, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11748
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11749
  br i1 %4, label %5, label %8, !dbg !11749

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11751
  %7 = and i32 %6, -2, !dbg !11751
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11751
  store i32 -16777216, i32* @last_load, align 4, !dbg !11753
  br label %54, !dbg !11754

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11755
  call void @llvm.dbg.value(metadata i32 %9, metadata !11740, metadata !DIExpression()), !dbg !11748
  br i1 %3, label %18, label %10, !dbg !11756

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11756
  call void @llvm.dbg.value(metadata i32 undef, metadata !11735, metadata !DIExpression()), !dbg !11748
  %12 = icmp slt i32 %11, 1, !dbg !11757
  br i1 %12, label %18, label %13, !dbg !11757

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11757
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11757
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11757
  %17 = add nuw nsw i32 %16, 8399, !dbg !11757
  br label %18, !dbg !11757

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11735, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11758, metadata !DIExpression()) #24, !dbg !11765
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11767, !srcloc !11773
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11767
  call void @llvm.dbg.value(metadata i32 %21, metadata !11770, metadata !DIExpression()) #24, !dbg !11774
  call void @llvm.dbg.value(metadata i32 undef, metadata !11771, metadata !DIExpression()) #24, !dbg !11774
  call void @llvm.dbg.value(metadata i32 %21, metadata !11764, metadata !DIExpression()) #24, !dbg !11765
  call void @llvm.dbg.value(metadata i32 %21, metadata !11741, metadata !DIExpression()), !dbg !11748
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11775
  call void @llvm.dbg.value(metadata i32 %22, metadata !11746, metadata !DIExpression()), !dbg !11748
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11776
  call void @llvm.dbg.value(metadata i32 %23, metadata !11738, metadata !DIExpression()), !dbg !11748
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11777
  %25 = add i32 %24, %22, !dbg !11777
  store i32 %25, i32* @cycle_count, align 4, !dbg !11777
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11778
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11779
  %27 = sub i32 %25, %26, !dbg !11780
  call void @llvm.dbg.value(metadata i32 %27, metadata !11747, metadata !DIExpression()), !dbg !11748
  %28 = icmp slt i32 %27, 0, !dbg !11781
  br i1 %28, label %38, label %29, !dbg !11783

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11737, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata i32 undef, metadata !11737, metadata !DIExpression()), !dbg !11748
  %30 = add nuw i32 %19, %27, !dbg !11784
  %31 = urem i32 %30, 8400, !dbg !11786
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11748
  %32 = sub nuw nsw i32 %19, %31, !dbg !11787
  call void @llvm.dbg.value(metadata i32 %32, metadata !11737, metadata !DIExpression()), !dbg !11748
  %33 = icmp ugt i32 %32, 1024, !dbg !11788
  br i1 %33, label %34, label %36, !dbg !11788

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11737, metadata !DIExpression()), !dbg !11748
  %35 = icmp ugt i32 %32, 16766400, !dbg !11789
  br i1 %35, label %38, label %36, !dbg !11791

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11792
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11793
  call void @llvm.dbg.value(metadata i32 %40, metadata !11739, metadata !DIExpression()), !dbg !11748
  %41 = add nsw i32 %39, -1, !dbg !11794
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11795
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11796
  %42 = icmp ult i32 %23, %40, !dbg !11797
  br i1 %42, label %43, label %48, !dbg !11799

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11800
  %45 = add i32 %23, %9, !dbg !11802
  %46 = sub i32 %45, %40, !dbg !11803
  %47 = add i32 %46, %44, !dbg !11800
  br label %52, !dbg !11804

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11805
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11807
  %51 = add i32 %49, %50, !dbg !11807
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11808
  store i32 %53, i32* @cycle_count, align 4, !dbg !11808
  call void @llvm.dbg.value(metadata i32 %21, metadata !11809, metadata !DIExpression()) #24, !dbg !11815
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11814, metadata !DIExpression()) #24, !dbg !11815
  call void @llvm.dbg.value(metadata i32 %21, metadata !11817, metadata !DIExpression()) #24, !dbg !11820
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !11822, !srcloc !11823
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11824
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11825 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11758, metadata !DIExpression()) #24, !dbg !11829
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11831, !srcloc !11773
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11831
  call void @llvm.dbg.value(metadata i32 %2, metadata !11770, metadata !DIExpression()) #24, !dbg !11833
  call void @llvm.dbg.value(metadata i32 undef, metadata !11771, metadata !DIExpression()) #24, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %2, metadata !11764, metadata !DIExpression()) #24, !dbg !11829
  call void @llvm.dbg.value(metadata i32 %2, metadata !11827, metadata !DIExpression()), !dbg !11834
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11835
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11836
  %5 = add i32 %4, %3, !dbg !11837
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11838
  %7 = sub i32 %5, %6, !dbg !11839
  call void @llvm.dbg.value(metadata i32 %7, metadata !11828, metadata !DIExpression()), !dbg !11834
  call void @llvm.dbg.value(metadata i32 %2, metadata !11809, metadata !DIExpression()) #24, !dbg !11840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11814, metadata !DIExpression()) #24, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %2, metadata !11817, metadata !DIExpression()) #24, !dbg !11842
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11844, !srcloc !11823
  %8 = udiv i32 %7, 8400, !dbg !11845
  ret i32 %8, !dbg !11846
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11847 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11758, metadata !DIExpression()) #24, !dbg !11851
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11853, !srcloc !11773
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11853
  call void @llvm.dbg.value(metadata i32 %2, metadata !11770, metadata !DIExpression()) #24, !dbg !11855
  call void @llvm.dbg.value(metadata i32 undef, metadata !11771, metadata !DIExpression()) #24, !dbg !11855
  call void @llvm.dbg.value(metadata i32 %2, metadata !11764, metadata !DIExpression()) #24, !dbg !11851
  call void @llvm.dbg.value(metadata i32 %2, metadata !11849, metadata !DIExpression()), !dbg !11856
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11857
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11858
  %5 = add i32 %4, %3, !dbg !11859
  call void @llvm.dbg.value(metadata i32 %5, metadata !11850, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.value(metadata i32 %2, metadata !11809, metadata !DIExpression()) #24, !dbg !11860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11814, metadata !DIExpression()) #24, !dbg !11860
  call void @llvm.dbg.value(metadata i32 %2, metadata !11817, metadata !DIExpression()) #24, !dbg !11862
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11864, !srcloc !11823
  ret i32 %5, !dbg !11865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11866 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11867
  %2 = icmp eq i32 %1, -16777216, !dbg !11869
  br i1 %2, label %3, label %6, !dbg !11870

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11871
  %5 = or i32 %4, 1, !dbg !11871
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11871
  br label %6, !dbg !11873

6:                                                ; preds = %3, %0
  ret void, !dbg !11874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11875 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11876
  %2 = and i32 %1, -2, !dbg !11876
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11876
  ret void, !dbg !11877
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11878 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11904, metadata !DIExpression()), !dbg !11907
  call void @llvm.dbg.value(metadata i8 %1, metadata !11905, metadata !DIExpression()), !dbg !11907
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11906, metadata !DIExpression()), !dbg !11907
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11908
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11908
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11907
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11909
  %8 = load i8, i8* %6, align 4, !dbg !11910
  %9 = zext i8 %8 to i32, !dbg !11911
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11911
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11912
  br i1 %11, label %18, label %24, !dbg !11913

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11907
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11909
  %14 = load i8, i8* %6, align 4, !dbg !11910
  %15 = zext i8 %14 to i32, !dbg !11911
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11911
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11912
  br i1 %17, label %18, label %24, !dbg !11913, !llvm.loop !11914

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11916
  %21 = load i8, i8* %20, align 1, !dbg !11916
  %22 = icmp eq i8 %21, %1, !dbg !11919
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11920
  br i1 %22, label %24, label %12, !dbg !11921

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11907
  ret i32 %25, !dbg !11922
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11923 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11934, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i8 %1, metadata !11935, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i32 %2, metadata !11936, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i32 0, metadata !11939, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i32 0, metadata !11940, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i8 0, metadata !11941, metadata !DIExpression()), !dbg !11951
  %4 = icmp eq i8 %1, 0, !dbg !11952
  br i1 %4, label %35, label %5, !dbg !11953

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11952
  br label %9, !dbg !11953

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11941, metadata !DIExpression()), !dbg !11951
  call void @llvm.dbg.value(metadata i32 %29, metadata !11939, metadata !DIExpression()), !dbg !11950
  %8 = icmp eq i32 %34, %6, !dbg !11952
  br i1 %8, label %35, label %9, !dbg !11953, !llvm.loop !11954

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11941, metadata !DIExpression()), !dbg !11951
  call void @llvm.dbg.value(metadata i32 %11, metadata !11939, metadata !DIExpression()), !dbg !11950
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11956
  %13 = load i32, i32* %12, align 4, !dbg !11956
  call void @llvm.dbg.value(metadata i32 %13, metadata !11938, metadata !DIExpression()), !dbg !11950
  %14 = and i32 %13, 31, !dbg !11957
  %15 = icmp ult i32 %14, 16, !dbg !11958
  br i1 %15, label %16, label %20, !dbg !11959

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11960
  %18 = load i32, i32* %17, align 4, !dbg !11960
  %19 = or i32 %18, 32, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %19, metadata !11939, metadata !DIExpression()), !dbg !11950
  br label %28, !dbg !11963

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11964

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11965
  %23 = load i32, i32* %22, align 4, !dbg !11965
  call void @llvm.dbg.value(metadata i32 %23, metadata !11943, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11966
  %24 = lshr i32 %23, 7, !dbg !11967
  %25 = and i32 %24, 16, !dbg !11967
  %26 = or i32 %25, %23, !dbg !11967
  call void @llvm.dbg.value(metadata i32 %26, metadata !11939, metadata !DIExpression()), !dbg !11950
  br label %28, !dbg !11968

27:                                               ; preds = %20
  br label %28, !dbg !11969

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11950
  call void @llvm.dbg.value(metadata i32 %29, metadata !11939, metadata !DIExpression()), !dbg !11950
  %30 = lshr i32 %13, 5, !dbg !11969
  %31 = and i32 %30, 255, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %31, metadata !11937, metadata !DIExpression()), !dbg !11950
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !11970
  call void @llvm.dbg.value(metadata i32 %32, metadata !11940, metadata !DIExpression()), !dbg !11950
  %33 = icmp slt i32 %32, 0, !dbg !11971
  %34 = add nuw nsw i32 %10, 1, !dbg !11973
  call void @llvm.dbg.value(metadata i32 %34, metadata !11941, metadata !DIExpression()), !dbg !11951
  br i1 %33, label %35, label %7, !dbg !11974

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11980, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata i32 %1, metadata !11981, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata i32 %2, metadata !11982, metadata !DIExpression()), !dbg !11984
  %4 = icmp ugt i32 %0, 175, !dbg !11985
  br i1 %4, label %16, label %5, !dbg !11987

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11988
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11989
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11989
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11983, metadata !DIExpression()), !dbg !11984
  %9 = add nsw i32 %6, -8, !dbg !11990
  %10 = icmp ult i32 %9, 3, !dbg !11990
  br i1 %10, label %16, label %11, !dbg !11992

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.88(%struct.device* noundef %8) #26, !dbg !11993
  br i1 %12, label %13, label %16, !dbg !11994

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11995
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11996
  br label %16, !dbg !11997

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11984
  ret i32 %17, !dbg !11998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.88(%struct.device* noundef %0) unnamed_addr #1 !dbg !11999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12003, metadata !DIExpression()), !dbg !12004
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12005, !srcloc !12007
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.89(%struct.device* noundef %0) #26, !dbg !12008
  ret i1 %2, !dbg !12009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.89(%struct.device* noundef %0) unnamed_addr #1 !dbg !12010 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12012, metadata !DIExpression()), !dbg !12013
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !12014
  ret i1 %2, !dbg !12015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !12016 {
  ret void, !dbg !12017
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !12018 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12020, metadata !DIExpression()), !dbg !12025
  call void @llvm.dbg.value(metadata i32 0, metadata !12021, metadata !DIExpression()), !dbg !12025
  call void @llvm.dbg.value(metadata i32 2, metadata !12022, metadata !DIExpression()), !dbg !12025
  call void @llvm.dbg.value(metadata i32 0, metadata !12023, metadata !DIExpression()), !dbg !12025
  call void @llvm.dbg.value(metadata i32 2, metadata !12024, metadata !DIExpression()), !dbg !12025
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12026
  %2 = and i32 %1, 12, !dbg !12027
  call void @llvm.dbg.value(metadata i32 %2, metadata !12020, metadata !DIExpression()), !dbg !12025
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12028

3:                                                ; preds = %0
  br label %21, !dbg !12029

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12031
  call void @llvm.dbg.value(metadata i32 %5, metadata !12023, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12025
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12032
  %7 = and i32 %6, 63, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %7, metadata !12024, metadata !DIExpression()), !dbg !12025
  %8 = and i32 %5, 4194304, !dbg !12034
  %9 = icmp eq i32 %8, 0, !dbg !12034
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !12036
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12036
  %13 = lshr i32 %12, 6, !dbg !12036
  %14 = and i32 %13, 511, !dbg !12036
  %15 = mul i32 %14, %11, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %15, metadata !12021, metadata !DIExpression()), !dbg !12025
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12037
  %17 = lshr i32 %16, 15, !dbg !12038
  %18 = and i32 %17, 6, !dbg !12038
  %19 = add nuw nsw i32 %18, 2, !dbg !12038
  call void @llvm.dbg.value(metadata i32 %19, metadata !12022, metadata !DIExpression()), !dbg !12025
  %20 = udiv i32 %15, %19, !dbg !12039
  br label %21, !dbg !12040

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12041
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12042
  %24 = lshr i32 %23, 4, !dbg !12043
  %25 = and i32 %24, 15, !dbg !12043
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12044
  %27 = load i8, i8* %26, align 1, !dbg !12044
  %28 = zext i8 %27 to i32, !dbg !12044
  call void @llvm.dbg.value(metadata i32 %28, metadata !12020, metadata !DIExpression()), !dbg !12025
  %29 = lshr i32 %22, %28, !dbg !12045
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12045
  ret void, !dbg !12046
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12047 {
  ret i32 0, !dbg !12052
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12053 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12079, metadata !DIExpression()), !dbg !12090
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12091
  br i1 %3, label %311, label %4, !dbg !12093

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12094
  %6 = load i32, i32* %5, align 4, !dbg !12094
  %7 = and i32 %6, 1, !dbg !12096
  %8 = icmp eq i32 %7, 0, !dbg !12097
  br i1 %8, label %66, label %9, !dbg !12098

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12099
  %11 = and i32 %10, 12, !dbg !12099
  %12 = icmp eq i32 %11, 4, !dbg !12102
  br i1 %12, label %21, label %13, !dbg !12103

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12104
  %15 = and i32 %14, 12, !dbg !12104
  %16 = icmp eq i32 %15, 8, !dbg !12105
  br i1 %16, label %17, label %29, !dbg !12106

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12107
  %19 = and i32 %18, 4194304, !dbg !12108
  %20 = icmp eq i32 %19, 0, !dbg !12109
  br i1 %20, label %29, label %21, !dbg !12110

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12111
  %23 = and i32 %22, 131072, !dbg !12111
  %24 = icmp eq i32 %23, 0, !dbg !12111
  br i1 %24, label %66, label %25, !dbg !12114

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12115
  %27 = load i32, i32* %26, align 4, !dbg !12115
  %28 = icmp eq i32 %27, 0, !dbg !12116
  br i1 %28, label %311, label %66, !dbg !12117

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12118
  %31 = load i32, i32* %30, align 4, !dbg !12118
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12122

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12123
  %34 = or i32 %33, 65536, !dbg !12123
  br label %45, !dbg !12123

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12125
  %37 = or i32 %36, 262144, !dbg !12125
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12125
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12125
  %39 = or i32 %38, 65536, !dbg !12125
  br label %45, !dbg !12125

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12128
  %42 = and i32 %41, -65537, !dbg !12128
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12128
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12128
  %44 = and i32 %43, -262145, !dbg !12128
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12130
  %47 = load i32, i32* %30, align 4, !dbg !12131
  %48 = icmp eq i32 %47, 0, !dbg !12133
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12134
  call void @llvm.dbg.value(metadata i32 %49, metadata !12080, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.value(metadata i32 %49, metadata !12080, metadata !DIExpression()), !dbg !12090
  br i1 %48, label %58, label %50, !dbg !12135

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12136
  %52 = and i32 %51, 131072, !dbg !12138
  %53 = icmp eq i32 %52, 0, !dbg !12138
  br i1 %53, label %54, label %66, !dbg !12139

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12140
  %56 = sub i32 %55, %49, !dbg !12143
  %57 = icmp ugt i32 %56, 100, !dbg !12144
  br i1 %57, label %311, label %50, !dbg !12145, !llvm.loop !12146

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12148
  %60 = and i32 %59, 131072, !dbg !12148
  %61 = icmp eq i32 %60, 0, !dbg !12148
  br i1 %61, label %66, label %62, !dbg !12150

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12151
  %64 = sub i32 %63, %49, !dbg !12154
  %65 = icmp ugt i32 %64, 100, !dbg !12155
  br i1 %65, label %311, label %58, !dbg !12156, !llvm.loop !12157

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12159
  %68 = and i32 %67, 2, !dbg !12161
  %69 = icmp eq i32 %68, 0, !dbg !12162
  br i1 %69, label %121, label %70, !dbg !12163

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12164
  %72 = and i32 %71, 12, !dbg !12164
  %73 = icmp eq i32 %72, 0, !dbg !12167
  br i1 %73, label %82, label %74, !dbg !12168

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12169
  %76 = and i32 %75, 12, !dbg !12169
  %77 = icmp eq i32 %76, 8, !dbg !12170
  br i1 %77, label %78, label %90, !dbg !12171

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12172
  %80 = and i32 %79, 4194304, !dbg !12173
  %81 = icmp eq i32 %80, 0, !dbg !12174
  br i1 %81, label %82, label %90, !dbg !12175

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  %84 = and i32 %83, 2, !dbg !12176
  %85 = icmp eq i32 %84, 0, !dbg !12176
  br i1 %85, label %114, label %86, !dbg !12179

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12180
  %88 = load i32, i32* %87, align 4, !dbg !12180
  %89 = icmp eq i32 %88, 1, !dbg !12181
  br i1 %89, label %114, label %311, !dbg !12182

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12183
  %92 = load i32, i32* %91, align 4, !dbg !12183
  %93 = icmp eq i32 %92, 0, !dbg !12186
  br i1 %93, label %104, label %94, !dbg !12187

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12188
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12190
  call void @llvm.dbg.value(metadata i32 %95, metadata !12080, metadata !DIExpression()), !dbg !12090
  br label %96, !dbg !12191

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12192
  %98 = and i32 %97, 2, !dbg !12193
  %99 = icmp eq i32 %98, 0, !dbg !12193
  br i1 %99, label %100, label %114, !dbg !12191

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12194
  %102 = sub i32 %101, %95, !dbg !12197
  %103 = icmp ugt i32 %102, 2, !dbg !12198
  br i1 %103, label %311, label %96, !dbg !12199, !llvm.loop !12200

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12202
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12204
  call void @llvm.dbg.value(metadata i32 %105, metadata !12080, metadata !DIExpression()), !dbg !12090
  br label %106, !dbg !12205

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12206
  %108 = and i32 %107, 2, !dbg !12206
  %109 = icmp eq i32 %108, 0, !dbg !12206
  br i1 %109, label %121, label %110, !dbg !12205

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12207
  %112 = sub i32 %111, %105, !dbg !12210
  %113 = icmp ugt i32 %112, 2, !dbg !12211
  br i1 %113, label %311, label %106, !dbg !12212, !llvm.loop !12213

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12215
  %116 = and i32 %115, -249, !dbg !12215
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12215
  %118 = load i32, i32* %117, align 4, !dbg !12215
  %119 = shl i32 %118, 3, !dbg !12215
  %120 = or i32 %119, %116, !dbg !12215
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12215
  br label %121, !dbg !12216

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12216
  %123 = and i32 %122, 8, !dbg !12218
  %124 = icmp eq i32 %123, 0, !dbg !12219
  br i1 %124, label %149, label %125, !dbg !12220

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12221
  %127 = load i32, i32* %126, align 4, !dbg !12221
  %128 = icmp eq i32 %127, 0, !dbg !12224
  br i1 %128, label %139, label %129, !dbg !12225

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12226
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12228
  call void @llvm.dbg.value(metadata i32 %130, metadata !12080, metadata !DIExpression()), !dbg !12090
  br label %131, !dbg !12229

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12230
  %133 = and i32 %132, 2, !dbg !12231
  %134 = icmp eq i32 %133, 0, !dbg !12231
  br i1 %134, label %135, label %149, !dbg !12229

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12232
  %137 = sub i32 %136, %130, !dbg !12235
  %138 = icmp ugt i32 %137, 2, !dbg !12236
  br i1 %138, label %311, label %131, !dbg !12237, !llvm.loop !12238

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12240
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12242
  call void @llvm.dbg.value(metadata i32 %140, metadata !12080, metadata !DIExpression()), !dbg !12090
  br label %141, !dbg !12243

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12244
  %143 = and i32 %142, 2, !dbg !12244
  %144 = icmp eq i32 %143, 0, !dbg !12244
  br i1 %144, label %149, label %145, !dbg !12243

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12245
  %147 = sub i32 %146, %140, !dbg !12248
  %148 = icmp ugt i32 %147, 2, !dbg !12249
  br i1 %148, label %311, label %141, !dbg !12250, !llvm.loop !12251

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12253
  %151 = and i32 %150, 4, !dbg !12254
  %152 = icmp eq i32 %151, 0, !dbg !12255
  br i1 %152, label %221, label %153, !dbg !12256

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12082, metadata !DIExpression()), !dbg !12257
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12258
  %155 = and i32 %154, 268435456, !dbg !12258
  %156 = icmp eq i32 %155, 0, !dbg !12258
  br i1 %156, label %157, label %164, !dbg !12259

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12260
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12260
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12086, metadata !DIExpression()), !dbg !12260
  store volatile i32 0, i32* %2, align 4, !dbg !12260
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12260
  %160 = or i32 %159, 268435456, !dbg !12260
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12260
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12260
  %162 = and i32 %161, 268435456, !dbg !12260
  store volatile i32 %162, i32* %2, align 4, !dbg !12260
  %163 = load volatile i32, i32* %2, align 4, !dbg !12260
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12261
  call void @llvm.dbg.value(metadata i32 1, metadata !12082, metadata !DIExpression()), !dbg !12257
  br label %164, !dbg !12262

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12082, metadata !DIExpression()), !dbg !12257
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12263
  %166 = and i32 %165, 256, !dbg !12263
  %167 = icmp eq i32 %166, 0, !dbg !12263
  br i1 %167, label %168, label %180, !dbg !12265

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12266
  %170 = or i32 %169, 256, !dbg !12266
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12266
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12268
  call void @llvm.dbg.value(metadata i32 %171, metadata !12080, metadata !DIExpression()), !dbg !12090
  br label %172, !dbg !12269

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12270
  %174 = and i32 %173, 256, !dbg !12270
  %175 = icmp eq i32 %174, 0, !dbg !12270
  br i1 %175, label %176, label %180, !dbg !12269

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12271
  %178 = sub i32 %177, %171, !dbg !12274
  %179 = icmp ugt i32 %178, 2, !dbg !12275
  br i1 %179, label %311, label %172, !dbg !12276, !llvm.loop !12277

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12279
  %182 = load i32, i32* %181, align 4, !dbg !12279
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12282

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12283
  %185 = or i32 %184, 1, !dbg !12283
  br label %196, !dbg !12283

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12285
  %188 = or i32 %187, 4, !dbg !12285
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12285
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12285
  %190 = or i32 %189, 1, !dbg !12285
  br label %196, !dbg !12285

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12288
  %193 = and i32 %192, -2, !dbg !12288
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12288
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12288
  %195 = and i32 %194, -5, !dbg !12288
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12290
  %198 = load i32, i32* %181, align 4, !dbg !12291
  %199 = icmp eq i32 %198, 0, !dbg !12293
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12294
  call void @llvm.dbg.value(metadata i32 %200, metadata !12080, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.value(metadata i32 %200, metadata !12080, metadata !DIExpression()), !dbg !12090
  br i1 %199, label %209, label %201, !dbg !12295

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12296
  %203 = and i32 %202, 2, !dbg !12298
  %204 = icmp eq i32 %203, 0, !dbg !12298
  br i1 %204, label %205, label %217, !dbg !12299

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12300
  %207 = sub i32 %206, %200, !dbg !12303
  %208 = icmp ugt i32 %207, 5000, !dbg !12304
  br i1 %208, label %311, label %201, !dbg !12305, !llvm.loop !12306

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12308
  %211 = and i32 %210, 2, !dbg !12308
  %212 = icmp eq i32 %211, 0, !dbg !12308
  br i1 %212, label %217, label %213, !dbg !12310

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12311
  %215 = sub i32 %214, %200, !dbg !12314
  %216 = icmp ugt i32 %215, 5000, !dbg !12315
  br i1 %216, label %311, label %209, !dbg !12316, !llvm.loop !12317

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12319

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12320
  %220 = and i32 %219, -268435457, !dbg !12320
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12320
  br label %221, !dbg !12323

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12324
  %223 = load i32, i32* %222, align 4, !dbg !12324
  %224 = icmp eq i32 %223, 0, !dbg !12326
  br i1 %224, label %310, label %225, !dbg !12327

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12328
  %227 = and i32 %226, 12, !dbg !12328
  %228 = icmp eq i32 %227, 8, !dbg !12331
  br i1 %228, label %277, label %229, !dbg !12332

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12333
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12336
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12336
  call void @llvm.dbg.value(metadata i32 %231, metadata !12080, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.value(metadata i32 %231, metadata !12080, metadata !DIExpression()), !dbg !12090
  br i1 %230, label %232, label %269, !dbg !12337

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12338
  %234 = and i32 %233, 33554432, !dbg !12338
  %235 = icmp eq i32 %234, 0, !dbg !12338
  br i1 %235, label %240, label %236, !dbg !12340

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12341
  %238 = sub i32 %237, %231, !dbg !12344
  %239 = icmp ugt i32 %238, 2, !dbg !12345
  br i1 %239, label %311, label %232, !dbg !12346, !llvm.loop !12347

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12349
  %242 = load i32, i32* %241, align 4, !dbg !12349
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12349
  %244 = load i32, i32* %243, align 4, !dbg !12349
  %245 = or i32 %244, %242, !dbg !12349
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12349
  %247 = load i32, i32* %246, align 4, !dbg !12349
  %248 = shl i32 %247, 6, !dbg !12349
  %249 = or i32 %245, %248, !dbg !12349
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12349
  %251 = load i32, i32* %250, align 4, !dbg !12349
  %252 = shl i32 %251, 15, !dbg !12349
  %253 = add i32 %252, -65536, !dbg !12349
  %254 = and i32 %253, -65536, !dbg !12349
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12349
  %256 = load i32, i32* %255, align 4, !dbg !12349
  %257 = shl i32 %256, 24, !dbg !12349
  %258 = or i32 %249, %257, !dbg !12349
  %259 = or i32 %258, %254, !dbg !12349
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12349
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12350
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12351
  call void @llvm.dbg.value(metadata i32 %260, metadata !12080, metadata !DIExpression()), !dbg !12090
  br label %261, !dbg !12352

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12353
  %263 = and i32 %262, 33554432, !dbg !12354
  %264 = icmp eq i32 %263, 0, !dbg !12354
  br i1 %264, label %265, label %310, !dbg !12352

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12355
  %267 = sub i32 %266, %260, !dbg !12358
  %268 = icmp ugt i32 %267, 2, !dbg !12359
  br i1 %268, label %311, label %261, !dbg !12360, !llvm.loop !12361

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12363
  %271 = and i32 %270, 33554432, !dbg !12363
  %272 = icmp eq i32 %271, 0, !dbg !12363
  br i1 %272, label %310, label %273, !dbg !12365

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12366
  %275 = sub i32 %274, %231, !dbg !12369
  %276 = icmp ugt i32 %275, 2, !dbg !12370
  br i1 %276, label %311, label %269, !dbg !12371, !llvm.loop !12372

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12374
  br i1 %278, label %311, label %279, !dbg !12377

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12378
  call void @llvm.dbg.value(metadata i32 %280, metadata !12081, metadata !DIExpression()), !dbg !12090
  %281 = and i32 %280, 4194304, !dbg !12380
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12382
  %283 = load i32, i32* %282, align 4, !dbg !12382
  %284 = icmp eq i32 %281, %283, !dbg !12383
  br i1 %284, label %285, label %311, !dbg !12384

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12385
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12386
  %288 = load i32, i32* %287, align 4, !dbg !12386
  %289 = icmp eq i32 %286, %288, !dbg !12387
  br i1 %289, label %290, label %311, !dbg !12388

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12389
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12390
  %293 = load i32, i32* %292, align 4, !dbg !12390
  %294 = shl i32 %293, 6, !dbg !12391
  %295 = icmp eq i32 %291, %294, !dbg !12392
  br i1 %295, label %296, label %311, !dbg !12393

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12394
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12395
  %299 = load i32, i32* %298, align 4, !dbg !12395
  %300 = shl i32 %299, 15, !dbg !12396
  %301 = add i32 %300, -65536, !dbg !12396
  %302 = and i32 %301, -65536, !dbg !12396
  %303 = icmp eq i32 %297, %302, !dbg !12397
  br i1 %303, label %304, label %311, !dbg !12398

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12399
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12400
  %307 = load i32, i32* %306, align 4, !dbg !12400
  %308 = shl i32 %307, 24, !dbg !12401
  %309 = icmp eq i32 %305, %308, !dbg !12402
  br i1 %309, label %310, label %311, !dbg !12403

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12404

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12090
  ret i32 %312, !dbg !12405
}

; Function Attrs: optsize
declare !dbg !12406 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12408 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12421, metadata !DIExpression()), !dbg !12424
  call void @llvm.dbg.value(metadata i32 %1, metadata !12422, metadata !DIExpression()), !dbg !12424
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12425
  br i1 %3, label %115, label %4, !dbg !12427

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12428
  %6 = and i32 %5, 7, !dbg !12428
  %7 = icmp ult i32 %6, %1, !dbg !12430
  br i1 %7, label %8, label %13, !dbg !12431

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12432
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12432
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12434
  %11 = and i32 %10, 7, !dbg !12434
  %12 = icmp eq i32 %11, %1, !dbg !12436
  br i1 %12, label %13, label %115, !dbg !12437

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12438
  %15 = load i32, i32* %14, align 4, !dbg !12438
  %16 = and i32 %15, 2, !dbg !12440
  %17 = icmp eq i32 %16, 0, !dbg !12441
  br i1 %17, label %39, label %18, !dbg !12442

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12443
  %20 = icmp eq i32 %19, 0, !dbg !12446
  br i1 %20, label %25, label %21, !dbg !12447

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12448
  %23 = or i32 %22, 7168, !dbg !12448
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12448
  %24 = load i32, i32* %14, align 4, !dbg !12450
  br label %25, !dbg !12452

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12450
  %27 = and i32 %26, 8, !dbg !12453
  %28 = icmp eq i32 %27, 0, !dbg !12454
  br i1 %28, label %32, label %29, !dbg !12455

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12456
  %31 = or i32 %30, 57344, !dbg !12456
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12456
  br label %32, !dbg !12458

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12459
  %34 = and i32 %33, -241, !dbg !12459
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12459
  %36 = load i32, i32* %35, align 4, !dbg !12459
  %37 = or i32 %34, %36, !dbg !12459
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12459
  %38 = load i32, i32* %14, align 4, !dbg !12460
  br label %39, !dbg !12462

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12460
  %41 = and i32 %40, 1, !dbg !12463
  %42 = icmp eq i32 %41, 0, !dbg !12464
  br i1 %42, label %73, label %43, !dbg !12465

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12466
  %45 = load i32, i32* %44, align 4, !dbg !12466
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12469

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12470
  %48 = and i32 %47, 131072, !dbg !12473
  %49 = icmp eq i32 %48, 0, !dbg !12473
  br i1 %49, label %115, label %58, !dbg !12474

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12475
  %52 = and i32 %51, 33554432, !dbg !12479
  %53 = icmp eq i32 %52, 0, !dbg !12479
  br i1 %53, label %115, label %58, !dbg !12480

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12481
  %56 = and i32 %55, 2, !dbg !12484
  %57 = icmp eq i32 %56, 0, !dbg !12484
  br i1 %57, label %115, label %58, !dbg !12485

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12486
  %60 = and i32 %59, -4, !dbg !12486
  %61 = or i32 %60, %45, !dbg !12486
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12486
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12487
  call void @llvm.dbg.value(metadata i32 %62, metadata !12423, metadata !DIExpression()), !dbg !12424
  br label %63, !dbg !12488

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12489
  %65 = and i32 %64, 12, !dbg !12489
  %66 = load i32, i32* %44, align 4, !dbg !12490
  %67 = shl i32 %66, 2, !dbg !12491
  %68 = icmp eq i32 %65, %67, !dbg !12492
  br i1 %68, label %73, label %69, !dbg !12488

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12493
  %71 = sub i32 %70, %62, !dbg !12496
  %72 = icmp ugt i32 %71, 5000, !dbg !12497
  br i1 %72, label %115, label %63, !dbg !12498, !llvm.loop !12499

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12501
  %75 = and i32 %74, 7, !dbg !12501
  %76 = icmp ugt i32 %75, %1, !dbg !12503
  br i1 %76, label %77, label %82, !dbg !12504

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12505
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12505
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12507
  %80 = and i32 %79, 7, !dbg !12507
  %81 = icmp eq i32 %80, %1, !dbg !12509
  br i1 %81, label %82, label %115, !dbg !12510

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12511
  %84 = and i32 %83, 4, !dbg !12513
  %85 = icmp eq i32 %84, 0, !dbg !12514
  br i1 %85, label %93, label %86, !dbg !12515

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12516
  %88 = and i32 %87, -7169, !dbg !12516
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12516
  %90 = load i32, i32* %89, align 4, !dbg !12516
  %91 = or i32 %88, %90, !dbg !12516
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12516
  %92 = load i32, i32* %14, align 4, !dbg !12518
  br label %93, !dbg !12520

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12518
  %95 = and i32 %94, 8, !dbg !12521
  %96 = icmp eq i32 %95, 0, !dbg !12522
  br i1 %96, label %104, label %97, !dbg !12523

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12524
  %99 = and i32 %98, -57345, !dbg !12524
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12524
  %101 = load i32, i32* %100, align 4, !dbg !12524
  %102 = shl i32 %101, 3, !dbg !12524
  %103 = or i32 %102, %99, !dbg !12524
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12524
  br label %104, !dbg !12526

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12527
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12528
  %107 = lshr i32 %106, 4, !dbg !12529
  %108 = and i32 %107, 15, !dbg !12529
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12530
  %110 = load i8, i8* %109, align 1, !dbg !12530
  %111 = zext i8 %110 to i32, !dbg !12530
  %112 = lshr i32 %105, %111, !dbg !12531
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12532
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12533
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12534
  br label %115, !dbg !12535

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12424
  ret i32 %116, !dbg !12536
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12537 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12539, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata i32 0, metadata !12540, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata i32 0, metadata !12541, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata i32 0, metadata !12542, metadata !DIExpression()), !dbg !12543
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12544
  %2 = and i32 %1, 12, !dbg !12545
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12546

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12542, metadata !DIExpression()), !dbg !12543
  br label %29, !dbg !12547

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12550
  %6 = and i32 %5, 63, !dbg !12552
  call void @llvm.dbg.value(metadata i32 %6, metadata !12539, metadata !DIExpression()), !dbg !12543
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12553
  %8 = and i32 %7, 4194304, !dbg !12553
  %9 = icmp eq i32 %8, 0, !dbg !12555
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12556
  %11 = lshr i32 %10, 6, !dbg !12556
  %12 = and i32 %11, 511, !dbg !12556
  br i1 %9, label %16, label %13, !dbg !12557

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !12558
  %15 = udiv i32 %14, %6, !dbg !12560
  call void @llvm.dbg.value(metadata i32 %15, metadata !12540, metadata !DIExpression()), !dbg !12543
  br label %22, !dbg !12561

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !12562
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !12564
  %19 = zext i32 %6 to i64, !dbg !12565
  %20 = udiv i64 %18, %19, !dbg !12566
  %21 = trunc i64 %20 to i32, !dbg !12567
  call void @llvm.dbg.value(metadata i32 %21, metadata !12540, metadata !DIExpression()), !dbg !12543
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !12556
  call void @llvm.dbg.value(metadata i32 %23, metadata !12540, metadata !DIExpression()), !dbg !12543
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12568
  %25 = lshr i32 %24, 15, !dbg !12569
  %26 = and i32 %25, 6, !dbg !12569
  %27 = add nuw nsw i32 %26, 2, !dbg !12569
  call void @llvm.dbg.value(metadata i32 %27, metadata !12541, metadata !DIExpression()), !dbg !12543
  %28 = udiv i32 %23, %27, !dbg !12570
  call void @llvm.dbg.value(metadata i32 %28, metadata !12542, metadata !DIExpression()), !dbg !12543
  br label %29, !dbg !12571

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !12572
  call void @llvm.dbg.value(metadata i32 %30, metadata !12542, metadata !DIExpression()), !dbg !12543
  ret i32 %30, !dbg !12573
}

; Function Attrs: optsize
declare !dbg !12574 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12577 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12581, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.value(metadata i32 %1, metadata !12582, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.value(metadata i32 %2, metadata !12583, metadata !DIExpression()), !dbg !12601
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12602
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !12602
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12584, metadata !DIExpression()), !dbg !12603
  %8 = icmp eq i32 %0, 0, !dbg !12604
  br i1 %8, label %9, label %23, !dbg !12605

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12606
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12606
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12594, metadata !DIExpression()), !dbg !12606
  store volatile i32 0, i32* %5, align 4, !dbg !12606
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12606
  %12 = or i32 %11, 1, !dbg !12606
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12606
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12606
  %14 = and i32 %13, 1, !dbg !12606
  store volatile i32 %14, i32* %5, align 4, !dbg !12606
  %15 = load volatile i32, i32* %5, align 4, !dbg !12606
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12607
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12608
  store i32 256, i32* %16, align 4, !dbg !12609
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12610
  store i32 2, i32* %17, align 4, !dbg !12611
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12612
  store i32 3, i32* %18, align 4, !dbg !12613
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12614
  store i32 0, i32* %19, align 4, !dbg !12615
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12616
  store i32 0, i32* %20, align 4, !dbg !12617
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12618
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12619
  %22 = and i32 %21, -123731969, !dbg !12619
  br label %38, !dbg !12620

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12621
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12621
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12598, metadata !DIExpression()), !dbg !12621
  store volatile i32 0, i32* %6, align 4, !dbg !12621
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12621
  %26 = or i32 %25, 4, !dbg !12621
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12621
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12621
  %28 = and i32 %27, 4, !dbg !12621
  store volatile i32 %28, i32* %6, align 4, !dbg !12621
  %29 = load volatile i32, i32* %6, align 4, !dbg !12621
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12622
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12623
  store i32 512, i32* %30, align 4, !dbg !12624
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12625
  store i32 2, i32* %31, align 4, !dbg !12626
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12627
  store i32 3, i32* %32, align 4, !dbg !12628
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12629
  store i32 0, i32* %33, align 4, !dbg !12630
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12631
  store i32 0, i32* %34, align 4, !dbg !12632
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12633
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12634
  %36 = and i32 %35, 134217727, !dbg !12634
  %37 = shl i32 %2, 3, !dbg !12634
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12635
  %42 = or i32 %41, %40, !dbg !12635
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12635
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #24, !dbg !12636
  ret void, !dbg !12636
}

; Function Attrs: optsize
declare !dbg !12637 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12641 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12642
  ret void, !dbg !12643
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12644 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12645
  ret void, !dbg !12646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !12647 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12648
  ret i32 %1, !dbg !12649
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !12650 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12651
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12652
  %3 = lshr i32 %2, 10, !dbg !12653
  %4 = and i32 %3, 7, !dbg !12653
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12654
  %6 = load i8, i8* %5, align 1, !dbg !12654
  %7 = zext i8 %6 to i32, !dbg !12654
  %8 = lshr i32 %1, %7, !dbg !12655
  ret i32 %8, !dbg !12656
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !12657 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12658
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12659
  %3 = lshr i32 %2, 13, !dbg !12660
  %4 = and i32 %3, 7, !dbg !12660
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12661
  %6 = load i8, i8* %5, align 1, !dbg !12661
  %7 = zext i8 %6 to i32, !dbg !12661
  %8 = lshr i32 %1, %7, !dbg !12662
  ret i32 %8, !dbg !12663
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12664 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12668, metadata !DIExpression()), !dbg !12669
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12670
  store i32 15, i32* %2, align 4, !dbg !12671
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12672
  %4 = and i32 %3, 262144, !dbg !12674
  %5 = icmp eq i32 %4, 0, !dbg !12675
  br i1 %5, label %8, label %6, !dbg !12676

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12677
  store i32 327680, i32* %7, align 4, !dbg !12679
  br label %15, !dbg !12680

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12681
  %10 = and i32 %9, 65536, !dbg !12683
  %11 = icmp eq i32 %10, 0, !dbg !12684
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12685
  br i1 %11, label %14, label %13, !dbg !12686

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12687
  br label %15, !dbg !12689

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12690
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12692
  %17 = and i32 %16, 1, !dbg !12694
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12695
  store i32 %17, i32* %18, align 4, !dbg !12697
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12698
  %20 = lshr i32 %19, 3, !dbg !12699
  %21 = and i32 %20, 31, !dbg !12699
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12700
  store i32 %21, i32* %22, align 4, !dbg !12701
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12702
  %24 = and i32 %23, 4, !dbg !12704
  %25 = icmp eq i32 %24, 0, !dbg !12705
  br i1 %25, label %28, label %26, !dbg !12706

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12707
  store i32 5, i32* %27, align 4, !dbg !12709
  br label %35, !dbg !12710

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12711
  %30 = and i32 %29, 1, !dbg !12713
  %31 = icmp eq i32 %30, 0, !dbg !12714
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12715
  br i1 %31, label %34, label %33, !dbg !12716

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12717
  br label %35, !dbg !12719

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12720
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12722
  %37 = and i32 %36, 1, !dbg !12724
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12725
  store i32 %37, i32* %38, align 4, !dbg !12727
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12728
  %40 = and i32 %39, 16777216, !dbg !12730
  %41 = icmp eq i32 %40, 0, !dbg !12731
  %42 = select i1 %41, i32 1, i32 2, !dbg !12732
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12733
  store i32 %42, i32* %43, align 4, !dbg !12735
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12736
  %45 = and i32 %44, 4194304, !dbg !12737
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12738
  store i32 %45, i32* %46, align 4, !dbg !12739
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12740
  %48 = and i32 %47, 63, !dbg !12741
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12742
  store i32 %48, i32* %49, align 4, !dbg !12743
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12744
  %51 = lshr i32 %50, 6, !dbg !12745
  %52 = and i32 %51, 511, !dbg !12745
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12746
  store i32 %52, i32* %53, align 4, !dbg !12747
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12748
  %55 = shl i32 %54, 1, !dbg !12749
  %56 = and i32 %55, 393216, !dbg !12749
  %57 = add nuw nsw i32 %56, 131072, !dbg !12749
  %58 = lshr exact i32 %57, 16, !dbg !12750
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12751
  store i32 %58, i32* %59, align 4, !dbg !12752
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12753
  %61 = lshr i32 %60, 24, !dbg !12754
  %62 = and i32 %61, 15, !dbg !12754
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12755
  store i32 %62, i32* %63, align 4, !dbg !12756
  ret void, !dbg !12757
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !12758 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12762, metadata !DIExpression()), !dbg !12764
  call void @llvm.dbg.value(metadata i32* %1, metadata !12763, metadata !DIExpression()), !dbg !12764
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12765
  store i32 15, i32* %3, align 4, !dbg !12766
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12767
  %5 = and i32 %4, 3, !dbg !12768
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12769
  store i32 %5, i32* %6, align 4, !dbg !12770
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12771
  %8 = and i32 %7, 240, !dbg !12772
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12773
  store i32 %8, i32* %9, align 4, !dbg !12774
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12775
  %11 = and i32 %10, 7168, !dbg !12776
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12777
  store i32 %11, i32* %12, align 4, !dbg !12778
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12779
  %14 = lshr i32 %13, 3, !dbg !12780
  %15 = and i32 %14, 7168, !dbg !12780
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12781
  store i32 %15, i32* %16, align 4, !dbg !12782
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12783
  %18 = and i32 %17, 7, !dbg !12784
  store i32 %18, i32* %1, align 4, !dbg !12785
  ret void, !dbg !12786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12787 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12788
  %2 = and i32 %1, 128, !dbg !12788
  %3 = icmp eq i32 %2, 0, !dbg !12788
  br i1 %3, label %5, label %4, !dbg !12790

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12791
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12793
  br label %5, !dbg !12794

5:                                                ; preds = %4, %0
  ret void, !dbg !12795
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12796 {
  ret void, !dbg !12797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12801, metadata !DIExpression()), !dbg !12802
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12803
  ret void, !dbg !12804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12808, metadata !DIExpression()), !dbg !12810
  call void @llvm.dbg.value(metadata i32 1000, metadata !12809, metadata !DIExpression()), !dbg !12810
  %2 = udiv i32 %0, 1000, !dbg !12811
  %3 = add nsw i32 %2, -1, !dbg !12812
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12813
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12814
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12815
  ret void, !dbg !12816
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !12817 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12819, metadata !DIExpression()), !dbg !12821
  %3 = bitcast i32* %2 to i8*, !dbg !12822
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12822
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12820, metadata !DIExpression()), !dbg !12823
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12824
  store volatile i32 %4, i32* %2, align 4, !dbg !12823
  %5 = load volatile i32, i32* %2, align 4, !dbg !12825
  %6 = icmp eq i32 %0, -1, !dbg !12826
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12819, metadata !DIExpression()), !dbg !12821
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12821
  call void @llvm.dbg.value(metadata i32 %8, metadata !12819, metadata !DIExpression()), !dbg !12821
  br label %9, !dbg !12828

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12819, metadata !DIExpression()), !dbg !12821
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12829
  call void @llvm.dbg.value(metadata i32 undef, metadata !12819, metadata !DIExpression()), !dbg !12821
  %12 = shl i32 %11, 15, !dbg !12821
  %13 = ashr i32 %12, 31, !dbg !12821
  %14 = add i32 %13, %10, !dbg !12821
  call void @llvm.dbg.value(metadata i32 %14, metadata !12819, metadata !DIExpression()), !dbg !12821
  %15 = icmp eq i32 %14, 0, !dbg !12828
  br i1 %15, label %16, label %9, !dbg !12828

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12832
  ret void, !dbg !12832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12835, metadata !DIExpression()), !dbg !12836
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12837
  ret void, !dbg !12838
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12844, metadata !DIExpression()), !dbg !12849
  call void @llvm.dbg.value(metadata i32 0, metadata !12847, metadata !DIExpression()), !dbg !12849
  call void @llvm.dbg.value(metadata i32 0, metadata !12848, metadata !DIExpression()), !dbg !12849
  %2 = icmp eq i32 %0, 0, !dbg !12850
  br i1 %2, label %50, label %3, !dbg !12852

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12853
  %5 = icmp eq i32 %4, 49152, !dbg !12856
  br i1 %5, label %6, label %15, !dbg !12857

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12847, metadata !DIExpression()), !dbg !12849
  %7 = add i32 %0, -64000001, !dbg !12858
  %8 = icmp ult i32 %7, 26000000, !dbg !12858
  br i1 %8, label %15, label %9, !dbg !12858

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !12861
  %11 = select i1 %10, i32 0, i32 3, !dbg !12863
  call void @llvm.dbg.value(metadata i32 %11, metadata !12847, metadata !DIExpression()), !dbg !12849
  %12 = add i32 %0, -30000001, !dbg !12864
  %13 = icmp ult i32 %12, 60000000, !dbg !12864
  %14 = select i1 %13, i32 1, i32 %11, !dbg !12864
  call void @llvm.dbg.value(metadata i32 %14, metadata !12847, metadata !DIExpression()), !dbg !12849
  br label %15, !dbg !12864

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !12849
  call void @llvm.dbg.value(metadata i32 %16, metadata !12847, metadata !DIExpression()), !dbg !12849
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12867
  %18 = icmp eq i32 %17, 32768, !dbg !12869
  br i1 %18, label %19, label %27, !dbg !12870

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !12871
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !12874
  br i1 %22, label %27, label %23, !dbg !12874

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !12875
  %25 = and i1 %24, %21, !dbg !12878
  %26 = select i1 %25, i32 1, i32 %16, !dbg !12878
  call void @llvm.dbg.value(metadata i32 %26, metadata !12847, metadata !DIExpression()), !dbg !12849
  br label %27, !dbg !12878

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !12879
  call void @llvm.dbg.value(metadata i32 %28, metadata !12847, metadata !DIExpression()), !dbg !12849
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12880
  %30 = icmp eq i32 %29, 16384, !dbg !12882
  br i1 %30, label %31, label %39, !dbg !12883

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !12884
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !12887
  br i1 %34, label %39, label %35, !dbg !12887

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !12888
  %37 = select i1 %36, i1 %33, i1 false, !dbg !12891
  %38 = select i1 %37, i32 1, i32 %28, !dbg !12891
  call void @llvm.dbg.value(metadata i32 %38, metadata !12847, metadata !DIExpression()), !dbg !12849
  br label %39, !dbg !12891

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !12879
  call void @llvm.dbg.value(metadata i32 %40, metadata !12847, metadata !DIExpression()), !dbg !12849
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !12892
  call void @llvm.dbg.value(metadata i32 2, metadata !12845, metadata !DIExpression()), !dbg !12849
  br label %41, !dbg !12893

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !12879
  call void @llvm.dbg.value(metadata i32 %42, metadata !12845, metadata !DIExpression()), !dbg !12849
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !12894
  call void @llvm.dbg.value(metadata i32 %43, metadata !12846, metadata !DIExpression()), !dbg !12849
  %44 = add nsw i32 %42, -1, !dbg !12896
  call void @llvm.dbg.value(metadata i32 %44, metadata !12845, metadata !DIExpression()), !dbg !12849
  %45 = icmp ne i32 %43, %40, !dbg !12897
  %46 = icmp ne i32 %44, 0, !dbg !12898
  %47 = select i1 %45, i1 %46, i1 false, !dbg !12898
  br i1 %47, label %41, label %48, !dbg !12899, !llvm.loop !12900

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !12902
  call void @llvm.dbg.value(metadata i32 %51, metadata !12848, metadata !DIExpression()), !dbg !12849
  ret i32 %51, !dbg !12903
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12904 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12906
  %2 = and i32 %1, 49152, !dbg !12906
  ret i32 %2, !dbg !12907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12910, metadata !DIExpression()), !dbg !12911
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12912
  %3 = and i32 %2, -8, !dbg !12912
  %4 = or i32 %3, %0, !dbg !12912
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12912
  ret void, !dbg !12913
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12914 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12915
  %2 = and i32 %1, 7, !dbg !12915
  ret i32 %2, !dbg !12916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12917 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12935, metadata !DIExpression()), !dbg !12939
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12936, metadata !DIExpression()), !dbg !12939
  call void @llvm.dbg.value(metadata i32 0, metadata !12937, metadata !DIExpression()), !dbg !12939
  call void @llvm.dbg.value(metadata i32 0, metadata !12938, metadata !DIExpression()), !dbg !12939
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12940
  %4 = icmp eq i32 %3, 0, !dbg !12942
  br i1 %4, label %5, label %21, !dbg !12943

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !12944
  call void @llvm.dbg.value(metadata i32 %6, metadata !12938, metadata !DIExpression()), !dbg !12939
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.98() #26, !dbg !12946
  %8 = icmp eq i32 %7, 1, !dbg !12948
  br i1 %8, label %13, label %9, !dbg !12949

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.99() #26, !dbg !12950
  br label %10, !dbg !12952

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.98() #26, !dbg !12953
  %12 = icmp eq i32 %11, 1, !dbg !12954
  br i1 %12, label %13, label %10, !dbg !12952, !llvm.loop !12955

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12957
  %15 = load i32, i32* %14, align 4, !dbg !12957
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12958
  %17 = load i32, i32* %16, align 4, !dbg !12958
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12959
  %19 = load i32, i32* %18, align 4, !dbg !12959
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !12960
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !12961
  call void @llvm.dbg.value(metadata i32 %20, metadata !12937, metadata !DIExpression()), !dbg !12939
  br label %21, !dbg !12962

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12963
  call void @llvm.dbg.value(metadata i32 %22, metadata !12937, metadata !DIExpression()), !dbg !12939
  ret i32 %22, !dbg !12964
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12965 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12969, metadata !DIExpression()), !dbg !12970
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.102() #26, !dbg !12971
  %2 = icmp ne i32 %1, 0, !dbg !12973
  call void @llvm.dbg.value(metadata i1 %2, metadata !12969, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12970
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !12974
  %4 = icmp ne i32 %3, 0, !dbg !12976
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12977
  %6 = zext i1 %5 to i32, !dbg !12977
  call void @llvm.dbg.value(metadata i32 %6, metadata !12969, metadata !DIExpression()), !dbg !12970
  ret i32 %6, !dbg !12978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12983, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12984, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata i32 0, metadata !12985, metadata !DIExpression()), !dbg !12986
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12987
  %4 = load i32, i32* %3, align 4, !dbg !12987
  %5 = and i32 %4, 63, !dbg !12988
  %6 = udiv i32 %0, %5, !dbg !12989
  call void @llvm.dbg.value(metadata i32 %6, metadata !12985, metadata !DIExpression()), !dbg !12986
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12990
  %8 = load i32, i32* %7, align 4, !dbg !12990
  %9 = and i32 %8, 511, !dbg !12991
  %10 = mul i32 %9, %6, !dbg !12992
  call void @llvm.dbg.value(metadata i32 %10, metadata !12985, metadata !DIExpression()), !dbg !12986
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12993
  %12 = load i32, i32* %11, align 4, !dbg !12993
  %13 = lshr i32 %12, 15, !dbg !12994
  %14 = and i32 %13, 131070, !dbg !12994
  %15 = add nuw nsw i32 %14, 2, !dbg !12994
  %16 = udiv i32 %10, %15, !dbg !12995
  call void @llvm.dbg.value(metadata i32 %16, metadata !12985, metadata !DIExpression()), !dbg !12986
  ret i32 %16, !dbg !12996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.98() unnamed_addr #16 !dbg !12997 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12998
  %2 = lshr i32 %1, 1, !dbg !12999
  %3 = and i32 %2, 1, !dbg !12999
  ret i32 %3, !dbg !13000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.99() unnamed_addr #15 !dbg !13001 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13002
  %2 = or i32 %1, 1, !dbg !13002
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13002
  ret void, !dbg !13003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !13004 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13006, metadata !DIExpression()), !dbg !13010
  call void @llvm.dbg.value(metadata i32 %1, metadata !13007, metadata !DIExpression()), !dbg !13010
  call void @llvm.dbg.value(metadata i32 %2, metadata !13008, metadata !DIExpression()), !dbg !13010
  call void @llvm.dbg.value(metadata i32 %3, metadata !13009, metadata !DIExpression()), !dbg !13010
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13011
  %6 = and i32 %5, -4227072, !dbg !13011
  %7 = or i32 %1, %0, !dbg !13011
  %8 = shl i32 %2, 6, !dbg !13011
  %9 = or i32 %7, %8, !dbg !13011
  %10 = or i32 %9, %6, !dbg !13011
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13011
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13012
  %12 = and i32 %11, -196609, !dbg !13012
  %13 = or i32 %12, %3, !dbg !13012
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13012
  ret void, !dbg !13013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !13014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13018, metadata !DIExpression()), !dbg !13022
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13019, metadata !DIExpression()), !dbg !13022
  call void @llvm.dbg.value(metadata i32 0, metadata !13020, metadata !DIExpression()), !dbg !13022
  call void @llvm.dbg.value(metadata i32 0, metadata !13021, metadata !DIExpression()), !dbg !13022
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13023
  %4 = load i32, i32* %3, align 4, !dbg !13023
  %5 = lshr i32 %4, 4, !dbg !13023
  %6 = and i32 %5, 15, !dbg !13023
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13023
  %8 = load i8, i8* %7, align 1, !dbg !13023
  %9 = zext i8 %8 to i32, !dbg !13023
  %10 = lshr i32 %0, %9, !dbg !13023
  call void @llvm.dbg.value(metadata i32 %10, metadata !13021, metadata !DIExpression()), !dbg !13022
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13024
  %12 = icmp ult i32 %11, %10, !dbg !13026
  br i1 %12, label %13, label %16, !dbg !13027

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13028
  call void @llvm.dbg.value(metadata i32 %14, metadata !13020, metadata !DIExpression()), !dbg !13022
  %15 = icmp eq i32 %14, 0, !dbg !13030
  br i1 %15, label %16, label %30, !dbg !13032

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.101() #26, !dbg !13033
  br label %17, !dbg !13035

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.102() #26, !dbg !13036
  %19 = icmp eq i32 %18, 1, !dbg !13037
  br i1 %19, label %20, label %17, !dbg !13035, !llvm.loop !13038

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13040
  tail call fastcc void @LL_RCC_SetAHBPrescaler.103(i32 noundef %21) #26, !dbg !13041
  tail call fastcc void @LL_RCC_SetSysClkSource.104() #26, !dbg !13042
  br label %22, !dbg !13043

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.105() #26, !dbg !13044
  %24 = icmp eq i32 %23, 8, !dbg !13045
  br i1 %24, label %25, label %22, !dbg !13043, !llvm.loop !13046

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13048
  %27 = load i32, i32* %26, align 4, !dbg !13048
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.106(i32 noundef %27) #26, !dbg !13049
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13050
  %29 = load i32, i32* %28, align 4, !dbg !13050
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.107(i32 noundef %29) #26, !dbg !13051
  br label %30, !dbg !13052

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13053
  %33 = icmp ugt i32 %32, %10, !dbg !13055
  br i1 %33, label %34, label %36, !dbg !13056

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13057
  call void @llvm.dbg.value(metadata i32 %35, metadata !13020, metadata !DIExpression()), !dbg !13022
  br label %36, !dbg !13059

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13022
  call void @llvm.dbg.value(metadata i32 %37, metadata !13020, metadata !DIExpression()), !dbg !13022
  %38 = icmp eq i32 %37, 0, !dbg !13060
  br i1 %38, label %39, label %40, !dbg !13062

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13063
  br label %40, !dbg !13065

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13066
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.101() unnamed_addr #15 !dbg !13067 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13068
  %2 = or i32 %1, 16777216, !dbg !13068
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13068
  ret void, !dbg !13069
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.102() unnamed_addr #16 !dbg !13070 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13071
  %2 = lshr i32 %1, 25, !dbg !13072
  %3 = and i32 %2, 1, !dbg !13072
  ret i32 %3, !dbg !13073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.103(i32 noundef %0) unnamed_addr #15 !dbg !13074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13076, metadata !DIExpression()), !dbg !13077
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13078
  %3 = and i32 %2, -241, !dbg !13078
  %4 = or i32 %3, %0, !dbg !13078
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13078
  ret void, !dbg !13079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.104() unnamed_addr #15 !dbg !13080 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13082, metadata !DIExpression()), !dbg !13083
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13084
  %2 = and i32 %1, -4, !dbg !13084
  %3 = or i32 %2, 2, !dbg !13084
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13084
  ret void, !dbg !13085
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.105() unnamed_addr #16 !dbg !13086 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13087
  %2 = and i32 %1, 12, !dbg !13087
  ret i32 %2, !dbg !13088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.106(i32 noundef %0) unnamed_addr #15 !dbg !13089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13091, metadata !DIExpression()), !dbg !13092
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13093
  %3 = and i32 %2, -7169, !dbg !13093
  %4 = or i32 %3, %0, !dbg !13093
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13093
  ret void, !dbg !13094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.107(i32 noundef %0) unnamed_addr #15 !dbg !13095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13097, metadata !DIExpression()), !dbg !13098
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13099
  %3 = and i32 %2, -57345, !dbg !13099
  %4 = or i32 %3, %0, !dbg !13099
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13099
  ret void, !dbg !13100
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !13101 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13102
  %2 = lshr i32 %1, 27, !dbg !13103
  %3 = and i32 %2, 1, !dbg !13103
  ret i32 %3, !dbg !13104
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13109, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata i32 %1, metadata !13110, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13111, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13112, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata i32 0, metadata !13113, metadata !DIExpression()), !dbg !13115
  call void @llvm.dbg.value(metadata i32 0, metadata !13114, metadata !DIExpression()), !dbg !13115
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13116
  %6 = icmp eq i32 %5, 0, !dbg !13118
  br i1 %6, label %7, label %27, !dbg !13119

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13120
  call void @llvm.dbg.value(metadata i32 %8, metadata !13114, metadata !DIExpression()), !dbg !13115
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13122
  %10 = icmp eq i32 %9, 1, !dbg !13124
  br i1 %10, label %19, label %11, !dbg !13125

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13126
  br i1 %12, label %13, label %14, !dbg !13129

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13130
  br label %15, !dbg !13132

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !13133
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !13135
  br label %16, !dbg !13136

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13137
  %18 = icmp eq i32 %17, 1, !dbg !13138
  br i1 %18, label %19, label %16, !dbg !13136, !llvm.loop !13139

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13141
  %21 = load i32, i32* %20, align 4, !dbg !13141
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13142
  %23 = load i32, i32* %22, align 4, !dbg !13142
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13143
  %25 = load i32, i32* %24, align 4, !dbg !13143
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.100(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13144
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13145
  call void @llvm.dbg.value(metadata i32 %26, metadata !13113, metadata !DIExpression()), !dbg !13115
  br label %27, !dbg !13146

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13147
  call void @llvm.dbg.value(metadata i32 %28, metadata !13113, metadata !DIExpression()), !dbg !13115
  ret i32 %28, !dbg !13148
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !13149 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13150
  %2 = lshr i32 %1, 17, !dbg !13151
  %3 = and i32 %2, 1, !dbg !13151
  ret i32 %3, !dbg !13152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13153 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13154
  %2 = or i32 %1, 262144, !dbg !13154
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13154
  ret void, !dbg !13155
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !13156 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13157
  %2 = and i32 %1, -262145, !dbg !13157
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13157
  ret void, !dbg !13158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !13159 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13160
  %2 = or i32 %1, 65536, !dbg !13160
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13160
  ret void, !dbg !13161
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13162 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13165, metadata !DIExpression()), !dbg !13181
  call void @llvm.dbg.value(metadata i32 undef, metadata !13165, metadata !DIExpression()), !dbg !13181
  call void @llvm.dbg.value(metadata i32 undef, metadata !13165, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13181
  ret void, !dbg !13182
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13183 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13187, metadata !DIExpression()), !dbg !13189
  %2 = icmp eq i8* %0, null, !dbg !13190
  br i1 %2, label %29, label %3, !dbg !13192

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13193
  %5 = icmp eq i8 %4, 0, !dbg !13194
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13195
  br i1 %6, label %29, label %8, !dbg !13195

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13188, metadata !DIExpression()), !dbg !13189
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13196

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13188, metadata !DIExpression()), !dbg !13189
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13198
  br i1 %10, label %11, label %15, !dbg !13203

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13204
  %13 = load i8*, i8** %12, align 4, !dbg !13204
  %14 = icmp eq i8* %13, %0, !dbg !13205
  br i1 %14, label %29, label %15, !dbg !13206

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13207
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13188, metadata !DIExpression()), !dbg !13189
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13208
  br i1 %17, label %7, label %8, !dbg !13209, !llvm.loop !13210

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13188, metadata !DIExpression()), !dbg !13189
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13212
  br i1 %20, label %21, label %26, !dbg !13216

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13217
  %23 = load i8*, i8** %22, align 4, !dbg !13217
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13218
  %25 = icmp eq i32 %24, 0, !dbg !13219
  br i1 %25, label %29, label %26, !dbg !13220

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13221
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13188, metadata !DIExpression()), !dbg !13189
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13222
  br i1 %28, label %29, label %18, !dbg !13196, !llvm.loop !13223

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13189
  ret %struct.device* %30, !dbg !13225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !13226 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13230, metadata !DIExpression()), !dbg !13231
  %2 = icmp eq %struct.device* %0, null, !dbg !13232
  br i1 %2, label %14, label %3, !dbg !13234

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13235
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13235
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13236
  %7 = load i8, i8* %6, align 1, !dbg !13236
  %8 = and i8 %7, 1, !dbg !13236
  %9 = icmp eq i8 %8, 0, !dbg !13236
  br i1 %9, label %14, label %10, !dbg !13237

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13238
  %12 = load i8, i8* %11, align 1, !dbg !13238
  %13 = icmp eq i8 %12, 0, !dbg !13239
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13231
  ret i1 %15, !dbg !13240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !13241 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13246, metadata !DIExpression()), !dbg !13247
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13248
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13249
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13250 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13258, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13259, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i8* %2, metadata !13260, metadata !DIExpression()), !dbg !13263
  %5 = bitcast i32* %4 to i8*, !dbg !13264
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13264
  call void @llvm.dbg.value(metadata i32 0, metadata !13261, metadata !DIExpression()), !dbg !13263
  store i32 0, i32* %4, align 4, !dbg !13265
  call void @llvm.dbg.value(metadata i32* %4, metadata !13261, metadata !DIExpression(DW_OP_deref)), !dbg !13263
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13266
  call void @llvm.dbg.value(metadata i16* %6, metadata !13262, metadata !DIExpression()), !dbg !13263
  %7 = load i32, i32* %4, align 4, !dbg !13267
  call void @llvm.dbg.value(metadata i32 %7, metadata !13261, metadata !DIExpression()), !dbg !13263
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13268
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13269
  ret i32 %8, !dbg !13270
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13275, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i32* %1, metadata !13276, metadata !DIExpression()), !dbg !13281
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13282
  %4 = load i16*, i16** %3, align 4, !dbg !13282
  call void @llvm.dbg.value(metadata i16* %4, metadata !13277, metadata !DIExpression()), !dbg !13281
  %5 = icmp eq i16* %4, null, !dbg !13283
  br i1 %5, label %14, label %6, !dbg !13284

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13285
  call void @llvm.dbg.value(metadata i32 %7, metadata !13278, metadata !DIExpression()), !dbg !13285
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13286
  %9 = load i16, i16* %8, align 2, !dbg !13286
  %10 = add i16 %9, -32767, !dbg !13287
  %11 = icmp ult i16 %10, 2, !dbg !13287
  %12 = add i32 %7, 1, !dbg !13288
  call void @llvm.dbg.value(metadata i32 %12, metadata !13278, metadata !DIExpression()), !dbg !13285
  br i1 %11, label %13, label %6, !dbg !13287, !llvm.loop !13290

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13293
  br label %14, !dbg !13294

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13296 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13300, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i32 %1, metadata !13301, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13302, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i8* %3, metadata !13303, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i32 0, metadata !13304, metadata !DIExpression()), !dbg !13312
  %5 = icmp eq i32 %1, 0, !dbg !13313
  br i1 %5, label %16, label %8, !dbg !13314

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13304, metadata !DIExpression()), !dbg !13312
  %7 = icmp eq i32 %15, %1, !dbg !13313
  br i1 %7, label %16, label %8, !dbg !13314, !llvm.loop !13315

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13304, metadata !DIExpression()), !dbg !13312
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13317
  %11 = load i16, i16* %10, align 2, !dbg !13317
  call void @llvm.dbg.value(metadata i16 %11, metadata !13306, metadata !DIExpression()), !dbg !13318
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13319
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13309, metadata !DIExpression()), !dbg !13318
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13320
  call void @llvm.dbg.value(metadata i32 %13, metadata !13310, metadata !DIExpression()), !dbg !13318
  %14 = icmp slt i32 %13, 0, !dbg !13321
  %15 = add nuw i32 %9, 1, !dbg !13323
  call void @llvm.dbg.value(metadata i32 %15, metadata !13304, metadata !DIExpression()), !dbg !13312
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !13325 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13329, metadata !DIExpression()), !dbg !13332
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13330, metadata !DIExpression()), !dbg !13332
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13331, metadata !DIExpression()), !dbg !13332
  %2 = sext i16 %0 to i32, !dbg !13333
  %3 = icmp slt i16 %0, 1, !dbg !13335
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13336
  %6 = add nsw i32 %2, -1, !dbg !13336
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13336
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13336
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13330, metadata !DIExpression()), !dbg !13332
  ret %struct.device* %8, !dbg !13337
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13338 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13340, metadata !DIExpression()), !dbg !13345
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13341, metadata !DIExpression()), !dbg !13345
  call void @llvm.dbg.value(metadata i8* %2, metadata !13342, metadata !DIExpression()), !dbg !13345
  %5 = bitcast i32* %4 to i8*, !dbg !13346
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13346
  call void @llvm.dbg.value(metadata i32 0, metadata !13343, metadata !DIExpression()), !dbg !13345
  store i32 0, i32* %4, align 4, !dbg !13347
  call void @llvm.dbg.value(metadata i32* %4, metadata !13343, metadata !DIExpression(DW_OP_deref)), !dbg !13345
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13348
  call void @llvm.dbg.value(metadata i16* %6, metadata !13344, metadata !DIExpression()), !dbg !13345
  %7 = load i32, i32* %4, align 4, !dbg !13349
  call void @llvm.dbg.value(metadata i32 %7, metadata !13343, metadata !DIExpression()), !dbg !13345
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13350
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13351
  ret i32 %8, !dbg !13352
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13355, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.value(metadata i32* %1, metadata !13356, metadata !DIExpression()), !dbg !13360
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13361
  %4 = load i16*, i16** %3, align 4, !dbg !13361
  call void @llvm.dbg.value(metadata i16* %4, metadata !13357, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.value(metadata i32 0, metadata !13358, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.value(metadata i32 0, metadata !13359, metadata !DIExpression()), !dbg !13360
  %5 = icmp eq i16* %4, null, !dbg !13362
  br i1 %5, label %22, label %6, !dbg !13364

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13358, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.value(metadata i16* %8, metadata !13357, metadata !DIExpression()), !dbg !13360
  %9 = load i16, i16* %8, align 2, !dbg !13365
  %10 = icmp eq i16 %9, -32768, !dbg !13369
  call void @llvm.dbg.value(metadata i32 undef, metadata !13358, metadata !DIExpression()), !dbg !13360
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13370
  call void @llvm.dbg.value(metadata i16* %11, metadata !13357, metadata !DIExpression()), !dbg !13360
  %12 = zext i1 %10 to i32, !dbg !13371
  %13 = add i32 %7, %12, !dbg !13371
  call void @llvm.dbg.value(metadata i32 %13, metadata !13358, metadata !DIExpression()), !dbg !13360
  %14 = icmp eq i32 %13, 2, !dbg !13372
  br i1 %14, label %15, label %6, !dbg !13373

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13360
  call void @llvm.dbg.value(metadata i32 %16, metadata !13359, metadata !DIExpression()), !dbg !13360
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13374
  %18 = load i16, i16* %17, align 2, !dbg !13374
  %19 = icmp eq i16 %18, 32767, !dbg !13375
  %20 = add i32 %16, 1, !dbg !13376
  call void @llvm.dbg.value(metadata i32 %20, metadata !13359, metadata !DIExpression()), !dbg !13360
  br i1 %19, label %21, label %15, !dbg !13378, !llvm.loop !13379

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13381
  br label %22, !dbg !13382

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13383
  call void @llvm.dbg.value(metadata i16* %23, metadata !13357, metadata !DIExpression()), !dbg !13360
  ret i16* %23, !dbg !13384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !13385 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13386
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13387
  ret i32* %2, !dbg !13388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !13389 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13537, metadata !DIExpression()), !dbg !13540
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13538, metadata !DIExpression()), !dbg !13540
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13539, metadata !DIExpression()), !dbg !13540
  ret void, !dbg !13541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13542 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13546, metadata !DIExpression()), !dbg !13548
  call void @llvm.dbg.value(metadata i32 %1, metadata !13547, metadata !DIExpression()), !dbg !13548
  ret void, !dbg !13549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13550 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13554, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata i32 %1, metadata !13555, metadata !DIExpression()), !dbg !13556
  ret void, !dbg !13557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13562, metadata !DIExpression()), !dbg !13564
  call void @llvm.dbg.value(metadata i8* %1, metadata !13563, metadata !DIExpression()), !dbg !13564
  ret i32 -134, !dbg !13565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13570, metadata !DIExpression()), !dbg !13572
  call void @llvm.dbg.value(metadata i8* %1, metadata !13571, metadata !DIExpression()), !dbg !13572
  ret i32 -134, !dbg !13573
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13577, metadata !DIExpression()), !dbg !13578
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13579, !srcloc !13585
  call void @llvm.dbg.value(metadata i32 undef, metadata !13582, metadata !DIExpression()) #24, !dbg !13586
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #24, !dbg !13586
  br label %3, !dbg !13587

3:                                                ; preds = %3, %1
  br label %3, !dbg !13588, !llvm.loop !13591
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13598, metadata !DIExpression()), !dbg !13600
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13599, metadata !DIExpression()), !dbg !13600
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13601
  unreachable, !dbg !13601
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13604, metadata !DIExpression()), !dbg !13605
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13606
  unreachable, !dbg !13606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13609, metadata !DIExpression()), !dbg !13613
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13610, metadata !DIExpression()), !dbg !13613
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13614, !srcloc !13585
  call void @llvm.dbg.value(metadata i32 undef, metadata !13582, metadata !DIExpression()) #24, !dbg !13616
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #24, !dbg !13616
  call void @llvm.dbg.value(metadata i32 undef, metadata !13611, metadata !DIExpression()), !dbg !13613
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13612, metadata !DIExpression()), !dbg !13613
  %4 = icmp eq %struct.__esf* %1, null, !dbg !13617
  br i1 %4, label %6, label %5, !dbg !13619

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13620
  br label %7, !dbg !13621

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13620
  br label %7, !dbg !13624

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !13614
  call void @llvm.dbg.value(metadata i32 %8, metadata !13582, metadata !DIExpression()) #24, !dbg !13616
  call void @llvm.dbg.value(metadata i32 %8, metadata !13611, metadata !DIExpression()), !dbg !13613
  %9 = tail call fastcc %struct.k_thread* @k_current_get.116() #27, !dbg !13626
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13612, metadata !DIExpression()), !dbg !13613
  call void @llvm.dbg.value(metadata i32 undef, metadata !13627, metadata !DIExpression()) #24, !dbg !13630
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !13632, !srcloc !13633
  tail call fastcc void @k_thread_abort.117(%struct.k_thread* noundef %9) #26, !dbg !13634
  ret void, !dbg !13637
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.116() unnamed_addr #9 !dbg !13638 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.118() #27, !dbg !13642
  ret %struct.k_thread* %1, !dbg !13643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.117(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13644 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13648, metadata !DIExpression()), !dbg !13649
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13650, !srcloc !13652
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13653
  ret void, !dbg !13654
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.118() unnamed_addr #9 !dbg !13655 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13656, !srcloc !13658
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13659
  ret %struct.k_thread* %1, !dbg !13660
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13661 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13665, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.value(metadata i32 %1, metadata !13666, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.value(metadata i32 %2, metadata !13667, metadata !DIExpression()), !dbg !13668
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13669
  ret void, !dbg !13670
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13671 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13675, metadata !DIExpression()), !dbg !13678
  call void @llvm.dbg.value(metadata i8* %1, metadata !13676, metadata !DIExpression()), !dbg !13678
  call void @llvm.dbg.value(metadata i32 %2, metadata !13677, metadata !DIExpression()), !dbg !13678
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13679
  ret void, !dbg !13680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13681 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13682
  ret void, !dbg !13683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13686, metadata !DIExpression()), !dbg !13687
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13688
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13689
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13690
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13691
  %4 = trunc i32 %0 to i8, !dbg !13692
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13693
  store i8 %4, i8* %5, align 4, !dbg !13694
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13695
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13696
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13697
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13698
  store i8* %8, i8** %9, align 4, !dbg !13699
  ret void, !dbg !13700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13703, metadata !DIExpression()), !dbg !13709
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13710
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13704, metadata !DIExpression()), !dbg !13709
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13711
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13705, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.value(metadata i8* null, metadata !13708, metadata !DIExpression()), !dbg !13709
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13712
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13713
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !13714
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13715
  ret void, !dbg !13716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13717 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13721, metadata !DIExpression()), !dbg !13722
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13723
  ret i8* %2, !dbg !13724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13730, metadata !DIExpression()), !dbg !13731
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13732
  %3 = load i8, i8* %2, align 1, !dbg !13733
  %4 = and i8 %3, -5, !dbg !13733
  store i8 %4, i8* %2, align 1, !dbg !13733
  ret void, !dbg !13734
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !13735 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13738
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13739
  %3 = ptrtoint i8* %2 to i32, !dbg !13748
  %4 = add i32 %3, 2048, !dbg !13749
  call void @llvm.dbg.value(metadata i32 %4, metadata !13743, metadata !DIExpression()) #24, !dbg !13750
  call void @llvm.dbg.value(metadata i32 %4, metadata !13751, metadata !DIExpression()) #24, !dbg !13754
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !13756, !srcloc !13757
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13758
  %6 = or i32 %5, 512, !dbg !13758
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13758
  tail call fastcc void @__NVIC_SetPriority.125(i32 noundef -2, i32 noundef 255) #25, !dbg !13759
  tail call fastcc void @__NVIC_SetPriority.125(i32 noundef -5, i32 noundef 0) #25, !dbg !13762
  tail call fastcc void @__NVIC_SetPriority.125(i32 noundef -12, i32 noundef 0) #25, !dbg !13763
  tail call fastcc void @__NVIC_SetPriority.125(i32 noundef -11, i32 noundef 0) #25, !dbg !13764
  tail call fastcc void @__NVIC_SetPriority.125(i32 noundef -10, i32 noundef 0) #25, !dbg !13765
  tail call fastcc void @__NVIC_SetPriority.125(i32 noundef -4, i32 noundef 0) #25, !dbg !13766
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13767
  %8 = or i32 %7, 458752, !dbg !13767
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13767
  tail call void @z_arm_fault_init() #25, !dbg !13768
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13769
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13770
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13773
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13774
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13775
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13776
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !13776
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13737, metadata !DIExpression()), !dbg !13777
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13778
  call void @z_device_state_init() #25, !dbg !13779
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !13780
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !13781
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !13782
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !13783
  unreachable, !dbg !13783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2178, metadata !DIExpression()), !dbg !13784
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13785
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13785
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2179, metadata !DIExpression()), !dbg !13784
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2179, metadata !DIExpression()), !dbg !13784
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13786
  br i1 %7, label %8, label %35, !dbg !13787

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2179, metadata !DIExpression()), !dbg !13784
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13788
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13788
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2189, metadata !DIExpression()), !dbg !13789
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13790
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13790
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13791
  call void @llvm.dbg.value(metadata i32 %14, metadata !2193, metadata !DIExpression()), !dbg !13789
  %15 = icmp eq %struct.device* %11, null, !dbg !13792
  br i1 %15, label %32, label %16, !dbg !13794

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13795
  br i1 %17, label %26, label %18, !dbg !13798

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13799
  call void @llvm.dbg.value(metadata i32 %19, metadata !2193, metadata !DIExpression()), !dbg !13789
  %20 = icmp ult i32 %19, 255, !dbg !13801
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13801
  call void @llvm.dbg.value(metadata i32 %21, metadata !2193, metadata !DIExpression()), !dbg !13789
  %22 = trunc i32 %21 to i8, !dbg !13802
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13803
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13803
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13804
  store i8 %22, i8* %25, align 1, !dbg !13805
  br label %26, !dbg !13806

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13807
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13807
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13808
  %30 = load i8, i8* %29, align 1, !dbg !13809
  %31 = or i8 %30, 1, !dbg !13809
  store i8 %31, i8* %29, align 1, !dbg !13809
  br label %32, !dbg !13810

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13811
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2179, metadata !DIExpression()), !dbg !13784
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13786
  br i1 %34, label %8, label %35, !dbg !13787, !llvm.loop !13812

35:                                               ; preds = %32, %1
  ret void, !dbg !13814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.125(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13817, metadata !DIExpression()), !dbg !13819
  call void @llvm.dbg.value(metadata i32 %1, metadata !13818, metadata !DIExpression()), !dbg !13819
  %3 = trunc i32 %1 to i8, !dbg !13820
  %4 = shl i8 %3, 4, !dbg !13820
  %5 = and i32 %0, 15, !dbg !13823
  %6 = add nsw i32 %5, -4, !dbg !13824
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13825
  store volatile i8 %4, i8* %7, align 1, !dbg !13826
  ret void, !dbg !13827
}

; Function Attrs: optsize
declare !dbg !13828 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13829 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13832, metadata !DIExpression()), !dbg !13833
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13834
  store i8 1, i8* %2, align 1, !dbg !13835
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13836
  store i8 1, i8* %3, align 4, !dbg !13837
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13838
  store i32 0, i32* %4, align 4, !dbg !13839
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13840
  store i32 0, i32* %5, align 4, !dbg !13841
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13842
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13843
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13844
  ret void, !dbg !13845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13846 {
  tail call void @z_sched_init() #25, !dbg !13851
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13852
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.126, i32 0, i32 0)) #25, !dbg !13853
  call void @llvm.dbg.value(metadata i8* %1, metadata !13850, metadata !DIExpression()), !dbg !13854
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13855
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13856
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !13857
  ret i8* %1, !dbg !13858
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !13859 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13863, metadata !DIExpression()), !dbg !13864
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13865
  unreachable, !dbg !13866
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13867 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13869, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.value(metadata i8* %1, metadata !13870, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.value(metadata i8* %2, metadata !13871, metadata !DIExpression()), !dbg !13872
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13873
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !13874
  tail call void @boot_banner() #25, !dbg !13875
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !13876
  tail call void @z_init_static_threads() #25, !dbg !13877
  tail call void @main() #25, !dbg !13878
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13879
  %5 = and i8 %4, -2, !dbg !13879
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13879
  ret void, !dbg !13880
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13881 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13891, metadata !DIExpression()), !dbg !13893
  call void @llvm.dbg.value(metadata i8* %1, metadata !13892, metadata !DIExpression()), !dbg !13893
  ret void, !dbg !13894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13895 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13897, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.value(metadata i8* %1, metadata !13898, metadata !DIExpression()), !dbg !13899
  ret void, !dbg !13900
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13901 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13902, !srcloc !13909
  call void @llvm.dbg.value(metadata i32 %1, metadata !13905, metadata !DIExpression()) #24, !dbg !13910
  %2 = icmp ne i32 %1, 0, !dbg !13911
  ret i1 %2, !dbg !13912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13913 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13914
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13915
  %3 = load i8, i8* %2, align 4, !dbg !13916
  %4 = or i8 %3, 1, !dbg !13916
  store i8 %4, i8* %2, align 4, !dbg !13916
  ret void, !dbg !13917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13918 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13919
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13920
  %3 = load i8, i8* %2, align 4, !dbg !13921
  %4 = and i8 %3, -2, !dbg !13921
  store i8 %4, i8* %2, align 4, !dbg !13921
  ret void, !dbg !13922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13923 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13924
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13925
  %3 = load i8, i8* %2, align 4, !dbg !13925
  %4 = and i8 %3, 1, !dbg !13926
  %5 = icmp ne i8 %4, 0, !dbg !13927
  ret i1 %5, !dbg !13928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13929 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13933, metadata !DIExpression()), !dbg !13935
  call void @llvm.dbg.value(metadata i8* %1, metadata !13934, metadata !DIExpression()), !dbg !13935
  ret i32 -88, !dbg !13936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13937 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13941, metadata !DIExpression()), !dbg !13942
  ret i8* null, !dbg !13943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13944 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13948, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata i8* %1, metadata !13949, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata i32 %2, metadata !13950, metadata !DIExpression()), !dbg !13951
  ret i32 -88, !dbg !13952
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2202 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2316, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i8* %1, metadata !2317, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %2, metadata !2318, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 0, metadata !2319, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i8 undef, metadata !2321, metadata !DIExpression()), !dbg !13953
  %4 = icmp eq i8* %1, null, !dbg !13954
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13956
  br i1 %6, label %46, label %7, !dbg !13956

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13957
  %9 = load i8, i8* %8, align 1, !dbg !13957
  call void @llvm.dbg.value(metadata i8 %9, metadata !2321, metadata !DIExpression()), !dbg !13953
  %10 = add i32 %2, -1, !dbg !13958
  call void @llvm.dbg.value(metadata i32 %10, metadata !2318, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i8 0, metadata !2322, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.value(metadata i8 %9, metadata !2321, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 0, metadata !2319, metadata !DIExpression()), !dbg !13953
  %11 = icmp eq i8 %9, 0, !dbg !13960
  br i1 %11, label %12, label %15, !dbg !13962

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13963
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13964
  store i8 0, i8* %14, align 1, !dbg !13965
  br label %46, !dbg !13966

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2322, metadata !DIExpression()), !dbg !13959
  call void @llvm.dbg.value(metadata i8 %17, metadata !2321, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %18, metadata !2319, metadata !DIExpression()), !dbg !13953
  %19 = zext i8 %17 to i32, !dbg !13967
  %20 = zext i8 %16 to i32, !dbg !13968
  %21 = shl nuw i32 1, %20, !dbg !13968
  call void @llvm.dbg.value(metadata i32 %21, metadata !2320, metadata !DIExpression()), !dbg !13953
  %22 = and i32 %21, %19, !dbg !13970
  %23 = icmp eq i32 %22, 0, !dbg !13972
  br i1 %23, label %42, label %24, !dbg !13973

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13974
  %26 = sub i32 %10, %18, !dbg !13975
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13976
  %28 = load i8*, i8** %27, align 4, !dbg !13976
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13977
  %30 = load i32, i32* %29, align 4, !dbg !13977
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !13978
  %32 = add i32 %31, %18, !dbg !13979
  call void @llvm.dbg.value(metadata i32 %32, metadata !2319, metadata !DIExpression()), !dbg !13953
  %33 = trunc i32 %21 to i8, !dbg !13980
  %34 = xor i8 %33, -1, !dbg !13980
  %35 = and i8 %17, %34, !dbg !13980
  call void @llvm.dbg.value(metadata i8 %35, metadata !2321, metadata !DIExpression()), !dbg !13953
  %36 = icmp eq i8 %35, 0, !dbg !13981
  br i1 %36, label %12, label %37, !dbg !13983

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13984
  %39 = sub i32 %10, %32, !dbg !13986
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !13987
  %41 = add i32 %40, %32, !dbg !13988
  call void @llvm.dbg.value(metadata i32 %41, metadata !2319, metadata !DIExpression()), !dbg !13953
  br label %42, !dbg !13989

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13953
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13953
  call void @llvm.dbg.value(metadata i8 %44, metadata !2321, metadata !DIExpression()), !dbg !13953
  call void @llvm.dbg.value(metadata i32 %43, metadata !2319, metadata !DIExpression()), !dbg !13953
  %45 = add i8 %16, 1, !dbg !13990
  call void @llvm.dbg.value(metadata i8 %45, metadata !2322, metadata !DIExpression()), !dbg !13959
  br label %15, !dbg !13962

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.129, i32 0, i32 0), %3 ], !dbg !13953
  ret i8* %47, !dbg !13991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13992 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13996, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.value(metadata i32 %1, metadata !13997, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.value(metadata i8* %2, metadata !13998, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.value(metadata i32 %3, metadata !13999, metadata !DIExpression()), !dbg !14001
  %5 = icmp ult i32 %1, %3, !dbg !14002
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14002
  call void @llvm.dbg.value(metadata i32 %6, metadata !14000, metadata !DIExpression()), !dbg !14001
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14003
  ret i32 %6, !dbg !14004
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14005 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14009, metadata !DIExpression()), !dbg !14010
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14011
  ret void, !dbg !14012
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14013 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14022, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14023, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata i32 %2, metadata !14024, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14025, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata i8* %4, metadata !14026, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata i8* %5, metadata !14027, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata i8* %6, metadata !14028, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata i32 %7, metadata !14029, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata i32 %8, metadata !14030, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata i8* undef, metadata !14031, metadata !DIExpression()), !dbg !14033
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14034
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !14035
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14036
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14037
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14038
  call void @llvm.dbg.value(metadata i8* %13, metadata !14032, metadata !DIExpression()), !dbg !14033
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14039
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14040
  store i8* null, i8** %14, align 4, !dbg !14041
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14042
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14042
  br i1 %16, label %20, label %17, !dbg !14044

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14045
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14045
  br label %20, !dbg !14046

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14033
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14047
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14049
  ret i8* %13, !dbg !14050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !14051 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14056, metadata !DIExpression()), !dbg !14057
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14058
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14059
  ret void, !dbg !14060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !14061 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14066, metadata !DIExpression()), !dbg !14070
  call void @llvm.dbg.value(metadata i32 %1, metadata !14067, metadata !DIExpression()), !dbg !14070
  call void @llvm.dbg.value(metadata i32 %2, metadata !14068, metadata !DIExpression()), !dbg !14070
  call void @llvm.dbg.value(metadata i32 %3, metadata !14069, metadata !DIExpression()), !dbg !14070
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14071
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14072
  %6 = trunc i32 %3 to i8, !dbg !14073
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14074
  store i8 %6, i8* %7, align 4, !dbg !14075
  %8 = trunc i32 %2 to i8, !dbg !14076
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14077
  store i8 %8, i8* %9, align 1, !dbg !14078
  %10 = trunc i32 %1 to i8, !dbg !14079
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14080
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14080
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14080
  store i8 %10, i8* %13, align 2, !dbg !14081
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14082
  store i8 0, i8* %14, align 1, !dbg !14083
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14084
  ret void, !dbg !14085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !14086 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14090, metadata !DIExpression()), !dbg !14098
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14091, metadata !DIExpression()), !dbg !14098
  call void @llvm.dbg.value(metadata i32 %2, metadata !14092, metadata !DIExpression()), !dbg !14098
  call void @llvm.dbg.value(metadata i32 0, metadata !14097, metadata !DIExpression()), !dbg !14098
  %4 = add i32 %2, 7, !dbg !14099
  %5 = and i32 %4, -8, !dbg !14099
  %6 = add i32 %5, 64, !dbg !14099
  call void @llvm.dbg.value(metadata i32 %6, metadata !14093, metadata !DIExpression()), !dbg !14098
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.139(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14101
  call void @llvm.dbg.value(metadata i8* %7, metadata !14096, metadata !DIExpression()), !dbg !14098
  call void @llvm.dbg.value(metadata i32 %5, metadata !14094, metadata !DIExpression()), !dbg !14098
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14102
  call void @llvm.dbg.value(metadata i8* %8, metadata !14095, metadata !DIExpression()), !dbg !14098
  call void @llvm.dbg.value(metadata i32 0, metadata !14097, metadata !DIExpression()), !dbg !14098
  %9 = ptrtoint i8* %7 to i32, !dbg !14103
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14104
  store i32 %9, i32* %10, align 4, !dbg !14105
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14106
  store i32 %5, i32* %11, align 4, !dbg !14107
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14108
  store i32 0, i32* %12, align 4, !dbg !14109
  call void @llvm.dbg.value(metadata i8* %8, metadata !14095, metadata !DIExpression()), !dbg !14098
  ret i8* %8, !dbg !14110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.139(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14111 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14115, metadata !DIExpression()), !dbg !14116
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14117
  ret i8* %2, !dbg !14118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14119 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14124, metadata !DIExpression()), !dbg !14125
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14126
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14127
  ret void, !dbg !14128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14129 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14131, metadata !DIExpression()), !dbg !14132
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14133
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14134
  ret void, !dbg !14135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14136 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14140, metadata !DIExpression()), !dbg !14141
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14142
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14143
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14144
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14145
  ret void, !dbg !14146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14147 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14152, metadata !DIExpression()), !dbg !14153
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14154
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14155
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14156
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14157
  ret void, !dbg !14158
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14159 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14176, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14167, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14168, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata i32 %2, metadata !14169, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14170, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata i8* %4, metadata !14171, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata i8* %5, metadata !14172, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata i8* %6, metadata !14173, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata i32 %7, metadata !14174, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.value(metadata i32 %8, metadata !14175, metadata !DIExpression()), !dbg !14177
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14178
  %13 = icmp eq i64 %11, -1, !dbg !14179
  br i1 %13, label %15, label %14, !dbg !14181

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14182
  br label %15, !dbg !14184

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14186 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14191, metadata !DIExpression()), !dbg !14192
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14190, metadata !DIExpression()), !dbg !14192
  %4 = icmp eq i64 %3, 0, !dbg !14193
  br i1 %4, label %5, label %6, !dbg !14195

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14196
  br label %7, !dbg !14198

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14199
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14202 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14206, metadata !DIExpression()), !dbg !14207
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14208, !srcloc !14210
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14211
  ret void, !dbg !14212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14213 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14216, metadata !DIExpression()), !dbg !14217
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14215, metadata !DIExpression()), !dbg !14217
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14218
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14219
  ret void, !dbg !14220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14221 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14223, metadata !DIExpression()), !dbg !14243
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14244

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14245
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14241, metadata !DIExpression()), !dbg !14246
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14247

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14223, metadata !DIExpression()), !dbg !14243
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14248
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14248
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14251
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14251
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14252
  %9 = load i32, i32* %8, align 4, !dbg !14252
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14253
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14253
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14254
  %13 = load i8*, i8** %12, align 4, !dbg !14254
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14255
  %15 = load i8*, i8** %14, align 4, !dbg !14255
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14256
  %17 = load i8*, i8** %16, align 4, !dbg !14256
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14257
  %19 = load i32, i32* %18, align 4, !dbg !14257
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14258
  %21 = load i32, i32* %20, align 4, !dbg !14258
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14259
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14260
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14261
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14262
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14262
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14263
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14223, metadata !DIExpression()), !dbg !14243
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14264
  br i1 %27, label %2, label %1, !dbg !14244, !llvm.loop !14266

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14245
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14241, metadata !DIExpression()), !dbg !14246
  br label %29, !dbg !14247

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14268
  ret void, !dbg !14269

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14241, metadata !DIExpression()), !dbg !14246
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14270
  %33 = load i32, i32* %32, align 4, !dbg !14270
  %34 = icmp eq i32 %33, -1, !dbg !14274
  br i1 %34, label %43, label %35, !dbg !14275

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14276
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14276
  %38 = icmp sgt i32 %33, 0, !dbg !14278
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14278
  %40 = zext i32 %39 to i64, !dbg !14278
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.142(i64 noundef %40) #26, !dbg !14278
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14279
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14279
  br label %43, !dbg !14280

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14281
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14241, metadata !DIExpression()), !dbg !14246
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14282
  br i1 %45, label %30, label %29, !dbg !14247, !llvm.loop !14284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.142(i64 noundef %0) unnamed_addr #11 !dbg !14286 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14288, metadata !DIExpression()), !dbg !14289
  call void @llvm.dbg.value(metadata i64 %0, metadata !14290, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i32 1000, metadata !14293, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i32 10000, metadata !14294, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i8 1, metadata !14295, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i8 0, metadata !14296, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i8 1, metadata !14297, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i8 0, metadata !14298, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i8 1, metadata !14299, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i8 0, metadata !14300, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i64 0, metadata !14301, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i64 0, metadata !14301, metadata !DIExpression()), !dbg !14305
  %2 = mul i64 %0, 10, !dbg !14307
  ret i64 %2, !dbg !14313
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14314 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14316, metadata !DIExpression()), !dbg !14320
  call void @llvm.dbg.value(metadata i8* %1, metadata !14317, metadata !DIExpression()), !dbg !14320
  call void @llvm.dbg.value(metadata i8* %2, metadata !14318, metadata !DIExpression()), !dbg !14320
  call void @llvm.dbg.value(metadata i8* %3, metadata !14319, metadata !DIExpression()), !dbg !14320
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14321
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14322
  %7 = load i8, i8* %6, align 4, !dbg !14323
  %8 = or i8 %7, 4, !dbg !14323
  store i8 %8, i8* %6, align 4, !dbg !14323
  tail call void @z_thread_essential_clear() #26, !dbg !14324
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !14325
  unreachable, !dbg !14325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !14326 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14330, metadata !DIExpression()), !dbg !14331
  ret i32 -134, !dbg !14332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14333 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14337, metadata !DIExpression()), !dbg !14339
  call void @llvm.dbg.value(metadata i32 %1, metadata !14338, metadata !DIExpression()), !dbg !14339
  ret i32 -134, !dbg !14340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !14341 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14348, metadata !DIExpression()), !dbg !14350
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14349, metadata !DIExpression()), !dbg !14350
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14351
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14353
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14350
  ret i32 %6, !dbg !14354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !14355 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14359, metadata !DIExpression()), !dbg !14360
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14361
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14360
  ret i32 %3, !dbg !14363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14364 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14366
  ret void, !dbg !14367
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14368 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14370, metadata !DIExpression()), !dbg !14373
  call void @llvm.dbg.value(metadata i8* %1, metadata !14371, metadata !DIExpression()), !dbg !14373
  call void @llvm.dbg.value(metadata i8* %2, metadata !14372, metadata !DIExpression()), !dbg !14373
  br label %4, !dbg !14374

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14375, !srcloc !14382
  call void @llvm.dbg.value(metadata i32 undef, metadata !14378, metadata !DIExpression()) #24, !dbg !14383
  call void @llvm.dbg.value(metadata i32 undef, metadata !14379, metadata !DIExpression()) #24, !dbg !14383
  tail call fastcc void @k_cpu_idle() #26, !dbg !14384
  br label %4, !dbg !14374, !llvm.loop !14385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14387 {
  tail call void @arch_cpu_idle() #25, !dbg !14388
  ret void, !dbg !14389
}

; Function Attrs: optsize
declare !dbg !14390 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14391 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14406, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.value(metadata i32 %1, metadata !14407, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.value(metadata i32 %2, metadata !14408, metadata !DIExpression()), !dbg !14409
  %4 = icmp eq i32 %2, 0, !dbg !14410
  %5 = icmp ugt i32 %1, %2, !dbg !14410
  %6 = or i1 %4, %5, !dbg !14410
  br i1 %6, label %11, label %7, !dbg !14410

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14412
  store i32 %1, i32* %8, align 4, !dbg !14413
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14414
  store i32 %2, i32* %9, align 4, !dbg !14415
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14416
  tail call fastcc void @z_waitq_init.147(%union.anon* noundef %10) #26, !dbg !14417
  br label %11, !dbg !14418

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !14409
  ret i32 %12, !dbg !14419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.147(%union.anon* noundef %0) unnamed_addr #4 !dbg !14420 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14425, metadata !DIExpression()), !dbg !14426
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14427
  tail call fastcc void @sys_dlist_init.148(%struct._dnode* noundef %2) #26, !dbg !14428
  ret void, !dbg !14429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.148(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14430 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14435, metadata !DIExpression()), !dbg !14436
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14437
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14438
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14439
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14440
  ret void, !dbg !14441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14442 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14446, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14533, metadata !DIExpression()) #24, !dbg !14540
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14542, !srcloc !14548
  call void @llvm.dbg.value(metadata i32 undef, metadata !14545, metadata !DIExpression()) #24, !dbg !14549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #24, !dbg !14549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()) #24, !dbg !14540
  call void @llvm.dbg.value(metadata i32 undef, metadata !14447, metadata !DIExpression()), !dbg !14532
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14550
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14551
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14452, metadata !DIExpression()), !dbg !14532
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14552
  br i1 %5, label %8, label %6, !dbg !14554

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14555, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.value(metadata i32 0, metadata !14560, metadata !DIExpression()), !dbg !14561
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 7, i32 1, !dbg !14564
  store i32 0, i32* %7, align 4, !dbg !14565
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #25, !dbg !14566
  br label %16, !dbg !14567

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14568
  %10 = load i32, i32* %9, align 4, !dbg !14568
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14570
  %12 = load i32, i32* %11, align 4, !dbg !14570
  %13 = icmp ne i32 %10, %12, !dbg !14571
  %14 = zext i1 %13 to i32, !dbg !14572
  %15 = add i32 %10, %14, !dbg !14573
  store i32 %15, i32* %9, align 4, !dbg !14573
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !14542
  call void @llvm.dbg.value(metadata i32 %17, metadata !14545, metadata !DIExpression()) #24, !dbg !14549
  call void @llvm.dbg.value(metadata i32 %17, metadata !14539, metadata !DIExpression()) #24, !dbg !14540
  call void @llvm.dbg.value(metadata i32 %17, metadata !14447, metadata !DIExpression()), !dbg !14532
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !14574
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #25, !dbg !14574
  ret void, !dbg !14575
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14576 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14585, metadata !DIExpression()), !dbg !14589
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14584, metadata !DIExpression()), !dbg !14589
  call void @llvm.dbg.value(metadata i32 0, metadata !14586, metadata !DIExpression()), !dbg !14589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14533, metadata !DIExpression()) #24, !dbg !14590
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14592, !srcloc !14548
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14592
  call void @llvm.dbg.value(metadata i32 %4, metadata !14545, metadata !DIExpression()) #24, !dbg !14594
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #24, !dbg !14594
  call void @llvm.dbg.value(metadata i32 %4, metadata !14539, metadata !DIExpression()) #24, !dbg !14590
  call void @llvm.dbg.value(metadata i32 %4, metadata !14587, metadata !DIExpression()), !dbg !14589
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14595
  %6 = load i32, i32* %5, align 4, !dbg !14595
  %7 = icmp eq i32 %6, 0, !dbg !14595
  br i1 %7, label %10, label %8, !dbg !14597, !prof !14598

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !14599
  store i32 %9, i32* %5, align 4, !dbg !14599
  call void @llvm.dbg.value(metadata i32 %4, metadata !14601, metadata !DIExpression()) #24, !dbg !14607
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14606, metadata !DIExpression()) #24, !dbg !14607
  call void @llvm.dbg.value(metadata i32 %4, metadata !14609, metadata !DIExpression()) #24, !dbg !14612
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14614, !srcloc !14615
  call void @llvm.dbg.value(metadata i32 0, metadata !14586, metadata !DIExpression()), !dbg !14589
  br label %18, !dbg !14616

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14585, metadata !DIExpression()), !dbg !14589
  %12 = icmp eq i64 %11, 0, !dbg !14617
  br i1 %12, label %13, label %14, !dbg !14619

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !14601, metadata !DIExpression()) #24, !dbg !14620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14606, metadata !DIExpression()) #24, !dbg !14620
  call void @llvm.dbg.value(metadata i32 %4, metadata !14609, metadata !DIExpression()) #24, !dbg !14623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14625, !srcloc !14615
  call void @llvm.dbg.value(metadata i32 -16, metadata !14586, metadata !DIExpression()), !dbg !14589
  br label %18, !dbg !14626

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14627
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !14628
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #25, !dbg !14628
  call void @llvm.dbg.value(metadata i32 %17, metadata !14586, metadata !DIExpression()), !dbg !14589
  br label %18, !dbg !14629

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !14589
  call void @llvm.dbg.value(metadata i32 %19, metadata !14586, metadata !DIExpression()), !dbg !14589
  call void @llvm.dbg.label(metadata !14588), !dbg !14630
  ret i32 %19, !dbg !14631
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14632 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14634, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14533, metadata !DIExpression()) #24, !dbg !14638
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14640, !srcloc !14548
  call void @llvm.dbg.value(metadata i32 undef, metadata !14545, metadata !DIExpression()) #24, !dbg !14642
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()) #24, !dbg !14642
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()) #24, !dbg !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()), !dbg !14637
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14643
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14635, metadata !DIExpression()), !dbg !14637
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14645
  br i1 %5, label %11, label %6, !dbg !14647

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14555, metadata !DIExpression()), !dbg !14648
  call void @llvm.dbg.value(metadata i32 -11, metadata !14560, metadata !DIExpression()), !dbg !14648
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !14650
  store i32 -11, i32* %8, align 4, !dbg !14651
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !14652
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14643
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14635, metadata !DIExpression()), !dbg !14637
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14645
  br i1 %10, label %11, label %6, !dbg !14647, !llvm.loop !14653

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !14640
  call void @llvm.dbg.value(metadata i32 %12, metadata !14545, metadata !DIExpression()) #24, !dbg !14642
  call void @llvm.dbg.value(metadata i32 %12, metadata !14539, metadata !DIExpression()) #24, !dbg !14638
  call void @llvm.dbg.value(metadata i32 %12, metadata !14636, metadata !DIExpression()), !dbg !14637
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14656
  store i32 0, i32* %13, align 4, !dbg !14657
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14658
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #25, !dbg !14658
  ret void, !dbg !14659
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14660 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14664, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14665, metadata !DIExpression()), !dbg !14668
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14669
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14669
  %5 = load i8, i8* %4, align 2, !dbg !14669
  call void @llvm.dbg.value(metadata i8 %5, metadata !14666, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14668
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14670
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14670
  %8 = load i8, i8* %7, align 2, !dbg !14670
  call void @llvm.dbg.value(metadata i8 %8, metadata !14667, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14668
  %9 = icmp eq i8 %8, %5, !dbg !14671
  %10 = sext i8 %5 to i32, !dbg !14673
  %11 = sext i8 %8 to i32, !dbg !14673
  %12 = sub nsw i32 %11, %10, !dbg !14673
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14673
  ret i32 %13, !dbg !14674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14675 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14679, metadata !DIExpression()), !dbg !14680
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !14681
  %3 = icmp eq i32 %2, 0, !dbg !14683
  br i1 %3, label %8, label %4, !dbg !14684

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14685
  %6 = add i32 %5, %2, !dbg !14687
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14688
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !14689
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14690
  br label %8, !dbg !14691

8:                                                ; preds = %4, %1
  ret void, !dbg !14692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14693 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14697, metadata !DIExpression()), !dbg !14699
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14700
  call void @llvm.dbg.value(metadata i32 %1, metadata !14698, metadata !DIExpression()), !dbg !14699
  ret i32 %1, !dbg !14701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14706, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.value(metadata i32 %1, metadata !14707, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.value(metadata i32 0, metadata !14708, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !14724
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14726, !srcloc !14732
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14726
  call void @llvm.dbg.value(metadata i32 %4, metadata !14729, metadata !DIExpression()) #24, !dbg !14733
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !14733
  call void @llvm.dbg.value(metadata i32 %4, metadata !14723, metadata !DIExpression()) #24, !dbg !14724
  call void @llvm.dbg.value(metadata i32 %4, metadata !14714, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()), !dbg !14716
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14734
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14737
  %6 = icmp sgt i32 %0, 0, !dbg !14738
  %7 = icmp sgt i32 %5, 2, !dbg !14740
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14740
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14740
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14741
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14742
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14743
  call void @llvm.dbg.value(metadata i32 %4, metadata !14744, metadata !DIExpression()) #24, !dbg !14750
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !14750
  call void @llvm.dbg.value(metadata i32 %4, metadata !14752, metadata !DIExpression()) #24, !dbg !14755
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14757, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 1, metadata !14708, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()), !dbg !14716
  ret void, !dbg !14759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14762, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata i32 %0, metadata !14764, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14779
  call void @llvm.dbg.value(metadata i32 1000, metadata !14767, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i32 10000, metadata !14768, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i8 1, metadata !14769, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i1 true, metadata !14770, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14779
  call void @llvm.dbg.value(metadata i1 true, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14779
  call void @llvm.dbg.value(metadata i8 0, metadata !14772, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i1 true, metadata !14773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14779
  call void @llvm.dbg.value(metadata i1 false, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14779
  call void @llvm.dbg.value(metadata i64 0, metadata !14775, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.value(metadata i64 0, metadata !14775, metadata !DIExpression()), !dbg !14779
  %2 = mul i32 %0, 10, !dbg !14781
  ret i32 %2, !dbg !14787
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14790, metadata !DIExpression()), !dbg !14792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !14793
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14795, !srcloc !14732
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14795
  call void @llvm.dbg.value(metadata i32 %3, metadata !14729, metadata !DIExpression()) #24, !dbg !14797
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !14797
  call void @llvm.dbg.value(metadata i32 %3, metadata !14723, metadata !DIExpression()) #24, !dbg !14793
  call void @llvm.dbg.value(metadata i32 %3, metadata !14791, metadata !DIExpression()), !dbg !14792
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14798
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14800
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14801
  br i1 %6, label %7, label %8, !dbg !14802

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14803
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #24, !dbg !14805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !14805
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #24, !dbg !14807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14809, !srcloc !14758
  br label %24, !dbg !14810

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14811
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !14812
  %10 = icmp eq i32 %9, 0, !dbg !14812
  br i1 %10, label %21, label %11, !dbg !14814

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !14815
  br i1 %12, label %13, label %21, !dbg !14816

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14817
  %15 = icmp sgt i32 %14, %0, !dbg !14820
  br i1 %15, label %19, label %16, !dbg !14821

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14822
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !14822
  call void @llvm.dbg.value(metadata i32 %18, metadata !14791, metadata !DIExpression()), !dbg !14792
  br label %22, !dbg !14824

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14825
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14825
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14827
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14792
  call void @llvm.dbg.value(metadata i32 %23, metadata !14791, metadata !DIExpression()), !dbg !14792
  call void @llvm.dbg.value(metadata i32 %23, metadata !14744, metadata !DIExpression()) #24, !dbg !14829
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !14829
  call void @llvm.dbg.value(metadata i32 %23, metadata !14752, metadata !DIExpression()) #24, !dbg !14831
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !14833, !srcloc !14758
  br label %24, !dbg !14834

24:                                               ; preds = %22, %7
  ret void, !dbg !14834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14835 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14839, metadata !DIExpression()), !dbg !14841
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14842
  %3 = icmp eq i32 %2, 0, !dbg !14842
  br i1 %3, label %16, label %4, !dbg !14843

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14844
  br i1 %5, label %16, label %6, !dbg !14845

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14846
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14846
  %9 = load i8, i8* %8, align 2, !dbg !14846
  %10 = sext i8 %9 to i32, !dbg !14847
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14848
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14849
  br i1 %12, label %16, label %13, !dbg !14850

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14851
  %15 = xor i1 %14, true, !dbg !14852
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14841
  call void @llvm.dbg.value(metadata i1 %17, metadata !14840, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14841
  ret i1 %17, !dbg !14853
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14854 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14858, metadata !DIExpression()), !dbg !14860
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14861
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14859, metadata !DIExpression()), !dbg !14860
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14862
  br i1 %3, label %5, label %4, !dbg !14864

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14865
  br label %5, !dbg !14867

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14858, metadata !DIExpression()), !dbg !14860
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14868
  ret i32 %6, !dbg !14869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14872, metadata !DIExpression()), !dbg !14874
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14875
  %3 = load i8, i8* %2, align 1, !dbg !14875
  call void @llvm.dbg.value(metadata i8 %3, metadata !14873, metadata !DIExpression()), !dbg !14874
  %4 = and i8 %3, 31, !dbg !14876
  %5 = icmp ne i8 %4, 0, !dbg !14877
  ret i1 %5, !dbg !14878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14881, metadata !DIExpression()), !dbg !14882
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14883
  br i1 %2, label %3, label %7, !dbg !14885

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #24, !dbg !14889
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14892
  %5 = load i8, i8* %4, align 1, !dbg !14893
  %6 = and i8 %5, 127, !dbg !14893
  store i8 %6, i8* %4, align 1, !dbg !14893
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14894, metadata !DIExpression()) #24, !dbg !14897
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14901
  br label %7, !dbg !14902

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14903, metadata !DIExpression()) #24, !dbg !14906
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14908
  %9 = load i8, i8* %8, align 1, !dbg !14909
  %10 = or i8 %9, -128, !dbg !14909
  store i8 %10, i8* %8, align 1, !dbg !14909
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14910, metadata !DIExpression()) #24, !dbg !14913
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14917, metadata !DIExpression()) #24, !dbg !14925
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()) #24, !dbg !14925
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14927
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14924, metadata !DIExpression()) #24, !dbg !14925
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14929
  br i1 %12, label %23, label %13, !dbg !14927

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14924, metadata !DIExpression()) #24, !dbg !14925
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14931
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14924, metadata !DIExpression()) #24, !dbg !14925
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14932
  %17 = icmp sgt i32 %16, 0, !dbg !14935
  br i1 %17, label %18, label %20, !dbg !14936

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14937
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !14939
  br label %25, !dbg !14940

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14929
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14924, metadata !DIExpression()) #24, !dbg !14925
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14929
  br i1 %22, label %23, label %13, !dbg !14927, !llvm.loop !14941

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14943
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !14944
  br label %25, !dbg !14945

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14946
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14947
  %28 = zext i1 %27 to i32, !dbg !14947
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !14948
  ret void, !dbg !14949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14950 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14952, metadata !DIExpression()), !dbg !14953
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !14954
  ret i1 %2, !dbg !14955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14956 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14958, metadata !DIExpression()), !dbg !14960
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14959, metadata !DIExpression()), !dbg !14960
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14961
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !14962
  ret void, !dbg !14963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14964 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14968, metadata !DIExpression()), !dbg !14969
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14970
  br i1 %2, label %6, label %3, !dbg !14970

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14971
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14971
  br label %6, !dbg !14970

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14970
  ret %struct._dnode* %7, !dbg !14972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14973 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14977, metadata !DIExpression()), !dbg !14981
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14978, metadata !DIExpression()), !dbg !14981
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14982
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14982
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14979, metadata !DIExpression()), !dbg !14981
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14983
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14984
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14985
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14986
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14987
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14988
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14989
  ret void, !dbg !14990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14991 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14995, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14996, metadata !DIExpression()), !dbg !14997
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14998
  br i1 %3, label %6, label %4, !dbg !14999

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15000
  br label %6, !dbg !14999

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14999
  ret %struct._dnode* %7, !dbg !15001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15002 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15006, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15007, metadata !DIExpression()), !dbg !15009
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15010
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15010
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15008, metadata !DIExpression()), !dbg !15009
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15011
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15012
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15013
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15014
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15015
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15016
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15017
  ret void, !dbg !15018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15021, metadata !DIExpression()), !dbg !15023
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15024
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15031, metadata !DIExpression()) #24, !dbg !15033
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15034
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15035
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15035
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15022, metadata !DIExpression()), !dbg !15023
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15036, metadata !DIExpression()) #24, !dbg !15042
  call void @llvm.dbg.value(metadata i32 %0, metadata !15041, metadata !DIExpression()) #24, !dbg !15042
  %6 = icmp eq i32 %0, 0, !dbg !15045
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15047
  br i1 %6, label %8, label %15, !dbg !15048

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15049
  br i1 %9, label %15, label %10, !dbg !15051

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15052
  br i1 %11, label %15, label %12, !dbg !15054

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15055
  %14 = icmp eq i32 %13, 0, !dbg !15055
  br i1 %14, label %18, label %15, !dbg !15057

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15058
  br i1 %16, label %18, label %17, !dbg !15061

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15062
  br label %18, !dbg !15064

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15047
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15047
  ret void, !dbg !15065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !15066 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15070, metadata !DIExpression()), !dbg !15073
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15071, metadata !DIExpression()), !dbg !15073
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !15074
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15072, metadata !DIExpression()), !dbg !15073
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15071, metadata !DIExpression()), !dbg !15073
  ret %struct.k_thread* %3, !dbg !15075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15076 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15078, metadata !DIExpression()), !dbg !15079
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15080
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15081
  %4 = xor i1 %3, true, !dbg !15082
  ret i1 %4, !dbg !15083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15086, metadata !DIExpression()), !dbg !15087
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15088
  %3 = load i16, i16* %2, align 2, !dbg !15088
  %4 = icmp ult i16 %3, 128, !dbg !15089
  %5 = zext i1 %4 to i32, !dbg !15089
  ret i32 %5, !dbg !15090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15091 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15097, metadata !DIExpression()), !dbg !15098
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15099
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15100
  %4 = xor i1 %3, true, !dbg !15101
  ret i1 %4, !dbg !15102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15103 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15109, metadata !DIExpression()), !dbg !15110
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15111
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15111
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15112
  ret i1 %4, !dbg !15113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15114 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15116, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15117, metadata !DIExpression()), !dbg !15118
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15119
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15119
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15120
  br i1 %5, label %9, label %6, !dbg !15121

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15122
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15122
  br label %9, !dbg !15121

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15121
  ret %struct._dnode* %10, !dbg !15123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15124 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15128, metadata !DIExpression()), !dbg !15129
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15130
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15130
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15131
  ret i1 %4, !dbg !15132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !15133 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15137, metadata !DIExpression()), !dbg !15140
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15141
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15141
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15138, metadata !DIExpression()), !dbg !15140
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15142
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15142
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15139, metadata !DIExpression()), !dbg !15140
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15143
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15144
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15145
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15146
  tail call fastcc void @sys_dnode_init.153(%struct._dnode* noundef %0) #26, !dbg !15147
  ret void, !dbg !15148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.153(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15149 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15151, metadata !DIExpression()), !dbg !15152
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15153
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15154
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15155
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15156
  ret void, !dbg !15157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15158 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15162, metadata !DIExpression()), !dbg !15164
  call void @llvm.dbg.value(metadata i32 128, metadata !15163, metadata !DIExpression()), !dbg !15164
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15165
  %3 = load i8, i8* %2, align 1, !dbg !15165
  %4 = icmp slt i8 %3, 0, !dbg !15166
  ret i1 %4, !dbg !15167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15172, metadata !DIExpression()), !dbg !15174
  call void @llvm.dbg.value(metadata i32 %1, metadata !15173, metadata !DIExpression()), !dbg !15174
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15175
  ret i1 %3, !dbg !15176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !15177 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15179, metadata !DIExpression()), !dbg !15180
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15181
  ret i1 %2, !dbg !15182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15185, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.value(metadata i32 %1, metadata !15186, metadata !DIExpression()), !dbg !15187
  %3 = icmp slt i32 %0, %1, !dbg !15188
  ret i1 %3, !dbg !15189
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15190 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15192, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata i32 0, metadata !15193, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15198
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15200, !srcloc !14732
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15200
  call void @llvm.dbg.value(metadata i32 %3, metadata !14729, metadata !DIExpression()) #24, !dbg !15202
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15202
  call void @llvm.dbg.value(metadata i32 %3, metadata !14723, metadata !DIExpression()) #24, !dbg !15198
  call void @llvm.dbg.value(metadata i32 %3, metadata !15195, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 undef, metadata !15193, metadata !DIExpression()), !dbg !15197
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15203
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #24, !dbg !15208
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15208
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #24, !dbg !15210
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15212, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 1, metadata !15193, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 undef, metadata !15193, metadata !DIExpression()), !dbg !15197
  ret void, !dbg !15213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15214 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15216, metadata !DIExpression()), !dbg !15217
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15218
  br i1 %2, label %24, label %3, !dbg !15220

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15221
  br i1 %4, label %5, label %24, !dbg !15222

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14903, metadata !DIExpression()) #24, !dbg !15223
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15226
  %7 = load i8, i8* %6, align 1, !dbg !15227
  %8 = or i8 %7, -128, !dbg !15227
  store i8 %8, i8* %6, align 1, !dbg !15227
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14910, metadata !DIExpression()) #24, !dbg !15228
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14917, metadata !DIExpression()) #24, !dbg !15230
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()) #24, !dbg !15230
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15232
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14924, metadata !DIExpression()) #24, !dbg !15230
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15233
  br i1 %10, label %21, label %11, !dbg !15232

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14924, metadata !DIExpression()) #24, !dbg !15230
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15234
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14924, metadata !DIExpression()) #24, !dbg !15230
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15235
  %15 = icmp sgt i32 %14, 0, !dbg !15236
  br i1 %15, label %16, label %18, !dbg !15237

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15238
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15239
  br label %23, !dbg !15240

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15233
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14924, metadata !DIExpression()) #24, !dbg !15230
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15233
  br i1 %20, label %21, label %11, !dbg !15232, !llvm.loop !15241

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15243
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15244
  br label %23, !dbg !15245

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15246
  br label %24, !dbg !15247

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15249 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15251, metadata !DIExpression()), !dbg !15252
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15253
  br i1 %2, label %6, label %3, !dbg !15254

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15255
  %5 = xor i1 %4, true, !dbg !15254
  br label %6, !dbg !15254

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15259, metadata !DIExpression()), !dbg !15263
  call void @llvm.dbg.value(metadata i32 0, metadata !15260, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15265
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15267, !srcloc !14732
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15267
  call void @llvm.dbg.value(metadata i32 %3, metadata !14729, metadata !DIExpression()) #24, !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15269
  call void @llvm.dbg.value(metadata i32 %3, metadata !14723, metadata !DIExpression()) #24, !dbg !15265
  call void @llvm.dbg.value(metadata i32 %3, metadata !15262, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata i32 undef, metadata !15260, metadata !DIExpression()), !dbg !15264
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15270
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #24, !dbg !15273
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15273
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #24, !dbg !15275
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15277, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 1, metadata !15260, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata i32 undef, metadata !15260, metadata !DIExpression()), !dbg !15264
  ret void, !dbg !15278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15281, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15284
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15286, !srcloc !14732
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15286
  call void @llvm.dbg.value(metadata i32 %3, metadata !14729, metadata !DIExpression()) #24, !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15288
  call void @llvm.dbg.value(metadata i32 %3, metadata !14723, metadata !DIExpression()) #24, !dbg !15284
  call void @llvm.dbg.value(metadata i32 %3, metadata !15282, metadata !DIExpression()), !dbg !15283
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15289
  br i1 %4, label %5, label %6, !dbg !15291

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #24, !dbg !15292
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15292
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #24, !dbg !15295
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15297, !srcloc !14758
  br label %8, !dbg !15298

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.158(%struct.k_thread* noundef %0) #26, !dbg !15299
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15300
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15301
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15301
  br label %8, !dbg !15302

8:                                                ; preds = %6, %5
  ret void, !dbg !15302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15305, metadata !DIExpression()), !dbg !15306
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15307
  %3 = load i8, i8* %2, align 1, !dbg !15307
  %4 = and i8 %3, 4, !dbg !15308
  %5 = icmp eq i8 %4, 0, !dbg !15309
  ret i1 %5, !dbg !15310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.158(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15311 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15313, metadata !DIExpression()), !dbg !15314
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15315
  %3 = load i8, i8* %2, align 1, !dbg !15316
  %4 = and i8 %3, -5, !dbg !15316
  store i8 %4, i8* %2, align 1, !dbg !15316
  ret void, !dbg !15317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15318 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15321, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15320, metadata !DIExpression()), !dbg !15322
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !15323
  br i1 %4, label %5, label %9, !dbg !15325

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !15326
  br i1 %6, label %7, label %9, !dbg !15327

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15328, metadata !DIExpression()) #24, !dbg !15334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15333, metadata !DIExpression()) #24, !dbg !15334
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15337
  br label %10, !dbg !15338

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #24, !dbg !15339
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15339
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #24, !dbg !15342
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15344, !srcloc !14758
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15350, metadata !DIExpression()), !dbg !15351
  call void @llvm.dbg.value(metadata i32 %0, metadata !15352, metadata !DIExpression()), !dbg !15357
  %2 = icmp eq i32 %0, 0, !dbg !15359
  br i1 %2, label %3, label %6, !dbg !15360

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15361, !srcloc !15368
  call void @llvm.dbg.value(metadata i32 %4, metadata !15364, metadata !DIExpression()) #24, !dbg !15369
  %5 = icmp eq i32 %4, 0, !dbg !15370
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15351
  ret i1 %7, !dbg !15371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15372 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15375
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15374, metadata !DIExpression()), !dbg !15376
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15377
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15378
  ret i1 %3, !dbg !15379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15382, metadata !DIExpression()), !dbg !15384
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15385
  call void @llvm.dbg.value(metadata i32 %2, metadata !15383, metadata !DIExpression()), !dbg !15384
  ret i32 %2, !dbg !15386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15387 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15389, metadata !DIExpression()), !dbg !15393
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15394
  call void @llvm.dbg.value(metadata i32 0, metadata !15390, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15396
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15398, !srcloc !14732
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15398
  call void @llvm.dbg.value(metadata i32 %4, metadata !14729, metadata !DIExpression()) #24, !dbg !15400
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15400
  call void @llvm.dbg.value(metadata i32 %4, metadata !14723, metadata !DIExpression()) #24, !dbg !15396
  call void @llvm.dbg.value(metadata i32 %4, metadata !15392, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()), !dbg !15395
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15401
  br i1 %5, label %6, label %10, !dbg !15405

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #24, !dbg !15406
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15409
  %8 = load i8, i8* %7, align 1, !dbg !15410
  %9 = and i8 %8, 127, !dbg !15410
  store i8 %9, i8* %7, align 1, !dbg !15410
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14894, metadata !DIExpression()) #24, !dbg !15411
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15413
  br label %10, !dbg !15414

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !15415
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15416
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15417
  %13 = zext i1 %12 to i32, !dbg !15417
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !15418
  call void @llvm.dbg.value(metadata i32 %4, metadata !14744, metadata !DIExpression()) #24, !dbg !15419
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15419
  call void @llvm.dbg.value(metadata i32 %4, metadata !14752, metadata !DIExpression()) #24, !dbg !15421
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15423, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 1, metadata !15390, metadata !DIExpression()), !dbg !15395
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()), !dbg !15395
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15424
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15426
  br i1 %15, label %16, label %17, !dbg !15427

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15428
  br label %17, !dbg !15430

17:                                               ; preds = %16, %10
  ret void, !dbg !15431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15434, metadata !DIExpression()), !dbg !15435
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15436
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15437
  ret i32 %3, !dbg !15438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15439 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15441, metadata !DIExpression()), !dbg !15442
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15443
  %3 = load i8, i8* %2, align 1, !dbg !15444
  %4 = or i8 %3, 16, !dbg !15444
  store i8 %4, i8* %2, align 1, !dbg !15444
  ret void, !dbg !15445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15446 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15447, !srcloc !14732
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15447
  call void @llvm.dbg.value(metadata i32 %2, metadata !14729, metadata !DIExpression()) #24, !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15449
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !15450
  ret void, !dbg !15451
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15454, metadata !DIExpression()), !dbg !15455
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !15456
  br i1 %2, label %3, label %5, !dbg !15458

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15459
  br label %6, !dbg !15461

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14752, metadata !DIExpression()) #24, !dbg !15462
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !15465, !srcloc !14758
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15467 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15469, metadata !DIExpression()), !dbg !15471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15472
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15474, !srcloc !14732
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15474
  call void @llvm.dbg.value(metadata i32 %3, metadata !14729, metadata !DIExpression()) #24, !dbg !15476
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15476
  call void @llvm.dbg.value(metadata i32 %3, metadata !14723, metadata !DIExpression()) #24, !dbg !15472
  call void @llvm.dbg.value(metadata i32 %3, metadata !15470, metadata !DIExpression()), !dbg !15471
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !15477
  br i1 %4, label %6, label %5, !dbg !15479

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #24, !dbg !15480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15480
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #24, !dbg !15483
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15485, !srcloc !14758
  br label %8, !dbg !15486

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15487
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15488
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15489
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15489
  br label %8, !dbg !15490

8:                                                ; preds = %6, %5
  ret void, !dbg !15490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15493, metadata !DIExpression()), !dbg !15494
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15495
  %3 = load i8, i8* %2, align 1, !dbg !15495
  %4 = and i8 %3, 16, !dbg !15496
  %5 = icmp ne i8 %4, 0, !dbg !15497
  ret i1 %5, !dbg !15498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15499 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15501, metadata !DIExpression()), !dbg !15502
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15503
  %3 = load i8, i8* %2, align 1, !dbg !15504
  %4 = and i8 %3, -17, !dbg !15504
  store i8 %4, i8* %2, align 1, !dbg !15504
  ret void, !dbg !15505
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15506 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15516, metadata !DIExpression()), !dbg !15520
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15514, metadata !DIExpression()), !dbg !15520
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15515, metadata !DIExpression()), !dbg !15520
  call void @llvm.dbg.value(metadata i32 0, metadata !15517, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15522
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15524, !srcloc !14732
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15524
  call void @llvm.dbg.value(metadata i32 %5, metadata !14729, metadata !DIExpression()) #24, !dbg !15526
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15526
  call void @llvm.dbg.value(metadata i32 %5, metadata !14723, metadata !DIExpression()) #24, !dbg !15522
  call void @llvm.dbg.value(metadata i32 %5, metadata !15519, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata i32 undef, metadata !15517, metadata !DIExpression()), !dbg !15521
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15527
  call void @llvm.dbg.value(metadata i32 %5, metadata !14744, metadata !DIExpression()) #24, !dbg !15530
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15530
  call void @llvm.dbg.value(metadata i32 %5, metadata !14752, metadata !DIExpression()) #24, !dbg !15532
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !15534, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 1, metadata !15517, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata i32 undef, metadata !15517, metadata !DIExpression()), !dbg !15521
  ret void, !dbg !15535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15536 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15540, metadata !DIExpression()), !dbg !15541
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15538, metadata !DIExpression()), !dbg !15541
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15539, metadata !DIExpression()), !dbg !15541
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !15542
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !15543
  ret void, !dbg !15544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15545 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15549, metadata !DIExpression()), !dbg !15551
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15550, metadata !DIExpression()), !dbg !15551
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !15552
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !15553
  %3 = icmp eq %union.anon* %1, null, !dbg !15554
  br i1 %3, label %21, label %4, !dbg !15556

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15557
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15559
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15560
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14917, metadata !DIExpression()) #24, !dbg !15561
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()) #24, !dbg !15561
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15563
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14924, metadata !DIExpression()) #24, !dbg !15561
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15564
  br i1 %8, label %19, label %9, !dbg !15563

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14924, metadata !DIExpression()) #24, !dbg !15561
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15565
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14924, metadata !DIExpression()) #24, !dbg !15561
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15566
  %13 = icmp sgt i32 %12, 0, !dbg !15567
  br i1 %13, label %14, label %16, !dbg !15568

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15569
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15570
  br label %21, !dbg !15571

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15564
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14924, metadata !DIExpression()) #24, !dbg !15561
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15564
  br i1 %18, label %19, label %9, !dbg !15563, !llvm.loop !15572

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15574
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15575
  br label %21, !dbg !15576

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15578 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15583, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15582, metadata !DIExpression()), !dbg !15584
  %4 = icmp eq i64 %3, -1, !dbg !15585
  br i1 %4, label %6, label %5, !dbg !15587

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.161(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15588
  br label %6, !dbg !15590

6:                                                ; preds = %5, %2
  ret void, !dbg !15591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.161(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15592 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15595, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15594, metadata !DIExpression()), !dbg !15596
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15597
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15598
  ret void, !dbg !15599
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15600 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15602, metadata !DIExpression()), !dbg !15610
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15611
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15611
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15603, metadata !DIExpression()), !dbg !15610
  call void @llvm.dbg.value(metadata i32 0, metadata !15604, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15613
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15615, !srcloc !14732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #24, !dbg !15617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14723, metadata !DIExpression()) #24, !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !15606, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !15604, metadata !DIExpression()), !dbg !15612
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15618
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15619
  %7 = load i8, i8* %6, align 1, !dbg !15619
  %8 = and i8 %7, 40, !dbg !15620
  %9 = icmp eq i8 %8, 0, !dbg !15620
  call void @llvm.dbg.value(metadata i1 %9, metadata !15607, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15621
  br i1 %9, label %10, label %17, !dbg !15622

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15623
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15623
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15623
  %14 = icmp eq %union.anon* %13, null, !dbg !15627
  br i1 %14, label %16, label %15, !dbg !15628

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15629
  br label %16, !dbg !15631

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.158(%struct.k_thread* noundef nonnull %3) #26, !dbg !15632
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15633
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15634
  br label %17, !dbg !15635

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15615
  call void @llvm.dbg.value(metadata i32 %18, metadata !14729, metadata !DIExpression()) #24, !dbg !15617
  call void @llvm.dbg.value(metadata i32 %18, metadata !14723, metadata !DIExpression()) #24, !dbg !15613
  call void @llvm.dbg.value(metadata i32 %18, metadata !15606, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #24, !dbg !15636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15636
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()) #24, !dbg !15638
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !15640, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 1, metadata !15604, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !15604, metadata !DIExpression()), !dbg !15612
  ret void, !dbg !15641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15644, metadata !DIExpression()), !dbg !15645
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15646
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15647
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15648
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15649
  ret void, !dbg !15650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15651 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15653, metadata !DIExpression()), !dbg !15654
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15655
  %3 = load i8, i8* %2, align 1, !dbg !15656
  %4 = and i8 %3, -3, !dbg !15656
  store i8 %4, i8* %2, align 1, !dbg !15656
  ret void, !dbg !15657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15658 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15660, metadata !DIExpression()), !dbg !15661
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15662
  br i1 %2, label %3, label %7, !dbg !15664

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #24, !dbg !15665
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15668
  %5 = load i8, i8* %4, align 1, !dbg !15669
  %6 = and i8 %5, 127, !dbg !15669
  store i8 %6, i8* %4, align 1, !dbg !15669
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14894, metadata !DIExpression()) #24, !dbg !15670
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15672
  br label %7, !dbg !15673

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15674
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15675
  %10 = zext i1 %9 to i32, !dbg !15675
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15676
  ret void, !dbg !15677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15678 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15680, metadata !DIExpression()), !dbg !15681
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15682
  %3 = load i8, i8* %2, align 1, !dbg !15683
  %4 = or i8 %3, 2, !dbg !15683
  store i8 %4, i8* %2, align 1, !dbg !15683
  ret void, !dbg !15684
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15685 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15687, metadata !DIExpression()), !dbg !15691
  call void @llvm.dbg.value(metadata i32 0, metadata !15688, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15693
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15695, !srcloc !14732
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15695
  call void @llvm.dbg.value(metadata i32 %3, metadata !14729, metadata !DIExpression()) #24, !dbg !15697
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15697
  call void @llvm.dbg.value(metadata i32 %3, metadata !14723, metadata !DIExpression()) #24, !dbg !15693
  call void @llvm.dbg.value(metadata i32 %3, metadata !15690, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata i32 undef, metadata !15688, metadata !DIExpression()), !dbg !15692
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15698
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #24, !dbg !15701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15701
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #24, !dbg !15703
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15705, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 1, metadata !15688, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata i32 undef, metadata !15688, metadata !DIExpression()), !dbg !15692
  ret void, !dbg !15706
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15707 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15713, metadata !DIExpression()), !dbg !15718
  call void @llvm.dbg.value(metadata i32 %0, metadata !15711, metadata !DIExpression()), !dbg !15718
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15712, metadata !DIExpression()), !dbg !15718
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15719
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15720
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15721
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15722
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15723
  call void @llvm.dbg.value(metadata i32 %6, metadata !15714, metadata !DIExpression()), !dbg !15718
  call void @llvm.dbg.value(metadata i32 0, metadata !15715, metadata !DIExpression()), !dbg !15724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15725
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15727, !srcloc !14732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #24, !dbg !15729
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15729
  call void @llvm.dbg.value(metadata i32 undef, metadata !14723, metadata !DIExpression()) #24, !dbg !15725
  call void @llvm.dbg.value(metadata i32 undef, metadata !15717, metadata !DIExpression()), !dbg !15724
  call void @llvm.dbg.value(metadata i32 undef, metadata !15715, metadata !DIExpression()), !dbg !15724
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15730
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15734
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15735
  br i1 %10, label %11, label %12, !dbg !15736

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15737
  br label %12, !dbg !15739

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15727
  call void @llvm.dbg.value(metadata i32 %13, metadata !14729, metadata !DIExpression()) #24, !dbg !15729
  call void @llvm.dbg.value(metadata i32 %13, metadata !14723, metadata !DIExpression()) #24, !dbg !15725
  call void @llvm.dbg.value(metadata i32 %13, metadata !15717, metadata !DIExpression()), !dbg !15724
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #24, !dbg !15740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()) #24, !dbg !15742
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !15744, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 1, metadata !15715, metadata !DIExpression()), !dbg !15724
  call void @llvm.dbg.value(metadata i32 undef, metadata !15715, metadata !DIExpression()), !dbg !15724
  ret i32 %6, !dbg !15745
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15746 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15751, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.value(metadata i64 undef, metadata !15753, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15750, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15752, metadata !DIExpression()), !dbg !15754
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15755
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15756
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15757
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15759, !srcloc !14732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #24, !dbg !15761
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15761
  call void @llvm.dbg.value(metadata i32 undef, metadata !14723, metadata !DIExpression()) #24, !dbg !15757
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15762
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15763
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15328, metadata !DIExpression()) #24, !dbg !15764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15333, metadata !DIExpression()) #24, !dbg !15764
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15766
  ret i32 %9, !dbg !15767
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15768 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15772, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15773, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.value(metadata i32 0, metadata !15774, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15779
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15781, !srcloc !14732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #24, !dbg !15783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14723, metadata !DIExpression()) #24, !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !15776, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15773, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.value(metadata i32 undef, metadata !15774, metadata !DIExpression()), !dbg !15778
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15784
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15773, metadata !DIExpression()), !dbg !15777
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15787
  br i1 %5, label %7, label %6, !dbg !15789

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15790
  br label %7, !dbg !15792

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15781
  call void @llvm.dbg.value(metadata i32 %8, metadata !14729, metadata !DIExpression()) #24, !dbg !15783
  call void @llvm.dbg.value(metadata i32 %8, metadata !14723, metadata !DIExpression()) #24, !dbg !15779
  call void @llvm.dbg.value(metadata i32 %8, metadata !15776, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #24, !dbg !15793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()) #24, !dbg !15795
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15797, !srcloc !14758
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15773, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.value(metadata i32 undef, metadata !15774, metadata !DIExpression()), !dbg !15778
  ret %struct.k_thread* %4, !dbg !15798
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15799 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15801, metadata !DIExpression()), !dbg !15806
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15802, metadata !DIExpression()), !dbg !15806
  call void @llvm.dbg.value(metadata i32 0, metadata !15803, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15808
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15810, !srcloc !14732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #24, !dbg !15812
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15812
  call void @llvm.dbg.value(metadata i32 undef, metadata !14723, metadata !DIExpression()) #24, !dbg !15808
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15802, metadata !DIExpression()), !dbg !15806
  call void @llvm.dbg.value(metadata i32 undef, metadata !15803, metadata !DIExpression()), !dbg !15807
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15813
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15802, metadata !DIExpression()), !dbg !15806
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15816
  br i1 %5, label %8, label %6, !dbg !15818

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15819
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15821
  br label %8, !dbg !15822

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15810
  call void @llvm.dbg.value(metadata i32 %9, metadata !14729, metadata !DIExpression()) #24, !dbg !15812
  call void @llvm.dbg.value(metadata i32 %9, metadata !14723, metadata !DIExpression()) #24, !dbg !15808
  call void @llvm.dbg.value(metadata i32 %9, metadata !15805, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #24, !dbg !15823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()) #24, !dbg !15825
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15827, !srcloc !14758
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15802, metadata !DIExpression()), !dbg !15806
  call void @llvm.dbg.value(metadata i32 undef, metadata !15803, metadata !DIExpression()), !dbg !15807
  ret %struct.k_thread* %4, !dbg !15828
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15829 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15831, metadata !DIExpression()), !dbg !15832
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15687, metadata !DIExpression()) #24, !dbg !15833
  call void @llvm.dbg.value(metadata i32 0, metadata !15688, metadata !DIExpression()) #24, !dbg !15835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15836
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15838, !srcloc !14732
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15838
  call void @llvm.dbg.value(metadata i32 %3, metadata !14729, metadata !DIExpression()) #24, !dbg !15840
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15840
  call void @llvm.dbg.value(metadata i32 %3, metadata !14723, metadata !DIExpression()) #24, !dbg !15836
  call void @llvm.dbg.value(metadata i32 %3, metadata !15690, metadata !DIExpression()) #24, !dbg !15835
  call void @llvm.dbg.value(metadata i32 undef, metadata !15688, metadata !DIExpression()) #24, !dbg !15835
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15841
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #24, !dbg !15842
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15842
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #24, !dbg !15844
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15846, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 1, metadata !15688, metadata !DIExpression()) #24, !dbg !15835
  call void @llvm.dbg.value(metadata i32 undef, metadata !15688, metadata !DIExpression()) #24, !dbg !15835
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15847
  ret void, !dbg !15848
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15849 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15851, metadata !DIExpression()), !dbg !15857
  call void @llvm.dbg.value(metadata i32 %1, metadata !15852, metadata !DIExpression()), !dbg !15857
  call void @llvm.dbg.value(metadata i8 0, metadata !15853, metadata !DIExpression()), !dbg !15857
  call void @llvm.dbg.value(metadata i32 0, metadata !15854, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15859
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15861, !srcloc !14732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #24, !dbg !15863
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15863
  call void @llvm.dbg.value(metadata i32 undef, metadata !14723, metadata !DIExpression()) #24, !dbg !15859
  call void @llvm.dbg.value(metadata i32 undef, metadata !15856, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i8 poison, metadata !15853, metadata !DIExpression()), !dbg !15857
  call void @llvm.dbg.value(metadata i32 undef, metadata !15854, metadata !DIExpression()), !dbg !15858
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15864
  call void @llvm.dbg.value(metadata i1 %6, metadata !15853, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15857
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15867

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #24, !dbg !15868
  %11 = load i8, i8* %4, align 1, !dbg !15874
  %12 = and i8 %11, 127, !dbg !15874
  store i8 %12, i8* %4, align 1, !dbg !15874
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14894, metadata !DIExpression()) #24, !dbg !15875
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15877
  store i8 %9, i8* %8, align 2, !dbg !15878
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14903, metadata !DIExpression()) #24, !dbg !15879
  %13 = load i8, i8* %4, align 1, !dbg !15881
  %14 = or i8 %13, -128, !dbg !15881
  store i8 %14, i8* %4, align 1, !dbg !15881
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14910, metadata !DIExpression()) #24, !dbg !15882
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14917, metadata !DIExpression()) #24, !dbg !15884
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()) #24, !dbg !15884
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15886
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14924, metadata !DIExpression()) #24, !dbg !15884
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15887
  br i1 %16, label %26, label %17, !dbg !15886

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14924, metadata !DIExpression()) #24, !dbg !15884
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15888
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14924, metadata !DIExpression()) #24, !dbg !15884
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15889
  %21 = icmp sgt i32 %20, 0, !dbg !15890
  br i1 %21, label %22, label %23, !dbg !15891

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15892
  br label %27, !dbg !15893

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15887
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14924, metadata !DIExpression()) #24, !dbg !15884
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15887
  br i1 %25, label %26, label %17, !dbg !15886, !llvm.loop !15894

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15896
  br label %27, !dbg !15897

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15898
  br label %29, !dbg !15899

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15900
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15861
  call void @llvm.dbg.value(metadata i32 %30, metadata !14729, metadata !DIExpression()) #24, !dbg !15863
  call void @llvm.dbg.value(metadata i32 %30, metadata !14723, metadata !DIExpression()) #24, !dbg !15859
  call void @llvm.dbg.value(metadata i32 %30, metadata !15856, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #24, !dbg !15902
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()) #24, !dbg !15904
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !15906, !srcloc !14758
  call void @llvm.dbg.value(metadata i8 poison, metadata !15853, metadata !DIExpression()), !dbg !15857
  call void @llvm.dbg.value(metadata i32 undef, metadata !15854, metadata !DIExpression()), !dbg !15858
  ret i1 %6, !dbg !15907
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15908 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15912, metadata !DIExpression()), !dbg !15915
  call void @llvm.dbg.value(metadata i32 %1, metadata !15913, metadata !DIExpression()), !dbg !15915
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15916
  call void @llvm.dbg.value(metadata i1 %3, metadata !15914, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15915
  br i1 %3, label %4, label %12, !dbg !15917

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15919
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15920
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15920
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15920
  %9 = load i8, i8* %8, align 1, !dbg !15920
  %10 = icmp eq i8 %9, 0, !dbg !15921
  br i1 %10, label %11, label %12, !dbg !15922

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15923
  br label %12, !dbg !15925

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15926
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15927 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15929, metadata !DIExpression()), !dbg !15932
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15933
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15935, !srcloc !14732
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15935
  call void @llvm.dbg.value(metadata i32 %2, metadata !14729, metadata !DIExpression()) #24, !dbg !15937
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15937
  call void @llvm.dbg.value(metadata i32 %2, metadata !14723, metadata !DIExpression()) #24, !dbg !15933
  call void @llvm.dbg.value(metadata i32 %2, metadata !15931, metadata !DIExpression()), !dbg !15932
  call void @llvm.dbg.value(metadata i32 undef, metadata !15929, metadata !DIExpression()), !dbg !15932
  tail call fastcc void @z_sched_lock() #26, !dbg !15938
  call void @llvm.dbg.value(metadata i32 %2, metadata !14744, metadata !DIExpression()) #24, !dbg !15941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15941
  call void @llvm.dbg.value(metadata i32 %2, metadata !14752, metadata !DIExpression()) #24, !dbg !15943
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15945, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 1, metadata !15929, metadata !DIExpression()), !dbg !15932
  call void @llvm.dbg.value(metadata i32 undef, metadata !15929, metadata !DIExpression()), !dbg !15932
  ret void, !dbg !15946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15947 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15948
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15949
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15949
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15949
  %5 = load i8, i8* %4, align 1, !dbg !15950
  %6 = add i8 %5, -1, !dbg !15950
  store i8 %6, i8* %4, align 1, !dbg !15950
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15951, !srcloc !15953
  ret void, !dbg !15954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15955 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15957, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !15961
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15963, !srcloc !14732
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15963
  call void @llvm.dbg.value(metadata i32 %2, metadata !14729, metadata !DIExpression()) #24, !dbg !15965
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !15965
  call void @llvm.dbg.value(metadata i32 %2, metadata !14723, metadata !DIExpression()) #24, !dbg !15961
  call void @llvm.dbg.value(metadata i32 %2, metadata !15959, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 undef, metadata !15957, metadata !DIExpression()), !dbg !15960
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15966
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15969
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15969
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15969
  %7 = load i8, i8* %6, align 1, !dbg !15970
  %8 = add i8 %7, 1, !dbg !15970
  store i8 %8, i8* %6, align 1, !dbg !15970
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15971
  call void @llvm.dbg.value(metadata i32 %2, metadata !14744, metadata !DIExpression()) #24, !dbg !15972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !15972
  call void @llvm.dbg.value(metadata i32 %2, metadata !14752, metadata !DIExpression()) #24, !dbg !15974
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15976, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 1, metadata !15957, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 undef, metadata !15957, metadata !DIExpression()), !dbg !15960
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15977
  ret void, !dbg !15978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15979 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15980
  ret %struct.k_thread* %1, !dbg !15981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15982 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15986, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15987, metadata !DIExpression()), !dbg !15991
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15992
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15988, metadata !DIExpression()), !dbg !15991
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15993
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15989, metadata !DIExpression()), !dbg !15991
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !15994
  call void @llvm.dbg.value(metadata i32 %5, metadata !15990, metadata !DIExpression()), !dbg !15991
  %6 = icmp sgt i32 %5, 0, !dbg !15995
  br i1 %6, label %17, label %7, !dbg !15997

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15998
  br i1 %8, label %17, label %9, !dbg !16000

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16001
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16001
  %12 = load i32, i32* %11, align 8, !dbg !16001
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16003
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16003
  %15 = load i32, i32* %14, align 8, !dbg !16003
  %16 = icmp ult i32 %12, %15, !dbg !16004
  br label %17, !dbg !16005

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16006
  ret i1 %18, !dbg !16007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16008 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16025, metadata !DIExpression()), !dbg !16040
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16026, metadata !DIExpression()), !dbg !16040
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16041
  %5 = load i32, i32* %4, align 4, !dbg !16042
  %6 = add nsw i32 %5, 1, !dbg !16042
  store i32 %6, i32* %4, align 4, !dbg !16042
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16043
  store i32 %5, i32* %7, align 8, !dbg !16044
  %8 = load i32, i32* %4, align 4, !dbg !16045
  %9 = icmp eq i32 %8, 0, !dbg !16046
  br i1 %9, label %10, label %32, !dbg !16047

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16048
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16048
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16028, metadata !DIExpression()), !dbg !16048
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16048
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16048
  %14 = load i32, i32* %13, align 4, !dbg !16048
  %15 = shl i32 %14, 2, !dbg !16048
  %16 = alloca i8, i32 %15, align 8, !dbg !16048
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16048
  store i8* %16, i8** %17, align 4, !dbg !16048
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16048
  %19 = alloca i8, i32 %14, align 8, !dbg !16048
  store i8* %19, i8** %18, align 4, !dbg !16048
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16048
  store i32 -1, i32* %20, align 4, !dbg !16048
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16049
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16037, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16027, metadata !DIExpression()), !dbg !16040
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16051
  br i1 %22, label %23, label %24, !dbg !16048

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16051
  br label %32, !dbg !16052

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16027, metadata !DIExpression()), !dbg !16040
  %26 = load i32, i32* %4, align 4, !dbg !16053
  %27 = add nsw i32 %26, 1, !dbg !16053
  store i32 %27, i32* %4, align 4, !dbg !16053
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16055
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16055
  store i32 %26, i32* %29, align 8, !dbg !16056
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16049
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16037, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16027, metadata !DIExpression()), !dbg !16040
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16051
  br i1 %31, label %23, label %24, !dbg !16048, !llvm.loop !16057

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16059
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16060
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16061
  ret void, !dbg !16062
}

; Function Attrs: optsize
declare !dbg !16063 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16068 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16071 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16073, metadata !DIExpression()), !dbg !16075
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16074, metadata !DIExpression()), !dbg !16075
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16076
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16077
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16078
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16079
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16079
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16081
  br i1 %7, label %8, label %10, !dbg !16082

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16083
  store i32 0, i32* %9, align 4, !dbg !16085
  br label %10, !dbg !16086

10:                                               ; preds = %8, %2
  ret void, !dbg !16087
}

; Function Attrs: optsize
declare !dbg !16088 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16089 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16093, metadata !DIExpression()), !dbg !16096
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16094, metadata !DIExpression()), !dbg !16096
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16097
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16098
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16095, metadata !DIExpression()), !dbg !16096
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16094, metadata !DIExpression()), !dbg !16096
  ret %struct.k_thread* %4, !dbg !16099
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16100 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16104, metadata !DIExpression()), !dbg !16105
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16106
  ret %struct.rbnode* %2, !dbg !16107
}

; Function Attrs: optsize
declare !dbg !16108 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16111 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16123, metadata !DIExpression()), !dbg !16127
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16128
  %3 = load i32, i32* %2, align 4, !dbg !16128
  %4 = icmp eq i32 %3, 0, !dbg !16130
  br i1 %4, label %10, label %5, !dbg !16131

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16124, metadata !DIExpression()), !dbg !16127
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16132, !range !3868
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16133
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16125, metadata !DIExpression()), !dbg !16127
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !16134
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16126, metadata !DIExpression()), !dbg !16127
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16124, metadata !DIExpression()), !dbg !16127
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16127
  ret %struct.k_thread* %11, !dbg !16135
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16136 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16140, metadata !DIExpression()), !dbg !16143
  call void @llvm.dbg.value(metadata i32 0, metadata !16141, metadata !DIExpression()), !dbg !16143
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16144
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16142, metadata !DIExpression()), !dbg !16143
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16145
  br i1 %3, label %8, label %4, !dbg !16146

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16147
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16149
  call void @llvm.dbg.value(metadata i32 1, metadata !16141, metadata !DIExpression()), !dbg !16143
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16144
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16142, metadata !DIExpression()), !dbg !16143
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16145
  br i1 %7, label %8, label %4, !dbg !16146, !llvm.loop !16150

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16143
  ret i32 %9, !dbg !16152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !16153 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16155, metadata !DIExpression()), !dbg !16156
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16157
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !16158
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16159
  ret %struct.k_thread* %4, !dbg !16160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !16161 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16170, metadata !DIExpression()), !dbg !16171
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16172
  tail call fastcc void @sys_dlist_init.172(%struct._dnode* noundef nonnull %2) #26, !dbg !16173
  ret void, !dbg !16174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.172(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16175 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16179, metadata !DIExpression()), !dbg !16180
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16181
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16182
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16183
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16184
  ret void, !dbg !16185
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16186 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16187
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16188
  ret void, !dbg !16189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !16190 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16195, metadata !DIExpression()), !dbg !16196
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16197
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16197
  %4 = load i8, i8* %3, align 2, !dbg !16197
  %5 = sext i8 %4 to i32, !dbg !16198
  ret i32 %5, !dbg !16199
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16200 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16204, metadata !DIExpression()), !dbg !16207
  call void @llvm.dbg.value(metadata i32 %1, metadata !16205, metadata !DIExpression()), !dbg !16207
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16206, metadata !DIExpression()), !dbg !16207
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16208
  ret void, !dbg !16209
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16210 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16211
  br i1 %1, label %8, label %2, !dbg !16212

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16213
  br i1 %3, label %8, label %4, !dbg !16214

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16215
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16216
  %7 = xor i1 %6, true, !dbg !16214
  br label %8, !dbg !16214

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16218 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16219, !range !7154
  %2 = icmp eq i8 %1, 0, !dbg !16219
  ret i1 %2, !dbg !16220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16221 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !16224
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16226, !srcloc !14732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #24, !dbg !16228
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16228
  call void @llvm.dbg.value(metadata i32 undef, metadata !14723, metadata !DIExpression()) #24, !dbg !16224
  call void @llvm.dbg.value(metadata i32 undef, metadata !16223, metadata !DIExpression()), !dbg !16229
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16230
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14886, metadata !DIExpression()) #24, !dbg !16233
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16235
  %4 = load i8, i8* %3, align 1, !dbg !16236
  %5 = and i8 %4, 127, !dbg !16236
  store i8 %5, i8* %3, align 1, !dbg !16236
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14894, metadata !DIExpression()) #24, !dbg !16237
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16239
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16240
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14903, metadata !DIExpression()) #24, !dbg !16241
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16243
  %8 = load i8, i8* %7, align 1, !dbg !16244
  %9 = or i8 %8, -128, !dbg !16244
  store i8 %9, i8* %7, align 1, !dbg !16244
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14910, metadata !DIExpression()) #24, !dbg !16245
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14917, metadata !DIExpression()) #24, !dbg !16247
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14923, metadata !DIExpression()) #24, !dbg !16247
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16249
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14924, metadata !DIExpression()) #24, !dbg !16247
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16250
  br i1 %11, label %22, label %12, !dbg !16249

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14924, metadata !DIExpression()) #24, !dbg !16247
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16251
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14924, metadata !DIExpression()) #24, !dbg !16247
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16252
  %16 = icmp sgt i32 %15, 0, !dbg !16253
  br i1 %16, label %17, label %19, !dbg !16254

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16255
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16256
  br label %24, !dbg !16257

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16250
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14924, metadata !DIExpression()) #24, !dbg !16247
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16250
  br i1 %21, label %22, label %12, !dbg !16249, !llvm.loop !16258

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16260
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16261
  br label %24, !dbg !16262

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16226
  call void @llvm.dbg.value(metadata i32 %25, metadata !14729, metadata !DIExpression()) #24, !dbg !16228
  call void @llvm.dbg.value(metadata i32 %25, metadata !14723, metadata !DIExpression()) #24, !dbg !16224
  call void @llvm.dbg.value(metadata i32 %25, metadata !16223, metadata !DIExpression()), !dbg !16229
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16263
  call void @llvm.dbg.value(metadata i32 undef, metadata !15328, metadata !DIExpression()) #24, !dbg !16264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15333, metadata !DIExpression()) #24, !dbg !16264
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16266
  ret void, !dbg !16267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16268 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16272, metadata !DIExpression()), !dbg !16275
  %3 = icmp eq i64 %2, -1, !dbg !16276
  br i1 %3, label %4, label %6, !dbg !16278

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16279
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16281
  br label %11, !dbg !16282

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16273, metadata !DIExpression()), !dbg !16275
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16283
  %8 = sext i32 %7 to i64, !dbg !16283
  call void @llvm.dbg.value(metadata i64 %8, metadata !16273, metadata !DIExpression()), !dbg !16275
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !16284
  %10 = trunc i64 %9 to i32, !dbg !16284
  call void @llvm.dbg.value(metadata i32 %10, metadata !16274, metadata !DIExpression()), !dbg !16275
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16275
  ret i32 %12, !dbg !16285
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16286 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16290, metadata !DIExpression()), !dbg !16291
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16292, !srcloc !16294
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16295
  ret void, !dbg !16296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16297 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16301, metadata !DIExpression()), !dbg !16305
  %2 = icmp eq i64 %0, 0, !dbg !16306
  br i1 %2, label %3, label %4, !dbg !16308

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !16309
  br label %29, !dbg !16311

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16303, metadata !DIExpression()), !dbg !16305
  %5 = icmp sgt i64 %0, -3, !dbg !16312
  br i1 %5, label %6, label %10, !dbg !16314

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16315
  %8 = trunc i64 %0 to i32, !dbg !16317
  %9 = add i32 %7, %8, !dbg !16317
  call void @llvm.dbg.value(metadata i32 %9, metadata !16302, metadata !DIExpression()), !dbg !16305
  br label %13, !dbg !16318

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16319
  %12 = sub i32 -2, %11, !dbg !16319
  call void @llvm.dbg.value(metadata i32 %12, metadata !16302, metadata !DIExpression()), !dbg !16305
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16321
  call void @llvm.dbg.value(metadata i32 %14, metadata !16302, metadata !DIExpression()), !dbg !16305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !16322
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16324, !srcloc !14732
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16324
  call void @llvm.dbg.value(metadata i32 %16, metadata !14729, metadata !DIExpression()) #24, !dbg !16326
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16326
  call void @llvm.dbg.value(metadata i32 %16, metadata !14723, metadata !DIExpression()) #24, !dbg !16322
  call void @llvm.dbg.value(metadata i32 %16, metadata !16304, metadata !DIExpression()), !dbg !16305
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16327
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16328
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !16329
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16330
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16331
  tail call fastcc void @z_add_thread_timeout.161(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !16331
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16332
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !16333
  call void @llvm.dbg.value(metadata i32 %16, metadata !15328, metadata !DIExpression()) #24, !dbg !16334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15333, metadata !DIExpression()) #24, !dbg !16334
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16336
  %22 = zext i32 %14 to i64, !dbg !16337
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16338
  %24 = zext i32 %23 to i64, !dbg !16338
  %25 = sub nsw i64 %22, %24, !dbg !16339
  call void @llvm.dbg.value(metadata i64 %25, metadata !16301, metadata !DIExpression()), !dbg !16305
  %26 = icmp sgt i64 %25, 0, !dbg !16340
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16340
  %28 = trunc i64 %27 to i32, !dbg !16340
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16305
  ret i32 %30, !dbg !16341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16342 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16344, metadata !DIExpression()), !dbg !16345
  call void @llvm.dbg.value(metadata i64 %0, metadata !14764, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i32 10000, metadata !14767, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i32 1000, metadata !14768, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i8 1, metadata !14769, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i1 false, metadata !14770, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16346
  call void @llvm.dbg.value(metadata i1 false, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16346
  call void @llvm.dbg.value(metadata i8 0, metadata !14772, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i1 false, metadata !14773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16346
  call void @llvm.dbg.value(metadata i1 true, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16346
  call void @llvm.dbg.value(metadata i64 0, metadata !14775, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i64 0, metadata !14775, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i64 %0, metadata !14764, metadata !DIExpression()), !dbg !16346
  %2 = udiv i64 %0, 10, !dbg !16348
  ret i64 %2, !dbg !16352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16353 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16354, !srcloc !16356
  tail call void @z_impl_k_yield() #26, !dbg !16357
  ret void, !dbg !16358
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16363, metadata !DIExpression()), !dbg !16365
  %2 = sext i32 %0 to i64, !dbg !16366
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !16367
  call void @llvm.dbg.value(metadata i64 %3, metadata !16364, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16365
  %4 = shl i64 %3, 32, !dbg !16368
  %5 = ashr exact i64 %4, 32, !dbg !16368
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !16369
  call void @llvm.dbg.value(metadata i32 %6, metadata !16364, metadata !DIExpression()), !dbg !16365
  %7 = sext i32 %6 to i64, !dbg !16370
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !16371
  %9 = trunc i64 %8 to i32, !dbg !16371
  ret i32 %9, !dbg !16372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16373 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16375, metadata !DIExpression()), !dbg !16376
  call void @llvm.dbg.value(metadata i64 %0, metadata !14764, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14767, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i32 10000, metadata !14768, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i8 1, metadata !14769, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i1 false, metadata !14770, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16377
  call void @llvm.dbg.value(metadata i1 true, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16377
  call void @llvm.dbg.value(metadata i8 0, metadata !14772, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i1 false, metadata !14773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16377
  call void @llvm.dbg.value(metadata i1 true, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16377
  call void @llvm.dbg.value(metadata i64 0, metadata !14775, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata i64 0, metadata !14775, metadata !DIExpression()), !dbg !16377
  %2 = add i64 %0, 99, !dbg !16379
  call void @llvm.dbg.value(metadata i64 %2, metadata !14764, metadata !DIExpression()), !dbg !16377
  %3 = udiv i64 %2, 100, !dbg !16380
  ret i64 %3, !dbg !16381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16382 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16384, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata i64 %0, metadata !14764, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.value(metadata i32 10000, metadata !14767, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14768, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.value(metadata i8 1, metadata !14769, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.value(metadata i1 false, metadata !14770, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16386
  call void @llvm.dbg.value(metadata i1 false, metadata !14771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16386
  call void @llvm.dbg.value(metadata i8 0, metadata !14772, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.value(metadata i1 true, metadata !14773, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16386
  call void @llvm.dbg.value(metadata i1 false, metadata !14774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16386
  call void @llvm.dbg.value(metadata i64 0, metadata !14775, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.value(metadata i64 0, metadata !14775, metadata !DIExpression()), !dbg !16386
  %2 = mul i64 %0, 100, !dbg !16388
  ret i64 %2, !dbg !16390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16393, metadata !DIExpression()), !dbg !16394
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !16395
  br i1 %2, label %14, label %3, !dbg !16397

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16398
  %5 = icmp slt i32 %4, 0, !dbg !16400
  br i1 %5, label %6, label %10, !dbg !16401

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16402
  %8 = load i8, i8* %7, align 1, !dbg !16402
  %9 = icmp eq i8 %8, 16, !dbg !16405
  br i1 %9, label %10, label %14, !dbg !16406

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16407
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16408
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16409, !srcloc !15368
  call void @llvm.dbg.value(metadata i32 %11, metadata !15364, metadata !DIExpression()) #24, !dbg !16413
  %12 = icmp eq i32 %11, 0, !dbg !16414
  br i1 %12, label %13, label %14, !dbg !16415

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16416
  br label %14, !dbg !16418

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16420 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16422, metadata !DIExpression()), !dbg !16423
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16424
  %3 = load i8, i8* %2, align 1, !dbg !16424
  %4 = and i8 %3, 2, !dbg !16425
  %5 = icmp ne i8 %4, 0, !dbg !16426
  ret i1 %5, !dbg !16427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16428 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16433
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16432, metadata !DIExpression()), !dbg !16434
  ret %struct.k_thread* %1, !dbg !16435
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16436 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16437, !srcloc !15368
  call void @llvm.dbg.value(metadata i32 %1, metadata !15364, metadata !DIExpression()) #24, !dbg !16440
  %2 = icmp eq i32 %1, 0, !dbg !16441
  br i1 %2, label %3, label %8, !dbg !16442

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16443
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16444
  %6 = icmp ne i32 %5, 0, !dbg !16442
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16446 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16448, metadata !DIExpression()), !dbg !16450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !16451
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16453, !srcloc !14732
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16453
  call void @llvm.dbg.value(metadata i32 %3, metadata !14729, metadata !DIExpression()) #24, !dbg !16455
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16455
  call void @llvm.dbg.value(metadata i32 %3, metadata !14723, metadata !DIExpression()) #24, !dbg !16451
  call void @llvm.dbg.value(metadata i32 %3, metadata !16449, metadata !DIExpression()), !dbg !16450
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16456
  %5 = load i8, i8* %4, align 4, !dbg !16456
  %6 = and i8 %5, 1, !dbg !16458
  %7 = icmp eq i8 %6, 0, !dbg !16459
  br i1 %7, label %9, label %8, !dbg !16460

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #24, !dbg !16461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16461
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #24, !dbg !16464
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16466, !srcloc !14758
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !16467, !srcloc !16469
  br label %24, !dbg !16470

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16471
  %11 = load i8, i8* %10, align 1, !dbg !16471
  %12 = and i8 %11, 8, !dbg !16473
  %13 = icmp eq i8 %12, 0, !dbg !16474
  br i1 %13, label %15, label %14, !dbg !16475

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #24, !dbg !16476
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16476
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #24, !dbg !16479
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16481, !srcloc !14758
  br label %24, !dbg !16482

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16483
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16484
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16486
  br i1 %17, label %18, label %23, !dbg !16487

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16488, !srcloc !15368
  call void @llvm.dbg.value(metadata i32 %19, metadata !15364, metadata !DIExpression()) #24, !dbg !16491
  %20 = icmp eq i32 %19, 0, !dbg !16492
  br i1 %20, label %21, label %23, !dbg !16493

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15328, metadata !DIExpression()) #24, !dbg !16494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15333, metadata !DIExpression()) #24, !dbg !16494
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16497
  br label %23, !dbg !16498

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14744, metadata !DIExpression()) #24, !dbg !16499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16499
  call void @llvm.dbg.value(metadata i32 %3, metadata !14752, metadata !DIExpression()) #24, !dbg !16501
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16503, !srcloc !14758
  br label %24, !dbg !16504

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16505 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16507, metadata !DIExpression()), !dbg !16508
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16509
  %3 = load i8, i8* %2, align 1, !dbg !16509
  %4 = and i8 %3, 8, !dbg !16511
  %5 = icmp eq i8 %4, 0, !dbg !16512
  br i1 %5, label %6, label %20, !dbg !16513

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16514
  %8 = or i8 %7, 8, !dbg !16514
  store i8 %8, i8* %2, align 1, !dbg !16514
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16516
  br i1 %9, label %10, label %12, !dbg !16518

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #24, !dbg !16519
  %11 = and i8 %8, 95, !dbg !16522
  store i8 %11, i8* %2, align 1, !dbg !16522
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14894, metadata !DIExpression()) #24, !dbg !16523
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16525
  br label %12, !dbg !16526

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16527
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16527
  %15 = icmp eq %union.anon* %14, null, !dbg !16529
  br i1 %15, label %17, label %16, !dbg !16530

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16531
  br label %17, !dbg !16533

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16534
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16535
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !16536
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16537
  br label %20, !dbg !16538

20:                                               ; preds = %17, %1
  ret void, !dbg !16539
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16540 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16544, metadata !DIExpression()), !dbg !16546
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16547
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16545, metadata !DIExpression()), !dbg !16546
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16548
  br i1 %3, label %10, label %4, !dbg !16549

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16550
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16552
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16553, metadata !DIExpression()), !dbg !16559
  call void @llvm.dbg.value(metadata i32 0, metadata !16558, metadata !DIExpression()), !dbg !16559
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16561
  store i32 0, i32* %7, align 4, !dbg !16562
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16563
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16547
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16545, metadata !DIExpression()), !dbg !16546
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16548
  br i1 %9, label %10, label %4, !dbg !16549, !llvm.loop !16564

10:                                               ; preds = %4, %1
  ret void, !dbg !16566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16567 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16572, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16571, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !16576
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16578, !srcloc !14732
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16578
  call void @llvm.dbg.value(metadata i32 %4, metadata !14729, metadata !DIExpression()) #24, !dbg !16580
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16580
  call void @llvm.dbg.value(metadata i32 %4, metadata !14723, metadata !DIExpression()) #24, !dbg !16576
  call void @llvm.dbg.value(metadata i32 %4, metadata !16573, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.value(metadata i32 0, metadata !16574, metadata !DIExpression()), !dbg !16575
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16581
  %6 = load i8, i8* %5, align 1, !dbg !16581
  %7 = and i8 %6, 8, !dbg !16583
  %8 = icmp eq i8 %7, 0, !dbg !16584
  br i1 %8, label %9, label %24, !dbg !16585

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16572, metadata !DIExpression()), !dbg !16575
  %11 = icmp eq i64 %10, 0, !dbg !16586
  br i1 %11, label %24, label %12, !dbg !16588

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16589
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16591
  br i1 %14, label %24, label %15, !dbg !16592

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16593
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16593
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16594
  %19 = icmp eq %union.anon* %17, %18, !dbg !16595
  br i1 %19, label %24, label %20, !dbg !16596

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16597
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !16599
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16600
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !16601
  call void @llvm.dbg.value(metadata i32 %4, metadata !15328, metadata !DIExpression()) #24, !dbg !16602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15333, metadata !DIExpression()) #24, !dbg !16602
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16604
  call void @llvm.dbg.value(metadata i32 %23, metadata !16574, metadata !DIExpression()), !dbg !16575
  br label %26, !dbg !16605

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16606
  call void @llvm.dbg.value(metadata i32 %25, metadata !16574, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.value(metadata i32 %4, metadata !14744, metadata !DIExpression()) #24, !dbg !16607
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16607
  call void @llvm.dbg.value(metadata i32 %4, metadata !14752, metadata !DIExpression()) #24, !dbg !16609
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !16611, !srcloc !14758
  br label %26, !dbg !16612

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16575
  ret i32 %27, !dbg !16613
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16614 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16618, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i32 %1, metadata !16619, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i8* %2, metadata !16620, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i8 0, metadata !16622, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i32 0, metadata !16623, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14717, metadata !DIExpression()) #24, !dbg !16628
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16630, !srcloc !14732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #24, !dbg !16632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14730, metadata !DIExpression()) #24, !dbg !16632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14723, metadata !DIExpression()) #24, !dbg !16628
  call void @llvm.dbg.value(metadata i32 undef, metadata !16625, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i8 poison, metadata !16622, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i32 undef, metadata !16623, metadata !DIExpression()), !dbg !16627
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !16633
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16621, metadata !DIExpression()), !dbg !16626
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16636
  br i1 %7, label %12, label %8, !dbg !16638

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16639, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata i32 %1, metadata !16645, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata i8* %2, metadata !16646, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16553, metadata !DIExpression()), !dbg !16650
  call void @llvm.dbg.value(metadata i32 %1, metadata !16558, metadata !DIExpression()), !dbg !16650
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16652
  store i32 %1, i32* %9, align 4, !dbg !16653
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16654
  store i8* %2, i8** %10, align 4, !dbg !16655
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16656
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16657
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !16658
  call void @llvm.dbg.value(metadata i8 1, metadata !16622, metadata !DIExpression()), !dbg !16626
  br label %12, !dbg !16659

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16630
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16630
  call void @llvm.dbg.value(metadata i32 %14, metadata !14729, metadata !DIExpression()) #24, !dbg !16632
  call void @llvm.dbg.value(metadata i32 %14, metadata !14723, metadata !DIExpression()) #24, !dbg !16628
  call void @llvm.dbg.value(metadata i32 %14, metadata !16625, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i8 poison, metadata !16622, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()) #24, !dbg !16660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14749, metadata !DIExpression()) #24, !dbg !16660
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()) #24, !dbg !16662
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16664, !srcloc !14758
  call void @llvm.dbg.value(metadata i32 undef, metadata !16623, metadata !DIExpression()), !dbg !16627
  ret i1 %13, !dbg !16665
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16666 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16672, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i64 undef, metadata !16674, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16671, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16673, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i8** %4, metadata !16675, metadata !DIExpression()), !dbg !16677
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16678
  call void @llvm.dbg.value(metadata i32 %6, metadata !16676, metadata !DIExpression()), !dbg !16677
  %7 = icmp eq i8** %4, null, !dbg !16679
  br i1 %7, label %12, label %8, !dbg !16681

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16682
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16684
  %11 = load i8*, i8** %10, align 4, !dbg !16684
  store i8* %11, i8** %4, align 4, !dbg !16685
  br label %12, !dbg !16686

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16687
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16688 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16690
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16691
  ret void, !dbg !16692
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16693 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16703, metadata !DIExpression()), !dbg !16720
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16701, metadata !DIExpression()), !dbg !16720
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16702, metadata !DIExpression()), !dbg !16720
  %5 = icmp eq i64 %4, -1, !dbg !16721
  br i1 %5, label %55, label %6, !dbg !16723

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16724
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16725
  call void @llvm.dbg.value(metadata i32 0, metadata !16704, metadata !DIExpression()), !dbg !16726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16727, metadata !DIExpression()) #24, !dbg !16734
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16736, !srcloc !16742
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16736
  call void @llvm.dbg.value(metadata i32 %9, metadata !16739, metadata !DIExpression()) #24, !dbg !16743
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !16743
  call void @llvm.dbg.value(metadata i32 %9, metadata !16733, metadata !DIExpression()) #24, !dbg !16734
  call void @llvm.dbg.value(metadata i32 %9, metadata !16710, metadata !DIExpression()), !dbg !16726
  call void @llvm.dbg.value(metadata i32 undef, metadata !16704, metadata !DIExpression()), !dbg !16726
  %10 = icmp slt i64 %4, -1, !dbg !16744
  br i1 %10, label %11, label %17, !dbg !16745

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16746
  %13 = add i64 %4, %12, !dbg !16747
  %14 = sub i64 -2, %13, !dbg !16747
  call void @llvm.dbg.value(metadata i64 %14, metadata !16714, metadata !DIExpression()), !dbg !16748
  %15 = icmp sgt i64 %14, 1, !dbg !16749
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16749
  br label %22, !dbg !16750

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16751
  %19 = tail call fastcc i32 @elapsed.185() #26, !dbg !16753
  %20 = sext i32 %19 to i64, !dbg !16753
  %21 = add nsw i64 %18, %20, !dbg !16754
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16755
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16756
  store i64 %23, i64* %24, align 8, !dbg !16757
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !16758
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16711, metadata !DIExpression()), !dbg !16760
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16761
  br i1 %26, label %42, label %27, !dbg !16761

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16762
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16711, metadata !DIExpression()), !dbg !16760
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16766
  %31 = load i64, i64* %30, align 8, !dbg !16766
  %32 = icmp slt i64 %28, %31, !dbg !16767
  br i1 %32, label %33, label %38, !dbg !16768

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16766
  %35 = sub nsw i64 %31, %28, !dbg !16769
  store i64 %35, i64* %34, align 8, !dbg !16769
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16771
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16772
  tail call fastcc void @sys_dlist_insert.186(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !16773
  br label %44, !dbg !16774

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16775
  store i64 %39, i64* %24, align 8, !dbg !16775
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !16776
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16711, metadata !DIExpression()), !dbg !16760
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16761
  br i1 %41, label %42, label %27, !dbg !16761, !llvm.loop !16777

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16779
  tail call fastcc void @sys_dlist_append.187(%struct._dnode* noundef %43) #26, !dbg !16782
  br label %44, !dbg !16783

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !16784
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16785
  br i1 %46, label %47, label %54, !dbg !16786

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !16787
  call void @llvm.dbg.value(metadata i32 %48, metadata !16717, metadata !DIExpression()), !dbg !16788
  %49 = icmp ne i32 %48, 0, !dbg !16789
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16791
  br i1 %52, label %54, label %53, !dbg !16791

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16792
  br label %54, !dbg !16794

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16795, metadata !DIExpression()) #24, !dbg !16801
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16800, metadata !DIExpression()) #24, !dbg !16801
  call void @llvm.dbg.value(metadata i32 %9, metadata !16803, metadata !DIExpression()) #24, !dbg !16806
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16808, !srcloc !16809
  call void @llvm.dbg.value(metadata i32 undef, metadata !16704, metadata !DIExpression()), !dbg !16726
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.185() unnamed_addr #1 !dbg !16811 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16814
  %2 = icmp eq i32 %1, 0, !dbg !16815
  br i1 %2, label %3, label %5, !dbg !16814

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16816
  br label %5, !dbg !16814

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16814
  ret i32 %6, !dbg !16817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16818 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.190() #26, !dbg !16824
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16822, metadata !DIExpression()), !dbg !16825
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16826
  ret %struct._timeout* %2, !dbg !16827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.186(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16828 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16832, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16833, metadata !DIExpression()), !dbg !16836
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16837
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16837
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16834, metadata !DIExpression()), !dbg !16836
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16838
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16839
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16840
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16841
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16842
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16843
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16844
  ret void, !dbg !16845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16846 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16850, metadata !DIExpression()), !dbg !16852
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16853
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.188(%struct._dnode* noundef %2) #26, !dbg !16854
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16851, metadata !DIExpression()), !dbg !16852
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16855
  ret %struct._timeout* %4, !dbg !16856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.187(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16857 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16862, metadata !DIExpression()), !dbg !16865
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16863, metadata !DIExpression()), !dbg !16865
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16866
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16864, metadata !DIExpression()), !dbg !16865
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16867
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16868
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16869
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16870
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16871
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16872
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16873
  ret void, !dbg !16874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16875 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16880
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16877, metadata !DIExpression()), !dbg !16881
  %2 = tail call fastcc i32 @elapsed.185() #26, !dbg !16882
  call void @llvm.dbg.value(metadata i32 %2, metadata !16878, metadata !DIExpression()), !dbg !16881
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16883
  br i1 %3, label %14, label %4, !dbg !16885

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16886
  %6 = load i64, i64* %5, align 8, !dbg !16886
  %7 = sext i32 %2 to i64, !dbg !16887
  %8 = sub nsw i64 %6, %7, !dbg !16888
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16889
  br i1 %9, label %14, label %10, !dbg !16890

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16891
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16891
  %13 = trunc i64 %12 to i32, !dbg !16891
  call void @llvm.dbg.value(metadata i32 %13, metadata !16879, metadata !DIExpression()), !dbg !16881
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16893
  call void @llvm.dbg.value(metadata i32 %15, metadata !16879, metadata !DIExpression()), !dbg !16881
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16894
  %17 = icmp ne i32 %16, 0, !dbg !16896
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16897
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16897
  call void @llvm.dbg.value(metadata i32 %20, metadata !16879, metadata !DIExpression()), !dbg !16881
  ret i32 %20, !dbg !16898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.188(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16899 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16903, metadata !DIExpression()), !dbg !16905
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16904, metadata !DIExpression()), !dbg !16905
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16906
  br i1 %2, label %5, label %3, !dbg !16907

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.189(%struct._dnode* noundef nonnull %0) #26, !dbg !16908
  br label %5, !dbg !16907

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16907
  ret %struct._dnode* %6, !dbg !16909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.189(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16910 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16912, metadata !DIExpression()), !dbg !16914
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16913, metadata !DIExpression()), !dbg !16914
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16915
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16916
  br i1 %3, label %7, label %4, !dbg !16917

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16918
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16918
  br label %7, !dbg !16917

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16917
  ret %struct._dnode* %8, !dbg !16919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.190() unnamed_addr #5 !dbg !16920 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16924, metadata !DIExpression()), !dbg !16925
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.191() #26, !dbg !16926
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16926
  ret %struct._dnode* %3, !dbg !16927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.191() unnamed_addr #5 !dbg !16928 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16932, metadata !DIExpression()), !dbg !16933
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16934
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16935
  ret i1 %2, !dbg !16936
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16937 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16941, metadata !DIExpression()), !dbg !16946
  call void @llvm.dbg.value(metadata i32 -22, metadata !16942, metadata !DIExpression()), !dbg !16946
  call void @llvm.dbg.value(metadata i32 0, metadata !16943, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16727, metadata !DIExpression()) #24, !dbg !16948
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16950, !srcloc !16742
  call void @llvm.dbg.value(metadata i32 undef, metadata !16739, metadata !DIExpression()) #24, !dbg !16952
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !16952
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #24, !dbg !16948
  call void @llvm.dbg.value(metadata i32 undef, metadata !16945, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 -22, metadata !16942, metadata !DIExpression()), !dbg !16946
  call void @llvm.dbg.value(metadata i32 undef, metadata !16943, metadata !DIExpression()), !dbg !16947
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16942, metadata !DIExpression()), !dbg !16946
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.194(%struct._dnode* noundef %3) #26, !dbg !16953
  br i1 %4, label %5, label %6, !dbg !16957

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16958
  call void @llvm.dbg.value(metadata i32 0, metadata !16942, metadata !DIExpression()), !dbg !16946
  br label %6, !dbg !16960

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16946
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16950
  call void @llvm.dbg.value(metadata i32 %8, metadata !16739, metadata !DIExpression()) #24, !dbg !16952
  call void @llvm.dbg.value(metadata i32 %8, metadata !16733, metadata !DIExpression()) #24, !dbg !16948
  call void @llvm.dbg.value(metadata i32 %8, metadata !16945, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 %7, metadata !16942, metadata !DIExpression()), !dbg !16946
  call void @llvm.dbg.value(metadata i32 undef, metadata !16795, metadata !DIExpression()) #24, !dbg !16961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16800, metadata !DIExpression()) #24, !dbg !16961
  call void @llvm.dbg.value(metadata i32 undef, metadata !16803, metadata !DIExpression()) #24, !dbg !16963
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !16965, !srcloc !16809
  call void @llvm.dbg.value(metadata i32 undef, metadata !16943, metadata !DIExpression()), !dbg !16947
  ret i32 %7, !dbg !16966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.194(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16967 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16973, metadata !DIExpression()), !dbg !16974
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16975
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16975
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16976
  ret i1 %4, !dbg !16977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !16978 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16980, metadata !DIExpression()), !dbg !16981
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !16982
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16984
  br i1 %3, label %10, label %4, !dbg !16985

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16986
  %6 = load i64, i64* %5, align 8, !dbg !16986
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16988
  %8 = load i64, i64* %7, align 8, !dbg !16989
  %9 = add nsw i64 %8, %6, !dbg !16989
  store i64 %9, i64* %7, align 8, !dbg !16989
  br label %10, !dbg !16990

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16991
  tail call fastcc void @sys_dlist_remove.195(%struct._dnode* noundef %11) #26, !dbg !16992
  ret void, !dbg !16993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.195(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !16994 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16998, metadata !DIExpression()), !dbg !17001
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17002
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17002
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16999, metadata !DIExpression()), !dbg !17001
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17003
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17003
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17000, metadata !DIExpression()), !dbg !17001
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17004
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17005
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17006
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17007
  tail call fastcc void @sys_dnode_init.196(%struct._dnode* noundef %0) #26, !dbg !17008
  ret void, !dbg !17009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.196(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !17010 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17012, metadata !DIExpression()), !dbg !17013
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17014
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17015
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17016
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17017
  ret void, !dbg !17018
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17019 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17025, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i64 0, metadata !17026, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 0, metadata !17027, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16727, metadata !DIExpression()) #24, !dbg !17032
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17034, !srcloc !16742
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17034
  call void @llvm.dbg.value(metadata i32 %3, metadata !16739, metadata !DIExpression()) #24, !dbg !17036
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !17036
  call void @llvm.dbg.value(metadata i32 %3, metadata !16733, metadata !DIExpression()) #24, !dbg !17032
  call void @llvm.dbg.value(metadata i32 %3, metadata !17029, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i64 0, metadata !17026, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()), !dbg !17031
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17037
  call void @llvm.dbg.value(metadata i64 %4, metadata !17026, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 %3, metadata !16795, metadata !DIExpression()) #24, !dbg !17040
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17040
  call void @llvm.dbg.value(metadata i32 %3, metadata !16803, metadata !DIExpression()) #24, !dbg !17042
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17044, !srcloc !16809
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()), !dbg !17031
  ret i64 %4, !dbg !17045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17046 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17048, metadata !DIExpression()), !dbg !17052
  call void @llvm.dbg.value(metadata i64 0, metadata !17049, metadata !DIExpression()), !dbg !17052
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.197(%struct._timeout* noundef %0) #26, !dbg !17053
  br i1 %2, label %21, label %3, !dbg !17055

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17056
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17050, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.value(metadata i64 0, metadata !17049, metadata !DIExpression()), !dbg !17052
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17058
  br i1 %5, label %16, label %6, !dbg !17060

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17050, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.value(metadata i64 %8, metadata !17049, metadata !DIExpression()), !dbg !17052
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17061
  %10 = load i64, i64* %9, align 8, !dbg !17061
  %11 = add nsw i64 %10, %8, !dbg !17063
  call void @llvm.dbg.value(metadata i64 %11, metadata !17049, metadata !DIExpression()), !dbg !17052
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17064
  br i1 %12, label %16, label %13, !dbg !17066

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17067
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17050, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.value(metadata i64 %11, metadata !17049, metadata !DIExpression()), !dbg !17052
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17058
  br i1 %15, label %16, label %6, !dbg !17060, !llvm.loop !17068

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17052
  call void @llvm.dbg.value(metadata i64 %17, metadata !17049, metadata !DIExpression()), !dbg !17052
  %18 = tail call fastcc i32 @elapsed.185() #26, !dbg !17070
  %19 = sext i32 %18 to i64, !dbg !17070
  %20 = sub nsw i64 %17, %19, !dbg !17071
  br label %21, !dbg !17072

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17052
  ret i64 %22, !dbg !17073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.197(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17074 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17078, metadata !DIExpression()), !dbg !17079
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17080
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.194(%struct._dnode* noundef %2) #26, !dbg !17081
  %4 = xor i1 %3, true, !dbg !17082
  ret i1 %4, !dbg !17083
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17084 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17086, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i64 0, metadata !17087, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i32 0, metadata !17088, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16727, metadata !DIExpression()) #24, !dbg !17093
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17095, !srcloc !16742
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17095
  call void @llvm.dbg.value(metadata i32 %3, metadata !16739, metadata !DIExpression()) #24, !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !17097
  call void @llvm.dbg.value(metadata i32 %3, metadata !16733, metadata !DIExpression()) #24, !dbg !17093
  call void @llvm.dbg.value(metadata i32 %3, metadata !17090, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata i64 0, metadata !17087, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()), !dbg !17092
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17098
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17101
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17087, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17091
  call void @llvm.dbg.value(metadata i32 %3, metadata !16795, metadata !DIExpression()) #24, !dbg !17102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17102
  call void @llvm.dbg.value(metadata i32 %3, metadata !16803, metadata !DIExpression()) #24, !dbg !17104
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17106, !srcloc !16809
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()), !dbg !17092
  %6 = add i64 %5, %4, !dbg !17107
  ret i64 %6, !dbg !17108
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17109 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17111, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i32 0, metadata !17112, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16727, metadata !DIExpression()) #24, !dbg !17117
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17119, !srcloc !16742
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17119
  call void @llvm.dbg.value(metadata i32 %2, metadata !16739, metadata !DIExpression()) #24, !dbg !17121
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !17121
  call void @llvm.dbg.value(metadata i32 %2, metadata !16733, metadata !DIExpression()) #24, !dbg !17117
  call void @llvm.dbg.value(metadata i32 %2, metadata !17114, metadata !DIExpression()), !dbg !17116
  call void @llvm.dbg.value(metadata i32 -1, metadata !17111, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()), !dbg !17116
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17122
  call void @llvm.dbg.value(metadata i32 %3, metadata !17111, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i32 %2, metadata !16795, metadata !DIExpression()) #24, !dbg !17125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17125
  call void @llvm.dbg.value(metadata i32 %2, metadata !16803, metadata !DIExpression()) #24, !dbg !17127
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17129, !srcloc !16809
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()), !dbg !17116
  ret i32 %3, !dbg !17130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17133, metadata !DIExpression()), !dbg !17143
  call void @llvm.dbg.value(metadata i1 %1, metadata !17134, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17143
  call void @llvm.dbg.value(metadata i32 0, metadata !17135, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16727, metadata !DIExpression()) #24, !dbg !17145
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17147, !srcloc !16742
  call void @llvm.dbg.value(metadata i32 undef, metadata !16739, metadata !DIExpression()) #24, !dbg !17149
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !17149
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #24, !dbg !17145
  call void @llvm.dbg.value(metadata i32 undef, metadata !17137, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata i32 undef, metadata !17135, metadata !DIExpression()), !dbg !17144
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17150
  call void @llvm.dbg.value(metadata i32 %4, metadata !17138, metadata !DIExpression()), !dbg !17151
  call void @llvm.dbg.value(metadata i1 undef, metadata !17141, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17151
  %5 = icmp slt i32 %4, 2, !dbg !17152
  call void @llvm.dbg.value(metadata i1 %5, metadata !17142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17151
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17153
  call void @llvm.dbg.value(metadata i1 %6, metadata !17141, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17151
  br i1 %7, label %11, label %8, !dbg !17153

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17155
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17155
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17157
  br label %11, !dbg !17158

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17147
  call void @llvm.dbg.value(metadata i32 %12, metadata !16739, metadata !DIExpression()) #24, !dbg !17149
  call void @llvm.dbg.value(metadata i32 %12, metadata !16733, metadata !DIExpression()) #24, !dbg !17145
  call void @llvm.dbg.value(metadata i32 %12, metadata !17137, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata i32 undef, metadata !16795, metadata !DIExpression()) #24, !dbg !17159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17159
  call void @llvm.dbg.value(metadata i32 undef, metadata !16803, metadata !DIExpression()) #24, !dbg !17161
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !17163, !srcloc !16809
  call void @llvm.dbg.value(metadata i32 1, metadata !17135, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata i32 undef, metadata !17135, metadata !DIExpression()), !dbg !17144
  ret void, !dbg !17164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17169, metadata !DIExpression()), !dbg !17174
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16727, metadata !DIExpression()) #24, !dbg !17176
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17178, !srcloc !16742
  call void @llvm.dbg.value(metadata i32 undef, metadata !16739, metadata !DIExpression()) #24, !dbg !17180
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !17180
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #24, !dbg !17176
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()), !dbg !17174
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17174
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()), !dbg !17174
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17181
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17182
  br i1 %4, label %28, label %5, !dbg !17183

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17184
  %10 = load i64, i64* %9, align 8, !dbg !17184
  %11 = sext i32 %8 to i64, !dbg !17185
  %12 = icmp sgt i64 %10, %11, !dbg !17186
  br i1 %12, label %26, label %13, !dbg !17187

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17174
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17171, metadata !DIExpression()), !dbg !17188
  %15 = trunc i64 %10 to i32, !dbg !17189
  call void @llvm.dbg.value(metadata i32 %15, metadata !17173, metadata !DIExpression()), !dbg !17188
  %16 = sext i32 %15 to i64, !dbg !17190
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17191
  %18 = add i64 %17, %16, !dbg !17191
  store i64 %18, i64* @curr_tick, align 8, !dbg !17191
  store i64 0, i64* %9, align 8, !dbg !17192
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17193
  call void @llvm.dbg.value(metadata i32 %14, metadata !16795, metadata !DIExpression()) #24, !dbg !17194
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17194
  call void @llvm.dbg.value(metadata i32 %14, metadata !16803, metadata !DIExpression()) #24, !dbg !17196
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17198, !srcloc !16809
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17199
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17199
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17200
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16727, metadata !DIExpression()) #24, !dbg !17201
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17203, !srcloc !16742
  call void @llvm.dbg.value(metadata i32 undef, metadata !16739, metadata !DIExpression()) #24, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #24, !dbg !17201
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()), !dbg !17174
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17206
  %23 = sub nsw i32 %22, %15, !dbg !17206
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17174
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()), !dbg !17174
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17181
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17182
  br i1 %25, label %28, label %5, !dbg !17183, !llvm.loop !17207

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17209
  store i64 %27, i64* %9, align 8, !dbg !17209
  br label %32, !dbg !17212

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17174
  %31 = sext i32 %30 to i64, !dbg !17213
  br label %32, !dbg !17213

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17213
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17174
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17214
  %37 = add i64 %36, %33, !dbg !17214
  store i64 %37, i64* @curr_tick, align 8, !dbg !17214
  store i32 0, i32* @announce_remaining, align 4, !dbg !17215
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17216
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17217
  call void @llvm.dbg.value(metadata i32 %35, metadata !16795, metadata !DIExpression()) #24, !dbg !17218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17218
  call void @llvm.dbg.value(metadata i32 %35, metadata !16803, metadata !DIExpression()) #24, !dbg !17220
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !17222, !srcloc !16809
  ret void, !dbg !17223
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17224 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17228, metadata !DIExpression()), !dbg !17232
  call void @llvm.dbg.value(metadata i32 0, metadata !17229, metadata !DIExpression()), !dbg !17233
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16727, metadata !DIExpression()) #24, !dbg !17234
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17236, !srcloc !16742
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17236
  call void @llvm.dbg.value(metadata i32 %2, metadata !16739, metadata !DIExpression()) #24, !dbg !17238
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()) #24, !dbg !17238
  call void @llvm.dbg.value(metadata i32 %2, metadata !16733, metadata !DIExpression()) #24, !dbg !17234
  call void @llvm.dbg.value(metadata i32 %2, metadata !17231, metadata !DIExpression()), !dbg !17233
  call void @llvm.dbg.value(metadata i64 0, metadata !17228, metadata !DIExpression()), !dbg !17232
  call void @llvm.dbg.value(metadata i32 undef, metadata !17229, metadata !DIExpression()), !dbg !17233
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17239
  %4 = tail call fastcc i32 @elapsed.185() #26, !dbg !17242
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17228, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17232
  call void @llvm.dbg.value(metadata i32 %2, metadata !16795, metadata !DIExpression()) #24, !dbg !17243
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16800, metadata !DIExpression()) #24, !dbg !17243
  call void @llvm.dbg.value(metadata i32 %2, metadata !16803, metadata !DIExpression()) #24, !dbg !17245
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17247, !srcloc !16809
  call void @llvm.dbg.value(metadata i32 undef, metadata !17229, metadata !DIExpression()), !dbg !17233
  %5 = sext i32 %4 to i64, !dbg !17242
  %6 = add i64 %3, %5, !dbg !17248
  ret i64 %6, !dbg !17249
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17250 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17251
  %2 = trunc i64 %1 to i32, !dbg !17252
  ret i32 %2, !dbg !17253
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17254 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17255
  ret i64 %1, !dbg !17256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17259, metadata !DIExpression()), !dbg !17266
  %2 = icmp eq i32 %0, 0, !dbg !17267
  br i1 %2, label %10, label %3, !dbg !17269

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17270
  call void @llvm.dbg.value(metadata i32 %4, metadata !17260, metadata !DIExpression()), !dbg !17266
  %5 = mul i32 %0, 84, !dbg !17271
  call void @llvm.dbg.value(metadata i32 %5, metadata !17261, metadata !DIExpression()), !dbg !17266
  br label %6, !dbg !17272

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17273
  call void @llvm.dbg.value(metadata i32 %7, metadata !17262, metadata !DIExpression()), !dbg !17274
  %8 = sub i32 %7, %4, !dbg !17275
  %9 = icmp ult i32 %8, %5, !dbg !17277
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17279 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17280
  ret i32 %1, !dbg !17281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17282 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17284
  ret i32 %1, !dbg !17285
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17286 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17290, metadata !DIExpression()), !dbg !17292
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17293

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17294
  br label %14, !dbg !17298

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17291, metadata !DIExpression()), !dbg !17292
  %6 = icmp slt i64 %2, -1, !dbg !17299
  br i1 %6, label %7, label %9, !dbg !17302

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17303
  br label %14, !dbg !17304

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17306
  %11 = icmp ugt i64 %2, 1, !dbg !17307
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17307
  %13 = add nsw i64 %10, %12, !dbg !17308
  br label %14, !dbg !17309

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17310
  ret i64 %15, !dbg !17311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17312 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.206, i32 0, i32 0)) #25, !dbg !17314
  ret void, !dbg !17315
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17316 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17318, metadata !DIExpression()), !dbg !17338
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17319, metadata !DIExpression()), !dbg !17339
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17340

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17341

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17319, metadata !DIExpression()), !dbg !17339
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17342
  %6 = load i8*, i8** %5, align 4, !dbg !17342
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17346
  %8 = load i32, i32* %7, align 4, !dbg !17346
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !17347
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17348
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17319, metadata !DIExpression()), !dbg !17339
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17349
  br i1 %10, label %3, label %2, !dbg !17340, !llvm.loop !17351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17353 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17357, metadata !DIExpression()), !dbg !17360
  call void @llvm.dbg.value(metadata i8* %1, metadata !17358, metadata !DIExpression()), !dbg !17360
  call void @llvm.dbg.value(metadata i32 %2, metadata !17359, metadata !DIExpression()), !dbg !17360
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17361
  tail call fastcc void @z_waitq_init.208(%union.anon* noundef nonnull %4) #26, !dbg !17362
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17363
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !17364
  ret void, !dbg !17365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.208(%union.anon* noundef %0) unnamed_addr #4 !dbg !17366 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17371, metadata !DIExpression()), !dbg !17372
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17373
  tail call fastcc void @sys_dlist_init.209(%struct._dnode* noundef %2) #26, !dbg !17374
  ret void, !dbg !17375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.209(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17376 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17381, metadata !DIExpression()), !dbg !17382
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17383
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17384
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17385
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17386
  ret void, !dbg !17387
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17388 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17399, metadata !DIExpression()), !dbg !17409
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17396, metadata !DIExpression()), !dbg !17409
  call void @llvm.dbg.value(metadata i32 %1, metadata !17397, metadata !DIExpression()), !dbg !17409
  call void @llvm.dbg.value(metadata i32 %2, metadata !17398, metadata !DIExpression()), !dbg !17409
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !17410
  call void @llvm.dbg.value(metadata i64 %6, metadata !17401, metadata !DIExpression()), !dbg !17409
  call void @llvm.dbg.value(metadata i8* null, metadata !17402, metadata !DIExpression()), !dbg !17409
  %7 = icmp eq i64 %5, -1, !dbg !17411
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17411
  call void @llvm.dbg.value(metadata i64 %8, metadata !17401, metadata !DIExpression()), !dbg !17409
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17412
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17413, metadata !DIExpression()) #24, !dbg !17420
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17422, !srcloc !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !17425, metadata !DIExpression()) #24, !dbg !17429
  call void @llvm.dbg.value(metadata i32 undef, metadata !17426, metadata !DIExpression()) #24, !dbg !17429
  call void @llvm.dbg.value(metadata i32 undef, metadata !17419, metadata !DIExpression()) #24, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !17403, metadata !DIExpression()), !dbg !17409
  call void @llvm.dbg.value(metadata i8 0, metadata !17408, metadata !DIExpression()), !dbg !17409
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17402, metadata !DIExpression()), !dbg !17409
  call void @llvm.dbg.value(metadata i8 0, metadata !17408, metadata !DIExpression()), !dbg !17409
  call void @llvm.dbg.value(metadata i32 undef, metadata !17403, metadata !DIExpression()), !dbg !17409
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17430
  call void @llvm.dbg.value(metadata i8* %12, metadata !17402, metadata !DIExpression()), !dbg !17409
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !17432
  call void @llvm.dbg.value(metadata i64 %13, metadata !17400, metadata !DIExpression()), !dbg !17409
  %14 = icmp eq i8* %12, null, !dbg !17433
  br i1 %14, label %15, label %31, !dbg !17435

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17403, metadata !DIExpression()), !dbg !17409
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17435

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17408, metadata !DIExpression()), !dbg !17409
  %20 = sub nsw i64 %8, %18, !dbg !17436
  %21 = icmp slt i64 %20, 1, !dbg !17437
  br i1 %21, label %31, label %22, !dbg !17438

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17409
  call void @llvm.dbg.value(metadata i8 undef, metadata !17408, metadata !DIExpression()), !dbg !17409
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17439
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17439
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #25, !dbg !17439
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17413, metadata !DIExpression()) #24, !dbg !17440
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17442, !srcloc !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !17425, metadata !DIExpression()) #24, !dbg !17444
  call void @llvm.dbg.value(metadata i32 undef, metadata !17426, metadata !DIExpression()) #24, !dbg !17444
  call void @llvm.dbg.value(metadata i32 undef, metadata !17419, metadata !DIExpression()) #24, !dbg !17440
  call void @llvm.dbg.value(metadata i32 undef, metadata !17403, metadata !DIExpression()), !dbg !17409
  call void @llvm.dbg.value(metadata i8* null, metadata !17402, metadata !DIExpression()), !dbg !17409
  call void @llvm.dbg.value(metadata i32 undef, metadata !17403, metadata !DIExpression()), !dbg !17409
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17430
  call void @llvm.dbg.value(metadata i8* %28, metadata !17402, metadata !DIExpression()), !dbg !17409
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !17432
  call void @llvm.dbg.value(metadata i64 %29, metadata !17400, metadata !DIExpression()), !dbg !17409
  %30 = icmp eq i8* %28, null, !dbg !17433
  br i1 %30, label %17, label %31, !dbg !17435, !llvm.loop !17445

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17430
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17409
  call void @llvm.dbg.value(metadata i8* %33, metadata !17402, metadata !DIExpression()), !dbg !17409
  call void @llvm.dbg.value(metadata i32 %34, metadata !17448, metadata !DIExpression()) #24, !dbg !17454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17453, metadata !DIExpression()) #24, !dbg !17454
  call void @llvm.dbg.value(metadata i32 %34, metadata !17456, metadata !DIExpression()) #24, !dbg !17459
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #24, !dbg !17461, !srcloc !17462
  ret i8* %33, !dbg !17463
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17464 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17470, metadata !DIExpression()), !dbg !17472
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17468, metadata !DIExpression()), !dbg !17472
  call void @llvm.dbg.value(metadata i32 %1, metadata !17469, metadata !DIExpression()), !dbg !17472
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17473
  call void @llvm.dbg.value(metadata i8* %4, metadata !17471, metadata !DIExpression()), !dbg !17472
  ret i8* %4, !dbg !17474
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17475 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17479, metadata !DIExpression()), !dbg !17482
  call void @llvm.dbg.value(metadata i8* %1, metadata !17480, metadata !DIExpression()), !dbg !17482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17413, metadata !DIExpression()) #24, !dbg !17483
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17485, !srcloc !17428
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17485
  call void @llvm.dbg.value(metadata i32 %4, metadata !17425, metadata !DIExpression()) #24, !dbg !17487
  call void @llvm.dbg.value(metadata i32 undef, metadata !17426, metadata !DIExpression()) #24, !dbg !17487
  call void @llvm.dbg.value(metadata i32 %4, metadata !17419, metadata !DIExpression()) #24, !dbg !17483
  call void @llvm.dbg.value(metadata i32 %4, metadata !17481, metadata !DIExpression()), !dbg !17482
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17488
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !17489
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17490
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #25, !dbg !17492
  %8 = icmp eq i32 %7, 0, !dbg !17493
  br i1 %8, label %12, label %9, !dbg !17494

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17495
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17496
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !17496
  br label %13, !dbg !17498

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17448, metadata !DIExpression()) #24, !dbg !17499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17453, metadata !DIExpression()) #24, !dbg !17499
  call void @llvm.dbg.value(metadata i32 %4, metadata !17456, metadata !DIExpression()) #24, !dbg !17502
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !17504, !srcloc !17462
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17505
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!745, !2, !2535, !27, !113, !2537, !2539, !2572, !2609, !122, !177, !2611, !206, !2693, !2704, !2750, !2752, !2780, !2808, !2851, !2922, !2967, !353, !502, !2995, !538, !548, !573, !777, !3000, !915, !1117, !1420, !1684, !3039, !1797, !1887, !3041, !3127, !3192, !1938, !3195, !1944, !2307, !3213, !2327, !2350, !3215, !2465, !3218, !2504}
!llvm.ident = !{!3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220, !3220}
!llvm.module.flags = !{!3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "prompt", scope: !27, file: !105, line: 9, type: !106, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/samples/subsys/console/echo/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 400, elements: !109)
!107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!108 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!109 = !{!110}
!110 = !DISubrange(count: 50)
!111 = !DIGlobalVariableExpression(var: !112, expr: !DIExpression())
!112 = distinct !DIGlobalVariable(name: "_char_out", scope: !113, file: !116, line: 54, type: !117, isLocal: false, isDefinition: true)
!113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !115, splitDebugInlining: false, nameTableKind: None)
!114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!115 = !{!111}
!116 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DISubroutineType(types: !119)
!119 = !{!103, !103}
!120 = !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!121 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !122, file: !140, line: 56, type: !141, isLocal: true, isDefinition: true, align: 32)
!122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !123, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !124, globals: !139, splitDebugInlining: false, nameTableKind: None)
!123 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 259, baseType: !128)
!127 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 250, size: 224, elements: !129)
!129 = !{!130, !133, !134, !135, !136, !137, !138}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !128, file: !127, line: 252, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !132)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !128, file: !127, line: 253, baseType: !131, size: 32, offset: 32)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !128, file: !127, line: 254, baseType: !131, size: 32, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !128, file: !127, line: 255, baseType: !131, size: 32, offset: 96)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !128, file: !127, line: 256, baseType: !131, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !128, file: !127, line: 257, baseType: !131, size: 32, offset: 160)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !128, file: !127, line: 258, baseType: !131, size: 32, offset: 192)
!139 = !{!120}
!140 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !{!145, !174}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !142, file: !143, line: 60, baseType: !146, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DISubroutineType(types: !148)
!148 = !{!103, !149}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !153)
!152 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!153 = !{!154, !156, !157, !158, !167, !168}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !151, file: !152, line: 380, baseType: !155, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !151, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !151, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !151, file: !152, line: 386, baseType: !159, size: 32, offset: 96)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !161)
!161 = !{!162, !165}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !160, file: !152, line: 359, baseType: !163, size: 8)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !164)
!164 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !160, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!166 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !151, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !151, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !171)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !152, line: 43, baseType: !172)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !173)
!173 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !142, file: !143, line: 65, baseType: !149, size: 32, offset: 32)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !177, file: !180, line: 71, type: !181, isLocal: true, isDefinition: true, align: 32)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !179, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!179 = !{!175}
!180 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !183)
!183 = !{!184, !203}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !182, file: !143, line: 60, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!186 = !DISubroutineType(types: !187)
!187 = !{!103, !188}
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !190)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !191)
!191 = !{!192, !193, !194, !195, !201, !202}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !190, file: !152, line: 380, baseType: !155, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !190, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !190, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !190, file: !152, line: 386, baseType: !196, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !198)
!198 = !{!199, !200}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !197, file: !152, line: 359, baseType: !163, size: 8)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !197, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !190, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !190, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !182, file: !143, line: 65, baseType: !188, size: 32, offset: 32)
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "console_serial", scope: !206, file: !297, line: 13, type: !306, isLocal: true, isDefinition: true)
!206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !207, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !208, globals: !294, splitDebugInlining: false, nameTableKind: None)
!207 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!208 = !{!209, !102, !103}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !213)
!212 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !{!214, !234, !238, !242, !255, !260, !266, !272, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !211, file: !212, line: 365, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!216 = !DISubroutineType(types: !217)
!217 = !{!103, !218, !233}
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !220)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !221)
!221 = !{!222, !223, !224, !225, !231, !232}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !220, file: !152, line: 380, baseType: !155, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !220, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !220, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !220, file: !152, line: 386, baseType: !226, size: 32, offset: 96)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !228)
!228 = !{!229, !230}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !227, file: !152, line: 359, baseType: !163, size: 8)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !227, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !220, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !220, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !211, file: !212, line: 366, baseType: !235, size: 32, offset: 32)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = !DISubroutineType(types: !237)
!237 = !{null, !218, !164}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !211, file: !212, line: 374, baseType: !239, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = !DISubroutineType(types: !241)
!241 = !{!103, !218}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !211, file: !212, line: 377, baseType: !243, size: 32, offset: 96)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DISubroutineType(types: !245)
!245 = !{!103, !218, !246}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !249)
!249 = !{!250, !251, !252, !253, !254}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !248, file: !212, line: 123, baseType: !132, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !248, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !248, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !248, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !248, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !211, file: !212, line: 379, baseType: !256, size: 32, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DISubroutineType(types: !258)
!258 = !{!103, !218, !259}
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !211, file: !212, line: 384, baseType: !261, size: 32, offset: 160)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DISubroutineType(types: !263)
!263 = !{!103, !218, !264, !103}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !211, file: !212, line: 393, baseType: !267, size: 32, offset: 192)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = !DISubroutineType(types: !269)
!269 = !{!103, !218, !270, !271}
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !211, file: !212, line: 402, baseType: !273, size: 32, offset: 224)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DISubroutineType(types: !275)
!275 = !{null, !218}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !211, file: !212, line: 405, baseType: !273, size: 32, offset: 256)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !211, file: !212, line: 408, baseType: !239, size: 32, offset: 288)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !211, file: !212, line: 411, baseType: !273, size: 32, offset: 320)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !211, file: !212, line: 414, baseType: !273, size: 32, offset: 352)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !211, file: !212, line: 417, baseType: !239, size: 32, offset: 384)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !211, file: !212, line: 420, baseType: !239, size: 32, offset: 416)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !211, file: !212, line: 423, baseType: !273, size: 32, offset: 448)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !211, file: !212, line: 426, baseType: !273, size: 32, offset: 480)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !211, file: !212, line: 429, baseType: !239, size: 32, offset: 512)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !211, file: !212, line: 432, baseType: !239, size: 32, offset: 544)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !211, file: !212, line: 435, baseType: !287, size: 32, offset: 576)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !218, !290, !102}
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DISubroutineType(types: !293)
!293 = !{null, !218, !102}
!294 = !{!204, !295, !301}
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "console_rxbuf", scope: !206, file: !297, line: 15, type: !298, isLocal: true, isDefinition: true)
!297 = !DIFile(filename: "zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 512, elements: !299)
!299 = !{!300}
!300 = !DISubrange(count: 64)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "console_txbuf", scope: !206, file: !297, line: 16, type: !303, isLocal: true, isDefinition: true)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 4096, elements: !304)
!304 = !{!305}
!305 = !DISubrange(count: 512)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !307, line: 18, size: 544, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/console/tty.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !310, !337, !338, !339, !342, !343, !345, !346, !347, !348, !349, !350}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !306, file: !307, line: 19, baseType: !218, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !306, file: !307, line: 21, baseType: !311, size: 128, offset: 32)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !313)
!312 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = !{!314, !335, !336}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !311, file: !312, line: 2910, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !318)
!318 = !{!319}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !317, file: !316, line: 232, baseType: !320, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !323)
!323 = !{!324, !330}
!324 = !DIDerivedType(tag: DW_TAG_member, scope: !322, file: !321, line: 38, baseType: !325, size: 32)
!325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !322, file: !321, line: 38, size: 32, elements: !326)
!326 = !{!327, !329}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !325, file: !321, line: 39, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !325, file: !321, line: 40, baseType: !328, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, scope: !322, file: !321, line: 42, baseType: !331, size: 32, offset: 32)
!331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !322, file: !321, line: 42, size: 32, elements: !332)
!332 = !{!333, !334}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !331, file: !321, line: 43, baseType: !328, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !331, file: !321, line: 44, baseType: !328, size: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !311, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !311, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !306, file: !307, line: 22, baseType: !270, size: 32, offset: 160)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !306, file: !307, line: 23, baseType: !132, size: 32, offset: 192)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !306, file: !307, line: 24, baseType: !340, size: 16, offset: 224)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !341)
!341 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !306, file: !307, line: 24, baseType: !340, size: 16, offset: 240)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !306, file: !307, line: 25, baseType: !344, size: 32, offset: 256)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !306, file: !307, line: 27, baseType: !311, size: 128, offset: 288)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !306, file: !307, line: 28, baseType: !270, size: 32, offset: 416)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !306, file: !307, line: 29, baseType: !132, size: 32, offset: 448)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !306, file: !307, line: 30, baseType: !340, size: 16, offset: 480)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !306, file: !307, line: 30, baseType: !340, size: 16, offset: 496)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !306, file: !307, line: 31, baseType: !344, size: 32, offset: 512)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "static_regions", scope: !353, file: !362, line: 62, type: !498, isLocal: true, isDefinition: true)
!353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !355, globals: !358, splitDebugInlining: false, nameTableKind: None)
!354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!355 = !{!356, !103, !132, !102}
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !357, line: 214, baseType: !32)
!357 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !351}
!359 = !DIGlobalVariableExpression(var: !360, expr: !DIExpression())
!360 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !361, file: !362, line: 198, type: !484, isLocal: true, isDefinition: true)
!361 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !362, file: !362, line: 175, type: !363, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !353, retainedNodes: !479)
!362 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!363 = !DISubroutineType(types: !364)
!364 = !{null, !365}
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !368)
!367 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!368 = !{!369, !434, !447, !448, !449, !450, !456, !474}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !366, file: !367, line: 247, baseType: !370, size: 384)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !371)
!371 = !{!372, !399, !406, !407, !408, !419, !420, !421}
!372 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 60, baseType: !373, size: 64)
!373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 60, size: 64, elements: !374)
!374 = !{!375, !390}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !373, file: !367, line: 61, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !378)
!378 = !{!379, !385}
!379 = !DIDerivedType(tag: DW_TAG_member, scope: !377, file: !321, line: 38, baseType: !380, size: 32)
!380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !377, file: !321, line: 38, size: 32, elements: !381)
!381 = !{!382, !384}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !380, file: !321, line: 39, baseType: !383, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !380, file: !321, line: 40, baseType: !383, size: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, scope: !377, file: !321, line: 42, baseType: !386, size: 32, offset: 32)
!386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !377, file: !321, line: 42, size: 32, elements: !387)
!387 = !{!388, !389}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !386, file: !321, line: 43, baseType: !383, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !386, file: !321, line: 44, baseType: !383, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !373, file: !367, line: 62, baseType: !391, size: 64)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !393)
!392 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!394}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !391, file: !392, line: 50, baseType: !395, size: 64)
!395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 64, elements: !397)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!397 = !{!398}
!398 = !DISubrange(count: 2)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !370, file: !367, line: 68, baseType: !400, size: 32, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !402, file: !316, line: 232, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !377)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !370, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !370, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!408 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !367, line: 90, baseType: !409, size: 16, offset: 112)
!409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !370, file: !367, line: 90, size: 16, elements: !410)
!410 = !{!411, !418}
!411 = !DIDerivedType(tag: DW_TAG_member, scope: !409, file: !367, line: 91, baseType: !412, size: 16)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !409, file: !367, line: 91, size: 16, elements: !413)
!413 = !{!414, !417}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !412, file: !367, line: 96, baseType: !415, size: 8)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !416)
!416 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !412, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !409, file: !367, line: 100, baseType: !340, size: 16)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !370, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !370, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !370, file: !367, line: 131, baseType: !422, size: 192, offset: 192)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !423)
!423 = !{!424, !425, !431}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !422, file: !316, line: 245, baseType: !376, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !422, file: !316, line: 246, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !427)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 32)
!428 = !DISubroutineType(types: !429)
!429 = !{null, !430}
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !422, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !433)
!433 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !366, file: !367, line: 250, baseType: !435, size: 288, offset: 384)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{!438, !439, !440, !441, !442, !443, !444, !445, !446}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !435, file: !436, line: 26, baseType: !132, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !435, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !435, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !435, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !435, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !435, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !435, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !435, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !435, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !366, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !366, file: !367, line: 256, baseType: !401, size: 64, offset: 704)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !366, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !366, file: !367, line: 300, baseType: !451, size: 96, offset: 800)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !452)
!452 = !{!453, !454, !455}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !451, file: !367, line: 153, baseType: !22, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !451, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !451, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !366, file: !367, line: 325, baseType: !457, size: 32, offset: 896)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !459)
!459 = !{!460, !469, !470}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !458, file: !312, line: 5074, baseType: !461, size: 96)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !463)
!462 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!463 = !{!464, !467, !468}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !461, file: !462, line: 57, baseType: !465, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 32)
!466 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !462, line: 57, flags: DIFlagFwdDecl)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !461, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !461, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !458, file: !312, line: 5075, baseType: !401, size: 64, offset: 96)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !458, file: !312, line: 5076, baseType: !471, offset: 160)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !366, file: !367, line: 343, baseType: !475, size: 64, offset: 928)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !476)
!476 = !{!477, !478}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !475, file: !436, line: 63, baseType: !132, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !475, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!479 = !{!480, !481, !482, !483}
!480 = !DILocalVariable(name: "thread", arg: 1, scope: !361, file: !362, line: 175, type: !365)
!481 = !DILocalVariable(name: "region_num", scope: !361, file: !362, line: 200, type: !163)
!482 = !DILocalVariable(name: "guard_start", scope: !361, file: !362, line: 265, type: !22)
!483 = !DILocalVariable(name: "guard_size", scope: !361, file: !362, line: 266, type: !356)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 96, elements: !496)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !486, line: 52, size: 96, elements: !487)
!486 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!487 = !{!488, !489, !490}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !485, file: !486, line: 53, baseType: !22, size: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !485, file: !486, line: 54, baseType: !356, size: 32, offset: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !485, file: !486, line: 55, baseType: !491, size: 32, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !492, line: 151, baseType: !493)
!492 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !492, line: 149, size: 32, elements: !494)
!494 = !{!495}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !493, file: !492, line: 150, baseType: !132, size: 32)
!496 = !{!497}
!497 = !DISubrange(count: 1)
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 96, elements: !496)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !502, file: !535, line: 39, type: !163, isLocal: true, isDefinition: true)
!502 = distinct !DICompileUnit(language: DW_LANG_C99, file: !503, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !504, globals: !534, splitDebugInlining: false, nameTableKind: None)
!503 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!504 = !{!505, !102, !103, !522, !163}
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !507, line: 1226, baseType: !508)
!507 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 1213, size: 352, elements: !509)
!509 = !{!510, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !508, file: !507, line: 1215, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !508, file: !507, line: 1216, baseType: !131, size: 32, offset: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !508, file: !507, line: 1217, baseType: !131, size: 32, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !508, file: !507, line: 1218, baseType: !131, size: 32, offset: 96)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !508, file: !507, line: 1219, baseType: !131, size: 32, offset: 128)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !508, file: !507, line: 1220, baseType: !131, size: 32, offset: 160)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !508, file: !507, line: 1221, baseType: !131, size: 32, offset: 192)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !508, file: !507, line: 1222, baseType: !131, size: 32, offset: 224)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !508, file: !507, line: 1223, baseType: !131, size: 32, offset: 256)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !508, file: !507, line: 1224, baseType: !131, size: 32, offset: 288)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !508, file: !507, line: 1225, baseType: !131, size: 32, offset: 320)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !525, line: 27, size: 96, elements: !526)
!525 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!526 = !{!527, !528, !529}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !524, file: !525, line: 29, baseType: !132, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !525, line: 31, baseType: !155, size: 32, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !524, file: !525, line: 37, baseType: !530, size: 32, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !492, line: 146, baseType: !531)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !492, line: 141, size: 32, elements: !532)
!532 = !{!533}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !531, file: !492, line: 143, baseType: !132, size: 32)
!534 = !{!500}
!535 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !538, file: !545, line: 21, type: !117, isLocal: true, isDefinition: true)
!538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !540, globals: !544, splitDebugInlining: false, nameTableKind: None)
!539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!540 = !{!541, !103, !102}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !543, line: 22, baseType: !103)
!543 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !{!536}
!545 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !548, file: !553, line: 13, type: !570, isLocal: true, isDefinition: true)
!548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !549, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !550, splitDebugInlining: false, nameTableKind: None)
!549 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!550 = !{!551, !546}
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(name: "mpu_config", scope: !548, file: !553, line: 37, type: !554, isLocal: false, isDefinition: true)
!553 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !525, line: 41, size: 64, elements: !556)
!556 = !{!557, !558}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !555, file: !525, line: 43, baseType: !132, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !555, file: !525, line: 45, baseType: !559, size: 32, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !561)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !525, line: 27, size: 96, elements: !562)
!562 = !{!563, !564, !565}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !561, file: !525, line: 29, baseType: !132, size: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !561, file: !525, line: 31, baseType: !155, size: 32, offset: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !561, file: !525, line: 37, baseType: !566, size: 32, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !492, line: 146, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !492, line: 141, size: 32, elements: !568)
!568 = !{!569}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !567, file: !492, line: 143, baseType: !132, size: 32)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !560, size: 192, elements: !397)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !573, file: !657, line: 72, type: !740, isLocal: true, isDefinition: true)
!573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !575, retainedTypes: !643, globals: !654, splitDebugInlining: false, nameTableKind: None)
!574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!575 = !{!30, !576}
!576 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !127, line: 65, baseType: !103, size: 32, elements: !577)
!577 = !{!578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642}
!578 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!579 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!580 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!581 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!582 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!583 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!584 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!585 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!586 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!587 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!588 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!589 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!590 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!591 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!592 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!593 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!594 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!595 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!596 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!597 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!598 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!599 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!600 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!601 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!602 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!603 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!604 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!605 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!606 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!607 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!608 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!609 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!610 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!611 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!612 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!613 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!614 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!615 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!616 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!617 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!618 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!619 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!620 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!621 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!622 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!623 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!624 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!625 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!626 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!627 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!628 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!629 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!630 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!631 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!632 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!633 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!634 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!635 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!636 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!637 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!638 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!639 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!640 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!641 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!642 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!643 = !{!356, !103, !102, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !127, line: 244, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 236, size: 192, elements: !647)
!647 = !{!648, !649, !650, !651, !652, !653}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !646, file: !127, line: 238, baseType: !131, size: 32)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !646, file: !127, line: 239, baseType: !131, size: 32, offset: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !646, file: !127, line: 240, baseType: !131, size: 32, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !646, file: !127, line: 241, baseType: !131, size: 32, offset: 96)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !646, file: !127, line: 242, baseType: !131, size: 32, offset: 128)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !646, file: !127, line: 243, baseType: !131, size: 32, offset: 160)
!654 = !{!655, !661, !677, !688, !705, !571, !707, !720, !722, !724, !726, !728, !730, !732, !734, !736, !738}
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !573, file: !657, line: 424, type: !658, isLocal: false, isDefinition: true, align: 16)
!657 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 64, elements: !659)
!659 = !{!660}
!660 = !DISubrange(count: 4)
!661 = !DIGlobalVariableExpression(var: !662, expr: !DIExpression())
!662 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !573, file: !657, line: 424, type: !663, isLocal: false, isDefinition: true, align: 32)
!663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !664)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !665)
!665 = !{!666, !667, !668, !669, !675, !676}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !664, file: !152, line: 380, baseType: !155, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !664, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !664, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !664, file: !152, line: 386, baseType: !670, size: 32, offset: 96)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 32)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !672)
!672 = !{!673, !674}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !671, file: !152, line: 359, baseType: !163, size: 8)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !671, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !664, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !664, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!677 = !DIGlobalVariableExpression(var: !678, expr: !DIExpression())
!678 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !573, file: !657, line: 424, type: !679, isLocal: true, isDefinition: true, align: 32)
!679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !681)
!681 = !{!682, !687}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !680, file: !143, line: 60, baseType: !683, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 32)
!684 = !DISubroutineType(types: !685)
!685 = !{!103, !686}
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !680, file: !143, line: 65, baseType: !686, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "exti_data", scope: !573, file: !657, line: 423, type: !690, isLocal: true, isDefinition: true)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !657, line: 107, size: 1472, elements: !691)
!691 = !{!692}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !690, file: !657, line: 109, baseType: !693, size: 1472)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !694, size: 1472, elements: !703)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !657, line: 101, size: 64, elements: !695)
!695 = !{!696, !702}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !694, file: !657, line: 102, baseType: !697, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !698, line: 63, baseType: !699)
!698 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!700 = !DISubroutineType(types: !701)
!701 = !{null, !103, !102}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !694, file: !657, line: 103, baseType: !102, size: 32, offset: 32)
!703 = !{!704}
!704 = !DISubrange(count: 23)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !573, file: !657, line: 424, type: !671, isLocal: true, isDefinition: true, align: 8)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !709, file: !657, line: 493, type: !714, isLocal: true, isDefinition: true, align: 32)
!709 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !657, file: !657, line: 460, type: !710, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !712)
!710 = !DISubroutineType(types: !711)
!711 = !{null, !686}
!712 = !{!713}
!713 = !DILocalVariable(name: "dev", arg: 1, scope: !709, file: !657, line: 460, type: !686)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !715)
!715 = !{!716, !717, !718, !719}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !714, file: !10, line: 55, baseType: !344, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !714, file: !10, line: 57, baseType: !344, size: 32, offset: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !714, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !714, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !709, file: !657, line: 497, type: !714, isLocal: true, isDefinition: true, align: 32)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !709, file: !657, line: 507, type: !714, isLocal: true, isDefinition: true, align: 32)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !709, file: !657, line: 512, type: !714, isLocal: true, isDefinition: true, align: 32)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !709, file: !657, line: 516, type: !714, isLocal: true, isDefinition: true, align: 32)
!728 = !DIGlobalVariableExpression(var: !729, expr: !DIExpression())
!729 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !709, file: !657, line: 523, type: !714, isLocal: true, isDefinition: true, align: 32)
!730 = !DIGlobalVariableExpression(var: !731, expr: !DIExpression())
!731 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !709, file: !657, line: 527, type: !714, isLocal: true, isDefinition: true, align: 32)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !709, file: !657, line: 581, type: !714, isLocal: true, isDefinition: true, align: 32)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !709, file: !657, line: 586, type: !714, isLocal: true, isDefinition: true, align: 32)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !709, file: !657, line: 591, type: !714, isLocal: true, isDefinition: true, align: 32)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !709, file: !657, line: 595, type: !714, isLocal: true, isDefinition: true, align: 32)
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !741, size: 736, elements: !703)
!741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !742)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !127, line: 134, baseType: !576)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !745, file: !750, line: 22, type: !772, isLocal: false, isDefinition: true, align: 16)
!745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !746, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !747, splitDebugInlining: false, nameTableKind: None)
!746 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!747 = !{!748, !743, !754, !756, !758, !760, !762, !764, !766, !768, !770}
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !745, file: !750, line: 17, type: !751, isLocal: false, isDefinition: true, align: 16)
!750 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 192, elements: !752)
!752 = !{!753}
!753 = !DISubrange(count: 12)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !745, file: !750, line: 29, type: !658, isLocal: false, isDefinition: true, align: 16)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !745, file: !750, line: 36, type: !658, isLocal: false, isDefinition: true, align: 16)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !745, file: !750, line: 43, type: !658, isLocal: false, isDefinition: true, align: 16)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !745, file: !750, line: 50, type: !658, isLocal: false, isDefinition: true, align: 16)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !745, file: !750, line: 57, type: !658, isLocal: false, isDefinition: true, align: 16)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !745, file: !750, line: 64, type: !658, isLocal: false, isDefinition: true, align: 16)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !745, file: !750, line: 71, type: !658, isLocal: false, isDefinition: true, align: 16)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !745, file: !750, line: 78, type: !658, isLocal: false, isDefinition: true, align: 16)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !745, file: !750, line: 85, type: !658, isLocal: false, isDefinition: true, align: 16)
!772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 48, elements: !773)
!773 = !{!774}
!774 = !DISubrange(count: 3)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !777, file: !841, line: 398, type: !874, isLocal: true, isDefinition: true)
!777 = distinct !DICompileUnit(language: DW_LANG_C99, file: !778, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !779, retainedTypes: !792, globals: !838, splitDebugInlining: false, nameTableKind: None)
!778 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!779 = !{!780, !30, !785}
!780 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !781, line: 197, baseType: !32, size: 32, elements: !782)
!781 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!782 = !{!783, !784}
!783 = !DIEnumerator(name: "SUCCESS", value: 0)
!784 = !DIEnumerator(name: "ERROR", value: 1)
!785 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !786, line: 44, baseType: !32, size: 32, elements: !787)
!786 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!787 = !{!788, !789, !790, !791}
!788 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!789 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!790 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!791 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!792 = !{!102, !103, !132, !793, !831, !837}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 370, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 336, size: 1152, elements: !796)
!796 = !{!797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !830}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !795, file: !127, line: 338, baseType: !131, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !795, file: !127, line: 339, baseType: !131, size: 32, offset: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !795, file: !127, line: 340, baseType: !131, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !795, file: !127, line: 341, baseType: !131, size: 32, offset: 96)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !795, file: !127, line: 342, baseType: !131, size: 32, offset: 128)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !795, file: !127, line: 343, baseType: !131, size: 32, offset: 160)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !795, file: !127, line: 344, baseType: !131, size: 32, offset: 192)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !795, file: !127, line: 345, baseType: !132, size: 32, offset: 224)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !795, file: !127, line: 346, baseType: !131, size: 32, offset: 256)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !795, file: !127, line: 347, baseType: !131, size: 32, offset: 288)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !795, file: !127, line: 348, baseType: !808, size: 64, offset: 320)
!808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 64, elements: !397)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !795, file: !127, line: 349, baseType: !131, size: 32, offset: 384)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !795, file: !127, line: 350, baseType: !131, size: 32, offset: 416)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !795, file: !127, line: 351, baseType: !131, size: 32, offset: 448)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !795, file: !127, line: 352, baseType: !132, size: 32, offset: 480)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !795, file: !127, line: 353, baseType: !131, size: 32, offset: 512)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !795, file: !127, line: 354, baseType: !131, size: 32, offset: 544)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !795, file: !127, line: 355, baseType: !808, size: 64, offset: 576)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !795, file: !127, line: 356, baseType: !131, size: 32, offset: 640)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !795, file: !127, line: 357, baseType: !131, size: 32, offset: 672)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !795, file: !127, line: 358, baseType: !131, size: 32, offset: 704)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !795, file: !127, line: 359, baseType: !132, size: 32, offset: 736)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !795, file: !127, line: 360, baseType: !131, size: 32, offset: 768)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !795, file: !127, line: 361, baseType: !131, size: 32, offset: 800)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !795, file: !127, line: 362, baseType: !808, size: 64, offset: 832)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !795, file: !127, line: 363, baseType: !131, size: 32, offset: 896)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !795, file: !127, line: 364, baseType: !131, size: 32, offset: 928)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !795, file: !127, line: 365, baseType: !808, size: 64, offset: 960)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !795, file: !127, line: 366, baseType: !131, size: 32, offset: 1024)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !795, file: !127, line: 367, baseType: !131, size: 32, offset: 1056)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !795, file: !127, line: 368, baseType: !829, size: 32, offset: 1088)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 32, elements: !496)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !795, file: !127, line: 369, baseType: !131, size: 32, offset: 1120)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 32)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !833, line: 343, size: 64, elements: !834)
!833 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!834 = !{!835, !836}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !832, file: !833, line: 344, baseType: !132, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !832, file: !833, line: 345, baseType: !132, size: 32, offset: 32)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!838 = !{!839, !845, !861, !872, !775}
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !777, file: !841, line: 752, type: !842, isLocal: false, isDefinition: true, align: 16)
!841 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 704, elements: !843)
!843 = !{!844}
!844 = !DISubrange(count: 44)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !777, file: !841, line: 752, type: !847, isLocal: false, isDefinition: true, align: 32)
!847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !849)
!849 = !{!850, !851, !852, !853, !859, !860}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !848, file: !152, line: 380, baseType: !155, size: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !848, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !848, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !848, file: !152, line: 386, baseType: !854, size: 32, offset: 96)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 32)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !856)
!856 = !{!857, !858}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !855, file: !152, line: 359, baseType: !163, size: 8)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !855, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !848, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !848, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !777, file: !841, line: 752, type: !863, isLocal: true, isDefinition: true, align: 32)
!863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !865)
!865 = !{!866, !871}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !864, file: !143, line: 60, baseType: !867, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!868 = !DISubroutineType(types: !869)
!869 = !{!103, !870}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !864, file: !143, line: 65, baseType: !870, size: 32, offset: 32)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !777, file: !841, line: 752, type: !855, isLocal: true, isDefinition: true, align: 8)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !786, line: 100, size: 224, elements: !875)
!875 = !{!876, !882, !883, !892, !897, !902, !908}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !874, file: !786, line: 101, baseType: !877, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !786, line: 76, baseType: !878)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DISubroutineType(types: !880)
!880 = !{!103, !870, !881}
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !786, line: 56, baseType: !102)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !874, file: !786, line: 102, baseType: !877, size: 32, offset: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !874, file: !786, line: 103, baseType: !884, size: 32, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !786, line: 83, baseType: !885)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!886 = !DISubroutineType(types: !887)
!887 = !{!103, !870, !881, !888, !102}
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !786, line: 72, baseType: !889)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 32)
!890 = !DISubroutineType(types: !891)
!891 = !{null, !870, !881, !102}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !874, file: !786, line: 104, baseType: !893, size: 32, offset: 96)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !786, line: 79, baseType: !894)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = !DISubroutineType(types: !896)
!896 = !{!103, !870, !881, !837}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !874, file: !786, line: 105, baseType: !898, size: 32, offset: 128)
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !786, line: 88, baseType: !899)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 32)
!900 = !DISubroutineType(types: !901)
!901 = !{!785, !870, !881}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !874, file: !786, line: 106, baseType: !903, size: 32, offset: 160)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !786, line: 92, baseType: !904)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!905 = !DISubroutineType(types: !906)
!906 = !{!103, !870, !881, !907}
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !786, line: 64, baseType: !102)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !874, file: !786, line: 107, baseType: !909, size: 32, offset: 192)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !786, line: 96, baseType: !910)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!911 = !DISubroutineType(types: !912)
!912 = !{!103, !870, !881, !102}
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "debug_hook_in", scope: !915, file: !919, line: 43, type: !1111, isLocal: true, isDefinition: true)
!915 = distinct !DICompileUnit(language: DW_LANG_C99, file: !916, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !917, retainedTypes: !926, globals: !1006, splitDebugInlining: false, nameTableKind: None)
!916 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!917 = !{!30, !918}
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !919, line: 214, baseType: !32, size: 32, elements: !920)
!919 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!920 = !{!921, !922, !923, !924, !925}
!921 = !DIEnumerator(name: "ESC_ESC", value: 0)
!922 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!923 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!924 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!925 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!926 = !{!102, !103, !927, !32, !24}
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !930)
!930 = !{!931, !950, !954, !958, !971, !976, !980, !984, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !929, file: !212, line: 365, baseType: !932, size: 32)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DISubroutineType(types: !934)
!934 = !{!103, !935, !233}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !937)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !938)
!938 = !{!939, !940, !941, !942, !948, !949}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !937, file: !152, line: 380, baseType: !155, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !937, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !937, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !937, file: !152, line: 386, baseType: !943, size: 32, offset: 96)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !945)
!945 = !{!946, !947}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !944, file: !152, line: 359, baseType: !163, size: 8)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !944, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !937, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !937, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !929, file: !212, line: 366, baseType: !951, size: 32, offset: 32)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DISubroutineType(types: !953)
!953 = !{null, !935, !164}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !929, file: !212, line: 374, baseType: !955, size: 32, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!103, !935}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !929, file: !212, line: 377, baseType: !959, size: 32, offset: 96)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{!103, !935, !962}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !964)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !965)
!965 = !{!966, !967, !968, !969, !970}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !964, file: !212, line: 123, baseType: !132, size: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !964, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !964, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !964, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !964, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !929, file: !212, line: 379, baseType: !972, size: 32, offset: 128)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DISubroutineType(types: !974)
!974 = !{!103, !935, !975}
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !929, file: !212, line: 384, baseType: !977, size: 32, offset: 160)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DISubroutineType(types: !979)
!979 = !{!103, !935, !264, !103}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !929, file: !212, line: 393, baseType: !981, size: 32, offset: 192)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DISubroutineType(types: !983)
!983 = !{!103, !935, !270, !271}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !929, file: !212, line: 402, baseType: !985, size: 32, offset: 224)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{null, !935}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !929, file: !212, line: 405, baseType: !985, size: 32, offset: 256)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !929, file: !212, line: 408, baseType: !955, size: 32, offset: 288)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !929, file: !212, line: 411, baseType: !985, size: 32, offset: 320)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !929, file: !212, line: 414, baseType: !985, size: 32, offset: 352)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !929, file: !212, line: 417, baseType: !955, size: 32, offset: 384)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !929, file: !212, line: 420, baseType: !955, size: 32, offset: 416)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !929, file: !212, line: 423, baseType: !985, size: 32, offset: 448)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !929, file: !212, line: 426, baseType: !985, size: 32, offset: 480)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !929, file: !212, line: 429, baseType: !955, size: 32, offset: 512)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !929, file: !212, line: 432, baseType: !955, size: 32, offset: 544)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !929, file: !212, line: 435, baseType: !999, size: 32, offset: 576)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{null, !935, !1002, !102}
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !1003)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{null, !935, !102}
!1006 = !{!1007, !913, !1014, !1056, !1058, !1064, !1071, !1074, !1099, !1103, !1105, !1107, !1109}
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !915, file: !919, line: 603, type: !1009, isLocal: true, isDefinition: true, align: 32)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1011)
!1011 = !{!1012, !1013}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1010, file: !143, line: 60, baseType: !955, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1010, file: !143, line: 65, baseType: !935, size: 32, offset: 32)
!1014 = !DIGlobalVariableExpression(var: !1015, expr: !DIExpression())
!1015 = distinct !DIGlobalVariable(name: "avail_queue", scope: !915, file: !919, line: 108, type: !1016, isLocal: true, isDefinition: true)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !312, line: 2208, size: 128, elements: !1018)
!1018 = !{!1019}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1017, file: !312, line: 2209, baseType: !1020, size: 128)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !312, line: 1709, size: 128, elements: !1021)
!1021 = !{!1022, !1035, !1037}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1020, file: !312, line: 1710, baseType: !1023, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !1024, line: 46, baseType: !1025)
!1024 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !1024, line: 41, size: 64, elements: !1026)
!1026 = !{!1027, !1034}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1025, file: !1024, line: 42, baseType: !1028, size: 32)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !1024, line: 39, baseType: !1030)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !1024, line: 35, size: 32, elements: !1031)
!1031 = !{!1032}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1030, file: !1024, line: 36, baseType: !1033, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !1024, line: 32, baseType: !132)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1025, file: !1024, line: 43, baseType: !1028, size: 32, offset: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1020, file: !312, line: 1711, baseType: !1036, offset: 64)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1020, file: !312, line: 1712, baseType: !1038, size: 64, offset: 64)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !1040)
!1040 = !{!1041}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1039, file: !316, line: 232, baseType: !1042, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !1043)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !1044)
!1044 = !{!1045, !1051}
!1045 = !DIDerivedType(tag: DW_TAG_member, scope: !1043, file: !321, line: 38, baseType: !1046, size: 32)
!1046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1043, file: !321, line: 38, size: 32, elements: !1047)
!1047 = !{!1048, !1050}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1046, file: !321, line: 39, baseType: !1049, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1046, file: !321, line: 40, baseType: !1049, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_member, scope: !1043, file: !321, line: 42, baseType: !1052, size: 32, offset: 32)
!1052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1043, file: !321, line: 42, size: 32, elements: !1053)
!1053 = !{!1054, !1055}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1052, file: !321, line: 43, baseType: !1049, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1052, file: !321, line: 44, baseType: !1049, size: 32)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "lines_queue", scope: !915, file: !919, line: 109, type: !1016, isLocal: true, isDefinition: true)
!1058 = !DIGlobalVariableExpression(var: !1059, expr: !DIExpression())
!1059 = distinct !DIGlobalVariable(name: "completion_cb", scope: !915, file: !919, line: 110, type: !1060, isLocal: true, isDefinition: true)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!163, !1063, !163}
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1064 = !DIGlobalVariableExpression(var: !1065, expr: !DIExpression())
!1065 = distinct !DIGlobalVariable(name: "debug_hook_out", scope: !915, file: !919, line: 54, type: !1066, isLocal: true, isDefinition: true)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_out_debug_hook_t", file: !1068, line: 40, baseType: !1069)
!1068 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/uart_console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!103, !108}
!1071 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression())
!1072 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !915, file: !919, line: 38, type: !1073, isLocal: true, isDefinition: true)
!1073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "cmd", scope: !1076, file: !919, line: 435, type: !1087, isLocal: true, isDefinition: true)
!1076 = distinct !DISubprogram(name: "uart_console_isr", scope: !919, file: !919, line: 428, type: !1004, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !1077)
!1077 = !{!1078, !1079, !1080, !1082, !1083}
!1078 = !DILocalVariable(name: "unused", arg: 1, scope: !1076, file: !919, line: 428, type: !935)
!1079 = !DILocalVariable(name: "user_data", arg: 2, scope: !1076, file: !919, line: 428, type: !102)
!1080 = !DILocalVariable(name: "byte", scope: !1081, file: !919, line: 436, type: !163)
!1081 = distinct !DILexicalBlock(scope: !1076, file: !919, line: 434, column: 48)
!1082 = !DILocalVariable(name: "rx", scope: !1081, file: !919, line: 437, type: !103)
!1083 = !DILocalVariable(name: "ret", scope: !1084, file: !919, line: 461, type: !102)
!1084 = distinct !DILexicalBlock(scope: !1085, file: !919, line: 461, column: 10)
!1085 = distinct !DILexicalBlock(scope: !1086, file: !919, line: 460, column: 13)
!1086 = distinct !DILexicalBlock(scope: !1081, file: !919, line: 460, column: 7)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !1089, line: 21, size: 1088, elements: !1090)
!1089 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1090 = !{!1091, !1094, !1095}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1088, file: !1089, line: 23, baseType: !1092, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !1093)
!1093 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1088, file: !1089, line: 25, baseType: !163, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1088, file: !1089, line: 27, baseType: !1096, size: 1024, offset: 40)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1024, elements: !1097)
!1097 = !{!1098}
!1098 = !DISubrange(count: 128)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "esc_state", scope: !915, file: !919, line: 228, type: !1101, isLocal: true, isDefinition: true)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1102, line: 22, baseType: !1093)
!1102 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "ansi_val", scope: !915, file: !919, line: 229, type: !32, isLocal: true, isDefinition: true)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !915, file: !919, line: 229, type: !32, isLocal: true, isDefinition: true)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "cur", scope: !915, file: !919, line: 230, type: !163, isLocal: true, isDefinition: true)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "end", scope: !915, file: !919, line: 230, type: !163, isLocal: true, isDefinition: true)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_in_debug_hook_t", file: !1068, line: 45, baseType: !1112)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!103, !163}
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1117, file: !1286, line: 762, type: !1395, isLocal: true, isDefinition: true)
!1117 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1118, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1119, retainedTypes: !1137, globals: !1283, splitDebugInlining: false, nameTableKind: None)
!1118 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!1119 = !{!30, !1120, !1126, !1131, !785}
!1120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1121, line: 506, baseType: !32, size: 32, elements: !1122)
!1121 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1122 = !{!1123, !1124, !1125}
!1123 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1124 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1125 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1121, line: 512, baseType: !32, size: 32, elements: !1127)
!1127 = !{!1128, !1129, !1130}
!1128 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1129 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1130 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1131 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !698, line: 43, baseType: !32, size: 32, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1136}
!1133 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1134 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1135 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1136 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1137 = !{!102, !103, !1138, !1208, !1213, !1173, !1126, !1120, !1218, !1219, !132, !1233, !1188, !1063, !1243, !1244}
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1121, line: 523, size: 288, elements: !1141)
!1141 = !{!1142, !1163, !1169, !1174, !1178, !1179, !1180, !1184, !1204}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1140, file: !1121, line: 524, baseType: !1143, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!103, !1146, !1161, !1162}
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1149)
!1149 = !{!1150, !1151, !1152, !1153, !1159, !1160}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1148, file: !152, line: 380, baseType: !155, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1148, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1148, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1148, file: !152, line: 386, baseType: !1154, size: 32, offset: 96)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1156)
!1156 = !{!1157, !1158}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1155, file: !152, line: 359, baseType: !163, size: 8)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1155, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1148, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1148, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1121, line: 237, baseType: !163)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1121, line: 257, baseType: !132)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1140, file: !1121, line: 530, baseType: !1164, size: 32, offset: 32)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!103, !1146, !1167}
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1121, line: 229, baseType: !132)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1140, file: !1121, line: 532, baseType: !1170, size: 32, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!103, !1146, !1173, !1168}
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1121, line: 216, baseType: !132)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1140, file: !1121, line: 535, baseType: !1175, size: 32, offset: 96)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!103, !1146, !1173}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1140, file: !1121, line: 537, baseType: !1175, size: 32, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1140, file: !1121, line: 539, baseType: !1175, size: 32, offset: 160)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1140, file: !1121, line: 541, baseType: !1181, size: 32, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!103, !1146, !1161, !1120, !1126}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1140, file: !1121, line: 544, baseType: !1185, size: 32, offset: 224)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!103, !1146, !1188, !166}
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1121, line: 478, size: 96, elements: !1190)
!1190 = !{!1191, !1198, !1203}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1189, file: !1121, line: 482, baseType: !1192, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1193, line: 33, baseType: !1194)
!1193 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1193, line: 29, size: 32, elements: !1195)
!1195 = !{!1196}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1194, file: !1193, line: 30, baseType: !1197, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1189, file: !1121, line: 485, baseType: !1199, size: 32, offset: 32)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1121, line: 464, baseType: !1200)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{null, !1146, !1188, !1173}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1189, file: !1121, line: 493, baseType: !1173, size: 32, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1140, file: !1121, line: 547, baseType: !1205, size: 32, offset: 256)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!132, !1146}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1121, line: 428, size: 32, elements: !1211)
!1211 = !{!1212}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1210, file: !1121, line: 434, baseType: !1173, size: 32)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1121, line: 441, size: 32, elements: !1216)
!1216 = !{!1217}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1215, file: !1121, line: 447, baseType: !1173, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !127, line: 276, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 265, size: 320, elements: !1222)
!1222 = !{!1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1221, file: !127, line: 267, baseType: !131, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1221, file: !127, line: 268, baseType: !131, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1221, file: !127, line: 269, baseType: !131, size: 32, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1221, file: !127, line: 270, baseType: !131, size: 32, offset: 96)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1221, file: !127, line: 271, baseType: !131, size: 32, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1221, file: !127, line: 272, baseType: !131, size: 32, offset: 160)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1221, file: !127, line: 273, baseType: !131, size: 32, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1221, file: !127, line: 274, baseType: !131, size: 32, offset: 224)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1221, file: !127, line: 275, baseType: !1232, size: 64, offset: 256)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 64, elements: !397)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !127, line: 289, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 282, size: 288, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1241, !1242}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1235, file: !127, line: 284, baseType: !131, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1235, file: !127, line: 285, baseType: !131, size: 32, offset: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1235, file: !127, line: 286, baseType: !1240, size: 128, offset: 64)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 128, elements: !659)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1235, file: !127, line: 287, baseType: !808, size: 64, offset: 192)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1235, file: !127, line: 288, baseType: !131, size: 32, offset: 256)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !786, line: 100, size: 224, elements: !1247)
!1247 = !{!1248, !1253, !1254, !1263, !1268, !1273, !1278}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1246, file: !786, line: 101, baseType: !1249, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !786, line: 76, baseType: !1250)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!103, !1146, !881}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1246, file: !786, line: 102, baseType: !1249, size: 32, offset: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1246, file: !786, line: 103, baseType: !1255, size: 32, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !786, line: 83, baseType: !1256)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!103, !1146, !881, !1259, !102}
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !786, line: 72, baseType: !1260)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{null, !1146, !881, !102}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1246, file: !786, line: 104, baseType: !1264, size: 32, offset: 96)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !786, line: 79, baseType: !1265)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!103, !1146, !881, !837}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1246, file: !786, line: 105, baseType: !1269, size: 32, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !786, line: 88, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!785, !1146, !881}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1246, file: !786, line: 106, baseType: !1274, size: 32, offset: 160)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !786, line: 92, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!103, !1146, !881, !907}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1246, file: !786, line: 107, baseType: !1279, size: 32, offset: 192)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !786, line: 96, baseType: !1280)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!103, !1146, !881, !102}
!1283 = !{!1284, !1290, !1292, !1302, !1307, !1309, !1311, !1313, !1315, !1317, !1319, !1321, !1323, !1325, !1327, !1329, !1331, !1333, !1335, !1337, !1339, !1341, !1343, !1345, !1347, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1375, !1377, !1379, !1381, !1383, !1385, !1387, !1389, !1115, !1391, !1393, !1406, !1408, !1410, !1412, !1414, !1416}
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1117, file: !1286, line: 762, type: !1287, isLocal: false, isDefinition: true, align: 16)
!1286 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 80, elements: !1288)
!1288 = !{!1289}
!1289 = !DISubrange(count: 5)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1117, file: !1286, line: 762, type: !1147, isLocal: false, isDefinition: true, align: 32)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1117, file: !1286, line: 762, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1296)
!1296 = !{!1297, !1301}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1295, file: !143, line: 60, baseType: !1298, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!103, !1146}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1295, file: !143, line: 65, baseType: !1146, size: 32, offset: 32)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1117, file: !1286, line: 766, type: !1304, isLocal: false, isDefinition: true, align: 16)
!1304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 160, elements: !1305)
!1305 = !{!1306}
!1306 = !DISubrange(count: 10)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1117, file: !1286, line: 766, type: !1147, isLocal: false, isDefinition: true, align: 32)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1117, file: !1286, line: 766, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1117, file: !1286, line: 770, type: !1287, isLocal: false, isDefinition: true, align: 16)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1117, file: !1286, line: 770, type: !1147, isLocal: false, isDefinition: true, align: 32)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1117, file: !1286, line: 770, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1117, file: !1286, line: 774, type: !1287, isLocal: false, isDefinition: true, align: 16)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1117, file: !1286, line: 774, type: !1147, isLocal: false, isDefinition: true, align: 32)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1117, file: !1286, line: 774, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1117, file: !1286, line: 778, type: !1287, isLocal: false, isDefinition: true, align: 16)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1117, file: !1286, line: 778, type: !1147, isLocal: false, isDefinition: true, align: 32)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1117, file: !1286, line: 778, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1117, file: !1286, line: 782, type: !1287, isLocal: false, isDefinition: true, align: 16)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1117, file: !1286, line: 782, type: !1147, isLocal: false, isDefinition: true, align: 32)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1117, file: !1286, line: 782, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1117, file: !1286, line: 786, type: !1287, isLocal: false, isDefinition: true, align: 16)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1117, file: !1286, line: 786, type: !1147, isLocal: false, isDefinition: true, align: 32)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1117, file: !1286, line: 786, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1117, file: !1286, line: 790, type: !1287, isLocal: false, isDefinition: true, align: 16)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1117, file: !1286, line: 790, type: !1147, isLocal: false, isDefinition: true, align: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1117, file: !1286, line: 790, type: !1294, isLocal: true, isDefinition: true, align: 32)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1117, file: !1286, line: 762, type: !1349, isLocal: true, isDefinition: true)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1350, line: 237, size: 128, elements: !1351)
!1350 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1351 = !{!1352, !1353, !1354}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1349, file: !1350, line: 239, baseType: !1215, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1349, file: !1350, line: 241, baseType: !1146, size: 32, offset: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1349, file: !1350, line: 243, baseType: !1355, size: 64, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1193, line: 40, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1193, line: 35, size: 64, elements: !1357)
!1357 = !{!1358, !1360}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1356, file: !1193, line: 36, baseType: !1359, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1356, file: !1193, line: 37, baseType: !1359, size: 32, offset: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1117, file: !1286, line: 762, type: !1155, isLocal: true, isDefinition: true, align: 8)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1117, file: !1286, line: 766, type: !1349, isLocal: true, isDefinition: true)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1117, file: !1286, line: 766, type: !1155, isLocal: true, isDefinition: true, align: 8)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1117, file: !1286, line: 770, type: !1349, isLocal: true, isDefinition: true)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1117, file: !1286, line: 770, type: !1155, isLocal: true, isDefinition: true, align: 8)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1117, file: !1286, line: 774, type: !1349, isLocal: true, isDefinition: true)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1117, file: !1286, line: 774, type: !1155, isLocal: true, isDefinition: true, align: 8)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1117, file: !1286, line: 778, type: !1349, isLocal: true, isDefinition: true)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1117, file: !1286, line: 778, type: !1155, isLocal: true, isDefinition: true, align: 8)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1117, file: !1286, line: 782, type: !1349, isLocal: true, isDefinition: true)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1117, file: !1286, line: 782, type: !1155, isLocal: true, isDefinition: true, align: 8)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1117, file: !1286, line: 786, type: !1349, isLocal: true, isDefinition: true)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1117, file: !1286, line: 786, type: !1155, isLocal: true, isDefinition: true, align: 8)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1117, file: !1286, line: 790, type: !1349, isLocal: true, isDefinition: true)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1117, file: !1286, line: 790, type: !1155, isLocal: true, isDefinition: true, align: 8)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1117, file: !1286, line: 656, type: !1139, isLocal: true, isDefinition: true)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1117, file: !1286, line: 766, type: !1395, isLocal: true, isDefinition: true)
!1395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1396)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1350, line: 224, size: 160, elements: !1397)
!1397 = !{!1398, !1399, !1400, !1401}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1396, file: !1350, line: 226, baseType: !1210, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1396, file: !1350, line: 228, baseType: !837, size: 32, offset: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1396, file: !1350, line: 230, baseType: !103, size: 32, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1396, file: !1350, line: 231, baseType: !1402, size: 64, offset: 96)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !833, line: 343, size: 64, elements: !1403)
!1403 = !{!1404, !1405}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1402, file: !833, line: 344, baseType: !132, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1402, file: !833, line: 345, baseType: !132, size: 32, offset: 32)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1117, file: !1286, line: 770, type: !1395, isLocal: true, isDefinition: true)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1117, file: !1286, line: 774, type: !1395, isLocal: true, isDefinition: true)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1117, file: !1286, line: 778, type: !1395, isLocal: true, isDefinition: true)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1117, file: !1286, line: 782, type: !1395, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1117, file: !1286, line: 786, type: !1395, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1117, file: !1286, line: 790, type: !1395, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1420, file: !1591, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1422, retainedTypes: !1455, globals: !1588, splitDebugInlining: false, nameTableKind: None)
!1421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!1422 = !{!30, !1423, !1430, !1437, !1444, !1450, !785}
!1423 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !212, line: 47, baseType: !32, size: 32, elements: !1424)
!1424 = !{!1425, !1426, !1427, !1428, !1429}
!1425 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1426 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1427 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1428 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1429 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1430 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !212, line: 75, baseType: !32, size: 32, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1436}
!1432 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1433 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1434 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1435 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1436 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1437 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !212, line: 92, baseType: !32, size: 32, elements: !1438)
!1438 = !{!1439, !1440, !1441, !1442, !1443}
!1439 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1440 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1441 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1442 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1443 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1444 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !212, line: 84, baseType: !32, size: 32, elements: !1445)
!1445 = !{!1446, !1447, !1448, !1449}
!1446 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1447 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1448 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1449 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1450 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !212, line: 107, baseType: !32, size: 32, elements: !1451)
!1451 = !{!1452, !1453, !1454}
!1452 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1453 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1454 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1455 = !{!102, !103, !1456, !164, !163, !1535, !132, !881, !1546, !340, !1585, !1587}
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !1459)
!1459 = !{!1460, !1479, !1483, !1487, !1500, !1505, !1509, !1513, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1458, file: !212, line: 365, baseType: !1461, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!103, !1464, !233}
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1477, !1478}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1466, file: !152, line: 380, baseType: !155, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1466, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1466, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1466, file: !152, line: 386, baseType: !1472, size: 32, offset: 96)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1474)
!1474 = !{!1475, !1476}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1473, file: !152, line: 359, baseType: !163, size: 8)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1473, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1466, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1466, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1458, file: !212, line: 366, baseType: !1480, size: 32, offset: 32)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{null, !1464, !164}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1458, file: !212, line: 374, baseType: !1484, size: 32, offset: 64)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!103, !1464}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1458, file: !212, line: 377, baseType: !1488, size: 32, offset: 96)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!103, !1464, !1491}
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1498, !1499}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1493, file: !212, line: 123, baseType: !132, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1493, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1493, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1493, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1493, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1458, file: !212, line: 379, baseType: !1501, size: 32, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!103, !1464, !1504}
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1458, file: !212, line: 384, baseType: !1506, size: 32, offset: 160)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!103, !1464, !264, !103}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1458, file: !212, line: 393, baseType: !1510, size: 32, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!103, !1464, !270, !271}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1458, file: !212, line: 402, baseType: !1514, size: 32, offset: 224)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{null, !1464}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1458, file: !212, line: 405, baseType: !1514, size: 32, offset: 256)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1458, file: !212, line: 408, baseType: !1484, size: 32, offset: 288)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1458, file: !212, line: 411, baseType: !1514, size: 32, offset: 320)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1458, file: !212, line: 414, baseType: !1514, size: 32, offset: 352)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1458, file: !212, line: 417, baseType: !1484, size: 32, offset: 384)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1458, file: !212, line: 420, baseType: !1484, size: 32, offset: 416)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1458, file: !212, line: 423, baseType: !1514, size: 32, offset: 448)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1458, file: !212, line: 426, baseType: !1514, size: 32, offset: 480)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1458, file: !212, line: 429, baseType: !1484, size: 32, offset: 512)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1458, file: !212, line: 432, baseType: !1484, size: 32, offset: 544)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1458, file: !212, line: 435, baseType: !1528, size: 32, offset: 576)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{null, !1464, !1531, !102}
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{null, !1464, !102}
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !127, line: 508, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 499, size: 224, elements: !1538)
!1538 = !{!1539, !1540, !1541, !1542, !1543, !1544, !1545}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1537, file: !127, line: 501, baseType: !131, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1537, file: !127, line: 502, baseType: !131, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1537, file: !127, line: 503, baseType: !131, size: 32, offset: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1537, file: !127, line: 504, baseType: !131, size: 32, offset: 96)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1537, file: !127, line: 505, baseType: !131, size: 32, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1537, file: !127, line: 506, baseType: !131, size: 32, offset: 160)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1537, file: !127, line: 507, baseType: !131, size: 32, offset: 192)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !786, line: 100, size: 224, elements: !1549)
!1549 = !{!1550, !1555, !1556, !1565, !1570, !1575, !1580}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1548, file: !786, line: 101, baseType: !1551, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !786, line: 76, baseType: !1552)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 32)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!103, !1464, !881}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1548, file: !786, line: 102, baseType: !1551, size: 32, offset: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1548, file: !786, line: 103, baseType: !1557, size: 32, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !786, line: 83, baseType: !1558)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!103, !1464, !881, !1561, !102}
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !786, line: 72, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{null, !1464, !881, !102}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1548, file: !786, line: 104, baseType: !1566, size: 32, offset: 96)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !786, line: 79, baseType: !1567)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!103, !1464, !881, !837}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1548, file: !786, line: 105, baseType: !1571, size: 32, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !786, line: 88, baseType: !1572)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!785, !1464, !881}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1548, file: !786, line: 106, baseType: !1576, size: 32, offset: 160)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !786, line: 92, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!103, !1464, !881, !907}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1548, file: !786, line: 107, baseType: !1581, size: 32, offset: 192)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !786, line: 96, baseType: !1582)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!103, !1464, !881, !102}
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1586)
!1586 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!1588 = !{!1589, !1595, !1597, !1604, !1418, !1606, !1614, !1637, !1640, !1643, !1654, !1656}
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1420, file: !1591, line: 1914, type: !1592, isLocal: false, isDefinition: true, align: 16)
!1591 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 128, elements: !1593)
!1593 = !{!1594}
!1594 = !DISubrange(count: 8)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1420, file: !1591, line: 1914, type: !1465, isLocal: false, isDefinition: true, align: 32)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1420, file: !1591, line: 1914, type: !1599, isLocal: true, isDefinition: true, align: 32)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1601)
!1601 = !{!1602, !1603}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1600, file: !143, line: 60, baseType: !1484, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1600, file: !143, line: 65, baseType: !1464, size: 32, offset: 32)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1420, file: !1591, line: 1914, type: !1473, isLocal: true, isDefinition: true, align: 8)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1420, file: !1591, line: 1914, type: !1608, isLocal: true, isDefinition: true)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1609, size: 64, elements: !496)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !833, line: 343, size: 64, elements: !1611)
!1611 = !{!1612, !1613}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1610, file: !833, line: 344, baseType: !132, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1610, file: !833, line: 345, baseType: !132, size: 32, offset: 32)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1420, file: !1591, line: 1914, type: !1616, isLocal: true, isDefinition: true)
!1616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1618, line: 60, size: 64, elements: !1619)
!1618 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1619 = !{!1620, !1636}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1617, file: !1618, line: 69, baseType: !1621, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1618, line: 50, size: 64, elements: !1624)
!1624 = !{!1625, !1634, !1635}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1623, file: !1618, line: 52, baseType: !1626, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1628)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1629, line: 37, baseType: !1630)
!1629 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1629, line: 32, size: 64, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1630, file: !1629, line: 34, baseType: !132, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1630, file: !1629, line: 36, baseType: !132, size: 32, offset: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1623, file: !1618, line: 54, baseType: !163, size: 8, offset: 32)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1623, file: !1618, line: 56, baseType: !163, size: 8, offset: 40)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1617, file: !1618, line: 71, baseType: !163, size: 8, offset: 32)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1420, file: !1591, line: 1914, type: !1639, isLocal: true, isDefinition: true)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1622, size: 64, elements: !496)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1420, file: !1591, line: 1914, type: !1642, isLocal: true, isDefinition: true)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1627, size: 128, elements: !397)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1645, file: !1591, line: 1914, type: !1648, isLocal: true, isDefinition: true, align: 32)
!1645 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1591, file: !1591, line: 1914, type: !1515, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !1646)
!1646 = !{!1647}
!1647 = !DILocalVariable(name: "dev", arg: 1, scope: !1645, file: !1591, line: 1914, type: !1464)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1649)
!1649 = !{!1650, !1651, !1652, !1653}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1648, file: !10, line: 55, baseType: !344, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1648, file: !10, line: 57, baseType: !344, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1648, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1648, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1420, file: !1591, line: 1539, type: !1457, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1420, file: !1591, line: 1914, type: !1658, isLocal: true, isDefinition: true)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1659, line: 74, size: 128, elements: !1660)
!1659 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1660 = !{!1661, !1662, !1663, !1664}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1658, file: !1659, line: 76, baseType: !132, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1658, file: !1659, line: 78, baseType: !1464, size: 32, offset: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1658, file: !1659, line: 80, baseType: !1531, size: 32, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1658, file: !1659, line: 81, baseType: !102, size: 32, offset: 96)
!1665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1666)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1659, line: 22, size: 256, elements: !1667)
!1667 = !{!1668, !1669, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1680}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1666, file: !1659, line: 24, baseType: !1535, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1666, file: !1659, line: 26, baseType: !1670, size: 32, offset: 32)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1666, file: !1659, line: 28, baseType: !356, size: 32, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1666, file: !1659, line: 30, baseType: !166, size: 8, offset: 96)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1666, file: !1659, line: 32, baseType: !103, size: 32, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1666, file: !1659, line: 34, baseType: !166, size: 8, offset: 160)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1666, file: !1659, line: 36, baseType: !166, size: 8, offset: 168)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1666, file: !1659, line: 38, baseType: !166, size: 8, offset: 176)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1666, file: !1659, line: 40, baseType: !166, size: 8, offset: 184)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1666, file: !1659, line: 41, baseType: !1679, size: 32, offset: 192)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1666, file: !1659, line: 44, baseType: !1681, size: 32, offset: 224)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !212, line: 150, baseType: !1514)
!1682 = !DIGlobalVariableExpression(var: !1683, expr: !DIExpression())
!1683 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1684, file: !1762, line: 65, type: !131, isLocal: true, isDefinition: true)
!1684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1686, retainedTypes: !1687, globals: !1759, splitDebugInlining: false, nameTableKind: None)
!1685 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!1686 = !{!576}
!1687 = !{!1688, !1690, !344, !163, !132, !1698, !1729}
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1689, line: 46, baseType: !432)
!1689 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !507, line: 770, baseType: !1692)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 764, size: 128, elements: !1693)
!1693 = !{!1694, !1695, !1696, !1697}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1692, file: !507, line: 766, baseType: !131, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1692, file: !507, line: 767, baseType: !131, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1692, file: !507, line: 768, baseType: !131, size: 32, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1692, file: !507, line: 769, baseType: !511, size: 32, offset: 96)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !1700)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !1701)
!1701 = !{!1702, !1704, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1719, !1724, !1728}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1700, file: !507, line: 413, baseType: !1703, size: 256)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 256, elements: !1593)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1700, file: !507, line: 414, baseType: !1705, size: 768, offset: 256)
!1705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 768, elements: !1706)
!1706 = !{!1707}
!1707 = !DISubrange(count: 24)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1700, file: !507, line: 415, baseType: !1703, size: 256, offset: 1024)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1700, file: !507, line: 416, baseType: !1705, size: 768, offset: 1280)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1700, file: !507, line: 417, baseType: !1703, size: 256, offset: 2048)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1700, file: !507, line: 418, baseType: !1705, size: 768, offset: 2304)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1700, file: !507, line: 419, baseType: !1703, size: 256, offset: 3072)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1700, file: !507, line: 420, baseType: !1705, size: 768, offset: 3328)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1700, file: !507, line: 421, baseType: !1703, size: 256, offset: 4096)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1700, file: !507, line: 422, baseType: !1716, size: 1792, offset: 4352)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 1792, elements: !1717)
!1717 = !{!1718}
!1718 = !DISubrange(count: 56)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1700, file: !507, line: 423, baseType: !1720, size: 1920, offset: 6144)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1721, size: 1920, elements: !1722)
!1721 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !163)
!1722 = !{!1723}
!1723 = !DISubrange(count: 240)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1700, file: !507, line: 424, baseType: !1725, size: 20608, offset: 8064)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 20608, elements: !1726)
!1726 = !{!1727}
!1727 = !DISubrange(count: 644)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1700, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !1731)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !1732)
!1732 = !{!1733, !1734, !1735, !1736, !1737, !1738, !1739, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1750, !1751, !1752, !1754, !1756, !1758}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1731, file: !507, line: 447, baseType: !511, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1731, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1731, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1731, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1731, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1731, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1731, file: !507, line: 453, baseType: !1740, size: 96, offset: 192)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1721, size: 96, elements: !752)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1731, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1731, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1731, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1731, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1731, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1731, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1731, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1731, file: !507, line: 461, baseType: !1749, size: 64, offset: 512)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 64, elements: !397)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1731, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1731, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1731, file: !507, line: 464, baseType: !1753, size: 128, offset: 640)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 128, elements: !659)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1731, file: !507, line: 465, baseType: !1755, size: 160, offset: 768)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 160, elements: !1288)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1731, file: !507, line: 466, baseType: !1757, size: 160, offset: 928)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 160, elements: !1288)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1731, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!1759 = !{!1760, !1786, !1789, !1791, !1793, !1682}
!1760 = !DIGlobalVariableExpression(var: !1761, expr: !DIExpression())
!1761 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1684, file: !1762, line: 285, type: !1763, isLocal: true, isDefinition: true, align: 32)
!1762 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !1765)
!1765 = !{!1766, !1785}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1764, file: !143, line: 60, baseType: !1767, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{!103, !1770}
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1773)
!1773 = !{!1774, !1775, !1776, !1777, !1783, !1784}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1772, file: !152, line: 380, baseType: !155, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1772, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1772, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1772, file: !152, line: 386, baseType: !1778, size: 32, offset: 96)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1780)
!1780 = !{!1781, !1782}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1779, file: !152, line: 359, baseType: !163, size: 8)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1779, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1772, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1772, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1764, file: !143, line: 65, baseType: !1770, size: 32, offset: 32)
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "lock", scope: !1684, file: !1762, line: 34, type: !1788, isLocal: true, isDefinition: true)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "last_load", scope: !1684, file: !1762, line: 36, type: !132, isLocal: true, isDefinition: true)
!1791 = !DIGlobalVariableExpression(var: !1792, expr: !DIExpression())
!1792 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1684, file: !1762, line: 48, type: !132, isLocal: true, isDefinition: true)
!1793 = !DIGlobalVariableExpression(var: !1794, expr: !DIExpression())
!1794 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1684, file: !1762, line: 54, type: !132, isLocal: true, isDefinition: true)
!1795 = !DIGlobalVariableExpression(var: !1796, expr: !DIExpression())
!1796 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1797, file: !1879, line: 22, type: !1881, isLocal: true, isDefinition: true)
!1797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1798, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1799, retainedTypes: !1800, globals: !1876, splitDebugInlining: false, nameTableKind: None)
!1798 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!1799 = !{!1120, !1126}
!1800 = !{!1801, !1865, !1870, !1173, !1126, !1120, !1875, !102}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1803)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1121, line: 523, size: 288, elements: !1804)
!1804 = !{!1805, !1824, !1828, !1832, !1836, !1837, !1838, !1842, !1861}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1803, file: !1121, line: 524, baseType: !1806, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 32)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{!103, !1809, !1161, !1162}
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1812)
!1812 = !{!1813, !1814, !1815, !1816, !1822, !1823}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1811, file: !152, line: 380, baseType: !155, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1811, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1811, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1811, file: !152, line: 386, baseType: !1817, size: 32, offset: 96)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1819)
!1819 = !{!1820, !1821}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1818, file: !152, line: 359, baseType: !163, size: 8)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1818, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1811, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1811, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1803, file: !1121, line: 530, baseType: !1825, size: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!103, !1809, !1167}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1803, file: !1121, line: 532, baseType: !1829, size: 32, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = !DISubroutineType(types: !1831)
!1831 = !{!103, !1809, !1173, !1168}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1803, file: !1121, line: 535, baseType: !1833, size: 32, offset: 96)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!103, !1809, !1173}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1803, file: !1121, line: 537, baseType: !1833, size: 32, offset: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1803, file: !1121, line: 539, baseType: !1833, size: 32, offset: 160)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1803, file: !1121, line: 541, baseType: !1839, size: 32, offset: 192)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!103, !1809, !1161, !1120, !1126}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1803, file: !1121, line: 544, baseType: !1843, size: 32, offset: 224)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!103, !1809, !1846, !166}
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1121, line: 478, size: 96, elements: !1848)
!1848 = !{!1849, !1855, !1860}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1847, file: !1121, line: 482, baseType: !1850, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1193, line: 33, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1193, line: 29, size: 32, elements: !1852)
!1852 = !{!1853}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1851, file: !1193, line: 30, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1847, file: !1121, line: 485, baseType: !1856, size: 32, offset: 32)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1121, line: 464, baseType: !1857)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{null, !1809, !1846, !1173}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1847, file: !1121, line: 493, baseType: !1173, size: 32, offset: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1803, file: !1121, line: 547, baseType: !1862, size: 32, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 32)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!132, !1809}
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1867)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1121, line: 428, size: 32, elements: !1868)
!1868 = !{!1869}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1867, file: !1121, line: 434, baseType: !1173, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1872)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1121, line: 441, size: 32, elements: !1873)
!1873 = !{!1874}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1872, file: !1121, line: 447, baseType: !1173, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1876 = !{!1877, !1795}
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1878 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1797, file: !1879, line: 37, type: !1880, isLocal: true, isDefinition: true)
!1879 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !356)
!1881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1882, size: 352, elements: !1883)
!1882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!1883 = !{!1884}
!1884 = !DISubrange(count: 11)
!1885 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression())
!1886 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1887, file: !1929, line: 139, type: !1935, isLocal: false, isDefinition: true)
!1887 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1888, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1889, globals: !1926, splitDebugInlining: false, nameTableKind: None)
!1888 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!1889 = !{!1890}
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 370, baseType: !1892)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 336, size: 1152, elements: !1893)
!1893 = !{!1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1892, file: !127, line: 338, baseType: !131, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1892, file: !127, line: 339, baseType: !131, size: 32, offset: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1892, file: !127, line: 340, baseType: !131, size: 32, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1892, file: !127, line: 341, baseType: !131, size: 32, offset: 96)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1892, file: !127, line: 342, baseType: !131, size: 32, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1892, file: !127, line: 343, baseType: !131, size: 32, offset: 160)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1892, file: !127, line: 344, baseType: !131, size: 32, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1892, file: !127, line: 345, baseType: !132, size: 32, offset: 224)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1892, file: !127, line: 346, baseType: !131, size: 32, offset: 256)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1892, file: !127, line: 347, baseType: !131, size: 32, offset: 288)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1892, file: !127, line: 348, baseType: !808, size: 64, offset: 320)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1892, file: !127, line: 349, baseType: !131, size: 32, offset: 384)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1892, file: !127, line: 350, baseType: !131, size: 32, offset: 416)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1892, file: !127, line: 351, baseType: !131, size: 32, offset: 448)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1892, file: !127, line: 352, baseType: !132, size: 32, offset: 480)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1892, file: !127, line: 353, baseType: !131, size: 32, offset: 512)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1892, file: !127, line: 354, baseType: !131, size: 32, offset: 544)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1892, file: !127, line: 355, baseType: !808, size: 64, offset: 576)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1892, file: !127, line: 356, baseType: !131, size: 32, offset: 640)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1892, file: !127, line: 357, baseType: !131, size: 32, offset: 672)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1892, file: !127, line: 358, baseType: !131, size: 32, offset: 704)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1892, file: !127, line: 359, baseType: !132, size: 32, offset: 736)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1892, file: !127, line: 360, baseType: !131, size: 32, offset: 768)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1892, file: !127, line: 361, baseType: !131, size: 32, offset: 800)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1892, file: !127, line: 362, baseType: !808, size: 64, offset: 832)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1892, file: !127, line: 363, baseType: !131, size: 32, offset: 896)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1892, file: !127, line: 364, baseType: !131, size: 32, offset: 928)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1892, file: !127, line: 365, baseType: !808, size: 64, offset: 960)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1892, file: !127, line: 366, baseType: !131, size: 32, offset: 1024)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1892, file: !127, line: 367, baseType: !131, size: 32, offset: 1056)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1892, file: !127, line: 368, baseType: !829, size: 32, offset: 1088)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1892, file: !127, line: 369, baseType: !131, size: 32, offset: 1120)
!1926 = !{!1927, !1930, !1885}
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1887, file: !1929, line: 137, type: !132, isLocal: false, isDefinition: true)
!1929 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1930 = !DIGlobalVariableExpression(var: !1931, expr: !DIExpression())
!1931 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1887, file: !1929, line: 138, type: !1932, isLocal: false, isDefinition: true)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 128, elements: !1933)
!1933 = !{!1934}
!1934 = !DISubrange(count: 16)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 64, elements: !1593)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1938, file: !1941, line: 23, type: !271, isLocal: false, isDefinition: true)
!1938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1939, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1940, splitDebugInlining: false, nameTableKind: None)
!1939 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!1940 = !{!1936}
!1941 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1944, file: !1948, line: 86, type: !2197, isLocal: false, isDefinition: true, align: 512)
!1944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1946, retainedTypes: !1955, globals: !2028, splitDebugInlining: false, nameTableKind: None)
!1945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!1946 = !{!1947, !30, !576}
!1947 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1948, line: 63, baseType: !32, size: 32, elements: !1949)
!1948 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1949 = !{!1950, !1951, !1952, !1953, !1954}
!1950 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1951 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1952 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1953 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1954 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1955 = !{!356, !102, !103, !1956, !1063, !132, !1986, !344, !163, !2011}
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1958)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1959, line: 51, size: 64, elements: !1960)
!1959 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1960 = !{!1961, !1981}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1958, file: !1959, line: 52, baseType: !1962, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1959, line: 38, baseType: !1963)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = !DISubroutineType(types: !1965)
!1965 = !{!103, !1966, !270, !340}
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1968)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !1969)
!1969 = !{!1970, !1971, !1972, !1973, !1979, !1980}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1968, file: !152, line: 380, baseType: !155, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1968, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1968, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1968, file: !152, line: 386, baseType: !1974, size: 32, offset: 96)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 32)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !1976)
!1976 = !{!1977, !1978}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1975, file: !152, line: 359, baseType: !163, size: 8)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1975, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1968, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1968, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1958, file: !1959, line: 53, baseType: !1982, size: 32, offset: 32)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1959, line: 47, baseType: !1983)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{!103, !1966, !270, !340, !132}
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !1988)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !1989)
!1989 = !{!1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1988, file: !507, line: 447, baseType: !511, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1988, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1988, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1988, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1988, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1988, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1988, file: !507, line: 453, baseType: !1740, size: 96, offset: 192)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1988, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1988, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1988, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1988, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1988, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1988, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1988, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1988, file: !507, line: 461, baseType: !1749, size: 64, offset: 512)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1988, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1988, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1988, file: !507, line: 464, baseType: !1753, size: 128, offset: 640)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1988, file: !507, line: 465, baseType: !1755, size: 160, offset: 768)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1988, file: !507, line: 466, baseType: !1757, size: 160, offset: 928)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1988, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !2013)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !2014)
!2014 = !{!2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2013, file: !507, line: 413, baseType: !1703, size: 256)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2013, file: !507, line: 414, baseType: !1705, size: 768, offset: 256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2013, file: !507, line: 415, baseType: !1703, size: 256, offset: 1024)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2013, file: !507, line: 416, baseType: !1705, size: 768, offset: 1280)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2013, file: !507, line: 417, baseType: !1703, size: 256, offset: 2048)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2013, file: !507, line: 418, baseType: !1705, size: 768, offset: 2304)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2013, file: !507, line: 419, baseType: !1703, size: 256, offset: 3072)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2013, file: !507, line: 420, baseType: !1705, size: 768, offset: 3328)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2013, file: !507, line: 421, baseType: !1703, size: 256, offset: 4096)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2013, file: !507, line: 422, baseType: !1716, size: 1792, offset: 4352)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2013, file: !507, line: 423, baseType: !1720, size: 1920, offset: 6144)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2013, file: !507, line: 424, baseType: !1725, size: 20608, offset: 8064)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2013, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!2028 = !{!2029, !2151, !2160, !2162, !1942, !2165, !2167, !2172}
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "_kernel", scope: !1944, file: !1948, line: 40, type: !2031, isLocal: false, isDefinition: true)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !316, line: 158, size: 288, elements: !2032)
!2032 = !{!2033, !2146}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2031, file: !316, line: 159, baseType: !2034, size: 192)
!2034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 192, elements: !496)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !316, line: 100, size: 192, elements: !2036)
!2036 = !{!2037, !2038, !2039, !2140, !2141, !2142, !2143}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2035, file: !316, line: 102, baseType: !132, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2035, file: !316, line: 105, baseType: !1063, size: 32, offset: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2035, file: !316, line: 108, baseType: !2040, size: 32, offset: 64)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 32)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2042)
!2042 = !{!2043, !2101, !2113, !2114, !2115, !2116, !2122, !2135}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2041, file: !367, line: 247, baseType: !2044, size: 384)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2045)
!2045 = !{!2046, !2070, !2077, !2078, !2079, !2088, !2089, !2090}
!2046 = !DIDerivedType(tag: DW_TAG_member, scope: !2044, file: !367, line: 60, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2044, file: !367, line: 60, size: 64, elements: !2048)
!2048 = !{!2049, !2064}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2047, file: !367, line: 61, baseType: !2050, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2051)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2052)
!2052 = !{!2053, !2059}
!2053 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !321, line: 38, baseType: !2054, size: 32)
!2054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !321, line: 38, size: 32, elements: !2055)
!2055 = !{!2056, !2058}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2054, file: !321, line: 39, baseType: !2057, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2054, file: !321, line: 40, baseType: !2057, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !321, line: 42, baseType: !2060, size: 32, offset: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !321, line: 42, size: 32, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2060, file: !321, line: 43, baseType: !2057, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2060, file: !321, line: 44, baseType: !2057, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2047, file: !367, line: 62, baseType: !2065, size: 64)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2066)
!2066 = !{!2067}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2065, file: !392, line: 50, baseType: !2068, size: 64)
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2069, size: 64, elements: !397)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2044, file: !367, line: 68, baseType: !2071, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2073)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2074)
!2074 = !{!2075}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2073, file: !316, line: 232, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2051)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2044, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2044, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !2044, file: !367, line: 90, baseType: !2080, size: 16, offset: 112)
!2080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2044, file: !367, line: 90, size: 16, elements: !2081)
!2081 = !{!2082, !2087}
!2082 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !367, line: 91, baseType: !2083, size: 16)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2080, file: !367, line: 91, size: 16, elements: !2084)
!2084 = !{!2085, !2086}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2083, file: !367, line: 96, baseType: !415, size: 8)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2083, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2080, file: !367, line: 100, baseType: !340, size: 16)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2044, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2044, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2044, file: !367, line: 131, baseType: !2091, size: 192, offset: 192)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2092)
!2092 = !{!2093, !2094, !2100}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2091, file: !316, line: 245, baseType: !2050, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2091, file: !316, line: 246, baseType: !2095, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2096)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2097 = !DISubroutineType(types: !2098)
!2098 = !{null, !2099}
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2091, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2041, file: !367, line: 250, baseType: !2102, size: 288, offset: 384)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2103)
!2103 = !{!2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2102, file: !436, line: 26, baseType: !132, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2102, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2102, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2102, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2102, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2102, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2102, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2102, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2102, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2041, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2041, file: !367, line: 256, baseType: !2072, size: 64, offset: 704)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2041, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2041, file: !367, line: 300, baseType: !2117, size: 96, offset: 800)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2118)
!2118 = !{!2119, !2120, !2121}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2117, file: !367, line: 153, baseType: !22, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2117, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2117, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2041, file: !367, line: 325, baseType: !2123, size: 32, offset: 896)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2125)
!2125 = !{!2126, !2132, !2133}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2124, file: !312, line: 5074, baseType: !2127, size: 96)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2128)
!2128 = !{!2129, !2130, !2131}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2127, file: !462, line: 57, baseType: !465, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2127, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2127, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2124, file: !312, line: 5075, baseType: !2072, size: 64, offset: 96)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2124, file: !312, line: 5076, baseType: !2134, offset: 160)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2041, file: !367, line: 343, baseType: !2136, size: 64, offset: 928)
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2137)
!2137 = !{!2138, !2139}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2136, file: !436, line: 63, baseType: !132, size: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2136, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2035, file: !316, line: 111, baseType: !2040, size: 32, offset: 96)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2035, file: !316, line: 124, baseType: !103, size: 32, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2035, file: !316, line: 127, baseType: !163, size: 8, offset: 160)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2035, file: !316, line: 153, baseType: !2144, offset: 168)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2145, line: 33, elements: !473)
!2145 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2031, file: !316, line: 170, baseType: !2147, size: 96, offset: 192)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !316, line: 83, size: 96, elements: !2148)
!2148 = !{!2149, !2150}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2147, file: !316, line: 86, baseType: !2040, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2147, file: !316, line: 90, baseType: !2076, size: 64, offset: 32)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1944, file: !1948, line: 43, type: !2153, isLocal: false, isDefinition: true, align: 512)
!2153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2154, size: 8704, elements: !2158)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2155, line: 47, size: 8, elements: !2156)
!2155 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2156 = !{!2157}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2154, file: !2155, line: 48, baseType: !108, size: 8)
!2158 = !{!2159}
!2159 = !DISubrange(count: 1088)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1944, file: !1948, line: 44, type: !2041, isLocal: false, isDefinition: true)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1944, file: !1948, line: 48, type: !2164, isLocal: false, isDefinition: true)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2041, size: 1024, elements: !496)
!2165 = !DIGlobalVariableExpression(var: !2166, expr: !DIExpression())
!2166 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1944, file: !1948, line: 217, type: !166, isLocal: false, isDefinition: true)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1944, file: !1948, line: 50, type: !2169, isLocal: true, isDefinition: true, align: 512)
!2169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2154, size: 3072, elements: !2170)
!2170 = !{!497, !2171}
!2171 = !DISubrange(count: 384)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "levels", scope: !2174, file: !1948, line: 232, type: !2194, isLocal: true, isDefinition: true)
!2174 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1948, file: !1948, line: 230, type: !2175, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !2177)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{null, !1947}
!2177 = !{!2178, !2179, !2189, !2193}
!2178 = !DILocalVariable(name: "level", arg: 1, scope: !2174, file: !1948, line: 230, type: !1947)
!2179 = !DILocalVariable(name: "entry", scope: !2174, file: !1948, line: 244, type: !2180)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2182)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !2183)
!2183 = !{!2184, !2188}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2182, file: !143, line: 60, baseType: !2185, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{!103, !1966}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2182, file: !143, line: 65, baseType: !1966, size: 32, offset: 32)
!2189 = !DILocalVariable(name: "dev", scope: !2190, file: !1948, line: 247, type: !1966)
!2190 = distinct !DILexicalBlock(scope: !2191, file: !1948, line: 246, column: 64)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !1948, line: 246, column: 2)
!2192 = distinct !DILexicalBlock(scope: !2174, file: !1948, line: 246, column: 2)
!2193 = !DILocalVariable(name: "rc", scope: !2190, file: !1948, line: 248, type: !103)
!2194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2180, size: 192, elements: !2195)
!2195 = !{!2196}
!2196 = !DISubrange(count: 6)
!2197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2154, size: 16896, elements: !2198)
!2198 = !{!497, !2199}
!2199 = !DISubrange(count: 2112)
!2200 = !DIGlobalVariableExpression(var: !2201, expr: !DIExpression())
!2201 = distinct !DIGlobalVariable(name: "states_str", scope: !2202, file: !2203, line: 276, type: !2324, isLocal: true, isDefinition: true)
!2202 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2203, file: !2203, line: 271, type: !2204, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !2315)
!2203 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2204 = !DISubroutineType(types: !2205)
!2205 = !{!155, !2206, !1063, !356}
!2206 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !2207)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 32)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2209)
!2209 = !{!2210, !2268, !2280, !2281, !2282, !2283, !2289, !2302}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2208, file: !367, line: 247, baseType: !2211, size: 384)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2212)
!2212 = !{!2213, !2237, !2244, !2245, !2246, !2255, !2256, !2257}
!2213 = !DIDerivedType(tag: DW_TAG_member, scope: !2211, file: !367, line: 60, baseType: !2214, size: 64)
!2214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2211, file: !367, line: 60, size: 64, elements: !2215)
!2215 = !{!2216, !2231}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2214, file: !367, line: 61, baseType: !2217, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2219)
!2219 = !{!2220, !2226}
!2220 = !DIDerivedType(tag: DW_TAG_member, scope: !2218, file: !321, line: 38, baseType: !2221, size: 32)
!2221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2218, file: !321, line: 38, size: 32, elements: !2222)
!2222 = !{!2223, !2225}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2221, file: !321, line: 39, baseType: !2224, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2221, file: !321, line: 40, baseType: !2224, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, scope: !2218, file: !321, line: 42, baseType: !2227, size: 32, offset: 32)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2218, file: !321, line: 42, size: 32, elements: !2228)
!2228 = !{!2229, !2230}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2227, file: !321, line: 43, baseType: !2224, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2227, file: !321, line: 44, baseType: !2224, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2214, file: !367, line: 62, baseType: !2232, size: 64)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2233)
!2233 = !{!2234}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2232, file: !392, line: 50, baseType: !2235, size: 64)
!2235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2236, size: 64, elements: !397)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2211, file: !367, line: 68, baseType: !2238, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2240)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2241)
!2241 = !{!2242}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2240, file: !316, line: 232, baseType: !2243, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2218)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2211, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2211, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2246 = !DIDerivedType(tag: DW_TAG_member, scope: !2211, file: !367, line: 90, baseType: !2247, size: 16, offset: 112)
!2247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2211, file: !367, line: 90, size: 16, elements: !2248)
!2248 = !{!2249, !2254}
!2249 = !DIDerivedType(tag: DW_TAG_member, scope: !2247, file: !367, line: 91, baseType: !2250, size: 16)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2247, file: !367, line: 91, size: 16, elements: !2251)
!2251 = !{!2252, !2253}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2250, file: !367, line: 96, baseType: !415, size: 8)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2250, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2247, file: !367, line: 100, baseType: !340, size: 16)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2211, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2211, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2211, file: !367, line: 131, baseType: !2258, size: 192, offset: 192)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2259)
!2259 = !{!2260, !2261, !2267}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2258, file: !316, line: 245, baseType: !2217, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2258, file: !316, line: 246, baseType: !2262, size: 32, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2263)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{null, !2266}
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2258, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2208, file: !367, line: 250, baseType: !2269, size: 288, offset: 384)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2270)
!2270 = !{!2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2269, file: !436, line: 26, baseType: !132, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2269, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2269, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2269, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2269, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2269, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2269, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2269, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2269, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2208, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2208, file: !367, line: 256, baseType: !2239, size: 64, offset: 704)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2208, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2208, file: !367, line: 300, baseType: !2284, size: 96, offset: 800)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2285)
!2285 = !{!2286, !2287, !2288}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2284, file: !367, line: 153, baseType: !22, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2284, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2284, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2208, file: !367, line: 325, baseType: !2290, size: 32, offset: 896)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 32)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2292)
!2292 = !{!2293, !2299, !2300}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2291, file: !312, line: 5074, baseType: !2294, size: 96)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2295)
!2295 = !{!2296, !2297, !2298}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2294, file: !462, line: 57, baseType: !465, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2294, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2294, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2291, file: !312, line: 5075, baseType: !2239, size: 64, offset: 96)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2291, file: !312, line: 5076, baseType: !2301, offset: 160)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2208, file: !367, line: 343, baseType: !2303, size: 64, offset: 928)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2304)
!2304 = !{!2305, !2306}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2303, file: !436, line: 63, baseType: !132, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2303, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2309, globals: !2311, splitDebugInlining: false, nameTableKind: None)
!2308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2309 = !{!102, !155, !1688, !163, !103, !2310, !24, !356, !1063, !22, !132, !1585}
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!2311 = !{!2200, !2312}
!2312 = !DIGlobalVariableExpression(var: !2313, expr: !DIExpression())
!2313 = distinct !DIGlobalVariable(name: "states_sz", scope: !2202, file: !2203, line: 279, type: !2314, isLocal: true, isDefinition: true)
!2314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1880, size: 256, elements: !1593)
!2315 = !{!2316, !2317, !2318, !2319, !2320, !2321, !2322}
!2316 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2202, file: !2203, line: 271, type: !2206)
!2317 = !DILocalVariable(name: "buf", arg: 2, scope: !2202, file: !2203, line: 271, type: !1063)
!2318 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2202, file: !2203, line: 271, type: !356)
!2319 = !DILocalVariable(name: "off", scope: !2202, file: !2203, line: 273, type: !356)
!2320 = !DILocalVariable(name: "bit", scope: !2202, file: !2203, line: 274, type: !163)
!2321 = !DILocalVariable(name: "thread_state", scope: !2202, file: !2203, line: 275, type: !163)
!2322 = !DILocalVariable(name: "index", scope: !2323, file: !2203, line: 293, type: !163)
!2323 = distinct !DILexicalBlock(scope: !2202, file: !2203, line: 293, column: 2)
!2324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 256, elements: !1593)
!2325 = !DIGlobalVariableExpression(var: !2326, expr: !DIExpression())
!2326 = distinct !DIGlobalVariable(name: "lock", scope: !2327, file: !2346, line: 39, type: !2347, isLocal: true, isDefinition: true)
!2327 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2328, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2329, globals: !2345, splitDebugInlining: false, nameTableKind: None)
!2328 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2329 = !{!102, !166, !103, !2330}
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2332)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2333)
!2333 = !{!2334, !2340}
!2334 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !321, line: 38, baseType: !2335, size: 32)
!2335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !321, line: 38, size: 32, elements: !2336)
!2336 = !{!2337, !2339}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2335, file: !321, line: 39, baseType: !2338, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2335, file: !321, line: 40, baseType: !2338, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !321, line: 42, baseType: !2341, size: 32, offset: 32)
!2341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !321, line: 42, size: 32, elements: !2342)
!2342 = !{!2343, !2344}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2341, file: !321, line: 43, baseType: !2338, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2341, file: !321, line: 44, baseType: !2338, size: 32)
!2345 = !{!2325}
!2346 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2348 = !DIGlobalVariableExpression(var: !2349, expr: !DIExpression())
!2349 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2350, file: !2458, line: 56, type: !2447, isLocal: false, isDefinition: true)
!2350 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2351, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2352, globals: !2455, splitDebugInlining: false, nameTableKind: None)
!2351 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2352 = !{!2353, !1063, !102, !2453, !270, !1688, !344, !103, !132, !1585, !2454}
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 32)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !2355)
!2355 = !{!2356, !2414, !2426, !2427, !2428, !2429, !2435, !2448}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2354, file: !367, line: 247, baseType: !2357, size: 384)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !2358)
!2358 = !{!2359, !2383, !2390, !2391, !2392, !2401, !2402, !2403}
!2359 = !DIDerivedType(tag: DW_TAG_member, scope: !2357, file: !367, line: 60, baseType: !2360, size: 64)
!2360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2357, file: !367, line: 60, size: 64, elements: !2361)
!2361 = !{!2362, !2377}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2360, file: !367, line: 61, baseType: !2363, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2364)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2365)
!2365 = !{!2366, !2372}
!2366 = !DIDerivedType(tag: DW_TAG_member, scope: !2364, file: !321, line: 38, baseType: !2367, size: 32)
!2367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2364, file: !321, line: 38, size: 32, elements: !2368)
!2368 = !{!2369, !2371}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2367, file: !321, line: 39, baseType: !2370, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2367, file: !321, line: 40, baseType: !2370, size: 32)
!2372 = !DIDerivedType(tag: DW_TAG_member, scope: !2364, file: !321, line: 42, baseType: !2373, size: 32, offset: 32)
!2373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2364, file: !321, line: 42, size: 32, elements: !2374)
!2374 = !{!2375, !2376}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2373, file: !321, line: 43, baseType: !2370, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2373, file: !321, line: 44, baseType: !2370, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2360, file: !367, line: 62, baseType: !2378, size: 64)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !2379)
!2379 = !{!2380}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2378, file: !392, line: 50, baseType: !2381, size: 64)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2382, size: 64, elements: !397)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2357, file: !367, line: 68, baseType: !2384, size: 32, offset: 64)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !2386)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !2387)
!2387 = !{!2388}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2386, file: !316, line: 232, baseType: !2389, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2364)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2357, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2357, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!2392 = !DIDerivedType(tag: DW_TAG_member, scope: !2357, file: !367, line: 90, baseType: !2393, size: 16, offset: 112)
!2393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2357, file: !367, line: 90, size: 16, elements: !2394)
!2394 = !{!2395, !2400}
!2395 = !DIDerivedType(tag: DW_TAG_member, scope: !2393, file: !367, line: 91, baseType: !2396, size: 16)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2393, file: !367, line: 91, size: 16, elements: !2397)
!2397 = !{!2398, !2399}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2396, file: !367, line: 96, baseType: !415, size: 8)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2396, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2393, file: !367, line: 100, baseType: !340, size: 16)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2357, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2357, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2357, file: !367, line: 131, baseType: !2404, size: 192, offset: 192)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2405)
!2405 = !{!2406, !2407, !2413}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2404, file: !316, line: 245, baseType: !2363, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2404, file: !316, line: 246, baseType: !2408, size: 32, offset: 64)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2409)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{null, !2412}
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2404, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2354, file: !367, line: 250, baseType: !2415, size: 288, offset: 384)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !2416)
!2416 = !{!2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2415, file: !436, line: 26, baseType: !132, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2415, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2415, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2415, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2415, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2415, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2415, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2415, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2415, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2354, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2354, file: !367, line: 256, baseType: !2385, size: 64, offset: 704)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2354, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2354, file: !367, line: 300, baseType: !2430, size: 96, offset: 800)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !2431)
!2431 = !{!2432, !2433, !2434}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2430, file: !367, line: 153, baseType: !22, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2430, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2430, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2354, file: !367, line: 325, baseType: !2436, size: 32, offset: 896)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 32)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !2438)
!2438 = !{!2439, !2445, !2446}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2437, file: !312, line: 5074, baseType: !2440, size: 96)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !2441)
!2441 = !{!2442, !2443, !2444}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2440, file: !462, line: 57, baseType: !465, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2440, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2440, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2437, file: !312, line: 5075, baseType: !2385, size: 64, offset: 96)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2437, file: !312, line: 5076, baseType: !2447, offset: 160)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2354, file: !367, line: 343, baseType: !2449, size: 64, offset: 928)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !2450)
!2450 = !{!2451, !2452}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2449, file: !436, line: 63, baseType: !132, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2449, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2455 = !{!2348, !2456, !2459, !2461}
!2456 = !DIGlobalVariableExpression(var: !2457, expr: !DIExpression())
!2457 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2350, file: !2458, line: 404, type: !103, isLocal: true, isDefinition: true)
!2458 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2459 = !DIGlobalVariableExpression(var: !2460, expr: !DIExpression())
!2460 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2350, file: !2458, line: 405, type: !103, isLocal: true, isDefinition: true)
!2461 = !DIGlobalVariableExpression(var: !2462, expr: !DIExpression())
!2462 = distinct !DIGlobalVariable(name: "pending_current", scope: !2350, file: !2458, line: 425, type: !2353, isLocal: true, isDefinition: true)
!2463 = !DIGlobalVariableExpression(var: !2464, expr: !DIExpression())
!2464 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2465, file: !2495, line: 15, type: !1585, isLocal: true, isDefinition: true)
!2465 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2466, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2467, globals: !2492, splitDebugInlining: false, nameTableKind: None)
!2466 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2467 = !{!1688, !102, !344, !132, !1585, !103, !2468, !1063, !432}
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 32)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !2470)
!2470 = !{!2471, !2486, !2491}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2469, file: !316, line: 245, baseType: !2472, size: 64)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2473)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2474)
!2474 = !{!2475, !2481}
!2475 = !DIDerivedType(tag: DW_TAG_member, scope: !2473, file: !321, line: 38, baseType: !2476, size: 32)
!2476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2473, file: !321, line: 38, size: 32, elements: !2477)
!2477 = !{!2478, !2480}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2476, file: !321, line: 39, baseType: !2479, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2476, file: !321, line: 40, baseType: !2479, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !2473, file: !321, line: 42, baseType: !2482, size: 32, offset: 32)
!2482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2473, file: !321, line: 42, size: 32, elements: !2483)
!2483 = !{!2484, !2485}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2482, file: !321, line: 43, baseType: !2479, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2482, file: !321, line: 44, baseType: !2479, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2469, file: !316, line: 246, baseType: !2487, size: 32, offset: 64)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !2488)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 32)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{null, !2468}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2469, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!2492 = !{!2463, !2493, !2497, !2499}
!2493 = !DIGlobalVariableExpression(var: !2494, expr: !DIExpression())
!2494 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2465, file: !2495, line: 19, type: !2496, isLocal: true, isDefinition: true)
!2495 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!2497 = !DIGlobalVariableExpression(var: !2498, expr: !DIExpression())
!2498 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2465, file: !2495, line: 25, type: !103, isLocal: true, isDefinition: true)
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2465, file: !2495, line: 17, type: !2501, isLocal: true, isDefinition: true)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2473)
!2502 = !DIGlobalVariableExpression(var: !2503, expr: !DIExpression())
!2503 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2504, file: !2523, line: 55, type: !2524, isLocal: true, isDefinition: true, align: 32)
!2504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2506, globals: !2522, splitDebugInlining: false, nameTableKind: None)
!2505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2506 = !{!102, !1688, !103, !2507}
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !2509)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !2510)
!2510 = !{!2511, !2517}
!2511 = !DIDerivedType(tag: DW_TAG_member, scope: !2509, file: !321, line: 38, baseType: !2512, size: 32)
!2512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2509, file: !321, line: 38, size: 32, elements: !2513)
!2513 = !{!2514, !2516}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2512, file: !321, line: 39, baseType: !2515, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2512, file: !321, line: 40, baseType: !2515, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, scope: !2509, file: !321, line: 42, baseType: !2518, size: 32, offset: 32)
!2518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2509, file: !321, line: 42, size: 32, elements: !2519)
!2519 = !{!2520, !2521}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2518, file: !321, line: 43, baseType: !2515, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2518, file: !321, line: 44, baseType: !2515, size: 32)
!2522 = !{!2502}
!2523 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2525)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !143, line: 51, size: 64, elements: !2526)
!2526 = !{!2527, !2534}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2525, file: !143, line: 60, baseType: !2528, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 32)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!103, !2531}
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2533)
!2533 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !143, line: 48, flags: DIFlagFwdDecl)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2525, file: !143, line: 65, baseType: !2531, size: 32, offset: 32)
!2535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2536, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2536 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2538, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2538 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2539 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2540, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2541, retainedTypes: !2549, splitDebugInlining: false, nameTableKind: None)
!2540 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2541 = !{!30, !2542}
!2542 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2543, line: 54, baseType: !32, size: 32, elements: !2544)
!2543 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2544 = !{!2545, !2546, !2547, !2548}
!2545 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2546 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2547 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2548 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2549 = !{!102, !356, !270, !24, !2550, !22, !2556, !103, !837, !2571}
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2543, line: 58, baseType: !2552)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2543, line: 58, size: 64, elements: !2553)
!2553 = !{!2554}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2552, file: !2543, line: 58, baseType: !2555, size: 64)
!2555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1593)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 32)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2543, line: 68, size: 128, elements: !2558)
!2558 = !{!2559, !2562, !2563, !2564}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2557, file: !2543, line: 69, baseType: !2560, size: 64)
!2560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2561, size: 64, elements: !397)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2543, line: 61, baseType: !132)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2557, file: !2543, line: 70, baseType: !2561, size: 32, offset: 64)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2557, file: !2543, line: 71, baseType: !132, size: 32, offset: 96)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2557, file: !2543, line: 77, baseType: !2565, offset: 128)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2566, elements: !2569)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2543, line: 64, size: 32, elements: !2567)
!2567 = !{!2568}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2566, file: !2543, line: 65, baseType: !2561, size: 32)
!2569 = !{!2570}
!2570 = !DISubrange(count: 0)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 32)
!2572 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2573, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2574, retainedTypes: !2594, splitDebugInlining: false, nameTableKind: None)
!2573 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2574 = !{!2575, !2583}
!2575 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2576, line: 69, baseType: !32, size: 32, elements: !2577)
!2576 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2577 = !{!2578, !2579, !2580, !2581, !2582}
!2578 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2579 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2580 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2581 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2582 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2583 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2576, line: 56, baseType: !32, size: 32, elements: !2584)
!2584 = !{!2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593}
!2585 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2586 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2587 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2588 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2589 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2590 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2591 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2592 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2593 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2594 = !{!103, !2575, !2583, !2595, !416, !173, !2597, !2598, !164, !341, !155, !356, !102, !22, !32, !2600, !2601, !2602, !1093, !2603, !433, !2604, !2596, !2605, !2606, !2607, !2608}
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2576, line: 31, baseType: !2596)
!2596 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !433)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !357, line: 329, baseType: !32)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2576, line: 32, baseType: !2599)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1586)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !357, line: 145, baseType: !103)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!2609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2610 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2611 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2612, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2613, splitDebugInlining: false, nameTableKind: None)
!2612 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2613 = !{!163, !102, !103, !2614, !1688, !132, !1585}
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2616)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !212, line: 336, size: 608, elements: !2617)
!2617 = !{!2618, !2637, !2641, !2645, !2658, !2663, !2667, !2671, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2616, file: !212, line: 365, baseType: !2619, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 32)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{!103, !2622, !233}
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2624)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !2625)
!2625 = !{!2626, !2627, !2628, !2629, !2635, !2636}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2624, file: !152, line: 380, baseType: !155, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2624, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2624, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2624, file: !152, line: 386, baseType: !2630, size: 32, offset: 96)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !2632)
!2632 = !{!2633, !2634}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2631, file: !152, line: 359, baseType: !163, size: 8)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2631, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2624, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2624, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2616, file: !212, line: 366, baseType: !2638, size: 32, offset: 32)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 32)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{null, !2622, !164}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2616, file: !212, line: 374, baseType: !2642, size: 32, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 32)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{!103, !2622}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2616, file: !212, line: 377, baseType: !2646, size: 32, offset: 96)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2647 = !DISubroutineType(types: !2648)
!2648 = !{!103, !2622, !2649}
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2651)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !212, line: 122, size: 64, elements: !2652)
!2652 = !{!2653, !2654, !2655, !2656, !2657}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2651, file: !212, line: 123, baseType: !132, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2651, file: !212, line: 124, baseType: !163, size: 8, offset: 32)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2651, file: !212, line: 125, baseType: !163, size: 8, offset: 40)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2651, file: !212, line: 126, baseType: !163, size: 8, offset: 48)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2651, file: !212, line: 127, baseType: !163, size: 8, offset: 56)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2616, file: !212, line: 379, baseType: !2659, size: 32, offset: 128)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 32)
!2660 = !DISubroutineType(types: !2661)
!2661 = !{!103, !2622, !2662}
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2616, file: !212, line: 384, baseType: !2664, size: 32, offset: 160)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 32)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!103, !2622, !264, !103}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2616, file: !212, line: 393, baseType: !2668, size: 32, offset: 192)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 32)
!2669 = !DISubroutineType(types: !2670)
!2670 = !{!103, !2622, !270, !271}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2616, file: !212, line: 402, baseType: !2672, size: 32, offset: 224)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{null, !2622}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2616, file: !212, line: 405, baseType: !2672, size: 32, offset: 256)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2616, file: !212, line: 408, baseType: !2642, size: 32, offset: 288)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2616, file: !212, line: 411, baseType: !2672, size: 32, offset: 320)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2616, file: !212, line: 414, baseType: !2672, size: 32, offset: 352)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2616, file: !212, line: 417, baseType: !2642, size: 32, offset: 384)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2616, file: !212, line: 420, baseType: !2642, size: 32, offset: 416)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2616, file: !212, line: 423, baseType: !2672, size: 32, offset: 448)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2616, file: !212, line: 426, baseType: !2672, size: 32, offset: 480)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2616, file: !212, line: 429, baseType: !2642, size: 32, offset: 512)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2616, file: !212, line: 432, baseType: !2642, size: 32, offset: 544)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2616, file: !212, line: 435, baseType: !2686, size: 32, offset: 576)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 32)
!2687 = !DISubroutineType(types: !2688)
!2688 = !{null, !2622, !2689, !102}
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !212, line: 142, baseType: !2690)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 32)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{null, !2622, !102}
!2693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2694, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2695, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2694 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2695 = !{!2696, !30}
!2696 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2697, line: 27, baseType: !32, size: 32, elements: !2698)
!2697 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2698 = !{!2699, !2700, !2701, !2702, !2703}
!2699 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2700 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2701 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2702 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2703 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2705, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2706, retainedTypes: !2707, splitDebugInlining: false, nameTableKind: None)
!2705 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2706 = !{!576, !2696, !30}
!2707 = !{!742, !2708, !102, !103, !344, !132, !163, !2725}
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !2710)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !2711)
!2711 = !{!2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2710, file: !507, line: 413, baseType: !1703, size: 256)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2710, file: !507, line: 414, baseType: !1705, size: 768, offset: 256)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2710, file: !507, line: 415, baseType: !1703, size: 256, offset: 1024)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2710, file: !507, line: 416, baseType: !1705, size: 768, offset: 1280)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2710, file: !507, line: 417, baseType: !1703, size: 256, offset: 2048)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2710, file: !507, line: 418, baseType: !1705, size: 768, offset: 2304)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2710, file: !507, line: 419, baseType: !1703, size: 256, offset: 3072)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2710, file: !507, line: 420, baseType: !1705, size: 768, offset: 3328)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2710, file: !507, line: 421, baseType: !1703, size: 256, offset: 4096)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2710, file: !507, line: 422, baseType: !1716, size: 1792, offset: 4352)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2710, file: !507, line: 423, baseType: !1720, size: 1920, offset: 6144)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2710, file: !507, line: 424, baseType: !1725, size: 20608, offset: 8064)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2710, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2727)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2728)
!2728 = !{!2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2727, file: !507, line: 447, baseType: !511, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2727, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2727, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2727, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2727, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2727, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2727, file: !507, line: 453, baseType: !1740, size: 96, offset: 192)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2727, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2727, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2727, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2727, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2727, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2727, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2727, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2727, file: !507, line: 461, baseType: !1749, size: 64, offset: 512)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2727, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2727, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2727, file: !507, line: 464, baseType: !1753, size: 128, offset: 640)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2727, file: !507, line: 465, baseType: !1755, size: 160, offset: 768)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2727, file: !507, line: 466, baseType: !1757, size: 160, offset: 928)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2727, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2752 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2753, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2754, splitDebugInlining: false, nameTableKind: None)
!2753 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2754 = !{!102, !103, !22, !2755}
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2757)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2758)
!2758 = !{!2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2757, file: !507, line: 447, baseType: !511, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2757, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2757, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2757, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2757, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2757, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2757, file: !507, line: 453, baseType: !1740, size: 96, offset: 192)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2757, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2757, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2757, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2757, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2757, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2757, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2757, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2757, file: !507, line: 461, baseType: !1749, size: 64, offset: 512)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2757, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2757, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2757, file: !507, line: 464, baseType: !1753, size: 128, offset: 640)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2757, file: !507, line: 465, baseType: !1755, size: 160, offset: 768)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2757, file: !507, line: 466, baseType: !1757, size: 160, offset: 928)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2757, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2780 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2781, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2782, splitDebugInlining: false, nameTableKind: None)
!2781 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2782 = !{!2783, !102, !103}
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2785)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2785, file: !507, line: 447, baseType: !511, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2785, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2785, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2785, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2785, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2785, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2785, file: !507, line: 453, baseType: !1740, size: 96, offset: 192)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2785, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2785, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2785, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2785, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2785, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2785, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2785, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2785, file: !507, line: 461, baseType: !1749, size: 64, offset: 512)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2785, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2785, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2785, file: !507, line: 464, baseType: !1753, size: 128, offset: 640)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2785, file: !507, line: 465, baseType: !1755, size: 160, offset: 768)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2785, file: !507, line: 466, baseType: !1757, size: 160, offset: 928)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2785, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2810, splitDebugInlining: false, nameTableKind: None)
!2809 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2810 = !{!2811, !132, !102, !103}
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 32)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2813, line: 98, size: 256, elements: !2814)
!2813 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2814 = !{!2815, !2820, !2825, !2830, !2835, !2840, !2845, !2850}
!2815 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 99, baseType: !2816, size: 32)
!2816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 99, size: 32, elements: !2817)
!2817 = !{!2818, !2819}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2816, file: !2813, line: 99, baseType: !132, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2816, file: !2813, line: 99, baseType: !132, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 100, baseType: !2821, size: 32, offset: 32)
!2821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 100, size: 32, elements: !2822)
!2822 = !{!2823, !2824}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2821, file: !2813, line: 100, baseType: !132, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2821, file: !2813, line: 100, baseType: !132, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 101, baseType: !2826, size: 32, offset: 64)
!2826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 101, size: 32, elements: !2827)
!2827 = !{!2828, !2829}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2826, file: !2813, line: 101, baseType: !132, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2826, file: !2813, line: 101, baseType: !132, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 102, baseType: !2831, size: 32, offset: 96)
!2831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 102, size: 32, elements: !2832)
!2832 = !{!2833, !2834}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2831, file: !2813, line: 102, baseType: !132, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2831, file: !2813, line: 102, baseType: !132, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 103, baseType: !2836, size: 32, offset: 128)
!2836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 103, size: 32, elements: !2837)
!2837 = !{!2838, !2839}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2836, file: !2813, line: 103, baseType: !132, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2836, file: !2813, line: 103, baseType: !132, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 104, baseType: !2841, size: 32, offset: 160)
!2841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 104, size: 32, elements: !2842)
!2842 = !{!2843, !2844}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2841, file: !2813, line: 104, baseType: !132, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2841, file: !2813, line: 104, baseType: !132, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2813, line: 105, baseType: !2846, size: 32, offset: 192)
!2846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2813, line: 105, size: 32, elements: !2847)
!2847 = !{!2848, !2849}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2846, file: !2813, line: 105, baseType: !132, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2846, file: !2813, line: 105, baseType: !132, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2812, file: !2813, line: 106, baseType: !132, size: 32, offset: 224)
!2851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2852, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2695, retainedTypes: !2853, splitDebugInlining: false, nameTableKind: None)
!2852 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2853 = !{!2854, !102, !103, !2879, !2571, !132}
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2856)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2857)
!2857 = !{!2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2856, file: !507, line: 447, baseType: !511, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2856, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2856, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2856, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2856, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2856, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2856, file: !507, line: 453, baseType: !1740, size: 96, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2856, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2856, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2856, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2856, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2856, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2856, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2856, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2856, file: !507, line: 461, baseType: !1749, size: 64, offset: 512)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2856, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2856, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2856, file: !507, line: 464, baseType: !1753, size: 128, offset: 640)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2856, file: !507, line: 465, baseType: !1755, size: 160, offset: 768)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2856, file: !507, line: 466, baseType: !1757, size: 160, offset: 928)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2856, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2813, line: 141, baseType: !2881)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2813, line: 97, size: 256, elements: !2882)
!2882 = !{!2883}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2881, file: !2813, line: 107, baseType: !2884, size: 256)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2813, line: 98, size: 256, elements: !2885)
!2885 = !{!2886, !2891, !2896, !2901, !2906, !2911, !2916, !2921}
!2886 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 99, baseType: !2887, size: 32)
!2887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 99, size: 32, elements: !2888)
!2888 = !{!2889, !2890}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2887, file: !2813, line: 99, baseType: !132, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2887, file: !2813, line: 99, baseType: !132, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 100, baseType: !2892, size: 32, offset: 32)
!2892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 100, size: 32, elements: !2893)
!2893 = !{!2894, !2895}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2892, file: !2813, line: 100, baseType: !132, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2892, file: !2813, line: 100, baseType: !132, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 101, baseType: !2897, size: 32, offset: 64)
!2897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 101, size: 32, elements: !2898)
!2898 = !{!2899, !2900}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2897, file: !2813, line: 101, baseType: !132, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2897, file: !2813, line: 101, baseType: !132, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 102, baseType: !2902, size: 32, offset: 96)
!2902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 102, size: 32, elements: !2903)
!2903 = !{!2904, !2905}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2902, file: !2813, line: 102, baseType: !132, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2902, file: !2813, line: 102, baseType: !132, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 103, baseType: !2907, size: 32, offset: 128)
!2907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 103, size: 32, elements: !2908)
!2908 = !{!2909, !2910}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2907, file: !2813, line: 103, baseType: !132, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2907, file: !2813, line: 103, baseType: !132, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 104, baseType: !2912, size: 32, offset: 160)
!2912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 104, size: 32, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2912, file: !2813, line: 104, baseType: !132, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2912, file: !2813, line: 104, baseType: !132, size: 32)
!2916 = !DIDerivedType(tag: DW_TAG_member, scope: !2884, file: !2813, line: 105, baseType: !2917, size: 32, offset: 192)
!2917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2884, file: !2813, line: 105, size: 32, elements: !2918)
!2918 = !{!2919, !2920}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2917, file: !2813, line: 105, baseType: !132, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2917, file: !2813, line: 105, baseType: !132, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2884, file: !2813, line: 106, baseType: !132, size: 32, offset: 224)
!2922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2923, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1686, retainedTypes: !2924, splitDebugInlining: false, nameTableKind: None)
!2923 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2924 = !{!742, !344, !163, !132, !2925, !2942}
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !507, line: 426, baseType: !2927)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 411, size: 28704, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2927, file: !507, line: 413, baseType: !1703, size: 256)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2927, file: !507, line: 414, baseType: !1705, size: 768, offset: 256)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2927, file: !507, line: 415, baseType: !1703, size: 256, offset: 1024)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2927, file: !507, line: 416, baseType: !1705, size: 768, offset: 1280)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2927, file: !507, line: 417, baseType: !1703, size: 256, offset: 2048)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2927, file: !507, line: 418, baseType: !1705, size: 768, offset: 2304)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2927, file: !507, line: 419, baseType: !1703, size: 256, offset: 3072)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2927, file: !507, line: 420, baseType: !1705, size: 768, offset: 3328)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2927, file: !507, line: 421, baseType: !1703, size: 256, offset: 4096)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2927, file: !507, line: 422, baseType: !1716, size: 1792, offset: 4352)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2927, file: !507, line: 423, baseType: !1720, size: 1920, offset: 6144)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2927, file: !507, line: 424, baseType: !1725, size: 20608, offset: 8064)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2927, file: !507, line: 425, baseType: !131, size: 32, offset: 28672)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2944)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2945)
!2945 = !{!2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2944, file: !507, line: 447, baseType: !511, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2944, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2944, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2944, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2944, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2944, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2944, file: !507, line: 453, baseType: !1740, size: 96, offset: 192)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2944, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2944, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2944, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2944, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2944, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2944, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2944, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2944, file: !507, line: 461, baseType: !1749, size: 64, offset: 512)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2944, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2944, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2944, file: !507, line: 464, baseType: !1753, size: 128, offset: 640)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2944, file: !507, line: 465, baseType: !1755, size: 160, offset: 768)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2944, file: !507, line: 466, baseType: !1757, size: 160, offset: 928)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2944, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2967 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2968, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2969, splitDebugInlining: false, nameTableKind: None)
!2968 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2969 = !{!2970, !102, !103}
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !507, line: 468, baseType: !2972)
!2972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 445, size: 1120, elements: !2973)
!2973 = !{!2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2972, file: !507, line: 447, baseType: !511, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2972, file: !507, line: 448, baseType: !131, size: 32, offset: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2972, file: !507, line: 449, baseType: !131, size: 32, offset: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2972, file: !507, line: 450, baseType: !131, size: 32, offset: 96)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2972, file: !507, line: 451, baseType: !131, size: 32, offset: 128)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2972, file: !507, line: 452, baseType: !131, size: 32, offset: 160)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2972, file: !507, line: 453, baseType: !1740, size: 96, offset: 192)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2972, file: !507, line: 454, baseType: !131, size: 32, offset: 288)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2972, file: !507, line: 455, baseType: !131, size: 32, offset: 320)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2972, file: !507, line: 456, baseType: !131, size: 32, offset: 352)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2972, file: !507, line: 457, baseType: !131, size: 32, offset: 384)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2972, file: !507, line: 458, baseType: !131, size: 32, offset: 416)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2972, file: !507, line: 459, baseType: !131, size: 32, offset: 448)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2972, file: !507, line: 460, baseType: !131, size: 32, offset: 480)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2972, file: !507, line: 461, baseType: !1749, size: 64, offset: 512)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2972, file: !507, line: 462, baseType: !511, size: 32, offset: 576)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2972, file: !507, line: 463, baseType: !511, size: 32, offset: 608)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2972, file: !507, line: 464, baseType: !1753, size: 128, offset: 640)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2972, file: !507, line: 465, baseType: !1755, size: 160, offset: 768)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2972, file: !507, line: 466, baseType: !1757, size: 160, offset: 928)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2972, file: !507, line: 467, baseType: !131, size: 32, offset: 1088)
!2995 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2996, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2997, splitDebugInlining: false, nameTableKind: None)
!2996 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!2997 = !{!108, !1063, !356, !233, !2998, !164, !102}
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!3000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3002, splitDebugInlining: false, nameTableKind: None)
!3001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!3002 = !{!3003}
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 370, baseType: !3005)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 336, size: 1152, elements: !3006)
!3006 = !{!3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3005, file: !127, line: 338, baseType: !131, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3005, file: !127, line: 339, baseType: !131, size: 32, offset: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3005, file: !127, line: 340, baseType: !131, size: 32, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3005, file: !127, line: 341, baseType: !131, size: 32, offset: 96)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3005, file: !127, line: 342, baseType: !131, size: 32, offset: 128)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3005, file: !127, line: 343, baseType: !131, size: 32, offset: 160)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3005, file: !127, line: 344, baseType: !131, size: 32, offset: 192)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3005, file: !127, line: 345, baseType: !132, size: 32, offset: 224)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3005, file: !127, line: 346, baseType: !131, size: 32, offset: 256)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3005, file: !127, line: 347, baseType: !131, size: 32, offset: 288)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3005, file: !127, line: 348, baseType: !808, size: 64, offset: 320)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3005, file: !127, line: 349, baseType: !131, size: 32, offset: 384)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3005, file: !127, line: 350, baseType: !131, size: 32, offset: 416)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3005, file: !127, line: 351, baseType: !131, size: 32, offset: 448)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3005, file: !127, line: 352, baseType: !132, size: 32, offset: 480)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3005, file: !127, line: 353, baseType: !131, size: 32, offset: 512)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3005, file: !127, line: 354, baseType: !131, size: 32, offset: 544)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3005, file: !127, line: 355, baseType: !808, size: 64, offset: 576)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3005, file: !127, line: 356, baseType: !131, size: 32, offset: 640)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3005, file: !127, line: 357, baseType: !131, size: 32, offset: 672)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3005, file: !127, line: 358, baseType: !131, size: 32, offset: 704)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3005, file: !127, line: 359, baseType: !132, size: 32, offset: 736)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3005, file: !127, line: 360, baseType: !131, size: 32, offset: 768)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3005, file: !127, line: 361, baseType: !131, size: 32, offset: 800)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3005, file: !127, line: 362, baseType: !808, size: 64, offset: 832)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3005, file: !127, line: 363, baseType: !131, size: 32, offset: 896)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3005, file: !127, line: 364, baseType: !131, size: 32, offset: 928)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3005, file: !127, line: 365, baseType: !808, size: 64, offset: 960)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3005, file: !127, line: 366, baseType: !131, size: 32, offset: 1024)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3005, file: !127, line: 367, baseType: !131, size: 32, offset: 1056)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3005, file: !127, line: 368, baseType: !829, size: 32, offset: 1088)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3005, file: !127, line: 369, baseType: !131, size: 32, offset: 1120)
!3039 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3040, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3040 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!3041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3043, retainedTypes: !3059, splitDebugInlining: false, nameTableKind: None)
!3042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!3043 = !{!3044, !3051, !3055}
!3044 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3045, line: 38, baseType: !32, size: 32, elements: !3046)
!3045 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3046 = !{!3047, !3048, !3049, !3050}
!3047 = !DIEnumerator(name: "HAL_OK", value: 0)
!3048 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3049 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3050 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3051 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !781, line: 184, baseType: !32, size: 32, elements: !3052)
!3052 = !{!3053, !3054}
!3053 = !DIEnumerator(name: "RESET", value: 0)
!3054 = !DIEnumerator(name: "SET", value: 1)
!3055 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !781, line: 190, baseType: !32, size: 32, elements: !3056)
!3056 = !{!3057, !3058}
!3057 = !DIEnumerator(name: "DISABLE", value: 0)
!3058 = !DIEnumerator(name: "ENABLE", value: 1)
!3059 = !{!102, !3060, !163, !132, !1587, !3096, !3102, !3113, !340, !3114, !1585}
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 370, baseType: !3062)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 336, size: 1152, elements: !3063)
!3063 = !{!3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3062, file: !127, line: 338, baseType: !131, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3062, file: !127, line: 339, baseType: !131, size: 32, offset: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3062, file: !127, line: 340, baseType: !131, size: 32, offset: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3062, file: !127, line: 341, baseType: !131, size: 32, offset: 96)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3062, file: !127, line: 342, baseType: !131, size: 32, offset: 128)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3062, file: !127, line: 343, baseType: !131, size: 32, offset: 160)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3062, file: !127, line: 344, baseType: !131, size: 32, offset: 192)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3062, file: !127, line: 345, baseType: !132, size: 32, offset: 224)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3062, file: !127, line: 346, baseType: !131, size: 32, offset: 256)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3062, file: !127, line: 347, baseType: !131, size: 32, offset: 288)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3062, file: !127, line: 348, baseType: !808, size: 64, offset: 320)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3062, file: !127, line: 349, baseType: !131, size: 32, offset: 384)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3062, file: !127, line: 350, baseType: !131, size: 32, offset: 416)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3062, file: !127, line: 351, baseType: !131, size: 32, offset: 448)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3062, file: !127, line: 352, baseType: !132, size: 32, offset: 480)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3062, file: !127, line: 353, baseType: !131, size: 32, offset: 512)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3062, file: !127, line: 354, baseType: !131, size: 32, offset: 544)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3062, file: !127, line: 355, baseType: !808, size: 64, offset: 576)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3062, file: !127, line: 356, baseType: !131, size: 32, offset: 640)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3062, file: !127, line: 357, baseType: !131, size: 32, offset: 672)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3062, file: !127, line: 358, baseType: !131, size: 32, offset: 704)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3062, file: !127, line: 359, baseType: !132, size: 32, offset: 736)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3062, file: !127, line: 360, baseType: !131, size: 32, offset: 768)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3062, file: !127, line: 361, baseType: !131, size: 32, offset: 800)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3062, file: !127, line: 362, baseType: !808, size: 64, offset: 832)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3062, file: !127, line: 363, baseType: !131, size: 32, offset: 896)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3062, file: !127, line: 364, baseType: !131, size: 32, offset: 928)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3062, file: !127, line: 365, baseType: !808, size: 64, offset: 960)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3062, file: !127, line: 366, baseType: !131, size: 32, offset: 1024)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3062, file: !127, line: 367, baseType: !131, size: 32, offset: 1056)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3062, file: !127, line: 368, baseType: !829, size: 32, offset: 1088)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3062, file: !127, line: 369, baseType: !131, size: 32, offset: 1120)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !127, line: 330, baseType: !3098)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 326, size: 64, elements: !3099)
!3099 = !{!3100, !3101}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3098, file: !127, line: 328, baseType: !131, size: 32)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3098, file: !127, line: 329, baseType: !131, size: 32, offset: 32)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 259, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 250, size: 224, elements: !3105)
!3105 = !{!3106, !3107, !3108, !3109, !3110, !3111, !3112}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3104, file: !127, line: 252, baseType: !131, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3104, file: !127, line: 253, baseType: !131, size: 32, offset: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3104, file: !127, line: 254, baseType: !131, size: 32, offset: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3104, file: !127, line: 255, baseType: !131, size: 32, offset: 96)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3104, file: !127, line: 256, baseType: !131, size: 32, offset: 128)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3104, file: !127, line: 257, baseType: !131, size: 32, offset: 160)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3104, file: !127, line: 258, baseType: !131, size: 32, offset: 192)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 32)
!3115 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !127, line: 276, baseType: !3116)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 265, size: 320, elements: !3117)
!3117 = !{!3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3116, file: !127, line: 267, baseType: !131, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3116, file: !127, line: 268, baseType: !131, size: 32, offset: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3116, file: !127, line: 269, baseType: !131, size: 32, offset: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3116, file: !127, line: 270, baseType: !131, size: 32, offset: 96)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3116, file: !127, line: 271, baseType: !131, size: 32, offset: 128)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3116, file: !127, line: 272, baseType: !131, size: 32, offset: 160)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3116, file: !127, line: 273, baseType: !131, size: 32, offset: 192)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3116, file: !127, line: 274, baseType: !131, size: 32, offset: 224)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3116, file: !127, line: 275, baseType: !1232, size: 64, offset: 256)
!3127 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3128, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3129, retainedTypes: !3130, splitDebugInlining: false, nameTableKind: None)
!3128 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!3129 = !{!780}
!3130 = !{!3131, !132, !3139, !3145, !3156}
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !507, line: 770, baseType: !3133)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 764, size: 128, elements: !3134)
!3134 = !{!3135, !3136, !3137, !3138}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3133, file: !507, line: 766, baseType: !131, size: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3133, file: !507, line: 767, baseType: !131, size: 32, offset: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3133, file: !507, line: 768, baseType: !131, size: 32, offset: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3133, file: !507, line: 769, baseType: !511, size: 32, offset: 96)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 32)
!3140 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !127, line: 330, baseType: !3141)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 326, size: 64, elements: !3142)
!3142 = !{!3143, !3144}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3141, file: !127, line: 328, baseType: !131, size: 32)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3141, file: !127, line: 329, baseType: !131, size: 32, offset: 32)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !127, line: 259, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 250, size: 224, elements: !3148)
!3148 = !{!3149, !3150, !3151, !3152, !3153, !3154, !3155}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3147, file: !127, line: 252, baseType: !131, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3147, file: !127, line: 253, baseType: !131, size: 32, offset: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3147, file: !127, line: 254, baseType: !131, size: 32, offset: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3147, file: !127, line: 255, baseType: !131, size: 32, offset: 96)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3147, file: !127, line: 256, baseType: !131, size: 32, offset: 128)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3147, file: !127, line: 257, baseType: !131, size: 32, offset: 160)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3147, file: !127, line: 258, baseType: !131, size: 32, offset: 192)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !127, line: 370, baseType: !3158)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !127, line: 336, size: 1152, elements: !3159)
!3159 = !{!3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3158, file: !127, line: 338, baseType: !131, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3158, file: !127, line: 339, baseType: !131, size: 32, offset: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3158, file: !127, line: 340, baseType: !131, size: 32, offset: 64)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3158, file: !127, line: 341, baseType: !131, size: 32, offset: 96)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3158, file: !127, line: 342, baseType: !131, size: 32, offset: 128)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3158, file: !127, line: 343, baseType: !131, size: 32, offset: 160)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3158, file: !127, line: 344, baseType: !131, size: 32, offset: 192)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3158, file: !127, line: 345, baseType: !132, size: 32, offset: 224)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3158, file: !127, line: 346, baseType: !131, size: 32, offset: 256)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3158, file: !127, line: 347, baseType: !131, size: 32, offset: 288)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3158, file: !127, line: 348, baseType: !808, size: 64, offset: 320)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3158, file: !127, line: 349, baseType: !131, size: 32, offset: 384)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3158, file: !127, line: 350, baseType: !131, size: 32, offset: 416)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3158, file: !127, line: 351, baseType: !131, size: 32, offset: 448)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3158, file: !127, line: 352, baseType: !132, size: 32, offset: 480)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3158, file: !127, line: 353, baseType: !131, size: 32, offset: 512)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3158, file: !127, line: 354, baseType: !131, size: 32, offset: 544)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3158, file: !127, line: 355, baseType: !808, size: 64, offset: 576)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3158, file: !127, line: 356, baseType: !131, size: 32, offset: 640)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3158, file: !127, line: 357, baseType: !131, size: 32, offset: 672)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3158, file: !127, line: 358, baseType: !131, size: 32, offset: 704)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3158, file: !127, line: 359, baseType: !132, size: 32, offset: 736)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3158, file: !127, line: 360, baseType: !131, size: 32, offset: 768)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3158, file: !127, line: 361, baseType: !131, size: 32, offset: 800)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3158, file: !127, line: 362, baseType: !808, size: 64, offset: 832)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3158, file: !127, line: 363, baseType: !131, size: 32, offset: 896)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3158, file: !127, line: 364, baseType: !131, size: 32, offset: 928)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3158, file: !127, line: 365, baseType: !808, size: 64, offset: 960)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3158, file: !127, line: 366, baseType: !131, size: 32, offset: 1024)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3158, file: !127, line: 367, baseType: !131, size: 32, offset: 1056)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3158, file: !127, line: 368, baseType: !829, size: 32, offset: 1088)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3158, file: !127, line: 369, baseType: !131, size: 32, offset: 1120)
!3192 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3193, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3194, splitDebugInlining: false, nameTableKind: None)
!3193 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!3194 = !{!102, !356}
!3195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3196, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3197, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3196 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!3197 = !{!3198, !3205, !30}
!3198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3199, line: 14, baseType: !32, size: 32, elements: !3200)
!3199 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3200 = !{!3201, !3202, !3203, !3204}
!3201 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3202 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3203 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3204 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3205 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3199, line: 42, baseType: !32, size: 32, elements: !3206)
!3206 = !{!3207, !3208, !3209, !3210, !3211, !3212}
!3207 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3208 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3209 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3210 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3211 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3212 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3214, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3214 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!3215 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3216, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3217, splitDebugInlining: false, nameTableKind: None)
!3216 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!3217 = !{!22, !102, !103}
!3218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!3220 = !{!"Ubuntu clang version 14.0.6"}
!3221 = !{i32 7, !"Dwarf Version", i32 4}
!3222 = !{i32 2, !"Debug Info Version", i32 3}
!3223 = !{i32 1, !"wchar_size", i32 4}
!3224 = !{i32 1, !"min_enum_size", i32 4}
!3225 = !{i32 1, !"branch-target-enforcement", i32 0}
!3226 = !{i32 1, !"sign-return-address", i32 0}
!3227 = !{i32 1, !"sign-return-address-all", i32 0}
!3228 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3229 = !{i32 7, !"frame-pointer", i32 2}
!3230 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3231, file: !3231, line: 26, type: !3232, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !473)
!3231 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3232 = !DISubroutineType(types: !3233)
!3233 = !{null}
!3234 = !DILocation(line: 28, column: 1, scope: !3230)
!3235 = !{i64 2154340357, i64 2154340377, i64 2154340440}
!3236 = !DILocation(line: 29, column: 1, scope: !3230)
!3237 = !{i64 2154340772, i64 2154340792, i64 2154340855}
!3238 = !DILocation(line: 30, column: 1, scope: !3230)
!3239 = !{i64 2154341191, i64 2154341211, i64 2154341274}
!3240 = !DILocation(line: 31, column: 1, scope: !3230)
!3241 = !{i64 2154341610, i64 2154341630, i64 2154341693}
!3242 = !DILocation(line: 33, column: 1, scope: !3230)
!3243 = !{i64 2154341902, i64 2154341922, i64 2154341985}
!3244 = !DILocation(line: 35, column: 1, scope: !3230)
!3245 = !{i64 2154342227, i64 2154342247, i64 2154342310}
!3246 = !DILocation(line: 50, column: 1, scope: !3230)
!3247 = !{i64 2154342654, i64 2154342674, i64 2154342737}
!3248 = !DILocation(line: 54, column: 1, scope: !3230)
!3249 = !{i64 2154343093, i64 2154343113, i64 2154343176}
!3250 = !DILocation(line: 61, column: 1, scope: !3230)
!3251 = !{i64 2154343410, i64 2154343430, i64 2154343493}
!3252 = !DILocation(line: 63, column: 1, scope: !3230)
!3253 = !{i64 2154343790, i64 2154343810, i64 2154343873}
!3254 = !DILocation(line: 64, column: 1, scope: !3230)
!3255 = !{i64 2154344312, i64 2154344332, i64 2154344395}
!3256 = !DILocation(line: 65, column: 1, scope: !3230)
!3257 = !{i64 2154344810, i64 2154344830, i64 2154344893}
!3258 = !DILocation(line: 66, column: 1, scope: !3230)
!3259 = !{i64 2154345292, i64 2154345312, i64 2154345375}
!3260 = !DILocation(line: 67, column: 1, scope: !3230)
!3261 = !{i64 2154345799, i64 2154345819, i64 2154345882}
!3262 = !DILocation(line: 68, column: 1, scope: !3230)
!3263 = !{i64 2154346287, i64 2154346307, i64 2154346370}
!3264 = !DILocation(line: 70, column: 1, scope: !3230)
!3265 = !{i64 2154346755, i64 2154346775, i64 2154346838}
!3266 = !DILocation(line: 71, column: 1, scope: !3230)
!3267 = !{i64 2154347197, i64 2154347217, i64 2154347280}
!3268 = !DILocation(line: 72, column: 1, scope: !3230)
!3269 = !{i64 2154347655, i64 2154347675, i64 2154347738}
!3270 = !DILocation(line: 79, column: 1, scope: !3230)
!3271 = !{i64 2154348109, i64 2154348129, i64 2154348192}
!3272 = !DILocation(line: 80, column: 1, scope: !3230)
!3273 = !{i64 2154348620, i64 2154348640, i64 2154348703}
!3274 = !DILocation(line: 82, column: 1, scope: !3230)
!3275 = !{i64 2154353172, i64 2154353192, i64 2154353255}
!3276 = !DILocation(line: 97, column: 1, scope: !3230)
!3277 = !{i64 2154353509, i64 2154353529, i64 2154353592}
!3278 = !DILocation(line: 99, column: 1, scope: !3230)
!3279 = !{i64 2154353727, i64 2154353747, i64 2154353810}
!3280 = !DILocation(line: 102, column: 1, scope: !3230)
!3281 = !{i64 2154353984, i64 2154354004, i64 2154354067}
!3282 = !DILocation(line: 105, column: 1, scope: !3230)
!3283 = !{i64 2154354224, i64 2154354244, i64 2154354307}
!3284 = !DILocation(line: 115, column: 1, scope: !3230)
!3285 = !{i64 2154354563, i64 2154354583, i64 2154354646}
!3286 = !DILocation(line: 118, column: 1, scope: !3230)
!3287 = !{i64 2154354907, i64 2154354927, i64 2154354990}
!3288 = !DILocation(line: 32, column: 1, scope: !3289)
!3289 = !DILexicalBlockFile(scope: !3230, file: !3290, discriminator: 0)
!3290 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3291 = !{i64 2154355263, i64 2154355283, i64 2154355346}
!3292 = !DILocation(line: 33, column: 1, scope: !3289)
!3293 = !{i64 2154355775, i64 2154355795, i64 2154355858}
!3294 = !DILocation(line: 53, column: 1, scope: !3289)
!3295 = !{i64 2154356283, i64 2154356303, i64 2154356366}
!3296 = !DILocation(line: 54, column: 1, scope: !3289)
!3297 = !{i64 2154356701, i64 2154356721, i64 2154356784}
!3298 = !DILocation(line: 55, column: 1, scope: !3289)
!3299 = !{i64 2154357119, i64 2154357139, i64 2154357202}
!3300 = !DILocation(line: 56, column: 1, scope: !3289)
!3301 = !{i64 2154357537, i64 2154357557, i64 2154357620}
!3302 = !DILocation(line: 57, column: 1, scope: !3289)
!3303 = !{i64 2154357955, i64 2154357975, i64 2154358038}
!3304 = !DILocation(line: 58, column: 1, scope: !3289)
!3305 = !{i64 2154358373, i64 2154358393, i64 2154358456}
!3306 = !DILocation(line: 59, column: 1, scope: !3289)
!3307 = !{i64 2154358791, i64 2154358811, i64 2154358874}
!3308 = !DILocation(line: 60, column: 1, scope: !3289)
!3309 = !{i64 2154359215, i64 2154359235, i64 2154359298}
!3310 = !DILocation(line: 61, column: 1, scope: !3289)
!3311 = !{i64 2154359532, i64 2154359552, i64 2154359615}
!3312 = !DILocation(line: 70, column: 1, scope: !3289)
!3313 = !{i64 2154359761, i64 2154359781, i64 2154359844}
!3314 = !DILocation(line: 72, column: 1, scope: !3289)
!3315 = !{i64 2154360093, i64 2154360113, i64 2154360176}
!3316 = !DILocation(line: 73, column: 1, scope: !3289)
!3317 = !{i64 2154360543, i64 2154360563, i64 2154360626}
!3318 = !DILocation(line: 74, column: 1, scope: !3289)
!3319 = !{i64 2154360993, i64 2154361013, i64 2154361076}
!3320 = !DILocation(line: 75, column: 1, scope: !3289)
!3321 = !{i64 2154361443, i64 2154361463, i64 2154361526}
!3322 = !DILocation(line: 76, column: 1, scope: !3289)
!3323 = !{i64 2154361893, i64 2154361913, i64 2154361976}
!3324 = !DILocation(line: 77, column: 1, scope: !3289)
!3325 = !{i64 2154362343, i64 2154362363, i64 2154362426}
!3326 = !DILocation(line: 78, column: 1, scope: !3289)
!3327 = !{i64 2154366854, i64 2154366874, i64 2154366937}
!3328 = !DILocation(line: 79, column: 1, scope: !3289)
!3329 = !{i64 2154367304, i64 2154367324, i64 2154367387}
!3330 = !DILocation(line: 80, column: 1, scope: !3289)
!3331 = !{i64 2154367757, i64 2154367777, i64 2154367840}
!3332 = !DILocation(line: 84, column: 1, scope: !3289)
!3333 = !{i64 2154368089, i64 2154368109, i64 2154368172}
!3334 = !DILocation(line: 91, column: 1, scope: !3289)
!3335 = !{i64 2154368486, i64 2154368506, i64 2154368569}
!3336 = !DILocation(line: 93, column: 1, scope: !3289)
!3337 = !{i64 2154368853, i64 2154368873, i64 2154368936}
!3338 = !DILocation(line: 106, column: 1, scope: !3289)
!3339 = !{i64 2154369123, i64 2154369143, i64 2154369206}
!3340 = !DILocation(line: 11, column: 1, scope: !3341)
!3341 = !DILexicalBlockFile(scope: !3230, file: !3342, discriminator: 0)
!3342 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3343 = distinct !DISubprogram(name: "main", scope: !105, file: !105, line: 11, type: !3232, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3344)
!3344 = !{!3345}
!3345 = !DILocalVariable(name: "c", scope: !3346, file: !105, line: 20, type: !163)
!3346 = distinct !DILexicalBlock(scope: !3343, file: !105, line: 19, column: 12)
!3347 = !DILocation(line: 13, column: 2, scope: !3343)
!3348 = !DILocation(line: 15, column: 2, scope: !3343)
!3349 = !DILocation(line: 16, column: 2, scope: !3343)
!3350 = !DILocation(line: 17, column: 2, scope: !3343)
!3351 = !DILocation(line: 19, column: 2, scope: !3343)
!3352 = !DILocation(line: 20, column: 15, scope: !3346)
!3353 = !DILocation(line: 0, scope: !3346)
!3354 = !DILocation(line: 22, column: 3, scope: !3346)
!3355 = !DILocation(line: 23, column: 7, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3346, file: !105, line: 23, column: 7)
!3357 = !DILocation(line: 23, column: 9, scope: !3356)
!3358 = !DILocation(line: 23, column: 7, scope: !3346)
!3359 = !DILocation(line: 24, column: 4, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3356, file: !105, line: 23, column: 18)
!3361 = !DILocation(line: 25, column: 3, scope: !3360)
!3362 = distinct !{!3362, !3351, !3363}
!3363 = !DILocation(line: 26, column: 2, scope: !3343)
!3364 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !116, file: !116, line: 45, type: !118, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3365)
!3365 = !{!3366}
!3366 = !DILocalVariable(name: "c", arg: 1, scope: !3364, file: !116, line: 45, type: !103)
!3367 = !DILocation(line: 0, scope: !3364)
!3368 = !DILocation(line: 50, column: 2, scope: !3364)
!3369 = distinct !DISubprogram(name: "__printk_hook_install", scope: !116, file: !116, line: 63, type: !3370, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3372)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{null, !117}
!3372 = !{!3373}
!3373 = !DILocalVariable(name: "fn", arg: 1, scope: !3369, file: !116, line: 63, type: !117)
!3374 = !DILocation(line: 0, scope: !3369)
!3375 = !DILocation(line: 65, column: 12, scope: !3369)
!3376 = !DILocation(line: 66, column: 1, scope: !3369)
!3377 = distinct !DISubprogram(name: "__printk_get_hook", scope: !116, file: !116, line: 76, type: !3378, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !473)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{!102}
!3380 = !DILocation(line: 78, column: 9, scope: !3377)
!3381 = !DILocation(line: 78, column: 2, scope: !3377)
!3382 = distinct !DISubprogram(name: "vprintk", scope: !116, file: !116, line: 113, type: !3383, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3392)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{null, !155, !3385}
!3385 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3386, line: 99, baseType: !3387)
!3386 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3386, line: 40, baseType: !3388)
!3388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !116, baseType: !3389)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3390)
!3390 = !{!3391}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3389, file: !116, line: 79, baseType: !102, size: 32)
!3392 = !{!3393, !3394, !3395}
!3393 = !DILocalVariable(name: "fmt", arg: 1, scope: !3382, file: !116, line: 113, type: !155)
!3394 = !DILocalVariable(name: "ap", arg: 2, scope: !3382, file: !116, line: 113, type: !3385)
!3395 = !DILocalVariable(name: "ctx", scope: !3396, file: !116, line: 121, type: !3398)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !116, line: 120, column: 27)
!3397 = distinct !DILexicalBlock(scope: !3382, file: !116, line: 120, column: 6)
!3398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !116, line: 81, size: 32, elements: !3399)
!3399 = !{!3400, !3401}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3398, file: !116, line: 85, baseType: !32, size: 32)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3398, file: !116, line: 86, baseType: !3402, offset: 32)
!3402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, elements: !2569)
!3403 = !DILocation(line: 0, scope: !3382)
!3404 = !DILocation(line: 148, column: 3, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3397, file: !116, line: 138, column: 9)
!3406 = !DILocation(line: 155, column: 1, scope: !3382)
!3407 = distinct !DISubprogram(name: "char_out", scope: !116, file: !116, line: 107, type: !3408, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3410)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!103, !103, !102}
!3410 = !{!3411, !3412}
!3411 = !DILocalVariable(name: "c", arg: 1, scope: !3407, file: !116, line: 107, type: !103)
!3412 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3407, file: !116, line: 107, type: !102)
!3413 = !DILocation(line: 0, scope: !3407)
!3414 = !DILocation(line: 110, column: 9, scope: !3407)
!3415 = !DILocation(line: 110, column: 2, scope: !3407)
!3416 = distinct !DISubprogram(name: "cbvprintf", scope: !3417, file: !3417, line: 739, type: !3418, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3424)
!3417 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!103, !3420, !102, !155, !3385}
!3420 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3417, line: 297, baseType: !3421)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 32)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!103, null}
!3424 = !{!3425, !3426, !3427, !3428}
!3425 = !DILocalVariable(name: "out", arg: 1, scope: !3416, file: !3417, line: 739, type: !3420)
!3426 = !DILocalVariable(name: "ctx", arg: 2, scope: !3416, file: !3417, line: 739, type: !102)
!3427 = !DILocalVariable(name: "format", arg: 3, scope: !3416, file: !3417, line: 739, type: !155)
!3428 = !DILocalVariable(name: "ap", arg: 4, scope: !3416, file: !3417, line: 739, type: !3385)
!3429 = !DILocation(line: 0, scope: !3416)
!3430 = !DILocation(line: 741, column: 9, scope: !3416)
!3431 = !DILocation(line: 741, column: 2, scope: !3416)
!3432 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !116, file: !116, line: 157, type: !3433, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3435)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{null, !1063, !356}
!3435 = !{!3436, !3437, !3438}
!3436 = !DILocalVariable(name: "c", arg: 1, scope: !3432, file: !116, line: 157, type: !1063)
!3437 = !DILocalVariable(name: "n", arg: 2, scope: !3432, file: !116, line: 157, type: !356)
!3438 = !DILocalVariable(name: "i", scope: !3432, file: !116, line: 159, type: !356)
!3439 = !DILocation(line: 0, scope: !3432)
!3440 = !DILocation(line: 164, column: 16, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !116, line: 164, column: 2)
!3442 = distinct !DILexicalBlock(scope: !3432, file: !116, line: 164, column: 2)
!3443 = !DILocation(line: 164, column: 2, scope: !3442)
!3444 = !DILocation(line: 165, column: 3, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3441, file: !116, line: 164, column: 26)
!3446 = !DILocation(line: 165, column: 13, scope: !3445)
!3447 = !DILocation(line: 164, column: 22, scope: !3441)
!3448 = distinct !{!3448, !3443, !3449}
!3449 = !DILocation(line: 166, column: 2, scope: !3442)
!3450 = !DILocation(line: 171, column: 1, scope: !3432)
!3451 = distinct !DISubprogram(name: "printk", scope: !116, file: !116, line: 203, type: !3452, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3454)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{null, !155, null}
!3454 = !{!3455, !3456}
!3455 = !DILocalVariable(name: "fmt", arg: 1, scope: !3451, file: !116, line: 203, type: !155)
!3456 = !DILocalVariable(name: "ap", scope: !3451, file: !116, line: 205, type: !3385)
!3457 = !DILocation(line: 0, scope: !3451)
!3458 = !DILocation(line: 205, column: 2, scope: !3451)
!3459 = !DILocation(line: 205, column: 10, scope: !3451)
!3460 = !DILocation(line: 207, column: 2, scope: !3451)
!3461 = !DILocation(line: 209, column: 2, scope: !3451)
!3462 = !DILocation(line: 211, column: 2, scope: !3451)
!3463 = !DILocation(line: 212, column: 1, scope: !3451)
!3464 = distinct !DISubprogram(name: "snprintk", scope: !116, file: !116, line: 239, type: !3465, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3467)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{!103, !1063, !356, !155, null}
!3467 = !{!3468, !3469, !3470, !3471, !3472}
!3468 = !DILocalVariable(name: "str", arg: 1, scope: !3464, file: !116, line: 239, type: !1063)
!3469 = !DILocalVariable(name: "size", arg: 2, scope: !3464, file: !116, line: 239, type: !356)
!3470 = !DILocalVariable(name: "fmt", arg: 3, scope: !3464, file: !116, line: 239, type: !155)
!3471 = !DILocalVariable(name: "ap", scope: !3464, file: !116, line: 241, type: !3385)
!3472 = !DILocalVariable(name: "ret", scope: !3464, file: !116, line: 242, type: !103)
!3473 = !DILocation(line: 0, scope: !3464)
!3474 = !DILocation(line: 241, column: 2, scope: !3464)
!3475 = !DILocation(line: 241, column: 10, scope: !3464)
!3476 = !DILocation(line: 244, column: 2, scope: !3464)
!3477 = !DILocation(line: 245, column: 8, scope: !3464)
!3478 = !DILocation(line: 246, column: 2, scope: !3464)
!3479 = !DILocation(line: 249, column: 1, scope: !3464)
!3480 = !DILocation(line: 248, column: 2, scope: !3464)
!3481 = distinct !DISubprogram(name: "vsnprintk", scope: !116, file: !116, line: 251, type: !3482, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3484)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{!103, !1063, !356, !155, !3385}
!3484 = !{!3485, !3486, !3487, !3488, !3489}
!3485 = !DILocalVariable(name: "str", arg: 1, scope: !3481, file: !116, line: 251, type: !1063)
!3486 = !DILocalVariable(name: "size", arg: 2, scope: !3481, file: !116, line: 251, type: !356)
!3487 = !DILocalVariable(name: "fmt", arg: 3, scope: !3481, file: !116, line: 251, type: !155)
!3488 = !DILocalVariable(name: "ap", arg: 4, scope: !3481, file: !116, line: 251, type: !3385)
!3489 = !DILocalVariable(name: "ctx", scope: !3481, file: !116, line: 253, type: !3490)
!3490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !116, line: 217, size: 96, elements: !3491)
!3491 = !{!3492, !3493, !3494}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3490, file: !116, line: 218, baseType: !1063, size: 32)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3490, file: !116, line: 219, baseType: !103, size: 32, offset: 32)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3490, file: !116, line: 220, baseType: !103, size: 32, offset: 64)
!3495 = !DILocation(line: 0, scope: !3481)
!3496 = !DILocation(line: 253, column: 2, scope: !3481)
!3497 = !DILocation(line: 253, column: 21, scope: !3481)
!3498 = !DILocation(line: 253, column: 27, scope: !3481)
!3499 = !DILocation(line: 255, column: 2, scope: !3481)
!3500 = !DILocation(line: 257, column: 10, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3481, file: !116, line: 257, column: 6)
!3502 = !DILocation(line: 257, column: 22, scope: !3501)
!3503 = !DILocation(line: 257, column: 16, scope: !3501)
!3504 = !DILocation(line: 257, column: 6, scope: !3481)
!3505 = !DILocation(line: 258, column: 3, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3501, file: !116, line: 257, column: 27)
!3507 = !DILocation(line: 258, column: 18, scope: !3506)
!3508 = !DILocation(line: 259, column: 2, scope: !3506)
!3509 = !DILocation(line: 262, column: 1, scope: !3481)
!3510 = !DILocation(line: 261, column: 2, scope: !3481)
!3511 = distinct !DISubprogram(name: "str_out", scope: !116, file: !116, line: 223, type: !3512, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !113, retainedNodes: !3515)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{!103, !103, !3514}
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 32)
!3515 = !{!3516, !3517}
!3516 = !DILocalVariable(name: "c", arg: 1, scope: !3511, file: !116, line: 223, type: !103)
!3517 = !DILocalVariable(name: "ctx", arg: 2, scope: !3511, file: !116, line: 223, type: !3514)
!3518 = !DILocation(line: 0, scope: !3511)
!3519 = !DILocation(line: 225, column: 11, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3511, file: !116, line: 225, column: 6)
!3521 = !DILocation(line: 225, column: 15, scope: !3520)
!3522 = !DILocation(line: 0, scope: !3520)
!3523 = !DILocation(line: 225, column: 23, scope: !3520)
!3524 = !DILocation(line: 225, column: 45, scope: !3520)
!3525 = !DILocation(line: 225, column: 37, scope: !3520)
!3526 = !DILocation(line: 225, column: 6, scope: !3511)
!3527 = !DILocation(line: 226, column: 8, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3520, file: !116, line: 225, column: 50)
!3529 = !DILocation(line: 226, column: 13, scope: !3528)
!3530 = !DILocation(line: 227, column: 3, scope: !3528)
!3531 = !DILocation(line: 230, column: 29, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3511, file: !116, line: 230, column: 6)
!3533 = !DILocation(line: 230, column: 17, scope: !3532)
!3534 = !DILocation(line: 230, column: 6, scope: !3511)
!3535 = !DILocation(line: 231, column: 22, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3532, file: !116, line: 230, column: 34)
!3537 = !DILocation(line: 231, column: 3, scope: !3536)
!3538 = !DILocation(line: 231, column: 26, scope: !3536)
!3539 = !DILocation(line: 232, column: 2, scope: !3536)
!3540 = !DILocation(line: 233, column: 28, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3532, file: !116, line: 232, column: 9)
!3542 = !DILocation(line: 233, column: 22, scope: !3541)
!3543 = !DILocation(line: 233, column: 3, scope: !3541)
!3544 = !DILocation(line: 233, column: 26, scope: !3541)
!3545 = !DILocation(line: 237, column: 1, scope: !3511)
!3546 = distinct !DISubprogram(name: "z_thread_entry", scope: !3547, file: !3547, line: 30, type: !3548, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !3555)
!3547 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3548 = !DISubroutineType(types: !3549)
!3549 = !{null, !3550, !102, !102, !102}
!3550 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3551, line: 46, baseType: !3552)
!3551 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 32)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{null, !102, !102, !102}
!3555 = !{!3556, !3557, !3558, !3559}
!3556 = !DILocalVariable(name: "entry", arg: 1, scope: !3546, file: !3547, line: 30, type: !3550)
!3557 = !DILocalVariable(name: "p1", arg: 2, scope: !3546, file: !3547, line: 31, type: !102)
!3558 = !DILocalVariable(name: "p2", arg: 3, scope: !3546, file: !3547, line: 31, type: !102)
!3559 = !DILocalVariable(name: "p3", arg: 4, scope: !3546, file: !3547, line: 31, type: !102)
!3560 = !DILocation(line: 0, scope: !3546)
!3561 = !DILocation(line: 36, column: 2, scope: !3546)
!3562 = !DILocation(line: 38, column: 17, scope: !3546)
!3563 = !DILocation(line: 38, column: 2, scope: !3546)
!3564 = !DILocation(line: 45, column: 2, scope: !3546)
!3565 = distinct !DISubprogram(name: "k_current_get", scope: !312, file: !312, line: 530, type: !3566, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !473)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{!3568}
!3568 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !3569)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 32)
!3570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !3571)
!3571 = !{!3572, !3630, !3642, !3643, !3644, !3645, !3651, !3664}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3570, file: !367, line: 247, baseType: !3573, size: 384)
!3573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !3574)
!3574 = !{!3575, !3599, !3606, !3607, !3608, !3617, !3618, !3619}
!3575 = !DIDerivedType(tag: DW_TAG_member, scope: !3573, file: !367, line: 60, baseType: !3576, size: 64)
!3576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3573, file: !367, line: 60, size: 64, elements: !3577)
!3577 = !{!3578, !3593}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3576, file: !367, line: 61, baseType: !3579, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !3580)
!3580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !3581)
!3581 = !{!3582, !3588}
!3582 = !DIDerivedType(tag: DW_TAG_member, scope: !3580, file: !321, line: 38, baseType: !3583, size: 32)
!3583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3580, file: !321, line: 38, size: 32, elements: !3584)
!3584 = !{!3585, !3587}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3583, file: !321, line: 39, baseType: !3586, size: 32)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 32)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3583, file: !321, line: 40, baseType: !3586, size: 32)
!3588 = !DIDerivedType(tag: DW_TAG_member, scope: !3580, file: !321, line: 42, baseType: !3589, size: 32, offset: 32)
!3589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3580, file: !321, line: 42, size: 32, elements: !3590)
!3590 = !{!3591, !3592}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3589, file: !321, line: 43, baseType: !3586, size: 32)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3589, file: !321, line: 44, baseType: !3586, size: 32)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3576, file: !367, line: 62, baseType: !3594, size: 64)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !3595)
!3595 = !{!3596}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3594, file: !392, line: 50, baseType: !3597, size: 64)
!3597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3598, size: 64, elements: !397)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 32)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3573, file: !367, line: 68, baseType: !3600, size: 32, offset: 64)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 32)
!3601 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !3602)
!3602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !3603)
!3603 = !{!3604}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3602, file: !316, line: 232, baseType: !3605, size: 64)
!3605 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !3580)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3573, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3573, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!3608 = !DIDerivedType(tag: DW_TAG_member, scope: !3573, file: !367, line: 90, baseType: !3609, size: 16, offset: 112)
!3609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3573, file: !367, line: 90, size: 16, elements: !3610)
!3610 = !{!3611, !3616}
!3611 = !DIDerivedType(tag: DW_TAG_member, scope: !3609, file: !367, line: 91, baseType: !3612, size: 16)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3609, file: !367, line: 91, size: 16, elements: !3613)
!3613 = !{!3614, !3615}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3612, file: !367, line: 96, baseType: !415, size: 8)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3612, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3609, file: !367, line: 100, baseType: !340, size: 16)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3573, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3573, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3573, file: !367, line: 131, baseType: !3620, size: 192, offset: 192)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !3621)
!3621 = !{!3622, !3623, !3629}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3620, file: !316, line: 245, baseType: !3579, size: 64)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3620, file: !316, line: 246, baseType: !3624, size: 32, offset: 64)
!3624 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !3625)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 32)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{null, !3628}
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 32)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3620, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3570, file: !367, line: 250, baseType: !3631, size: 288, offset: 384)
!3631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !3632)
!3632 = !{!3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3631, file: !436, line: 26, baseType: !132, size: 32)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3631, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3631, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3631, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3631, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3631, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3631, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3631, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3631, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3570, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3570, file: !367, line: 256, baseType: !3601, size: 64, offset: 704)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3570, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3570, file: !367, line: 300, baseType: !3646, size: 96, offset: 800)
!3646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !3647)
!3647 = !{!3648, !3649, !3650}
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3646, file: !367, line: 153, baseType: !22, size: 32)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3646, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3646, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3570, file: !367, line: 325, baseType: !3652, size: 32, offset: 896)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 32)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !3654)
!3654 = !{!3655, !3661, !3662}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3653, file: !312, line: 5074, baseType: !3656, size: 96)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !3657)
!3657 = !{!3658, !3659, !3660}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3656, file: !462, line: 57, baseType: !465, size: 32)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3656, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3656, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3653, file: !312, line: 5075, baseType: !3601, size: 64, offset: 96)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3653, file: !312, line: 5076, baseType: !3663, offset: 160)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3570, file: !367, line: 343, baseType: !3665, size: 64, offset: 928)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !3666)
!3666 = !{!3667, !3668}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3665, file: !436, line: 63, baseType: !132, size: 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3665, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!3669 = !DILocation(line: 535, column: 9, scope: !3565)
!3670 = !DILocation(line: 535, column: 2, scope: !3565)
!3671 = distinct !DISubprogram(name: "k_thread_abort", scope: !3672, file: !3672, line: 188, type: !3673, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !3675)
!3672 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!3673 = !DISubroutineType(types: !3674)
!3674 = !{null, !3568}
!3675 = !{!3676}
!3676 = !DILocalVariable(name: "thread", arg: 1, scope: !3671, file: !3672, line: 188, type: !3568)
!3677 = !DILocation(line: 0, scope: !3671)
!3678 = !DILocation(line: 197, column: 2, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3671, file: !3672, line: 197, column: 2)
!3680 = !{i64 2154061316}
!3681 = !DILocation(line: 198, column: 2, scope: !3671)
!3682 = !DILocation(line: 199, column: 1, scope: !3671)
!3683 = distinct !DISubprogram(name: "z_current_get", scope: !3672, file: !3672, line: 173, type: !3566, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !473)
!3684 = !DILocation(line: 180, column: 2, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3683, file: !3672, line: 180, column: 2)
!3686 = !{i64 2154061248}
!3687 = !DILocation(line: 181, column: 9, scope: !3683)
!3688 = !DILocation(line: 181, column: 2, scope: !3683)
!3689 = distinct !DISubprogram(name: "sys_heap_free", scope: !3690, file: !3690, line: 163, type: !3691, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3699)
!3690 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3691 = !DISubroutineType(types: !3692)
!3692 = !{null, !3693, !102}
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 32)
!3694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !3695)
!3695 = !{!3696, !3697, !3698}
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3694, file: !462, line: 57, baseType: !2556, size: 32)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3694, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3694, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!3699 = !{!3700, !3701, !3702, !3703}
!3700 = !DILocalVariable(name: "heap", arg: 1, scope: !3689, file: !3690, line: 163, type: !3693)
!3701 = !DILocalVariable(name: "mem", arg: 2, scope: !3689, file: !3690, line: 163, type: !102)
!3702 = !DILocalVariable(name: "h", scope: !3689, file: !3690, line: 168, type: !2556)
!3703 = !DILocalVariable(name: "c", scope: !3689, file: !3690, line: 169, type: !2561)
!3704 = !DILocation(line: 0, scope: !3689)
!3705 = !DILocation(line: 165, column: 10, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3689, file: !3690, line: 165, column: 6)
!3707 = !DILocation(line: 165, column: 6, scope: !3689)
!3708 = !DILocation(line: 168, column: 27, scope: !3689)
!3709 = !DILocation(line: 169, column: 16, scope: !3689)
!3710 = !{i32 0, i32 536870912}
!3711 = !DILocation(line: 187, column: 2, scope: !3689)
!3712 = !DILocation(line: 197, column: 2, scope: !3689)
!3713 = !DILocation(line: 198, column: 1, scope: !3689)
!3714 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3690, file: !3690, line: 157, type: !3715, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3717)
!3715 = !DISubroutineType(types: !3716)
!3716 = !{!2561, !2556, !102}
!3717 = !{!3718, !3719, !3720, !3721}
!3718 = !DILocalVariable(name: "h", arg: 1, scope: !3714, file: !3690, line: 157, type: !2556)
!3719 = !DILocalVariable(name: "p", arg: 2, scope: !3714, file: !3690, line: 157, type: !102)
!3720 = !DILocalVariable(name: "mem", scope: !3714, file: !3690, line: 159, type: !270)
!3721 = !DILocalVariable(name: "base", scope: !3714, file: !3690, line: 159, type: !270)
!3722 = !DILocation(line: 0, scope: !3714)
!3723 = !DILocation(line: 159, column: 39, scope: !3714)
!3724 = !DILocation(line: 160, column: 14, scope: !3714)
!3725 = !DILocation(line: 160, column: 38, scope: !3714)
!3726 = !DILocation(line: 160, column: 46, scope: !3714)
!3727 = !DILocation(line: 160, column: 2, scope: !3714)
!3728 = distinct !DISubprogram(name: "set_chunk_used", scope: !2543, file: !2543, line: 147, type: !3729, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3731)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{null, !2556, !2561, !166}
!3731 = !{!3732, !3733, !3734, !3735, !3736}
!3732 = !DILocalVariable(name: "h", arg: 1, scope: !3728, file: !2543, line: 147, type: !2556)
!3733 = !DILocalVariable(name: "c", arg: 2, scope: !3728, file: !2543, line: 147, type: !2561)
!3734 = !DILocalVariable(name: "used", arg: 3, scope: !3728, file: !2543, line: 147, type: !166)
!3735 = !DILocalVariable(name: "buf", scope: !3728, file: !2543, line: 149, type: !2550)
!3736 = !DILocalVariable(name: "cmem", scope: !3728, file: !2543, line: 150, type: !102)
!3737 = !DILocation(line: 0, scope: !3728)
!3738 = !DILocation(line: 149, column: 22, scope: !3728)
!3739 = !DILocation(line: 0, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3741, file: !2543, line: 159, column: 7)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !2543, line: 158, column: 9)
!3742 = distinct !DILexicalBlock(scope: !3728, file: !2543, line: 152, column: 6)
!3743 = !DILocation(line: 159, column: 7, scope: !3741)
!3744 = !DILocation(line: 165, column: 1, scope: !3728)
!3745 = distinct !DISubprogram(name: "free_chunk", scope: !3690, file: !3690, line: 133, type: !3746, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3748)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{null, !2556, !2561}
!3748 = !{!3749, !3750}
!3749 = !DILocalVariable(name: "h", arg: 1, scope: !3745, file: !3690, line: 133, type: !2556)
!3750 = !DILocalVariable(name: "c", arg: 2, scope: !3745, file: !3690, line: 133, type: !2561)
!3751 = !DILocation(line: 0, scope: !3745)
!3752 = !DILocation(line: 136, column: 21, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3745, file: !3690, line: 136, column: 6)
!3754 = !DILocation(line: 136, column: 7, scope: !3753)
!3755 = !DILocation(line: 136, column: 6, scope: !3745)
!3756 = !DILocation(line: 137, column: 3, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3753, file: !3690, line: 136, column: 41)
!3758 = !DILocation(line: 138, column: 22, scope: !3757)
!3759 = !DILocation(line: 138, column: 3, scope: !3757)
!3760 = !DILocation(line: 139, column: 2, scope: !3757)
!3761 = !DILocation(line: 142, column: 21, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3745, file: !3690, line: 142, column: 6)
!3763 = !{i32 -65535, i32 536903678}
!3764 = !DILocation(line: 142, column: 7, scope: !3762)
!3765 = !DILocation(line: 142, column: 6, scope: !3745)
!3766 = !DILocation(line: 143, column: 3, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3762, file: !3690, line: 142, column: 40)
!3768 = !DILocation(line: 144, column: 19, scope: !3767)
!3769 = !DILocation(line: 144, column: 3, scope: !3767)
!3770 = !DILocation(line: 145, column: 7, scope: !3767)
!3771 = !DILocation(line: 146, column: 2, scope: !3767)
!3772 = !DILocation(line: 148, column: 2, scope: !3745)
!3773 = !DILocation(line: 149, column: 1, scope: !3745)
!3774 = distinct !DISubprogram(name: "right_chunk", scope: !2543, file: !2543, line: 204, type: !3775, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3777)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!2561, !2556, !2561}
!3777 = !{!3778, !3779}
!3778 = !DILocalVariable(name: "h", arg: 1, scope: !3774, file: !2543, line: 204, type: !2556)
!3779 = !DILocalVariable(name: "c", arg: 2, scope: !3774, file: !2543, line: 204, type: !2561)
!3780 = !DILocation(line: 0, scope: !3774)
!3781 = !DILocation(line: 206, column: 13, scope: !3774)
!3782 = !DILocation(line: 206, column: 11, scope: !3774)
!3783 = !DILocation(line: 206, column: 2, scope: !3774)
!3784 = distinct !DISubprogram(name: "chunk_used", scope: !2543, file: !2543, line: 137, type: !3785, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3787)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!166, !2556, !2561}
!3787 = !{!3788, !3789}
!3788 = !DILocalVariable(name: "h", arg: 1, scope: !3784, file: !2543, line: 137, type: !2556)
!3789 = !DILocalVariable(name: "c", arg: 2, scope: !3784, file: !2543, line: 137, type: !2561)
!3790 = !DILocation(line: 0, scope: !3784)
!3791 = !DILocation(line: 139, column: 9, scope: !3784)
!3792 = !DILocation(line: 139, column: 42, scope: !3784)
!3793 = !DILocation(line: 139, column: 2, scope: !3784)
!3794 = distinct !DISubprogram(name: "free_list_remove", scope: !3690, file: !3690, line: 60, type: !3746, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3795)
!3795 = !{!3796, !3797, !3798}
!3796 = !DILocalVariable(name: "h", arg: 1, scope: !3794, file: !3690, line: 60, type: !2556)
!3797 = !DILocalVariable(name: "c", arg: 2, scope: !3794, file: !3690, line: 60, type: !2561)
!3798 = !DILocalVariable(name: "bidx", scope: !3799, file: !3690, line: 63, type: !103)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !3690, line: 62, column: 31)
!3800 = distinct !DILexicalBlock(scope: !3794, file: !3690, line: 62, column: 6)
!3801 = !DILocation(line: 0, scope: !3794)
!3802 = !DILocation(line: 63, column: 28, scope: !3799)
!3803 = !{i32 0, i32 32768}
!3804 = !DILocation(line: 63, column: 14, scope: !3799)
!3805 = !DILocation(line: 0, scope: !3799)
!3806 = !DILocation(line: 64, column: 3, scope: !3799)
!3807 = !DILocation(line: 66, column: 1, scope: !3794)
!3808 = distinct !DISubprogram(name: "merge_chunks", scope: !3690, file: !3690, line: 125, type: !3809, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3811)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null, !2556, !2561, !2561}
!3811 = !{!3812, !3813, !3814, !3815}
!3812 = !DILocalVariable(name: "h", arg: 1, scope: !3808, file: !3690, line: 125, type: !2556)
!3813 = !DILocalVariable(name: "lc", arg: 2, scope: !3808, file: !3690, line: 125, type: !2561)
!3814 = !DILocalVariable(name: "rc", arg: 3, scope: !3808, file: !3690, line: 125, type: !2561)
!3815 = !DILocalVariable(name: "newsz", scope: !3808, file: !3690, line: 127, type: !3816)
!3816 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2543, line: 62, baseType: !132)
!3817 = !DILocation(line: 0, scope: !3808)
!3818 = !DILocation(line: 127, column: 20, scope: !3808)
!3819 = !DILocation(line: 127, column: 40, scope: !3808)
!3820 = !DILocation(line: 127, column: 38, scope: !3808)
!3821 = !DILocation(line: 129, column: 2, scope: !3808)
!3822 = !DILocation(line: 130, column: 25, scope: !3808)
!3823 = !DILocation(line: 130, column: 2, scope: !3808)
!3824 = !DILocation(line: 131, column: 1, scope: !3808)
!3825 = distinct !DISubprogram(name: "left_chunk", scope: !2543, file: !2543, line: 199, type: !3775, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3826)
!3826 = !{!3827, !3828}
!3827 = !DILocalVariable(name: "h", arg: 1, scope: !3825, file: !2543, line: 199, type: !2556)
!3828 = !DILocalVariable(name: "c", arg: 2, scope: !3825, file: !2543, line: 199, type: !2561)
!3829 = !DILocation(line: 0, scope: !3825)
!3830 = !DILocation(line: 201, column: 13, scope: !3825)
!3831 = !DILocation(line: 201, column: 11, scope: !3825)
!3832 = !DILocation(line: 201, column: 2, scope: !3825)
!3833 = distinct !DISubprogram(name: "free_list_add", scope: !3690, file: !3690, line: 98, type: !3746, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3834)
!3834 = !{!3835, !3836, !3837}
!3835 = !DILocalVariable(name: "h", arg: 1, scope: !3833, file: !3690, line: 98, type: !2556)
!3836 = !DILocalVariable(name: "c", arg: 2, scope: !3833, file: !3690, line: 98, type: !2561)
!3837 = !DILocalVariable(name: "bidx", scope: !3838, file: !3690, line: 101, type: !103)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !3690, line: 100, column: 31)
!3839 = distinct !DILexicalBlock(scope: !3833, file: !3690, line: 100, column: 6)
!3840 = !DILocation(line: 0, scope: !3833)
!3841 = !DILocation(line: 101, column: 28, scope: !3838)
!3842 = !DILocation(line: 101, column: 14, scope: !3838)
!3843 = !DILocation(line: 0, scope: !3838)
!3844 = !DILocation(line: 102, column: 3, scope: !3838)
!3845 = !DILocation(line: 104, column: 1, scope: !3833)
!3846 = distinct !DISubprogram(name: "chunk_size", scope: !2543, file: !2543, line: 142, type: !3847, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3849)
!3847 = !DISubroutineType(types: !3848)
!3848 = !{!3816, !2556, !2561}
!3849 = !{!3850, !3851}
!3850 = !DILocalVariable(name: "h", arg: 1, scope: !3846, file: !2543, line: 142, type: !2556)
!3851 = !DILocalVariable(name: "c", arg: 2, scope: !3846, file: !2543, line: 142, type: !2561)
!3852 = !DILocation(line: 0, scope: !3846)
!3853 = !DILocation(line: 144, column: 9, scope: !3846)
!3854 = !DILocation(line: 144, column: 42, scope: !3846)
!3855 = !DILocation(line: 144, column: 2, scope: !3846)
!3856 = distinct !DISubprogram(name: "bucket_idx", scope: !2543, file: !2543, line: 250, type: !3857, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3859)
!3857 = !DISubroutineType(types: !3858)
!3858 = !{!103, !2556, !3816}
!3859 = !{!3860, !3861, !3862}
!3860 = !DILocalVariable(name: "h", arg: 1, scope: !3856, file: !2543, line: 250, type: !2556)
!3861 = !DILocalVariable(name: "sz", arg: 2, scope: !3856, file: !2543, line: 250, type: !3816)
!3862 = !DILocalVariable(name: "usable_sz", scope: !3856, file: !2543, line: 252, type: !32)
!3863 = !DILocation(line: 0, scope: !3856)
!3864 = !DILocation(line: 252, column: 32, scope: !3856)
!3865 = !DILocation(line: 252, column: 30, scope: !3856)
!3866 = !DILocation(line: 252, column: 50, scope: !3856)
!3867 = !DILocation(line: 253, column: 14, scope: !3856)
!3868 = !{i32 0, i32 33}
!3869 = !DILocation(line: 253, column: 12, scope: !3856)
!3870 = !DILocation(line: 253, column: 2, scope: !3856)
!3871 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3690, file: !3690, line: 68, type: !3872, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3874)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{null, !2556, !2561, !103}
!3874 = !{!3875, !3876, !3877, !3878, !3880, !3883}
!3875 = !DILocalVariable(name: "h", arg: 1, scope: !3871, file: !3690, line: 68, type: !2556)
!3876 = !DILocalVariable(name: "c", arg: 2, scope: !3871, file: !3690, line: 68, type: !2561)
!3877 = !DILocalVariable(name: "bidx", arg: 3, scope: !3871, file: !3690, line: 68, type: !103)
!3878 = !DILocalVariable(name: "b", scope: !3871, file: !3690, line: 70, type: !3879)
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 32)
!3880 = !DILocalVariable(name: "second", scope: !3881, file: !3690, line: 84, type: !2561)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !3690, line: 80, column: 9)
!3882 = distinct !DILexicalBlock(scope: !3871, file: !3690, line: 72, column: 6)
!3883 = !DILocalVariable(name: "first", scope: !3881, file: !3690, line: 85, type: !2561)
!3884 = !DILocation(line: 0, scope: !3871)
!3885 = !DILocation(line: 72, column: 9, scope: !3882)
!3886 = !DILocation(line: 72, column: 14, scope: !3882)
!3887 = !DILocation(line: 72, column: 6, scope: !3871)
!3888 = !DILocation(line: 76, column: 23, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3882, file: !3690, line: 72, column: 21)
!3890 = !DILocation(line: 76, column: 6, scope: !3889)
!3891 = !DILocation(line: 76, column: 20, scope: !3889)
!3892 = !DILocation(line: 77, column: 11, scope: !3889)
!3893 = !DILocation(line: 78, column: 3, scope: !3889)
!3894 = !DILocation(line: 79, column: 3, scope: !3889)
!3895 = !DILocation(line: 80, column: 2, scope: !3889)
!3896 = !DILocation(line: 0, scope: !3881)
!3897 = !DILocation(line: 85, column: 21, scope: !3881)
!3898 = !{i32 0, i32 65536}
!3899 = !DILocation(line: 87, column: 3, scope: !3881)
!3900 = !DILocation(line: 88, column: 3, scope: !3881)
!3901 = !DILocation(line: 89, column: 3, scope: !3881)
!3902 = !DILocation(line: 90, column: 3, scope: !3881)
!3903 = !DILocation(line: 96, column: 1, scope: !3871)
!3904 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2543, file: !2543, line: 187, type: !3809, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3905)
!3905 = !{!3906, !3907, !3908}
!3906 = !DILocalVariable(name: "h", arg: 1, scope: !3904, file: !2543, line: 187, type: !2556)
!3907 = !DILocalVariable(name: "c", arg: 2, scope: !3904, file: !2543, line: 187, type: !2561)
!3908 = !DILocalVariable(name: "prev", arg: 3, scope: !3904, file: !2543, line: 188, type: !2561)
!3909 = !DILocation(line: 0, scope: !3904)
!3910 = !DILocation(line: 190, column: 2, scope: !3904)
!3911 = !DILocation(line: 191, column: 1, scope: !3904)
!3912 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2543, file: !2543, line: 193, type: !3809, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3913)
!3913 = !{!3914, !3915, !3916}
!3914 = !DILocalVariable(name: "h", arg: 1, scope: !3912, file: !2543, line: 193, type: !2556)
!3915 = !DILocalVariable(name: "c", arg: 2, scope: !3912, file: !2543, line: 193, type: !2561)
!3916 = !DILocalVariable(name: "next", arg: 3, scope: !3912, file: !2543, line: 194, type: !2561)
!3917 = !DILocation(line: 0, scope: !3912)
!3918 = !DILocation(line: 196, column: 2, scope: !3912)
!3919 = !DILocation(line: 197, column: 1, scope: !3912)
!3920 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2543, file: !2543, line: 177, type: !3775, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3921)
!3921 = !{!3922, !3923}
!3922 = !DILocalVariable(name: "h", arg: 1, scope: !3920, file: !2543, line: 177, type: !2556)
!3923 = !DILocalVariable(name: "c", arg: 2, scope: !3920, file: !2543, line: 177, type: !2561)
!3924 = !DILocation(line: 0, scope: !3920)
!3925 = !DILocation(line: 179, column: 9, scope: !3920)
!3926 = !DILocation(line: 179, column: 2, scope: !3920)
!3927 = distinct !DISubprogram(name: "chunk_field", scope: !2543, file: !2543, line: 107, type: !3928, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3930)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{!2561, !2556, !2561, !2542}
!3930 = !{!3931, !3932, !3933, !3934, !3935}
!3931 = !DILocalVariable(name: "h", arg: 1, scope: !3927, file: !2543, line: 107, type: !2556)
!3932 = !DILocalVariable(name: "c", arg: 2, scope: !3927, file: !2543, line: 107, type: !2561)
!3933 = !DILocalVariable(name: "f", arg: 3, scope: !3927, file: !2543, line: 108, type: !2542)
!3934 = !DILocalVariable(name: "buf", scope: !3927, file: !2543, line: 110, type: !2550)
!3935 = !DILocalVariable(name: "cmem", scope: !3927, file: !2543, line: 111, type: !102)
!3936 = !DILocation(line: 0, scope: !3927)
!3937 = !DILocation(line: 110, column: 22, scope: !3927)
!3938 = !DILocation(line: 111, column: 15, scope: !3927)
!3939 = !DILocation(line: 116, column: 11, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !2543, line: 115, column: 9)
!3941 = distinct !DILexicalBlock(scope: !3927, file: !2543, line: 113, column: 6)
!3942 = !DILocation(line: 116, column: 10, scope: !3940)
!3943 = !DILocation(line: 118, column: 1, scope: !3927)
!3944 = distinct !DISubprogram(name: "chunk_buf", scope: !2543, file: !2543, line: 101, type: !3945, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3947)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{!2550, !2556}
!3947 = !{!3948}
!3948 = !DILocalVariable(name: "h", arg: 1, scope: !3944, file: !2543, line: 101, type: !2556)
!3949 = !DILocation(line: 0, scope: !3944)
!3950 = !DILocation(line: 104, column: 9, scope: !3944)
!3951 = !DILocation(line: 104, column: 2, scope: !3944)
!3952 = distinct !DISubprogram(name: "chunk_set", scope: !2543, file: !2543, line: 120, type: !3953, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3955)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{null, !2556, !2561, !2542, !2561}
!3955 = !{!3956, !3957, !3958, !3959, !3960, !3961}
!3956 = !DILocalVariable(name: "h", arg: 1, scope: !3952, file: !2543, line: 120, type: !2556)
!3957 = !DILocalVariable(name: "c", arg: 2, scope: !3952, file: !2543, line: 120, type: !2561)
!3958 = !DILocalVariable(name: "f", arg: 3, scope: !3952, file: !2543, line: 121, type: !2542)
!3959 = !DILocalVariable(name: "val", arg: 4, scope: !3952, file: !2543, line: 121, type: !2561)
!3960 = !DILocalVariable(name: "buf", scope: !3952, file: !2543, line: 125, type: !2550)
!3961 = !DILocalVariable(name: "cmem", scope: !3952, file: !2543, line: 126, type: !102)
!3962 = !DILocation(line: 0, scope: !3952)
!3963 = !DILocation(line: 125, column: 22, scope: !3952)
!3964 = !DILocation(line: 126, column: 15, scope: !3952)
!3965 = !DILocation(line: 133, column: 27, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !2543, line: 131, column: 9)
!3967 = distinct !DILexicalBlock(scope: !3952, file: !2543, line: 128, column: 6)
!3968 = !DILocation(line: 133, column: 4, scope: !3966)
!3969 = !DILocation(line: 133, column: 3, scope: !3966)
!3970 = !DILocation(line: 133, column: 25, scope: !3966)
!3971 = !DILocation(line: 135, column: 1, scope: !3952)
!3972 = distinct !DISubprogram(name: "min_chunk_size", scope: !2543, file: !2543, line: 240, type: !3973, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3975)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!3816, !2556}
!3975 = !{!3976}
!3976 = !DILocalVariable(name: "h", arg: 1, scope: !3972, file: !2543, line: 240, type: !2556)
!3977 = !DILocation(line: 0, scope: !3972)
!3978 = !DILocation(line: 242, column: 9, scope: !3972)
!3979 = !DILocation(line: 242, column: 2, scope: !3972)
!3980 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2543, file: !2543, line: 235, type: !3981, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3983)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{!3816, !2556, !356}
!3983 = !{!3984, !3985}
!3984 = !DILocalVariable(name: "h", arg: 1, scope: !3980, file: !2543, line: 235, type: !2556)
!3985 = !DILocalVariable(name: "bytes", arg: 2, scope: !3980, file: !2543, line: 235, type: !356)
!3986 = !DILocation(line: 0, scope: !3980)
!3987 = !DILocation(line: 237, column: 39, scope: !3980)
!3988 = !DILocation(line: 237, column: 9, scope: !3980)
!3989 = !DILocation(line: 237, column: 2, scope: !3980)
!3990 = distinct !DISubprogram(name: "chunksz", scope: !2543, file: !2543, line: 230, type: !3991, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !3993)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!3816, !356}
!3993 = !{!3994}
!3994 = !DILocalVariable(name: "bytes", arg: 1, scope: !3990, file: !2543, line: 230, type: !356)
!3995 = !DILocation(line: 0, scope: !3990)
!3996 = !DILocation(line: 232, column: 29, scope: !3990)
!3997 = !DILocation(line: 232, column: 35, scope: !3990)
!3998 = !DILocation(line: 232, column: 2, scope: !3990)
!3999 = distinct !DISubprogram(name: "set_chunk_size", scope: !2543, file: !2543, line: 172, type: !4000, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4002)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{null, !2556, !2561, !3816}
!4002 = !{!4003, !4004, !4005}
!4003 = !DILocalVariable(name: "h", arg: 1, scope: !3999, file: !2543, line: 172, type: !2556)
!4004 = !DILocalVariable(name: "c", arg: 2, scope: !3999, file: !2543, line: 172, type: !2561)
!4005 = !DILocalVariable(name: "size", arg: 3, scope: !3999, file: !2543, line: 172, type: !3816)
!4006 = !DILocation(line: 0, scope: !3999)
!4007 = !DILocation(line: 174, column: 38, scope: !3999)
!4008 = !DILocation(line: 174, column: 2, scope: !3999)
!4009 = !DILocation(line: 175, column: 1, scope: !3999)
!4010 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2543, file: !2543, line: 209, type: !4000, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4011)
!4011 = !{!4012, !4013, !4014}
!4012 = !DILocalVariable(name: "h", arg: 1, scope: !4010, file: !2543, line: 209, type: !2556)
!4013 = !DILocalVariable(name: "c", arg: 2, scope: !4010, file: !2543, line: 209, type: !2561)
!4014 = !DILocalVariable(name: "size", arg: 3, scope: !4010, file: !2543, line: 210, type: !3816)
!4015 = !DILocation(line: 0, scope: !4010)
!4016 = !DILocation(line: 212, column: 2, scope: !4010)
!4017 = !DILocation(line: 213, column: 1, scope: !4010)
!4018 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3690, file: !3690, line: 34, type: !3872, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4019)
!4019 = !{!4020, !4021, !4022, !4023, !4024, !4027}
!4020 = !DILocalVariable(name: "h", arg: 1, scope: !4018, file: !3690, line: 34, type: !2556)
!4021 = !DILocalVariable(name: "c", arg: 2, scope: !4018, file: !3690, line: 34, type: !2561)
!4022 = !DILocalVariable(name: "bidx", arg: 3, scope: !4018, file: !3690, line: 34, type: !103)
!4023 = !DILocalVariable(name: "b", scope: !4018, file: !3690, line: 36, type: !3879)
!4024 = !DILocalVariable(name: "first", scope: !4025, file: !3690, line: 47, type: !2561)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !3690, line: 46, column: 9)
!4026 = distinct !DILexicalBlock(scope: !4018, file: !3690, line: 42, column: 6)
!4027 = !DILocalVariable(name: "second", scope: !4025, file: !3690, line: 48, type: !2561)
!4028 = !DILocation(line: 0, scope: !4018)
!4029 = !DILocation(line: 36, column: 29, scope: !4018)
!4030 = !DILocation(line: 42, column: 6, scope: !4026)
!4031 = !DILocation(line: 42, column: 28, scope: !4026)
!4032 = !DILocation(line: 42, column: 6, scope: !4018)
!4033 = !DILocation(line: 44, column: 24, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4026, file: !3690, line: 42, column: 34)
!4035 = !DILocation(line: 44, column: 23, scope: !4034)
!4036 = !DILocation(line: 44, column: 6, scope: !4034)
!4037 = !DILocation(line: 44, column: 20, scope: !4034)
!4038 = !DILocation(line: 45, column: 6, scope: !4034)
!4039 = !DILocation(line: 45, column: 11, scope: !4034)
!4040 = !DILocation(line: 46, column: 2, scope: !4034)
!4041 = !DILocation(line: 47, column: 21, scope: !4025)
!4042 = !DILocation(line: 0, scope: !4025)
!4043 = !DILocation(line: 50, column: 6, scope: !4025)
!4044 = !DILocation(line: 50, column: 11, scope: !4025)
!4045 = !DILocation(line: 51, column: 3, scope: !4025)
!4046 = !DILocation(line: 52, column: 3, scope: !4025)
!4047 = !DILocation(line: 58, column: 1, scope: !4018)
!4048 = distinct !DISubprogram(name: "next_free_chunk", scope: !2543, file: !2543, line: 182, type: !3775, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4049)
!4049 = !{!4050, !4051}
!4050 = !DILocalVariable(name: "h", arg: 1, scope: !4048, file: !2543, line: 182, type: !2556)
!4051 = !DILocalVariable(name: "c", arg: 2, scope: !4048, file: !2543, line: 182, type: !2561)
!4052 = !DILocation(line: 0, scope: !4048)
!4053 = !DILocation(line: 184, column: 9, scope: !4048)
!4054 = !DILocation(line: 184, column: 2, scope: !4048)
!4055 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3690, file: !3690, line: 200, type: !4056, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4058)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!356, !3693, !102}
!4058 = !{!4059, !4060, !4061, !4062, !4063, !4064, !4065}
!4059 = !DILocalVariable(name: "heap", arg: 1, scope: !4055, file: !3690, line: 200, type: !3693)
!4060 = !DILocalVariable(name: "mem", arg: 2, scope: !4055, file: !3690, line: 200, type: !102)
!4061 = !DILocalVariable(name: "h", scope: !4055, file: !3690, line: 202, type: !2556)
!4062 = !DILocalVariable(name: "c", scope: !4055, file: !3690, line: 203, type: !2561)
!4063 = !DILocalVariable(name: "addr", scope: !4055, file: !3690, line: 204, type: !356)
!4064 = !DILocalVariable(name: "chunk_base", scope: !4055, file: !3690, line: 205, type: !356)
!4065 = !DILocalVariable(name: "chunk_sz", scope: !4055, file: !3690, line: 206, type: !356)
!4066 = !DILocation(line: 0, scope: !4055)
!4067 = !DILocation(line: 202, column: 27, scope: !4055)
!4068 = !DILocation(line: 203, column: 16, scope: !4055)
!4069 = !DILocation(line: 204, column: 16, scope: !4055)
!4070 = !DILocation(line: 205, column: 31, scope: !4055)
!4071 = !DILocation(line: 205, column: 22, scope: !4055)
!4072 = !DILocation(line: 206, column: 20, scope: !4055)
!4073 = !DILocation(line: 206, column: 37, scope: !4055)
!4074 = !DILocation(line: 208, column: 26, scope: !4055)
!4075 = !DILocation(line: 208, column: 18, scope: !4055)
!4076 = !DILocation(line: 208, column: 2, scope: !4055)
!4077 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3690, file: !3690, line: 263, type: !4078, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4080)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{!102, !3693, !356}
!4080 = !{!4081, !4082, !4083, !4084, !4085, !4086}
!4081 = !DILocalVariable(name: "heap", arg: 1, scope: !4077, file: !3690, line: 263, type: !3693)
!4082 = !DILocalVariable(name: "bytes", arg: 2, scope: !4077, file: !3690, line: 263, type: !356)
!4083 = !DILocalVariable(name: "h", scope: !4077, file: !3690, line: 265, type: !2556)
!4084 = !DILocalVariable(name: "mem", scope: !4077, file: !3690, line: 266, type: !102)
!4085 = !DILocalVariable(name: "chunk_sz", scope: !4077, file: !3690, line: 272, type: !3816)
!4086 = !DILocalVariable(name: "c", scope: !4077, file: !3690, line: 273, type: !2561)
!4087 = !DILocation(line: 0, scope: !4077)
!4088 = !DILocation(line: 265, column: 27, scope: !4077)
!4089 = !DILocation(line: 268, column: 12, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4077, file: !3690, line: 268, column: 6)
!4091 = !DILocation(line: 268, column: 18, scope: !4090)
!4092 = !DILocation(line: 268, column: 21, scope: !4090)
!4093 = !DILocation(line: 268, column: 6, scope: !4077)
!4094 = !DILocation(line: 272, column: 23, scope: !4077)
!4095 = !DILocation(line: 273, column: 16, scope: !4077)
!4096 = !DILocation(line: 274, column: 8, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4077, file: !3690, line: 274, column: 6)
!4098 = !DILocation(line: 274, column: 6, scope: !4077)
!4099 = !DILocation(line: 279, column: 6, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4077, file: !3690, line: 279, column: 6)
!4101 = !DILocation(line: 279, column: 23, scope: !4100)
!4102 = !DILocation(line: 279, column: 6, scope: !4077)
!4103 = !DILocation(line: 280, column: 24, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4100, file: !3690, line: 279, column: 35)
!4105 = !DILocation(line: 280, column: 3, scope: !4104)
!4106 = !DILocation(line: 281, column: 3, scope: !4104)
!4107 = !DILocation(line: 282, column: 2, scope: !4104)
!4108 = !DILocation(line: 284, column: 2, scope: !4077)
!4109 = !DILocation(line: 286, column: 8, scope: !4077)
!4110 = !DILocation(line: 298, column: 2, scope: !4077)
!4111 = !DILocation(line: 299, column: 1, scope: !4077)
!4112 = distinct !DISubprogram(name: "size_too_big", scope: !2543, file: !2543, line: 256, type: !4113, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4115)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{!166, !2556, !356}
!4115 = !{!4116, !4117}
!4116 = !DILocalVariable(name: "h", arg: 1, scope: !4112, file: !2543, line: 256, type: !2556)
!4117 = !DILocalVariable(name: "bytes", arg: 2, scope: !4112, file: !2543, line: 256, type: !356)
!4118 = !DILocation(line: 0, scope: !4112)
!4119 = !DILocation(line: 262, column: 16, scope: !4112)
!4120 = !DILocation(line: 262, column: 36, scope: !4112)
!4121 = !DILocation(line: 262, column: 30, scope: !4112)
!4122 = !DILocation(line: 262, column: 2, scope: !4112)
!4123 = distinct !DISubprogram(name: "alloc_chunk", scope: !3690, file: !3690, line: 211, type: !4124, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4126)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!2561, !2556, !3816}
!4126 = !{!4127, !4128, !4129, !4130, !4131, !4134, !4135, !4137, !4138, !4141}
!4127 = !DILocalVariable(name: "h", arg: 1, scope: !4123, file: !3690, line: 211, type: !2556)
!4128 = !DILocalVariable(name: "sz", arg: 2, scope: !4123, file: !3690, line: 211, type: !3816)
!4129 = !DILocalVariable(name: "bi", scope: !4123, file: !3690, line: 213, type: !103)
!4130 = !DILocalVariable(name: "b", scope: !4123, file: !3690, line: 214, type: !3879)
!4131 = !DILocalVariable(name: "first", scope: !4132, file: !3690, line: 233, type: !2561)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !3690, line: 232, column: 15)
!4133 = distinct !DILexicalBlock(scope: !4123, file: !3690, line: 232, column: 6)
!4134 = !DILocalVariable(name: "i", scope: !4132, file: !3690, line: 234, type: !103)
!4135 = !DILocalVariable(name: "c", scope: !4136, file: !3690, line: 236, type: !2561)
!4136 = distinct !DILexicalBlock(scope: !4132, file: !3690, line: 235, column: 6)
!4137 = !DILocalVariable(name: "bmask", scope: !4123, file: !3690, line: 249, type: !132)
!4138 = !DILocalVariable(name: "minbucket", scope: !4139, file: !3690, line: 252, type: !103)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !3690, line: 251, column: 19)
!4140 = distinct !DILexicalBlock(scope: !4123, file: !3690, line: 251, column: 6)
!4141 = !DILocalVariable(name: "c", scope: !4139, file: !3690, line: 253, type: !2561)
!4142 = !DILocation(line: 0, scope: !4123)
!4143 = !DILocation(line: 213, column: 11, scope: !4123)
!4144 = !DILocation(line: 232, column: 9, scope: !4133)
!4145 = !DILocation(line: 232, column: 6, scope: !4133)
!4146 = !DILocation(line: 232, column: 6, scope: !4123)
!4147 = !DILocation(line: 236, column: 21, scope: !4136)
!4148 = !DILocation(line: 0, scope: !4132)
!4149 = !DILocation(line: 0, scope: !4136)
!4150 = !DILocation(line: 237, column: 8, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4136, file: !3690, line: 237, column: 8)
!4152 = !DILocation(line: 237, column: 25, scope: !4151)
!4153 = !DILocation(line: 237, column: 8, scope: !4136)
!4154 = !DILocation(line: 238, column: 5, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4151, file: !3690, line: 237, column: 32)
!4156 = !DILocation(line: 241, column: 14, scope: !4136)
!4157 = !DILocation(line: 241, column: 12, scope: !4136)
!4158 = !DILocation(line: 243, column: 12, scope: !4132)
!4159 = !DILocation(line: 243, column: 16, scope: !4132)
!4160 = distinct !{!4160, !4161, !4162}
!4161 = !DILocation(line: 235, column: 3, scope: !4132)
!4162 = !DILocation(line: 243, column: 35, scope: !4132)
!4163 = !DILocation(line: 249, column: 22, scope: !4123)
!4164 = !DILocation(line: 249, column: 39, scope: !4123)
!4165 = !DILocation(line: 249, column: 36, scope: !4123)
!4166 = !DILocation(line: 251, column: 12, scope: !4140)
!4167 = !DILocation(line: 251, column: 6, scope: !4123)
!4168 = !DILocation(line: 252, column: 19, scope: !4139)
!4169 = !DILocation(line: 0, scope: !4139)
!4170 = !DILocation(line: 253, column: 39, scope: !4139)
!4171 = !DILocation(line: 255, column: 3, scope: !4139)
!4172 = !DILocation(line: 261, column: 1, scope: !4123)
!4173 = distinct !DISubprogram(name: "split_chunks", scope: !3690, file: !3690, line: 109, type: !3809, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4174)
!4174 = !{!4175, !4176, !4177, !4178, !4179, !4180}
!4175 = !DILocalVariable(name: "h", arg: 1, scope: !4173, file: !3690, line: 109, type: !2556)
!4176 = !DILocalVariable(name: "lc", arg: 2, scope: !4173, file: !3690, line: 109, type: !2561)
!4177 = !DILocalVariable(name: "rc", arg: 3, scope: !4173, file: !3690, line: 109, type: !2561)
!4178 = !DILocalVariable(name: "sz0", scope: !4173, file: !3690, line: 114, type: !3816)
!4179 = !DILocalVariable(name: "lsz", scope: !4173, file: !3690, line: 115, type: !3816)
!4180 = !DILocalVariable(name: "rsz", scope: !4173, file: !3690, line: 116, type: !3816)
!4181 = !DILocation(line: 0, scope: !4173)
!4182 = !DILocation(line: 114, column: 18, scope: !4173)
!4183 = !DILocation(line: 115, column: 21, scope: !4173)
!4184 = !DILocation(line: 116, column: 22, scope: !4173)
!4185 = !DILocation(line: 118, column: 2, scope: !4173)
!4186 = !DILocation(line: 119, column: 2, scope: !4173)
!4187 = !DILocation(line: 120, column: 2, scope: !4173)
!4188 = !DILocation(line: 121, column: 25, scope: !4173)
!4189 = !DILocation(line: 121, column: 2, scope: !4173)
!4190 = !DILocation(line: 122, column: 1, scope: !4173)
!4191 = distinct !DISubprogram(name: "chunk_mem", scope: !3690, file: !3690, line: 24, type: !4192, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4194)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{!102, !2556, !2561}
!4194 = !{!4195, !4196, !4197, !4198}
!4195 = !DILocalVariable(name: "h", arg: 1, scope: !4191, file: !3690, line: 24, type: !2556)
!4196 = !DILocalVariable(name: "c", arg: 2, scope: !4191, file: !3690, line: 24, type: !2561)
!4197 = !DILocalVariable(name: "buf", scope: !4191, file: !3690, line: 26, type: !2550)
!4198 = !DILocalVariable(name: "ret", scope: !4191, file: !3690, line: 27, type: !270)
!4199 = !DILocation(line: 0, scope: !4191)
!4200 = !DILocation(line: 26, column: 22, scope: !4191)
!4201 = !DILocation(line: 27, column: 38, scope: !4191)
!4202 = !DILocation(line: 31, column: 2, scope: !4191)
!4203 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3690, file: !3690, line: 301, type: !4204, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4206)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!102, !3693, !356, !356}
!4206 = !{!4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218}
!4207 = !DILocalVariable(name: "heap", arg: 1, scope: !4203, file: !3690, line: 301, type: !3693)
!4208 = !DILocalVariable(name: "align", arg: 2, scope: !4203, file: !3690, line: 301, type: !356)
!4209 = !DILocalVariable(name: "bytes", arg: 3, scope: !4203, file: !3690, line: 301, type: !356)
!4210 = !DILocalVariable(name: "h", scope: !4203, file: !3690, line: 303, type: !2556)
!4211 = !DILocalVariable(name: "gap", scope: !4203, file: !3690, line: 304, type: !356)
!4212 = !DILocalVariable(name: "rew", scope: !4203, file: !3690, line: 304, type: !356)
!4213 = !DILocalVariable(name: "padded_sz", scope: !4203, file: !3690, line: 335, type: !3816)
!4214 = !DILocalVariable(name: "c0", scope: !4203, file: !3690, line: 336, type: !2561)
!4215 = !DILocalVariable(name: "mem", scope: !4203, file: !3690, line: 341, type: !270)
!4216 = !DILocalVariable(name: "end", scope: !4203, file: !3690, line: 345, type: !2550)
!4217 = !DILocalVariable(name: "c", scope: !4203, file: !3690, line: 348, type: !2561)
!4218 = !DILocalVariable(name: "c_end", scope: !4203, file: !3690, line: 349, type: !2561)
!4219 = !DILocation(line: 0, scope: !4203)
!4220 = !DILocation(line: 303, column: 27, scope: !4203)
!4221 = !DILocation(line: 313, column: 16, scope: !4203)
!4222 = !DILocation(line: 313, column: 14, scope: !4203)
!4223 = !DILocation(line: 314, column: 12, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4203, file: !3690, line: 314, column: 6)
!4225 = !DILocation(line: 314, column: 6, scope: !4203)
!4226 = !DILocation(line: 315, column: 9, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4224, file: !3690, line: 314, column: 20)
!4228 = !DILocation(line: 316, column: 9, scope: !4227)
!4229 = !DILocation(line: 318, column: 13, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !3690, line: 318, column: 7)
!4231 = distinct !DILexicalBlock(scope: !4224, file: !3690, line: 317, column: 9)
!4232 = !DILocation(line: 318, column: 7, scope: !4231)
!4233 = !DILocation(line: 319, column: 11, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4230, file: !3690, line: 318, column: 39)
!4235 = !DILocation(line: 319, column: 4, scope: !4234)
!4236 = !DILocation(line: 0, scope: !4224)
!4237 = !DILocation(line: 326, column: 12, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4203, file: !3690, line: 326, column: 6)
!4239 = !DILocation(line: 326, column: 17, scope: !4238)
!4240 = !DILocation(line: 326, column: 20, scope: !4238)
!4241 = !DILocation(line: 326, column: 6, scope: !4203)
!4242 = !DILocation(line: 335, column: 50, scope: !4203)
!4243 = !DILocation(line: 335, column: 58, scope: !4203)
!4244 = !DILocation(line: 335, column: 24, scope: !4203)
!4245 = !DILocation(line: 336, column: 17, scope: !4203)
!4246 = !DILocation(line: 338, column: 9, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4203, file: !3690, line: 338, column: 6)
!4248 = !DILocation(line: 338, column: 6, scope: !4203)
!4249 = !DILocation(line: 341, column: 17, scope: !4203)
!4250 = !DILocation(line: 344, column: 20, scope: !4203)
!4251 = !DILocation(line: 344, column: 8, scope: !4203)
!4252 = !DILocation(line: 344, column: 47, scope: !4203)
!4253 = !DILocation(line: 345, column: 39, scope: !4203)
!4254 = !DILocation(line: 348, column: 16, scope: !4203)
!4255 = !DILocation(line: 349, column: 26, scope: !4203)
!4256 = !DILocation(line: 349, column: 24, scope: !4203)
!4257 = !DILocation(line: 353, column: 8, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4203, file: !3690, line: 353, column: 6)
!4259 = !DILocation(line: 353, column: 6, scope: !4203)
!4260 = !DILocation(line: 354, column: 3, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4258, file: !3690, line: 353, column: 14)
!4262 = !DILocation(line: 355, column: 3, scope: !4261)
!4263 = !DILocation(line: 356, column: 2, scope: !4261)
!4264 = !DILocation(line: 359, column: 6, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4203, file: !3690, line: 359, column: 6)
!4266 = !DILocation(line: 359, column: 24, scope: !4265)
!4267 = !DILocation(line: 359, column: 6, scope: !4203)
!4268 = !DILocation(line: 360, column: 3, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4265, file: !3690, line: 359, column: 33)
!4270 = !DILocation(line: 361, column: 3, scope: !4269)
!4271 = !DILocation(line: 362, column: 2, scope: !4269)
!4272 = !DILocation(line: 364, column: 2, scope: !4203)
!4273 = !DILocation(line: 377, column: 1, scope: !4203)
!4274 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3690, file: !3690, line: 379, type: !4275, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4277)
!4275 = !DISubroutineType(types: !4276)
!4276 = !{!102, !3693, !102, !356, !356}
!4277 = !{!4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4293, !4294}
!4278 = !DILocalVariable(name: "heap", arg: 1, scope: !4274, file: !3690, line: 379, type: !3693)
!4279 = !DILocalVariable(name: "ptr", arg: 2, scope: !4274, file: !3690, line: 379, type: !102)
!4280 = !DILocalVariable(name: "align", arg: 3, scope: !4274, file: !3690, line: 380, type: !356)
!4281 = !DILocalVariable(name: "bytes", arg: 4, scope: !4274, file: !3690, line: 380, type: !356)
!4282 = !DILocalVariable(name: "h", scope: !4274, file: !3690, line: 382, type: !2556)
!4283 = !DILocalVariable(name: "c", scope: !4274, file: !3690, line: 399, type: !2561)
!4284 = !DILocalVariable(name: "rc", scope: !4274, file: !3690, line: 400, type: !2561)
!4285 = !DILocalVariable(name: "align_gap", scope: !4274, file: !3690, line: 401, type: !356)
!4286 = !DILocalVariable(name: "chunks_need", scope: !4274, file: !3690, line: 402, type: !3816)
!4287 = !DILocalVariable(name: "split_size", scope: !4288, file: !3690, line: 435, type: !3816)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !3690, line: 433, column: 61)
!4289 = distinct !DILexicalBlock(scope: !4290, file: !3690, line: 432, column: 13)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !3690, line: 409, column: 13)
!4291 = distinct !DILexicalBlock(scope: !4292, file: !3690, line: 406, column: 13)
!4292 = distinct !DILexicalBlock(scope: !4274, file: !3690, line: 404, column: 6)
!4293 = !DILocalVariable(name: "ptr2", scope: !4274, file: !3690, line: 474, type: !102)
!4294 = !DILocalVariable(name: "prev_size", scope: !4295, file: !3690, line: 477, type: !356)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !3690, line: 476, column: 20)
!4296 = distinct !DILexicalBlock(scope: !4274, file: !3690, line: 476, column: 6)
!4297 = !DILocation(line: 0, scope: !4274)
!4298 = !DILocation(line: 382, column: 27, scope: !4274)
!4299 = !DILocation(line: 385, column: 10, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4274, file: !3690, line: 385, column: 6)
!4301 = !DILocation(line: 385, column: 6, scope: !4274)
!4302 = !DILocation(line: 386, column: 10, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4300, file: !3690, line: 385, column: 19)
!4304 = !DILocation(line: 386, column: 3, scope: !4303)
!4305 = !DILocation(line: 388, column: 12, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4274, file: !3690, line: 388, column: 6)
!4307 = !DILocation(line: 388, column: 6, scope: !4274)
!4308 = !DILocation(line: 389, column: 3, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4306, file: !3690, line: 388, column: 18)
!4310 = !DILocation(line: 390, column: 3, scope: !4309)
!4311 = !DILocation(line: 395, column: 6, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4274, file: !3690, line: 395, column: 6)
!4313 = !DILocation(line: 395, column: 6, scope: !4274)
!4314 = !DILocation(line: 399, column: 16, scope: !4274)
!4315 = !DILocation(line: 400, column: 17, scope: !4274)
!4316 = !DILocation(line: 401, column: 49, scope: !4274)
!4317 = !DILocation(line: 401, column: 36, scope: !4274)
!4318 = !DILocation(line: 402, column: 52, scope: !4274)
!4319 = !DILocation(line: 402, column: 26, scope: !4274)
!4320 = !DILocation(line: 404, column: 6, scope: !4292)
!4321 = !DILocation(line: 404, column: 12, scope: !4292)
!4322 = !DILocation(line: 404, column: 40, scope: !4292)
!4323 = !DILocation(line: 404, column: 31, scope: !4292)
!4324 = !DILocation(line: 404, column: 6, scope: !4274)
!4325 = !DILocation(line: 406, column: 13, scope: !4291)
!4326 = !DILocation(line: 406, column: 30, scope: !4291)
!4327 = !DILocation(line: 406, column: 13, scope: !4292)
!4328 = !DILocation(line: 409, column: 30, scope: !4290)
!4329 = !DILocation(line: 409, column: 13, scope: !4291)
!4330 = !DILocation(line: 420, column: 24, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4290, file: !3690, line: 409, column: 45)
!4332 = !DILocation(line: 420, column: 3, scope: !4331)
!4333 = !DILocation(line: 421, column: 3, scope: !4331)
!4334 = !DILocation(line: 422, column: 3, scope: !4331)
!4335 = !DILocation(line: 431, column: 3, scope: !4331)
!4336 = !DILocation(line: 432, column: 14, scope: !4289)
!4337 = !DILocation(line: 432, column: 32, scope: !4289)
!4338 = !DILocation(line: 433, column: 26, scope: !4289)
!4339 = !DILocation(line: 433, column: 24, scope: !4289)
!4340 = !DILocation(line: 433, column: 44, scope: !4289)
!4341 = !DILocation(line: 432, column: 13, scope: !4290)
!4342 = !DILocation(line: 435, column: 38, scope: !4288)
!4343 = !DILocation(line: 0, scope: !4288)
!4344 = !DILocation(line: 445, column: 3, scope: !4288)
!4345 = !DILocation(line: 447, column: 20, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4288, file: !3690, line: 447, column: 7)
!4347 = !DILocation(line: 447, column: 18, scope: !4346)
!4348 = !DILocation(line: 447, column: 7, scope: !4288)
!4349 = !DILocation(line: 448, column: 27, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4346, file: !3690, line: 447, column: 39)
!4351 = !DILocation(line: 448, column: 4, scope: !4350)
!4352 = !DILocation(line: 449, column: 4, scope: !4350)
!4353 = !DILocation(line: 450, column: 3, scope: !4350)
!4354 = !DILocation(line: 452, column: 3, scope: !4288)
!4355 = !DILocation(line: 453, column: 3, scope: !4288)
!4356 = !DILocation(line: 474, column: 15, scope: !4274)
!4357 = !DILocation(line: 476, column: 11, scope: !4296)
!4358 = !DILocation(line: 476, column: 6, scope: !4274)
!4359 = !DILocation(line: 477, column: 42, scope: !4295)
!4360 = !DILocation(line: 477, column: 22, scope: !4295)
!4361 = !DILocation(line: 477, column: 60, scope: !4295)
!4362 = !DILocation(line: 0, scope: !4295)
!4363 = !DILocation(line: 479, column: 21, scope: !4295)
!4364 = !DILocation(line: 479, column: 3, scope: !4295)
!4365 = !DILocation(line: 480, column: 3, scope: !4295)
!4366 = !DILocation(line: 481, column: 2, scope: !4295)
!4367 = !DILocation(line: 483, column: 1, scope: !4274)
!4368 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2543, file: !2543, line: 245, type: !4369, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4371)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{!356, !2556, !3816}
!4371 = !{!4372, !4373}
!4372 = !DILocalVariable(name: "h", arg: 1, scope: !4368, file: !2543, line: 245, type: !2556)
!4373 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4368, file: !2543, line: 245, type: !3816)
!4374 = !DILocation(line: 0, scope: !4368)
!4375 = !DILocation(line: 247, column: 20, scope: !4368)
!4376 = !DILocation(line: 247, column: 33, scope: !4368)
!4377 = !DILocation(line: 247, column: 2, scope: !4368)
!4378 = distinct !DISubprogram(name: "sys_heap_init", scope: !3690, file: !3690, line: 485, type: !4379, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2539, retainedNodes: !4381)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{null, !3693, !102, !356}
!4381 = !{!4382, !4383, !4384, !4385, !4386, !4387, !4388, !4389, !4390, !4391}
!4382 = !DILocalVariable(name: "heap", arg: 1, scope: !4378, file: !3690, line: 485, type: !3693)
!4383 = !DILocalVariable(name: "mem", arg: 2, scope: !4378, file: !3690, line: 485, type: !102)
!4384 = !DILocalVariable(name: "bytes", arg: 3, scope: !4378, file: !3690, line: 485, type: !356)
!4385 = !DILocalVariable(name: "addr", scope: !4378, file: !3690, line: 502, type: !22)
!4386 = !DILocalVariable(name: "end", scope: !4378, file: !3690, line: 503, type: !22)
!4387 = !DILocalVariable(name: "heap_sz", scope: !4378, file: !3690, line: 504, type: !3816)
!4388 = !DILocalVariable(name: "h", scope: !4378, file: !3690, line: 509, type: !2556)
!4389 = !DILocalVariable(name: "nb_buckets", scope: !4378, file: !3690, line: 520, type: !103)
!4390 = !DILocalVariable(name: "chunk0_size", scope: !4378, file: !3690, line: 521, type: !3816)
!4391 = !DILocalVariable(name: "i", scope: !4392, file: !3690, line: 526, type: !103)
!4392 = distinct !DILexicalBlock(scope: !4378, file: !3690, line: 526, column: 2)
!4393 = !DILocation(line: 0, scope: !4378)
!4394 = !DILocation(line: 499, column: 8, scope: !4378)
!4395 = !DILocation(line: 502, column: 19, scope: !4378)
!4396 = !DILocation(line: 503, column: 18, scope: !4378)
!4397 = !DILocation(line: 504, column: 27, scope: !4378)
!4398 = !DILocation(line: 504, column: 35, scope: !4378)
!4399 = !DILocation(line: 509, column: 21, scope: !4378)
!4400 = !DILocation(line: 510, column: 8, scope: !4378)
!4401 = !DILocation(line: 510, column: 13, scope: !4378)
!4402 = !DILocation(line: 511, column: 5, scope: !4378)
!4403 = !DILocation(line: 511, column: 15, scope: !4378)
!4404 = !DILocation(line: 512, column: 5, scope: !4378)
!4405 = !DILocation(line: 512, column: 19, scope: !4378)
!4406 = !DILocation(line: 520, column: 19, scope: !4378)
!4407 = !DILocation(line: 522, column: 21, scope: !4378)
!4408 = !DILocation(line: 521, column: 56, scope: !4378)
!4409 = !DILocation(line: 521, column: 26, scope: !4378)
!4410 = !DILocation(line: 0, scope: !4392)
!4411 = !DILocation(line: 526, column: 20, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4392, file: !3690, line: 526, column: 2)
!4413 = !DILocation(line: 526, column: 2, scope: !4392)
!4414 = !DILocation(line: 531, column: 2, scope: !4378)
!4415 = !DILocation(line: 532, column: 2, scope: !4378)
!4416 = !DILocation(line: 533, column: 2, scope: !4378)
!4417 = !DILocation(line: 536, column: 41, scope: !4378)
!4418 = !DILocation(line: 536, column: 2, scope: !4378)
!4419 = !DILocation(line: 537, column: 2, scope: !4378)
!4420 = !DILocation(line: 540, column: 2, scope: !4378)
!4421 = !DILocation(line: 541, column: 2, scope: !4378)
!4422 = !DILocation(line: 542, column: 2, scope: !4378)
!4423 = !DILocation(line: 544, column: 2, scope: !4378)
!4424 = !DILocation(line: 545, column: 1, scope: !4378)
!4425 = !DILocation(line: 527, column: 17, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4412, file: !3690, line: 526, column: 39)
!4427 = !DILocation(line: 527, column: 22, scope: !4426)
!4428 = !DILocation(line: 526, column: 35, scope: !4412)
!4429 = distinct !{!4429, !4413, !4430}
!4430 = !DILocation(line: 528, column: 2, scope: !4392)
!4431 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2576, file: !2576, line: 1338, type: !4432, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !4440)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!103, !3420, !102, !155, !4434, !132}
!4434 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3386, line: 99, baseType: !4435)
!4435 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3386, line: 40, baseType: !4436)
!4436 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2576, baseType: !4437)
!4437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4438)
!4438 = !{!4439}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4437, file: !2576, baseType: !102, size: 32)
!4440 = !{!4441, !4442, !4443, !4444, !4445, !4446, !4450, !4451, !4452, !4454, !4459, !4504, !4507, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4519, !4520, !4521, !4525, !4528, !4530, !4533, !4534, !4535, !4540, !4546, !4549, !4553, !4559, !4563, !4566, !4568, !4571}
!4441 = !DILocalVariable(name: "out", arg: 1, scope: !4431, file: !2576, line: 1338, type: !3420)
!4442 = !DILocalVariable(name: "ctx", arg: 2, scope: !4431, file: !2576, line: 1338, type: !102)
!4443 = !DILocalVariable(name: "fp", arg: 3, scope: !4431, file: !2576, line: 1338, type: !155)
!4444 = !DILocalVariable(name: "ap", arg: 4, scope: !4431, file: !2576, line: 1339, type: !4434)
!4445 = !DILocalVariable(name: "flags", arg: 5, scope: !4431, file: !2576, line: 1339, type: !132)
!4446 = !DILocalVariable(name: "buf", scope: !4431, file: !2576, line: 1341, type: !4447)
!4447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 176, elements: !4448)
!4448 = !{!4449}
!4449 = !DISubrange(count: 22)
!4450 = !DILocalVariable(name: "count", scope: !4431, file: !2576, line: 1342, type: !356)
!4451 = !DILocalVariable(name: "sint", scope: !4431, file: !2576, line: 1343, type: !2595)
!4452 = !DILocalVariable(name: "tagged_ap", scope: !4431, file: !2576, line: 1345, type: !4453)
!4453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!4454 = !DILocalVariable(name: "rc", scope: !4455, file: !2576, line: 1377, type: !103)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !2576, line: 1377, column: 4)
!4456 = distinct !DILexicalBlock(scope: !4457, file: !2576, line: 1376, column: 19)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1376, column: 7)
!4458 = distinct !DILexicalBlock(scope: !4431, file: !2576, line: 1375, column: 19)
!4459 = !DILocalVariable(name: "state", scope: !4458, file: !2576, line: 1395, type: !4460)
!4460 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4431, file: !2576, line: 1392, size: 192, elements: !4461)
!4461 = !{!4462, !4472}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4460, file: !2576, line: 1393, baseType: !4463, size: 64)
!4463 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2576, line: 166, size: 64, elements: !4464)
!4464 = !{!4465, !4466, !4467, !4469, !4471}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4463, file: !2576, line: 168, baseType: !2595, size: 64)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4463, file: !2576, line: 171, baseType: !2598, size: 64)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4463, file: !2576, line: 174, baseType: !4468, size: 64)
!4468 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4463, file: !2576, line: 177, baseType: !4470, size: 64)
!4470 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4463, file: !2576, line: 180, baseType: !102, size: 32)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4460, file: !2576, line: 1394, baseType: !4473, size: 96, offset: 64)
!4473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2576, line: 189, size: 96, elements: !4474)
!4474 = !{!4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4499}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4473, file: !2576, line: 191, baseType: !166, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4473, file: !2576, line: 194, baseType: !166, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4473, file: !2576, line: 197, baseType: !166, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4473, file: !2576, line: 200, baseType: !166, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4473, file: !2576, line: 203, baseType: !166, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4473, file: !2576, line: 206, baseType: !166, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4473, file: !2576, line: 209, baseType: !166, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4473, file: !2576, line: 212, baseType: !166, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4473, file: !2576, line: 219, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4473, file: !2576, line: 222, baseType: !166, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4473, file: !2576, line: 229, baseType: !166, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4473, file: !2576, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4473, file: !2576, line: 238, baseType: !166, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4473, file: !2576, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4473, file: !2576, line: 244, baseType: !166, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4473, file: !2576, line: 247, baseType: !166, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4473, file: !2576, line: 252, baseType: !166, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4473, file: !2576, line: 257, baseType: !166, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4473, file: !2576, line: 260, baseType: !164, size: 8, offset: 24)
!4494 = !DIDerivedType(tag: DW_TAG_member, scope: !4473, file: !2576, line: 262, baseType: !4495, size: 32, offset: 32)
!4495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4473, file: !2576, line: 262, size: 32, elements: !4496)
!4496 = !{!4497, !4498}
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4495, file: !2576, line: 267, baseType: !103, size: 32)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4495, file: !2576, line: 289, baseType: !103, size: 32)
!4499 = !DIDerivedType(tag: DW_TAG_member, scope: !4473, file: !2576, line: 292, baseType: !4500, size: 32, offset: 64)
!4500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4473, file: !2576, line: 292, size: 32, elements: !4501)
!4501 = !{!4502, !4503}
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4500, file: !2576, line: 297, baseType: !103, size: 32)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4500, file: !2576, line: 306, baseType: !103, size: 32)
!4504 = !DILocalVariable(name: "conv", scope: !4458, file: !2576, line: 1400, type: !4505)
!4505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4506)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 32)
!4507 = !DILocalVariable(name: "value", scope: !4458, file: !2576, line: 1401, type: !4508)
!4508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4509)
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 32)
!4510 = !DILocalVariable(name: "sp", scope: !4458, file: !2576, line: 1402, type: !155)
!4511 = !DILocalVariable(name: "width", scope: !4458, file: !2576, line: 1403, type: !103)
!4512 = !DILocalVariable(name: "precision", scope: !4458, file: !2576, line: 1404, type: !103)
!4513 = !DILocalVariable(name: "bps", scope: !4458, file: !2576, line: 1405, type: !155)
!4514 = !DILocalVariable(name: "bpe", scope: !4458, file: !2576, line: 1406, type: !155)
!4515 = !DILocalVariable(name: "sign", scope: !4458, file: !2576, line: 1407, type: !108)
!4516 = !DILocalVariable(name: "arg", scope: !4517, file: !2576, line: 1432, type: !103)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !2576, line: 1431, column: 24)
!4518 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1431, column: 7)
!4519 = !DILocalVariable(name: "specifier_cat", scope: !4458, file: !2576, line: 1468, type: !2575)
!4520 = !DILocalVariable(name: "length_mod", scope: !4458, file: !2576, line: 1470, type: !2583)
!4521 = !DILocalVariable(name: "rc", scope: !4522, file: !2576, line: 1575, type: !103)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !2576, line: 1575, column: 4)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !2576, line: 1574, column: 43)
!4524 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1574, column: 7)
!4525 = !DILocalVariable(name: "rc", scope: !4526, file: !2576, line: 1584, type: !103)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !2576, line: 1584, column: 4)
!4527 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1582, column: 28)
!4528 = !DILocalVariable(name: "len", scope: !4529, file: !2576, line: 1589, type: !356)
!4529 = distinct !DILexicalBlock(scope: !4527, file: !2576, line: 1586, column: 13)
!4530 = !DILocalVariable(name: "len", scope: !4531, file: !2576, line: 1641, type: !356)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !2576, line: 1640, column: 24)
!4532 = distinct !DILexicalBlock(scope: !4527, file: !2576, line: 1640, column: 8)
!4533 = !DILocalVariable(name: "nj_len", scope: !4458, file: !2576, line: 1722, type: !356)
!4534 = !DILocalVariable(name: "pad_len", scope: !4458, file: !2576, line: 1723, type: !103)
!4535 = !DILocalVariable(name: "pad", scope: !4536, file: !2576, line: 1751, type: !108)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !2576, line: 1750, column: 26)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !2576, line: 1750, column: 8)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2576, line: 1747, column: 18)
!4539 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1747, column: 7)
!4540 = !DILocalVariable(name: "rc", scope: !4541, file: !2576, line: 1758, type: !103)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2576, line: 1758, column: 7)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !2576, line: 1757, column: 21)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !2576, line: 1757, column: 10)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !2576, line: 1756, column: 26)
!4545 = distinct !DILexicalBlock(scope: !4536, file: !2576, line: 1756, column: 9)
!4546 = !DILocalVariable(name: "rc", scope: !4547, file: !2576, line: 1765, type: !103)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !2576, line: 1765, column: 6)
!4548 = distinct !DILexicalBlock(scope: !4536, file: !2576, line: 1764, column: 25)
!4549 = !DILocalVariable(name: "rc", scope: !4550, file: !2576, line: 1774, type: !103)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !2576, line: 1774, column: 4)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !2576, line: 1773, column: 18)
!4552 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1773, column: 7)
!4553 = !DILocalVariable(name: "rc", scope: !4554, file: !2576, line: 1819, type: !103)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !2576, line: 1819, column: 5)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !2576, line: 1818, column: 44)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !2576, line: 1818, column: 8)
!4557 = distinct !DILexicalBlock(scope: !4558, file: !2576, line: 1817, column: 10)
!4558 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1777, column: 7)
!4559 = !DILocalVariable(name: "rc", scope: !4560, file: !2576, line: 1823, type: !103)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !2576, line: 1823, column: 5)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !2576, line: 1822, column: 26)
!4562 = distinct !DILexicalBlock(scope: !4557, file: !2576, line: 1822, column: 8)
!4563 = !DILocalVariable(name: "rc", scope: !4564, file: !2576, line: 1828, type: !103)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !2576, line: 1828, column: 5)
!4565 = distinct !DILexicalBlock(scope: !4557, file: !2576, line: 1827, column: 26)
!4566 = !DILocalVariable(name: "rc", scope: !4567, file: !2576, line: 1831, type: !103)
!4567 = distinct !DILexicalBlock(scope: !4557, file: !2576, line: 1831, column: 4)
!4568 = !DILocalVariable(name: "rc", scope: !4569, file: !2576, line: 1836, type: !103)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !2576, line: 1836, column: 4)
!4570 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1835, column: 21)
!4571 = !DILabel(scope: !4527, name: "prec_int_pad0", file: !2576, line: 1634)
!4572 = !DILocation(line: 0, scope: !4431)
!4573 = !DILocation(line: 1341, column: 2, scope: !4431)
!4574 = !DILocation(line: 1341, column: 7, scope: !4431)
!4575 = !DILocation(line: 1375, column: 2, scope: !4431)
!4576 = !DILocation(line: 1342, column: 9, scope: !4431)
!4577 = !DILocation(line: 1375, column: 9, scope: !4431)
!4578 = !DILocation(line: 1377, column: 4, scope: !4455)
!4579 = !DILocation(line: 0, scope: !4455)
!4580 = !DILocation(line: 1377, column: 4, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4455, file: !2576, line: 1377, column: 4)
!4582 = distinct !{!4582, !4575, !4583}
!4583 = !DILocation(line: 1839, column: 2, scope: !4431)
!4584 = !DILocation(line: 1392, column: 3, scope: !4458)
!4585 = !DILocation(line: 1395, column: 5, scope: !4458)
!4586 = !DILocation(line: 0, scope: !4458)
!4587 = !DILocation(line: 1409, column: 8, scope: !4458)
!4588 = !DILocation(line: 1414, column: 13, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1414, column: 7)
!4590 = !DILocation(line: 1414, column: 7, scope: !4458)
!4591 = !DILocation(line: 1415, column: 12, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4589, file: !2576, line: 1414, column: 25)
!4593 = !DILocation(line: 1417, column: 14, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4592, file: !2576, line: 1417, column: 8)
!4595 = !DILocation(line: 1417, column: 8, scope: !4592)
!4596 = !DILocation(line: 1418, column: 21, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4594, file: !2576, line: 1417, column: 19)
!4598 = !DILocation(line: 1419, column: 13, scope: !4597)
!4599 = !DILocation(line: 1420, column: 4, scope: !4597)
!4600 = !DILocation(line: 1421, column: 20, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4589, file: !2576, line: 1421, column: 14)
!4602 = !DILocation(line: 1421, column: 14, scope: !4589)
!4603 = !DILocation(line: 1431, column: 13, scope: !4518)
!4604 = !DILocation(line: 1431, column: 7, scope: !4458)
!4605 = !DILocation(line: 1432, column: 14, scope: !4517)
!4606 = !DILocation(line: 0, scope: !4517)
!4607 = !DILocation(line: 1434, column: 12, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4517, file: !2576, line: 1434, column: 8)
!4609 = !DILocation(line: 1434, column: 8, scope: !4517)
!4610 = !DILocation(line: 1435, column: 24, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4608, file: !2576, line: 1434, column: 17)
!4612 = !DILocation(line: 1436, column: 4, scope: !4611)
!4613 = !DILocation(line: 1439, column: 20, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4518, file: !2576, line: 1439, column: 14)
!4615 = !DILocation(line: 1439, column: 14, scope: !4518)
!4616 = !DILocation(line: 1469, column: 37, scope: !4458)
!4617 = !DILocation(line: 1448, column: 20, scope: !4458)
!4618 = !DILocation(line: 1449, column: 22, scope: !4458)
!4619 = !DILocation(line: 1471, column: 34, scope: !4458)
!4620 = !DILocation(line: 1478, column: 7, scope: !4458)
!4621 = !DILocation(line: 1479, column: 4, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !2576, line: 1478, column: 40)
!4623 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1478, column: 7)
!4624 = !DILocation(line: 1484, column: 19, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4622, file: !2576, line: 1479, column: 24)
!4626 = !DILocation(line: 1484, column: 17, scope: !4625)
!4627 = !DILocation(line: 1485, column: 5, scope: !4625)
!4628 = !DILocation(line: 1492, column: 20, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !2576, line: 1491, column: 12)
!4630 = distinct !DILexicalBlock(scope: !4625, file: !2576, line: 1487, column: 9)
!4631 = !DILocation(line: 1492, column: 18, scope: !4629)
!4632 = !DILocation(line: 1494, column: 5, scope: !4625)
!4633 = !DILocation(line: 1497, column: 23, scope: !4625)
!4634 = !DILocation(line: 1496, column: 17, scope: !4625)
!4635 = !DILocation(line: 1498, column: 5, scope: !4625)
!4636 = !DILocation(line: 1501, column: 23, scope: !4625)
!4637 = !DILocation(line: 1500, column: 17, scope: !4625)
!4638 = !DILocation(line: 1502, column: 5, scope: !4625)
!4639 = !DILocation(line: 1513, column: 23, scope: !4625)
!4640 = !DILocation(line: 1513, column: 6, scope: !4625)
!4641 = !DILocation(line: 1512, column: 17, scope: !4625)
!4642 = !DILocation(line: 1514, column: 5, scope: !4625)
!4643 = !DILocation(line: 0, scope: !4625)
!4644 = !DILocation(line: 1516, column: 8, scope: !4622)
!4645 = !DILocation(line: 1517, column: 19, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !2576, line: 1516, column: 33)
!4647 = distinct !DILexicalBlock(scope: !4622, file: !2576, line: 1516, column: 8)
!4648 = !DILocation(line: 1517, column: 17, scope: !4646)
!4649 = !DILocation(line: 1518, column: 4, scope: !4646)
!4650 = !DILocation(line: 1519, column: 19, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !2576, line: 1518, column: 39)
!4652 = distinct !DILexicalBlock(scope: !4647, file: !2576, line: 1518, column: 15)
!4653 = !DILocation(line: 1519, column: 17, scope: !4651)
!4654 = !DILocation(line: 1520, column: 4, scope: !4651)
!4655 = !DILocation(line: 1522, column: 4, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !2576, line: 1521, column: 47)
!4657 = distinct !DILexicalBlock(scope: !4623, file: !2576, line: 1521, column: 14)
!4658 = !DILocation(line: 1527, column: 19, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4656, file: !2576, line: 1522, column: 24)
!4660 = !DILocation(line: 1527, column: 17, scope: !4659)
!4661 = !DILocation(line: 1528, column: 5, scope: !4659)
!4662 = !DILocation(line: 0, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4659, file: !2576, line: 1530, column: 9)
!4664 = !DILocation(line: 1540, column: 23, scope: !4659)
!4665 = !DILocation(line: 1539, column: 17, scope: !4659)
!4666 = !DILocation(line: 1542, column: 5, scope: !4659)
!4667 = !DILocation(line: 1545, column: 23, scope: !4659)
!4668 = !DILocation(line: 1544, column: 17, scope: !4659)
!4669 = !DILocation(line: 1547, column: 5, scope: !4659)
!4670 = !DILocation(line: 1551, column: 23, scope: !4659)
!4671 = !DILocation(line: 1551, column: 6, scope: !4659)
!4672 = !DILocation(line: 1550, column: 17, scope: !4659)
!4673 = !DILocation(line: 1552, column: 5, scope: !4659)
!4674 = !DILocation(line: 0, scope: !4659)
!4675 = !DILocation(line: 1554, column: 8, scope: !4656)
!4676 = !DILocation(line: 1555, column: 19, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4678, file: !2576, line: 1554, column: 33)
!4678 = distinct !DILexicalBlock(scope: !4656, file: !2576, line: 1554, column: 8)
!4679 = !DILocation(line: 1555, column: 17, scope: !4677)
!4680 = !DILocation(line: 1556, column: 4, scope: !4677)
!4681 = !DILocation(line: 1557, column: 19, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !2576, line: 1556, column: 39)
!4683 = distinct !DILexicalBlock(scope: !4678, file: !2576, line: 1556, column: 15)
!4684 = !DILocation(line: 1557, column: 17, scope: !4682)
!4685 = !DILocation(line: 1558, column: 4, scope: !4682)
!4686 = !DILocation(line: 0, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !2576, line: 1560, column: 8)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2576, line: 1559, column: 45)
!4689 = distinct !DILexicalBlock(scope: !4657, file: !2576, line: 1559, column: 14)
!4690 = !DILocation(line: 1566, column: 17, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !2576, line: 1565, column: 46)
!4692 = distinct !DILexicalBlock(scope: !4689, file: !2576, line: 1565, column: 14)
!4693 = !DILocation(line: 1566, column: 15, scope: !4691)
!4694 = !DILocation(line: 1567, column: 3, scope: !4691)
!4695 = !DILocation(line: 1574, column: 21, scope: !4524)
!4696 = !DILocation(line: 1575, column: 4, scope: !4522)
!4697 = !DILocation(line: 0, scope: !4522)
!4698 = !DILocation(line: 1575, column: 4, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4522, file: !2576, line: 1575, column: 4)
!4700 = !DILocation(line: 1582, column: 17, scope: !4458)
!4701 = !DILocation(line: 1582, column: 3, scope: !4458)
!4702 = !DILocation(line: 1584, column: 4, scope: !4526)
!4703 = !DILocation(line: 0, scope: !4526)
!4704 = !DILocation(line: 1584, column: 4, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4526, file: !2576, line: 1584, column: 4)
!4706 = !DILocation(line: 1587, column: 31, scope: !4529)
!4707 = !DILocation(line: 1591, column: 18, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4529, file: !2576, line: 1591, column: 8)
!4709 = !DILocation(line: 1591, column: 8, scope: !4529)
!4710 = !DILocation(line: 1592, column: 11, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4708, file: !2576, line: 1591, column: 24)
!4712 = !DILocation(line: 0, scope: !4529)
!4713 = !DILocation(line: 1593, column: 4, scope: !4711)
!4714 = !DILocation(line: 1594, column: 11, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4708, file: !2576, line: 1593, column: 11)
!4716 = !DILocation(line: 1604, column: 51, scope: !4527)
!4717 = !DILocation(line: 1604, column: 13, scope: !4527)
!4718 = !DILocation(line: 1604, column: 11, scope: !4527)
!4719 = !DILocation(line: 1606, column: 4, scope: !4527)
!4720 = !DILocation(line: 1609, column: 14, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4527, file: !2576, line: 1609, column: 8)
!4722 = !DILocation(line: 1609, column: 8, scope: !4527)
!4723 = !DILocation(line: 1619, column: 18, scope: !4527)
!4724 = !DILocation(line: 1620, column: 13, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4527, file: !2576, line: 1620, column: 8)
!4726 = !DILocation(line: 1620, column: 8, scope: !4527)
!4727 = !DILocation(line: 1622, column: 36, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4725, file: !2576, line: 1620, column: 18)
!4729 = !DILocation(line: 1622, column: 17, scope: !4728)
!4730 = !DILocation(line: 1623, column: 4, scope: !4728)
!4731 = !DILocation(line: 1632, column: 29, scope: !4527)
!4732 = !DILocation(line: 1632, column: 10, scope: !4527)
!4733 = !DILocation(line: 1632, column: 4, scope: !4527)
!4734 = !DILocation(line: 1407, column: 8, scope: !4458)
!4735 = !DILocation(line: 0, scope: !4527)
!4736 = !DILocation(line: 1634, column: 3, scope: !4527)
!4737 = !DILocation(line: 1640, column: 18, scope: !4532)
!4738 = !DILocation(line: 1640, column: 8, scope: !4527)
!4739 = !DILocation(line: 1729, column: 13, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1729, column: 7)
!4741 = !DILocation(line: 1641, column: 22, scope: !4531)
!4742 = !DILocation(line: 0, scope: !4531)
!4743 = !DILocation(line: 1646, column: 21, scope: !4531)
!4744 = !DILocation(line: 1649, column: 13, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4531, file: !2576, line: 1649, column: 9)
!4746 = !DILocation(line: 1649, column: 9, scope: !4531)
!4747 = !DILocation(line: 1650, column: 35, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4745, file: !2576, line: 1649, column: 34)
!4749 = !DILocation(line: 1650, column: 23, scope: !4748)
!4750 = !DILocation(line: 1651, column: 5, scope: !4748)
!4751 = !DILocation(line: 1660, column: 15, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4527, file: !2576, line: 1660, column: 8)
!4753 = !DILocation(line: 1660, column: 19, scope: !4752)
!4754 = !DILocation(line: 1660, column: 8, scope: !4527)
!4755 = !DILocation(line: 1661, column: 23, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4752, file: !2576, line: 1660, column: 28)
!4757 = !DILocation(line: 1661, column: 11, scope: !4756)
!4758 = !DILocation(line: 1665, column: 22, scope: !4756)
!4759 = !DILocation(line: 1666, column: 21, scope: !4756)
!4760 = !DILocation(line: 1668, column: 5, scope: !4756)
!4761 = !DILocation(line: 1677, column: 30, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !2576, line: 1676, column: 49)
!4763 = distinct !DILexicalBlock(scope: !4527, file: !2576, line: 1676, column: 8)
!4764 = !DILocation(line: 1677, column: 5, scope: !4762)
!4765 = !DILocation(line: 1680, column: 4, scope: !4527)
!4766 = !DILocation(line: 0, scope: !4708)
!4767 = !DILocation(line: 1597, column: 14, scope: !4529)
!4768 = !DILocation(line: 1699, column: 11, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1699, column: 7)
!4770 = !DILocation(line: 1699, column: 7, scope: !4458)
!4771 = !DILocation(line: 1725, column: 7, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1725, column: 7)
!4773 = !DILocation(line: 1725, column: 12, scope: !4772)
!4774 = !DILocation(line: 1747, column: 13, scope: !4539)
!4775 = !DILocation(line: 1747, column: 7, scope: !4458)
!4776 = !DILocation(line: 1722, column: 24, scope: !4458)
!4777 = !DILocation(line: 1725, column: 7, scope: !4458)
!4778 = !DILocation(line: 1729, column: 7, scope: !4458)
!4779 = !DILocation(line: 1736, column: 13, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4458, file: !2576, line: 1736, column: 7)
!4781 = !DILocation(line: 1735, column: 19, scope: !4458)
!4782 = !DILocation(line: 1736, column: 7, scope: !4458)
!4783 = !DILocation(line: 1748, column: 10, scope: !4538)
!4784 = !DILocation(line: 1750, column: 15, scope: !4537)
!4785 = !DILocation(line: 1750, column: 8, scope: !4538)
!4786 = !DILocation(line: 0, scope: !4536)
!4787 = !DILocation(line: 1756, column: 15, scope: !4545)
!4788 = !DILocation(line: 1756, column: 9, scope: !4536)
!4789 = !DILocation(line: 1758, column: 7, scope: !4541)
!4790 = !DILocation(line: 0, scope: !4541)
!4791 = !DILocation(line: 1758, column: 7, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4541, file: !2576, line: 1758, column: 7)
!4793 = !DILocation(line: 1764, column: 5, scope: !4536)
!4794 = !DILocation(line: 0, scope: !4538)
!4795 = !DILocation(line: 1764, column: 20, scope: !4536)
!4796 = !DILocation(line: 1764, column: 17, scope: !4536)
!4797 = !DILocation(line: 1765, column: 6, scope: !4547)
!4798 = !DILocation(line: 0, scope: !4547)
!4799 = !DILocation(line: 1765, column: 6, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4547, file: !2576, line: 1765, column: 6)
!4801 = distinct !{!4801, !4793, !4802}
!4802 = !DILocation(line: 1766, column: 5, scope: !4536)
!4803 = !DILocation(line: 1773, column: 12, scope: !4552)
!4804 = !DILocation(line: 1773, column: 7, scope: !4458)
!4805 = !DILocation(line: 1773, column: 7, scope: !4552)
!4806 = !DILocation(line: 1774, column: 4, scope: !4550)
!4807 = !DILocation(line: 0, scope: !4550)
!4808 = !DILocation(line: 1774, column: 4, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4550, file: !2576, line: 1774, column: 4)
!4810 = !DILocation(line: 1818, column: 8, scope: !4556)
!4811 = !DILocation(line: 1818, column: 27, scope: !4556)
!4812 = !DILocation(line: 1818, column: 25, scope: !4556)
!4813 = !DILocation(line: 1818, column: 8, scope: !4557)
!4814 = !DILocation(line: 1819, column: 5, scope: !4554)
!4815 = !DILocation(line: 0, scope: !4554)
!4816 = !DILocation(line: 1819, column: 5, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4554, file: !2576, line: 1819, column: 5)
!4818 = !DILocation(line: 1822, column: 14, scope: !4562)
!4819 = !DILocation(line: 1822, column: 8, scope: !4557)
!4820 = !DILocation(line: 1823, column: 5, scope: !4560)
!4821 = !DILocation(line: 0, scope: !4560)
!4822 = !DILocation(line: 1823, column: 5, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4560, file: !2576, line: 1823, column: 5)
!4824 = !DILocation(line: 1826, column: 20, scope: !4557)
!4825 = !DILocation(line: 1827, column: 4, scope: !4557)
!4826 = !DILocation(line: 0, scope: !4557)
!4827 = !DILocation(line: 1827, column: 21, scope: !4557)
!4828 = !DILocation(line: 1827, column: 18, scope: !4557)
!4829 = !DILocation(line: 1828, column: 5, scope: !4564)
!4830 = !DILocation(line: 0, scope: !4564)
!4831 = !DILocation(line: 1828, column: 5, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4564, file: !2576, line: 1828, column: 5)
!4833 = distinct !{!4833, !4825, !4834}
!4834 = !DILocation(line: 1829, column: 4, scope: !4557)
!4835 = !DILocation(line: 1831, column: 4, scope: !4567)
!4836 = !DILocation(line: 0, scope: !4567)
!4837 = !DILocation(line: 1831, column: 4, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4567, file: !2576, line: 1831, column: 4)
!4839 = !DILocation(line: 1835, column: 16, scope: !4458)
!4840 = !DILocation(line: 1835, column: 3, scope: !4458)
!4841 = !DILocation(line: 1836, column: 4, scope: !4569)
!4842 = !DILocation(line: 0, scope: !4569)
!4843 = !DILocation(line: 1836, column: 4, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4569, file: !2576, line: 1836, column: 4)
!4845 = !DILocation(line: 1837, column: 4, scope: !4570)
!4846 = distinct !{!4846, !4840, !4847}
!4847 = !DILocation(line: 1838, column: 3, scope: !4458)
!4848 = !DILocation(line: 1844, column: 1, scope: !4431)
!4849 = distinct !DISubprogram(name: "extract_conversion", scope: !2576, file: !2576, line: 642, type: !4850, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !4852)
!4850 = !DISubroutineType(types: !4851)
!4851 = !{!155, !4506, !155}
!4852 = !{!4853, !4854}
!4853 = !DILocalVariable(name: "conv", arg: 1, scope: !4849, file: !2576, line: 642, type: !4506)
!4854 = !DILocalVariable(name: "sp", arg: 2, scope: !4849, file: !2576, line: 643, type: !155)
!4855 = !DILocation(line: 0, scope: !4849)
!4856 = !DILocation(line: 645, column: 10, scope: !4849)
!4857 = !DILocation(line: 653, column: 2, scope: !4849)
!4858 = !DILocation(line: 654, column: 6, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4849, file: !2576, line: 654, column: 6)
!4860 = !DILocation(line: 654, column: 10, scope: !4859)
!4861 = !DILocation(line: 654, column: 6, scope: !4849)
!4862 = !DILocation(line: 655, column: 24, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4859, file: !2576, line: 654, column: 18)
!4864 = !DILocation(line: 655, column: 19, scope: !4863)
!4865 = !DILocation(line: 656, column: 3, scope: !4863)
!4866 = !DILocation(line: 659, column: 7, scope: !4849)
!4867 = !DILocation(line: 660, column: 7, scope: !4849)
!4868 = !DILocation(line: 661, column: 7, scope: !4849)
!4869 = !DILocation(line: 662, column: 7, scope: !4849)
!4870 = !DILocation(line: 663, column: 7, scope: !4849)
!4871 = !DILocation(line: 665, column: 2, scope: !4849)
!4872 = !DILocation(line: 666, column: 1, scope: !4849)
!4873 = distinct !DISubprogram(name: "outs", scope: !2576, file: !2576, line: 1319, type: !4874, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !4876)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{!103, !3420, !102, !155, !155}
!4876 = !{!4877, !4878, !4879, !4880, !4881, !4882}
!4877 = !DILocalVariable(name: "out", arg: 1, scope: !4873, file: !2576, line: 1319, type: !3420)
!4878 = !DILocalVariable(name: "ctx", arg: 2, scope: !4873, file: !2576, line: 1320, type: !102)
!4879 = !DILocalVariable(name: "sp", arg: 3, scope: !4873, file: !2576, line: 1321, type: !155)
!4880 = !DILocalVariable(name: "ep", arg: 4, scope: !4873, file: !2576, line: 1322, type: !155)
!4881 = !DILocalVariable(name: "count", scope: !4873, file: !2576, line: 1324, type: !356)
!4882 = !DILocalVariable(name: "rc", scope: !4883, file: !2576, line: 1327, type: !103)
!4883 = distinct !DILexicalBlock(scope: !4873, file: !2576, line: 1326, column: 45)
!4884 = !DILocation(line: 0, scope: !4873)
!4885 = !DILocation(line: 1326, column: 2, scope: !4873)
!4886 = !DILocation(line: 1324, column: 9, scope: !4873)
!4887 = !DILocation(line: 1326, column: 13, scope: !4873)
!4888 = !DILocation(line: 1326, column: 19, scope: !4873)
!4889 = !DILocation(line: 1327, column: 21, scope: !4883)
!4890 = !DILocation(line: 1326, column: 36, scope: !4873)
!4891 = !DILocation(line: 1326, column: 39, scope: !4873)
!4892 = !DILocation(line: 1327, column: 24, scope: !4883)
!4893 = !DILocation(line: 1327, column: 16, scope: !4883)
!4894 = !DILocation(line: 1327, column: 12, scope: !4883)
!4895 = !DILocation(line: 0, scope: !4883)
!4896 = !DILocation(line: 1329, column: 10, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4883, file: !2576, line: 1329, column: 7)
!4898 = !DILocation(line: 1329, column: 7, scope: !4883)
!4899 = distinct !{!4899, !4885, !4900}
!4900 = !DILocation(line: 1333, column: 2, scope: !4873)
!4901 = !DILocation(line: 1336, column: 1, scope: !4873)
!4902 = distinct !DISubprogram(name: "encode_uint", scope: !2576, file: !2576, line: 788, type: !4903, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !4905)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!1063, !2598, !4506, !1063, !155}
!4905 = !{!4906, !4907, !4908, !4909, !4910, !4911, !4913, !4914}
!4906 = !DILocalVariable(name: "value", arg: 1, scope: !4902, file: !2576, line: 788, type: !2598)
!4907 = !DILocalVariable(name: "conv", arg: 2, scope: !4902, file: !2576, line: 789, type: !4506)
!4908 = !DILocalVariable(name: "bps", arg: 3, scope: !4902, file: !2576, line: 790, type: !1063)
!4909 = !DILocalVariable(name: "bpe", arg: 4, scope: !4902, file: !2576, line: 791, type: !155)
!4910 = !DILocalVariable(name: "upcase", scope: !4902, file: !2576, line: 793, type: !166)
!4911 = !DILocalVariable(name: "radix", scope: !4902, file: !2576, line: 794, type: !4912)
!4912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4913 = !DILocalVariable(name: "bp", scope: !4902, file: !2576, line: 795, type: !1063)
!4914 = !DILocalVariable(name: "lsv", scope: !4915, file: !2576, line: 798, type: !32)
!4915 = distinct !DILexicalBlock(scope: !4902, file: !2576, line: 797, column: 5)
!4916 = !DILocation(line: 0, scope: !4902)
!4917 = !DILocation(line: 793, column: 35, scope: !4902)
!4918 = !DILocation(line: 793, column: 24, scope: !4902)
!4919 = !DILocation(line: 793, column: 16, scope: !4902)
!4920 = !DILocation(line: 794, column: 29, scope: !4902)
!4921 = !DILocation(line: 795, column: 24, scope: !4902)
!4922 = !DILocation(line: 795, column: 17, scope: !4902)
!4923 = !DILocation(line: 797, column: 2, scope: !4902)
!4924 = !DILocation(line: 802, column: 9, scope: !4915)
!4925 = !DILocation(line: 798, column: 22, scope: !4915)
!4926 = !DILocation(line: 0, scope: !4915)
!4927 = !DILocation(line: 800, column: 16, scope: !4915)
!4928 = !DILocation(line: 800, column: 11, scope: !4915)
!4929 = !DILocation(line: 800, column: 4, scope: !4915)
!4930 = !DILocation(line: 800, column: 9, scope: !4915)
!4931 = !DILocation(line: 803, column: 18, scope: !4902)
!4932 = !DILocation(line: 803, column: 24, scope: !4902)
!4933 = !DILocation(line: 803, column: 2, scope: !4915)
!4934 = distinct !{!4934, !4923, !4935}
!4935 = !DILocation(line: 803, column: 37, scope: !4902)
!4936 = !DILocation(line: 808, column: 12, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4902, file: !2576, line: 808, column: 6)
!4938 = !DILocation(line: 808, column: 6, scope: !4902)
!4939 = !DILocation(line: 809, column: 7, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4937, file: !2576, line: 808, column: 23)
!4941 = !DILocation(line: 813, column: 3, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4943, file: !2576, line: 811, column: 27)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !2576, line: 811, column: 14)
!4944 = distinct !DILexicalBlock(scope: !4940, file: !2576, line: 809, column: 7)
!4945 = !DILocation(line: 0, scope: !4944)
!4946 = !DILocation(line: 818, column: 2, scope: !4902)
!4947 = distinct !DISubprogram(name: "store_count", scope: !2576, file: !2576, line: 1280, type: !4948, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !4952)
!4948 = !DISubroutineType(types: !4949)
!4949 = !{null, !4950, !102, !103}
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 32)
!4951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4473)
!4952 = !{!4953, !4954, !4955}
!4953 = !DILocalVariable(name: "conv", arg: 1, scope: !4947, file: !2576, line: 1280, type: !4950)
!4954 = !DILocalVariable(name: "dp", arg: 2, scope: !4947, file: !2576, line: 1281, type: !102)
!4955 = !DILocalVariable(name: "count", arg: 3, scope: !4947, file: !2576, line: 1282, type: !103)
!4956 = !DILocation(line: 0, scope: !4947)
!4957 = !DILocation(line: 1284, column: 38, scope: !4947)
!4958 = !DILocation(line: 1284, column: 2, scope: !4947)
!4959 = !DILocation(line: 1286, column: 4, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4947, file: !2576, line: 1284, column: 50)
!4961 = !DILocation(line: 1286, column: 14, scope: !4960)
!4962 = !DILocation(line: 1287, column: 3, scope: !4960)
!4963 = !DILocation(line: 1289, column: 24, scope: !4960)
!4964 = !DILocation(line: 1289, column: 22, scope: !4960)
!4965 = !DILocation(line: 1290, column: 3, scope: !4960)
!4966 = !DILocation(line: 1292, column: 18, scope: !4960)
!4967 = !DILocation(line: 1292, column: 4, scope: !4960)
!4968 = !DILocation(line: 1292, column: 16, scope: !4960)
!4969 = !DILocation(line: 1293, column: 3, scope: !4960)
!4970 = !DILocation(line: 1295, column: 4, scope: !4960)
!4971 = !DILocation(line: 1295, column: 15, scope: !4960)
!4972 = !DILocation(line: 1296, column: 3, scope: !4960)
!4973 = !DILocation(line: 1298, column: 22, scope: !4960)
!4974 = !DILocation(line: 1298, column: 4, scope: !4960)
!4975 = !DILocation(line: 1298, column: 20, scope: !4960)
!4976 = !DILocation(line: 1299, column: 3, scope: !4960)
!4977 = !DILocation(line: 1301, column: 21, scope: !4960)
!4978 = !DILocation(line: 1301, column: 4, scope: !4960)
!4979 = !DILocation(line: 1301, column: 19, scope: !4960)
!4980 = !DILocation(line: 1302, column: 3, scope: !4960)
!4981 = !DILocation(line: 1304, column: 4, scope: !4960)
!4982 = !DILocation(line: 1304, column: 17, scope: !4960)
!4983 = !DILocation(line: 1305, column: 3, scope: !4960)
!4984 = !DILocation(line: 1307, column: 4, scope: !4960)
!4985 = !DILocation(line: 1307, column: 20, scope: !4960)
!4986 = !DILocation(line: 1308, column: 3, scope: !4960)
!4987 = !DILocation(line: 1316, column: 1, scope: !4947)
!4988 = distinct !DISubprogram(name: "isupper", scope: !4989, file: !4989, line: 16, type: !118, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !4990)
!4989 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4990 = !{!4991}
!4991 = !DILocalVariable(name: "a", arg: 1, scope: !4988, file: !4989, line: 16, type: !103)
!4992 = !DILocation(line: 0, scope: !4988)
!4993 = !DILocation(line: 18, column: 29, scope: !4988)
!4994 = !DILocation(line: 18, column: 45, scope: !4988)
!4995 = !DILocation(line: 18, column: 2, scope: !4988)
!4996 = distinct !DISubprogram(name: "conversion_radix", scope: !2576, file: !2576, line: 761, type: !4997, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !4999)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!356, !108}
!4999 = !{!5000}
!5000 = !DILocalVariable(name: "specifier", arg: 1, scope: !4996, file: !2576, line: 761, type: !108)
!5001 = !DILocation(line: 0, scope: !4996)
!5002 = !DILocation(line: 763, column: 2, scope: !4996)
!5003 = !DILocation(line: 770, column: 3, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4996, file: !2576, line: 763, column: 21)
!5005 = !DILocation(line: 774, column: 3, scope: !5004)
!5006 = !DILocation(line: 0, scope: !5004)
!5007 = !DILocation(line: 776, column: 1, scope: !4996)
!5008 = distinct !DISubprogram(name: "extract_flags", scope: !2576, file: !2576, line: 339, type: !4850, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !5009)
!5009 = !{!5010, !5011, !5012}
!5010 = !DILocalVariable(name: "conv", arg: 1, scope: !5008, file: !2576, line: 339, type: !4506)
!5011 = !DILocalVariable(name: "sp", arg: 2, scope: !5008, file: !2576, line: 340, type: !155)
!5012 = !DILocalVariable(name: "loop", scope: !5008, file: !2576, line: 342, type: !166)
!5013 = !DILocation(line: 0, scope: !5008)
!5014 = !DILocation(line: 344, column: 2, scope: !5008)
!5015 = !DILocation(line: 345, column: 11, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5008, file: !2576, line: 344, column: 5)
!5017 = !DILocation(line: 345, column: 3, scope: !5016)
!5018 = !DILocation(line: 351, column: 4, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5016, file: !2576, line: 345, column: 16)
!5020 = !DILocation(line: 354, column: 4, scope: !5019)
!5021 = !DILocation(line: 357, column: 4, scope: !5019)
!5022 = !DILocation(line: 360, column: 4, scope: !5019)
!5023 = !DILocation(line: 0, scope: !5019)
!5024 = !DILocation(line: 370, column: 12, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5008, file: !2576, line: 370, column: 6)
!5026 = !DILocation(line: 370, column: 22, scope: !5025)
!5027 = !DILocation(line: 371, column: 19, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5025, file: !2576, line: 370, column: 42)
!5029 = !DILocation(line: 372, column: 2, scope: !5028)
!5030 = !DILocation(line: 376, column: 2, scope: !5008)
!5031 = distinct !DISubprogram(name: "extract_width", scope: !2576, file: !2576, line: 388, type: !4850, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !5032)
!5032 = !{!5033, !5034, !5035, !5036}
!5033 = !DILocalVariable(name: "conv", arg: 1, scope: !5031, file: !2576, line: 388, type: !4506)
!5034 = !DILocalVariable(name: "sp", arg: 2, scope: !5031, file: !2576, line: 389, type: !155)
!5035 = !DILocalVariable(name: "wp", scope: !5031, file: !2576, line: 398, type: !155)
!5036 = !DILocalVariable(name: "width", scope: !5031, file: !2576, line: 399, type: !356)
!5037 = !DILocation(line: 0, scope: !5031)
!5038 = !DILocation(line: 391, column: 8, scope: !5031)
!5039 = !DILocation(line: 391, column: 22, scope: !5031)
!5040 = !DILocation(line: 393, column: 6, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5031, file: !2576, line: 393, column: 6)
!5042 = !DILocation(line: 393, column: 10, scope: !5041)
!5043 = !DILocation(line: 393, column: 6, scope: !5031)
!5044 = !DILocation(line: 394, column: 20, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5041, file: !2576, line: 393, column: 18)
!5046 = !DILocation(line: 395, column: 10, scope: !5045)
!5047 = !DILocation(line: 395, column: 3, scope: !5045)
!5048 = !DILocation(line: 399, column: 17, scope: !5031)
!5049 = !DILocation(line: 401, column: 6, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5031, file: !2576, line: 401, column: 6)
!5051 = !DILocation(line: 401, column: 9, scope: !5050)
!5052 = !DILocation(line: 401, column: 6, scope: !5031)
!5053 = !DILocation(line: 402, column: 23, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5050, file: !2576, line: 401, column: 16)
!5055 = !DILocation(line: 403, column: 9, scope: !5054)
!5056 = !DILocation(line: 403, column: 21, scope: !5054)
!5057 = !DILocation(line: 405, column: 11, scope: !5054)
!5058 = !DILocation(line: 404, column: 21, scope: !5054)
!5059 = !DILocation(line: 406, column: 2, scope: !5054)
!5060 = !DILocation(line: 409, column: 1, scope: !5031)
!5061 = distinct !DISubprogram(name: "extract_prec", scope: !2576, file: !2576, line: 420, type: !4850, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !5062)
!5062 = !{!5063, !5064, !5065}
!5063 = !DILocalVariable(name: "conv", arg: 1, scope: !5061, file: !2576, line: 420, type: !4506)
!5064 = !DILocalVariable(name: "sp", arg: 2, scope: !5061, file: !2576, line: 421, type: !155)
!5065 = !DILocalVariable(name: "prec", scope: !5061, file: !2576, line: 435, type: !356)
!5066 = !DILocation(line: 0, scope: !5061)
!5067 = !DILocation(line: 423, column: 24, scope: !5061)
!5068 = !DILocation(line: 423, column: 28, scope: !5061)
!5069 = !DILocation(line: 423, column: 8, scope: !5061)
!5070 = !DILocation(line: 423, column: 21, scope: !5061)
!5071 = !DILocation(line: 425, column: 6, scope: !5061)
!5072 = !DILocation(line: 428, column: 2, scope: !5061)
!5073 = !DILocation(line: 430, column: 6, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5061, file: !2576, line: 430, column: 6)
!5075 = !DILocation(line: 430, column: 10, scope: !5074)
!5076 = !DILocation(line: 430, column: 6, scope: !5061)
!5077 = !DILocation(line: 431, column: 19, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5074, file: !2576, line: 430, column: 18)
!5079 = !DILocation(line: 432, column: 10, scope: !5078)
!5080 = !DILocation(line: 432, column: 3, scope: !5078)
!5081 = !DILocation(line: 435, column: 16, scope: !5061)
!5082 = !DILocation(line: 437, column: 8, scope: !5061)
!5083 = !DILocation(line: 437, column: 19, scope: !5061)
!5084 = !DILocation(line: 439, column: 10, scope: !5061)
!5085 = !DILocation(line: 438, column: 20, scope: !5061)
!5086 = !DILocation(line: 441, column: 9, scope: !5061)
!5087 = !DILocation(line: 442, column: 1, scope: !5061)
!5088 = distinct !DISubprogram(name: "extract_length", scope: !2576, file: !2576, line: 453, type: !4850, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !5089)
!5089 = !{!5090, !5091}
!5090 = !DILocalVariable(name: "conv", arg: 1, scope: !5088, file: !2576, line: 453, type: !4506)
!5091 = !DILocalVariable(name: "sp", arg: 2, scope: !5088, file: !2576, line: 454, type: !155)
!5092 = !DILocation(line: 0, scope: !5088)
!5093 = !DILocation(line: 456, column: 10, scope: !5088)
!5094 = !DILocation(line: 456, column: 2, scope: !5088)
!5095 = !DILocation(line: 458, column: 8, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !2576, line: 458, column: 7)
!5097 = distinct !DILexicalBlock(scope: !5088, file: !2576, line: 456, column: 15)
!5098 = !DILocation(line: 458, column: 7, scope: !5096)
!5099 = !DILocation(line: 458, column: 13, scope: !5096)
!5100 = !DILocation(line: 0, scope: !5096)
!5101 = !DILocation(line: 458, column: 7, scope: !5097)
!5102 = !DILocation(line: 459, column: 21, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5096, file: !2576, line: 458, column: 21)
!5104 = !DILocation(line: 460, column: 4, scope: !5103)
!5105 = !DILocation(line: 461, column: 3, scope: !5103)
!5106 = !DILocation(line: 462, column: 21, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5096, file: !2576, line: 461, column: 10)
!5108 = !DILocation(line: 466, column: 8, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5097, file: !2576, line: 466, column: 7)
!5110 = !DILocation(line: 466, column: 7, scope: !5109)
!5111 = !DILocation(line: 466, column: 13, scope: !5109)
!5112 = !DILocation(line: 0, scope: !5109)
!5113 = !DILocation(line: 466, column: 7, scope: !5097)
!5114 = !DILocation(line: 467, column: 21, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5109, file: !2576, line: 466, column: 21)
!5116 = !DILocation(line: 468, column: 4, scope: !5115)
!5117 = !DILocation(line: 469, column: 3, scope: !5115)
!5118 = !DILocation(line: 470, column: 21, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5109, file: !2576, line: 469, column: 10)
!5120 = !DILocation(line: 474, column: 9, scope: !5097)
!5121 = !DILocation(line: 474, column: 20, scope: !5097)
!5122 = !DILocation(line: 475, column: 3, scope: !5097)
!5123 = !DILocation(line: 476, column: 3, scope: !5097)
!5124 = !DILocation(line: 478, column: 9, scope: !5097)
!5125 = !DILocation(line: 478, column: 20, scope: !5097)
!5126 = !DILocation(line: 479, column: 3, scope: !5097)
!5127 = !DILocation(line: 480, column: 3, scope: !5097)
!5128 = !DILocation(line: 482, column: 9, scope: !5097)
!5129 = !DILocation(line: 482, column: 20, scope: !5097)
!5130 = !DILocation(line: 483, column: 3, scope: !5097)
!5131 = !DILocation(line: 484, column: 3, scope: !5097)
!5132 = !DILocation(line: 486, column: 9, scope: !5097)
!5133 = !DILocation(line: 486, column: 20, scope: !5097)
!5134 = !DILocation(line: 487, column: 3, scope: !5097)
!5135 = !DILocation(line: 492, column: 21, scope: !5097)
!5136 = !DILocation(line: 493, column: 3, scope: !5097)
!5137 = !DILocation(line: 495, column: 9, scope: !5097)
!5138 = !DILocation(line: 495, column: 20, scope: !5097)
!5139 = !DILocation(line: 496, column: 3, scope: !5097)
!5140 = !DILocation(line: 498, column: 2, scope: !5088)
!5141 = distinct !DISubprogram(name: "extract_specifier", scope: !2576, file: !2576, line: 513, type: !4850, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !5142)
!5142 = !{!5143, !5144, !5145, !5146}
!5143 = !DILocalVariable(name: "conv", arg: 1, scope: !5141, file: !2576, line: 513, type: !4506)
!5144 = !DILocalVariable(name: "sp", arg: 2, scope: !5141, file: !2576, line: 514, type: !155)
!5145 = !DILocalVariable(name: "unsupported", scope: !5141, file: !2576, line: 516, type: !166)
!5146 = !DILabel(scope: !5147, name: "int_conv", file: !2576, line: 526)
!5147 = distinct !DILexicalBlock(scope: !5141, file: !2576, line: 520, column: 27)
!5148 = !DILocation(line: 0, scope: !5141)
!5149 = !DILocation(line: 518, column: 20, scope: !5141)
!5150 = !DILocation(line: 518, column: 8, scope: !5141)
!5151 = !DILocation(line: 518, column: 18, scope: !5141)
!5152 = !DILocation(line: 520, column: 2, scope: !5141)
!5153 = !DILocation(line: 525, column: 3, scope: !5147)
!5154 = !DILocation(line: 0, scope: !5147)
!5155 = !DILocation(line: 526, column: 1, scope: !5147)
!5156 = !DILocation(line: 528, column: 24, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5147, file: !2576, line: 528, column: 7)
!5158 = !DILocation(line: 528, column: 7, scope: !5147)
!5159 = !DILocation(line: 535, column: 23, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5147, file: !2576, line: 535, column: 7)
!5161 = !DILocation(line: 535, column: 7, scope: !5147)
!5162 = !DILocation(line: 536, column: 36, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5160, file: !2576, line: 535, column: 31)
!5164 = !DILocation(line: 537, column: 3, scope: !5163)
!5165 = !DILocation(line: 570, column: 9, scope: !5147)
!5166 = !DILocation(line: 570, column: 23, scope: !5147)
!5167 = !DILocation(line: 575, column: 4, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5169, file: !2576, line: 573, column: 48)
!5169 = distinct !DILexicalBlock(scope: !5147, file: !2576, line: 573, column: 7)
!5170 = !DILocation(line: 603, column: 9, scope: !5147)
!5171 = !DILocation(line: 603, column: 23, scope: !5147)
!5172 = !DILocation(line: 605, column: 24, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5147, file: !2576, line: 605, column: 7)
!5174 = !DILocation(line: 605, column: 7, scope: !5147)
!5175 = !DILocation(line: 612, column: 9, scope: !5147)
!5176 = !DILocation(line: 612, column: 23, scope: !5147)
!5177 = !DILocation(line: 619, column: 24, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5147, file: !2576, line: 619, column: 7)
!5179 = !DILocation(line: 619, column: 7, scope: !5147)
!5180 = !DILocation(line: 625, column: 9, scope: !5147)
!5181 = !DILocation(line: 625, column: 17, scope: !5147)
!5182 = !DILocation(line: 626, column: 3, scope: !5147)
!5183 = !DILocation(line: 629, column: 20, scope: !5141)
!5184 = !DILocation(line: 629, column: 8, scope: !5141)
!5185 = !DILocation(line: 518, column: 23, scope: !5141)
!5186 = !DILocation(line: 631, column: 2, scope: !5141)
!5187 = distinct !DISubprogram(name: "extract_decimal", scope: !2576, file: !2576, line: 318, type: !5188, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !5191)
!5188 = !DISubroutineType(types: !5189)
!5189 = !{!356, !5190}
!5190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!5191 = !{!5192, !5193, !5194}
!5192 = !DILocalVariable(name: "str", arg: 1, scope: !5187, file: !2576, line: 318, type: !5190)
!5193 = !DILocalVariable(name: "sp", scope: !5187, file: !2576, line: 320, type: !155)
!5194 = !DILocalVariable(name: "val", scope: !5187, file: !2576, line: 321, type: !356)
!5195 = !DILocation(line: 0, scope: !5187)
!5196 = !DILocation(line: 320, column: 19, scope: !5187)
!5197 = !DILocation(line: 323, column: 37, scope: !5187)
!5198 = !DILocation(line: 323, column: 17, scope: !5187)
!5199 = !DILocation(line: 323, column: 9, scope: !5187)
!5200 = !DILocation(line: 323, column: 2, scope: !5187)
!5201 = !DILocation(line: 324, column: 13, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5187, file: !2576, line: 323, column: 43)
!5203 = !DILocation(line: 324, column: 24, scope: !5202)
!5204 = !DILocation(line: 324, column: 19, scope: !5202)
!5205 = !DILocation(line: 324, column: 27, scope: !5202)
!5206 = distinct !{!5206, !5200, !5207}
!5207 = !DILocation(line: 325, column: 2, scope: !5187)
!5208 = !DILocation(line: 326, column: 7, scope: !5187)
!5209 = !DILocation(line: 327, column: 2, scope: !5187)
!5210 = distinct !DISubprogram(name: "isdigit", scope: !4989, file: !4989, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2572, retainedNodes: !5211)
!5211 = !{!5212}
!5212 = !DILocalVariable(name: "a", arg: 1, scope: !5210, file: !4989, line: 43, type: !103)
!5213 = !DILocation(line: 0, scope: !5210)
!5214 = !DILocation(line: 45, column: 29, scope: !5210)
!5215 = !DILocation(line: 45, column: 45, scope: !5210)
!5216 = !DILocation(line: 45, column: 2, scope: !5210)
!5217 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5218, file: !5218, line: 9, type: !3232, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !473)
!5218 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!5219 = !DILocation(line: 11, column: 1, scope: !5217)
!5220 = !{i64 2147561330, i64 2147561373, i64 2147561413}
!5221 = !DILocation(line: 12, column: 1, scope: !5217)
!5222 = !{i64 2147565557, i64 2147565600, i64 2147565640}
!5223 = !DILocation(line: 13, column: 1, scope: !5217)
!5224 = !{i64 2147565766, i64 2147565809, i64 2147565849}
!5225 = !DILocation(line: 14, column: 1, scope: !5217)
!5226 = !{i64 2147565983, i64 2147566026, i64 2147566066}
!5227 = !DILocation(line: 15, column: 1, scope: !5217)
!5228 = !{i64 2147566152, i64 2147566195, i64 2147566235}
!5229 = !DILocation(line: 16, column: 1, scope: !5217)
!5230 = !{i64 2147566315, i64 2147566358, i64 2147566398}
!5231 = !DILocation(line: 17, column: 1, scope: !5217)
!5232 = !{i64 2147566499, i64 2147566542, i64 2147566582}
!5233 = !DILocation(line: 18, column: 1, scope: !5217)
!5234 = !{i64 2147566678, i64 2147566721, i64 2147566761}
!5235 = !DILocation(line: 19, column: 1, scope: !5217)
!5236 = !{i64 2147566920, i64 2147566963, i64 2147567003}
!5237 = !DILocation(line: 20, column: 1, scope: !5217)
!5238 = !{i64 2147567155, i64 2147567198, i64 2147567238}
!5239 = !DILocation(line: 21, column: 1, scope: !5217)
!5240 = !{i64 2147567341, i64 2147567384, i64 2147567424}
!5241 = !DILocation(line: 22, column: 1, scope: !5217)
!5242 = !{i64 2147567557, i64 2147567600, i64 2147567640}
!5243 = !DILocation(line: 23, column: 1, scope: !5217)
!5244 = !{i64 2147567760, i64 2147567803, i64 2147567843}
!5245 = !DILocation(line: 24, column: 1, scope: !5217)
!5246 = !{i64 2147567963, i64 2147568006, i64 2147568046}
!5247 = !DILocation(line: 25, column: 1, scope: !5217)
!5248 = !{i64 2147568138, i64 2147568181, i64 2147568221}
!5249 = !DILocation(line: 26, column: 1, scope: !5217)
!5250 = !{i64 2147568346, i64 2147568389, i64 2147568429}
!5251 = !DILocation(line: 27, column: 1, scope: !5217)
!5252 = !{i64 2147568550, i64 2147568593, i64 2147568633}
!5253 = !DILocation(line: 28, column: 1, scope: !5217)
!5254 = !{i64 2147568743, i64 2147568786, i64 2147568826}
!5255 = !DILocation(line: 29, column: 1, scope: !5217)
!5256 = !{i64 2147568945, i64 2147568988, i64 2147569028}
!5257 = !DILocation(line: 30, column: 1, scope: !5217)
!5258 = !{i64 2147569172, i64 2147569215, i64 2147569255}
!5259 = !DILocation(line: 31, column: 1, scope: !5217)
!5260 = !{i64 2147569374, i64 2147569417, i64 2147569457}
!5261 = !DILocation(line: 32, column: 1, scope: !5217)
!5262 = !{i64 2147569589, i64 2147569632, i64 2147569672}
!5263 = !DILocation(line: 33, column: 1, scope: !5217)
!5264 = !{i64 2147569761, i64 2147569804, i64 2147569844}
!5265 = !DILocation(line: 34, column: 1, scope: !5217)
!5266 = !{i64 2147569963, i64 2147570006, i64 2147570046}
!5267 = !DILocation(line: 35, column: 1, scope: !5217)
!5268 = !{i64 2147570189, i64 2147570232, i64 2147570272}
!5269 = !DILocation(line: 36, column: 1, scope: !5217)
!5270 = !{i64 2147570388, i64 2147570431, i64 2147570471}
!5271 = !DILocation(line: 37, column: 1, scope: !5217)
!5272 = !{i64 2147570563, i64 2147570606, i64 2147570646}
!5273 = !DILocation(line: 38, column: 1, scope: !5217)
!5274 = !{i64 2147570816, i64 2147570859, i64 2147570899}
!5275 = !DILocation(line: 39, column: 1, scope: !5217)
!5276 = !{i64 2147571057, i64 2147571100, i64 2147571140}
!5277 = !DILocation(line: 40, column: 1, scope: !5217)
!5278 = !{i64 2147571292, i64 2147571335, i64 2147571375}
!5279 = !DILocation(line: 41, column: 1, scope: !5217)
!5280 = !{i64 2147571524, i64 2147571567, i64 2147571607}
!5281 = !DILocation(line: 42, column: 1, scope: !5217)
!5282 = !{i64 2147571750, i64 2147571793, i64 2147571833}
!5283 = !DILocation(line: 43, column: 1, scope: !5217)
!5284 = !{i64 2147571976, i64 2147572019, i64 2147572059}
!5285 = !DILocation(line: 44, column: 1, scope: !5217)
!5286 = !{i64 2147572202, i64 2147572245, i64 2147572285}
!5287 = !DILocation(line: 45, column: 1, scope: !5217)
!5288 = !{i64 2147572437, i64 2147572480, i64 2147572520}
!5289 = !DILocation(line: 46, column: 1, scope: !5217)
!5290 = !{i64 2147572675, i64 2147572718, i64 2147572758}
!5291 = !DILocation(line: 47, column: 1, scope: !5217)
!5292 = !{i64 2147572949, i64 2147572992, i64 2147573032}
!5293 = !DILocation(line: 48, column: 1, scope: !5217)
!5294 = !{i64 2147573187, i64 2147573230, i64 2147573270}
!5295 = !DILocation(line: 49, column: 1, scope: !5217)
!5296 = !{i64 2147573431, i64 2147573474, i64 2147573514}
!5297 = !DILocation(line: 50, column: 1, scope: !5217)
!5298 = !{i64 2147573681, i64 2147573724, i64 2147573764}
!5299 = !DILocation(line: 51, column: 1, scope: !5217)
!5300 = !{i64 2147573928, i64 2147573971, i64 2147574011}
!5301 = !DILocation(line: 52, column: 1, scope: !5217)
!5302 = !{i64 2147574163, i64 2147574206, i64 2147574246}
!5303 = !DILocation(line: 53, column: 1, scope: !5217)
!5304 = !{i64 2147578459, i64 2147578502, i64 2147578542}
!5305 = !DILocation(line: 54, column: 1, scope: !5217)
!5306 = !{i64 2147578694, i64 2147578737, i64 2147578777}
!5307 = !DILocation(line: 55, column: 1, scope: !5217)
!5308 = !{i64 2147578932, i64 2147578975, i64 2147579015}
!5309 = !DILocation(line: 56, column: 1, scope: !5217)
!5310 = !{i64 2147579173, i64 2147579216, i64 2147579256}
!5311 = !DILocation(line: 57, column: 1, scope: !5217)
!5312 = !{i64 2147579453, i64 2147579496, i64 2147579536}
!5313 = !DILocation(line: 58, column: 1, scope: !5217)
!5314 = !{i64 2147579712, i64 2147579755, i64 2147579795}
!5315 = !DILocation(line: 59, column: 1, scope: !5217)
!5316 = !{i64 2147579938, i64 2147579981, i64 2147580021}
!5317 = !DILocation(line: 60, column: 1, scope: !5217)
!5318 = !{i64 2147580176, i64 2147580219, i64 2147580259}
!5319 = !DILocation(line: 61, column: 1, scope: !5217)
!5320 = !{i64 2147580405, i64 2147580448, i64 2147580488}
!5321 = !DILocation(line: 62, column: 1, scope: !5217)
!5322 = !{i64 2147580613, i64 2147580656, i64 2147580696}
!5323 = !DILocation(line: 63, column: 1, scope: !5217)
!5324 = !{i64 2147580824, i64 2147580867, i64 2147580907}
!5325 = !DILocation(line: 64, column: 1, scope: !5217)
!5326 = !{i64 2147581059, i64 2147581102, i64 2147581142}
!5327 = !DILocation(line: 65, column: 1, scope: !5217)
!5328 = !{i64 2147581288, i64 2147581331, i64 2147581371}
!5329 = !DILocation(line: 66, column: 1, scope: !5217)
!5330 = !{i64 2147581526, i64 2147581569, i64 2147581609}
!5331 = !DILocation(line: 67, column: 1, scope: !5217)
!5332 = !{i64 2147581758, i64 2147581801, i64 2147581841}
!5333 = !DILocation(line: 68, column: 1, scope: !5217)
!5334 = !{i64 2147581984, i64 2147582027, i64 2147582067}
!5335 = !DILocation(line: 69, column: 1, scope: !5217)
!5336 = !{i64 2147582201, i64 2147582244, i64 2147582284}
!5337 = !DILocation(line: 70, column: 1, scope: !5217)
!5338 = !{i64 2147582433, i64 2147582476, i64 2147582516}
!5339 = !DILocation(line: 71, column: 1, scope: !5217)
!5340 = !{i64 2147582659, i64 2147582702, i64 2147582742}
!5341 = !DILocation(line: 72, column: 1, scope: !5217)
!5342 = !{i64 2147582873, i64 2147582916, i64 2147582956}
!5343 = !DILocation(line: 73, column: 1, scope: !5217)
!5344 = !{i64 2147583093, i64 2147583136, i64 2147583176}
!5345 = !DILocation(line: 74, column: 1, scope: !5217)
!5346 = !{i64 2147583325, i64 2147583368, i64 2147583408}
!5347 = !DILocation(line: 75, column: 1, scope: !5217)
!5348 = !{i64 2147583533, i64 2147583576, i64 2147583616}
!5349 = !DILocation(line: 76, column: 1, scope: !5217)
!5350 = !{i64 2147583738, i64 2147583781, i64 2147583821}
!5351 = !DILocation(line: 77, column: 1, scope: !5217)
!5352 = !{i64 2147583955, i64 2147583998, i64 2147584038}
!5353 = !DILocation(line: 78, column: 1, scope: !5217)
!5354 = !{i64 2147584169, i64 2147584212, i64 2147584252}
!5355 = !DILocation(line: 79, column: 1, scope: !5217)
!5356 = !{i64 2147584395, i64 2147584438, i64 2147584478}
!5357 = !DILocation(line: 80, column: 1, scope: !5217)
!5358 = !{i64 2147584615, i64 2147584658, i64 2147584698}
!5359 = !DILocation(line: 81, column: 1, scope: !5217)
!5360 = !{i64 2147584820, i64 2147584863, i64 2147584903}
!5361 = !DILocation(line: 82, column: 1, scope: !5217)
!5362 = !{i64 2147585052, i64 2147585095, i64 2147585135}
!5363 = !DILocation(line: 83, column: 1, scope: !5217)
!5364 = !{i64 2147585287, i64 2147585330, i64 2147585370}
!5365 = !DILocation(line: 84, column: 1, scope: !5217)
!5366 = !{i64 2147585537, i64 2147585580, i64 2147585620}
!5367 = !DILocation(line: 85, column: 1, scope: !5217)
!5368 = !{i64 2147585787, i64 2147585830, i64 2147585870}
!5369 = !DILocation(line: 86, column: 1, scope: !5217)
!5370 = !{i64 2147586025, i64 2147586068, i64 2147586108}
!5371 = !DILocation(line: 87, column: 1, scope: !5217)
!5372 = !{i64 2147586236, i64 2147586279, i64 2147586319}
!5373 = !DILocation(line: 88, column: 1, scope: !5217)
!5374 = !{i64 2147586453, i64 2147586496, i64 2147586536}
!5375 = !DILocation(line: 89, column: 1, scope: !5217)
!5376 = !{i64 2147590710, i64 2147590753, i64 2147590793}
!5377 = !DILocation(line: 90, column: 1, scope: !5217)
!5378 = !{i64 2147590912, i64 2147590955, i64 2147590995}
!5379 = !DILocation(line: 91, column: 1, scope: !5217)
!5380 = !{i64 2147591105, i64 2147591148, i64 2147591188}
!5381 = !DILocation(line: 92, column: 1, scope: !5217)
!5382 = !{i64 2147591313, i64 2147591356, i64 2147591396}
!5383 = !DILocation(line: 93, column: 1, scope: !5217)
!5384 = !{i64 2147591509, i64 2147591552, i64 2147591592}
!5385 = !DILocation(line: 94, column: 1, scope: !5217)
!5386 = !{i64 2147591714, i64 2147591757, i64 2147591797}
!5387 = !DILocation(line: 95, column: 1, scope: !5217)
!5388 = !{i64 2147591925, i64 2147591968, i64 2147592008}
!5389 = !DILocation(line: 96, column: 1, scope: !5217)
!5390 = !{i64 2147592124, i64 2147592167, i64 2147592207}
!5391 = !DILocation(line: 97, column: 1, scope: !5217)
!5392 = !{i64 2147592299, i64 2147592342, i64 2147592382}
!5393 = !DILocation(line: 98, column: 1, scope: !5217)
!5394 = !{i64 2147592483, i64 2147592526, i64 2147592566}
!5395 = !DILocation(line: 99, column: 1, scope: !5217)
!5396 = !{i64 2147592685, i64 2147592728, i64 2147592768}
!5397 = !DILocation(line: 100, column: 1, scope: !5217)
!5398 = !{i64 2147592884, i64 2147592927, i64 2147592967}
!5399 = !DILocation(line: 101, column: 1, scope: !5217)
!5400 = !{i64 2147593050, i64 2147593093, i64 2147593133}
!5401 = !DILocation(line: 102, column: 1, scope: !5217)
!5402 = !{i64 2147593234, i64 2147593277, i64 2147593317}
!5403 = !DILocation(line: 103, column: 1, scope: !5217)
!5404 = !{i64 2147593424, i64 2147593467, i64 2147593507}
!5405 = !DILocation(line: 104, column: 1, scope: !5217)
!5406 = !{i64 2147593608, i64 2147593651, i64 2147593691}
!5407 = !DILocation(line: 105, column: 1, scope: !5217)
!5408 = !{i64 2147593822, i64 2147593865, i64 2147593905}
!5409 = !DILocation(line: 106, column: 1, scope: !5217)
!5410 = !{i64 2147594033, i64 2147594076, i64 2147594116}
!5411 = !DILocation(line: 107, column: 1, scope: !5217)
!5412 = !{i64 2147594256, i64 2147594299, i64 2147594339}
!5413 = !DILocation(line: 108, column: 1, scope: !5217)
!5414 = !{i64 2147594440, i64 2147594483, i64 2147594523}
!5415 = !DILocation(line: 109, column: 1, scope: !5217)
!5416 = !{i64 2147594654, i64 2147594697, i64 2147594737}
!5417 = !DILocation(line: 110, column: 1, scope: !5217)
!5418 = !{i64 2147594820, i64 2147594863, i64 2147594903}
!5419 = !DILocation(line: 111, column: 1, scope: !5217)
!5420 = !{i64 2147595001, i64 2147595044, i64 2147595084}
!5421 = !DILocation(line: 112, column: 1, scope: !5217)
!5422 = !{i64 2147595194, i64 2147595237, i64 2147595277}
!5423 = !DILocation(line: 113, column: 1, scope: !5217)
!5424 = !{i64 2147595420, i64 2147595463, i64 2147595503}
!5425 = !DILocation(line: 114, column: 1, scope: !5217)
!5426 = !{i64 2147595634, i64 2147595677, i64 2147595717}
!5427 = !DILocation(line: 115, column: 1, scope: !5217)
!5428 = !{i64 2147595860, i64 2147595903, i64 2147595943}
!5429 = !DILocation(line: 116, column: 1, scope: !5217)
!5430 = !{i64 2147596077, i64 2147596120, i64 2147596160}
!5431 = !DILocation(line: 117, column: 1, scope: !5217)
!5432 = !{i64 2147596354, i64 2147596397, i64 2147596437}
!5433 = !DILocation(line: 118, column: 1, scope: !5217)
!5434 = !{i64 2147596580, i64 2147596623, i64 2147596663}
!5435 = !DILocation(line: 119, column: 1, scope: !5217)
!5436 = !{i64 2147596788, i64 2147596831, i64 2147596871}
!5437 = !DILocation(line: 120, column: 1, scope: !5217)
!5438 = !{i64 2147596984, i64 2147597027, i64 2147597067}
!5439 = !DILocation(line: 121, column: 1, scope: !5217)
!5440 = !{i64 2147597249, i64 2147597292, i64 2147597332}
!5441 = !DILocation(line: 122, column: 1, scope: !5217)
!5442 = !{i64 2147597463, i64 2147597506, i64 2147597546}
!5443 = !DILocation(line: 123, column: 1, scope: !5217)
!5444 = !{i64 2147597638, i64 2147597681, i64 2147597721}
!5445 = !DILocation(line: 124, column: 1, scope: !5217)
!5446 = !{i64 2147597892, i64 2147597935, i64 2147597975}
!5447 = !DILocation(line: 125, column: 1, scope: !5217)
!5448 = !{i64 2147598091, i64 2147598134, i64 2147598174}
!5449 = !DILocation(line: 126, column: 1, scope: !5217)
!5450 = !{i64 2147598333, i64 2147598376, i64 2147598416}
!5451 = !DILocation(line: 127, column: 1, scope: !5217)
!5452 = !{i64 2147598496, i64 2147598539, i64 2147598579}
!5453 = !DILocation(line: 128, column: 1, scope: !5217)
!5454 = !{i64 2147598683, i64 2147598726, i64 2147598766}
!5455 = !DILocation(line: 129, column: 1, scope: !5217)
!5456 = !{i64 2147598876, i64 2147598919, i64 2147598959}
!5457 = !DILocation(line: 130, column: 1, scope: !5217)
!5458 = !{i64 2147599059, i64 2147599102, i64 2147599142}
!5459 = !DILocation(line: 131, column: 1, scope: !5217)
!5460 = !{i64 2147599273, i64 2147599316, i64 2147599356}
!5461 = !DILocation(line: 132, column: 1, scope: !5217)
!5462 = !{i64 2147599484, i64 2147599527, i64 2147599567}
!5463 = !DILocation(line: 133, column: 1, scope: !5217)
!5464 = !{i64 2147599704, i64 2147599747, i64 2147599787}
!5465 = !DILocation(line: 134, column: 1, scope: !5217)
!5466 = !{i64 2147599911, i64 2147599954, i64 2147599994}
!5467 = !DILocation(line: 135, column: 1, scope: !5217)
!5468 = !{i64 2147604245, i64 2147604288, i64 2147604328}
!5469 = !DILocation(line: 136, column: 1, scope: !5217)
!5470 = !{i64 2147604493, i64 2147604536, i64 2147604576}
!5471 = !DILocation(line: 137, column: 1, scope: !5217)
!5472 = !{i64 2147604692, i64 2147604735, i64 2147604775}
!5473 = !DILocation(line: 138, column: 1, scope: !5217)
!5474 = !{i64 2147604927, i64 2147604970, i64 2147605010}
!5475 = !DILocation(line: 139, column: 1, scope: !5217)
!5476 = !{i64 2147605177, i64 2147605220, i64 2147605260}
!5477 = !DILocation(line: 140, column: 1, scope: !5217)
!5478 = !{i64 2147605379, i64 2147605422, i64 2147605462}
!5479 = !DILocation(line: 141, column: 1, scope: !5217)
!5480 = !{i64 2147605602, i64 2147605645, i64 2147605685}
!5481 = !DILocation(line: 142, column: 1, scope: !5217)
!5482 = !{i64 2147605816, i64 2147605859, i64 2147605899}
!5483 = !DILocation(line: 143, column: 1, scope: !5217)
!5484 = !{i64 2147606060, i64 2147606103, i64 2147606143}
!5485 = !DILocation(line: 144, column: 1, scope: !5217)
!5486 = !{i64 2147606289, i64 2147606332, i64 2147606372}
!5487 = !DILocation(line: 145, column: 1, scope: !5217)
!5488 = !{i64 2147606518, i64 2147606561, i64 2147606601}
!5489 = !DILocation(line: 146, column: 1, scope: !5217)
!5490 = !{i64 2147606726, i64 2147606769, i64 2147606809}
!5491 = !DILocation(line: 147, column: 1, scope: !5217)
!5492 = !{i64 2147606964, i64 2147607007, i64 2147607047}
!5493 = !DILocation(line: 148, column: 1, scope: !5217)
!5494 = !{i64 2147607190, i64 2147607233, i64 2147607273}
!5495 = !DILocation(line: 149, column: 1, scope: !5217)
!5496 = !{i64 2147607449, i64 2147607492, i64 2147607532}
!5497 = !DILocation(line: 150, column: 1, scope: !5217)
!5498 = !{i64 2147607669, i64 2147607712, i64 2147607752}
!5499 = !DILocation(line: 151, column: 1, scope: !5217)
!5500 = !{i64 2147607901, i64 2147607944, i64 2147607984}
!5501 = !DILocation(line: 152, column: 1, scope: !5217)
!5502 = !{i64 2147608142, i64 2147608185, i64 2147608225}
!5503 = !DILocation(line: 153, column: 1, scope: !5217)
!5504 = !{i64 2147608383, i64 2147608426, i64 2147608466}
!5505 = !DILocation(line: 154, column: 1, scope: !5217)
!5506 = !{i64 2147608606, i64 2147608649, i64 2147608689}
!5507 = !DILocation(line: 155, column: 1, scope: !5217)
!5508 = !{i64 2147608823, i64 2147608866, i64 2147608906}
!5509 = !DILocation(line: 156, column: 1, scope: !5217)
!5510 = !{i64 2147609064, i64 2147609107, i64 2147609147}
!5511 = !DILocation(line: 157, column: 1, scope: !5217)
!5512 = !{i64 2147609251, i64 2147609294, i64 2147609334}
!5513 = !DILocation(line: 158, column: 1, scope: !5217)
!5514 = !{i64 2147609438, i64 2147609481, i64 2147609521}
!5515 = !DILocation(line: 159, column: 1, scope: !5217)
!5516 = !{i64 2147609601, i64 2147609644, i64 2147609684}
!5517 = !DILocation(line: 160, column: 1, scope: !5217)
!5518 = !{i64 2147609860, i64 2147609903, i64 2147609943}
!5519 = !DILocation(line: 161, column: 1, scope: !5217)
!5520 = !{i64 2147610083, i64 2147610126, i64 2147610166}
!5521 = !DILocation(line: 162, column: 1, scope: !5217)
!5522 = !{i64 2147610312, i64 2147610355, i64 2147610395}
!5523 = !DILocation(line: 163, column: 1, scope: !5217)
!5524 = !{i64 2147610508, i64 2147610551, i64 2147610591}
!5525 = !DILocation(line: 164, column: 1, scope: !5217)
!5526 = !{i64 2147610720, i64 2147610763, i64 2147610803}
!5527 = !DILocation(line: 165, column: 1, scope: !5217)
!5528 = !{i64 2147610941, i64 2147610984, i64 2147611024}
!5529 = !DILocation(line: 166, column: 1, scope: !5217)
!5530 = !{i64 2147611155, i64 2147611198, i64 2147611238}
!5531 = !DILocation(line: 167, column: 1, scope: !5217)
!5532 = !{i64 2147611345, i64 2147611388, i64 2147611428}
!5533 = !DILocation(line: 168, column: 1, scope: !5217)
!5534 = !{i64 2147611544, i64 2147611587, i64 2147611627}
!5535 = !DILocation(line: 169, column: 1, scope: !5217)
!5536 = !{i64 2147611749, i64 2147611792, i64 2147611832}
!5537 = !DILocation(line: 170, column: 1, scope: !5217)
!5538 = !{i64 2147611969, i64 2147612012, i64 2147612052}
!5539 = !DILocation(line: 171, column: 1, scope: !5217)
!5540 = !{i64 2147612170, i64 2147612213, i64 2147612253}
!5541 = !DILocation(line: 172, column: 1, scope: !5217)
!5542 = !{i64 2147612369, i64 2147612412, i64 2147612452}
!5543 = !DILocation(line: 173, column: 1, scope: !5217)
!5544 = !{i64 2147616635, i64 2147616678, i64 2147616718}
!5545 = !DILocation(line: 174, column: 1, scope: !5217)
!5546 = !{i64 2147616804, i64 2147616847, i64 2147616887}
!5547 = !DILocation(line: 175, column: 1, scope: !5217)
!5548 = !{i64 2147616988, i64 2147617031, i64 2147617071}
!5549 = !DILocation(line: 176, column: 1, scope: !5217)
!5550 = !{i64 2147617172, i64 2147617215, i64 2147617255}
!5551 = !DILocation(line: 177, column: 1, scope: !5217)
!5552 = !{i64 2147617359, i64 2147617402, i64 2147617442}
!5553 = !DILocation(line: 178, column: 1, scope: !5217)
!5554 = !{i64 2147617543, i64 2147617586, i64 2147617626}
!5555 = !DILocation(line: 179, column: 1, scope: !5217)
!5556 = !{i64 2147617781, i64 2147617824, i64 2147617864}
!5557 = !DILocation(line: 180, column: 1, scope: !5217)
!5558 = !{i64 2147618011, i64 2147618054, i64 2147618094}
!5559 = !DILocation(line: 181, column: 1, scope: !5217)
!5560 = !{i64 2147618240, i64 2147618283, i64 2147618323}
!5561 = !DILocation(line: 182, column: 1, scope: !5217)
!5562 = !{i64 2147618427, i64 2147618470, i64 2147618510}
!5563 = !DILocation(line: 183, column: 1, scope: !5217)
!5564 = !{i64 2147618623, i64 2147618666, i64 2147618706}
!5565 = !DILocation(line: 184, column: 1, scope: !5217)
!5566 = !{i64 2147618831, i64 2147618874, i64 2147618914}
!5567 = !DILocation(line: 185, column: 1, scope: !5217)
!5568 = !{i64 2147619043, i64 2147619086, i64 2147619126}
!5569 = !DILocation(line: 186, column: 1, scope: !5217)
!5570 = !{i64 2147619242, i64 2147619285, i64 2147619325}
!5571 = !DILocation(line: 187, column: 1, scope: !5217)
!5572 = !{i64 2147619480, i64 2147619523, i64 2147619563}
!5573 = !DILocation(line: 188, column: 1, scope: !5217)
!5574 = !{i64 2147619676, i64 2147619719, i64 2147619759}
!5575 = !DILocation(line: 189, column: 1, scope: !5217)
!5576 = !{i64 2147619878, i64 2147619921, i64 2147619961}
!5577 = !DILocation(line: 190, column: 1, scope: !5217)
!5578 = !{i64 2147620071, i64 2147620114, i64 2147620154}
!5579 = !DILocation(line: 191, column: 1, scope: !5217)
!5580 = !{i64 2147620305, i64 2147620348, i64 2147620388}
!5581 = !DILocation(line: 192, column: 1, scope: !5217)
!5582 = !{i64 2147620468, i64 2147620511, i64 2147620551}
!5583 = !DILocation(line: 193, column: 1, scope: !5217)
!5584 = !{i64 2147620707, i64 2147620750, i64 2147620790}
!5585 = !DILocation(line: 194, column: 1, scope: !5217)
!5586 = !{i64 2147620946, i64 2147620989, i64 2147621029}
!5587 = !DILocation(line: 195, column: 1, scope: !5217)
!5588 = !{i64 2147621182, i64 2147621225, i64 2147621265}
!5589 = !DILocation(line: 196, column: 1, scope: !5217)
!5590 = !{i64 2147621412, i64 2147621455, i64 2147621495}
!5591 = !DILocation(line: 197, column: 1, scope: !5217)
!5592 = !{i64 2147621599, i64 2147621642, i64 2147621682}
!5593 = !DILocation(line: 198, column: 1, scope: !5217)
!5594 = !{i64 2147621798, i64 2147621841, i64 2147621881}
!5595 = !DILocation(line: 199, column: 1, scope: !5217)
!5596 = !{i64 2147622069, i64 2147622112, i64 2147622152}
!5597 = !DILocation(line: 200, column: 1, scope: !5217)
!5598 = !{i64 2147622244, i64 2147622287, i64 2147622327}
!5599 = !DILocation(line: 201, column: 1, scope: !5217)
!5600 = !{i64 2147622478, i64 2147622521, i64 2147622561}
!5601 = !DILocation(line: 202, column: 1, scope: !5217)
!5602 = !{i64 2147622686, i64 2147622729, i64 2147622769}
!5603 = !DILocation(line: 203, column: 1, scope: !5217)
!5604 = !{i64 2147622885, i64 2147622928, i64 2147622968}
!5605 = !DILocation(line: 204, column: 1, scope: !5217)
!5606 = !{i64 2147623103, i64 2147623146, i64 2147623186}
!5607 = !DILocation(line: 205, column: 1, scope: !5217)
!5608 = !{i64 2147623293, i64 2147623336, i64 2147623376}
!5609 = !DILocation(line: 206, column: 1, scope: !5217)
!5610 = !{i64 2147623540, i64 2147623583, i64 2147623623}
!5611 = !DILocation(line: 207, column: 1, scope: !5217)
!5612 = !{i64 2147623736, i64 2147623779, i64 2147623819}
!5613 = !DILocation(line: 208, column: 1, scope: !5217)
!5614 = !{i64 2147623942, i64 2147623985, i64 2147624025}
!5615 = !DILocation(line: 209, column: 1, scope: !5217)
!5616 = !{i64 2147624147, i64 2147624190, i64 2147624230}
!5617 = !DILocation(line: 210, column: 1, scope: !5217)
!5618 = !{i64 2147624373, i64 2147624416, i64 2147624456}
!5619 = !DILocation(line: 211, column: 1, scope: !5217)
!5620 = !{i64 2147624605, i64 2147624648, i64 2147624688}
!5621 = !DILocation(line: 212, column: 1, scope: !5217)
!5622 = !{i64 2147624789, i64 2147624832, i64 2147624872}
!5623 = !DILocation(line: 213, column: 1, scope: !5217)
!5624 = !{i64 2147624998, i64 2147625041, i64 2147625081}
!5625 = !DILocation(line: 214, column: 1, scope: !5217)
!5626 = !{i64 2147625182, i64 2147625225, i64 2147625265}
!5627 = !DILocation(line: 215, column: 1, scope: !5217)
!5628 = !{i64 2147625408, i64 2147625451, i64 2147625491}
!5629 = !DILocation(line: 216, column: 1, scope: !5217)
!5630 = !{i64 2147625634, i64 2147625677, i64 2147625717}
!5631 = !DILocation(line: 217, column: 1, scope: !5217)
!5632 = !{i64 2147629921, i64 2147629964, i64 2147630004}
!5633 = !DILocation(line: 218, column: 1, scope: !5217)
!5634 = !{i64 2147630147, i64 2147630190, i64 2147630230}
!5635 = !DILocation(line: 219, column: 1, scope: !5217)
!5636 = !{i64 2147630373, i64 2147630416, i64 2147630456}
!5637 = !DILocation(line: 220, column: 1, scope: !5217)
!5638 = !{i64 2147630605, i64 2147630648, i64 2147630688}
!5639 = !DILocation(line: 221, column: 1, scope: !5217)
!5640 = !{i64 2147630843, i64 2147630886, i64 2147630926}
!5641 = !DILocation(line: 222, column: 1, scope: !5217)
!5642 = !{i64 2147631063, i64 2147631106, i64 2147631146}
!5643 = !DILocation(line: 223, column: 1, scope: !5217)
!5644 = !{i64 2147631307, i64 2147631350, i64 2147631390}
!5645 = !DILocation(line: 224, column: 1, scope: !5217)
!5646 = !{i64 2147631548, i64 2147631591, i64 2147631631}
!5647 = !DILocation(line: 225, column: 1, scope: !5217)
!5648 = !{i64 2147631783, i64 2147631826, i64 2147631866}
!5649 = !DILocation(line: 226, column: 1, scope: !5217)
!5650 = !{i64 2147632015, i64 2147632058, i64 2147632098}
!5651 = !DILocation(line: 227, column: 1, scope: !5217)
!5652 = !{i64 2147632217, i64 2147632260, i64 2147632300}
!5653 = !DILocation(line: 228, column: 1, scope: !5217)
!5654 = !{i64 2147632467, i64 2147632510, i64 2147632550}
!5655 = !DILocation(line: 229, column: 1, scope: !5217)
!5656 = !{i64 2147632705, i64 2147632748, i64 2147632788}
!5657 = !DILocation(line: 230, column: 1, scope: !5217)
!5658 = !{i64 2147632889, i64 2147632932, i64 2147632972}
!5659 = !DILocation(line: 231, column: 1, scope: !5217)
!5660 = !{i64 2147633112, i64 2147633155, i64 2147633195}
!5661 = !DILocation(line: 232, column: 1, scope: !5217)
!5662 = !{i64 2147633350, i64 2147633393, i64 2147633433}
!5663 = !DILocation(line: 233, column: 1, scope: !5217)
!5664 = !{i64 2147633588, i64 2147633631, i64 2147633671}
!5665 = !DILocation(line: 234, column: 1, scope: !5217)
!5666 = !{i64 2147633781, i64 2147633824, i64 2147633864}
!5667 = !DILocation(line: 235, column: 1, scope: !5217)
!5668 = !{i64 2147634034, i64 2147634077, i64 2147634117}
!5669 = !DILocation(line: 236, column: 1, scope: !5217)
!5670 = !{i64 2147634248, i64 2147634291, i64 2147634331}
!5671 = !DILocation(line: 237, column: 1, scope: !5217)
!5672 = !{i64 2147634456, i64 2147634499, i64 2147634539}
!5673 = !DILocation(line: 238, column: 1, scope: !5217)
!5674 = !{i64 2147634646, i64 2147634689, i64 2147634729}
!5675 = !DILocation(line: 239, column: 1, scope: !5217)
!5676 = !{i64 2147634860, i64 2147634903, i64 2147634943}
!5677 = !DILocation(line: 240, column: 1, scope: !5217)
!5678 = !{i64 2147635122, i64 2147635165, i64 2147635205}
!5679 = !DILocation(line: 241, column: 1, scope: !5217)
!5680 = !{i64 2147635333, i64 2147635376, i64 2147635416}
!5681 = !DILocation(line: 242, column: 1, scope: !5217)
!5682 = !{i64 2147635577, i64 2147635620, i64 2147635660}
!5683 = !DILocation(line: 243, column: 1, scope: !5217)
!5684 = !{i64 2147635788, i64 2147635831, i64 2147635871}
!5685 = !DILocation(line: 244, column: 1, scope: !5217)
!5686 = !{i64 2147636017, i64 2147636060, i64 2147636100}
!5687 = !DILocation(line: 245, column: 1, scope: !5217)
!5688 = !{i64 2147636282, i64 2147636325, i64 2147636365}
!5689 = !DILocation(line: 246, column: 1, scope: !5217)
!5690 = !{i64 2147636487, i64 2147636530, i64 2147636570}
!5691 = !DILocation(line: 247, column: 1, scope: !5217)
!5692 = !{i64 2147636683, i64 2147636726, i64 2147636766}
!5693 = !DILocation(line: 248, column: 1, scope: !5217)
!5694 = !{i64 2147636906, i64 2147636949, i64 2147636989}
!5695 = !DILocation(line: 249, column: 1, scope: !5217)
!5696 = !{i64 2147637069, i64 2147637112, i64 2147637152}
!5697 = !DILocation(line: 250, column: 1, scope: !5217)
!5698 = !{i64 2147637274, i64 2147637317, i64 2147637357}
!5699 = !DILocation(line: 251, column: 1, scope: !5217)
!5700 = !{i64 2147637494, i64 2147637537, i64 2147637577}
!5701 = !DILocation(line: 252, column: 1, scope: !5217)
!5702 = !{i64 2147637708, i64 2147637751, i64 2147637791}
!5703 = !DILocation(line: 253, column: 1, scope: !5217)
!5704 = !{i64 2147637922, i64 2147637965, i64 2147638005}
!5705 = !DILocation(line: 254, column: 1, scope: !5217)
!5706 = !{i64 2147638133, i64 2147638176, i64 2147638216}
!5707 = !DILocation(line: 255, column: 1, scope: !5217)
!5708 = !{i64 2147642387, i64 2147642430, i64 2147642470}
!5709 = !DILocation(line: 256, column: 1, scope: !5217)
!5710 = !{i64 2147642586, i64 2147642629, i64 2147642669}
!5711 = !DILocation(line: 257, column: 1, scope: !5217)
!5712 = !{i64 2147642782, i64 2147642825, i64 2147642865}
!5713 = !DILocation(line: 258, column: 1, scope: !5217)
!5714 = !{i64 2147642981, i64 2147643024, i64 2147643064}
!5715 = !DILocation(line: 259, column: 1, scope: !5217)
!5716 = !{i64 2147643205, i64 2147643248, i64 2147643288}
!5717 = !DILocation(line: 260, column: 1, scope: !5217)
!5718 = !{i64 2147643430, i64 2147643473, i64 2147643513}
!5719 = !DILocation(line: 261, column: 1, scope: !5217)
!5720 = !{i64 2147643602, i64 2147643645, i64 2147643685}
!5721 = !DILocation(line: 262, column: 1, scope: !5217)
!5722 = !{i64 2147643795, i64 2147643838, i64 2147643878}
!5723 = !DILocation(line: 263, column: 1, scope: !5217)
!5724 = !{i64 2147643991, i64 2147644034, i64 2147644074}
!5725 = !DILocation(line: 264, column: 1, scope: !5217)
!5726 = !{i64 2147644218, i64 2147644261, i64 2147644301}
!5727 = !DILocation(line: 265, column: 1, scope: !5217)
!5728 = !{i64 2147644435, i64 2147644478, i64 2147644518}
!5729 = !DILocation(line: 266, column: 1, scope: !5217)
!5730 = !{i64 2147644727, i64 2147644770, i64 2147644810}
!5731 = !DILocation(line: 267, column: 1, scope: !5217)
!5732 = !{i64 2147644959, i64 2147645002, i64 2147645042}
!5733 = !DILocation(line: 268, column: 1, scope: !5217)
!5734 = !{i64 2147645176, i64 2147645219, i64 2147645259}
!5735 = !DILocation(line: 269, column: 1, scope: !5217)
!5736 = !{i64 2147645383, i64 2147645426, i64 2147645466}
!5737 = !DILocation(line: 270, column: 1, scope: !5217)
!5738 = !{i64 2147645584, i64 2147645627, i64 2147645667}
!5739 = !DILocation(line: 271, column: 1, scope: !5217)
!5740 = !{i64 2147645816, i64 2147645859, i64 2147645899}
!5741 = !DILocation(line: 272, column: 1, scope: !5217)
!5742 = !{i64 2147646024, i64 2147646067, i64 2147646107}
!5743 = !DILocation(line: 273, column: 1, scope: !5217)
!5744 = !{i64 2147646214, i64 2147646257, i64 2147646297}
!5745 = !DILocation(line: 274, column: 1, scope: !5217)
!5746 = !{i64 2147646440, i64 2147646483, i64 2147646523}
!5747 = !DILocation(line: 275, column: 1, scope: !5217)
!5748 = !{i64 2147646629, i64 2147646672, i64 2147646712}
!5749 = !DILocation(line: 276, column: 1, scope: !5217)
!5750 = !{i64 2147646900, i64 2147646943, i64 2147646983}
!5751 = !DILocation(line: 277, column: 1, scope: !5217)
!5752 = !{i64 2147647120, i64 2147647163, i64 2147647203}
!5753 = !DILocation(line: 278, column: 1, scope: !5217)
!5754 = !{i64 2147647373, i64 2147647416, i64 2147647456}
!5755 = !DILocation(line: 279, column: 1, scope: !5217)
!5756 = !{i64 2147647581, i64 2147647624, i64 2147647664}
!5757 = !DILocation(line: 280, column: 1, scope: !5217)
!5758 = !{i64 2147647813, i64 2147647856, i64 2147647896}
!5759 = !DILocation(line: 281, column: 1, scope: !5217)
!5760 = !{i64 2147648024, i64 2147648067, i64 2147648107}
!5761 = !DILocation(line: 282, column: 1, scope: !5217)
!5762 = !{i64 2147648214, i64 2147648257, i64 2147648297}
!5763 = !DILocation(line: 283, column: 1, scope: !5217)
!5764 = !{i64 2147648428, i64 2147648471, i64 2147648511}
!5765 = !DILocation(line: 284, column: 1, scope: !5217)
!5766 = !{i64 2147648627, i64 2147648670, i64 2147648710}
!5767 = !DILocation(line: 285, column: 1, scope: !5217)
!5768 = !{i64 2147648814, i64 2147648857, i64 2147648897}
!5769 = !DILocation(line: 286, column: 1, scope: !5217)
!5770 = !{i64 2147649022, i64 2147649065, i64 2147649105}
!5771 = !DILocation(line: 287, column: 1, scope: !5217)
!5772 = !{i64 2147649251, i64 2147649294, i64 2147649334}
!5773 = !DILocation(line: 288, column: 1, scope: !5217)
!5774 = !{i64 2147649453, i64 2147649496, i64 2147649536}
!5775 = !DILocation(line: 289, column: 1, scope: !5217)
!5776 = !{i64 2147649652, i64 2147649695, i64 2147649735}
!5777 = !DILocation(line: 290, column: 1, scope: !5217)
!5778 = !{i64 2147649869, i64 2147649912, i64 2147649952}
!5779 = !DILocation(line: 292, column: 1, scope: !5217)
!5780 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !140, file: !140, line: 30, type: !147, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5781)
!5781 = !{!5782, !5783}
!5782 = !DILocalVariable(name: "arg", arg: 1, scope: !5780, file: !140, line: 30, type: !149)
!5783 = !DILocalVariable(name: "key", scope: !5780, file: !140, line: 32, type: !132)
!5784 = !DILocation(line: 0, scope: !5780)
!5785 = !DILocation(line: 37, column: 2, scope: !5780)
!5786 = !DILocation(line: 38, column: 2, scope: !5780)
!5787 = !DILocation(line: 55, column: 2, scope: !5788, inlinedAt: !5795)
!5788 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5789, file: !5789, line: 42, type: !5790, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5792)
!5789 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5790 = !DISubroutineType(types: !5791)
!5791 = !{!32}
!5792 = !{!5793, !5794}
!5793 = !DILocalVariable(name: "key", scope: !5788, file: !5789, line: 44, type: !32)
!5794 = !DILocalVariable(name: "tmp", scope: !5788, file: !5789, line: 53, type: !32)
!5795 = distinct !DILocation(line: 40, column: 8, scope: !5780)
!5796 = !{i64 1826988}
!5797 = !DILocation(line: 0, scope: !5788, inlinedAt: !5795)
!5798 = !DILocalVariable(name: "key", arg: 1, scope: !5799, file: !5789, line: 84, type: !32)
!5799 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5789, file: !5789, line: 84, type: !5800, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !5802)
!5800 = !DISubroutineType(types: !5801)
!5801 = !{null, !32}
!5802 = !{!5798}
!5803 = !DILocation(line: 0, scope: !5799, inlinedAt: !5804)
!5804 = distinct !DILocation(line: 47, column: 2, scope: !5780)
!5805 = !DILocation(line: 95, column: 2, scope: !5799, inlinedAt: !5804)
!5806 = !{i64 1827805}
!5807 = !DILocation(line: 51, column: 18, scope: !5780)
!5808 = !DILocation(line: 53, column: 2, scope: !5780)
!5809 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5810, file: !5810, line: 1609, type: !3232, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !473)
!5810 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5811 = !DILocation(line: 1611, column: 3, scope: !5809)
!5812 = !DILocation(line: 1612, column: 1, scope: !5809)
!5813 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5810, file: !5810, line: 1629, type: !3232, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !122, retainedNodes: !473)
!5814 = !DILocation(line: 1631, column: 3, scope: !5813)
!5815 = !DILocation(line: 1632, column: 1, scope: !5813)
!5816 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !180, file: !180, line: 26, type: !186, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !5817)
!5817 = !{!5818}
!5818 = !DILocalVariable(name: "dev", arg: 1, scope: !5816, file: !180, line: 26, type: !188)
!5819 = !DILocation(line: 0, scope: !5816)
!5820 = !DILocation(line: 68, column: 2, scope: !5816)
!5821 = distinct !DISubprogram(name: "tty_write", scope: !5822, file: !5822, line: 100, type: !5823, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !5866)
!5822 = !DIFile(filename: "zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5823 = !DISubroutineType(types: !5824)
!5824 = !{!5825, !5827, !13, !356}
!5825 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5826, line: 28, baseType: !103)
!5826 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5828, size: 32)
!5828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !307, line: 18, size: 544, elements: !5829)
!5829 = !{!5830, !5831, !5855, !5856, !5857, !5858, !5859, !5860, !5861, !5862, !5863, !5864, !5865}
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !5828, file: !307, line: 19, baseType: !2622, size: 32)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !5828, file: !307, line: 21, baseType: !5832, size: 128, offset: 32)
!5832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !5833)
!5833 = !{!5834, !5853, !5854}
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5832, file: !312, line: 2910, baseType: !5835, size: 64)
!5835 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !5836)
!5836 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !5837)
!5837 = !{!5838}
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5836, file: !316, line: 232, baseType: !5839, size: 64)
!5839 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !5840)
!5840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !5841)
!5841 = !{!5842, !5848}
!5842 = !DIDerivedType(tag: DW_TAG_member, scope: !5840, file: !321, line: 38, baseType: !5843, size: 32)
!5843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5840, file: !321, line: 38, size: 32, elements: !5844)
!5844 = !{!5845, !5847}
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5843, file: !321, line: 39, baseType: !5846, size: 32)
!5846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5840, size: 32)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5843, file: !321, line: 40, baseType: !5846, size: 32)
!5848 = !DIDerivedType(tag: DW_TAG_member, scope: !5840, file: !321, line: 42, baseType: !5849, size: 32, offset: 32)
!5849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5840, file: !321, line: 42, size: 32, elements: !5850)
!5850 = !{!5851, !5852}
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5849, file: !321, line: 43, baseType: !5846, size: 32)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5849, file: !321, line: 44, baseType: !5846, size: 32)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5832, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5832, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !5828, file: !307, line: 22, baseType: !270, size: 32, offset: 160)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !5828, file: !307, line: 23, baseType: !132, size: 32, offset: 192)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !5828, file: !307, line: 24, baseType: !340, size: 16, offset: 224)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !5828, file: !307, line: 24, baseType: !340, size: 16, offset: 240)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !5828, file: !307, line: 25, baseType: !344, size: 32, offset: 256)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !5828, file: !307, line: 27, baseType: !5832, size: 128, offset: 288)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !5828, file: !307, line: 28, baseType: !270, size: 32, offset: 416)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !5828, file: !307, line: 29, baseType: !132, size: 32, offset: 448)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !5828, file: !307, line: 30, baseType: !340, size: 16, offset: 480)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !5828, file: !307, line: 30, baseType: !340, size: 16, offset: 496)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !5828, file: !307, line: 31, baseType: !344, size: 32, offset: 512)
!5866 = !{!5867, !5868, !5869, !5870, !5871, !5872}
!5867 = !DILocalVariable(name: "tty", arg: 1, scope: !5821, file: !5822, line: 100, type: !5827)
!5868 = !DILocalVariable(name: "buf", arg: 2, scope: !5821, file: !5822, line: 100, type: !13)
!5869 = !DILocalVariable(name: "size", arg: 3, scope: !5821, file: !5822, line: 100, type: !356)
!5870 = !DILocalVariable(name: "p", scope: !5821, file: !5822, line: 102, type: !264)
!5871 = !DILocalVariable(name: "out_size", scope: !5821, file: !5822, line: 103, type: !356)
!5872 = !DILocalVariable(name: "res", scope: !5821, file: !5822, line: 104, type: !103)
!5873 = !DILocation(line: 0, scope: !5821)
!5874 = !DILocation(line: 106, column: 11, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5821, file: !5822, line: 106, column: 6)
!5876 = !DILocation(line: 106, column: 25, scope: !5875)
!5877 = !DILocation(line: 106, column: 6, scope: !5821)
!5878 = !DILocation(line: 117, column: 2, scope: !5821)
!5879 = !DILocation(line: 110, column: 3, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5875, file: !5822, line: 106, column: 32)
!5881 = !DILocation(line: 110, column: 14, scope: !5880)
!5882 = !DILocation(line: 111, column: 23, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5880, file: !5822, line: 110, column: 18)
!5884 = !DILocation(line: 111, column: 35, scope: !5883)
!5885 = !DILocation(line: 111, column: 33, scope: !5883)
!5886 = !DILocation(line: 111, column: 4, scope: !5883)
!5887 = distinct !{!5887, !5879, !5888}
!5888 = !DILocation(line: 112, column: 3, scope: !5880)
!5889 = !DILocation(line: 117, column: 13, scope: !5821)
!5890 = !DILocation(line: 118, column: 26, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5821, file: !5822, line: 117, column: 17)
!5892 = !DILocation(line: 118, column: 9, scope: !5891)
!5893 = !DILocation(line: 119, column: 11, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5891, file: !5822, line: 119, column: 7)
!5895 = !DILocation(line: 119, column: 7, scope: !5891)
!5896 = !DILocation(line: 121, column: 17, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5898, file: !5822, line: 121, column: 8)
!5898 = distinct !DILexicalBlock(scope: !5894, file: !5822, line: 119, column: 16)
!5899 = !DILocation(line: 121, column: 8, scope: !5898)
!5900 = !DILocation(line: 122, column: 13, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5897, file: !5822, line: 121, column: 23)
!5902 = !DILocation(line: 122, column: 5, scope: !5901)
!5903 = !DILocation(line: 122, column: 11, scope: !5901)
!5904 = !DILocation(line: 123, column: 5, scope: !5901)
!5905 = !DILocation(line: 118, column: 28, scope: !5891)
!5906 = !DILocation(line: 135, column: 11, scope: !5891)
!5907 = distinct !{!5907, !5878, !5908}
!5908 = !DILocation(line: 136, column: 2, scope: !5821)
!5909 = !DILocation(line: 139, column: 1, scope: !5821)
!5910 = distinct !DISubprogram(name: "uart_poll_out", scope: !5911, file: !5911, line: 95, type: !2639, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !5912)
!5911 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!5912 = !{!5913, !5914}
!5913 = !DILocalVariable(name: "dev", arg: 1, scope: !5910, file: !5911, line: 95, type: !2622)
!5914 = !DILocalVariable(name: "out_char", arg: 2, scope: !5910, file: !5911, line: 95, type: !164)
!5915 = !DILocation(line: 0, scope: !5910)
!5916 = !DILocation(line: 105, column: 2, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5910, file: !5911, line: 105, column: 2)
!5918 = !{i64 2154325421}
!5919 = !DILocation(line: 106, column: 2, scope: !5910)
!5920 = !DILocation(line: 107, column: 1, scope: !5910)
!5921 = distinct !DISubprogram(name: "tty_putchar", scope: !5822, file: !5822, line: 69, type: !5922, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !5924)
!5922 = !DISubroutineType(types: !5923)
!5923 = !{!103, !5827, !163}
!5924 = !{!5925, !5926, !5927, !5928, !5929}
!5925 = !DILocalVariable(name: "tty", arg: 1, scope: !5921, file: !5822, line: 69, type: !5827)
!5926 = !DILocalVariable(name: "c", arg: 2, scope: !5921, file: !5822, line: 69, type: !163)
!5927 = !DILocalVariable(name: "key", scope: !5921, file: !5822, line: 71, type: !32)
!5928 = !DILocalVariable(name: "tx_next", scope: !5921, file: !5822, line: 72, type: !103)
!5929 = !DILocalVariable(name: "res", scope: !5921, file: !5822, line: 73, type: !103)
!5930 = !DILocation(line: 0, scope: !5921)
!5931 = !DILocation(line: 75, column: 25, scope: !5921)
!5932 = !DILocation(line: 76, column: 5, scope: !5921)
!5933 = !DILocation(line: 77, column: 7, scope: !5921)
!5934 = !DILocation(line: 75, column: 8, scope: !5921)
!5935 = !DILocation(line: 78, column: 10, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5921, file: !5822, line: 78, column: 6)
!5937 = !DILocation(line: 78, column: 6, scope: !5921)
!5938 = !DILocation(line: 55, column: 2, scope: !5939, inlinedAt: !5943)
!5939 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5789, file: !5789, line: 42, type: !5790, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !5940)
!5940 = !{!5941, !5942}
!5941 = !DILocalVariable(name: "key", scope: !5939, file: !5789, line: 44, type: !32)
!5942 = !DILocalVariable(name: "tmp", scope: !5939, file: !5789, line: 53, type: !32)
!5943 = distinct !DILocation(line: 82, column: 8, scope: !5921)
!5944 = !{i64 1950814}
!5945 = !DILocation(line: 0, scope: !5939, inlinedAt: !5943)
!5946 = !DILocation(line: 83, column: 17, scope: !5921)
!5947 = !DILocation(line: 83, column: 12, scope: !5921)
!5948 = !DILocation(line: 83, column: 24, scope: !5921)
!5949 = !DILocation(line: 84, column: 22, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5921, file: !5822, line: 84, column: 6)
!5951 = !DILocation(line: 84, column: 14, scope: !5950)
!5952 = !DILocation(line: 84, column: 6, scope: !5921)
!5953 = !DILocation(line: 87, column: 22, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5921, file: !5822, line: 87, column: 6)
!5955 = !DILocation(line: 87, column: 17, scope: !5954)
!5956 = !DILocation(line: 87, column: 14, scope: !5954)
!5957 = !DILocation(line: 87, column: 6, scope: !5921)
!5958 = !DILocalVariable(name: "key", arg: 1, scope: !5959, file: !5789, line: 84, type: !32)
!5959 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5789, file: !5789, line: 84, type: !5800, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !5960)
!5960 = !{!5958}
!5961 = !DILocation(line: 0, scope: !5959, inlinedAt: !5962)
!5962 = distinct !DILocation(line: 88, column: 3, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5954, file: !5822, line: 87, column: 30)
!5964 = !DILocation(line: 95, column: 2, scope: !5959, inlinedAt: !5962)
!5965 = !{i64 1951631}
!5966 = !DILocation(line: 89, column: 3, scope: !5963)
!5967 = !DILocation(line: 92, column: 7, scope: !5921)
!5968 = !DILocation(line: 92, column: 2, scope: !5921)
!5969 = !DILocation(line: 92, column: 31, scope: !5921)
!5970 = !DILocation(line: 93, column: 16, scope: !5921)
!5971 = !DILocation(line: 93, column: 14, scope: !5921)
!5972 = !DILocation(line: 0, scope: !5959, inlinedAt: !5973)
!5973 = distinct !DILocation(line: 95, column: 2, scope: !5921)
!5974 = !DILocation(line: 95, column: 2, scope: !5959, inlinedAt: !5973)
!5975 = !DILocation(line: 96, column: 26, scope: !5921)
!5976 = !DILocation(line: 96, column: 2, scope: !5921)
!5977 = !DILocation(line: 97, column: 2, scope: !5921)
!5978 = !DILocation(line: 98, column: 1, scope: !5921)
!5979 = distinct !DISubprogram(name: "z_errno", scope: !5980, file: !5980, line: 24, type: !5981, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !473)
!5980 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!5981 = !DISubroutineType(types: !5982)
!5982 = !{!2600}
!5983 = !DILocation(line: 31, column: 2, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5979, file: !5980, line: 31, column: 2)
!5985 = !{i64 2153590102}
!5986 = !DILocation(line: 32, column: 9, scope: !5979)
!5987 = !DILocation(line: 32, column: 2, scope: !5979)
!5988 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5989, file: !5989, line: 403, type: !5990, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !5992)
!5989 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5990 = !DISubroutineType(types: !5991)
!5991 = !{!1585, !1585}
!5992 = !{!5993}
!5993 = !DILocalVariable(name: "t", arg: 1, scope: !5988, file: !5989, line: 403, type: !1585)
!5994 = !DILocation(line: 0, scope: !5988)
!5995 = !DILocalVariable(name: "t", arg: 1, scope: !5996, file: !5989, line: 102, type: !1585)
!5996 = distinct !DISubprogram(name: "z_tmcvt", scope: !5989, file: !5989, line: 102, type: !5997, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !5999)
!5997 = !DISubroutineType(types: !5998)
!5998 = !{!1585, !1585, !132, !132, !166, !166, !166, !166}
!5999 = !{!5995, !6000, !6001, !6002, !6003, !6004, !6005, !6006, !6007, !6008, !6009}
!6000 = !DILocalVariable(name: "from_hz", arg: 2, scope: !5996, file: !5989, line: 102, type: !132)
!6001 = !DILocalVariable(name: "to_hz", arg: 3, scope: !5996, file: !5989, line: 103, type: !132)
!6002 = !DILocalVariable(name: "const_hz", arg: 4, scope: !5996, file: !5989, line: 103, type: !166)
!6003 = !DILocalVariable(name: "result32", arg: 5, scope: !5996, file: !5989, line: 104, type: !166)
!6004 = !DILocalVariable(name: "round_up", arg: 6, scope: !5996, file: !5989, line: 104, type: !166)
!6005 = !DILocalVariable(name: "round_off", arg: 7, scope: !5996, file: !5989, line: 105, type: !166)
!6006 = !DILocalVariable(name: "mul_ratio", scope: !5996, file: !5989, line: 107, type: !166)
!6007 = !DILocalVariable(name: "div_ratio", scope: !5996, file: !5989, line: 109, type: !166)
!6008 = !DILocalVariable(name: "off", scope: !5996, file: !5989, line: 116, type: !1585)
!6009 = !DILocalVariable(name: "rdivisor", scope: !6010, file: !5989, line: 119, type: !132)
!6010 = distinct !DILexicalBlock(scope: !6011, file: !5989, line: 118, column: 18)
!6011 = distinct !DILexicalBlock(scope: !5996, file: !5989, line: 118, column: 6)
!6012 = !DILocation(line: 0, scope: !5996, inlinedAt: !6013)
!6013 = distinct !DILocation(line: 406, column: 9, scope: !5988)
!6014 = !DILocation(line: 145, column: 13, scope: !6015, inlinedAt: !6013)
!6015 = distinct !DILexicalBlock(scope: !6016, file: !5989, line: 144, column: 10)
!6016 = distinct !DILexicalBlock(scope: !6017, file: !5989, line: 142, column: 7)
!6017 = distinct !DILexicalBlock(scope: !6018, file: !5989, line: 141, column: 24)
!6018 = distinct !DILexicalBlock(scope: !6019, file: !5989, line: 141, column: 13)
!6019 = distinct !DILexicalBlock(scope: !5996, file: !5989, line: 134, column: 6)
!6020 = !DILocation(line: 406, column: 2, scope: !5988)
!6021 = distinct !DISubprogram(name: "k_sem_take", scope: !3672, file: !3672, line: 1044, type: !6022, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6029)
!6022 = !DISubroutineType(types: !6023)
!6023 = !{!103, !6024, !6025}
!6024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5832, size: 32)
!6025 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1689, line: 67, baseType: !6026)
!6026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1689, line: 65, size: 64, elements: !6027)
!6027 = !{!6028}
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6026, file: !1689, line: 66, baseType: !1688, size: 64)
!6029 = !{!6030, !6031}
!6030 = !DILocalVariable(name: "sem", arg: 1, scope: !6021, file: !3672, line: 1044, type: !6024)
!6031 = !DILocalVariable(name: "timeout", arg: 2, scope: !6021, file: !3672, line: 1044, type: !6025)
!6032 = !DILocation(line: 0, scope: !6021)
!6033 = !DILocation(line: 1053, column: 2, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6021, file: !3672, line: 1053, column: 2)
!6035 = !{i64 2154069290}
!6036 = !DILocation(line: 1054, column: 9, scope: !6021)
!6037 = !DILocation(line: 1054, column: 2, scope: !6021)
!6038 = distinct !DISubprogram(name: "uart_irq_tx_enable", scope: !5911, file: !5911, line: 193, type: !2673, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6039)
!6039 = !{!6040}
!6040 = !DILocalVariable(name: "dev", arg: 1, scope: !6038, file: !5911, line: 193, type: !2622)
!6041 = !DILocation(line: 0, scope: !6038)
!6042 = !DILocation(line: 202, column: 2, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6038, file: !5911, line: 202, column: 2)
!6044 = !{i64 2154325693}
!6045 = !DILocation(line: 203, column: 2, scope: !6038)
!6046 = !DILocation(line: 204, column: 1, scope: !6038)
!6047 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_enable", scope: !212, file: !212, line: 857, type: !2673, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6048)
!6048 = !{!6049, !6050}
!6049 = !DILocalVariable(name: "dev", arg: 1, scope: !6047, file: !212, line: 857, type: !2622)
!6050 = !DILocalVariable(name: "api", scope: !6047, file: !212, line: 860, type: !2614)
!6051 = !DILocation(line: 0, scope: !6047)
!6052 = !DILocation(line: 861, column: 40, scope: !6047)
!6053 = !DILocation(line: 863, column: 11, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6047, file: !212, line: 863, column: 6)
!6055 = !DILocation(line: 863, column: 25, scope: !6054)
!6056 = !DILocation(line: 863, column: 6, scope: !6047)
!6057 = !DILocation(line: 864, column: 3, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6054, file: !212, line: 863, column: 34)
!6059 = !DILocation(line: 865, column: 2, scope: !6058)
!6060 = !DILocation(line: 869, column: 1, scope: !6047)
!6061 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !212, file: !212, line: 574, type: !2639, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6062)
!6062 = !{!6063, !6064, !6065}
!6063 = !DILocalVariable(name: "dev", arg: 1, scope: !6061, file: !212, line: 574, type: !2622)
!6064 = !DILocalVariable(name: "out_char", arg: 2, scope: !6061, file: !212, line: 575, type: !164)
!6065 = !DILocalVariable(name: "api", scope: !6061, file: !212, line: 577, type: !2614)
!6066 = !DILocation(line: 0, scope: !6061)
!6067 = !DILocation(line: 578, column: 40, scope: !6061)
!6068 = !DILocation(line: 580, column: 7, scope: !6061)
!6069 = !DILocation(line: 580, column: 2, scope: !6061)
!6070 = !DILocation(line: 581, column: 1, scope: !6061)
!6071 = distinct !DISubprogram(name: "tty_read", scope: !5822, file: !5822, line: 206, type: !6072, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6074)
!6072 = !DISubroutineType(types: !6073)
!6073 = !{!5825, !5827, !102, !356}
!6074 = !{!6075, !6076, !6077, !6078, !6079, !6080}
!6075 = !DILocalVariable(name: "tty", arg: 1, scope: !6071, file: !5822, line: 206, type: !5827)
!6076 = !DILocalVariable(name: "buf", arg: 2, scope: !6071, file: !5822, line: 206, type: !102)
!6077 = !DILocalVariable(name: "size", arg: 3, scope: !6071, file: !5822, line: 206, type: !356)
!6078 = !DILocalVariable(name: "p", scope: !6071, file: !5822, line: 208, type: !270)
!6079 = !DILocalVariable(name: "out_size", scope: !6071, file: !5822, line: 209, type: !356)
!6080 = !DILocalVariable(name: "res", scope: !6071, file: !5822, line: 210, type: !103)
!6081 = !DILocation(line: 0, scope: !6071)
!6082 = !DILocation(line: 212, column: 11, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6071, file: !5822, line: 212, column: 6)
!6084 = !DILocation(line: 212, column: 25, scope: !6083)
!6085 = !DILocation(line: 212, column: 6, scope: !6071)
!6086 = !DILocation(line: 216, column: 2, scope: !6071)
!6087 = !DILocation(line: 213, column: 10, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6083, file: !5822, line: 212, column: 32)
!6089 = !DILocation(line: 213, column: 3, scope: !6088)
!6090 = !DILocation(line: 216, column: 13, scope: !6071)
!6091 = !DILocation(line: 217, column: 9, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6071, file: !5822, line: 216, column: 17)
!6093 = !DILocation(line: 218, column: 11, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6092, file: !5822, line: 218, column: 7)
!6095 = !DILocation(line: 218, column: 7, scope: !6092)
!6096 = !DILocation(line: 220, column: 17, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6098, file: !5822, line: 220, column: 8)
!6098 = distinct !DILexicalBlock(scope: !6094, file: !5822, line: 218, column: 16)
!6099 = !DILocation(line: 220, column: 8, scope: !6098)
!6100 = !DILocation(line: 221, column: 13, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6097, file: !5822, line: 220, column: 23)
!6102 = !DILocation(line: 221, column: 5, scope: !6101)
!6103 = !DILocation(line: 221, column: 11, scope: !6101)
!6104 = !DILocation(line: 222, column: 5, scope: !6101)
!6105 = !DILocation(line: 234, column: 10, scope: !6092)
!6106 = !DILocation(line: 234, column: 5, scope: !6092)
!6107 = !DILocation(line: 234, column: 8, scope: !6092)
!6108 = !DILocation(line: 235, column: 11, scope: !6092)
!6109 = distinct !{!6109, !6086, !6110}
!6110 = !DILocation(line: 236, column: 2, scope: !6071)
!6111 = !DILocation(line: 239, column: 1, scope: !6071)
!6112 = distinct !DISubprogram(name: "tty_read_unbuf", scope: !5822, file: !5822, line: 162, type: !6072, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6113)
!6113 = !{!6114, !6115, !6116, !6117, !6118, !6119, !6120, !6121}
!6114 = !DILocalVariable(name: "tty", arg: 1, scope: !6112, file: !5822, line: 162, type: !5827)
!6115 = !DILocalVariable(name: "buf", arg: 2, scope: !6112, file: !5822, line: 162, type: !102)
!6116 = !DILocalVariable(name: "size", arg: 3, scope: !6112, file: !5822, line: 162, type: !356)
!6117 = !DILocalVariable(name: "p", scope: !6112, file: !5822, line: 164, type: !270)
!6118 = !DILocalVariable(name: "out_size", scope: !6112, file: !5822, line: 165, type: !356)
!6119 = !DILocalVariable(name: "res", scope: !6112, file: !5822, line: 166, type: !103)
!6120 = !DILocalVariable(name: "timeout", scope: !6112, file: !5822, line: 167, type: !132)
!6121 = !DILocalVariable(name: "c", scope: !6122, file: !5822, line: 170, type: !163)
!6122 = distinct !DILexicalBlock(scope: !6112, file: !5822, line: 169, column: 15)
!6123 = !DILocation(line: 0, scope: !6112)
!6124 = !DILocation(line: 169, column: 2, scope: !6112)
!6125 = !DILocation(line: 167, column: 26, scope: !6112)
!6126 = !DILocation(line: 170, column: 3, scope: !6122)
!6127 = !DILocation(line: 171, column: 27, scope: !6122)
!6128 = !DILocation(line: 0, scope: !6122)
!6129 = !DILocation(line: 171, column: 9, scope: !6122)
!6130 = !DILocation(line: 172, column: 11, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6122, file: !5822, line: 172, column: 7)
!6132 = !DILocation(line: 172, column: 7, scope: !6122)
!6133 = !DILocation(line: 177, column: 17, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6135, file: !5822, line: 177, column: 8)
!6135 = distinct !DILexicalBlock(scope: !6131, file: !5822, line: 172, column: 18)
!6136 = !DILocation(line: 177, column: 8, scope: !6135)
!6137 = !DILocation(line: 178, column: 5, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6134, file: !5822, line: 177, column: 23)
!6139 = !DILocation(line: 178, column: 11, scope: !6138)
!6140 = !DILocation(line: 201, column: 2, scope: !6112)
!6141 = !DILocation(line: 184, column: 11, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6122, file: !5822, line: 184, column: 7)
!6143 = !DILocation(line: 184, column: 7, scope: !6122)
!6144 = !DILocation(line: 185, column: 11, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6142, file: !5822, line: 184, column: 17)
!6146 = !DILocation(line: 185, column: 6, scope: !6145)
!6147 = !DILocation(line: 185, column: 9, scope: !6145)
!6148 = !DILocation(line: 186, column: 12, scope: !6145)
!6149 = !DILocation(line: 187, column: 8, scope: !6145)
!6150 = !DILocation(line: 190, column: 12, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6122, file: !5822, line: 190, column: 7)
!6152 = !DILocation(line: 190, column: 17, scope: !6151)
!6153 = !DILocation(line: 191, column: 17, scope: !6151)
!6154 = !DILocation(line: 191, column: 36, scope: !6151)
!6155 = !DILocation(line: 191, column: 46, scope: !6151)
!6156 = !DILocation(line: 191, column: 49, scope: !6151)
!6157 = !DILocation(line: 190, column: 7, scope: !6122)
!6158 = !DILocation(line: 198, column: 11, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6122, file: !5822, line: 198, column: 7)
!6160 = !DILocation(line: 198, column: 7, scope: !6122)
!6161 = !DILocation(line: 199, column: 12, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6159, file: !5822, line: 198, column: 18)
!6163 = !DILocation(line: 199, column: 4, scope: !6162)
!6164 = !DILocation(line: 200, column: 3, scope: !6162)
!6165 = !DILocation(line: 204, column: 1, scope: !6112)
!6166 = distinct !DISubprogram(name: "tty_getchar", scope: !5822, file: !5822, line: 141, type: !6167, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6169)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{!103, !5827}
!6169 = !{!6170, !6171, !6172, !6173}
!6170 = !DILocalVariable(name: "tty", arg: 1, scope: !6166, file: !5822, line: 141, type: !5827)
!6171 = !DILocalVariable(name: "key", scope: !6166, file: !5822, line: 143, type: !32)
!6172 = !DILocalVariable(name: "c", scope: !6166, file: !5822, line: 144, type: !163)
!6173 = !DILocalVariable(name: "res", scope: !6166, file: !5822, line: 145, type: !103)
!6174 = !DILocation(line: 0, scope: !6166)
!6175 = !DILocation(line: 147, column: 25, scope: !6166)
!6176 = !DILocation(line: 147, column: 33, scope: !6166)
!6177 = !DILocation(line: 147, column: 8, scope: !6166)
!6178 = !DILocation(line: 148, column: 10, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6166, file: !5822, line: 148, column: 6)
!6180 = !DILocation(line: 148, column: 6, scope: !6166)
!6181 = !DILocation(line: 55, column: 2, scope: !5939, inlinedAt: !6182)
!6182 = distinct !DILocation(line: 152, column: 8, scope: !6166)
!6183 = !DILocation(line: 0, scope: !5939, inlinedAt: !6182)
!6184 = !DILocation(line: 153, column: 11, scope: !6166)
!6185 = !DILocation(line: 153, column: 27, scope: !6166)
!6186 = !DILocation(line: 153, column: 33, scope: !6166)
!6187 = !DILocation(line: 153, column: 6, scope: !6166)
!6188 = !DILocation(line: 154, column: 6, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6166, file: !5822, line: 154, column: 6)
!6190 = !DILocation(line: 154, column: 26, scope: !6189)
!6191 = !DILocation(line: 154, column: 18, scope: !6189)
!6192 = !DILocation(line: 154, column: 6, scope: !6166)
!6193 = !DILocation(line: 0, scope: !5959, inlinedAt: !6194)
!6194 = distinct !DILocation(line: 157, column: 2, scope: !6166)
!6195 = !DILocation(line: 95, column: 2, scope: !5959, inlinedAt: !6194)
!6196 = !DILocation(line: 159, column: 9, scope: !6166)
!6197 = !DILocation(line: 159, column: 2, scope: !6166)
!6198 = !DILocation(line: 160, column: 1, scope: !6166)
!6199 = distinct !DISubprogram(name: "uart_poll_in", scope: !5911, file: !5911, line: 47, type: !2620, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6200)
!6200 = !{!6201, !6202}
!6201 = !DILocalVariable(name: "dev", arg: 1, scope: !6199, file: !5911, line: 47, type: !2622)
!6202 = !DILocalVariable(name: "p_char", arg: 2, scope: !6199, file: !5911, line: 47, type: !233)
!6203 = !DILocation(line: 0, scope: !6199)
!6204 = !DILocation(line: 56, column: 2, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6199, file: !5911, line: 56, column: 2)
!6206 = !{i64 2154325285}
!6207 = !DILocation(line: 57, column: 9, scope: !6199)
!6208 = !DILocation(line: 57, column: 2, scope: !6199)
!6209 = distinct !DISubprogram(name: "k_sleep", scope: !3672, file: !3672, line: 91, type: !6210, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6212)
!6210 = !DISubroutineType(types: !6211)
!6211 = !{!344, !6025}
!6212 = !{!6213}
!6213 = !DILocalVariable(name: "timeout", arg: 1, scope: !6209, file: !3672, line: 91, type: !6025)
!6214 = !DILocation(line: 0, scope: !6209)
!6215 = !DILocation(line: 99, column: 2, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6209, file: !3672, line: 99, column: 2)
!6217 = !{i64 2154065446}
!6218 = !DILocation(line: 100, column: 9, scope: !6209)
!6219 = !DILocation(line: 100, column: 2, scope: !6209)
!6220 = distinct !DISubprogram(name: "z_impl_uart_poll_in", scope: !212, file: !212, line: 504, type: !2620, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6221)
!6221 = !{!6222, !6223, !6224}
!6222 = !DILocalVariable(name: "dev", arg: 1, scope: !6220, file: !212, line: 504, type: !2622)
!6223 = !DILocalVariable(name: "p_char", arg: 2, scope: !6220, file: !212, line: 505, type: !233)
!6224 = !DILocalVariable(name: "api", scope: !6220, file: !212, line: 507, type: !2614)
!6225 = !DILocation(line: 0, scope: !6220)
!6226 = !DILocation(line: 508, column: 40, scope: !6220)
!6227 = !DILocation(line: 510, column: 11, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6220, file: !212, line: 510, column: 6)
!6229 = !DILocation(line: 510, column: 19, scope: !6228)
!6230 = !DILocation(line: 510, column: 6, scope: !6220)
!6231 = !DILocation(line: 514, column: 9, scope: !6220)
!6232 = !DILocation(line: 514, column: 2, scope: !6220)
!6233 = !DILocation(line: 515, column: 1, scope: !6220)
!6234 = distinct !DISubprogram(name: "tty_init", scope: !5822, file: !5822, line: 241, type: !6235, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6237)
!6235 = !DISubroutineType(types: !6236)
!6236 = !{!103, !5827, !2622}
!6237 = !{!6238, !6239}
!6238 = !DILocalVariable(name: "tty", arg: 1, scope: !6234, file: !5822, line: 241, type: !5827)
!6239 = !DILocalVariable(name: "uart_dev", arg: 2, scope: !6234, file: !5822, line: 241, type: !2622)
!6240 = !DILocation(line: 0, scope: !6234)
!6241 = !DILocation(line: 243, column: 7, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6234, file: !5822, line: 243, column: 6)
!6243 = !DILocation(line: 243, column: 6, scope: !6234)
!6244 = !DILocation(line: 247, column: 7, scope: !6234)
!6245 = !DILocation(line: 247, column: 16, scope: !6234)
!6246 = !DILocation(line: 250, column: 7, scope: !6234)
!6247 = !DILocation(line: 250, column: 18, scope: !6234)
!6248 = !DILocation(line: 251, column: 7, scope: !6234)
!6249 = !DILocation(line: 251, column: 21, scope: !6234)
!6250 = !DILocation(line: 252, column: 7, scope: !6234)
!6251 = !DILocation(line: 252, column: 18, scope: !6234)
!6252 = !DILocation(line: 253, column: 7, scope: !6234)
!6253 = !DILocation(line: 253, column: 21, scope: !6234)
!6254 = !DILocation(line: 255, column: 49, scope: !6234)
!6255 = !DILocation(line: 255, column: 56, scope: !6234)
!6256 = !DILocation(line: 255, column: 35, scope: !6234)
!6257 = !DILocation(line: 255, column: 42, scope: !6234)
!6258 = !DILocation(line: 255, column: 21, scope: !6234)
!6259 = !DILocation(line: 255, column: 28, scope: !6234)
!6260 = !DILocation(line: 255, column: 7, scope: !6234)
!6261 = !DILocation(line: 255, column: 14, scope: !6234)
!6262 = !DILocation(line: 257, column: 7, scope: !6234)
!6263 = !DILocation(line: 257, column: 18, scope: !6234)
!6264 = !DILocation(line: 258, column: 7, scope: !6234)
!6265 = !DILocation(line: 258, column: 18, scope: !6234)
!6266 = !DILocation(line: 260, column: 58, scope: !6234)
!6267 = !DILocation(line: 260, column: 2, scope: !6234)
!6268 = !DILocation(line: 262, column: 2, scope: !6234)
!6269 = !DILocation(line: 263, column: 1, scope: !6234)
!6270 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !212, file: !212, line: 1163, type: !2687, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6271)
!6271 = !{!6272, !6273, !6274, !6275}
!6272 = !DILocalVariable(name: "dev", arg: 1, scope: !6270, file: !212, line: 1163, type: !2622)
!6273 = !DILocalVariable(name: "cb", arg: 2, scope: !6270, file: !212, line: 1164, type: !2689)
!6274 = !DILocalVariable(name: "user_data", arg: 3, scope: !6270, file: !212, line: 1165, type: !102)
!6275 = !DILocalVariable(name: "api", scope: !6270, file: !212, line: 1168, type: !2614)
!6276 = !DILocation(line: 0, scope: !6270)
!6277 = !DILocation(line: 1169, column: 40, scope: !6270)
!6278 = !DILocation(line: 1171, column: 11, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6270, file: !212, line: 1171, column: 6)
!6280 = !DILocation(line: 1171, column: 20, scope: !6279)
!6281 = !DILocation(line: 1171, column: 29, scope: !6279)
!6282 = !DILocation(line: 1171, column: 46, scope: !6279)
!6283 = !DILocation(line: 1171, column: 6, scope: !6270)
!6284 = !DILocation(line: 1172, column: 3, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6279, file: !212, line: 1171, column: 56)
!6286 = !DILocation(line: 1173, column: 2, scope: !6285)
!6287 = !DILocation(line: 1179, column: 1, scope: !6270)
!6288 = distinct !DISubprogram(name: "tty_uart_isr", scope: !5822, file: !5822, line: 15, type: !2691, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6289)
!6289 = !{!6290, !6291, !6292, !6293}
!6290 = !DILocalVariable(name: "dev", arg: 1, scope: !6288, file: !5822, line: 15, type: !2622)
!6291 = !DILocalVariable(name: "user_data", arg: 2, scope: !6288, file: !5822, line: 15, type: !102)
!6292 = !DILocalVariable(name: "tty", scope: !6288, file: !5822, line: 17, type: !5827)
!6293 = !DILocalVariable(name: "c", scope: !6294, file: !5822, line: 22, type: !163)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !5822, line: 21, column: 30)
!6295 = distinct !DILexicalBlock(scope: !6288, file: !5822, line: 21, column: 6)
!6296 = !DILocation(line: 0, scope: !6288)
!6297 = !DILocation(line: 17, column: 27, scope: !6288)
!6298 = !DILocation(line: 19, column: 2, scope: !6288)
!6299 = !DILocation(line: 21, column: 6, scope: !6295)
!6300 = !DILocation(line: 21, column: 6, scope: !6288)
!6301 = !DILocation(line: 22, column: 3, scope: !6294)
!6302 = !DILocation(line: 0, scope: !6294)
!6303 = !DILocation(line: 25, column: 8, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6305, file: !5822, line: 25, column: 8)
!6305 = distinct !DILexicalBlock(scope: !6294, file: !5822, line: 24, column: 13)
!6306 = !DILocation(line: 25, column: 35, scope: !6304)
!6307 = !DILocation(line: 25, column: 8, scope: !6305)
!6308 = !DILocation(line: 28, column: 28, scope: !6305)
!6309 = !DILocation(line: 28, column: 4, scope: !6305)
!6310 = distinct !{!6310, !6311, !6312}
!6311 = !DILocation(line: 24, column: 3, scope: !6294)
!6312 = !DILocation(line: 29, column: 3, scope: !6294)
!6313 = !DILocation(line: 30, column: 2, scope: !6295)
!6314 = !DILocation(line: 30, column: 2, scope: !6294)
!6315 = !DILocation(line: 32, column: 6, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6288, file: !5822, line: 32, column: 6)
!6317 = !DILocation(line: 32, column: 6, scope: !6288)
!6318 = !DILocation(line: 33, column: 12, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6320, file: !5822, line: 33, column: 7)
!6320 = distinct !DILexicalBlock(scope: !6316, file: !5822, line: 32, column: 30)
!6321 = !DILocation(line: 33, column: 27, scope: !6319)
!6322 = !DILocation(line: 33, column: 19, scope: !6319)
!6323 = !DILocation(line: 33, column: 7, scope: !6320)
!6324 = !DILocation(line: 37, column: 4, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6319, file: !5822, line: 33, column: 35)
!6326 = !DILocation(line: 38, column: 3, scope: !6325)
!6327 = !DILocation(line: 33, column: 7, scope: !6319)
!6328 = !DILocation(line: 39, column: 30, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6319, file: !5822, line: 38, column: 10)
!6330 = !DILocation(line: 39, column: 52, scope: !6329)
!6331 = !DILocation(line: 39, column: 25, scope: !6329)
!6332 = !DILocation(line: 39, column: 4, scope: !6329)
!6333 = !DILocation(line: 40, column: 13, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6329, file: !5822, line: 40, column: 8)
!6335 = !DILocation(line: 40, column: 8, scope: !6334)
!6336 = !DILocation(line: 40, column: 28, scope: !6334)
!6337 = !DILocation(line: 40, column: 20, scope: !6334)
!6338 = !DILocation(line: 40, column: 8, scope: !6329)
!6339 = !DILocation(line: 41, column: 17, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6334, file: !5822, line: 40, column: 43)
!6341 = !DILocation(line: 42, column: 4, scope: !6340)
!6342 = !DILocation(line: 43, column: 21, scope: !6329)
!6343 = !DILocation(line: 43, column: 4, scope: !6329)
!6344 = !DILocation(line: 46, column: 1, scope: !6288)
!6345 = distinct !DISubprogram(name: "uart_irq_update", scope: !5911, file: !5911, line: 360, type: !2643, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6346)
!6346 = !{!6347}
!6347 = !DILocalVariable(name: "dev", arg: 1, scope: !6345, file: !5911, line: 360, type: !2622)
!6348 = !DILocation(line: 0, scope: !6345)
!6349 = !DILocation(line: 368, column: 2, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6345, file: !5911, line: 368, column: 2)
!6351 = !{i64 2154326169}
!6352 = !DILocation(line: 369, column: 9, scope: !6345)
!6353 = !DILocation(line: 369, column: 2, scope: !6345)
!6354 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !212, file: !212, line: 1024, type: !2643, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6355)
!6355 = !{!6356, !6357}
!6356 = !DILocalVariable(name: "dev", arg: 1, scope: !6354, file: !212, line: 1024, type: !2622)
!6357 = !DILocalVariable(name: "api", scope: !6354, file: !212, line: 1027, type: !2614)
!6358 = !DILocation(line: 0, scope: !6354)
!6359 = !DILocation(line: 1028, column: 40, scope: !6354)
!6360 = !DILocation(line: 1030, column: 11, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6354, file: !212, line: 1030, column: 6)
!6362 = !DILocation(line: 1030, column: 24, scope: !6361)
!6363 = !DILocation(line: 1030, column: 6, scope: !6354)
!6364 = !DILocation(line: 1033, column: 9, scope: !6354)
!6365 = !DILocation(line: 1033, column: 2, scope: !6354)
!6366 = !DILocation(line: 1038, column: 1, scope: !6354)
!6367 = distinct !DISubprogram(name: "uart_fifo_read", scope: !212, file: !212, line: 785, type: !2669, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6368)
!6368 = !{!6369, !6370, !6371, !6372}
!6369 = !DILocalVariable(name: "dev", arg: 1, scope: !6367, file: !212, line: 785, type: !2622)
!6370 = !DILocalVariable(name: "rx_data", arg: 2, scope: !6367, file: !212, line: 785, type: !270)
!6371 = !DILocalVariable(name: "size", arg: 3, scope: !6367, file: !212, line: 786, type: !271)
!6372 = !DILocalVariable(name: "api", scope: !6367, file: !212, line: 789, type: !2614)
!6373 = !DILocation(line: 0, scope: !6367)
!6374 = !DILocation(line: 790, column: 40, scope: !6367)
!6375 = !DILocation(line: 792, column: 11, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6367, file: !212, line: 792, column: 6)
!6377 = !DILocation(line: 792, column: 21, scope: !6376)
!6378 = !DILocation(line: 792, column: 6, scope: !6367)
!6379 = !DILocation(line: 796, column: 9, scope: !6367)
!6380 = !DILocation(line: 796, column: 2, scope: !6367)
!6381 = !DILocation(line: 803, column: 1, scope: !6367)
!6382 = distinct !DISubprogram(name: "tty_irq_input_hook", scope: !5822, file: !5822, line: 48, type: !5922, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6383)
!6383 = !{!6384, !6385, !6386}
!6384 = !DILocalVariable(name: "tty", arg: 1, scope: !6382, file: !5822, line: 48, type: !5827)
!6385 = !DILocalVariable(name: "c", arg: 2, scope: !6382, file: !5822, line: 48, type: !163)
!6386 = !DILocalVariable(name: "rx_next", scope: !6382, file: !5822, line: 50, type: !103)
!6387 = !DILocation(line: 0, scope: !6382)
!6388 = !DILocation(line: 50, column: 21, scope: !6382)
!6389 = !DILocation(line: 50, column: 16, scope: !6382)
!6390 = !DILocation(line: 50, column: 28, scope: !6382)
!6391 = !DILocation(line: 52, column: 22, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6382, file: !5822, line: 52, column: 6)
!6393 = !DILocation(line: 52, column: 14, scope: !6392)
!6394 = !DILocation(line: 52, column: 6, scope: !6382)
!6395 = !DILocation(line: 56, column: 22, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6382, file: !5822, line: 56, column: 6)
!6397 = !DILocation(line: 56, column: 17, scope: !6396)
!6398 = !DILocation(line: 56, column: 14, scope: !6396)
!6399 = !DILocation(line: 56, column: 6, scope: !6382)
!6400 = !DILocation(line: 58, column: 3, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6396, file: !5822, line: 56, column: 30)
!6402 = !DILocation(line: 59, column: 3, scope: !6401)
!6403 = !DILocation(line: 62, column: 7, scope: !6382)
!6404 = !DILocation(line: 62, column: 2, scope: !6382)
!6405 = !DILocation(line: 62, column: 31, scope: !6382)
!6406 = !DILocation(line: 63, column: 16, scope: !6382)
!6407 = !DILocation(line: 63, column: 14, scope: !6382)
!6408 = !DILocation(line: 64, column: 19, scope: !6382)
!6409 = !DILocation(line: 64, column: 2, scope: !6382)
!6410 = !DILocation(line: 66, column: 2, scope: !6382)
!6411 = !DILocation(line: 67, column: 1, scope: !6382)
!6412 = distinct !DISubprogram(name: "uart_irq_tx_ready", scope: !212, file: !212, line: 910, type: !2643, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6413)
!6413 = !{!6414, !6415}
!6414 = !DILocalVariable(name: "dev", arg: 1, scope: !6412, file: !212, line: 910, type: !2622)
!6415 = !DILocalVariable(name: "api", scope: !6412, file: !212, line: 913, type: !2614)
!6416 = !DILocation(line: 0, scope: !6412)
!6417 = !DILocation(line: 914, column: 40, scope: !6412)
!6418 = !DILocation(line: 916, column: 11, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6412, file: !212, line: 916, column: 6)
!6420 = !DILocation(line: 916, column: 24, scope: !6419)
!6421 = !DILocation(line: 916, column: 6, scope: !6412)
!6422 = !DILocation(line: 920, column: 9, scope: !6412)
!6423 = !DILocation(line: 920, column: 2, scope: !6412)
!6424 = !DILocation(line: 925, column: 1, scope: !6412)
!6425 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5911, file: !5911, line: 217, type: !2673, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6426)
!6426 = !{!6427}
!6427 = !DILocalVariable(name: "dev", arg: 1, scope: !6425, file: !5911, line: 217, type: !2622)
!6428 = !DILocation(line: 0, scope: !6425)
!6429 = !DILocation(line: 226, column: 2, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6425, file: !5911, line: 226, column: 2)
!6431 = !{i64 2154325761}
!6432 = !DILocation(line: 227, column: 2, scope: !6425)
!6433 = !DILocation(line: 228, column: 1, scope: !6425)
!6434 = distinct !DISubprogram(name: "uart_fifo_fill", scope: !212, file: !212, line: 699, type: !2665, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6435)
!6435 = !{!6436, !6437, !6438, !6439}
!6436 = !DILocalVariable(name: "dev", arg: 1, scope: !6434, file: !212, line: 699, type: !2622)
!6437 = !DILocalVariable(name: "tx_data", arg: 2, scope: !6434, file: !212, line: 700, type: !264)
!6438 = !DILocalVariable(name: "size", arg: 3, scope: !6434, file: !212, line: 701, type: !103)
!6439 = !DILocalVariable(name: "api", scope: !6434, file: !212, line: 704, type: !2614)
!6440 = !DILocation(line: 0, scope: !6434)
!6441 = !DILocation(line: 705, column: 40, scope: !6434)
!6442 = !DILocation(line: 707, column: 11, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6434, file: !212, line: 707, column: 6)
!6444 = !DILocation(line: 707, column: 21, scope: !6443)
!6445 = !DILocation(line: 707, column: 6, scope: !6434)
!6446 = !DILocation(line: 711, column: 9, scope: !6434)
!6447 = !DILocation(line: 711, column: 2, scope: !6434)
!6448 = !DILocation(line: 718, column: 1, scope: !6434)
!6449 = distinct !DISubprogram(name: "k_sem_give", scope: !3672, file: !3672, line: 1061, type: !6450, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6452)
!6450 = !DISubroutineType(types: !6451)
!6451 = !{null, !6024}
!6452 = !{!6453}
!6453 = !DILocalVariable(name: "sem", arg: 1, scope: !6449, file: !3672, line: 1061, type: !6024)
!6454 = !DILocation(line: 0, scope: !6449)
!6455 = !DILocation(line: 1070, column: 2, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6449, file: !3672, line: 1070, column: 2)
!6457 = !{i64 2154069358}
!6458 = !DILocation(line: 1071, column: 2, scope: !6449)
!6459 = !DILocation(line: 1072, column: 1, scope: !6449)
!6460 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !212, file: !212, line: 878, type: !2673, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6461)
!6461 = !{!6462, !6463}
!6462 = !DILocalVariable(name: "dev", arg: 1, scope: !6460, file: !212, line: 878, type: !2622)
!6463 = !DILocalVariable(name: "api", scope: !6460, file: !212, line: 881, type: !2614)
!6464 = !DILocation(line: 0, scope: !6460)
!6465 = !DILocation(line: 882, column: 40, scope: !6460)
!6466 = !DILocation(line: 884, column: 11, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6460, file: !212, line: 884, column: 6)
!6468 = !DILocation(line: 884, column: 26, scope: !6467)
!6469 = !DILocation(line: 884, column: 6, scope: !6460)
!6470 = !DILocation(line: 885, column: 3, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6467, file: !212, line: 884, column: 35)
!6472 = !DILocation(line: 886, column: 2, scope: !6471)
!6473 = !DILocation(line: 890, column: 1, scope: !6460)
!6474 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !212, file: !212, line: 1136, type: !2643, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6475)
!6475 = !{!6476, !6477}
!6476 = !DILocalVariable(name: "dev", arg: 1, scope: !6474, file: !212, line: 1136, type: !2622)
!6477 = !DILocalVariable(name: "api", scope: !6474, file: !212, line: 1139, type: !2614)
!6478 = !DILocation(line: 0, scope: !6474)
!6479 = !DILocation(line: 1140, column: 40, scope: !6474)
!6480 = !DILocation(line: 1142, column: 11, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6474, file: !212, line: 1142, column: 6)
!6482 = !DILocation(line: 1142, column: 22, scope: !6481)
!6483 = !DILocation(line: 1142, column: 6, scope: !6474)
!6484 = !DILocation(line: 1145, column: 9, scope: !6474)
!6485 = !DILocation(line: 1145, column: 2, scope: !6474)
!6486 = !DILocation(line: 1150, column: 1, scope: !6474)
!6487 = distinct !DISubprogram(name: "tty_set_rx_buf", scope: !5822, file: !5822, line: 265, type: !6488, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6490)
!6488 = !DISubroutineType(types: !6489)
!6489 = !{!103, !5827, !102, !356}
!6490 = !{!6491, !6492, !6493}
!6491 = !DILocalVariable(name: "tty", arg: 1, scope: !6487, file: !5822, line: 265, type: !5827)
!6492 = !DILocalVariable(name: "buf", arg: 2, scope: !6487, file: !5822, line: 265, type: !102)
!6493 = !DILocalVariable(name: "size", arg: 3, scope: !6487, file: !5822, line: 265, type: !356)
!6494 = !DILocation(line: 0, scope: !6487)
!6495 = !DILocation(line: 267, column: 27, scope: !6487)
!6496 = !DILocation(line: 267, column: 2, scope: !6487)
!6497 = !DILocation(line: 269, column: 7, scope: !6487)
!6498 = !DILocation(line: 269, column: 18, scope: !6487)
!6499 = !DILocation(line: 270, column: 7, scope: !6487)
!6500 = !DILocation(line: 270, column: 21, scope: !6487)
!6501 = !DILocation(line: 272, column: 11, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6487, file: !5822, line: 272, column: 6)
!6503 = !DILocation(line: 272, column: 6, scope: !6487)
!6504 = !DILocation(line: 273, column: 20, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6502, file: !5822, line: 272, column: 16)
!6506 = !DILocation(line: 273, column: 3, scope: !6505)
!6507 = !DILocation(line: 274, column: 27, scope: !6505)
!6508 = !DILocation(line: 274, column: 3, scope: !6505)
!6509 = !DILocation(line: 275, column: 2, scope: !6505)
!6510 = !DILocation(line: 277, column: 2, scope: !6487)
!6511 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5911, file: !5911, line: 265, type: !2673, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6512)
!6512 = !{!6513}
!6513 = !DILocalVariable(name: "dev", arg: 1, scope: !6511, file: !5911, line: 265, type: !2622)
!6514 = !DILocation(line: 0, scope: !6511)
!6515 = !DILocation(line: 274, column: 2, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6511, file: !5911, line: 274, column: 2)
!6517 = !{i64 2154325897}
!6518 = !DILocation(line: 275, column: 2, scope: !6511)
!6519 = !DILocation(line: 276, column: 1, scope: !6511)
!6520 = distinct !DISubprogram(name: "k_sem_init", scope: !3672, file: !3672, line: 1026, type: !6521, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6523)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{!103, !6024, !32, !32}
!6523 = !{!6524, !6525, !6526}
!6524 = !DILocalVariable(name: "sem", arg: 1, scope: !6520, file: !3672, line: 1026, type: !6024)
!6525 = !DILocalVariable(name: "initial_count", arg: 2, scope: !6520, file: !3672, line: 1026, type: !32)
!6526 = !DILocalVariable(name: "limit", arg: 3, scope: !6520, file: !3672, line: 1026, type: !32)
!6527 = !DILocation(line: 0, scope: !6520)
!6528 = !DILocation(line: 1036, column: 2, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6520, file: !3672, line: 1036, column: 2)
!6530 = !{i64 2154069222}
!6531 = !DILocation(line: 1037, column: 9, scope: !6520)
!6532 = !DILocation(line: 1037, column: 2, scope: !6520)
!6533 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5911, file: !5911, line: 241, type: !2673, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6534)
!6534 = !{!6535}
!6535 = !DILocalVariable(name: "dev", arg: 1, scope: !6533, file: !5911, line: 241, type: !2622)
!6536 = !DILocation(line: 0, scope: !6533)
!6537 = !DILocation(line: 250, column: 2, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6533, file: !5911, line: 250, column: 2)
!6539 = !{i64 2154325829}
!6540 = !DILocation(line: 251, column: 2, scope: !6533)
!6541 = !DILocation(line: 252, column: 1, scope: !6533)
!6542 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !212, file: !212, line: 934, type: !2673, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6543)
!6543 = !{!6544, !6545}
!6544 = !DILocalVariable(name: "dev", arg: 1, scope: !6542, file: !212, line: 934, type: !2622)
!6545 = !DILocalVariable(name: "api", scope: !6542, file: !212, line: 937, type: !2614)
!6546 = !DILocation(line: 0, scope: !6542)
!6547 = !DILocation(line: 938, column: 40, scope: !6542)
!6548 = !DILocation(line: 940, column: 11, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6542, file: !212, line: 940, column: 6)
!6550 = !DILocation(line: 940, column: 25, scope: !6549)
!6551 = !DILocation(line: 940, column: 6, scope: !6542)
!6552 = !DILocation(line: 941, column: 3, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6549, file: !212, line: 940, column: 34)
!6554 = !DILocation(line: 942, column: 2, scope: !6553)
!6555 = !DILocation(line: 946, column: 1, scope: !6542)
!6556 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !212, file: !212, line: 955, type: !2673, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6557)
!6557 = !{!6558, !6559}
!6558 = !DILocalVariable(name: "dev", arg: 1, scope: !6556, file: !212, line: 955, type: !2622)
!6559 = !DILocalVariable(name: "api", scope: !6556, file: !212, line: 958, type: !2614)
!6560 = !DILocation(line: 0, scope: !6556)
!6561 = !DILocation(line: 959, column: 40, scope: !6556)
!6562 = !DILocation(line: 961, column: 11, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6556, file: !212, line: 961, column: 6)
!6564 = !DILocation(line: 961, column: 26, scope: !6563)
!6565 = !DILocation(line: 961, column: 6, scope: !6556)
!6566 = !DILocation(line: 962, column: 3, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6563, file: !212, line: 961, column: 35)
!6568 = !DILocation(line: 963, column: 2, scope: !6567)
!6569 = !DILocation(line: 967, column: 1, scope: !6556)
!6570 = distinct !DISubprogram(name: "tty_set_tx_buf", scope: !5822, file: !5822, line: 280, type: !6488, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6571)
!6571 = !{!6572, !6573, !6574}
!6572 = !DILocalVariable(name: "tty", arg: 1, scope: !6570, file: !5822, line: 280, type: !5827)
!6573 = !DILocalVariable(name: "buf", arg: 2, scope: !6570, file: !5822, line: 280, type: !102)
!6574 = !DILocalVariable(name: "size", arg: 3, scope: !6570, file: !5822, line: 280, type: !356)
!6575 = !DILocation(line: 0, scope: !6570)
!6576 = !DILocation(line: 282, column: 27, scope: !6570)
!6577 = !DILocation(line: 282, column: 2, scope: !6570)
!6578 = !DILocation(line: 284, column: 7, scope: !6570)
!6579 = !DILocation(line: 284, column: 18, scope: !6570)
!6580 = !DILocation(line: 285, column: 7, scope: !6570)
!6581 = !DILocation(line: 285, column: 21, scope: !6570)
!6582 = !DILocation(line: 287, column: 19, scope: !6570)
!6583 = !DILocation(line: 287, column: 32, scope: !6570)
!6584 = !DILocation(line: 287, column: 2, scope: !6570)
!6585 = !DILocation(line: 293, column: 2, scope: !6570)
!6586 = distinct !DISubprogram(name: "console_write", scope: !297, file: !297, line: 18, type: !6587, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6589)
!6587 = !DISubroutineType(types: !6588)
!6588 = !{!5825, !102, !13, !356}
!6589 = !{!6590, !6591, !6592}
!6590 = !DILocalVariable(name: "dummy", arg: 1, scope: !6586, file: !297, line: 18, type: !102)
!6591 = !DILocalVariable(name: "buf", arg: 2, scope: !6586, file: !297, line: 18, type: !13)
!6592 = !DILocalVariable(name: "size", arg: 3, scope: !6586, file: !297, line: 18, type: !356)
!6593 = !DILocation(line: 0, scope: !6586)
!6594 = !DILocation(line: 22, column: 9, scope: !6586)
!6595 = !DILocation(line: 22, column: 2, scope: !6586)
!6596 = distinct !DISubprogram(name: "console_read", scope: !297, file: !297, line: 25, type: !6597, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6599)
!6597 = !DISubroutineType(types: !6598)
!6598 = !{!5825, !102, !102, !356}
!6599 = !{!6600, !6601, !6602}
!6600 = !DILocalVariable(name: "dummy", arg: 1, scope: !6596, file: !297, line: 25, type: !102)
!6601 = !DILocalVariable(name: "buf", arg: 2, scope: !6596, file: !297, line: 25, type: !102)
!6602 = !DILocalVariable(name: "size", arg: 3, scope: !6596, file: !297, line: 25, type: !356)
!6603 = !DILocation(line: 0, scope: !6596)
!6604 = !DILocation(line: 29, column: 9, scope: !6596)
!6605 = !DILocation(line: 29, column: 2, scope: !6596)
!6606 = distinct !DISubprogram(name: "console_putchar", scope: !297, file: !297, line: 32, type: !1069, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6607)
!6607 = !{!6608}
!6608 = !DILocalVariable(name: "c", arg: 1, scope: !6606, file: !297, line: 32, type: !108)
!6609 = !DILocation(line: 0, scope: !6606)
!6610 = !DILocation(line: 34, column: 9, scope: !6606)
!6611 = !DILocation(line: 34, column: 2, scope: !6606)
!6612 = distinct !DISubprogram(name: "console_getchar", scope: !297, file: !297, line: 37, type: !6613, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6615)
!6613 = !DISubroutineType(types: !6614)
!6614 = !{!103}
!6615 = !{!6616, !6617}
!6616 = !DILocalVariable(name: "c", scope: !6612, file: !297, line: 39, type: !163)
!6617 = !DILocalVariable(name: "res", scope: !6612, file: !297, line: 40, type: !103)
!6618 = !DILocation(line: 39, column: 2, scope: !6612)
!6619 = !DILocation(line: 0, scope: !6612)
!6620 = !DILocation(line: 42, column: 8, scope: !6612)
!6621 = !DILocation(line: 43, column: 10, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6612, file: !297, line: 43, column: 6)
!6623 = !DILocation(line: 43, column: 6, scope: !6612)
!6624 = !DILocation(line: 48, column: 1, scope: !6612)
!6625 = distinct !DISubprogram(name: "console_init", scope: !297, file: !297, line: 50, type: !6613, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6626)
!6626 = !{!6627, !6628, !6629}
!6627 = !DILocalVariable(name: "uart_dev", scope: !6625, file: !297, line: 52, type: !218)
!6628 = !DILocalVariable(name: "ret", scope: !6625, file: !297, line: 53, type: !103)
!6629 = !DILocalVariable(name: "api", scope: !6630, file: !297, line: 68, type: !209)
!6630 = distinct !DILexicalBlock(scope: !6631, file: !297, line: 67, column: 71)
!6631 = distinct !DILexicalBlock(scope: !6625, file: !297, line: 67, column: 6)
!6632 = !DILocation(line: 0, scope: !6625)
!6633 = !DILocation(line: 56, column: 7, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6625, file: !297, line: 56, column: 6)
!6635 = !DILocation(line: 56, column: 6, scope: !6625)
!6636 = !DILocation(line: 60, column: 8, scope: !6625)
!6637 = !DILocation(line: 62, column: 6, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6625, file: !297, line: 62, column: 6)
!6639 = !DILocation(line: 62, column: 6, scope: !6625)
!6640 = !DILocation(line: 69, column: 46, scope: !6630)
!6641 = !DILocation(line: 0, scope: !6630)
!6642 = !DILocation(line: 70, column: 13, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6630, file: !297, line: 70, column: 7)
!6644 = !DILocation(line: 70, column: 8, scope: !6643)
!6645 = !DILocation(line: 75, column: 2, scope: !6625)
!6646 = !DILocation(line: 76, column: 2, scope: !6625)
!6647 = !DILocation(line: 78, column: 2, scope: !6625)
!6648 = !DILocation(line: 79, column: 1, scope: !6625)
!6649 = distinct !DISubprogram(name: "device_is_ready", scope: !6650, file: !6650, line: 47, type: !6651, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6653)
!6650 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!6651 = !DISubroutineType(types: !6652)
!6652 = !{!166, !218}
!6653 = !{!6654}
!6654 = !DILocalVariable(name: "dev", arg: 1, scope: !6649, file: !6650, line: 47, type: !218)
!6655 = !DILocation(line: 0, scope: !6649)
!6656 = !DILocation(line: 55, column: 2, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6649, file: !6650, line: 55, column: 2)
!6658 = !{i64 2154238110}
!6659 = !DILocation(line: 56, column: 9, scope: !6649)
!6660 = !DILocation(line: 56, column: 2, scope: !6649)
!6661 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !6651, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !206, retainedNodes: !6662)
!6662 = !{!6663}
!6663 = !DILocalVariable(name: "dev", arg: 1, scope: !6661, file: !152, line: 730, type: !218)
!6664 = !DILocation(line: 0, scope: !6661)
!6665 = !DILocation(line: 732, column: 9, scope: !6661)
!6666 = !DILocation(line: 732, column: 2, scope: !6661)
!6667 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6668, file: !6668, line: 57, type: !6669, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6715)
!6668 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6669 = !DISubroutineType(types: !6670)
!6670 = !{null, !32, !6671}
!6671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6672, size: 32)
!6672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6673)
!6673 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2813, line: 141, baseType: !6674)
!6674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2813, line: 97, size: 256, elements: !6675)
!6675 = !{!6676}
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6674, file: !2813, line: 107, baseType: !6677, size: 256)
!6677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2813, line: 98, size: 256, elements: !6678)
!6678 = !{!6679, !6684, !6689, !6694, !6699, !6704, !6709, !6714}
!6679 = !DIDerivedType(tag: DW_TAG_member, scope: !6677, file: !2813, line: 99, baseType: !6680, size: 32)
!6680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6677, file: !2813, line: 99, size: 32, elements: !6681)
!6681 = !{!6682, !6683}
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6680, file: !2813, line: 99, baseType: !132, size: 32)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6680, file: !2813, line: 99, baseType: !132, size: 32)
!6684 = !DIDerivedType(tag: DW_TAG_member, scope: !6677, file: !2813, line: 100, baseType: !6685, size: 32, offset: 32)
!6685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6677, file: !2813, line: 100, size: 32, elements: !6686)
!6686 = !{!6687, !6688}
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6685, file: !2813, line: 100, baseType: !132, size: 32)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6685, file: !2813, line: 100, baseType: !132, size: 32)
!6689 = !DIDerivedType(tag: DW_TAG_member, scope: !6677, file: !2813, line: 101, baseType: !6690, size: 32, offset: 64)
!6690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6677, file: !2813, line: 101, size: 32, elements: !6691)
!6691 = !{!6692, !6693}
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6690, file: !2813, line: 101, baseType: !132, size: 32)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6690, file: !2813, line: 101, baseType: !132, size: 32)
!6694 = !DIDerivedType(tag: DW_TAG_member, scope: !6677, file: !2813, line: 102, baseType: !6695, size: 32, offset: 96)
!6695 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6677, file: !2813, line: 102, size: 32, elements: !6696)
!6696 = !{!6697, !6698}
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6695, file: !2813, line: 102, baseType: !132, size: 32)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6695, file: !2813, line: 102, baseType: !132, size: 32)
!6699 = !DIDerivedType(tag: DW_TAG_member, scope: !6677, file: !2813, line: 103, baseType: !6700, size: 32, offset: 128)
!6700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6677, file: !2813, line: 103, size: 32, elements: !6701)
!6701 = !{!6702, !6703}
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6700, file: !2813, line: 103, baseType: !132, size: 32)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6700, file: !2813, line: 103, baseType: !132, size: 32)
!6704 = !DIDerivedType(tag: DW_TAG_member, scope: !6677, file: !2813, line: 104, baseType: !6705, size: 32, offset: 160)
!6705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6677, file: !2813, line: 104, size: 32, elements: !6706)
!6706 = !{!6707, !6708}
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6705, file: !2813, line: 104, baseType: !132, size: 32)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6705, file: !2813, line: 104, baseType: !132, size: 32)
!6709 = !DIDerivedType(tag: DW_TAG_member, scope: !6677, file: !2813, line: 105, baseType: !6710, size: 32, offset: 192)
!6710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6677, file: !2813, line: 105, size: 32, elements: !6711)
!6711 = !{!6712, !6713}
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6710, file: !2813, line: 105, baseType: !132, size: 32)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6710, file: !2813, line: 105, baseType: !132, size: 32)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6677, file: !2813, line: 106, baseType: !132, size: 32, offset: 224)
!6715 = !{!6716, !6717}
!6716 = !DILocalVariable(name: "reason", arg: 1, scope: !6667, file: !6668, line: 57, type: !32)
!6717 = !DILocalVariable(name: "esf", arg: 2, scope: !6667, file: !6668, line: 57, type: !6671)
!6718 = !DILocation(line: 0, scope: !6667)
!6719 = !DILocation(line: 63, column: 2, scope: !6667)
!6720 = !DILocation(line: 64, column: 1, scope: !6667)
!6721 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6668, file: !6668, line: 82, type: !6722, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6737)
!6722 = !DISubroutineType(types: !6723)
!6723 = !{null, !6671, !6724}
!6724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6725, size: 32)
!6725 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !436, line: 37, baseType: !6726)
!6726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !6727)
!6727 = !{!6728, !6729, !6730, !6731, !6732, !6733, !6734, !6735, !6736}
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6726, file: !436, line: 26, baseType: !132, size: 32)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6726, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6726, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6726, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6726, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6726, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6726, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6726, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6726, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!6737 = !{!6738, !6739, !6740}
!6738 = !DILocalVariable(name: "esf", arg: 1, scope: !6721, file: !6668, line: 82, type: !6671)
!6739 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6721, file: !6668, line: 82, type: !6724)
!6740 = !DILocalVariable(name: "reason", scope: !6721, file: !6668, line: 88, type: !32)
!6741 = !DILocation(line: 0, scope: !6721)
!6742 = !DILocation(line: 88, column: 35, scope: !6721)
!6743 = !DILocation(line: 108, column: 2, scope: !6721)
!6744 = !DILocation(line: 131, column: 1, scope: !6721)
!6745 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6668, file: !6668, line: 133, type: !6746, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6748)
!6746 = !DISubroutineType(types: !6747)
!6747 = !{null, !102}
!6748 = !{!6749, !6750, !6751}
!6749 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6745, file: !6668, line: 133, type: !102)
!6750 = !DILocalVariable(name: "ssf_contents", scope: !6745, file: !6668, line: 135, type: !837)
!6751 = !DILocalVariable(name: "oops_esf", scope: !6745, file: !6668, line: 136, type: !6673)
!6752 = !DILocation(line: 0, scope: !6745)
!6753 = !DILocation(line: 136, column: 2, scope: !6745)
!6754 = !DILocation(line: 136, column: 15, scope: !6745)
!6755 = !DILocation(line: 139, column: 22, scope: !6745)
!6756 = !DILocation(line: 139, column: 17, scope: !6745)
!6757 = !DILocation(line: 139, column: 20, scope: !6745)
!6758 = !DILocation(line: 141, column: 2, scope: !6745)
!6759 = !DILocation(line: 142, column: 2, scope: !6745)
!6760 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6761, file: !6761, line: 40, type: !5800, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6762)
!6761 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6762 = !{!6763}
!6763 = !DILocalVariable(name: "irq", arg: 1, scope: !6760, file: !6761, line: 40, type: !32)
!6764 = !DILocation(line: 0, scope: !6760)
!6765 = !DILocation(line: 42, column: 2, scope: !6760)
!6766 = !DILocation(line: 43, column: 1, scope: !6760)
!6767 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !507, file: !507, line: 1684, type: !6768, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6770)
!6768 = !DISubroutineType(types: !6769)
!6769 = !{null, !742}
!6770 = !{!6771}
!6771 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6767, file: !507, line: 1684, type: !742)
!6772 = !DILocation(line: 0, scope: !6767)
!6773 = !DILocation(line: 1686, column: 23, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6767, file: !507, line: 1686, column: 7)
!6775 = !DILocation(line: 1686, column: 7, scope: !6767)
!6776 = !DILocation(line: 1688, column: 5, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6774, file: !507, line: 1687, column: 3)
!6778 = !{i64 2150355570}
!6779 = !DILocation(line: 1689, column: 81, scope: !6777)
!6780 = !DILocation(line: 1689, column: 60, scope: !6777)
!6781 = !DILocation(line: 1689, column: 34, scope: !6777)
!6782 = !DILocation(line: 1689, column: 5, scope: !6777)
!6783 = !DILocation(line: 1689, column: 43, scope: !6777)
!6784 = !DILocation(line: 1690, column: 5, scope: !6777)
!6785 = !{i64 2150355684}
!6786 = !DILocation(line: 1691, column: 3, scope: !6777)
!6787 = !DILocation(line: 1692, column: 1, scope: !6767)
!6788 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6761, file: !6761, line: 45, type: !5800, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6789)
!6789 = !{!6790}
!6790 = !DILocalVariable(name: "irq", arg: 1, scope: !6788, file: !6761, line: 45, type: !32)
!6791 = !DILocation(line: 0, scope: !6788)
!6792 = !DILocation(line: 47, column: 2, scope: !6788)
!6793 = !DILocation(line: 48, column: 1, scope: !6788)
!6794 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !507, file: !507, line: 1722, type: !6768, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6795)
!6795 = !{!6796}
!6796 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6794, file: !507, line: 1722, type: !742)
!6797 = !DILocation(line: 0, scope: !6794)
!6798 = !DILocation(line: 1724, column: 23, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6794, file: !507, line: 1724, column: 7)
!6800 = !DILocation(line: 1724, column: 7, scope: !6794)
!6801 = !DILocation(line: 1726, column: 81, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6799, file: !507, line: 1725, column: 3)
!6803 = !DILocation(line: 1726, column: 60, scope: !6802)
!6804 = !DILocation(line: 1726, column: 34, scope: !6802)
!6805 = !DILocation(line: 1726, column: 5, scope: !6802)
!6806 = !DILocation(line: 1726, column: 43, scope: !6802)
!6807 = !DILocation(line: 271, column: 3, scope: !6808, inlinedAt: !6810)
!6808 = distinct !DISubprogram(name: "__DSB", scope: !6809, file: !6809, line: 269, type: !3232, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !473)
!6809 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6810 = distinct !DILocation(line: 1727, column: 5, scope: !6802)
!6811 = !{i64 2809953}
!6812 = !DILocation(line: 260, column: 3, scope: !6813, inlinedAt: !6814)
!6813 = distinct !DISubprogram(name: "__ISB", scope: !6809, file: !6809, line: 258, type: !3232, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !473)
!6814 = distinct !DILocation(line: 1728, column: 5, scope: !6802)
!6815 = !{i64 2809670}
!6816 = !DILocation(line: 1729, column: 3, scope: !6802)
!6817 = !DILocation(line: 1730, column: 1, scope: !6794)
!6818 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6761, file: !6761, line: 50, type: !6819, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6821)
!6819 = !DISubroutineType(types: !6820)
!6820 = !{!103, !32}
!6821 = !{!6822}
!6822 = !DILocalVariable(name: "irq", arg: 1, scope: !6818, file: !6761, line: 50, type: !32)
!6823 = !DILocation(line: 0, scope: !6818)
!6824 = !DILocation(line: 52, column: 20, scope: !6818)
!6825 = !DILocation(line: 52, column: 9, scope: !6818)
!6826 = !DILocation(line: 52, column: 41, scope: !6818)
!6827 = !DILocation(line: 52, column: 39, scope: !6818)
!6828 = !DILocation(line: 52, column: 2, scope: !6818)
!6829 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6761, file: !6761, line: 64, type: !6830, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6832)
!6830 = !DISubroutineType(types: !6831)
!6831 = !{null, !32, !32, !132}
!6832 = !{!6833, !6834, !6835}
!6833 = !DILocalVariable(name: "irq", arg: 1, scope: !6829, file: !6761, line: 64, type: !32)
!6834 = !DILocalVariable(name: "prio", arg: 2, scope: !6829, file: !6761, line: 64, type: !32)
!6835 = !DILocalVariable(name: "flags", arg: 3, scope: !6829, file: !6761, line: 64, type: !132)
!6836 = !DILocation(line: 0, scope: !6829)
!6837 = !DILocation(line: 83, column: 8, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !6761, line: 82, column: 9)
!6839 = distinct !DILexicalBlock(scope: !6829, file: !6761, line: 76, column: 6)
!6840 = !DILocation(line: 95, column: 2, scope: !6829)
!6841 = !DILocation(line: 96, column: 1, scope: !6829)
!6842 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6843, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6845)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{null, !742, !132}
!6845 = !{!6846, !6847}
!6846 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6842, file: !507, line: 1814, type: !742)
!6847 = !DILocalVariable(name: "priority", arg: 2, scope: !6842, file: !507, line: 1814, type: !132)
!6848 = !DILocation(line: 0, scope: !6842)
!6849 = !DILocation(line: 0, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6842, file: !507, line: 1816, column: 7)
!6851 = !DILocation(line: 1816, column: 7, scope: !6842)
!6852 = !DILocation(line: 1824, column: 1, scope: !6842)
!6853 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6761, file: !6761, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2704, retainedNodes: !6854)
!6854 = !{!6855}
!6855 = !DILocalVariable(name: "unused", arg: 1, scope: !6853, file: !6761, line: 155, type: !13)
!6856 = !DILocation(line: 0, scope: !6853)
!6857 = !DILocation(line: 159, column: 2, scope: !6853)
!6858 = !DILocation(line: 160, column: 1, scope: !6853)
!6859 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6860, file: !6860, line: 87, type: !3232, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2750, retainedNodes: !473)
!6860 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6861 = !DILocation(line: 89, column: 2, scope: !6859)
!6862 = !DILocation(line: 90, column: 2, scope: !6859)
!6863 = !DILocation(line: 91, column: 1, scope: !6859)
!6864 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6860, file: !6860, line: 23, type: !3232, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!6865 = !DISubprogram(name: "z_arm_int_exit", scope: !6866, file: !6866, line: 153, type: !3232, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!6866 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6867 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6868, file: !6868, line: 256, type: !3232, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !473)
!6868 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6869 = !DILocation(line: 258, column: 2, scope: !6867)
!6870 = !DILocation(line: 260, column: 2, scope: !6867)
!6871 = !DILocation(line: 262, column: 2, scope: !6867)
!6872 = !DILocation(line: 263, column: 2, scope: !6867)
!6873 = !DILocation(line: 267, column: 2, scope: !6867)
!6874 = !DILocation(line: 268, column: 2, scope: !6867)
!6875 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6868, file: !6868, line: 53, type: !3232, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !473)
!6876 = !DILocation(line: 55, column: 12, scope: !6875)
!6877 = !DILocation(line: 271, column: 3, scope: !6878, inlinedAt: !6879)
!6878 = distinct !DISubprogram(name: "__DSB", scope: !6809, file: !6809, line: 269, type: !3232, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !473)
!6879 = distinct !DILocation(line: 56, column: 2, scope: !6875)
!6880 = !{i64 2808624}
!6881 = !DILocation(line: 260, column: 3, scope: !6882, inlinedAt: !6883)
!6882 = distinct !DISubprogram(name: "__ISB", scope: !6809, file: !6809, line: 258, type: !3232, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !473)
!6883 = distinct !DILocation(line: 57, column: 2, scope: !6875)
!6884 = !{i64 2808341}
!6885 = !DILocation(line: 58, column: 1, scope: !6875)
!6886 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6868, file: !6868, line: 96, type: !3232, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !473)
!6887 = !DILocation(line: 103, column: 13, scope: !6886)
!6888 = !DILocation(line: 975, column: 3, scope: !6889, inlinedAt: !6894)
!6889 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6809, file: !6809, line: 971, type: !6890, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !6892)
!6890 = !DISubroutineType(types: !6891)
!6891 = !{!132}
!6892 = !{!6893}
!6893 = !DILocalVariable(name: "result", scope: !6889, file: !6809, line: 973, type: !132)
!6894 = distinct !DILocation(line: 189, column: 16, scope: !6886)
!6895 = !{i64 2829454}
!6896 = !DILocation(line: 0, scope: !6889, inlinedAt: !6894)
!6897 = !DILocation(line: 189, column: 32, scope: !6886)
!6898 = !DILocalVariable(name: "control", arg: 1, scope: !6899, file: !6809, line: 1001, type: !132)
!6899 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6809, file: !6809, line: 1001, type: !6900, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !6902)
!6900 = !DISubroutineType(types: !6901)
!6901 = !{null, !132}
!6902 = !{!6898}
!6903 = !DILocation(line: 0, scope: !6899, inlinedAt: !6904)
!6904 = distinct !DILocation(line: 189, column: 2, scope: !6886)
!6905 = !DILocation(line: 1003, column: 3, scope: !6899, inlinedAt: !6904)
!6906 = !{i64 2830174}
!6907 = !DILocation(line: 260, column: 3, scope: !6882, inlinedAt: !6908)
!6908 = distinct !DILocation(line: 1004, column: 3, scope: !6899, inlinedAt: !6904)
!6909 = !DILocation(line: 191, column: 1, scope: !6886)
!6910 = distinct !DISubprogram(name: "arch_swap", scope: !6911, file: !6911, line: 33, type: !6819, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !6912)
!6911 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6912 = !{!6913}
!6913 = !DILocalVariable(name: "key", arg: 1, scope: !6910, file: !6911, line: 33, type: !32)
!6914 = !DILocation(line: 0, scope: !6910)
!6915 = !DILocation(line: 36, column: 2, scope: !6910)
!6916 = !DILocation(line: 36, column: 17, scope: !6910)
!6917 = !DILocation(line: 36, column: 25, scope: !6910)
!6918 = !DILocation(line: 37, column: 37, scope: !6910)
!6919 = !DILocation(line: 37, column: 17, scope: !6910)
!6920 = !DILocation(line: 37, column: 35, scope: !6910)
!6921 = !DILocation(line: 41, column: 12, scope: !6910)
!6922 = !DILocalVariable(name: "key", arg: 1, scope: !6923, file: !5789, line: 84, type: !32)
!6923 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5789, file: !5789, line: 84, type: !5800, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !6924)
!6924 = !{!6922}
!6925 = !DILocation(line: 0, scope: !6923, inlinedAt: !6926)
!6926 = distinct !DILocation(line: 44, column: 2, scope: !6910)
!6927 = !DILocation(line: 95, column: 2, scope: !6923, inlinedAt: !6926)
!6928 = !{i64 1947820}
!6929 = !DILocation(line: 53, column: 9, scope: !6910)
!6930 = !DILocation(line: 53, column: 24, scope: !6910)
!6931 = !DILocation(line: 53, column: 2, scope: !6910)
!6932 = distinct !DISubprogram(name: "arch_new_thread", scope: !6933, file: !6933, line: 56, type: !6934, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !7041)
!6933 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6934 = !DISubroutineType(types: !6935)
!6935 = !{null, !6936, !7036, !1063, !3550, !102, !102, !102}
!6936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6937, size: 32)
!6937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !6938)
!6938 = !{!6939, !6997, !7009, !7010, !7011, !7012, !7018, !7031}
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6937, file: !367, line: 247, baseType: !6940, size: 384)
!6940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !6941)
!6941 = !{!6942, !6966, !6973, !6974, !6975, !6984, !6985, !6986}
!6942 = !DIDerivedType(tag: DW_TAG_member, scope: !6940, file: !367, line: 60, baseType: !6943, size: 64)
!6943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6940, file: !367, line: 60, size: 64, elements: !6944)
!6944 = !{!6945, !6960}
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6943, file: !367, line: 61, baseType: !6946, size: 64)
!6946 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !6947)
!6947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !6948)
!6948 = !{!6949, !6955}
!6949 = !DIDerivedType(tag: DW_TAG_member, scope: !6947, file: !321, line: 38, baseType: !6950, size: 32)
!6950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6947, file: !321, line: 38, size: 32, elements: !6951)
!6951 = !{!6952, !6954}
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6950, file: !321, line: 39, baseType: !6953, size: 32)
!6953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6947, size: 32)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6950, file: !321, line: 40, baseType: !6953, size: 32)
!6955 = !DIDerivedType(tag: DW_TAG_member, scope: !6947, file: !321, line: 42, baseType: !6956, size: 32, offset: 32)
!6956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6947, file: !321, line: 42, size: 32, elements: !6957)
!6957 = !{!6958, !6959}
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6956, file: !321, line: 43, baseType: !6953, size: 32)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6956, file: !321, line: 44, baseType: !6953, size: 32)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6943, file: !367, line: 62, baseType: !6961, size: 64)
!6961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !6962)
!6962 = !{!6963}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6961, file: !392, line: 50, baseType: !6964, size: 64)
!6964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6965, size: 64, elements: !397)
!6965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6961, size: 32)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6940, file: !367, line: 68, baseType: !6967, size: 32, offset: 64)
!6967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6968, size: 32)
!6968 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !6969)
!6969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !6970)
!6970 = !{!6971}
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6969, file: !316, line: 232, baseType: !6972, size: 64)
!6972 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !6947)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6940, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6940, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!6975 = !DIDerivedType(tag: DW_TAG_member, scope: !6940, file: !367, line: 90, baseType: !6976, size: 16, offset: 112)
!6976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6940, file: !367, line: 90, size: 16, elements: !6977)
!6977 = !{!6978, !6983}
!6978 = !DIDerivedType(tag: DW_TAG_member, scope: !6976, file: !367, line: 91, baseType: !6979, size: 16)
!6979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6976, file: !367, line: 91, size: 16, elements: !6980)
!6980 = !{!6981, !6982}
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6979, file: !367, line: 96, baseType: !415, size: 8)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6979, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6976, file: !367, line: 100, baseType: !340, size: 16)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6940, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6940, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6940, file: !367, line: 131, baseType: !6987, size: 192, offset: 192)
!6987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !6988)
!6988 = !{!6989, !6990, !6996}
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6987, file: !316, line: 245, baseType: !6946, size: 64)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6987, file: !316, line: 246, baseType: !6991, size: 32, offset: 64)
!6991 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !6992)
!6992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6993, size: 32)
!6993 = !DISubroutineType(types: !6994)
!6994 = !{null, !6995}
!6995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6987, size: 32)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6987, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6937, file: !367, line: 250, baseType: !6998, size: 288, offset: 384)
!6998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !6999)
!6999 = !{!7000, !7001, !7002, !7003, !7004, !7005, !7006, !7007, !7008}
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6998, file: !436, line: 26, baseType: !132, size: 32)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6998, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6998, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6998, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6998, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6998, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6998, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6998, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6998, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6937, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6937, file: !367, line: 256, baseType: !6968, size: 64, offset: 704)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6937, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6937, file: !367, line: 300, baseType: !7013, size: 96, offset: 800)
!7013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !7014)
!7014 = !{!7015, !7016, !7017}
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7013, file: !367, line: 153, baseType: !22, size: 32)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7013, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7013, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6937, file: !367, line: 325, baseType: !7019, size: 32, offset: 896)
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 32)
!7020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !7021)
!7021 = !{!7022, !7028, !7029}
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7020, file: !312, line: 5074, baseType: !7023, size: 96)
!7023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !7024)
!7024 = !{!7025, !7026, !7027}
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7023, file: !462, line: 57, baseType: !465, size: 32)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7023, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7023, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7020, file: !312, line: 5075, baseType: !6968, size: 64, offset: 96)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7020, file: !312, line: 5076, baseType: !7030, offset: 160)
!7030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6937, file: !367, line: 343, baseType: !7032, size: 64, offset: 928)
!7032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !7033)
!7033 = !{!7034, !7035}
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7032, file: !436, line: 63, baseType: !132, size: 32)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7032, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!7036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7037, size: 32)
!7037 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3551, line: 44, baseType: !7038)
!7038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2155, line: 47, size: 8, elements: !7039)
!7039 = !{!7040}
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7038, file: !2155, line: 48, baseType: !108, size: 8)
!7041 = !{!7042, !7043, !7044, !7045, !7046, !7047, !7048, !7049}
!7042 = !DILocalVariable(name: "thread", arg: 1, scope: !6932, file: !6933, line: 56, type: !6936)
!7043 = !DILocalVariable(name: "stack", arg: 2, scope: !6932, file: !6933, line: 56, type: !7036)
!7044 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6932, file: !6933, line: 57, type: !1063)
!7045 = !DILocalVariable(name: "entry", arg: 4, scope: !6932, file: !6933, line: 57, type: !3550)
!7046 = !DILocalVariable(name: "p1", arg: 5, scope: !6932, file: !6933, line: 58, type: !102)
!7047 = !DILocalVariable(name: "p2", arg: 6, scope: !6932, file: !6933, line: 58, type: !102)
!7048 = !DILocalVariable(name: "p3", arg: 7, scope: !6932, file: !6933, line: 58, type: !102)
!7049 = !DILocalVariable(name: "iframe", scope: !6932, file: !6933, line: 60, type: !2811)
!7050 = !DILocation(line: 0, scope: !6932)
!7051 = !DILocation(line: 85, column: 11, scope: !6932)
!7052 = !DILocation(line: 93, column: 10, scope: !6932)
!7053 = !DILocation(line: 98, column: 13, scope: !6932)
!7054 = !DILocation(line: 100, column: 15, scope: !6932)
!7055 = !DILocation(line: 100, column: 10, scope: !6932)
!7056 = !DILocation(line: 100, column: 13, scope: !6932)
!7057 = !DILocation(line: 101, column: 15, scope: !6932)
!7058 = !DILocation(line: 101, column: 10, scope: !6932)
!7059 = !DILocation(line: 101, column: 13, scope: !6932)
!7060 = !DILocation(line: 102, column: 15, scope: !6932)
!7061 = !DILocation(line: 102, column: 10, scope: !6932)
!7062 = !DILocation(line: 102, column: 13, scope: !6932)
!7063 = !DILocation(line: 103, column: 15, scope: !6932)
!7064 = !DILocation(line: 103, column: 10, scope: !6932)
!7065 = !DILocation(line: 103, column: 13, scope: !6932)
!7066 = !DILocation(line: 106, column: 10, scope: !6932)
!7067 = !DILocation(line: 106, column: 15, scope: !6932)
!7068 = !DILocation(line: 122, column: 29, scope: !6932)
!7069 = !DILocation(line: 122, column: 23, scope: !6932)
!7070 = !DILocation(line: 122, column: 27, scope: !6932)
!7071 = !DILocation(line: 123, column: 15, scope: !6932)
!7072 = !DILocation(line: 123, column: 23, scope: !6932)
!7073 = !DILocation(line: 143, column: 1, scope: !6932)
!7074 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6933, file: !6933, line: 385, type: !7075, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !7078)
!7075 = !DISubroutineType(types: !7076)
!7076 = !{!132, !7077, !7077}
!7077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!7078 = !{!7079, !7080, !7081, !7084}
!7079 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7074, file: !6933, line: 385, type: !7077)
!7080 = !DILocalVariable(name: "psp", arg: 2, scope: !7074, file: !6933, line: 385, type: !7077)
!7081 = !DILocalVariable(name: "thread", scope: !7074, file: !6933, line: 388, type: !7082)
!7082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7083, size: 32)
!7083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6937)
!7084 = !DILocalVariable(name: "guard_len", scope: !7074, file: !6933, line: 405, type: !132)
!7085 = !DILocation(line: 0, scope: !7074)
!7086 = !DILocation(line: 388, column: 34, scope: !7074)
!7087 = !DILocation(line: 390, column: 13, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7074, file: !6933, line: 390, column: 6)
!7089 = !DILocation(line: 390, column: 6, scope: !7074)
!7090 = !DILocation(line: 438, column: 6, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7074, file: !6933, line: 438, column: 6)
!7092 = !DILocation(line: 438, column: 6, scope: !7074)
!7093 = !DILocation(line: 442, column: 3, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7091, file: !6933, line: 440, column: 22)
!7095 = !DILocation(line: 455, column: 1, scope: !7074)
!7096 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6933, file: !6933, line: 530, type: !7097, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !7099)
!7097 = !DISubroutineType(types: !7098)
!7098 = !{null, !6936, !1063, !3550}
!7099 = !{!7100, !7101, !7102}
!7100 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7096, file: !6933, line: 530, type: !6936)
!7101 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7096, file: !6933, line: 530, type: !1063)
!7102 = !DILocalVariable(name: "_main", arg: 3, scope: !7096, file: !6933, line: 531, type: !3550)
!7103 = !DILocation(line: 0, scope: !7096)
!7104 = !DILocation(line: 535, column: 11, scope: !7096)
!7105 = !DILocation(line: 560, column: 2, scope: !7096)
!7106 = !DILocation(line: 576, column: 2, scope: !7096)
!7107 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7108 = !DILocation(line: 603, column: 2, scope: !7096)
!7109 = distinct !DISubprogram(name: "z_arm_fault", scope: !7110, file: !7110, line: 1036, type: !7111, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7126)
!7110 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7111 = !DISubroutineType(types: !7112)
!7112 = !{null, !132, !132, !132, !7113}
!7113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7114, size: 32)
!7114 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !436, line: 37, baseType: !7115)
!7115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !7116)
!7116 = !{!7117, !7118, !7119, !7120, !7121, !7122, !7123, !7124, !7125}
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7115, file: !436, line: 26, baseType: !132, size: 32)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7115, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7115, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7115, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7115, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7115, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7115, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7115, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7115, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7126 = !{!7127, !7128, !7129, !7130, !7131, !7132, !7133, !7134, !7135, !7136}
!7127 = !DILocalVariable(name: "msp", arg: 1, scope: !7109, file: !7110, line: 1036, type: !132)
!7128 = !DILocalVariable(name: "psp", arg: 2, scope: !7109, file: !7110, line: 1036, type: !132)
!7129 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7109, file: !7110, line: 1036, type: !132)
!7130 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7109, file: !7110, line: 1037, type: !7113)
!7131 = !DILocalVariable(name: "reason", scope: !7109, file: !7110, line: 1039, type: !132)
!7132 = !DILocalVariable(name: "fault", scope: !7109, file: !7110, line: 1040, type: !103)
!7133 = !DILocalVariable(name: "recoverable", scope: !7109, file: !7110, line: 1041, type: !166)
!7134 = !DILocalVariable(name: "nested_exc", scope: !7109, file: !7110, line: 1041, type: !166)
!7135 = !DILocalVariable(name: "esf", scope: !7109, file: !7110, line: 1042, type: !2879)
!7136 = !DILocalVariable(name: "esf_copy", scope: !7109, file: !7110, line: 1047, type: !2880)
!7137 = !DILocation(line: 0, scope: !7109)
!7138 = !DILocation(line: 1040, column: 19, scope: !7109)
!7139 = !DILocation(line: 1040, column: 24, scope: !7109)
!7140 = !DILocation(line: 1041, column: 2, scope: !7109)
!7141 = !DILocation(line: 1047, column: 2, scope: !7109)
!7142 = !DILocation(line: 1047, column: 15, scope: !7109)
!7143 = !DILocalVariable(name: "key", arg: 1, scope: !7144, file: !5789, line: 84, type: !32)
!7144 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5789, file: !5789, line: 84, type: !5800, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7145)
!7145 = !{!7143}
!7146 = !DILocation(line: 0, scope: !7144, inlinedAt: !7147)
!7147 = distinct !DILocation(line: 1050, column: 2, scope: !7109)
!7148 = !DILocation(line: 95, column: 2, scope: !7144, inlinedAt: !7147)
!7149 = !{i64 1981064}
!7150 = !DILocation(line: 1055, column: 9, scope: !7109)
!7151 = !DILocation(line: 1063, column: 11, scope: !7109)
!7152 = !DILocation(line: 1064, column: 6, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7109, file: !7110, line: 1064, column: 6)
!7154 = !{i8 0, i8 2}
!7155 = !DILocation(line: 1064, column: 6, scope: !7109)
!7156 = !DILocation(line: 1070, column: 20, scope: !7109)
!7157 = !DILocation(line: 1070, column: 2, scope: !7109)
!7158 = !DILocation(line: 1089, column: 6, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7109, file: !7110, line: 1089, column: 6)
!7160 = !DILocation(line: 0, scope: !7159)
!7161 = !DILocation(line: 1089, column: 6, scope: !7109)
!7162 = !DILocation(line: 1090, column: 28, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !7110, line: 1090, column: 7)
!7164 = distinct !DILexicalBlock(scope: !7159, file: !7110, line: 1089, column: 18)
!7165 = !DILocation(line: 1090, column: 44, scope: !7163)
!7166 = !DILocation(line: 1090, column: 7, scope: !7164)
!7167 = !DILocation(line: 1091, column: 24, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7163, file: !7110, line: 1090, column: 50)
!7169 = !DILocation(line: 1092, column: 3, scope: !7168)
!7170 = !DILocation(line: 1094, column: 23, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7159, file: !7110, line: 1093, column: 9)
!7172 = !DILocation(line: 1097, column: 2, scope: !7109)
!7173 = !DILocation(line: 1098, column: 1, scope: !7109)
!7174 = distinct !DISubprogram(name: "get_esf", scope: !7110, file: !7110, line: 894, type: !7175, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7178)
!7175 = !DISubroutineType(types: !7176)
!7176 = !{!2879, !132, !132, !132, !7177}
!7177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!7178 = !{!7179, !7180, !7181, !7182, !7183, !7184}
!7179 = !DILocalVariable(name: "msp", arg: 1, scope: !7174, file: !7110, line: 894, type: !132)
!7180 = !DILocalVariable(name: "psp", arg: 2, scope: !7174, file: !7110, line: 894, type: !132)
!7181 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7174, file: !7110, line: 894, type: !132)
!7182 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7174, file: !7110, line: 895, type: !7177)
!7183 = !DILocalVariable(name: "alternative_state_exc", scope: !7174, file: !7110, line: 897, type: !166)
!7184 = !DILocalVariable(name: "ptr_esf", scope: !7174, file: !7110, line: 898, type: !2879)
!7185 = !DILocation(line: 0, scope: !7174)
!7186 = !DILocation(line: 900, column: 14, scope: !7174)
!7187 = !DILocation(line: 902, column: 49, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7174, file: !7110, line: 902, column: 6)
!7189 = !DILocation(line: 902, column: 6, scope: !7174)
!7190 = !DILocation(line: 983, column: 18, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7174, file: !7110, line: 983, column: 6)
!7192 = !DILocation(line: 991, column: 7, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !7110, line: 990, column: 30)
!7194 = distinct !DILexicalBlock(scope: !7174, file: !7110, line: 990, column: 6)
!7195 = !DILocation(line: 998, column: 16, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7197, file: !7110, line: 995, column: 10)
!7197 = distinct !DILexicalBlock(scope: !7193, file: !7110, line: 991, column: 7)
!7198 = !DILocation(line: 1002, column: 2, scope: !7174)
!7199 = !DILocation(line: 1003, column: 1, scope: !7174)
!7200 = distinct !DISubprogram(name: "fault_handle", scope: !7110, file: !7110, line: 786, type: !7201, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7203)
!7201 = !DISubroutineType(types: !7202)
!7202 = !{!132, !2879, !103, !7177}
!7203 = !{!7204, !7205, !7206, !7207}
!7204 = !DILocalVariable(name: "esf", arg: 1, scope: !7200, file: !7110, line: 786, type: !2879)
!7205 = !DILocalVariable(name: "fault", arg: 2, scope: !7200, file: !7110, line: 786, type: !103)
!7206 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7200, file: !7110, line: 786, type: !7177)
!7207 = !DILocalVariable(name: "reason", scope: !7200, file: !7110, line: 788, type: !132)
!7208 = !DILocation(line: 0, scope: !7200)
!7209 = !DILocation(line: 790, column: 15, scope: !7200)
!7210 = !DILocation(line: 792, column: 2, scope: !7200)
!7211 = !DILocation(line: 794, column: 12, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7200, file: !7110, line: 792, column: 17)
!7213 = !DILocation(line: 795, column: 3, scope: !7212)
!7214 = !DILocation(line: 800, column: 12, scope: !7212)
!7215 = !DILocation(line: 801, column: 3, scope: !7212)
!7216 = !DILocation(line: 803, column: 12, scope: !7212)
!7217 = !DILocation(line: 804, column: 3, scope: !7212)
!7218 = !DILocation(line: 806, column: 12, scope: !7212)
!7219 = !DILocation(line: 807, column: 3, scope: !7212)
!7220 = !DILocation(line: 814, column: 3, scope: !7212)
!7221 = !DILocation(line: 815, column: 3, scope: !7212)
!7222 = !DILocation(line: 829, column: 2, scope: !7200)
!7223 = distinct !DISubprogram(name: "hard_fault", scope: !7110, file: !7110, line: 709, type: !7224, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7226)
!7224 = !DISubroutineType(types: !7225)
!7225 = !{!132, !2879, !7177}
!7226 = !{!7227, !7228, !7229}
!7227 = !DILocalVariable(name: "esf", arg: 1, scope: !7223, file: !7110, line: 709, type: !2879)
!7228 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7223, file: !7110, line: 709, type: !7177)
!7229 = !DILocalVariable(name: "reason", scope: !7223, file: !7110, line: 711, type: !132)
!7230 = !DILocation(line: 0, scope: !7223)
!7231 = !DILocation(line: 732, column: 15, scope: !7223)
!7232 = !DILocation(line: 734, column: 12, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7223, file: !7110, line: 734, column: 6)
!7234 = !DILocation(line: 734, column: 17, scope: !7233)
!7235 = !DILocation(line: 734, column: 41, scope: !7233)
!7236 = !DILocation(line: 734, column: 6, scope: !7223)
!7237 = !DILocation(line: 736, column: 19, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7233, file: !7110, line: 736, column: 13)
!7239 = !DILocation(line: 736, column: 49, scope: !7238)
!7240 = !DILocation(line: 736, column: 13, scope: !7233)
!7241 = !DILocation(line: 738, column: 19, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7238, file: !7110, line: 738, column: 13)
!7243 = !DILocation(line: 738, column: 24, scope: !7242)
!7244 = !DILocation(line: 738, column: 47, scope: !7242)
!7245 = !DILocation(line: 738, column: 13, scope: !7238)
!7246 = !DILocation(line: 740, column: 7, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !7110, line: 740, column: 7)
!7248 = distinct !DILexicalBlock(scope: !7242, file: !7110, line: 738, column: 53)
!7249 = !DILocation(line: 740, column: 7, scope: !7248)
!7250 = !DILocation(line: 742, column: 24, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7247, file: !7110, line: 740, column: 38)
!7252 = !DILocation(line: 743, column: 3, scope: !7251)
!7253 = !DILocation(line: 743, column: 20, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7247, file: !7110, line: 743, column: 14)
!7255 = !DILocation(line: 743, column: 25, scope: !7254)
!7256 = !DILocation(line: 743, column: 52, scope: !7254)
!7257 = !DILocation(line: 743, column: 14, scope: !7247)
!7258 = !DILocation(line: 744, column: 13, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7254, file: !7110, line: 743, column: 58)
!7260 = !DILocation(line: 745, column: 3, scope: !7259)
!7261 = !DILocation(line: 745, column: 20, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7254, file: !7110, line: 745, column: 14)
!7263 = !DILocation(line: 745, column: 25, scope: !7262)
!7264 = !DILocation(line: 745, column: 52, scope: !7262)
!7265 = !DILocation(line: 745, column: 14, scope: !7254)
!7266 = !DILocation(line: 746, column: 13, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7262, file: !7110, line: 745, column: 58)
!7268 = !DILocation(line: 747, column: 3, scope: !7267)
!7269 = !DILocation(line: 747, column: 20, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7262, file: !7110, line: 747, column: 14)
!7271 = !DILocation(line: 747, column: 52, scope: !7270)
!7272 = !DILocation(line: 747, column: 14, scope: !7262)
!7273 = !DILocation(line: 748, column: 13, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7270, file: !7110, line: 747, column: 58)
!7275 = !DILocation(line: 753, column: 3, scope: !7274)
!7276 = !DILocation(line: 766, column: 2, scope: !7223)
!7277 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7110, file: !7110, line: 229, type: !7201, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7278)
!7278 = !{!7279, !7280, !7281, !7282, !7283, !7284, !7287}
!7279 = !DILocalVariable(name: "esf", arg: 1, scope: !7277, file: !7110, line: 229, type: !2879)
!7280 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7277, file: !7110, line: 229, type: !103)
!7281 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7277, file: !7110, line: 230, type: !7177)
!7282 = !DILocalVariable(name: "reason", scope: !7277, file: !7110, line: 232, type: !132)
!7283 = !DILocalVariable(name: "mmfar", scope: !7277, file: !7110, line: 233, type: !132)
!7284 = !DILocalVariable(name: "temp", scope: !7285, file: !7110, line: 254, type: !132)
!7285 = distinct !DILexicalBlock(scope: !7286, file: !7110, line: 244, column: 48)
!7286 = distinct !DILexicalBlock(scope: !7277, file: !7110, line: 244, column: 6)
!7287 = !DILocalVariable(name: "min_stack_ptr", scope: !7288, file: !7110, line: 309, type: !132)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !7110, line: 308, column: 43)
!7289 = distinct !DILexicalBlock(scope: !7290, file: !7110, line: 308, column: 7)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !7110, line: 289, column: 40)
!7291 = distinct !DILexicalBlock(scope: !7277, file: !7110, line: 288, column: 6)
!7292 = !DILocation(line: 0, scope: !7277)
!7293 = !DILocation(line: 237, column: 12, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7277, file: !7110, line: 237, column: 6)
!7295 = !DILocation(line: 241, column: 12, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7277, file: !7110, line: 241, column: 6)
!7297 = !DILocation(line: 244, column: 12, scope: !7286)
!7298 = !DILocation(line: 244, column: 17, scope: !7286)
!7299 = !DILocation(line: 244, column: 42, scope: !7286)
!7300 = !DILocation(line: 244, column: 6, scope: !7277)
!7301 = !DILocation(line: 254, column: 24, scope: !7285)
!7302 = !DILocation(line: 0, scope: !7285)
!7303 = !DILocation(line: 256, column: 13, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7285, file: !7110, line: 256, column: 7)
!7305 = !DILocation(line: 256, column: 18, scope: !7304)
!7306 = !DILocation(line: 256, column: 44, scope: !7304)
!7307 = !DILocation(line: 256, column: 7, scope: !7285)
!7308 = !DILocation(line: 259, column: 24, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !7110, line: 259, column: 8)
!7310 = distinct !DILexicalBlock(scope: !7304, file: !7110, line: 256, column: 50)
!7311 = !DILocation(line: 259, column: 8, scope: !7310)
!7312 = !DILocation(line: 261, column: 15, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7309, file: !7110, line: 259, column: 30)
!7314 = !DILocation(line: 262, column: 4, scope: !7313)
!7315 = !DILocation(line: 265, column: 12, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7277, file: !7110, line: 265, column: 6)
!7317 = !DILocation(line: 269, column: 12, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7277, file: !7110, line: 269, column: 6)
!7319 = !DILocation(line: 288, column: 12, scope: !7291)
!7320 = !DILocation(line: 288, column: 17, scope: !7291)
!7321 = !DILocation(line: 288, column: 41, scope: !7291)
!7322 = !DILocation(line: 289, column: 9, scope: !7291)
!7323 = !DILocation(line: 289, column: 14, scope: !7291)
!7324 = !DILocation(line: 288, column: 6, scope: !7277)
!7325 = !DILocation(line: 308, column: 12, scope: !7289)
!7326 = !DILocation(line: 308, column: 17, scope: !7289)
!7327 = !DILocation(line: 308, column: 7, scope: !7290)
!7328 = !DILocation(line: 310, column: 6, scope: !7288)
!7329 = !DILocation(line: 309, column: 29, scope: !7288)
!7330 = !DILocation(line: 0, scope: !7288)
!7331 = !DILocation(line: 312, column: 8, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7288, file: !7110, line: 312, column: 8)
!7333 = !DILocation(line: 312, column: 8, scope: !7288)
!7334 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7335, file: !6809, line: 1099, type: !132)
!7335 = distinct !DISubprogram(name: "__set_PSP", scope: !6809, file: !6809, line: 1099, type: !6900, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7336)
!7336 = !{!7334}
!7337 = !DILocation(line: 0, scope: !7335, inlinedAt: !7338)
!7338 = distinct !DILocation(line: 338, column: 5, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7332, file: !7110, line: 312, column: 23)
!7340 = !DILocation(line: 1101, column: 3, scope: !7335, inlinedAt: !7338)
!7341 = !{i64 2859593}
!7342 = !DILocation(line: 341, column: 4, scope: !7339)
!7343 = !DILocation(line: 360, column: 12, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7277, file: !7110, line: 360, column: 6)
!7345 = !DILocation(line: 360, column: 17, scope: !7344)
!7346 = !DILocation(line: 360, column: 41, scope: !7344)
!7347 = !DILocation(line: 360, column: 6, scope: !7277)
!7348 = !DILocation(line: 361, column: 14, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7344, file: !7110, line: 360, column: 47)
!7350 = !DILocation(line: 362, column: 2, scope: !7349)
!7351 = !DILocation(line: 366, column: 12, scope: !7277)
!7352 = !DILocation(line: 369, column: 15, scope: !7277)
!7353 = !DILocation(line: 371, column: 2, scope: !7277)
!7354 = distinct !DISubprogram(name: "bus_fault", scope: !7110, file: !7110, line: 383, type: !7355, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7357)
!7355 = !DISubroutineType(types: !7356)
!7356 = !{!103, !2879, !103, !7177}
!7357 = !{!7358, !7359, !7360, !7361, !7362}
!7358 = !DILocalVariable(name: "esf", arg: 1, scope: !7354, file: !7110, line: 383, type: !2879)
!7359 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7354, file: !7110, line: 383, type: !103)
!7360 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7354, file: !7110, line: 383, type: !7177)
!7361 = !DILocalVariable(name: "reason", scope: !7354, file: !7110, line: 385, type: !132)
!7362 = !DILocalVariable(name: "bfar", scope: !7363, file: !7110, line: 405, type: !132)
!7363 = distinct !DILexicalBlock(scope: !7364, file: !7110, line: 395, column: 42)
!7364 = distinct !DILexicalBlock(scope: !7354, file: !7110, line: 395, column: 6)
!7365 = !DILocation(line: 0, scope: !7354)
!7366 = !DILocation(line: 389, column: 11, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7354, file: !7110, line: 389, column: 6)
!7368 = !DILocation(line: 392, column: 11, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7354, file: !7110, line: 392, column: 6)
!7370 = !DILocation(line: 395, column: 11, scope: !7364)
!7371 = !DILocation(line: 395, column: 16, scope: !7364)
!7372 = !DILocation(line: 395, column: 6, scope: !7354)
!7373 = !DILocation(line: 405, column: 3, scope: !7363)
!7374 = !DILocation(line: 0, scope: !7363)
!7375 = !DILocation(line: 407, column: 13, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7363, file: !7110, line: 407, column: 7)
!7377 = !DILocation(line: 407, column: 18, scope: !7376)
!7378 = !DILocation(line: 407, column: 44, scope: !7376)
!7379 = !DILocation(line: 407, column: 7, scope: !7363)
!7380 = !DILocation(line: 411, column: 15, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !7110, line: 409, column: 30)
!7382 = distinct !DILexicalBlock(scope: !7383, file: !7110, line: 409, column: 8)
!7383 = distinct !DILexicalBlock(scope: !7376, file: !7110, line: 407, column: 50)
!7384 = !DILocation(line: 412, column: 4, scope: !7381)
!7385 = !DILocation(line: 415, column: 11, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7354, file: !7110, line: 415, column: 6)
!7387 = !DILocation(line: 418, column: 12, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7354, file: !7110, line: 418, column: 6)
!7389 = !DILocation(line: 418, column: 17, scope: !7388)
!7390 = !DILocation(line: 418, column: 41, scope: !7388)
!7391 = !DILocation(line: 418, column: 6, scope: !7354)
!7392 = !DILocation(line: 423, column: 18, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7388, file: !7110, line: 423, column: 13)
!7394 = !DILocation(line: 524, column: 12, scope: !7354)
!7395 = !DILocation(line: 526, column: 15, scope: !7354)
!7396 = !DILocation(line: 528, column: 2, scope: !7354)
!7397 = distinct !DISubprogram(name: "usage_fault", scope: !7110, file: !7110, line: 539, type: !7398, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7402)
!7398 = !DISubroutineType(types: !7399)
!7399 = !{!132, !7400}
!7400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7401, size: 32)
!7401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2880)
!7402 = !{!7403, !7404}
!7403 = !DILocalVariable(name: "esf", arg: 1, scope: !7397, file: !7110, line: 539, type: !7400)
!7404 = !DILocalVariable(name: "reason", scope: !7397, file: !7110, line: 541, type: !132)
!7405 = !DILocation(line: 0, scope: !7397)
!7406 = !DILocation(line: 546, column: 12, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7397, file: !7110, line: 546, column: 6)
!7408 = !DILocation(line: 549, column: 12, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7397, file: !7110, line: 549, column: 6)
!7410 = !DILocation(line: 567, column: 12, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7397, file: !7110, line: 567, column: 6)
!7412 = !DILocation(line: 570, column: 12, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7397, file: !7110, line: 570, column: 6)
!7414 = !DILocation(line: 573, column: 12, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7397, file: !7110, line: 573, column: 6)
!7416 = !DILocation(line: 576, column: 12, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7397, file: !7110, line: 576, column: 6)
!7418 = !DILocation(line: 581, column: 12, scope: !7397)
!7419 = !DILocation(line: 583, column: 2, scope: !7397)
!7420 = distinct !DISubprogram(name: "debug_monitor", scope: !7110, file: !7110, line: 632, type: !7421, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7423)
!7421 = !DISubroutineType(types: !7422)
!7422 = !{null, !2879, !7177}
!7423 = !{!7424, !7425}
!7424 = !DILocalVariable(name: "esf", arg: 1, scope: !7420, file: !7110, line: 632, type: !2879)
!7425 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7420, file: !7110, line: 632, type: !7177)
!7426 = !DILocation(line: 0, scope: !7420)
!7427 = !DILocation(line: 634, column: 15, scope: !7420)
!7428 = !DILocation(line: 652, column: 1, scope: !7420)
!7429 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7110, file: !7110, line: 658, type: !7430, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !7432)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{!166, !2879}
!7432 = !{!7433, !7434, !7435}
!7433 = !DILocalVariable(name: "esf", arg: 1, scope: !7429, file: !7110, line: 658, type: !2879)
!7434 = !DILocalVariable(name: "ret_addr", scope: !7429, file: !7110, line: 660, type: !2571)
!7435 = !DILocalVariable(name: "fault_insn", scope: !7429, file: !7110, line: 686, type: !340)
!7436 = !DILocation(line: 0, scope: !7429)
!7437 = !DILocation(line: 660, column: 46, scope: !7429)
!7438 = !DILocation(line: 660, column: 23, scope: !7429)
!7439 = !DILocation(line: 682, column: 11, scope: !7429)
!7440 = !DILocation(line: 271, column: 3, scope: !7441, inlinedAt: !7442)
!7441 = distinct !DISubprogram(name: "__DSB", scope: !6809, file: !6809, line: 269, type: !3232, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !473)
!7442 = distinct !DILocation(line: 683, column: 2, scope: !7429)
!7443 = !{i64 2835728}
!7444 = !DILocation(line: 260, column: 3, scope: !7445, inlinedAt: !7446)
!7445 = distinct !DISubprogram(name: "__ISB", scope: !6809, file: !6809, line: 258, type: !3232, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !473)
!7446 = distinct !DILocation(line: 684, column: 2, scope: !7429)
!7447 = !{i64 2835445}
!7448 = !DILocation(line: 686, column: 35, scope: !7429)
!7449 = !DILocation(line: 686, column: 24, scope: !7429)
!7450 = !DILocation(line: 688, column: 11, scope: !7429)
!7451 = !DILocation(line: 271, column: 3, scope: !7441, inlinedAt: !7452)
!7452 = distinct !DILocation(line: 689, column: 2, scope: !7429)
!7453 = !DILocation(line: 260, column: 3, scope: !7445, inlinedAt: !7454)
!7454 = distinct !DILocation(line: 690, column: 2, scope: !7429)
!7455 = !DILocation(line: 693, column: 45, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7429, file: !7110, line: 693, column: 6)
!7457 = !DILocation(line: 699, column: 1, scope: !7429)
!7458 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7110, file: !7110, line: 1107, type: !3232, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2851, retainedNodes: !473)
!7459 = !DILocation(line: 1111, column: 11, scope: !7458)
!7460 = !DILocation(line: 1136, column: 1, scope: !7458)
!7461 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7462, file: !7462, line: 26, type: !3232, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !7463)
!7462 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7463 = !{!7464}
!7464 = !DILocalVariable(name: "irq", scope: !7461, file: !7462, line: 28, type: !103)
!7465 = !DILocation(line: 0, scope: !7461)
!7466 = !DILocation(line: 30, column: 2, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7461, file: !7462, line: 30, column: 2)
!7468 = !DILocation(line: 31, column: 3, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7470, file: !7462, line: 30, column: 39)
!7470 = distinct !DILexicalBlock(scope: !7467, file: !7462, line: 30, column: 2)
!7471 = !DILocation(line: 30, column: 35, scope: !7470)
!7472 = !DILocation(line: 30, column: 13, scope: !7470)
!7473 = distinct !{!7473, !7466, !7474}
!7474 = !DILocation(line: 32, column: 2, scope: !7467)
!7475 = !DILocation(line: 33, column: 1, scope: !7461)
!7476 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6843, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !7477)
!7477 = !{!7478, !7479}
!7478 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7476, file: !507, line: 1814, type: !742)
!7479 = !DILocalVariable(name: "priority", arg: 2, scope: !7476, file: !507, line: 1814, type: !132)
!7480 = !DILocation(line: 0, scope: !7476)
!7481 = !DILocation(line: 1816, column: 7, scope: !7476)
!7482 = !DILocation(line: 0, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7476, file: !507, line: 1816, column: 7)
!7484 = !DILocation(line: 1824, column: 1, scope: !7476)
!7485 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7486, file: !7486, line: 27, type: !7487, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !7590)
!7486 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7487 = !DISubroutineType(types: !7488)
!7488 = !{null, !7489}
!7489 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !7490)
!7490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7491, size: 32)
!7491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !7492)
!7492 = !{!7493, !7551, !7563, !7564, !7565, !7566, !7572, !7585}
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7491, file: !367, line: 247, baseType: !7494, size: 384)
!7494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !7495)
!7495 = !{!7496, !7520, !7527, !7528, !7529, !7538, !7539, !7540}
!7496 = !DIDerivedType(tag: DW_TAG_member, scope: !7494, file: !367, line: 60, baseType: !7497, size: 64)
!7497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7494, file: !367, line: 60, size: 64, elements: !7498)
!7498 = !{!7499, !7514}
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7497, file: !367, line: 61, baseType: !7500, size: 64)
!7500 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !7501)
!7501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !7502)
!7502 = !{!7503, !7509}
!7503 = !DIDerivedType(tag: DW_TAG_member, scope: !7501, file: !321, line: 38, baseType: !7504, size: 32)
!7504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7501, file: !321, line: 38, size: 32, elements: !7505)
!7505 = !{!7506, !7508}
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7504, file: !321, line: 39, baseType: !7507, size: 32)
!7507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7501, size: 32)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7504, file: !321, line: 40, baseType: !7507, size: 32)
!7509 = !DIDerivedType(tag: DW_TAG_member, scope: !7501, file: !321, line: 42, baseType: !7510, size: 32, offset: 32)
!7510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7501, file: !321, line: 42, size: 32, elements: !7511)
!7511 = !{!7512, !7513}
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7510, file: !321, line: 43, baseType: !7507, size: 32)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7510, file: !321, line: 44, baseType: !7507, size: 32)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7497, file: !367, line: 62, baseType: !7515, size: 64)
!7515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !7516)
!7516 = !{!7517}
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7515, file: !392, line: 50, baseType: !7518, size: 64)
!7518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7519, size: 64, elements: !397)
!7519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7515, size: 32)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7494, file: !367, line: 68, baseType: !7521, size: 32, offset: 64)
!7521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7522, size: 32)
!7522 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !7523)
!7523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !7524)
!7524 = !{!7525}
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7523, file: !316, line: 232, baseType: !7526, size: 64)
!7526 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !7501)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7494, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7494, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!7529 = !DIDerivedType(tag: DW_TAG_member, scope: !7494, file: !367, line: 90, baseType: !7530, size: 16, offset: 112)
!7530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7494, file: !367, line: 90, size: 16, elements: !7531)
!7531 = !{!7532, !7537}
!7532 = !DIDerivedType(tag: DW_TAG_member, scope: !7530, file: !367, line: 91, baseType: !7533, size: 16)
!7533 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7530, file: !367, line: 91, size: 16, elements: !7534)
!7534 = !{!7535, !7536}
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7533, file: !367, line: 96, baseType: !415, size: 8)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7533, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7530, file: !367, line: 100, baseType: !340, size: 16)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7494, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7494, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7494, file: !367, line: 131, baseType: !7541, size: 192, offset: 192)
!7541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !7542)
!7542 = !{!7543, !7544, !7550}
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7541, file: !316, line: 245, baseType: !7500, size: 64)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7541, file: !316, line: 246, baseType: !7545, size: 32, offset: 64)
!7545 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !7546)
!7546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7547, size: 32)
!7547 = !DISubroutineType(types: !7548)
!7548 = !{null, !7549}
!7549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7541, size: 32)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7541, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7491, file: !367, line: 250, baseType: !7552, size: 288, offset: 384)
!7552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !7553)
!7553 = !{!7554, !7555, !7556, !7557, !7558, !7559, !7560, !7561, !7562}
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7552, file: !436, line: 26, baseType: !132, size: 32)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7552, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7552, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7552, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7552, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7552, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7552, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7552, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7552, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7491, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7491, file: !367, line: 256, baseType: !7522, size: 64, offset: 704)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7491, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7491, file: !367, line: 300, baseType: !7567, size: 96, offset: 800)
!7567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !7568)
!7568 = !{!7569, !7570, !7571}
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7567, file: !367, line: 153, baseType: !22, size: 32)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7567, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7567, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7491, file: !367, line: 325, baseType: !7573, size: 32, offset: 896)
!7573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7574, size: 32)
!7574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !7575)
!7575 = !{!7576, !7582, !7583}
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7574, file: !312, line: 5074, baseType: !7577, size: 96)
!7577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !7578)
!7578 = !{!7579, !7580, !7581}
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7577, file: !462, line: 57, baseType: !465, size: 32)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7577, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7577, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7574, file: !312, line: 5075, baseType: !7522, size: 64, offset: 96)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7574, file: !312, line: 5076, baseType: !7584, offset: 160)
!7584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7491, file: !367, line: 343, baseType: !7586, size: 64, offset: 928)
!7586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !7587)
!7587 = !{!7588, !7589}
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7586, file: !436, line: 63, baseType: !132, size: 32)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7586, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!7590 = !{!7591}
!7591 = !DILocalVariable(name: "thread", arg: 1, scope: !7485, file: !7486, line: 27, type: !7489)
!7592 = !DILocation(line: 0, scope: !7485)
!7593 = !DILocation(line: 29, column: 6, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7485, file: !7486, line: 29, column: 6)
!7595 = !DILocation(line: 29, column: 15, scope: !7594)
!7596 = !DILocation(line: 29, column: 6, scope: !7485)
!7597 = !DILocation(line: 1031, column: 3, scope: !7598, inlinedAt: !7601)
!7598 = distinct !DISubprogram(name: "__get_IPSR", scope: !6809, file: !6809, line: 1027, type: !6890, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !7599)
!7599 = !{!7600}
!7600 = !DILocalVariable(name: "result", scope: !7598, file: !6809, line: 1029, type: !132)
!7601 = distinct !DILocation(line: 48, column: 10, scope: !7602, inlinedAt: !7606)
!7602 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7603, file: !7603, line: 46, type: !7604, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !473)
!7603 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7604 = !DISubroutineType(types: !7605)
!7605 = !{!166}
!7606 = distinct !DILocation(line: 30, column: 7, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !7486, line: 30, column: 7)
!7608 = distinct !DILexicalBlock(scope: !7594, file: !7486, line: 29, column: 26)
!7609 = !{i64 2824576}
!7610 = !DILocation(line: 0, scope: !7598, inlinedAt: !7601)
!7611 = !DILocation(line: 48, column: 9, scope: !7602, inlinedAt: !7606)
!7612 = !DILocation(line: 30, column: 7, scope: !7608)
!7613 = !DILocation(line: 42, column: 14, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7607, file: !7486, line: 30, column: 25)
!7615 = !DILocation(line: 48, column: 15, scope: !7614)
!7616 = !DILocation(line: 49, column: 3, scope: !7614)
!7617 = !DILocation(line: 52, column: 2, scope: !7485)
!7618 = !DILocation(line: 53, column: 1, scope: !7485)
!7619 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !362, file: !362, line: 127, type: !3232, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !353, retainedNodes: !473)
!7620 = !DILocation(line: 134, column: 2, scope: !7619)
!7621 = !DILocation(line: 156, column: 1, scope: !7619)
!7622 = !DILocation(line: 0, scope: !361)
!7623 = !DILocation(line: 289, column: 36, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !361, file: !362, line: 285, column: 2)
!7625 = !DILocation(line: 289, column: 42, scope: !7624)
!7626 = !DILocation(line: 300, column: 36, scope: !361)
!7627 = !DILocation(line: 301, column: 35, scope: !361)
!7628 = !DILocation(line: 302, column: 37, scope: !361)
!7629 = !DILocation(line: 311, column: 2, scope: !361)
!7630 = !DILocation(line: 316, column: 1, scope: !361)
!7631 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !535, file: !535, line: 180, type: !3232, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7632 = !DILocation(line: 188, column: 12, scope: !7631)
!7633 = !DILocation(line: 271, column: 3, scope: !7634, inlinedAt: !7635)
!7634 = distinct !DISubprogram(name: "__DSB", scope: !6809, file: !6809, line: 269, type: !3232, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7635 = distinct !DILocation(line: 192, column: 2, scope: !7631)
!7636 = !{i64 2984723}
!7637 = !DILocation(line: 260, column: 3, scope: !7638, inlinedAt: !7639)
!7638 = distinct !DISubprogram(name: "__ISB", scope: !6809, file: !6809, line: 258, type: !3232, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7639 = distinct !DILocation(line: 193, column: 2, scope: !7631)
!7640 = !{i64 2984440}
!7641 = !DILocation(line: 194, column: 1, scope: !7631)
!7642 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !535, file: !535, line: 199, type: !3232, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7643 = !DILocation(line: 282, column: 3, scope: !7644, inlinedAt: !7645)
!7644 = distinct !DISubprogram(name: "__DMB", scope: !6809, file: !6809, line: 280, type: !3232, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !473)
!7645 = distinct !DILocation(line: 202, column: 2, scope: !7642)
!7646 = !{i64 2984999}
!7647 = !DILocation(line: 205, column: 12, scope: !7642)
!7648 = !DILocation(line: 206, column: 1, scope: !7642)
!7649 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !535, file: !535, line: 275, type: !7650, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7663)
!7650 = !DISubroutineType(types: !7651)
!7651 = !{null, !7652, !265, !7077, !7077}
!7652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7653, size: 32)
!7653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7654)
!7654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !486, line: 52, size: 96, elements: !7655)
!7655 = !{!7656, !7657, !7658}
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7654, file: !486, line: 53, baseType: !22, size: 32)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7654, file: !486, line: 54, baseType: !356, size: 32, offset: 32)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7654, file: !486, line: 55, baseType: !7659, size: 32, offset: 64)
!7659 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !492, line: 151, baseType: !7660)
!7660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !492, line: 149, size: 32, elements: !7661)
!7661 = !{!7662}
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7660, file: !492, line: 150, baseType: !132, size: 32)
!7663 = !{!7664, !7665, !7666, !7667}
!7664 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7649, file: !535, line: 276, type: !7652)
!7665 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7649, file: !535, line: 276, type: !265)
!7666 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7649, file: !535, line: 277, type: !7077)
!7667 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7649, file: !535, line: 277, type: !7077)
!7668 = !DILocation(line: 0, scope: !7649)
!7669 = !DILocation(line: 279, column: 6, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7649, file: !535, line: 279, column: 6)
!7671 = !DILocation(line: 285, column: 1, scope: !7649)
!7672 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7673, file: !7673, line: 220, type: !7674, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7676)
!7673 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7674 = !DISubroutineType(types: !7675)
!7675 = !{!103, !7652, !265, !7077, !7077}
!7676 = !{!7677, !7678, !7679, !7680, !7681}
!7677 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7672, file: !7673, line: 221, type: !7652)
!7678 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7672, file: !7673, line: 221, type: !265)
!7679 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7672, file: !7673, line: 222, type: !7077)
!7680 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7672, file: !7673, line: 223, type: !7077)
!7681 = !DILocalVariable(name: "mpu_reg_index", scope: !7672, file: !7673, line: 225, type: !103)
!7682 = !DILocation(line: 0, scope: !7672)
!7683 = !DILocation(line: 225, column: 22, scope: !7672)
!7684 = !DILocation(line: 233, column: 18, scope: !7672)
!7685 = !DILocation(line: 236, column: 23, scope: !7672)
!7686 = !DILocation(line: 236, column: 21, scope: !7672)
!7687 = !DILocation(line: 238, column: 2, scope: !7672)
!7688 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !535, file: !535, line: 105, type: !7689, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7691)
!7689 = !DISubroutineType(types: !7690)
!7690 = !{!103, !7652, !163, !163, !166}
!7691 = !{!7692, !7693, !7694, !7695, !7696, !7697}
!7692 = !DILocalVariable(name: "regions", arg: 1, scope: !7688, file: !535, line: 106, type: !7652)
!7693 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7688, file: !535, line: 106, type: !163)
!7694 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7688, file: !535, line: 106, type: !163)
!7695 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7688, file: !535, line: 107, type: !166)
!7696 = !DILocalVariable(name: "i", scope: !7688, file: !535, line: 109, type: !103)
!7697 = !DILocalVariable(name: "reg_index", scope: !7688, file: !535, line: 110, type: !103)
!7698 = !DILocation(line: 0, scope: !7688)
!7699 = !DILocation(line: 110, column: 18, scope: !7688)
!7700 = !DILocation(line: 112, column: 16, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !535, line: 112, column: 2)
!7702 = distinct !DILexicalBlock(scope: !7688, file: !535, line: 112, column: 2)
!7703 = !DILocation(line: 112, column: 2, scope: !7702)
!7704 = !DILocation(line: 113, column: 7, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !535, line: 113, column: 7)
!7706 = distinct !DILexicalBlock(scope: !7701, file: !535, line: 112, column: 36)
!7707 = !DILocation(line: 113, column: 18, scope: !7705)
!7708 = !DILocation(line: 113, column: 23, scope: !7705)
!7709 = !DILocation(line: 113, column: 7, scope: !7706)
!7710 = !DILocation(line: 118, column: 23, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7706, file: !535, line: 118, column: 7)
!7712 = !DILocation(line: 119, column: 7, scope: !7711)
!7713 = !DILocation(line: 118, column: 7, scope: !7706)
!7714 = !DILocation(line: 124, column: 36, scope: !7706)
!7715 = !DILocation(line: 124, column: 15, scope: !7706)
!7716 = !DILocation(line: 126, column: 17, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7706, file: !535, line: 126, column: 7)
!7718 = !DILocation(line: 126, column: 7, scope: !7706)
!7719 = !DILocation(line: 131, column: 12, scope: !7706)
!7720 = !DILocation(line: 132, column: 2, scope: !7706)
!7721 = !DILocation(line: 112, column: 32, scope: !7701)
!7722 = distinct !{!7722, !7703, !7723}
!7723 = !DILocation(line: 132, column: 2, scope: !7702)
!7724 = !DILocation(line: 135, column: 1, scope: !7688)
!7725 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7673, file: !7673, line: 63, type: !7726, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7728)
!7726 = !DISubroutineType(types: !7727)
!7727 = !{!103, !7652}
!7728 = !{!7729, !7730}
!7729 = !DILocalVariable(name: "part", arg: 1, scope: !7725, file: !7673, line: 63, type: !7652)
!7730 = !DILocalVariable(name: "partition_is_valid", scope: !7725, file: !7673, line: 70, type: !103)
!7731 = !DILocation(line: 0, scope: !7725)
!7732 = !DILocation(line: 71, column: 11, scope: !7725)
!7733 = !DILocation(line: 71, column: 37, scope: !7725)
!7734 = !DILocation(line: 72, column: 3, scope: !7725)
!7735 = !DILocation(line: 71, column: 30, scope: !7725)
!7736 = !DILocation(line: 75, column: 11, scope: !7725)
!7737 = !DILocation(line: 75, column: 17, scope: !7725)
!7738 = !DILocation(line: 75, column: 38, scope: !7725)
!7739 = !DILocation(line: 77, column: 2, scope: !7725)
!7740 = distinct !DISubprogram(name: "mpu_configure_region", scope: !535, file: !535, line: 79, type: !7741, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7743)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!103, !265, !7652}
!7743 = !{!7744, !7745, !7746}
!7744 = !DILocalVariable(name: "index", arg: 1, scope: !7740, file: !535, line: 79, type: !265)
!7745 = !DILocalVariable(name: "new_region", arg: 2, scope: !7740, file: !535, line: 80, type: !7652)
!7746 = !DILocalVariable(name: "region_conf", scope: !7740, file: !535, line: 82, type: !524)
!7747 = !DILocation(line: 0, scope: !7740)
!7748 = !DILocation(line: 82, column: 2, scope: !7740)
!7749 = !DILocation(line: 82, column: 24, scope: !7740)
!7750 = !DILocation(line: 87, column: 33, scope: !7740)
!7751 = !DILocation(line: 87, column: 14, scope: !7740)
!7752 = !DILocation(line: 87, column: 19, scope: !7740)
!7753 = !DILocation(line: 91, column: 55, scope: !7740)
!7754 = !DILocation(line: 92, column: 16, scope: !7740)
!7755 = !DILocation(line: 92, column: 53, scope: !7740)
!7756 = !DILocation(line: 91, column: 2, scope: !7740)
!7757 = !DILocation(line: 95, column: 9, scope: !7740)
!7758 = !DILocation(line: 97, column: 1, scope: !7740)
!7759 = !DILocation(line: 95, column: 2, scope: !7740)
!7760 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7673, file: !7673, line: 113, type: !7761, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7766)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{null, !7763, !7764, !132, !132}
!7763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!7764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7765, size: 32)
!7765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7659)
!7766 = !{!7767, !7768, !7769, !7770}
!7767 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7760, file: !7673, line: 114, type: !7763)
!7768 = !DILocalVariable(name: "attr", arg: 2, scope: !7760, file: !7673, line: 115, type: !7764)
!7769 = !DILocalVariable(name: "base", arg: 3, scope: !7760, file: !7673, line: 115, type: !132)
!7770 = !DILocalVariable(name: "size", arg: 4, scope: !7760, file: !7673, line: 115, type: !132)
!7771 = !DILocation(line: 0, scope: !7760)
!7772 = !DILocation(line: 127, column: 23, scope: !7760)
!7773 = !DILocation(line: 127, column: 35, scope: !7760)
!7774 = !DILocation(line: 127, column: 33, scope: !7760)
!7775 = !DILocation(line: 127, column: 10, scope: !7760)
!7776 = !DILocation(line: 127, column: 15, scope: !7760)
!7777 = !DILocation(line: 129, column: 1, scope: !7760)
!7778 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !535, file: !535, line: 57, type: !7779, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7781)
!7779 = !DISubroutineType(types: !7780)
!7780 = !{!103, !265, !522}
!7781 = !{!7782, !7783}
!7782 = !DILocalVariable(name: "index", arg: 1, scope: !7778, file: !535, line: 57, type: !265)
!7783 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7778, file: !535, line: 58, type: !522)
!7784 = !DILocation(line: 0, scope: !7778)
!7785 = !DILocation(line: 61, column: 6, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7778, file: !535, line: 61, column: 6)
!7787 = !DILocation(line: 61, column: 12, scope: !7786)
!7788 = !DILocation(line: 61, column: 6, scope: !7778)
!7789 = !DILocation(line: 71, column: 2, scope: !7778)
!7790 = !DILocation(line: 73, column: 2, scope: !7778)
!7791 = !DILocation(line: 74, column: 1, scope: !7778)
!7792 = distinct !DISubprogram(name: "region_init", scope: !7673, file: !7673, line: 29, type: !7793, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7795)
!7793 = !DISubroutineType(types: !7794)
!7794 = !{null, !7077, !522}
!7795 = !{!7796, !7797}
!7796 = !DILocalVariable(name: "index", arg: 1, scope: !7792, file: !7673, line: 29, type: !7077)
!7797 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7792, file: !7673, line: 30, type: !522)
!7798 = !DILocation(line: 0, scope: !7792)
!7799 = !DILocation(line: 33, column: 2, scope: !7792)
!7800 = !DILocation(line: 47, column: 28, scope: !7792)
!7801 = !DILocation(line: 47, column: 33, scope: !7792)
!7802 = !DILocation(line: 48, column: 26, scope: !7792)
!7803 = !DILocation(line: 47, column: 12, scope: !7792)
!7804 = !DILocation(line: 49, column: 32, scope: !7792)
!7805 = !DILocation(line: 49, column: 37, scope: !7792)
!7806 = !DILocation(line: 49, column: 12, scope: !7792)
!7807 = !DILocation(line: 53, column: 1, scope: !7792)
!7808 = distinct !DISubprogram(name: "set_region_number", scope: !7809, file: !7809, line: 32, type: !6900, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7810)
!7809 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7810 = !{!7811}
!7811 = !DILocalVariable(name: "index", arg: 1, scope: !7808, file: !7809, line: 32, type: !132)
!7812 = !DILocation(line: 0, scope: !7808)
!7813 = !DILocation(line: 34, column: 11, scope: !7808)
!7814 = !DILocation(line: 35, column: 1, scope: !7808)
!7815 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7673, file: !7673, line: 88, type: !7816, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7818)
!7816 = !DISubroutineType(types: !7817)
!7817 = !{!132, !132}
!7818 = !{!7819}
!7819 = !DILocalVariable(name: "size", arg: 1, scope: !7815, file: !7673, line: 88, type: !132)
!7820 = !DILocation(line: 0, scope: !7815)
!7821 = !DILocation(line: 91, column: 11, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7815, file: !7673, line: 91, column: 6)
!7823 = !DILocation(line: 91, column: 6, scope: !7815)
!7824 = !DILocation(line: 100, column: 11, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7815, file: !7673, line: 100, column: 6)
!7826 = !DILocation(line: 100, column: 6, scope: !7815)
!7827 = !DILocation(line: 104, column: 35, scope: !7815)
!7828 = !DILocation(line: 104, column: 16, scope: !7815)
!7829 = !DILocation(line: 104, column: 50, scope: !7815)
!7830 = !DILocation(line: 104, column: 72, scope: !7815)
!7831 = !DILocation(line: 104, column: 2, scope: !7815)
!7832 = !DILocation(line: 106, column: 1, scope: !7815)
!7833 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !535, file: !535, line: 307, type: !7834, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7836)
!7834 = !DISubroutineType(types: !7835)
!7835 = !{null, !7652, !163}
!7836 = !{!7837, !7838}
!7837 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7833, file: !535, line: 308, type: !7652)
!7838 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7833, file: !535, line: 308, type: !163)
!7839 = !DILocation(line: 0, scope: !7833)
!7840 = !DILocation(line: 310, column: 6, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7833, file: !535, line: 310, column: 6)
!7842 = !DILocation(line: 316, column: 1, scope: !7833)
!7843 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7673, file: !7673, line: 249, type: !7844, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7846)
!7844 = !DISubroutineType(types: !7845)
!7845 = !{!103, !7652, !163}
!7846 = !{!7847, !7848, !7849, !7850}
!7847 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7843, file: !7673, line: 250, type: !7652)
!7848 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7843, file: !7673, line: 250, type: !163)
!7849 = !DILocalVariable(name: "mpu_reg_index", scope: !7843, file: !7673, line: 252, type: !103)
!7850 = !DILocalVariable(name: "i", scope: !7851, file: !7673, line: 264, type: !103)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !7673, line: 264, column: 3)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !7673, line: 261, column: 32)
!7853 = distinct !DILexicalBlock(scope: !7843, file: !7673, line: 261, column: 6)
!7854 = !DILocation(line: 0, scope: !7843)
!7855 = !DILocation(line: 252, column: 22, scope: !7843)
!7856 = !DILocation(line: 258, column: 18, scope: !7843)
!7857 = !DILocation(line: 261, column: 20, scope: !7853)
!7858 = !DILocation(line: 261, column: 6, scope: !7843)
!7859 = !DILocation(line: 0, scope: !7851)
!7860 = !DILocation(line: 265, column: 4, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7862, file: !7673, line: 264, column: 59)
!7862 = distinct !DILexicalBlock(scope: !7851, file: !7673, line: 264, column: 3)
!7863 = !DILocation(line: 264, column: 55, scope: !7862)
!7864 = !DILocation(line: 264, column: 33, scope: !7862)
!7865 = !DILocation(line: 264, column: 3, scope: !7851)
!7866 = distinct !{!7866, !7865, !7867}
!7867 = !DILocation(line: 266, column: 3, scope: !7851)
!7868 = !DILocation(line: 269, column: 2, scope: !7843)
!7869 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7870, file: !7870, line: 218, type: !6900, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7871)
!7870 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7871 = !{!7872}
!7872 = !DILocalVariable(name: "rnr", arg: 1, scope: !7869, file: !7870, line: 218, type: !132)
!7873 = !DILocation(line: 0, scope: !7869)
!7874 = !DILocation(line: 220, column: 12, scope: !7869)
!7875 = !DILocation(line: 221, column: 13, scope: !7869)
!7876 = !DILocation(line: 222, column: 1, scope: !7869)
!7877 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !535, file: !535, line: 326, type: !6613, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !502, retainedNodes: !7878)
!7878 = !{!7879}
!7879 = !DILocalVariable(name: "r_index", scope: !7877, file: !535, line: 328, type: !132)
!7880 = !DILocation(line: 330, column: 17, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7877, file: !535, line: 330, column: 6)
!7882 = !DILocation(line: 330, column: 29, scope: !7881)
!7883 = !DILocation(line: 330, column: 6, scope: !7877)
!7884 = !DILocation(line: 347, column: 2, scope: !7877)
!7885 = !DILocation(line: 0, scope: !7877)
!7886 = !DILocation(line: 364, column: 29, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7888, file: !535, line: 364, column: 2)
!7888 = distinct !DILexicalBlock(scope: !7877, file: !535, line: 364, column: 2)
!7889 = !DILocation(line: 364, column: 2, scope: !7888)
!7890 = !DILocation(line: 365, column: 25, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7887, file: !535, line: 364, column: 66)
!7892 = !DILocation(line: 365, column: 3, scope: !7891)
!7893 = !DILocation(line: 364, column: 62, scope: !7887)
!7894 = distinct !{!7894, !7889, !7895}
!7895 = !DILocation(line: 366, column: 2, scope: !7888)
!7896 = !DILocation(line: 369, column: 23, scope: !7877)
!7897 = !DILocation(line: 369, column: 21, scope: !7877)
!7898 = !DILocation(line: 372, column: 2, scope: !7877)
!7899 = !DILocation(line: 443, column: 2, scope: !7877)
!7900 = !DILocation(line: 444, column: 1, scope: !7877)
!7901 = distinct !DISubprogram(name: "strcpy", scope: !7902, file: !7902, line: 20, type: !7903, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !7907)
!7902 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7903 = !DISubroutineType(types: !7904)
!7904 = !{!1063, !7905, !7906}
!7905 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1063)
!7906 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !155)
!7907 = !{!7908, !7909, !7910}
!7908 = !DILocalVariable(name: "d", arg: 1, scope: !7901, file: !7902, line: 20, type: !7905)
!7909 = !DILocalVariable(name: "s", arg: 2, scope: !7901, file: !7902, line: 20, type: !7906)
!7910 = !DILocalVariable(name: "dest", scope: !7901, file: !7902, line: 22, type: !1063)
!7911 = !DILocation(line: 0, scope: !7901)
!7912 = !DILocation(line: 24, column: 9, scope: !7901)
!7913 = !DILocation(line: 24, column: 12, scope: !7901)
!7914 = !DILocation(line: 24, column: 2, scope: !7901)
!7915 = !DILocation(line: 25, column: 6, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7901, file: !7902, line: 24, column: 21)
!7917 = !DILocation(line: 26, column: 4, scope: !7916)
!7918 = !DILocation(line: 27, column: 4, scope: !7916)
!7919 = distinct !{!7919, !7914, !7920}
!7920 = !DILocation(line: 28, column: 2, scope: !7901)
!7921 = !DILocation(line: 30, column: 5, scope: !7901)
!7922 = !DILocation(line: 32, column: 2, scope: !7901)
!7923 = distinct !DISubprogram(name: "strncpy", scope: !7902, file: !7902, line: 42, type: !7924, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !7926)
!7924 = !DISubroutineType(types: !7925)
!7925 = !{!1063, !7905, !7906, !356}
!7926 = !{!7927, !7928, !7929, !7930}
!7927 = !DILocalVariable(name: "d", arg: 1, scope: !7923, file: !7902, line: 42, type: !7905)
!7928 = !DILocalVariable(name: "s", arg: 2, scope: !7923, file: !7902, line: 42, type: !7906)
!7929 = !DILocalVariable(name: "n", arg: 3, scope: !7923, file: !7902, line: 42, type: !356)
!7930 = !DILocalVariable(name: "dest", scope: !7923, file: !7902, line: 44, type: !1063)
!7931 = !DILocation(line: 0, scope: !7923)
!7932 = !DILocation(line: 46, column: 12, scope: !7923)
!7933 = !DILocation(line: 46, column: 17, scope: !7923)
!7934 = !DILocation(line: 46, column: 20, scope: !7923)
!7935 = !DILocation(line: 46, column: 23, scope: !7923)
!7936 = !DILocation(line: 46, column: 2, scope: !7923)
!7937 = !DILocation(line: 47, column: 6, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7923, file: !7902, line: 46, column: 32)
!7939 = !DILocation(line: 48, column: 4, scope: !7938)
!7940 = !DILocation(line: 49, column: 4, scope: !7938)
!7941 = !DILocation(line: 50, column: 4, scope: !7938)
!7942 = distinct !{!7942, !7936, !7943}
!7943 = !DILocation(line: 51, column: 2, scope: !7923)
!7944 = !DILocation(line: 54, column: 6, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7923, file: !7902, line: 53, column: 16)
!7946 = !DILocation(line: 55, column: 4, scope: !7945)
!7947 = !DILocation(line: 56, column: 4, scope: !7945)
!7948 = !DILocation(line: 53, column: 11, scope: !7923)
!7949 = !DILocation(line: 53, column: 2, scope: !7923)
!7950 = distinct !{!7950, !7949, !7951}
!7951 = !DILocation(line: 57, column: 2, scope: !7923)
!7952 = !DILocation(line: 59, column: 2, scope: !7923)
!7953 = distinct !DISubprogram(name: "strchr", scope: !7902, file: !7902, line: 69, type: !7954, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !7956)
!7954 = !DISubroutineType(types: !7955)
!7955 = !{!1063, !155, !103}
!7956 = !{!7957, !7958, !7959}
!7957 = !DILocalVariable(name: "s", arg: 1, scope: !7953, file: !7902, line: 69, type: !155)
!7958 = !DILocalVariable(name: "c", arg: 2, scope: !7953, file: !7902, line: 69, type: !103)
!7959 = !DILocalVariable(name: "tmp", scope: !7953, file: !7902, line: 71, type: !108)
!7960 = !DILocation(line: 0, scope: !7953)
!7961 = !DILocation(line: 73, column: 2, scope: !7953)
!7962 = !DILocation(line: 73, column: 10, scope: !7953)
!7963 = !DILocation(line: 73, column: 13, scope: !7953)
!7964 = !DILocation(line: 73, column: 21, scope: !7953)
!7965 = !DILocation(line: 74, column: 4, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7953, file: !7902, line: 73, column: 38)
!7967 = distinct !{!7967, !7961, !7968}
!7968 = !DILocation(line: 75, column: 2, scope: !7953)
!7969 = !DILocation(line: 77, column: 9, scope: !7953)
!7970 = !DILocation(line: 77, column: 2, scope: !7953)
!7971 = distinct !DISubprogram(name: "strrchr", scope: !7902, file: !7902, line: 87, type: !7954, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !7972)
!7972 = !{!7973, !7974, !7975}
!7973 = !DILocalVariable(name: "s", arg: 1, scope: !7971, file: !7902, line: 87, type: !155)
!7974 = !DILocalVariable(name: "c", arg: 2, scope: !7971, file: !7902, line: 87, type: !103)
!7975 = !DILocalVariable(name: "match", scope: !7971, file: !7902, line: 89, type: !1063)
!7976 = !DILocation(line: 0, scope: !7971)
!7977 = !DILocation(line: 91, column: 2, scope: !7971)
!7978 = !DILocation(line: 92, column: 7, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7980, file: !7902, line: 92, column: 7)
!7980 = distinct !DILexicalBlock(scope: !7971, file: !7902, line: 91, column: 5)
!7981 = !DILocation(line: 92, column: 10, scope: !7979)
!7982 = !DILocation(line: 92, column: 7, scope: !7980)
!7983 = !DILocation(line: 95, column: 13, scope: !7971)
!7984 = !DILocation(line: 95, column: 2, scope: !7980)
!7985 = distinct !{!7985, !7977, !7986}
!7986 = !DILocation(line: 95, column: 15, scope: !7971)
!7987 = !DILocation(line: 97, column: 2, scope: !7971)
!7988 = distinct !DISubprogram(name: "strlen", scope: !7902, file: !7902, line: 107, type: !7989, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !7991)
!7989 = !DISubroutineType(types: !7990)
!7990 = !{!356, !155}
!7991 = !{!7992, !7993}
!7992 = !DILocalVariable(name: "s", arg: 1, scope: !7988, file: !7902, line: 107, type: !155)
!7993 = !DILocalVariable(name: "n", scope: !7988, file: !7902, line: 109, type: !356)
!7994 = !DILocation(line: 0, scope: !7988)
!7995 = !DILocation(line: 111, column: 9, scope: !7988)
!7996 = !DILocation(line: 111, column: 12, scope: !7988)
!7997 = !DILocation(line: 111, column: 2, scope: !7988)
!7998 = !DILocation(line: 112, column: 4, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7988, file: !7902, line: 111, column: 21)
!8000 = !DILocation(line: 113, column: 4, scope: !7999)
!8001 = distinct !{!8001, !7997, !8002}
!8002 = !DILocation(line: 114, column: 2, scope: !7988)
!8003 = !DILocation(line: 116, column: 2, scope: !7988)
!8004 = distinct !DISubprogram(name: "strnlen", scope: !7902, file: !7902, line: 126, type: !8005, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8007)
!8005 = !DISubroutineType(types: !8006)
!8006 = !{!356, !155, !356}
!8007 = !{!8008, !8009, !8010}
!8008 = !DILocalVariable(name: "s", arg: 1, scope: !8004, file: !7902, line: 126, type: !155)
!8009 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8004, file: !7902, line: 126, type: !356)
!8010 = !DILocalVariable(name: "n", scope: !8004, file: !7902, line: 128, type: !356)
!8011 = !DILocation(line: 0, scope: !8004)
!8012 = !DILocation(line: 130, column: 9, scope: !8004)
!8013 = !DILocation(line: 130, column: 12, scope: !8004)
!8014 = !DILocation(line: 130, column: 20, scope: !8004)
!8015 = !DILocation(line: 130, column: 2, scope: !8004)
!8016 = !DILocation(line: 131, column: 4, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8004, file: !7902, line: 130, column: 35)
!8018 = !DILocation(line: 132, column: 4, scope: !8017)
!8019 = distinct !{!8019, !8015, !8020}
!8020 = !DILocation(line: 133, column: 2, scope: !8004)
!8021 = !DILocation(line: 135, column: 2, scope: !8004)
!8022 = distinct !DISubprogram(name: "strcmp", scope: !7902, file: !7902, line: 145, type: !8023, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8025)
!8023 = !DISubroutineType(types: !8024)
!8024 = !{!103, !155, !155}
!8025 = !{!8026, !8027}
!8026 = !DILocalVariable(name: "s1", arg: 1, scope: !8022, file: !7902, line: 145, type: !155)
!8027 = !DILocalVariable(name: "s2", arg: 2, scope: !8022, file: !7902, line: 145, type: !155)
!8028 = !DILocation(line: 0, scope: !8022)
!8029 = !DILocation(line: 147, column: 10, scope: !8022)
!8030 = !DILocation(line: 147, column: 17, scope: !8022)
!8031 = !DILocation(line: 147, column: 14, scope: !8022)
!8032 = !DILocation(line: 147, column: 22, scope: !8022)
!8033 = !DILocation(line: 148, column: 5, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8022, file: !7902, line: 147, column: 40)
!8035 = !DILocation(line: 149, column: 5, scope: !8034)
!8036 = distinct !{!8036, !8037, !8038}
!8037 = !DILocation(line: 147, column: 2, scope: !8022)
!8038 = !DILocation(line: 150, column: 2, scope: !8022)
!8039 = !DILocation(line: 152, column: 9, scope: !8022)
!8040 = !DILocation(line: 152, column: 15, scope: !8022)
!8041 = !DILocation(line: 152, column: 13, scope: !8022)
!8042 = !DILocation(line: 152, column: 2, scope: !8022)
!8043 = distinct !DISubprogram(name: "strncmp", scope: !7902, file: !7902, line: 162, type: !8044, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8046)
!8044 = !DISubroutineType(types: !8045)
!8045 = !{!103, !155, !155, !356}
!8046 = !{!8047, !8048, !8049}
!8047 = !DILocalVariable(name: "s1", arg: 1, scope: !8043, file: !7902, line: 162, type: !155)
!8048 = !DILocalVariable(name: "s2", arg: 2, scope: !8043, file: !7902, line: 162, type: !155)
!8049 = !DILocalVariable(name: "n", arg: 3, scope: !8043, file: !7902, line: 162, type: !356)
!8050 = !DILocation(line: 0, scope: !8043)
!8051 = !DILocation(line: 164, column: 17, scope: !8043)
!8052 = !DILocation(line: 164, column: 21, scope: !8043)
!8053 = !DILocation(line: 164, column: 28, scope: !8043)
!8054 = !DILocation(line: 164, column: 25, scope: !8043)
!8055 = !DILocation(line: 164, column: 33, scope: !8043)
!8056 = !DILocation(line: 165, column: 5, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8043, file: !7902, line: 164, column: 51)
!8058 = !DILocation(line: 166, column: 5, scope: !8057)
!8059 = !DILocation(line: 167, column: 4, scope: !8057)
!8060 = distinct !{!8060, !8061, !8062}
!8061 = !DILocation(line: 164, column: 2, scope: !8043)
!8062 = !DILocation(line: 168, column: 2, scope: !8043)
!8063 = !DILocation(line: 170, column: 25, scope: !8043)
!8064 = !DILocation(line: 170, column: 31, scope: !8043)
!8065 = !DILocation(line: 170, column: 29, scope: !8043)
!8066 = !DILocation(line: 170, column: 9, scope: !8043)
!8067 = !DILocation(line: 170, column: 2, scope: !8043)
!8068 = distinct !DISubprogram(name: "strtok_r", scope: !7902, file: !7902, line: 180, type: !8069, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8072)
!8069 = !DISubroutineType(types: !8070)
!8070 = !{!1063, !1063, !155, !8071}
!8071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!8072 = !{!8073, !8074, !8075, !8076, !8077}
!8073 = !DILocalVariable(name: "str", arg: 1, scope: !8068, file: !7902, line: 180, type: !1063)
!8074 = !DILocalVariable(name: "sep", arg: 2, scope: !8068, file: !7902, line: 180, type: !155)
!8075 = !DILocalVariable(name: "state", arg: 3, scope: !8068, file: !7902, line: 180, type: !8071)
!8076 = !DILocalVariable(name: "start", scope: !8068, file: !7902, line: 182, type: !1063)
!8077 = !DILocalVariable(name: "end", scope: !8068, file: !7902, line: 182, type: !1063)
!8078 = !DILocation(line: 0, scope: !8068)
!8079 = !DILocation(line: 184, column: 10, scope: !8068)
!8080 = !DILocation(line: 184, column: 22, scope: !8068)
!8081 = !DILocation(line: 187, column: 9, scope: !8068)
!8082 = !DILocation(line: 187, column: 16, scope: !8068)
!8083 = !DILocation(line: 187, column: 19, scope: !8068)
!8084 = !DILocation(line: 187, column: 2, scope: !8068)
!8085 = !DILocation(line: 188, column: 8, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8068, file: !7902, line: 187, column: 40)
!8087 = distinct !{!8087, !8084, !8088}
!8088 = !DILocation(line: 189, column: 2, scope: !8068)
!8089 = !DILocation(line: 198, column: 9, scope: !8068)
!8090 = !DILocation(line: 198, column: 18, scope: !8068)
!8091 = !DILocation(line: 198, column: 17, scope: !8068)
!8092 = !DILocation(line: 198, column: 2, scope: !8068)
!8093 = !DILocation(line: 199, column: 6, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8068, file: !7902, line: 198, column: 37)
!8095 = !DILocation(line: 198, column: 14, scope: !8068)
!8096 = distinct !{!8096, !8092, !8097}
!8097 = !DILocation(line: 200, column: 2, scope: !8068)
!8098 = !DILocation(line: 203, column: 8, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !7902, line: 202, column: 20)
!8100 = distinct !DILexicalBlock(scope: !8068, file: !7902, line: 202, column: 6)
!8101 = !DILocation(line: 204, column: 16, scope: !8099)
!8102 = !DILocation(line: 205, column: 2, scope: !8099)
!8103 = !DILocation(line: 210, column: 1, scope: !8068)
!8104 = distinct !DISubprogram(name: "strcat", scope: !7902, file: !7902, line: 212, type: !7903, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8105)
!8105 = !{!8106, !8107}
!8106 = !DILocalVariable(name: "dest", arg: 1, scope: !8104, file: !7902, line: 212, type: !7905)
!8107 = !DILocalVariable(name: "src", arg: 2, scope: !8104, file: !7902, line: 212, type: !7906)
!8108 = !DILocation(line: 0, scope: !8104)
!8109 = !DILocation(line: 214, column: 16, scope: !8104)
!8110 = !DILocation(line: 214, column: 14, scope: !8104)
!8111 = !DILocation(line: 214, column: 2, scope: !8104)
!8112 = !DILocation(line: 215, column: 2, scope: !8104)
!8113 = distinct !DISubprogram(name: "strncat", scope: !7902, file: !7902, line: 218, type: !7924, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8114)
!8114 = !{!8115, !8116, !8117, !8118, !8119}
!8115 = !DILocalVariable(name: "dest", arg: 1, scope: !8113, file: !7902, line: 218, type: !7905)
!8116 = !DILocalVariable(name: "src", arg: 2, scope: !8113, file: !7902, line: 218, type: !7906)
!8117 = !DILocalVariable(name: "n", arg: 3, scope: !8113, file: !7902, line: 219, type: !356)
!8118 = !DILocalVariable(name: "orig_dest", scope: !8113, file: !7902, line: 221, type: !1063)
!8119 = !DILocalVariable(name: "len", scope: !8113, file: !7902, line: 222, type: !356)
!8120 = !DILocation(line: 0, scope: !8113)
!8121 = !DILocation(line: 222, column: 15, scope: !8113)
!8122 = !DILocation(line: 224, column: 7, scope: !8113)
!8123 = !DILocation(line: 225, column: 14, scope: !8113)
!8124 = !DILocation(line: 225, column: 19, scope: !8113)
!8125 = !DILocation(line: 225, column: 11, scope: !8113)
!8126 = !DILocation(line: 225, column: 23, scope: !8113)
!8127 = !DILocation(line: 225, column: 28, scope: !8113)
!8128 = !DILocation(line: 225, column: 2, scope: !8113)
!8129 = !DILocation(line: 226, column: 17, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8113, file: !7902, line: 225, column: 38)
!8131 = !DILocation(line: 226, column: 8, scope: !8130)
!8132 = !DILocation(line: 226, column: 11, scope: !8130)
!8133 = distinct !{!8133, !8128, !8134}
!8134 = !DILocation(line: 227, column: 2, scope: !8113)
!8135 = !DILocation(line: 228, column: 8, scope: !8113)
!8136 = !DILocation(line: 230, column: 2, scope: !8113)
!8137 = distinct !DISubprogram(name: "memcmp", scope: !7902, file: !7902, line: 239, type: !8138, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8140)
!8138 = !DISubroutineType(types: !8139)
!8139 = !{!103, !13, !13, !356}
!8140 = !{!8141, !8142, !8143, !8144, !8145}
!8141 = !DILocalVariable(name: "m1", arg: 1, scope: !8137, file: !7902, line: 239, type: !13)
!8142 = !DILocalVariable(name: "m2", arg: 2, scope: !8137, file: !7902, line: 239, type: !13)
!8143 = !DILocalVariable(name: "n", arg: 3, scope: !8137, file: !7902, line: 239, type: !356)
!8144 = !DILocalVariable(name: "c1", scope: !8137, file: !7902, line: 241, type: !155)
!8145 = !DILocalVariable(name: "c2", scope: !8137, file: !7902, line: 242, type: !155)
!8146 = !DILocation(line: 0, scope: !8137)
!8147 = !DILocation(line: 244, column: 7, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8137, file: !7902, line: 244, column: 6)
!8149 = !DILocation(line: 244, column: 6, scope: !8137)
!8150 = !DILocation(line: 248, column: 10, scope: !8137)
!8151 = !DILocation(line: 248, column: 14, scope: !8137)
!8152 = !DILocation(line: 248, column: 19, scope: !8137)
!8153 = !DILocation(line: 248, column: 2, scope: !8137)
!8154 = !DILocation(line: 248, column: 23, scope: !8137)
!8155 = !DILocation(line: 248, column: 30, scope: !8137)
!8156 = !DILocation(line: 248, column: 27, scope: !8137)
!8157 = !DILocation(line: 249, column: 5, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8137, file: !7902, line: 248, column: 36)
!8159 = !DILocation(line: 250, column: 5, scope: !8158)
!8160 = distinct !{!8160, !8153, !8161}
!8161 = !DILocation(line: 251, column: 2, scope: !8137)
!8162 = !DILocation(line: 253, column: 9, scope: !8137)
!8163 = !DILocation(line: 253, column: 15, scope: !8137)
!8164 = !DILocation(line: 253, column: 13, scope: !8137)
!8165 = !DILocation(line: 253, column: 2, scope: !8137)
!8166 = !DILocation(line: 254, column: 1, scope: !8137)
!8167 = distinct !DISubprogram(name: "memmove", scope: !7902, file: !7902, line: 263, type: !8168, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8170)
!8168 = !DISubroutineType(types: !8169)
!8169 = !{!102, !102, !13, !356}
!8170 = !{!8171, !8172, !8173, !8174, !8175}
!8171 = !DILocalVariable(name: "d", arg: 1, scope: !8167, file: !7902, line: 263, type: !102)
!8172 = !DILocalVariable(name: "s", arg: 2, scope: !8167, file: !7902, line: 263, type: !13)
!8173 = !DILocalVariable(name: "n", arg: 3, scope: !8167, file: !7902, line: 263, type: !356)
!8174 = !DILocalVariable(name: "dest", scope: !8167, file: !7902, line: 265, type: !1063)
!8175 = !DILocalVariable(name: "src", scope: !8167, file: !7902, line: 266, type: !155)
!8176 = !DILocation(line: 0, scope: !8167)
!8177 = !DILocation(line: 268, column: 21, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8167, file: !7902, line: 268, column: 6)
!8179 = !DILocation(line: 268, column: 28, scope: !8178)
!8180 = !DILocation(line: 268, column: 6, scope: !8167)
!8181 = !DILocation(line: 280, column: 12, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8178, file: !7902, line: 278, column: 9)
!8183 = !DILocation(line: 280, column: 3, scope: !8182)
!8184 = !DILocation(line: 275, column: 5, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8186, file: !7902, line: 274, column: 17)
!8186 = distinct !DILexicalBlock(scope: !8178, file: !7902, line: 268, column: 33)
!8187 = !DILocation(line: 276, column: 14, scope: !8185)
!8188 = !DILocation(line: 276, column: 4, scope: !8185)
!8189 = !DILocation(line: 276, column: 12, scope: !8185)
!8190 = !DILocation(line: 274, column: 12, scope: !8186)
!8191 = !DILocation(line: 274, column: 3, scope: !8186)
!8192 = distinct !{!8192, !8191, !8193}
!8193 = !DILocation(line: 277, column: 3, scope: !8186)
!8194 = !DILocation(line: 281, column: 12, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8182, file: !7902, line: 280, column: 17)
!8196 = !DILocation(line: 281, column: 10, scope: !8195)
!8197 = !DILocation(line: 282, column: 8, scope: !8195)
!8198 = !DILocation(line: 283, column: 7, scope: !8195)
!8199 = !DILocation(line: 284, column: 5, scope: !8195)
!8200 = distinct !{!8200, !8183, !8201}
!8201 = !DILocation(line: 285, column: 3, scope: !8182)
!8202 = !DILocation(line: 288, column: 2, scope: !8167)
!8203 = distinct !DISubprogram(name: "memcpy", scope: !7902, file: !7902, line: 298, type: !8204, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8208)
!8204 = !DISubroutineType(types: !8205)
!8205 = !{!102, !8206, !8207, !356}
!8206 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8207 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8208 = !{!8209, !8210, !8211, !8212, !8213}
!8209 = !DILocalVariable(name: "d", arg: 1, scope: !8203, file: !7902, line: 298, type: !8206)
!8210 = !DILocalVariable(name: "s", arg: 2, scope: !8203, file: !7902, line: 298, type: !8207)
!8211 = !DILocalVariable(name: "n", arg: 3, scope: !8203, file: !7902, line: 298, type: !356)
!8212 = !DILocalVariable(name: "d_byte", scope: !8203, file: !7902, line: 302, type: !233)
!8213 = !DILocalVariable(name: "s_byte", scope: !8203, file: !7902, line: 303, type: !2998)
!8214 = !DILocation(line: 0, scope: !8203)
!8215 = !DILocation(line: 337, column: 11, scope: !8203)
!8216 = !DILocation(line: 337, column: 2, scope: !8203)
!8217 = !DILocation(line: 338, column: 25, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8203, file: !7902, line: 337, column: 16)
!8219 = !DILocation(line: 338, column: 17, scope: !8218)
!8220 = !DILocation(line: 338, column: 11, scope: !8218)
!8221 = !DILocation(line: 338, column: 15, scope: !8218)
!8222 = !DILocation(line: 339, column: 4, scope: !8218)
!8223 = distinct !{!8223, !8216, !8224}
!8224 = !DILocation(line: 340, column: 2, scope: !8203)
!8225 = !DILocation(line: 342, column: 2, scope: !8203)
!8226 = distinct !DISubprogram(name: "memset", scope: !7902, file: !7902, line: 352, type: !8227, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8229)
!8227 = !DISubroutineType(types: !8228)
!8228 = !{!102, !102, !103, !356}
!8229 = !{!8230, !8231, !8232, !8233, !8234}
!8230 = !DILocalVariable(name: "buf", arg: 1, scope: !8226, file: !7902, line: 352, type: !102)
!8231 = !DILocalVariable(name: "c", arg: 2, scope: !8226, file: !7902, line: 352, type: !103)
!8232 = !DILocalVariable(name: "n", arg: 3, scope: !8226, file: !7902, line: 352, type: !356)
!8233 = !DILocalVariable(name: "d_byte", scope: !8226, file: !7902, line: 356, type: !233)
!8234 = !DILocalVariable(name: "c_byte", scope: !8226, file: !7902, line: 357, type: !164)
!8235 = !DILocation(line: 0, scope: !8226)
!8236 = !DILocation(line: 357, column: 25, scope: !8226)
!8237 = !DILocation(line: 389, column: 11, scope: !8226)
!8238 = !DILocation(line: 389, column: 2, scope: !8226)
!8239 = !DILocation(line: 390, column: 11, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8226, file: !7902, line: 389, column: 16)
!8241 = !DILocation(line: 390, column: 15, scope: !8240)
!8242 = !DILocation(line: 391, column: 4, scope: !8240)
!8243 = distinct !{!8243, !8238, !8244}
!8244 = !DILocation(line: 392, column: 2, scope: !8226)
!8245 = !DILocation(line: 394, column: 2, scope: !8226)
!8246 = distinct !DISubprogram(name: "memchr", scope: !7902, file: !7902, line: 404, type: !8247, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !8249)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{!102, !13, !103, !356}
!8249 = !{!8250, !8251, !8252, !8253}
!8250 = !DILocalVariable(name: "s", arg: 1, scope: !8246, file: !7902, line: 404, type: !13)
!8251 = !DILocalVariable(name: "c", arg: 2, scope: !8246, file: !7902, line: 404, type: !103)
!8252 = !DILocalVariable(name: "n", arg: 3, scope: !8246, file: !7902, line: 404, type: !356)
!8253 = !DILocalVariable(name: "p", scope: !8254, file: !7902, line: 407, type: !2998)
!8254 = distinct !DILexicalBlock(scope: !8255, file: !7902, line: 406, column: 14)
!8255 = distinct !DILexicalBlock(scope: !8246, file: !7902, line: 406, column: 6)
!8256 = !DILocation(line: 0, scope: !8246)
!8257 = !DILocation(line: 406, column: 8, scope: !8255)
!8258 = !DILocation(line: 406, column: 6, scope: !8246)
!8259 = !DILocation(line: 409, column: 3, scope: !8254)
!8260 = !DILocation(line: 0, scope: !8254)
!8261 = !DILocation(line: 410, column: 8, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !7902, line: 410, column: 8)
!8263 = distinct !DILexicalBlock(scope: !8254, file: !7902, line: 409, column: 6)
!8264 = !DILocation(line: 410, column: 13, scope: !8262)
!8265 = !DILocation(line: 410, column: 8, scope: !8263)
!8266 = distinct !{!8266, !8259, !8267}
!8267 = !DILocation(line: 414, column: 20, scope: !8254)
!8268 = !DILocation(line: 417, column: 2, scope: !8246)
!8269 = !DILocation(line: 418, column: 1, scope: !8246)
!8270 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !545, file: !545, line: 23, type: !3370, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8271)
!8271 = !{!8272}
!8272 = !DILocalVariable(name: "hook", arg: 1, scope: !8270, file: !545, line: 23, type: !117)
!8273 = !DILocation(line: 0, scope: !8270)
!8274 = !DILocation(line: 25, column: 15, scope: !8270)
!8275 = !DILocation(line: 26, column: 1, scope: !8270)
!8276 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !545, file: !545, line: 14, type: !118, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8277)
!8277 = !{!8278}
!8278 = !DILocalVariable(name: "c", arg: 1, scope: !8276, file: !545, line: 14, type: !103)
!8279 = !DILocation(line: 0, scope: !8276)
!8280 = !DILocation(line: 18, column: 2, scope: !8276)
!8281 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !545, file: !545, line: 28, type: !8282, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8284)
!8282 = !DISubroutineType(types: !8283)
!8283 = !{!103, !103, !541}
!8284 = !{!8285, !8286}
!8285 = !DILocalVariable(name: "c", arg: 1, scope: !8281, file: !545, line: 28, type: !103)
!8286 = !DILocalVariable(name: "stream", arg: 2, scope: !8281, file: !545, line: 28, type: !541)
!8287 = !DILocation(line: 0, scope: !8281)
!8288 = !DILocation(line: 30, column: 27, scope: !8281)
!8289 = !DILocation(line: 30, column: 50, scope: !8281)
!8290 = !DILocation(line: 30, column: 9, scope: !8281)
!8291 = !DILocation(line: 30, column: 2, scope: !8281)
!8292 = distinct !DISubprogram(name: "fputc", scope: !545, file: !545, line: 41, type: !8282, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8293)
!8293 = !{!8294, !8295}
!8294 = !DILocalVariable(name: "c", arg: 1, scope: !8292, file: !545, line: 41, type: !103)
!8295 = !DILocalVariable(name: "stream", arg: 2, scope: !8292, file: !545, line: 41, type: !541)
!8296 = !DILocation(line: 0, scope: !8292)
!8297 = !DILocation(line: 43, column: 9, scope: !8292)
!8298 = !DILocation(line: 43, column: 2, scope: !8292)
!8299 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8300, file: !8300, line: 72, type: !8282, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8301)
!8300 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_neonkey/subsys/console/echo")
!8301 = !{!8302, !8303}
!8302 = !DILocalVariable(name: "c", arg: 1, scope: !8299, file: !8300, line: 72, type: !103)
!8303 = !DILocalVariable(name: "stream", arg: 2, scope: !8299, file: !8300, line: 72, type: !541)
!8304 = !DILocation(line: 0, scope: !8299)
!8305 = !DILocation(line: 81, column: 2, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8299, file: !8300, line: 81, column: 2)
!8307 = !{i64 2154126865}
!8308 = !DILocation(line: 82, column: 9, scope: !8299)
!8309 = !DILocation(line: 82, column: 2, scope: !8299)
!8310 = distinct !DISubprogram(name: "fputs", scope: !545, file: !545, line: 46, type: !8311, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8314)
!8311 = !DISubroutineType(types: !8312)
!8312 = !{!103, !7906, !8313}
!8313 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !541)
!8314 = !{!8315, !8316, !8317, !8318}
!8315 = !DILocalVariable(name: "s", arg: 1, scope: !8310, file: !545, line: 46, type: !7906)
!8316 = !DILocalVariable(name: "stream", arg: 2, scope: !8310, file: !545, line: 46, type: !8313)
!8317 = !DILocalVariable(name: "len", scope: !8310, file: !545, line: 48, type: !103)
!8318 = !DILocalVariable(name: "ret", scope: !8310, file: !545, line: 49, type: !103)
!8319 = !DILocation(line: 0, scope: !8310)
!8320 = !DILocation(line: 48, column: 12, scope: !8310)
!8321 = !DILocation(line: 51, column: 8, scope: !8310)
!8322 = !DILocation(line: 53, column: 13, scope: !8310)
!8323 = !DILocation(line: 53, column: 9, scope: !8310)
!8324 = !DILocation(line: 53, column: 2, scope: !8310)
!8325 = distinct !DISubprogram(name: "fwrite", scope: !545, file: !545, line: 99, type: !8326, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8328)
!8326 = !DISubroutineType(types: !8327)
!8327 = !{!356, !8207, !356, !356, !8313}
!8328 = !{!8329, !8330, !8331, !8332}
!8329 = !DILocalVariable(name: "ptr", arg: 1, scope: !8325, file: !545, line: 99, type: !8207)
!8330 = !DILocalVariable(name: "size", arg: 2, scope: !8325, file: !545, line: 99, type: !356)
!8331 = !DILocalVariable(name: "nitems", arg: 3, scope: !8325, file: !545, line: 99, type: !356)
!8332 = !DILocalVariable(name: "stream", arg: 4, scope: !8325, file: !545, line: 100, type: !8313)
!8333 = !DILocation(line: 0, scope: !8325)
!8334 = !DILocation(line: 102, column: 9, scope: !8325)
!8335 = !DILocation(line: 102, column: 2, scope: !8325)
!8336 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8300, file: !8300, line: 96, type: !8326, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8337)
!8337 = !{!8338, !8339, !8340, !8341}
!8338 = !DILocalVariable(name: "ptr", arg: 1, scope: !8336, file: !8300, line: 96, type: !8207)
!8339 = !DILocalVariable(name: "size", arg: 2, scope: !8336, file: !8300, line: 96, type: !356)
!8340 = !DILocalVariable(name: "nitems", arg: 3, scope: !8336, file: !8300, line: 96, type: !356)
!8341 = !DILocalVariable(name: "stream", arg: 4, scope: !8336, file: !8300, line: 96, type: !8313)
!8342 = !DILocation(line: 0, scope: !8336)
!8343 = !DILocation(line: 107, column: 2, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8336, file: !8300, line: 107, column: 2)
!8345 = !{i64 2154126969}
!8346 = !DILocation(line: 108, column: 9, scope: !8336)
!8347 = !DILocation(line: 108, column: 2, scope: !8336)
!8348 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !545, file: !545, line: 56, type: !8326, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8349)
!8349 = !{!8350, !8351, !8352, !8353, !8354, !8355, !8356, !8357}
!8350 = !DILocalVariable(name: "ptr", arg: 1, scope: !8348, file: !545, line: 56, type: !8207)
!8351 = !DILocalVariable(name: "size", arg: 2, scope: !8348, file: !545, line: 56, type: !356)
!8352 = !DILocalVariable(name: "nitems", arg: 3, scope: !8348, file: !545, line: 57, type: !356)
!8353 = !DILocalVariable(name: "stream", arg: 4, scope: !8348, file: !545, line: 57, type: !8313)
!8354 = !DILocalVariable(name: "i", scope: !8348, file: !545, line: 59, type: !356)
!8355 = !DILocalVariable(name: "j", scope: !8348, file: !545, line: 60, type: !356)
!8356 = !DILocalVariable(name: "p", scope: !8348, file: !545, line: 61, type: !2998)
!8357 = !DILabel(scope: !8348, name: "done", file: !545, line: 82)
!8358 = !DILocation(line: 0, scope: !8348)
!8359 = !DILocation(line: 63, column: 14, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8348, file: !545, line: 63, column: 6)
!8361 = !DILocation(line: 63, column: 24, scope: !8360)
!8362 = !DILocation(line: 72, column: 3, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8348, file: !545, line: 70, column: 5)
!8364 = !DILocation(line: 0, scope: !8363)
!8365 = !DILocation(line: 73, column: 8, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !545, line: 73, column: 8)
!8367 = distinct !DILexicalBlock(scope: !8363, file: !545, line: 72, column: 6)
!8368 = !DILocation(line: 73, column: 29, scope: !8366)
!8369 = !DILocation(line: 73, column: 27, scope: !8366)
!8370 = !DILocation(line: 73, column: 21, scope: !8366)
!8371 = !DILocation(line: 73, column: 33, scope: !8366)
!8372 = !DILocation(line: 73, column: 8, scope: !8367)
!8373 = !DILocation(line: 76, column: 5, scope: !8367)
!8374 = !DILocation(line: 77, column: 14, scope: !8363)
!8375 = !DILocation(line: 77, column: 3, scope: !8367)
!8376 = distinct !{!8376, !8362, !8377}
!8377 = !DILocation(line: 77, column: 17, scope: !8363)
!8378 = !DILocation(line: 79, column: 4, scope: !8363)
!8379 = !DILocation(line: 80, column: 13, scope: !8348)
!8380 = !DILocation(line: 80, column: 2, scope: !8363)
!8381 = distinct !{!8381, !8382, !8383}
!8382 = !DILocation(line: 70, column: 2, scope: !8348)
!8383 = !DILocation(line: 80, column: 16, scope: !8348)
!8384 = !DILocation(line: 82, column: 1, scope: !8348)
!8385 = !DILocation(line: 83, column: 17, scope: !8348)
!8386 = !DILocation(line: 83, column: 2, scope: !8348)
!8387 = !DILocation(line: 84, column: 1, scope: !8348)
!8388 = distinct !DISubprogram(name: "puts", scope: !545, file: !545, line: 106, type: !8389, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !538, retainedNodes: !8391)
!8389 = !DISubroutineType(types: !8390)
!8390 = !{!103, !155}
!8391 = !{!8392}
!8392 = !DILocalVariable(name: "s", arg: 1, scope: !8388, file: !545, line: 106, type: !155)
!8393 = !DILocation(line: 0, scope: !8388)
!8394 = !DILocation(line: 108, column: 6, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8388, file: !545, line: 108, column: 6)
!8396 = !DILocation(line: 108, column: 23, scope: !8395)
!8397 = !DILocation(line: 108, column: 6, scope: !8388)
!8398 = !DILocation(line: 112, column: 9, scope: !8388)
!8399 = !DILocation(line: 112, column: 29, scope: !8388)
!8400 = !DILocation(line: 112, column: 2, scope: !8388)
!8401 = !DILocation(line: 113, column: 1, scope: !8388)
!8402 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !657, file: !657, line: 368, type: !710, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8403)
!8403 = !{!8404}
!8404 = !DILocalVariable(name: "dev", arg: 1, scope: !8402, file: !657, line: 368, type: !686)
!8405 = !DILocation(line: 0, scope: !8402)
!8406 = !DILocation(line: 370, column: 2, scope: !8402)
!8407 = !DILocation(line: 371, column: 1, scope: !8402)
!8408 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !657, file: !657, line: 243, type: !8409, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8411)
!8409 = !DISubroutineType(types: !8410)
!8410 = !{null, !103, !103, !686}
!8411 = !{!8412, !8413, !8414, !8415, !8417}
!8412 = !DILocalVariable(name: "min", arg: 1, scope: !8408, file: !657, line: 243, type: !103)
!8413 = !DILocalVariable(name: "max", arg: 2, scope: !8408, file: !657, line: 243, type: !103)
!8414 = !DILocalVariable(name: "dev", arg: 3, scope: !8408, file: !657, line: 243, type: !686)
!8415 = !DILocalVariable(name: "data", scope: !8408, file: !657, line: 245, type: !8416)
!8416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!8417 = !DILocalVariable(name: "line", scope: !8408, file: !657, line: 246, type: !103)
!8418 = !DILocation(line: 0, scope: !8408)
!8419 = !DILocation(line: 245, column: 38, scope: !8408)
!8420 = !DILocation(line: 249, column: 24, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !657, line: 249, column: 2)
!8422 = distinct !DILexicalBlock(scope: !8408, file: !657, line: 249, column: 2)
!8423 = !DILocation(line: 249, column: 2, scope: !8422)
!8424 = !DILocation(line: 251, column: 7, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !657, line: 251, column: 7)
!8426 = distinct !DILexicalBlock(scope: !8421, file: !657, line: 249, column: 39)
!8427 = !DILocation(line: 251, column: 7, scope: !8426)
!8428 = !DILocation(line: 253, column: 4, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8425, file: !657, line: 251, column: 36)
!8430 = !DILocation(line: 256, column: 24, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8429, file: !657, line: 256, column: 8)
!8432 = !DILocation(line: 256, column: 9, scope: !8431)
!8433 = !DILocation(line: 256, column: 8, scope: !8429)
!8434 = !DILocation(line: 260, column: 43, scope: !8429)
!8435 = !DILocation(line: 260, column: 4, scope: !8429)
!8436 = !DILocation(line: 261, column: 3, scope: !8429)
!8437 = !DILocation(line: 249, column: 35, scope: !8421)
!8438 = distinct !{!8438, !8423, !8439}
!8439 = !DILocation(line: 262, column: 2, scope: !8422)
!8440 = !DILocation(line: 263, column: 1, scope: !8408)
!8441 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !657, file: !657, line: 158, type: !118, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8442)
!8442 = !{!8443}
!8443 = !DILocalVariable(name: "line", arg: 1, scope: !8441, file: !657, line: 158, type: !103)
!8444 = !DILocation(line: 0, scope: !8441)
!8445 = !DILocation(line: 170, column: 38, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8447, file: !657, line: 160, column: 17)
!8447 = distinct !DILexicalBlock(scope: !8441, file: !657, line: 160, column: 6)
!8448 = !DILocation(line: 170, column: 10, scope: !8446)
!8449 = !DILocation(line: 176, column: 1, scope: !8441)
!8450 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !657, file: !657, line: 183, type: !8451, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8453)
!8451 = !DISubroutineType(types: !8452)
!8452 = !{null, !103}
!8453 = !{!8454}
!8454 = !DILocalVariable(name: "line", arg: 1, scope: !8450, file: !657, line: 183, type: !103)
!8455 = !DILocation(line: 0, scope: !8450)
!8456 = !DILocation(line: 195, column: 28, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !657, line: 185, column: 17)
!8458 = distinct !DILexicalBlock(scope: !8450, file: !657, line: 185, column: 6)
!8459 = !DILocation(line: 195, column: 3, scope: !8457)
!8460 = !DILocation(line: 200, column: 1, scope: !8450)
!8461 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8462, file: !8462, line: 910, type: !6900, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8463)
!8462 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8463 = !{!8464}
!8464 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8461, file: !8462, line: 910, type: !132)
!8465 = !DILocation(line: 0, scope: !8461)
!8466 = !DILocation(line: 912, column: 3, scope: !8461)
!8467 = !DILocation(line: 913, column: 1, scope: !8461)
!8468 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8462, file: !8462, line: 834, type: !7816, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8469)
!8469 = !{!8470}
!8470 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8468, file: !8462, line: 834, type: !132)
!8471 = !DILocation(line: 0, scope: !8468)
!8472 = !DILocation(line: 836, column: 11, scope: !8468)
!8473 = !DILocation(line: 836, column: 40, scope: !8468)
!8474 = !DILocation(line: 836, column: 3, scope: !8468)
!8475 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !657, file: !657, line: 304, type: !710, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8476)
!8476 = !{!8477}
!8477 = !DILocalVariable(name: "dev", arg: 1, scope: !8475, file: !657, line: 304, type: !686)
!8478 = !DILocation(line: 0, scope: !8475)
!8479 = !DILocation(line: 306, column: 2, scope: !8475)
!8480 = !DILocation(line: 307, column: 1, scope: !8475)
!8481 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !657, file: !657, line: 299, type: !710, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8482)
!8482 = !{!8483}
!8483 = !DILocalVariable(name: "dev", arg: 1, scope: !8481, file: !657, line: 299, type: !686)
!8484 = !DILocation(line: 0, scope: !8481)
!8485 = !DILocation(line: 301, column: 2, scope: !8481)
!8486 = !DILocation(line: 302, column: 1, scope: !8481)
!8487 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !657, file: !657, line: 294, type: !710, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8488)
!8488 = !{!8489}
!8489 = !DILocalVariable(name: "dev", arg: 1, scope: !8487, file: !657, line: 294, type: !686)
!8490 = !DILocation(line: 0, scope: !8487)
!8491 = !DILocation(line: 296, column: 2, scope: !8487)
!8492 = !DILocation(line: 297, column: 1, scope: !8487)
!8493 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !657, file: !657, line: 397, type: !710, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8494)
!8494 = !{!8495}
!8495 = !DILocalVariable(name: "dev", arg: 1, scope: !8493, file: !657, line: 397, type: !686)
!8496 = !DILocation(line: 0, scope: !8493)
!8497 = !DILocation(line: 399, column: 2, scope: !8493)
!8498 = !DILocation(line: 400, column: 1, scope: !8493)
!8499 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !657, file: !657, line: 392, type: !710, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8500)
!8500 = !{!8501}
!8501 = !DILocalVariable(name: "dev", arg: 1, scope: !8499, file: !657, line: 392, type: !686)
!8502 = !DILocation(line: 0, scope: !8499)
!8503 = !DILocation(line: 394, column: 2, scope: !8499)
!8504 = !DILocation(line: 395, column: 1, scope: !8499)
!8505 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !657, file: !657, line: 289, type: !710, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8506)
!8506 = !{!8507}
!8507 = !DILocalVariable(name: "dev", arg: 1, scope: !8505, file: !657, line: 289, type: !686)
!8508 = !DILocation(line: 0, scope: !8505)
!8509 = !DILocation(line: 291, column: 2, scope: !8505)
!8510 = !DILocation(line: 292, column: 1, scope: !8505)
!8511 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !657, file: !657, line: 387, type: !710, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8512)
!8512 = !{!8513}
!8513 = !DILocalVariable(name: "dev", arg: 1, scope: !8511, file: !657, line: 387, type: !686)
!8514 = !DILocation(line: 0, scope: !8511)
!8515 = !DILocation(line: 389, column: 2, scope: !8511)
!8516 = !DILocation(line: 390, column: 1, scope: !8511)
!8517 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !657, file: !657, line: 382, type: !710, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8518)
!8518 = !{!8519}
!8519 = !DILocalVariable(name: "dev", arg: 1, scope: !8517, file: !657, line: 382, type: !686)
!8520 = !DILocation(line: 0, scope: !8517)
!8521 = !DILocation(line: 384, column: 2, scope: !8517)
!8522 = !DILocation(line: 385, column: 1, scope: !8517)
!8523 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !657, file: !657, line: 373, type: !710, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8524)
!8524 = !{!8525}
!8525 = !DILocalVariable(name: "dev", arg: 1, scope: !8523, file: !657, line: 373, type: !686)
!8526 = !DILocation(line: 0, scope: !8523)
!8527 = !DILocation(line: 375, column: 2, scope: !8523)
!8528 = !DILocation(line: 376, column: 1, scope: !8523)
!8529 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !657, file: !657, line: 284, type: !710, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8530)
!8530 = !{!8531}
!8531 = !DILocalVariable(name: "dev", arg: 1, scope: !8529, file: !657, line: 284, type: !686)
!8532 = !DILocation(line: 0, scope: !8529)
!8533 = !DILocation(line: 286, column: 2, scope: !8529)
!8534 = !DILocation(line: 287, column: 1, scope: !8529)
!8535 = distinct !DISubprogram(name: "stm32_exti_init", scope: !657, file: !657, line: 416, type: !684, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8536)
!8536 = !{!8537}
!8537 = !DILocalVariable(name: "dev", arg: 1, scope: !8535, file: !657, line: 416, type: !686)
!8538 = !DILocation(line: 0, scope: !8535)
!8539 = !DILocation(line: 418, column: 2, scope: !8535)
!8540 = !DILocation(line: 420, column: 2, scope: !8535)
!8541 = !DILocation(line: 0, scope: !709)
!8542 = !DILocation(line: 493, column: 2, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !709, file: !657, line: 493, column: 2)
!8544 = !DILocation(line: 497, column: 2, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !709, file: !657, line: 497, column: 2)
!8546 = !DILocation(line: 507, column: 2, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !709, file: !657, line: 507, column: 2)
!8548 = !DILocation(line: 512, column: 2, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !709, file: !657, line: 512, column: 2)
!8550 = !DILocation(line: 516, column: 2, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !709, file: !657, line: 516, column: 2)
!8552 = !DILocation(line: 523, column: 2, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !709, file: !657, line: 523, column: 2)
!8554 = !DILocation(line: 527, column: 2, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !709, file: !657, line: 527, column: 2)
!8556 = !DILocation(line: 581, column: 2, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !709, file: !657, line: 581, column: 2)
!8558 = !DILocation(line: 586, column: 2, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !709, file: !657, line: 586, column: 2)
!8560 = !DILocation(line: 591, column: 2, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !709, file: !657, line: 591, column: 2)
!8562 = !DILocation(line: 595, column: 2, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !709, file: !657, line: 595, column: 2)
!8564 = !DILocation(line: 607, column: 1, scope: !709)
!8565 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !657, file: !657, line: 112, type: !8451, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8566)
!8566 = !{!8567, !8568}
!8567 = !DILocalVariable(name: "line", arg: 1, scope: !8565, file: !657, line: 112, type: !103)
!8568 = !DILocalVariable(name: "irqnum", scope: !8565, file: !657, line: 114, type: !103)
!8569 = !DILocation(line: 0, scope: !8565)
!8570 = !DILocation(line: 121, column: 11, scope: !8565)
!8571 = !DILocation(line: 130, column: 26, scope: !8565)
!8572 = !DILocation(line: 130, column: 2, scope: !8565)
!8573 = !DILocation(line: 134, column: 2, scope: !8565)
!8574 = !DILocation(line: 135, column: 1, scope: !8565)
!8575 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8462, file: !8462, line: 268, type: !6900, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8576)
!8576 = !{!8577}
!8577 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8575, file: !8462, line: 268, type: !132)
!8578 = !DILocation(line: 0, scope: !8575)
!8579 = !DILocation(line: 270, column: 3, scope: !8575)
!8580 = !DILocation(line: 271, column: 1, scope: !8575)
!8581 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !657, file: !657, line: 137, type: !8451, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8582)
!8582 = !{!8583}
!8583 = !DILocalVariable(name: "line", arg: 1, scope: !8581, file: !657, line: 137, type: !103)
!8584 = !DILocation(line: 0, scope: !8581)
!8585 = !DILocation(line: 141, column: 11, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8581, file: !657, line: 141, column: 6)
!8587 = !DILocation(line: 141, column: 6, scope: !8581)
!8588 = !DILocation(line: 145, column: 28, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8586, file: !657, line: 141, column: 17)
!8590 = !DILocation(line: 145, column: 3, scope: !8589)
!8591 = !DILocation(line: 147, column: 2, scope: !8589)
!8592 = !DILocation(line: 151, column: 1, scope: !8581)
!8593 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8462, file: !8462, line: 309, type: !6900, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8594)
!8594 = !{!8595}
!8595 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8593, file: !8462, line: 309, type: !132)
!8596 = !DILocation(line: 0, scope: !8593)
!8597 = !DILocation(line: 311, column: 3, scope: !8593)
!8598 = !DILocation(line: 312, column: 1, scope: !8593)
!8599 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !657, file: !657, line: 202, type: !8600, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8602)
!8600 = !DISubroutineType(types: !8601)
!8601 = !{null, !103, !103}
!8602 = !{!8603, !8604}
!8603 = !DILocalVariable(name: "line", arg: 1, scope: !8599, file: !657, line: 202, type: !103)
!8604 = !DILocalVariable(name: "trigger", arg: 2, scope: !8599, file: !657, line: 202, type: !103)
!8605 = !DILocation(line: 0, scope: !8599)
!8606 = !DILocation(line: 211, column: 2, scope: !8599)
!8607 = !DILocation(line: 213, column: 36, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8599, file: !657, line: 211, column: 19)
!8609 = !DILocation(line: 213, column: 3, scope: !8608)
!8610 = !DILocation(line: 214, column: 3, scope: !8608)
!8611 = !DILocation(line: 215, column: 3, scope: !8608)
!8612 = !DILocation(line: 217, column: 35, scope: !8608)
!8613 = !DILocation(line: 217, column: 3, scope: !8608)
!8614 = !DILocation(line: 218, column: 3, scope: !8608)
!8615 = !DILocation(line: 219, column: 3, scope: !8608)
!8616 = !DILocation(line: 221, column: 36, scope: !8608)
!8617 = !DILocation(line: 221, column: 3, scope: !8608)
!8618 = !DILocation(line: 222, column: 3, scope: !8608)
!8619 = !DILocation(line: 223, column: 3, scope: !8608)
!8620 = !DILocation(line: 225, column: 35, scope: !8608)
!8621 = !DILocation(line: 225, column: 3, scope: !8608)
!8622 = !DILocation(line: 226, column: 3, scope: !8608)
!8623 = !DILocation(line: 227, column: 3, scope: !8608)
!8624 = !DILocation(line: 232, column: 1, scope: !8599)
!8625 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8462, file: !8462, line: 573, type: !6900, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8626)
!8626 = !{!8627}
!8627 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8625, file: !8462, line: 573, type: !132)
!8628 = !DILocation(line: 0, scope: !8625)
!8629 = !DILocation(line: 575, column: 3, scope: !8625)
!8630 = !DILocation(line: 577, column: 1, scope: !8625)
!8631 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8462, file: !8462, line: 703, type: !6900, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8632)
!8632 = !{!8633}
!8633 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8631, file: !8462, line: 703, type: !132)
!8634 = !DILocation(line: 0, scope: !8631)
!8635 = !DILocation(line: 705, column: 3, scope: !8631)
!8636 = !DILocation(line: 706, column: 1, scope: !8631)
!8637 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8462, file: !8462, line: 529, type: !6900, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8638)
!8638 = !{!8639}
!8639 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8637, file: !8462, line: 529, type: !132)
!8640 = !DILocation(line: 0, scope: !8637)
!8641 = !DILocation(line: 531, column: 3, scope: !8637)
!8642 = !DILocation(line: 533, column: 1, scope: !8637)
!8643 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8462, file: !8462, line: 661, type: !6900, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8644)
!8644 = !{!8645}
!8645 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8643, file: !8462, line: 661, type: !132)
!8646 = !DILocation(line: 0, scope: !8643)
!8647 = !DILocation(line: 663, column: 3, scope: !8643)
!8648 = !DILocation(line: 664, column: 1, scope: !8643)
!8649 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !657, file: !657, line: 433, type: !8650, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8652)
!8650 = !DISubroutineType(types: !8651)
!8651 = !{!103, !103, !697, !102}
!8652 = !{!8653, !8654, !8655, !8656, !8658}
!8653 = !DILocalVariable(name: "line", arg: 1, scope: !8649, file: !657, line: 433, type: !103)
!8654 = !DILocalVariable(name: "cb", arg: 2, scope: !8649, file: !657, line: 433, type: !697)
!8655 = !DILocalVariable(name: "arg", arg: 3, scope: !8649, file: !657, line: 433, type: !102)
!8656 = !DILocalVariable(name: "dev", scope: !8649, file: !657, line: 435, type: !8657)
!8657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !686)
!8658 = !DILocalVariable(name: "data", scope: !8649, file: !657, line: 436, type: !8416)
!8659 = !DILocation(line: 0, scope: !8649)
!8660 = !DILocation(line: 438, column: 21, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8649, file: !657, line: 438, column: 6)
!8662 = !DILocation(line: 438, column: 6, scope: !8661)
!8663 = !DILocation(line: 438, column: 6, scope: !8649)
!8664 = !DILocation(line: 442, column: 20, scope: !8649)
!8665 = !DILocation(line: 443, column: 17, scope: !8649)
!8666 = !DILocation(line: 443, column: 22, scope: !8649)
!8667 = !DILocation(line: 445, column: 2, scope: !8649)
!8668 = !DILocation(line: 446, column: 1, scope: !8649)
!8669 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !657, file: !657, line: 448, type: !8451, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !573, retainedNodes: !8670)
!8670 = !{!8671, !8672, !8673}
!8671 = !DILocalVariable(name: "line", arg: 1, scope: !8669, file: !657, line: 448, type: !103)
!8672 = !DILocalVariable(name: "dev", scope: !8669, file: !657, line: 450, type: !8657)
!8673 = !DILocalVariable(name: "data", scope: !8669, file: !657, line: 451, type: !8416)
!8674 = !DILocation(line: 0, scope: !8669)
!8675 = !DILocation(line: 453, column: 17, scope: !8669)
!8676 = !DILocation(line: 453, column: 20, scope: !8669)
!8677 = !DILocation(line: 454, column: 17, scope: !8669)
!8678 = !DILocation(line: 454, column: 22, scope: !8669)
!8679 = !DILocation(line: 455, column: 1, scope: !8669)
!8680 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !841, file: !841, line: 183, type: !879, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8681)
!8681 = !{!8682, !8683, !8684, !8685, !8686}
!8682 = !DILocalVariable(name: "dev", arg: 1, scope: !8680, file: !841, line: 183, type: !870)
!8683 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8680, file: !841, line: 184, type: !881)
!8684 = !DILocalVariable(name: "pclken", scope: !8680, file: !841, line: 186, type: !831)
!8685 = !DILocalVariable(name: "reg", scope: !8680, file: !841, line: 187, type: !1587)
!8686 = !DILocalVariable(name: "reg_val", scope: !8680, file: !841, line: 188, type: !132)
!8687 = !DILocation(line: 0, scope: !8680)
!8688 = !DILocation(line: 192, column: 6, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8680, file: !841, line: 192, column: 6)
!8690 = !DILocation(line: 192, column: 6, scope: !8680)
!8691 = !DILocation(line: 197, column: 52, scope: !8680)
!8692 = !DILocation(line: 197, column: 8, scope: !8680)
!8693 = !DILocation(line: 198, column: 12, scope: !8680)
!8694 = !DILocation(line: 199, column: 21, scope: !8680)
!8695 = !DILocation(line: 199, column: 10, scope: !8680)
!8696 = !DILocation(line: 200, column: 7, scope: !8680)
!8697 = !DILocation(line: 202, column: 2, scope: !8680)
!8698 = !DILocation(line: 203, column: 1, scope: !8680)
!8699 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !841, file: !841, line: 205, type: !879, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8700)
!8700 = !{!8701, !8702, !8703, !8704, !8705}
!8701 = !DILocalVariable(name: "dev", arg: 1, scope: !8699, file: !841, line: 205, type: !870)
!8702 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8699, file: !841, line: 206, type: !881)
!8703 = !DILocalVariable(name: "pclken", scope: !8699, file: !841, line: 208, type: !831)
!8704 = !DILocalVariable(name: "reg", scope: !8699, file: !841, line: 209, type: !1587)
!8705 = !DILocalVariable(name: "reg_val", scope: !8699, file: !841, line: 210, type: !132)
!8706 = !DILocation(line: 0, scope: !8699)
!8707 = !DILocation(line: 214, column: 6, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8699, file: !841, line: 214, column: 6)
!8709 = !DILocation(line: 214, column: 6, scope: !8699)
!8710 = !DILocation(line: 219, column: 52, scope: !8699)
!8711 = !DILocation(line: 219, column: 8, scope: !8699)
!8712 = !DILocation(line: 220, column: 12, scope: !8699)
!8713 = !DILocation(line: 221, column: 22, scope: !8699)
!8714 = !DILocation(line: 221, column: 13, scope: !8699)
!8715 = !DILocation(line: 221, column: 10, scope: !8699)
!8716 = !DILocation(line: 222, column: 7, scope: !8699)
!8717 = !DILocation(line: 224, column: 2, scope: !8699)
!8718 = !DILocation(line: 225, column: 1, scope: !8699)
!8719 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !841, file: !841, line: 262, type: !895, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8720)
!8720 = !{!8721, !8722, !8723, !8724, !8725, !8726, !8727, !8728}
!8721 = !DILocalVariable(name: "clock", arg: 1, scope: !8719, file: !841, line: 262, type: !870)
!8722 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8719, file: !841, line: 263, type: !881)
!8723 = !DILocalVariable(name: "rate", arg: 3, scope: !8719, file: !841, line: 264, type: !837)
!8724 = !DILocalVariable(name: "pclken", scope: !8719, file: !841, line: 266, type: !831)
!8725 = !DILocalVariable(name: "ahb_clock", scope: !8719, file: !841, line: 273, type: !132)
!8726 = !DILocalVariable(name: "apb1_clock", scope: !8719, file: !841, line: 274, type: !132)
!8727 = !DILocalVariable(name: "apb2_clock", scope: !8719, file: !841, line: 276, type: !132)
!8728 = !DILocalVariable(name: "ahb3_clock", scope: !8719, file: !841, line: 286, type: !132)
!8729 = !DILocation(line: 0, scope: !8719)
!8730 = !DILocation(line: 273, column: 23, scope: !8719)
!8731 = !DILocation(line: 299, column: 18, scope: !8719)
!8732 = !DILocation(line: 299, column: 2, scope: !8719)
!8733 = !DILocation(line: 274, column: 24, scope: !8719)
!8734 = !DILocation(line: 319, column: 3, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8719, file: !841, line: 299, column: 23)
!8736 = !DILocation(line: 276, column: 24, scope: !8719)
!8737 = !DILocation(line: 323, column: 3, scope: !8735)
!8738 = !DILocation(line: 346, column: 33, scope: !8735)
!8739 = !DILocation(line: 346, column: 11, scope: !8735)
!8740 = !DILocation(line: 350, column: 3, scope: !8735)
!8741 = !DILocation(line: 374, column: 3, scope: !8735)
!8742 = !DILocation(line: 379, column: 3, scope: !8735)
!8743 = !DILocation(line: 0, scope: !8735)
!8744 = !DILocation(line: 396, column: 1, scope: !8719)
!8745 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !841, file: !841, line: 227, type: !911, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8746)
!8746 = !{!8747, !8748, !8749, !8750, !8751, !8752, !8753, !8754}
!8747 = !DILocalVariable(name: "dev", arg: 1, scope: !8745, file: !841, line: 227, type: !870)
!8748 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8745, file: !841, line: 228, type: !881)
!8749 = !DILocalVariable(name: "data", arg: 3, scope: !8745, file: !841, line: 229, type: !102)
!8750 = !DILocalVariable(name: "pclken", scope: !8745, file: !841, line: 233, type: !831)
!8751 = !DILocalVariable(name: "reg", scope: !8745, file: !841, line: 234, type: !1587)
!8752 = !DILocalVariable(name: "reg_val", scope: !8745, file: !841, line: 235, type: !132)
!8753 = !DILocalVariable(name: "dt_val", scope: !8745, file: !841, line: 235, type: !132)
!8754 = !DILocalVariable(name: "err", scope: !8745, file: !841, line: 236, type: !103)
!8755 = !DILocation(line: 0, scope: !8745)
!8756 = !DILocation(line: 241, column: 30, scope: !8745)
!8757 = !DILocation(line: 241, column: 8, scope: !8745)
!8758 = !DILocation(line: 242, column: 10, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8745, file: !841, line: 242, column: 6)
!8760 = !DILocation(line: 242, column: 6, scope: !8745)
!8761 = !DILocation(line: 247, column: 11, scope: !8745)
!8762 = !DILocation(line: 248, column: 6, scope: !8745)
!8763 = !DILocation(line: 247, column: 44, scope: !8745)
!8764 = !DILocation(line: 250, column: 6, scope: !8745)
!8765 = !DILocation(line: 249, column: 52, scope: !8745)
!8766 = !DILocation(line: 249, column: 8, scope: !8745)
!8767 = !DILocation(line: 251, column: 12, scope: !8745)
!8768 = !DILocation(line: 252, column: 10, scope: !8745)
!8769 = !DILocation(line: 253, column: 7, scope: !8745)
!8770 = !DILocation(line: 255, column: 2, scope: !8745)
!8771 = !DILocation(line: 260, column: 1, scope: !8745)
!8772 = distinct !DISubprogram(name: "enabled_clock", scope: !841, file: !841, line: 100, type: !8773, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8775)
!8773 = !DISubroutineType(types: !8774)
!8774 = !{!103, !132}
!8775 = !{!8776, !8777}
!8776 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8772, file: !841, line: 100, type: !132)
!8777 = !DILocalVariable(name: "r", scope: !8772, file: !841, line: 102, type: !103)
!8778 = !DILocation(line: 0, scope: !8772)
!8779 = !DILocation(line: 104, column: 2, scope: !8772)
!8780 = !DILocation(line: 180, column: 2, scope: !8772)
!8781 = !DILocation(line: 181, column: 1, scope: !8772)
!8782 = distinct !DISubprogram(name: "get_bus_clock", scope: !841, file: !841, line: 79, type: !8783, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8785)
!8783 = !DISubroutineType(types: !8784)
!8784 = !{!132, !132, !132}
!8785 = !{!8786, !8787}
!8786 = !DILocalVariable(name: "clock", arg: 1, scope: !8782, file: !841, line: 79, type: !132)
!8787 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8782, file: !841, line: 79, type: !132)
!8788 = !DILocation(line: 0, scope: !8782)
!8789 = !DILocation(line: 81, column: 15, scope: !8782)
!8790 = !DILocation(line: 81, column: 2, scope: !8782)
!8791 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !841, file: !841, line: 68, type: !8792, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8794)
!8792 = !DISubroutineType(types: !8793)
!8793 = !{!132, !132, !103, !103, !103}
!8794 = !{!8795, !8796, !8797, !8798}
!8795 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8791, file: !841, line: 68, type: !132)
!8796 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8791, file: !841, line: 69, type: !103)
!8797 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8791, file: !841, line: 70, type: !103)
!8798 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8791, file: !841, line: 71, type: !103)
!8799 = !DILocation(line: 0, scope: !8791)
!8800 = !DILocation(line: 75, column: 22, scope: !8791)
!8801 = !DILocation(line: 75, column: 34, scope: !8791)
!8802 = !DILocation(line: 75, column: 2, scope: !8791)
!8803 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !841, file: !841, line: 641, type: !868, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8804)
!8804 = !{!8805, !8806, !8807}
!8805 = !DILocalVariable(name: "dev", arg: 1, scope: !8803, file: !841, line: 641, type: !870)
!8806 = !DILocalVariable(name: "old_flash_freq", scope: !8803, file: !841, line: 664, type: !132)
!8807 = !DILocalVariable(name: "new_flash_freq", scope: !8803, file: !841, line: 665, type: !132)
!8808 = !DILocation(line: 0, scope: !8803)
!8809 = !DILocation(line: 646, column: 2, scope: !8803)
!8810 = !DILocation(line: 667, column: 19, scope: !8803)
!8811 = !DILocation(line: 674, column: 21, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8803, file: !841, line: 674, column: 6)
!8813 = !DILocation(line: 674, column: 6, scope: !8803)
!8814 = !DILocation(line: 675, column: 3, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8812, file: !841, line: 674, column: 59)
!8816 = !DILocation(line: 676, column: 2, scope: !8815)
!8817 = !DILocation(line: 680, column: 2, scope: !8803)
!8818 = !DILocation(line: 683, column: 2, scope: !8803)
!8819 = !DILocation(line: 690, column: 3, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !841, line: 689, column: 9)
!8821 = distinct !DILexicalBlock(scope: !8803, file: !841, line: 685, column: 6)
!8822 = !DILocation(line: 695, column: 2, scope: !8803)
!8823 = !DILocation(line: 696, column: 2, scope: !8803)
!8824 = !DILocation(line: 696, column: 9, scope: !8803)
!8825 = !DILocation(line: 696, column: 34, scope: !8803)
!8826 = distinct !{!8826, !8823, !8827}
!8827 = !DILocation(line: 697, column: 2, scope: !8803)
!8828 = !DILocation(line: 720, column: 21, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8803, file: !841, line: 720, column: 6)
!8830 = !DILocation(line: 720, column: 6, scope: !8803)
!8831 = !DILocation(line: 721, column: 3, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8829, file: !841, line: 720, column: 60)
!8833 = !DILocation(line: 722, column: 2, scope: !8832)
!8834 = !DILocation(line: 725, column: 18, scope: !8803)
!8835 = !DILocation(line: 728, column: 2, scope: !8803)
!8836 = !DILocation(line: 730, column: 2, scope: !8803)
!8837 = !DILocation(line: 745, column: 2, scope: !8803)
!8838 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8839, file: !8839, line: 3275, type: !6890, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8839 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8840 = !DILocation(line: 3277, column: 21, scope: !8838)
!8841 = !DILocation(line: 3277, column: 3, scope: !8838)
!8842 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !841, file: !841, line: 507, type: !3232, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8843 = !DILocation(line: 534, column: 7, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !841, line: 534, column: 7)
!8845 = distinct !DILexicalBlock(scope: !8846, file: !841, line: 532, column: 37)
!8846 = distinct !DILexicalBlock(scope: !8842, file: !841, line: 532, column: 6)
!8847 = !DILocation(line: 534, column: 28, scope: !8844)
!8848 = !DILocation(line: 534, column: 7, scope: !8845)
!8849 = !DILocation(line: 536, column: 4, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8844, file: !841, line: 534, column: 34)
!8851 = !DILocation(line: 537, column: 4, scope: !8850)
!8852 = !DILocation(line: 537, column: 11, scope: !8850)
!8853 = !DILocation(line: 537, column: 32, scope: !8850)
!8854 = distinct !{!8854, !8851, !8855}
!8855 = !DILocation(line: 539, column: 4, scope: !8850)
!8856 = !DILocation(line: 583, column: 3, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8858, file: !841, line: 577, column: 37)
!8858 = distinct !DILexicalBlock(scope: !8842, file: !841, line: 577, column: 6)
!8859 = !DILocation(line: 584, column: 3, scope: !8857)
!8860 = !DILocation(line: 584, column: 10, scope: !8857)
!8861 = !DILocation(line: 584, column: 31, scope: !8857)
!8862 = distinct !{!8862, !8859, !8863}
!8863 = !DILocation(line: 585, column: 3, scope: !8857)
!8864 = !DILocation(line: 627, column: 1, scope: !8842)
!8865 = distinct !DISubprogram(name: "set_up_plls", scope: !841, file: !841, line: 448, type: !3232, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8866 = !DILocation(line: 460, column: 6, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8865, file: !841, line: 460, column: 6)
!8868 = !DILocation(line: 460, column: 31, scope: !8867)
!8869 = !DILocation(line: 460, column: 6, scope: !8865)
!8870 = !DILocation(line: 461, column: 3, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8867, file: !841, line: 460, column: 67)
!8872 = !DILocation(line: 462, column: 3, scope: !8871)
!8873 = !DILocation(line: 463, column: 2, scope: !8871)
!8874 = !DILocation(line: 464, column: 2, scope: !8865)
!8875 = !DILocation(line: 488, column: 2, scope: !8865)
!8876 = !DILocation(line: 496, column: 2, scope: !8865)
!8877 = !DILocation(line: 499, column: 2, scope: !8865)
!8878 = !DILocation(line: 500, column: 2, scope: !8865)
!8879 = !DILocation(line: 500, column: 9, scope: !8865)
!8880 = !DILocation(line: 500, column: 30, scope: !8865)
!8881 = distinct !{!8881, !8878, !8882}
!8882 = !DILocation(line: 502, column: 2, scope: !8865)
!8883 = !DILocation(line: 505, column: 1, scope: !8865)
!8884 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8839, file: !8839, line: 3224, type: !6900, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8885)
!8885 = !{!8886}
!8886 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8884, file: !8839, line: 3224, type: !132)
!8887 = !DILocation(line: 0, scope: !8884)
!8888 = !DILocation(line: 3226, column: 3, scope: !8884)
!8889 = !DILocation(line: 3227, column: 1, scope: !8884)
!8890 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8839, file: !8839, line: 3188, type: !6900, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8891)
!8891 = !{!8892}
!8892 = !DILocalVariable(name: "Source", arg: 1, scope: !8890, file: !8839, line: 3188, type: !132)
!8893 = !DILocation(line: 0, scope: !8890)
!8894 = !DILocation(line: 3190, column: 3, scope: !8890)
!8895 = !DILocation(line: 3191, column: 1, scope: !8890)
!8896 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8839, file: !8839, line: 3204, type: !6890, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8897 = !DILocation(line: 3206, column: 21, scope: !8896)
!8898 = !DILocation(line: 3206, column: 3, scope: !8896)
!8899 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8839, file: !8839, line: 3240, type: !6900, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8900)
!8900 = !{!8901}
!8901 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8899, file: !8839, line: 3240, type: !132)
!8902 = !DILocation(line: 0, scope: !8899)
!8903 = !DILocation(line: 3242, column: 3, scope: !8899)
!8904 = !DILocation(line: 3243, column: 1, scope: !8899)
!8905 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8839, file: !8839, line: 3256, type: !6900, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !8906)
!8906 = !{!8907}
!8907 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8905, file: !8839, line: 3256, type: !132)
!8908 = !DILocation(line: 0, scope: !8905)
!8909 = !DILocation(line: 3258, column: 3, scope: !8905)
!8910 = !DILocation(line: 3259, column: 1, scope: !8905)
!8911 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !841, file: !841, line: 409, type: !3232, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8912 = !DILocation(line: 412, column: 6, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8911, file: !841, line: 412, column: 6)
!8914 = !DILocation(line: 412, column: 27, scope: !8913)
!8915 = !DILocation(line: 412, column: 6, scope: !8911)
!8916 = !DILocation(line: 414, column: 3, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8913, file: !841, line: 412, column: 33)
!8918 = !DILocation(line: 415, column: 3, scope: !8917)
!8919 = !DILocation(line: 415, column: 10, scope: !8917)
!8920 = !DILocation(line: 415, column: 31, scope: !8917)
!8921 = distinct !{!8921, !8918, !8922}
!8922 = !DILocation(line: 417, column: 3, scope: !8917)
!8923 = !DILocation(line: 421, column: 2, scope: !8911)
!8924 = !DILocation(line: 422, column: 2, scope: !8911)
!8925 = !DILocation(line: 422, column: 9, scope: !8911)
!8926 = !DILocation(line: 422, column: 34, scope: !8911)
!8927 = distinct !{!8927, !8924, !8928}
!8928 = !DILocation(line: 423, column: 2, scope: !8911)
!8929 = !DILocation(line: 424, column: 1, scope: !8911)
!8930 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8839, file: !8839, line: 4195, type: !3232, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8931 = !DILocation(line: 4197, column: 3, scope: !8930)
!8932 = !DILocation(line: 4198, column: 1, scope: !8930)
!8933 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8839, file: !8839, line: 4184, type: !3232, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8934 = !DILocation(line: 4186, column: 3, scope: !8933)
!8935 = !DILocation(line: 4187, column: 1, scope: !8933)
!8936 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8839, file: !8839, line: 4205, type: !6890, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8937 = !DILocation(line: 4207, column: 11, scope: !8936)
!8938 = !DILocation(line: 4207, column: 44, scope: !8936)
!8939 = !DILocation(line: 4207, column: 3, scope: !8936)
!8940 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8839, file: !8839, line: 3007, type: !6890, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8941 = !DILocation(line: 3009, column: 11, scope: !8940)
!8942 = !DILocation(line: 3009, column: 44, scope: !8940)
!8943 = !DILocation(line: 3009, column: 3, scope: !8940)
!8944 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8839, file: !8839, line: 2987, type: !3232, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8945 = !DILocation(line: 2989, column: 3, scope: !8944)
!8946 = !DILocation(line: 2990, column: 1, scope: !8944)
!8947 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8839, file: !8839, line: 3143, type: !3232, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8948 = !DILocation(line: 3145, column: 3, scope: !8947)
!8949 = !DILocation(line: 3146, column: 1, scope: !8947)
!8950 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8839, file: !8839, line: 3163, type: !6890, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !777, retainedNodes: !473)
!8951 = !DILocation(line: 3165, column: 11, scope: !8950)
!8952 = !DILocation(line: 3165, column: 46, scope: !8950)
!8953 = !DILocation(line: 3165, column: 3, scope: !8950)
!8954 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8955, file: !8955, line: 40, type: !6890, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !473)
!8955 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8956 = !DILocation(line: 43, column: 3, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8958, file: !8955, line: 42, column: 37)
!8958 = distinct !DILexicalBlock(scope: !8954, file: !8955, line: 42, column: 6)
!8959 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8955, file: !8955, line: 56, type: !3232, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !473)
!8960 = !DILocation(line: 58, column: 2, scope: !8959)
!8961 = !DILocation(line: 62, column: 1, scope: !8959)
!8962 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8839, file: !8839, line: 4304, type: !8963, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !8965)
!8963 = !DISubroutineType(types: !8964)
!8964 = !{null, !132, !132, !132, !132}
!8965 = !{!8966, !8967, !8968, !8969}
!8966 = !DILocalVariable(name: "Source", arg: 1, scope: !8962, file: !8839, line: 4304, type: !132)
!8967 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8962, file: !8839, line: 4304, type: !132)
!8968 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8962, file: !8839, line: 4304, type: !132)
!8969 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8962, file: !8839, line: 4304, type: !132)
!8970 = !DILocation(line: 0, scope: !8962)
!8971 = !DILocation(line: 4306, column: 3, scope: !8962)
!8972 = !DILocation(line: 4308, column: 3, scope: !8962)
!8973 = !DILocation(line: 4312, column: 1, scope: !8962)
!8974 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8955, file: !8955, line: 69, type: !3232, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !473)
!8975 = !DILocation(line: 72, column: 2, scope: !8974)
!8976 = !DILocation(line: 73, column: 1, scope: !8974)
!8977 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8978, file: !8978, line: 1185, type: !6900, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !8979)
!8978 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8979 = !{!8980, !8981}
!8980 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8977, file: !8978, line: 1185, type: !132)
!8981 = !DILocalVariable(name: "tmpreg", scope: !8977, file: !8978, line: 1187, type: !131)
!8982 = !DILocation(line: 0, scope: !8977)
!8983 = !DILocation(line: 1187, column: 3, scope: !8977)
!8984 = !DILocation(line: 1187, column: 17, scope: !8977)
!8985 = !DILocation(line: 1188, column: 3, scope: !8977)
!8986 = !DILocation(line: 1190, column: 12, scope: !8977)
!8987 = !DILocation(line: 1190, column: 10, scope: !8977)
!8988 = !DILocation(line: 1191, column: 9, scope: !8977)
!8989 = !DILocation(line: 1192, column: 1, scope: !8977)
!8990 = distinct !DISubprogram(name: "uart_console_init", scope: !919, file: !919, line: 588, type: !956, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !8991)
!8991 = !{!8992}
!8992 = !DILocalVariable(name: "arg", arg: 1, scope: !8990, file: !919, line: 588, type: !935)
!8993 = !DILocation(line: 0, scope: !8990)
!8994 = !DILocation(line: 593, column: 7, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8990, file: !919, line: 593, column: 6)
!8996 = !DILocation(line: 593, column: 6, scope: !8990)
!8997 = !DILocation(line: 597, column: 2, scope: !8990)
!8998 = !DILocation(line: 599, column: 2, scope: !8990)
!8999 = !DILocation(line: 600, column: 1, scope: !8990)
!9000 = distinct !DISubprogram(name: "device_is_ready", scope: !6650, file: !6650, line: 47, type: !9001, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9003)
!9001 = !DISubroutineType(types: !9002)
!9002 = !{!166, !935}
!9003 = !{!9004}
!9004 = !DILocalVariable(name: "dev", arg: 1, scope: !9000, file: !6650, line: 47, type: !935)
!9005 = !DILocation(line: 0, scope: !9000)
!9006 = !DILocation(line: 55, column: 2, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9000, file: !6650, line: 55, column: 2)
!9008 = !{i64 2154266264}
!9009 = !DILocation(line: 56, column: 9, scope: !9000)
!9010 = !DILocation(line: 56, column: 2, scope: !9000)
!9011 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !919, file: !919, line: 573, type: !3232, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !473)
!9012 = !DILocation(line: 576, column: 2, scope: !9011)
!9013 = !DILocation(line: 579, column: 2, scope: !9011)
!9014 = !DILocation(line: 581, column: 1, scope: !9011)
!9015 = distinct !DISubprogram(name: "console_out", scope: !919, file: !919, line: 77, type: !118, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9016)
!9016 = !{!9017, !9018}
!9017 = !DILocalVariable(name: "c", arg: 1, scope: !9015, file: !919, line: 77, type: !103)
!9018 = !DILocalVariable(name: "handled_by_debug_server", scope: !9015, file: !919, line: 81, type: !103)
!9019 = !DILocation(line: 0, scope: !9015)
!9020 = !DILocation(line: 81, column: 32, scope: !9015)
!9021 = !DILocation(line: 83, column: 6, scope: !9015)
!9022 = !DILocation(line: 89, column: 11, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9015, file: !919, line: 89, column: 6)
!9024 = !DILocation(line: 89, column: 6, scope: !9015)
!9025 = !DILocation(line: 90, column: 3, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9023, file: !919, line: 89, column: 17)
!9027 = !DILocation(line: 91, column: 2, scope: !9026)
!9028 = !DILocation(line: 92, column: 2, scope: !9015)
!9029 = !DILocation(line: 94, column: 2, scope: !9015)
!9030 = !DILocation(line: 95, column: 1, scope: !9015)
!9031 = distinct !DISubprogram(name: "uart_poll_out", scope: !5911, file: !5911, line: 95, type: !952, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9032)
!9032 = !{!9033, !9034}
!9033 = !DILocalVariable(name: "dev", arg: 1, scope: !9031, file: !5911, line: 95, type: !935)
!9034 = !DILocalVariable(name: "out_char", arg: 2, scope: !9031, file: !5911, line: 95, type: !164)
!9035 = !DILocation(line: 0, scope: !9031)
!9036 = !DILocation(line: 105, column: 2, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9031, file: !5911, line: 105, column: 2)
!9038 = !{i64 2154349509}
!9039 = !DILocation(line: 106, column: 2, scope: !9031)
!9040 = !DILocation(line: 107, column: 1, scope: !9031)
!9041 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !212, file: !212, line: 574, type: !952, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9042)
!9042 = !{!9043, !9044, !9045}
!9043 = !DILocalVariable(name: "dev", arg: 1, scope: !9041, file: !212, line: 574, type: !935)
!9044 = !DILocalVariable(name: "out_char", arg: 2, scope: !9041, file: !212, line: 575, type: !164)
!9045 = !DILocalVariable(name: "api", scope: !9041, file: !212, line: 577, type: !927)
!9046 = !DILocation(line: 0, scope: !9041)
!9047 = !DILocation(line: 578, column: 40, scope: !9041)
!9048 = !DILocation(line: 580, column: 7, scope: !9041)
!9049 = !DILocation(line: 580, column: 2, scope: !9041)
!9050 = !DILocation(line: 581, column: 1, scope: !9041)
!9051 = distinct !DISubprogram(name: "debug_hook_out_nop", scope: !919, file: !919, line: 49, type: !1069, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9052)
!9052 = !{!9053}
!9053 = !DILocalVariable(name: "c", arg: 1, scope: !9051, file: !919, line: 49, type: !108)
!9054 = !DILocation(line: 0, scope: !9051)
!9055 = !DILocation(line: 51, column: 2, scope: !9051)
!9056 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !9001, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9057)
!9057 = !{!9058}
!9058 = !DILocalVariable(name: "dev", arg: 1, scope: !9056, file: !152, line: 730, type: !935)
!9059 = !DILocation(line: 0, scope: !9056)
!9060 = !DILocation(line: 732, column: 9, scope: !9056)
!9061 = !DILocation(line: 732, column: 2, scope: !9056)
!9062 = distinct !DISubprogram(name: "uart_console_in_debug_hook_install", scope: !919, file: !919, line: 44, type: !9063, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9065)
!9063 = !DISubroutineType(types: !9064)
!9064 = !{null, !1111}
!9065 = !{!9066}
!9066 = !DILocalVariable(name: "hook", arg: 1, scope: !9062, file: !919, line: 44, type: !1111)
!9067 = !DILocation(line: 0, scope: !9062)
!9068 = !DILocation(line: 46, column: 16, scope: !9062)
!9069 = !DILocation(line: 47, column: 1, scope: !9062)
!9070 = distinct !DISubprogram(name: "uart_console_out_debug_hook_install", scope: !919, file: !919, line: 55, type: !9071, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9073)
!9071 = !DISubroutineType(types: !9072)
!9072 = !{null, !1066}
!9073 = !{!9074}
!9074 = !DILocalVariable(name: "hook", arg: 1, scope: !9070, file: !919, line: 55, type: !1066)
!9075 = !DILocation(line: 0, scope: !9070)
!9076 = !DILocation(line: 57, column: 17, scope: !9070)
!9077 = !DILocation(line: 58, column: 1, scope: !9070)
!9078 = distinct !DISubprogram(name: "uart_register_input", scope: !919, file: !919, line: 549, type: !9079, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9081)
!9079 = !DISubroutineType(types: !9080)
!9080 = !{null, !1016, !1016, !1060}
!9081 = !{!9082, !9083, !9084}
!9082 = !DILocalVariable(name: "avail", arg: 1, scope: !9078, file: !919, line: 549, type: !1016)
!9083 = !DILocalVariable(name: "lines", arg: 2, scope: !9078, file: !919, line: 549, type: !1016)
!9084 = !DILocalVariable(name: "completion", arg: 3, scope: !9078, file: !919, line: 550, type: !1060)
!9085 = !DILocation(line: 0, scope: !9078)
!9086 = !DILocation(line: 552, column: 14, scope: !9078)
!9087 = !DILocation(line: 553, column: 14, scope: !9078)
!9088 = !DILocation(line: 554, column: 16, scope: !9078)
!9089 = !DILocation(line: 556, column: 2, scope: !9078)
!9090 = !DILocation(line: 557, column: 1, scope: !9078)
!9091 = distinct !DISubprogram(name: "console_input_init", scope: !919, file: !919, line: 532, type: !3232, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9092)
!9092 = !{!9093}
!9093 = !DILocalVariable(name: "c", scope: !9091, file: !919, line: 534, type: !163)
!9094 = !DILocation(line: 534, column: 2, scope: !9091)
!9095 = !DILocation(line: 536, column: 2, scope: !9091)
!9096 = !DILocation(line: 537, column: 2, scope: !9091)
!9097 = !DILocation(line: 539, column: 2, scope: !9091)
!9098 = !DILocation(line: 542, column: 9, scope: !9091)
!9099 = !DILocation(line: 542, column: 2, scope: !9091)
!9100 = !DILocation(line: 0, scope: !9091)
!9101 = !DILocation(line: 543, column: 3, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9091, file: !919, line: 542, column: 46)
!9103 = distinct !{!9103, !9099, !9104}
!9104 = !DILocation(line: 544, column: 2, scope: !9091)
!9105 = !DILocation(line: 546, column: 2, scope: !9091)
!9106 = !DILocation(line: 547, column: 1, scope: !9091)
!9107 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5911, file: !5911, line: 265, type: !986, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9108)
!9108 = !{!9109}
!9109 = !DILocalVariable(name: "dev", arg: 1, scope: !9107, file: !5911, line: 265, type: !935)
!9110 = !DILocation(line: 0, scope: !9107)
!9111 = !DILocation(line: 274, column: 2, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9107, file: !5911, line: 274, column: 2)
!9113 = !{i64 2154349985}
!9114 = !DILocation(line: 275, column: 2, scope: !9107)
!9115 = !DILocation(line: 276, column: 1, scope: !9107)
!9116 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5911, file: !5911, line: 217, type: !986, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9117)
!9117 = !{!9118}
!9118 = !DILocalVariable(name: "dev", arg: 1, scope: !9116, file: !5911, line: 217, type: !935)
!9119 = !DILocation(line: 0, scope: !9116)
!9120 = !DILocation(line: 226, column: 2, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9116, file: !5911, line: 226, column: 2)
!9122 = !{i64 2154349849}
!9123 = !DILocation(line: 227, column: 2, scope: !9116)
!9124 = !DILocation(line: 228, column: 1, scope: !9116)
!9125 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !212, file: !212, line: 1190, type: !9126, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9128)
!9126 = !DISubroutineType(types: !9127)
!9127 = !{null, !935, !1002}
!9128 = !{!9129, !9130}
!9129 = !DILocalVariable(name: "dev", arg: 1, scope: !9125, file: !212, line: 1190, type: !935)
!9130 = !DILocalVariable(name: "cb", arg: 2, scope: !9125, file: !212, line: 1191, type: !1002)
!9131 = !DILocation(line: 0, scope: !9125)
!9132 = !DILocation(line: 1193, column: 2, scope: !9125)
!9133 = !DILocation(line: 1194, column: 1, scope: !9125)
!9134 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !212, file: !212, line: 1024, type: !956, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9135)
!9135 = !{!9136, !9137}
!9136 = !DILocalVariable(name: "dev", arg: 1, scope: !9134, file: !212, line: 1024, type: !935)
!9137 = !DILocalVariable(name: "api", scope: !9134, file: !212, line: 1027, type: !927)
!9138 = !DILocation(line: 0, scope: !9134)
!9139 = !DILocation(line: 1028, column: 40, scope: !9134)
!9140 = !DILocation(line: 1030, column: 11, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9134, file: !212, line: 1030, column: 6)
!9142 = !DILocation(line: 1030, column: 24, scope: !9141)
!9143 = !DILocation(line: 1030, column: 6, scope: !9134)
!9144 = !DILocation(line: 1033, column: 9, scope: !9134)
!9145 = !DILocation(line: 1033, column: 2, scope: !9134)
!9146 = !DILocation(line: 1038, column: 1, scope: !9134)
!9147 = distinct !DISubprogram(name: "uart_fifo_read", scope: !212, file: !212, line: 785, type: !982, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9148)
!9148 = !{!9149, !9150, !9151, !9152}
!9149 = !DILocalVariable(name: "dev", arg: 1, scope: !9147, file: !212, line: 785, type: !935)
!9150 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9147, file: !212, line: 785, type: !270)
!9151 = !DILocalVariable(name: "size", arg: 3, scope: !9147, file: !212, line: 786, type: !271)
!9152 = !DILocalVariable(name: "api", scope: !9147, file: !212, line: 789, type: !927)
!9153 = !DILocation(line: 0, scope: !9147)
!9154 = !DILocation(line: 790, column: 40, scope: !9147)
!9155 = !DILocation(line: 792, column: 11, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9147, file: !212, line: 792, column: 6)
!9157 = !DILocation(line: 792, column: 21, scope: !9156)
!9158 = !DILocation(line: 792, column: 6, scope: !9147)
!9159 = !DILocation(line: 796, column: 9, scope: !9147)
!9160 = !DILocation(line: 796, column: 2, scope: !9147)
!9161 = !DILocation(line: 803, column: 1, scope: !9147)
!9162 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5911, file: !5911, line: 241, type: !986, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9163)
!9163 = !{!9164}
!9164 = !DILocalVariable(name: "dev", arg: 1, scope: !9162, file: !5911, line: 241, type: !935)
!9165 = !DILocation(line: 0, scope: !9162)
!9166 = !DILocation(line: 250, column: 2, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9162, file: !5911, line: 250, column: 2)
!9168 = !{i64 2154349917}
!9169 = !DILocation(line: 251, column: 2, scope: !9162)
!9170 = !DILocation(line: 252, column: 1, scope: !9162)
!9171 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !212, file: !212, line: 934, type: !986, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9172)
!9172 = !{!9173, !9174}
!9173 = !DILocalVariable(name: "dev", arg: 1, scope: !9171, file: !212, line: 934, type: !935)
!9174 = !DILocalVariable(name: "api", scope: !9171, file: !212, line: 937, type: !927)
!9175 = !DILocation(line: 0, scope: !9171)
!9176 = !DILocation(line: 938, column: 40, scope: !9171)
!9177 = !DILocation(line: 940, column: 11, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9171, file: !212, line: 940, column: 6)
!9179 = !DILocation(line: 940, column: 25, scope: !9178)
!9180 = !DILocation(line: 940, column: 6, scope: !9171)
!9181 = !DILocation(line: 941, column: 3, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9178, file: !212, line: 940, column: 34)
!9183 = !DILocation(line: 942, column: 2, scope: !9182)
!9184 = !DILocation(line: 946, column: 1, scope: !9171)
!9185 = !DILocation(line: 0, scope: !1076)
!9186 = !DILocation(line: 433, column: 9, scope: !1076)
!9187 = !DILocation(line: 433, column: 43, scope: !1076)
!9188 = !DILocation(line: 434, column: 9, scope: !1076)
!9189 = !DILocation(line: 433, column: 2, scope: !1076)
!9190 = !DILocation(line: 436, column: 3, scope: !1081)
!9191 = !DILocation(line: 439, column: 8, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !1081, file: !919, line: 439, column: 7)
!9193 = !DILocation(line: 439, column: 7, scope: !1081)
!9194 = distinct !{!9194, !9189, !9195}
!9195 = !DILocation(line: 529, column: 2, scope: !1076)
!9196 = !DILocation(line: 0, scope: !1081)
!9197 = !DILocation(line: 445, column: 8, scope: !1081)
!9198 = !DILocation(line: 446, column: 10, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !1081, file: !919, line: 446, column: 7)
!9200 = !DILocation(line: 446, column: 7, scope: !1081)
!9201 = !DILocation(line: 451, column: 7, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !1081, file: !919, line: 451, column: 7)
!9203 = !DILocation(line: 451, column: 21, scope: !9202)
!9204 = !DILocation(line: 451, column: 29, scope: !9202)
!9205 = !DILocation(line: 451, column: 46, scope: !9202)
!9206 = !DILocation(line: 451, column: 32, scope: !9202)
!9207 = !DILocation(line: 451, column: 52, scope: !9202)
!9208 = !DILocation(line: 451, column: 7, scope: !1081)
!9209 = !DILocation(line: 460, column: 8, scope: !1086)
!9210 = !DILocation(line: 460, column: 7, scope: !1081)
!9211 = !DILocation(line: 461, column: 10, scope: !1084)
!9212 = !DILocation(line: 0, scope: !1084)
!9213 = !DILocation(line: 461, column: 8, scope: !1085)
!9214 = !DILocation(line: 462, column: 9, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !1085, file: !919, line: 462, column: 8)
!9216 = !DILocation(line: 462, column: 8, scope: !1085)
!9217 = !DILocation(line: 477, column: 7, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !1081, file: !919, line: 477, column: 7)
!9219 = !DILocation(line: 477, column: 7, scope: !1081)
!9220 = !DILocation(line: 478, column: 16, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9218, file: !919, line: 477, column: 46)
!9222 = !DILocation(line: 478, column: 22, scope: !9221)
!9223 = !DILocation(line: 478, column: 4, scope: !9221)
!9224 = !DILocation(line: 479, column: 4, scope: !9221)
!9225 = !DILocation(line: 483, column: 7, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !1081, file: !919, line: 483, column: 7)
!9227 = !DILocation(line: 483, column: 7, scope: !1081)
!9228 = !DILocation(line: 484, column: 13, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9230, file: !919, line: 484, column: 8)
!9230 = distinct !DILexicalBlock(scope: !9226, file: !919, line: 483, column: 55)
!9231 = !DILocation(line: 484, column: 8, scope: !9230)
!9232 = !DILocation(line: 485, column: 5, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9229, file: !919, line: 484, column: 26)
!9234 = !DILocation(line: 486, column: 5, scope: !9233)
!9235 = !DILocation(line: 487, column: 4, scope: !9233)
!9236 = !DILocation(line: 493, column: 16, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !1081, file: !919, line: 493, column: 7)
!9238 = !DILocation(line: 493, column: 8, scope: !9237)
!9239 = !DILocation(line: 493, column: 7, scope: !1081)
!9240 = !DILocation(line: 494, column: 4, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9237, file: !919, line: 493, column: 23)
!9242 = !DILocation(line: 497, column: 9, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !919, line: 497, column: 9)
!9244 = distinct !DILexicalBlock(scope: !9241, file: !919, line: 494, column: 18)
!9245 = !DILocation(line: 497, column: 13, scope: !9243)
!9246 = !DILocation(line: 497, column: 9, scope: !9244)
!9247 = !DILocation(line: 498, column: 16, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9243, file: !919, line: 497, column: 18)
!9249 = !DILocation(line: 498, column: 26, scope: !9248)
!9250 = !DILocation(line: 498, column: 34, scope: !9248)
!9251 = !DILocation(line: 498, column: 6, scope: !9248)
!9252 = !DILocation(line: 499, column: 5, scope: !9248)
!9253 = !DILocation(line: 502, column: 5, scope: !9244)
!9254 = !DILocation(line: 503, column: 5, scope: !9244)
!9255 = !DILocation(line: 505, column: 5, scope: !9244)
!9256 = !DILocation(line: 505, column: 15, scope: !9244)
!9257 = !DILocation(line: 505, column: 21, scope: !9244)
!9258 = !DILocation(line: 505, column: 19, scope: !9244)
!9259 = !DILocation(line: 505, column: 26, scope: !9244)
!9260 = !DILocation(line: 506, column: 5, scope: !9244)
!9261 = !DILocation(line: 507, column: 5, scope: !9244)
!9262 = !DILocation(line: 508, column: 9, scope: !9244)
!9263 = !DILocation(line: 509, column: 9, scope: !9244)
!9264 = !DILocation(line: 510, column: 5, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9244, file: !919, line: 510, column: 5)
!9266 = !DILocation(line: 511, column: 9, scope: !9244)
!9267 = !DILocation(line: 512, column: 5, scope: !9244)
!9268 = !DILocation(line: 514, column: 9, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9244, file: !919, line: 514, column: 9)
!9270 = !DILocation(line: 514, column: 23, scope: !9269)
!9271 = !DILocation(line: 515, column: 27, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9269, file: !919, line: 514, column: 32)
!9273 = !DILocation(line: 515, column: 38, scope: !9272)
!9274 = !DILocation(line: 515, column: 13, scope: !9272)
!9275 = !DILocation(line: 515, column: 10, scope: !9272)
!9276 = !DILocation(line: 516, column: 5, scope: !9272)
!9277 = !DILocation(line: 526, column: 7, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !1081, file: !919, line: 526, column: 7)
!9279 = !DILocation(line: 526, column: 13, scope: !9278)
!9280 = !DILocation(line: 526, column: 11, scope: !9278)
!9281 = !DILocation(line: 526, column: 17, scope: !9278)
!9282 = !DILocation(line: 526, column: 7, scope: !1081)
!9283 = !DILocation(line: 527, column: 17, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9278, file: !919, line: 526, column: 42)
!9285 = !DILocation(line: 527, column: 30, scope: !9284)
!9286 = !DILocation(line: 527, column: 4, scope: !9284)
!9287 = !DILocation(line: 528, column: 3, scope: !9284)
!9288 = !DILocation(line: 530, column: 1, scope: !1076)
!9289 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !212, file: !212, line: 1163, type: !1000, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9290)
!9290 = !{!9291, !9292, !9293, !9294}
!9291 = !DILocalVariable(name: "dev", arg: 1, scope: !9289, file: !212, line: 1163, type: !935)
!9292 = !DILocalVariable(name: "cb", arg: 2, scope: !9289, file: !212, line: 1164, type: !1002)
!9293 = !DILocalVariable(name: "user_data", arg: 3, scope: !9289, file: !212, line: 1165, type: !102)
!9294 = !DILocalVariable(name: "api", scope: !9289, file: !212, line: 1168, type: !927)
!9295 = !DILocation(line: 0, scope: !9289)
!9296 = !DILocation(line: 1169, column: 40, scope: !9289)
!9297 = !DILocation(line: 1171, column: 11, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9289, file: !212, line: 1171, column: 6)
!9299 = !DILocation(line: 1171, column: 20, scope: !9298)
!9300 = !DILocation(line: 1171, column: 29, scope: !9298)
!9301 = !DILocation(line: 1171, column: 46, scope: !9298)
!9302 = !DILocation(line: 1171, column: 6, scope: !9289)
!9303 = !DILocation(line: 1172, column: 3, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9298, file: !212, line: 1171, column: 56)
!9305 = !DILocation(line: 1173, column: 2, scope: !9304)
!9306 = !DILocation(line: 1179, column: 1, scope: !9289)
!9307 = distinct !DISubprogram(name: "uart_irq_update", scope: !5911, file: !5911, line: 360, type: !956, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9308)
!9308 = !{!9309}
!9309 = !DILocalVariable(name: "dev", arg: 1, scope: !9307, file: !5911, line: 360, type: !935)
!9310 = !DILocation(line: 0, scope: !9307)
!9311 = !DILocation(line: 368, column: 2, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9307, file: !5911, line: 368, column: 2)
!9313 = !{i64 2154350257}
!9314 = !DILocation(line: 369, column: 9, scope: !9307)
!9315 = !DILocation(line: 369, column: 2, scope: !9307)
!9316 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !5911, file: !5911, line: 337, type: !956, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9317)
!9317 = !{!9318}
!9318 = !DILocalVariable(name: "dev", arg: 1, scope: !9316, file: !5911, line: 337, type: !935)
!9319 = !DILocation(line: 0, scope: !9316)
!9320 = !DILocation(line: 345, column: 2, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9316, file: !5911, line: 345, column: 2)
!9322 = !{i64 2154350189}
!9323 = !DILocation(line: 346, column: 9, scope: !9316)
!9324 = !DILocation(line: 346, column: 2, scope: !9316)
!9325 = distinct !DISubprogram(name: "read_uart", scope: !919, file: !919, line: 127, type: !9326, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9328)
!9326 = !DISubroutineType(types: !9327)
!9327 = !{!103, !935, !270, !32}
!9328 = !{!9329, !9330, !9331, !9332}
!9329 = !DILocalVariable(name: "uart", arg: 1, scope: !9325, file: !919, line: 127, type: !935)
!9330 = !DILocalVariable(name: "buf", arg: 2, scope: !9325, file: !919, line: 127, type: !270)
!9331 = !DILocalVariable(name: "size", arg: 3, scope: !9325, file: !919, line: 128, type: !32)
!9332 = !DILocalVariable(name: "rx", scope: !9325, file: !919, line: 130, type: !103)
!9333 = !DILocation(line: 0, scope: !9325)
!9334 = !DILocation(line: 132, column: 7, scope: !9325)
!9335 = !DILocation(line: 133, column: 9, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9325, file: !919, line: 133, column: 6)
!9337 = !DILocation(line: 133, column: 6, scope: !9325)
!9338 = !DILocation(line: 135, column: 3, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9336, file: !919, line: 133, column: 14)
!9340 = !DILocation(line: 137, column: 3, scope: !9339)
!9341 = !DILocation(line: 141, column: 1, scope: !9325)
!9342 = distinct !DISubprogram(name: "k_queue_get", scope: !3672, file: !3672, line: 649, type: !9343, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9350)
!9343 = !DISubroutineType(types: !9344)
!9344 = !{!102, !9345, !9346}
!9345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!9346 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1689, line: 67, baseType: !9347)
!9347 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1689, line: 65, size: 64, elements: !9348)
!9348 = !{!9349}
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9347, file: !1689, line: 66, baseType: !1688, size: 64)
!9350 = !{!9351, !9352}
!9351 = !DILocalVariable(name: "queue", arg: 1, scope: !9342, file: !3672, line: 649, type: !9345)
!9352 = !DILocalVariable(name: "timeout", arg: 2, scope: !9342, file: !3672, line: 649, type: !9346)
!9353 = !DILocation(line: 0, scope: !9342)
!9354 = !DILocation(line: 658, column: 2, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9342, file: !3672, line: 658, column: 2)
!9356 = !{i64 2154074635}
!9357 = !DILocation(line: 659, column: 9, scope: !9342)
!9358 = !DILocation(line: 659, column: 2, scope: !9342)
!9359 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1102, file: !1102, line: 131, type: !9360, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9364)
!9360 = !DISubroutineType(types: !9361)
!9361 = !{!166, !9362, !103}
!9362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9363, size: 32)
!9363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!9364 = !{!9365, !9366, !9367}
!9365 = !DILocalVariable(name: "target", arg: 1, scope: !9359, file: !1102, line: 131, type: !9362)
!9366 = !DILocalVariable(name: "bit", arg: 2, scope: !9359, file: !1102, line: 131, type: !103)
!9367 = !DILocalVariable(name: "val", scope: !9359, file: !1102, line: 133, type: !9368)
!9368 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1102, line: 23, baseType: !1101)
!9369 = !DILocation(line: 0, scope: !9359)
!9370 = !DILocation(line: 133, column: 21, scope: !9359)
!9371 = !DILocation(line: 135, column: 27, scope: !9359)
!9372 = !DILocation(line: 135, column: 50, scope: !9359)
!9373 = !DILocation(line: 135, column: 2, scope: !9359)
!9374 = distinct !DISubprogram(name: "handle_ansi", scope: !919, file: !919, line: 232, type: !9375, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9377)
!9375 = !DISubroutineType(types: !9376)
!9376 = !{null, !163, !1063}
!9377 = !{!9378, !9379, !9380}
!9378 = !DILocalVariable(name: "byte", arg: 1, scope: !9374, file: !919, line: 232, type: !163)
!9379 = !DILocalVariable(name: "line", arg: 2, scope: !9374, file: !919, line: 232, type: !1063)
!9380 = !DILabel(scope: !9374, name: "ansi_cmd", file: !919, line: 268)
!9381 = !DILocation(line: 0, scope: !9374)
!9382 = !DILocation(line: 234, column: 6, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9374, file: !919, line: 234, column: 6)
!9384 = !DILocation(line: 234, column: 6, scope: !9374)
!9385 = !DILocation(line: 235, column: 16, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9387, file: !919, line: 235, column: 7)
!9387 = distinct !DILexicalBlock(scope: !9383, file: !919, line: 234, column: 61)
!9388 = !DILocation(line: 235, column: 8, scope: !9386)
!9389 = !DILocation(line: 235, column: 7, scope: !9387)
!9390 = !DILocation(line: 236, column: 13, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9386, file: !919, line: 235, column: 23)
!9392 = !DILocation(line: 237, column: 4, scope: !9391)
!9393 = !DILocation(line: 240, column: 3, scope: !9387)
!9394 = !DILocation(line: 241, column: 19, scope: !9387)
!9395 = !DILocation(line: 241, column: 12, scope: !9387)
!9396 = !DILocation(line: 242, column: 14, scope: !9387)
!9397 = !DILocation(line: 243, column: 3, scope: !9387)
!9398 = !DILocation(line: 246, column: 6, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9374, file: !919, line: 246, column: 6)
!9400 = !DILocation(line: 246, column: 6, scope: !9374)
!9401 = !DILocation(line: 247, column: 15, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9403, file: !919, line: 247, column: 7)
!9403 = distinct !DILexicalBlock(scope: !9399, file: !919, line: 246, column: 49)
!9404 = !DILocation(line: 247, column: 7, scope: !9402)
!9405 = !DILocation(line: 247, column: 7, scope: !9403)
!9406 = !DILocation(line: 248, column: 8, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9408, file: !919, line: 248, column: 8)
!9408 = distinct !DILexicalBlock(scope: !9402, file: !919, line: 247, column: 22)
!9409 = !DILocation(line: 248, column: 8, scope: !9408)
!9410 = !DILocation(line: 249, column: 16, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9407, file: !919, line: 248, column: 53)
!9412 = !DILocation(line: 250, column: 24, scope: !9411)
!9413 = !DILocation(line: 250, column: 16, scope: !9411)
!9414 = !DILocation(line: 251, column: 4, scope: !9411)
!9415 = !DILocation(line: 252, column: 14, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9407, file: !919, line: 251, column: 11)
!9417 = !DILocation(line: 253, column: 22, scope: !9416)
!9418 = !DILocation(line: 253, column: 14, scope: !9416)
!9419 = !DILocation(line: 259, column: 12, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9403, file: !919, line: 259, column: 7)
!9421 = !DILocation(line: 259, column: 19, scope: !9420)
!9422 = !DILocation(line: 260, column: 8, scope: !9420)
!9423 = !DILocation(line: 259, column: 7, scope: !9403)
!9424 = !DILocation(line: 264, column: 3, scope: !9403)
!9425 = !DILocation(line: 265, column: 3, scope: !9403)
!9426 = !DILocation(line: 266, column: 2, scope: !9403)
!9427 = !DILocation(line: 268, column: 1, scope: !9374)
!9428 = !DILocation(line: 269, column: 2, scope: !9374)
!9429 = !DILocation(line: 271, column: 7, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9431, file: !919, line: 271, column: 7)
!9431 = distinct !DILexicalBlock(scope: !9374, file: !919, line: 269, column: 16)
!9432 = !DILocation(line: 271, column: 18, scope: !9430)
!9433 = !DILocation(line: 271, column: 16, scope: !9430)
!9434 = !DILocation(line: 271, column: 7, scope: !9431)
!9435 = !DILocation(line: 275, column: 7, scope: !9431)
!9436 = !DILocation(line: 276, column: 7, scope: !9431)
!9437 = !DILocation(line: 277, column: 3, scope: !9431)
!9438 = !DILocation(line: 278, column: 3, scope: !9431)
!9439 = !DILocation(line: 280, column: 7, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9431, file: !919, line: 280, column: 7)
!9441 = !DILocation(line: 280, column: 18, scope: !9440)
!9442 = !DILocation(line: 280, column: 16, scope: !9440)
!9443 = !DILocation(line: 280, column: 7, scope: !9431)
!9444 = !DILocation(line: 284, column: 7, scope: !9431)
!9445 = !DILocation(line: 285, column: 7, scope: !9431)
!9446 = !DILocation(line: 286, column: 3, scope: !9431)
!9447 = !DILocation(line: 287, column: 3, scope: !9431)
!9448 = !DILocation(line: 289, column: 8, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9431, file: !919, line: 289, column: 7)
!9450 = !DILocation(line: 289, column: 7, scope: !9431)
!9451 = !DILocation(line: 293, column: 19, scope: !9431)
!9452 = !DILocation(line: 293, column: 3, scope: !9431)
!9453 = !DILocation(line: 294, column: 10, scope: !9431)
!9454 = !DILocation(line: 294, column: 7, scope: !9431)
!9455 = !DILocation(line: 295, column: 7, scope: !9431)
!9456 = !DILocation(line: 296, column: 3, scope: !9431)
!9457 = !DILocation(line: 298, column: 8, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9431, file: !919, line: 298, column: 7)
!9459 = !DILocation(line: 298, column: 7, scope: !9431)
!9460 = !DILocation(line: 302, column: 18, scope: !9431)
!9461 = !DILocation(line: 302, column: 3, scope: !9431)
!9462 = !DILocation(line: 303, column: 10, scope: !9431)
!9463 = !DILocation(line: 303, column: 7, scope: !9431)
!9464 = !DILocation(line: 304, column: 7, scope: !9431)
!9465 = !DILocation(line: 305, column: 3, scope: !9431)
!9466 = !DILocation(line: 307, column: 8, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9431, file: !919, line: 307, column: 7)
!9468 = !DILocation(line: 307, column: 7, scope: !9431)
!9469 = !DILocation(line: 311, column: 3, scope: !9431)
!9470 = !DILocation(line: 312, column: 18, scope: !9431)
!9471 = !DILocation(line: 312, column: 13, scope: !9431)
!9472 = !DILocation(line: 312, column: 24, scope: !9431)
!9473 = !DILocation(line: 312, column: 3, scope: !9431)
!9474 = !DILocation(line: 313, column: 3, scope: !9431)
!9475 = !DILocation(line: 318, column: 2, scope: !9374)
!9476 = !DILocation(line: 319, column: 1, scope: !9374)
!9477 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1102, file: !1102, line: 152, type: !9478, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9481)
!9478 = !DISubroutineType(types: !9479)
!9479 = !{!166, !9480, !103}
!9480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!9481 = !{!9482, !9483, !9484, !9485}
!9482 = !DILocalVariable(name: "target", arg: 1, scope: !9477, file: !1102, line: 152, type: !9480)
!9483 = !DILocalVariable(name: "bit", arg: 2, scope: !9477, file: !1102, line: 152, type: !103)
!9484 = !DILocalVariable(name: "mask", scope: !9477, file: !1102, line: 154, type: !9368)
!9485 = !DILocalVariable(name: "old", scope: !9477, file: !1102, line: 155, type: !9368)
!9486 = !DILocation(line: 0, scope: !9477)
!9487 = !DILocation(line: 154, column: 22, scope: !9477)
!9488 = !DILocation(line: 157, column: 45, scope: !9477)
!9489 = !DILocation(line: 157, column: 8, scope: !9477)
!9490 = !DILocation(line: 159, column: 14, scope: !9477)
!9491 = !DILocation(line: 159, column: 22, scope: !9477)
!9492 = !DILocation(line: 159, column: 2, scope: !9477)
!9493 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1102, file: !1102, line: 217, type: !9494, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9496)
!9494 = !DISubroutineType(types: !9495)
!9495 = !{null, !9480, !103}
!9496 = !{!9497, !9498, !9499}
!9497 = !DILocalVariable(name: "target", arg: 1, scope: !9493, file: !1102, line: 217, type: !9480)
!9498 = !DILocalVariable(name: "bit", arg: 2, scope: !9493, file: !1102, line: 217, type: !103)
!9499 = !DILocalVariable(name: "mask", scope: !9493, file: !1102, line: 219, type: !9368)
!9500 = !DILocation(line: 0, scope: !9493)
!9501 = !DILocation(line: 219, column: 22, scope: !9493)
!9502 = !DILocation(line: 221, column: 8, scope: !9493)
!9503 = !DILocation(line: 222, column: 1, scope: !9493)
!9504 = distinct !DISubprogram(name: "isprint", scope: !4989, file: !4989, line: 37, type: !118, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9505)
!9505 = !{!9506}
!9506 = !DILocalVariable(name: "c", arg: 1, scope: !9504, file: !4989, line: 37, type: !103)
!9507 = !DILocation(line: 0, scope: !9504)
!9508 = !DILocation(line: 39, column: 38, scope: !9504)
!9509 = !DILocation(line: 39, column: 2, scope: !9504)
!9510 = distinct !DISubprogram(name: "del_char", scope: !919, file: !919, line: 191, type: !9511, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9513)
!9511 = !DISubroutineType(types: !9512)
!9512 = !{null, !1063, !163}
!9513 = !{!9514, !9515}
!9514 = !DILocalVariable(name: "pos", arg: 1, scope: !9510, file: !919, line: 191, type: !1063)
!9515 = !DILocalVariable(name: "end", arg: 2, scope: !9510, file: !919, line: 191, type: !163)
!9516 = !DILocation(line: 0, scope: !9510)
!9517 = !DILocation(line: 193, column: 2, scope: !9510)
!9518 = !DILocation(line: 195, column: 10, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9510, file: !919, line: 195, column: 6)
!9520 = !DILocation(line: 195, column: 6, scope: !9510)
!9521 = !DILocation(line: 196, column: 3, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9519, file: !919, line: 195, column: 17)
!9523 = !DILocation(line: 197, column: 3, scope: !9522)
!9524 = !DILocation(line: 198, column: 3, scope: !9522)
!9525 = !DILocation(line: 201, column: 2, scope: !9510)
!9526 = !DILocation(line: 203, column: 2, scope: !9510)
!9527 = !DILocation(line: 203, column: 12, scope: !9510)
!9528 = !DILocation(line: 204, column: 16, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9510, file: !919, line: 203, column: 20)
!9530 = !DILocation(line: 204, column: 10, scope: !9529)
!9531 = !DILocation(line: 204, column: 8, scope: !9529)
!9532 = !DILocation(line: 205, column: 3, scope: !9529)
!9533 = !DILocation(line: 203, column: 15, scope: !9510)
!9534 = distinct !{!9534, !9526, !9535}
!9535 = !DILocation(line: 206, column: 2, scope: !9510)
!9536 = !DILocation(line: 208, column: 2, scope: !9510)
!9537 = !DILocation(line: 211, column: 2, scope: !9510)
!9538 = !DILocation(line: 212, column: 1, scope: !9510)
!9539 = !DISubprogram(name: "k_queue_append", scope: !312, file: !312, line: 1775, type: !9540, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!9540 = !DISubroutineType(types: !9541)
!9541 = !{null, !9345, !102}
!9542 = distinct !DISubprogram(name: "insert_char", scope: !919, file: !919, line: 163, type: !9543, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9545)
!9543 = !DISubroutineType(types: !9544)
!9544 = !{null, !1063, !108, !163}
!9545 = !{!9546, !9547, !9548, !9549}
!9546 = !DILocalVariable(name: "pos", arg: 1, scope: !9542, file: !919, line: 163, type: !1063)
!9547 = !DILocalVariable(name: "c", arg: 2, scope: !9542, file: !919, line: 163, type: !108)
!9548 = !DILocalVariable(name: "end", arg: 3, scope: !9542, file: !919, line: 163, type: !163)
!9549 = !DILocalVariable(name: "tmp", scope: !9542, file: !919, line: 165, type: !108)
!9550 = !DILocation(line: 0, scope: !9542)
!9551 = !DILocation(line: 168, column: 2, scope: !9542)
!9552 = !DILocation(line: 170, column: 10, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9542, file: !919, line: 170, column: 6)
!9554 = !DILocation(line: 170, column: 6, scope: !9542)
!9555 = !DILocation(line: 171, column: 8, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9553, file: !919, line: 170, column: 17)
!9557 = !DILocation(line: 172, column: 3, scope: !9556)
!9558 = !DILocation(line: 175, column: 8, scope: !9542)
!9559 = !DILocation(line: 176, column: 11, scope: !9542)
!9560 = !DILocation(line: 178, column: 2, scope: !9542)
!9561 = !DILocation(line: 180, column: 2, scope: !9542)
!9562 = !DILocation(line: 180, column: 12, scope: !9542)
!9563 = !DILocation(line: 181, column: 3, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9542, file: !919, line: 180, column: 20)
!9565 = !DILocation(line: 182, column: 7, scope: !9564)
!9566 = !DILocation(line: 183, column: 12, scope: !9564)
!9567 = !DILocation(line: 180, column: 15, scope: !9542)
!9568 = distinct !{!9568, !9561, !9569}
!9569 = !DILocation(line: 185, column: 2, scope: !9542)
!9570 = !DILocation(line: 188, column: 2, scope: !9542)
!9571 = !DILocation(line: 189, column: 1, scope: !9542)
!9572 = distinct !DISubprogram(name: "cursor_save", scope: !919, file: !919, line: 153, type: !3232, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !473)
!9573 = !DILocation(line: 155, column: 2, scope: !9572)
!9574 = !DILocation(line: 156, column: 1, scope: !9572)
!9575 = distinct !DISubprogram(name: "cursor_restore", scope: !919, file: !919, line: 158, type: !3232, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !473)
!9576 = !DILocation(line: 160, column: 2, scope: !9575)
!9577 = !DILocation(line: 161, column: 1, scope: !9575)
!9578 = distinct !DISubprogram(name: "atomic_or", scope: !9579, file: !9579, line: 279, type: !9580, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9582)
!9579 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9580 = !DISubroutineType(types: !9581)
!9581 = !{!9368, !9480, !9368}
!9582 = !{!9583, !9584}
!9583 = !DILocalVariable(name: "target", arg: 1, scope: !9578, file: !9579, line: 279, type: !9480)
!9584 = !DILocalVariable(name: "value", arg: 2, scope: !9578, file: !9579, line: 279, type: !9368)
!9585 = !DILocation(line: 0, scope: !9578)
!9586 = !DILocation(line: 281, column: 9, scope: !9578)
!9587 = !DILocation(line: 281, column: 2, scope: !9578)
!9588 = distinct !DISubprogram(name: "atomic_and", scope: !9579, file: !9579, line: 319, type: !9580, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9589)
!9589 = !{!9590, !9591}
!9590 = !DILocalVariable(name: "target", arg: 1, scope: !9588, file: !9579, line: 319, type: !9480)
!9591 = !DILocalVariable(name: "value", arg: 2, scope: !9588, file: !9579, line: 319, type: !9368)
!9592 = !DILocation(line: 0, scope: !9588)
!9593 = !DILocation(line: 321, column: 9, scope: !9588)
!9594 = !DILocation(line: 321, column: 2, scope: !9588)
!9595 = distinct !DISubprogram(name: "isdigit", scope: !4989, file: !4989, line: 43, type: !118, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9596)
!9596 = !{!9597}
!9597 = !DILocalVariable(name: "a", arg: 1, scope: !9595, file: !4989, line: 43, type: !103)
!9598 = !DILocation(line: 0, scope: !9595)
!9599 = !DILocation(line: 45, column: 29, scope: !9595)
!9600 = !DILocation(line: 45, column: 45, scope: !9595)
!9601 = !DILocation(line: 45, column: 2, scope: !9595)
!9602 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1102, file: !1102, line: 176, type: !9478, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9603)
!9603 = !{!9604, !9605, !9606, !9607}
!9604 = !DILocalVariable(name: "target", arg: 1, scope: !9602, file: !1102, line: 176, type: !9480)
!9605 = !DILocalVariable(name: "bit", arg: 2, scope: !9602, file: !1102, line: 176, type: !103)
!9606 = !DILocalVariable(name: "mask", scope: !9602, file: !1102, line: 178, type: !9368)
!9607 = !DILocalVariable(name: "old", scope: !9602, file: !1102, line: 179, type: !9368)
!9608 = !DILocation(line: 0, scope: !9602)
!9609 = !DILocation(line: 181, column: 8, scope: !9602)
!9610 = !DILocation(line: 183, column: 14, scope: !9602)
!9611 = !DILocation(line: 183, column: 22, scope: !9602)
!9612 = !DILocation(line: 183, column: 2, scope: !9602)
!9613 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1102, file: !1102, line: 198, type: !9494, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9614)
!9614 = !{!9615, !9616, !9617}
!9615 = !DILocalVariable(name: "target", arg: 1, scope: !9613, file: !1102, line: 198, type: !9480)
!9616 = !DILocalVariable(name: "bit", arg: 2, scope: !9613, file: !1102, line: 198, type: !103)
!9617 = !DILocalVariable(name: "mask", scope: !9613, file: !1102, line: 200, type: !9368)
!9618 = !DILocation(line: 0, scope: !9613)
!9619 = !DILocation(line: 200, column: 22, scope: !9613)
!9620 = !DILocation(line: 202, column: 45, scope: !9613)
!9621 = !DILocation(line: 202, column: 8, scope: !9613)
!9622 = !DILocation(line: 203, column: 1, scope: !9613)
!9623 = distinct !DISubprogram(name: "cursor_backward", scope: !919, file: !919, line: 148, type: !5800, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9624)
!9624 = !{!9625}
!9625 = !DILocalVariable(name: "count", arg: 1, scope: !9623, file: !919, line: 148, type: !32)
!9626 = !DILocation(line: 0, scope: !9623)
!9627 = !DILocation(line: 150, column: 2, scope: !9623)
!9628 = !DILocation(line: 151, column: 1, scope: !9623)
!9629 = distinct !DISubprogram(name: "cursor_forward", scope: !919, file: !919, line: 143, type: !5800, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9630)
!9630 = !{!9631}
!9631 = !DILocalVariable(name: "count", arg: 1, scope: !9629, file: !919, line: 143, type: !32)
!9632 = !DILocation(line: 0, scope: !9629)
!9633 = !DILocation(line: 145, column: 2, scope: !9629)
!9634 = !DILocation(line: 146, column: 1, scope: !9629)
!9635 = distinct !DISubprogram(name: "atomic_get", scope: !9579, file: !9579, line: 159, type: !9636, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9638)
!9636 = !DISubroutineType(types: !9637)
!9637 = !{!9368, !9362}
!9638 = !{!9639}
!9639 = !DILocalVariable(name: "target", arg: 1, scope: !9635, file: !9579, line: 159, type: !9362)
!9640 = !DILocation(line: 0, scope: !9635)
!9641 = !DILocation(line: 161, column: 9, scope: !9635)
!9642 = !DILocation(line: 161, column: 2, scope: !9635)
!9643 = !DISubprogram(name: "z_impl_k_queue_get", scope: !3672, file: !3672, line: 646, type: !9343, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!9644 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !212, file: !212, line: 1093, type: !956, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9645)
!9645 = !{!9646, !9647}
!9646 = !DILocalVariable(name: "dev", arg: 1, scope: !9644, file: !212, line: 1093, type: !935)
!9647 = !DILocalVariable(name: "api", scope: !9644, file: !212, line: 1096, type: !927)
!9648 = !DILocation(line: 0, scope: !9644)
!9649 = !DILocation(line: 1097, column: 40, scope: !9644)
!9650 = !DILocation(line: 1099, column: 11, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9644, file: !212, line: 1099, column: 6)
!9652 = !DILocation(line: 1099, column: 26, scope: !9651)
!9653 = !DILocation(line: 1099, column: 6, scope: !9644)
!9654 = !DILocation(line: 1102, column: 9, scope: !9644)
!9655 = !DILocation(line: 1102, column: 2, scope: !9644)
!9656 = !DILocation(line: 1107, column: 1, scope: !9644)
!9657 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !212, file: !212, line: 1136, type: !956, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9658)
!9658 = !{!9659, !9660}
!9659 = !DILocalVariable(name: "dev", arg: 1, scope: !9657, file: !212, line: 1136, type: !935)
!9660 = !DILocalVariable(name: "api", scope: !9657, file: !212, line: 1139, type: !927)
!9661 = !DILocation(line: 0, scope: !9657)
!9662 = !DILocation(line: 1140, column: 40, scope: !9657)
!9663 = !DILocation(line: 1142, column: 11, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9657, file: !212, line: 1142, column: 6)
!9665 = !DILocation(line: 1142, column: 22, scope: !9664)
!9666 = !DILocation(line: 1142, column: 6, scope: !9657)
!9667 = !DILocation(line: 1145, column: 9, scope: !9657)
!9668 = !DILocation(line: 1145, column: 2, scope: !9657)
!9669 = !DILocation(line: 1150, column: 1, scope: !9657)
!9670 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !212, file: !212, line: 878, type: !986, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9671)
!9671 = !{!9672, !9673}
!9672 = !DILocalVariable(name: "dev", arg: 1, scope: !9670, file: !212, line: 878, type: !935)
!9673 = !DILocalVariable(name: "api", scope: !9670, file: !212, line: 881, type: !927)
!9674 = !DILocation(line: 0, scope: !9670)
!9675 = !DILocation(line: 882, column: 40, scope: !9670)
!9676 = !DILocation(line: 884, column: 11, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9670, file: !212, line: 884, column: 6)
!9678 = !DILocation(line: 884, column: 26, scope: !9677)
!9679 = !DILocation(line: 884, column: 6, scope: !9670)
!9680 = !DILocation(line: 885, column: 3, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9677, file: !212, line: 884, column: 35)
!9682 = !DILocation(line: 886, column: 2, scope: !9681)
!9683 = !DILocation(line: 890, column: 1, scope: !9670)
!9684 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !212, file: !212, line: 955, type: !986, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !915, retainedNodes: !9685)
!9685 = !{!9686, !9687}
!9686 = !DILocalVariable(name: "dev", arg: 1, scope: !9684, file: !212, line: 955, type: !935)
!9687 = !DILocalVariable(name: "api", scope: !9684, file: !212, line: 958, type: !927)
!9688 = !DILocation(line: 0, scope: !9684)
!9689 = !DILocation(line: 959, column: 40, scope: !9684)
!9690 = !DILocation(line: 961, column: 11, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9684, file: !212, line: 961, column: 6)
!9692 = !DILocation(line: 961, column: 26, scope: !9691)
!9693 = !DILocation(line: 961, column: 6, scope: !9684)
!9694 = !DILocation(line: 962, column: 3, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9691, file: !212, line: 961, column: 35)
!9696 = !DILocation(line: 963, column: 2, scope: !9695)
!9697 = !DILocation(line: 967, column: 1, scope: !9684)
!9698 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1286, file: !1286, line: 523, type: !1144, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9699)
!9699 = !{!9700, !9701, !9702, !9703, !9704}
!9700 = !DILocalVariable(name: "dev", arg: 1, scope: !9698, file: !1286, line: 523, type: !1146)
!9701 = !DILocalVariable(name: "pin", arg: 2, scope: !9698, file: !1286, line: 524, type: !1161)
!9702 = !DILocalVariable(name: "flags", arg: 3, scope: !9698, file: !1286, line: 524, type: !1162)
!9703 = !DILocalVariable(name: "err", scope: !9698, file: !1286, line: 526, type: !103)
!9704 = !DILocalVariable(name: "pincfg", scope: !9698, file: !1286, line: 527, type: !103)
!9705 = !DILocation(line: 0, scope: !9698)
!9706 = !DILocation(line: 527, column: 2, scope: !9698)
!9707 = !DILocation(line: 532, column: 8, scope: !9698)
!9708 = !DILocation(line: 533, column: 10, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9698, file: !1286, line: 533, column: 6)
!9710 = !DILocation(line: 533, column: 6, scope: !9698)
!9711 = !DILocation(line: 543, column: 13, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9698, file: !1286, line: 543, column: 6)
!9713 = !DILocation(line: 543, column: 28, scope: !9712)
!9714 = !DILocation(line: 543, column: 6, scope: !9698)
!9715 = !DILocation(line: 544, column: 14, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9717, file: !1286, line: 544, column: 7)
!9717 = distinct !DILexicalBlock(scope: !9712, file: !1286, line: 543, column: 34)
!9718 = !DILocation(line: 544, column: 39, scope: !9716)
!9719 = !DILocation(line: 544, column: 7, scope: !9717)
!9720 = !DILocation(line: 545, column: 38, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9716, file: !1286, line: 544, column: 45)
!9722 = !DILocation(line: 545, column: 4, scope: !9721)
!9723 = !DILocation(line: 546, column: 3, scope: !9721)
!9724 = !DILocation(line: 546, column: 21, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9716, file: !1286, line: 546, column: 14)
!9726 = !DILocation(line: 546, column: 45, scope: !9725)
!9727 = !DILocation(line: 546, column: 14, scope: !9716)
!9728 = !DILocation(line: 547, column: 40, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9725, file: !1286, line: 546, column: 51)
!9730 = !DILocation(line: 547, column: 4, scope: !9729)
!9731 = !DILocation(line: 548, column: 3, scope: !9729)
!9732 = !DILocation(line: 551, column: 32, scope: !9698)
!9733 = !DILocation(line: 551, column: 37, scope: !9698)
!9734 = !DILocation(line: 551, column: 2, scope: !9698)
!9735 = !DILocation(line: 554, column: 6, scope: !9698)
!9736 = !DILocation(line: 562, column: 1, scope: !9698)
!9737 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1286, file: !1286, line: 410, type: !9738, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9740)
!9738 = !DISubroutineType(types: !9739)
!9739 = !{!103, !1146, !837}
!9740 = !{!9741, !9742, !9743, !9745}
!9741 = !DILocalVariable(name: "dev", arg: 1, scope: !9737, file: !1286, line: 410, type: !1146)
!9742 = !DILocalVariable(name: "value", arg: 2, scope: !9737, file: !1286, line: 410, type: !837)
!9743 = !DILocalVariable(name: "cfg", scope: !9737, file: !1286, line: 412, type: !9744)
!9744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!9745 = !DILocalVariable(name: "gpio", scope: !9737, file: !1286, line: 413, type: !1219)
!9746 = !DILocation(line: 0, scope: !9737)
!9747 = !DILocation(line: 412, column: 45, scope: !9737)
!9748 = !DILocation(line: 413, column: 44, scope: !9737)
!9749 = !DILocation(line: 415, column: 11, scope: !9737)
!9750 = !DILocation(line: 415, column: 9, scope: !9737)
!9751 = !DILocation(line: 417, column: 2, scope: !9737)
!9752 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1286, file: !1286, line: 420, type: !1171, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9753)
!9753 = !{!9754, !9755, !9756, !9757, !9758, !9759}
!9754 = !DILocalVariable(name: "dev", arg: 1, scope: !9752, file: !1286, line: 420, type: !1146)
!9755 = !DILocalVariable(name: "mask", arg: 2, scope: !9752, file: !1286, line: 421, type: !1173)
!9756 = !DILocalVariable(name: "value", arg: 3, scope: !9752, file: !1286, line: 422, type: !1168)
!9757 = !DILocalVariable(name: "cfg", scope: !9752, file: !1286, line: 424, type: !9744)
!9758 = !DILocalVariable(name: "gpio", scope: !9752, file: !1286, line: 425, type: !1219)
!9759 = !DILocalVariable(name: "port_value", scope: !9752, file: !1286, line: 426, type: !132)
!9760 = !DILocation(line: 0, scope: !9752)
!9761 = !DILocation(line: 424, column: 45, scope: !9752)
!9762 = !DILocation(line: 425, column: 44, scope: !9752)
!9763 = !DILocation(line: 430, column: 15, scope: !9752)
!9764 = !DILocation(line: 431, column: 46, scope: !9752)
!9765 = !DILocation(line: 431, column: 44, scope: !9752)
!9766 = !DILocation(line: 431, column: 61, scope: !9752)
!9767 = !DILocation(line: 431, column: 53, scope: !9752)
!9768 = !DILocation(line: 431, column: 2, scope: !9752)
!9769 = !DILocation(line: 435, column: 2, scope: !9752)
!9770 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1286, file: !1286, line: 438, type: !1176, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9771)
!9771 = !{!9772, !9773, !9774, !9775}
!9772 = !DILocalVariable(name: "dev", arg: 1, scope: !9770, file: !1286, line: 438, type: !1146)
!9773 = !DILocalVariable(name: "pins", arg: 2, scope: !9770, file: !1286, line: 439, type: !1173)
!9774 = !DILocalVariable(name: "cfg", scope: !9770, file: !1286, line: 441, type: !9744)
!9775 = !DILocalVariable(name: "gpio", scope: !9770, file: !1286, line: 442, type: !1219)
!9776 = !DILocation(line: 0, scope: !9770)
!9777 = !DILocation(line: 441, column: 45, scope: !9770)
!9778 = !DILocation(line: 442, column: 44, scope: !9770)
!9779 = !DILocation(line: 448, column: 2, scope: !9770)
!9780 = !DILocation(line: 450, column: 2, scope: !9770)
!9781 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1286, file: !1286, line: 453, type: !1176, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9782)
!9782 = !{!9783, !9784, !9785, !9786}
!9783 = !DILocalVariable(name: "dev", arg: 1, scope: !9781, file: !1286, line: 453, type: !1146)
!9784 = !DILocalVariable(name: "pins", arg: 2, scope: !9781, file: !1286, line: 454, type: !1173)
!9785 = !DILocalVariable(name: "cfg", scope: !9781, file: !1286, line: 456, type: !9744)
!9786 = !DILocalVariable(name: "gpio", scope: !9781, file: !1286, line: 457, type: !1219)
!9787 = !DILocation(line: 0, scope: !9781)
!9788 = !DILocation(line: 456, column: 45, scope: !9781)
!9789 = !DILocation(line: 457, column: 44, scope: !9781)
!9790 = !DILocation(line: 467, column: 2, scope: !9781)
!9791 = !DILocation(line: 470, column: 2, scope: !9781)
!9792 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1286, file: !1286, line: 473, type: !1176, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9793)
!9793 = !{!9794, !9795, !9796, !9797}
!9794 = !DILocalVariable(name: "dev", arg: 1, scope: !9792, file: !1286, line: 473, type: !1146)
!9795 = !DILocalVariable(name: "pins", arg: 2, scope: !9792, file: !1286, line: 474, type: !1173)
!9796 = !DILocalVariable(name: "cfg", scope: !9792, file: !1286, line: 476, type: !9744)
!9797 = !DILocalVariable(name: "gpio", scope: !9792, file: !1286, line: 477, type: !1219)
!9798 = !DILocation(line: 0, scope: !9792)
!9799 = !DILocation(line: 476, column: 45, scope: !9792)
!9800 = !DILocation(line: 477, column: 44, scope: !9792)
!9801 = !DILocation(line: 484, column: 2, scope: !9792)
!9802 = !DILocation(line: 487, column: 2, scope: !9792)
!9803 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1286, file: !1286, line: 594, type: !1182, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9804)
!9804 = !{!9805, !9806, !9807, !9808, !9809, !9810, !9812, !9813, !9814}
!9805 = !DILocalVariable(name: "dev", arg: 1, scope: !9803, file: !1286, line: 594, type: !1146)
!9806 = !DILocalVariable(name: "pin", arg: 2, scope: !9803, file: !1286, line: 595, type: !1161)
!9807 = !DILocalVariable(name: "mode", arg: 3, scope: !9803, file: !1286, line: 596, type: !1120)
!9808 = !DILocalVariable(name: "trig", arg: 4, scope: !9803, file: !1286, line: 597, type: !1126)
!9809 = !DILocalVariable(name: "cfg", scope: !9803, file: !1286, line: 599, type: !9744)
!9810 = !DILocalVariable(name: "data", scope: !9803, file: !1286, line: 600, type: !9811)
!9811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 32)
!9812 = !DILocalVariable(name: "edge", scope: !9803, file: !1286, line: 601, type: !103)
!9813 = !DILocalVariable(name: "err", scope: !9803, file: !1286, line: 602, type: !103)
!9814 = !DILabel(scope: !9803, name: "exit", file: !1286, line: 643)
!9815 = !DILocation(line: 0, scope: !9803)
!9816 = !DILocation(line: 599, column: 45, scope: !9803)
!9817 = !DILocation(line: 604, column: 6, scope: !9803)
!9818 = !DILocation(line: 605, column: 34, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9820, file: !1286, line: 605, column: 7)
!9820 = distinct !DILexicalBlock(scope: !9821, file: !1286, line: 604, column: 38)
!9821 = distinct !DILexicalBlock(scope: !9803, file: !1286, line: 604, column: 6)
!9822 = !DILocation(line: 605, column: 7, scope: !9819)
!9823 = !DILocation(line: 605, column: 47, scope: !9819)
!9824 = !DILocation(line: 605, column: 39, scope: !9819)
!9825 = !DILocation(line: 605, column: 7, scope: !9820)
!9826 = !DILocation(line: 606, column: 4, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9819, file: !1286, line: 605, column: 53)
!9828 = !DILocation(line: 607, column: 4, scope: !9827)
!9829 = !DILocation(line: 608, column: 4, scope: !9827)
!9830 = !DILocation(line: 609, column: 3, scope: !9827)
!9831 = !DILocation(line: 600, column: 38, scope: !9803)
!9832 = !DILocation(line: 620, column: 30, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9803, file: !1286, line: 620, column: 6)
!9834 = !DILocation(line: 620, column: 6, scope: !9833)
!9835 = !DILocation(line: 620, column: 57, scope: !9833)
!9836 = !DILocation(line: 620, column: 6, scope: !9803)
!9837 = !DILocation(line: 625, column: 29, scope: !9803)
!9838 = !DILocation(line: 625, column: 2, scope: !9803)
!9839 = !DILocation(line: 627, column: 2, scope: !9803)
!9840 = !DILocation(line: 630, column: 3, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9803, file: !1286, line: 627, column: 16)
!9842 = !DILocation(line: 633, column: 3, scope: !9841)
!9843 = !DILocation(line: 636, column: 3, scope: !9841)
!9844 = !DILocation(line: 639, column: 2, scope: !9803)
!9845 = !DILocation(line: 641, column: 2, scope: !9803)
!9846 = !DILocation(line: 643, column: 1, scope: !9803)
!9847 = !DILocation(line: 644, column: 2, scope: !9803)
!9848 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1286, file: !1286, line: 647, type: !1186, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9849)
!9849 = !{!9850, !9851, !9852, !9853}
!9850 = !DILocalVariable(name: "dev", arg: 1, scope: !9848, file: !1286, line: 647, type: !1146)
!9851 = !DILocalVariable(name: "callback", arg: 2, scope: !9848, file: !1286, line: 648, type: !1188)
!9852 = !DILocalVariable(name: "set", arg: 3, scope: !9848, file: !1286, line: 649, type: !166)
!9853 = !DILocalVariable(name: "data", scope: !9848, file: !1286, line: 651, type: !9811)
!9854 = !DILocation(line: 0, scope: !9848)
!9855 = !DILocation(line: 651, column: 38, scope: !9848)
!9856 = !DILocation(line: 653, column: 37, scope: !9848)
!9857 = !DILocation(line: 653, column: 9, scope: !9848)
!9858 = !DILocation(line: 653, column: 2, scope: !9848)
!9859 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9860, file: !9860, line: 38, type: !9861, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9864)
!9860 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9861 = !DISubroutineType(types: !9862)
!9862 = !{!103, !9863, !1188, !166}
!9863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!9864 = !{!9865, !9866, !9867}
!9865 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9859, file: !9860, line: 38, type: !9863)
!9866 = !DILocalVariable(name: "callback", arg: 2, scope: !9859, file: !9860, line: 39, type: !1188)
!9867 = !DILocalVariable(name: "set", arg: 3, scope: !9859, file: !9860, line: 40, type: !166)
!9868 = !DILocation(line: 0, scope: !9859)
!9869 = !DILocation(line: 45, column: 7, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9859, file: !9860, line: 45, column: 6)
!9871 = !DILocation(line: 45, column: 6, scope: !9859)
!9872 = !DILocation(line: 46, column: 56, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9874, file: !9860, line: 46, column: 7)
!9874 = distinct !DILexicalBlock(scope: !9870, file: !9860, line: 45, column: 38)
!9875 = !DILocation(line: 46, column: 8, scope: !9873)
!9876 = !DILocation(line: 46, column: 7, scope: !9874)
!9877 = !DILocation(line: 51, column: 13, scope: !9870)
!9878 = !DILocation(line: 56, column: 43, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9880, file: !9860, line: 55, column: 11)
!9880 = distinct !DILexicalBlock(scope: !9859, file: !9860, line: 55, column: 6)
!9881 = !DILocation(line: 56, column: 3, scope: !9879)
!9882 = !DILocation(line: 57, column: 2, scope: !9879)
!9883 = !DILocation(line: 60, column: 1, scope: !9859)
!9884 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1193, file: !1193, line: 261, type: !9885, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9887)
!9885 = !DISubroutineType(types: !9886)
!9886 = !{!166, !9863}
!9887 = !{!9888}
!9888 = !DILocalVariable(name: "list", arg: 1, scope: !9884, file: !1193, line: 261, type: !9863)
!9889 = !DILocation(line: 0, scope: !9884)
!9890 = !DILocation(line: 261, column: 1, scope: !9884)
!9891 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1193, file: !1193, line: 417, type: !9892, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9894)
!9892 = !DISubroutineType(types: !9893)
!9893 = !{!166, !9863, !1359}
!9894 = !{!9895, !9896, !9897, !9898}
!9895 = !DILocalVariable(name: "list", arg: 1, scope: !9891, file: !1193, line: 417, type: !9863)
!9896 = !DILocalVariable(name: "node", arg: 2, scope: !9891, file: !1193, line: 417, type: !1359)
!9897 = !DILocalVariable(name: "prev", scope: !9891, file: !1193, line: 417, type: !1359)
!9898 = !DILocalVariable(name: "test", scope: !9891, file: !1193, line: 417, type: !1359)
!9899 = !DILocation(line: 0, scope: !9891)
!9900 = !DILocation(line: 417, column: 1, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9891, file: !1193, line: 417, column: 1)
!9902 = !DILocation(line: 417, column: 1, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9901, file: !1193, line: 417, column: 1)
!9904 = !DILocation(line: 417, column: 1, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9906, file: !1193, line: 417, column: 1)
!9906 = distinct !DILexicalBlock(scope: !9903, file: !1193, line: 417, column: 1)
!9907 = !DILocation(line: 417, column: 1, scope: !9906)
!9908 = distinct !{!9908, !9900, !9900}
!9909 = !DILocation(line: 417, column: 1, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9905, file: !1193, line: 417, column: 1)
!9911 = !DILocation(line: 417, column: 1, scope: !9891)
!9912 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1193, file: !1193, line: 298, type: !9913, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9915)
!9913 = !DISubroutineType(types: !9914)
!9914 = !{null, !9863, !1359}
!9915 = !{!9916, !9917}
!9916 = !DILocalVariable(name: "list", arg: 1, scope: !9912, file: !1193, line: 298, type: !9863)
!9917 = !DILocalVariable(name: "node", arg: 2, scope: !9912, file: !1193, line: 298, type: !1359)
!9918 = !DILocation(line: 0, scope: !9912)
!9919 = !DILocation(line: 298, column: 1, scope: !9912)
!9920 = !DILocation(line: 298, column: 1, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9912, file: !1193, line: 298, column: 1)
!9922 = !DILocation(line: 298, column: 1, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9921, file: !1193, line: 298, column: 1)
!9924 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1193, file: !1193, line: 231, type: !9925, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9927)
!9925 = !DISubroutineType(types: !9926)
!9926 = !{!1359, !9863}
!9927 = !{!9928}
!9928 = !DILocalVariable(name: "list", arg: 1, scope: !9924, file: !1193, line: 231, type: !9863)
!9929 = !DILocation(line: 0, scope: !9924)
!9930 = !DILocation(line: 233, column: 15, scope: !9924)
!9931 = !DILocation(line: 233, column: 2, scope: !9924)
!9932 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1193, file: !1193, line: 209, type: !9933, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9935)
!9933 = !DISubroutineType(types: !9934)
!9934 = !{null, !1359, !1359}
!9935 = !{!9936, !9937}
!9936 = !DILocalVariable(name: "parent", arg: 1, scope: !9932, file: !1193, line: 209, type: !1359)
!9937 = !DILocalVariable(name: "child", arg: 2, scope: !9932, file: !1193, line: 209, type: !1359)
!9938 = !DILocation(line: 0, scope: !9932)
!9939 = !DILocation(line: 211, column: 10, scope: !9932)
!9940 = !DILocation(line: 211, column: 15, scope: !9932)
!9941 = !DILocation(line: 212, column: 1, scope: !9932)
!9942 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1193, file: !1193, line: 214, type: !9913, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9943)
!9943 = !{!9944, !9945}
!9944 = !DILocalVariable(name: "list", arg: 1, scope: !9942, file: !1193, line: 214, type: !9863)
!9945 = !DILocalVariable(name: "node", arg: 2, scope: !9942, file: !1193, line: 214, type: !1359)
!9946 = !DILocation(line: 0, scope: !9942)
!9947 = !DILocation(line: 216, column: 8, scope: !9942)
!9948 = !DILocation(line: 216, column: 13, scope: !9942)
!9949 = !DILocation(line: 217, column: 1, scope: !9942)
!9950 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1193, file: !1193, line: 243, type: !9925, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9951)
!9951 = !{!9952}
!9952 = !DILocalVariable(name: "list", arg: 1, scope: !9950, file: !1193, line: 243, type: !9863)
!9953 = !DILocation(line: 0, scope: !9950)
!9954 = !DILocation(line: 245, column: 15, scope: !9950)
!9955 = !DILocation(line: 245, column: 2, scope: !9950)
!9956 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1193, file: !1193, line: 219, type: !9913, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9957)
!9957 = !{!9958, !9959}
!9958 = !DILocalVariable(name: "list", arg: 1, scope: !9956, file: !1193, line: 219, type: !9863)
!9959 = !DILocalVariable(name: "node", arg: 2, scope: !9956, file: !1193, line: 219, type: !1359)
!9960 = !DILocation(line: 0, scope: !9956)
!9961 = !DILocation(line: 221, column: 8, scope: !9956)
!9962 = !DILocation(line: 221, column: 13, scope: !9956)
!9963 = !DILocation(line: 222, column: 1, scope: !9956)
!9964 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1193, file: !1193, line: 401, type: !9965, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9967)
!9965 = !DISubroutineType(types: !9966)
!9966 = !{null, !9863, !1359, !1359}
!9967 = !{!9968, !9969, !9970}
!9968 = !DILocalVariable(name: "list", arg: 1, scope: !9964, file: !1193, line: 401, type: !9863)
!9969 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9964, file: !1193, line: 401, type: !1359)
!9970 = !DILocalVariable(name: "node", arg: 3, scope: !9964, file: !1193, line: 401, type: !1359)
!9971 = !DILocation(line: 0, scope: !9964)
!9972 = !DILocation(line: 401, column: 1, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9964, file: !1193, line: 401, column: 1)
!9974 = !DILocation(line: 0, scope: !9973)
!9975 = !DILocation(line: 401, column: 1, scope: !9964)
!9976 = !DILocation(line: 401, column: 1, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9973, file: !1193, line: 401, column: 1)
!9978 = !DILocation(line: 401, column: 1, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9977, file: !1193, line: 401, column: 1)
!9980 = !DILocation(line: 401, column: 1, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9979, file: !1193, line: 401, column: 1)
!9982 = !DILocation(line: 401, column: 1, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9973, file: !1193, line: 401, column: 1)
!9984 = !DILocation(line: 401, column: 1, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9983, file: !1193, line: 401, column: 1)
!9986 = !DILocation(line: 401, column: 1, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9985, file: !1193, line: 401, column: 1)
!9988 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1193, file: !1193, line: 285, type: !9989, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9991)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{!1359, !1359}
!9991 = !{!9992}
!9992 = !DILocalVariable(name: "node", arg: 1, scope: !9988, file: !1193, line: 285, type: !1359)
!9993 = !DILocation(line: 0, scope: !9988)
!9994 = !DILocation(line: 285, column: 1, scope: !9988)
!9995 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1193, file: !1193, line: 274, type: !9989, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !9996)
!9996 = !{!9997}
!9997 = !DILocalVariable(name: "node", arg: 1, scope: !9995, file: !1193, line: 274, type: !1359)
!9998 = !DILocation(line: 0, scope: !9995)
!9999 = !DILocation(line: 274, column: 1, scope: !9995)
!10000 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1193, file: !1193, line: 204, type: !9989, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10001)
!10001 = !{!10002}
!10002 = !DILocalVariable(name: "node", arg: 1, scope: !10000, file: !1193, line: 204, type: !1359)
!10003 = !DILocation(line: 0, scope: !10000)
!10004 = !DILocation(line: 206, column: 15, scope: !10000)
!10005 = !DILocation(line: 206, column: 2, scope: !10000)
!10006 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1286, file: !1286, line: 342, type: !118, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10007)
!10007 = !{!10008, !10009, !10010}
!10008 = !DILocalVariable(name: "pin", arg: 1, scope: !10006, file: !1286, line: 342, type: !103)
!10009 = !DILocalVariable(name: "line", scope: !10006, file: !1286, line: 344, type: !132)
!10010 = !DILocalVariable(name: "port", scope: !10006, file: !1286, line: 345, type: !103)
!10011 = !DILocation(line: 0, scope: !10006)
!10012 = !DILocation(line: 344, column: 18, scope: !10006)
!10013 = !{i32 983040, i32 0}
!10014 = !DILocation(line: 356, column: 9, scope: !10006)
!10015 = !DILocation(line: 370, column: 2, scope: !10006)
!10016 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1286, file: !1286, line: 37, type: !700, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10017)
!10017 = !{!10018, !10019, !10020}
!10018 = !DILocalVariable(name: "line", arg: 1, scope: !10016, file: !1286, line: 37, type: !103)
!10019 = !DILocalVariable(name: "arg", arg: 2, scope: !10016, file: !1286, line: 37, type: !102)
!10020 = !DILocalVariable(name: "data", scope: !10016, file: !1286, line: 39, type: !9811)
!10021 = !DILocation(line: 0, scope: !10016)
!10022 = !DILocation(line: 41, column: 29, scope: !10016)
!10023 = !DILocation(line: 41, column: 39, scope: !10016)
!10024 = !DILocation(line: 41, column: 44, scope: !10016)
!10025 = !DILocation(line: 41, column: 2, scope: !10016)
!10026 = !DILocation(line: 42, column: 1, scope: !10016)
!10027 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1286, file: !1286, line: 376, type: !10028, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10030)
!10028 = !DISubroutineType(types: !10029)
!10029 = !{!103, !103, !103}
!10030 = !{!10031, !10032, !10033, !10035, !10036}
!10031 = !DILocalVariable(name: "port", arg: 1, scope: !10027, file: !1286, line: 376, type: !103)
!10032 = !DILocalVariable(name: "pin", arg: 2, scope: !10027, file: !1286, line: 376, type: !103)
!10033 = !DILocalVariable(name: "clk", scope: !10027, file: !1286, line: 386, type: !10034)
!10034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1146)
!10035 = !DILocalVariable(name: "pclken", scope: !10027, file: !1286, line: 387, type: !1402)
!10036 = !DILocalVariable(name: "ret", scope: !10027, file: !1286, line: 396, type: !103)
!10037 = !DILocation(line: 0, scope: !10027)
!10038 = !DILocation(line: 387, column: 2, scope: !10027)
!10039 = !DILocation(line: 387, column: 22, scope: !10027)
!10040 = !DILocation(line: 399, column: 8, scope: !10027)
!10041 = !DILocation(line: 400, column: 10, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10027, file: !1286, line: 400, column: 6)
!10043 = !DILocation(line: 400, column: 6, scope: !10027)
!10044 = !DILocation(line: 405, column: 2, scope: !10027)
!10045 = !DILocation(line: 407, column: 2, scope: !10027)
!10046 = !DILocation(line: 408, column: 1, scope: !10027)
!10047 = distinct !DISubprogram(name: "clock_control_on", scope: !786, file: !786, line: 123, type: !1251, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10048)
!10048 = !{!10049, !10050, !10051}
!10049 = !DILocalVariable(name: "dev", arg: 1, scope: !10047, file: !786, line: 123, type: !1146)
!10050 = !DILocalVariable(name: "sys", arg: 2, scope: !10047, file: !786, line: 124, type: !881)
!10051 = !DILocalVariable(name: "api", scope: !10047, file: !786, line: 126, type: !1244)
!10052 = !DILocation(line: 0, scope: !10047)
!10053 = !DILocation(line: 127, column: 49, scope: !10047)
!10054 = !DILocation(line: 129, column: 14, scope: !10047)
!10055 = !DILocation(line: 129, column: 9, scope: !10047)
!10056 = !DILocation(line: 129, column: 2, scope: !10047)
!10057 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1286, file: !1286, line: 311, type: !8600, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10058)
!10058 = !{!10059, !10060, !10061}
!10059 = !DILocalVariable(name: "port", arg: 1, scope: !10057, file: !1286, line: 311, type: !103)
!10060 = !DILocalVariable(name: "pin", arg: 2, scope: !10057, file: !1286, line: 311, type: !103)
!10061 = !DILocalVariable(name: "line", scope: !10057, file: !1286, line: 313, type: !132)
!10062 = !DILocation(line: 0, scope: !10057)
!10063 = !DILocation(line: 313, column: 18, scope: !10057)
!10064 = !DILocation(line: 337, column: 2, scope: !10057)
!10065 = !DILocation(line: 340, column: 1, scope: !10057)
!10066 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1286, file: !1286, line: 295, type: !10067, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10069)
!10067 = !DISubroutineType(types: !10068)
!10068 = !{!132, !103}
!10069 = !{!10070}
!10070 = !DILocalVariable(name: "pin", arg: 1, scope: !10066, file: !1286, line: 295, type: !103)
!10071 = !DILocation(line: 0, scope: !10066)
!10072 = !DILocation(line: 307, column: 46, scope: !10066)
!10073 = !DILocation(line: 307, column: 27, scope: !10066)
!10074 = !DILocation(line: 307, column: 32, scope: !10066)
!10075 = !DILocation(line: 307, column: 14, scope: !10066)
!10076 = !DILocation(line: 307, column: 39, scope: !10066)
!10077 = !DILocation(line: 307, column: 2, scope: !10066)
!10078 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5810, file: !5810, line: 671, type: !10079, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10081)
!10079 = !DISubroutineType(types: !10080)
!10080 = !{null, !132, !132}
!10081 = !{!10082, !10083}
!10082 = !DILocalVariable(name: "Port", arg: 1, scope: !10078, file: !5810, line: 671, type: !132)
!10083 = !DILocalVariable(name: "Line", arg: 2, scope: !10078, file: !5810, line: 671, type: !132)
!10084 = !DILocation(line: 0, scope: !10078)
!10085 = !DILocation(line: 673, column: 3, scope: !10078)
!10086 = !DILocalVariable(name: "value", arg: 1, scope: !10087, file: !6809, line: 373, type: !132)
!10087 = distinct !DISubprogram(name: "__RBIT", scope: !6809, file: !6809, line: 373, type: !7816, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10088)
!10088 = !{!10086, !10089}
!10089 = !DILocalVariable(name: "result", scope: !10087, file: !6809, line: 375, type: !132)
!10090 = !DILocation(line: 0, scope: !10087, inlinedAt: !10091)
!10091 = distinct !DILocation(line: 673, column: 3, scope: !10078)
!10092 = !DILocation(line: 380, column: 4, scope: !10087, inlinedAt: !10091)
!10093 = !{i64 2831876}
!10094 = !DILocalVariable(name: "value", arg: 1, scope: !10095, file: !6809, line: 403, type: !132)
!10095 = distinct !DISubprogram(name: "__CLZ", scope: !6809, file: !6809, line: 403, type: !10096, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10098)
!10096 = !DISubroutineType(types: !10097)
!10097 = !{!163, !132}
!10098 = !{!10094}
!10099 = !DILocation(line: 0, scope: !10095, inlinedAt: !10100)
!10100 = distinct !DILocation(line: 673, column: 3, scope: !10078)
!10101 = !DILocation(line: 414, column: 7, scope: !10095, inlinedAt: !10100)
!10102 = !DILocation(line: 674, column: 1, scope: !10078)
!10103 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9860, file: !9860, line: 69, type: !10104, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10106)
!10104 = !DISubroutineType(types: !10105)
!10105 = !{null, !9863, !1146, !132}
!10106 = !{!10107, !10108, !10109, !10110, !10111}
!10107 = !DILocalVariable(name: "list", arg: 1, scope: !10103, file: !9860, line: 69, type: !9863)
!10108 = !DILocalVariable(name: "port", arg: 2, scope: !10103, file: !9860, line: 70, type: !1146)
!10109 = !DILocalVariable(name: "pins", arg: 3, scope: !10103, file: !9860, line: 71, type: !132)
!10110 = !DILocalVariable(name: "cb", scope: !10103, file: !9860, line: 73, type: !1188)
!10111 = !DILocalVariable(name: "tmp", scope: !10103, file: !9860, line: 73, type: !1188)
!10112 = !DILocation(line: 0, scope: !10103)
!10113 = !DILocation(line: 75, column: 2, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10103, file: !9860, line: 75, column: 2)
!10115 = !DILocation(line: 0, scope: !10114)
!10116 = !DILocation(line: 76, column: 11, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !9860, line: 76, column: 7)
!10118 = distinct !DILexicalBlock(scope: !10119, file: !9860, line: 75, column: 57)
!10119 = distinct !DILexicalBlock(scope: !10114, file: !9860, line: 75, column: 2)
!10120 = !DILocation(line: 76, column: 20, scope: !10117)
!10121 = !DILocation(line: 76, column: 7, scope: !10118)
!10122 = !DILocation(line: 78, column: 8, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10117, file: !9860, line: 76, column: 28)
!10124 = !DILocation(line: 78, column: 4, scope: !10123)
!10125 = !DILocation(line: 79, column: 3, scope: !10123)
!10126 = !DILocation(line: 75, column: 2, scope: !10119)
!10127 = !DILocation(line: 81, column: 1, scope: !10103)
!10128 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5810, file: !5810, line: 710, type: !7816, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10129)
!10129 = !{!10130}
!10130 = !DILocalVariable(name: "Line", arg: 1, scope: !10128, file: !5810, line: 710, type: !132)
!10131 = !DILocation(line: 0, scope: !10128)
!10132 = !DILocation(line: 712, column: 21, scope: !10128)
!10133 = !DILocation(line: 0, scope: !10087, inlinedAt: !10134)
!10134 = distinct !DILocation(line: 712, column: 76, scope: !10128)
!10135 = !DILocation(line: 380, column: 4, scope: !10087, inlinedAt: !10134)
!10136 = !DILocation(line: 0, scope: !10095, inlinedAt: !10137)
!10137 = distinct !DILocation(line: 712, column: 76, scope: !10128)
!10138 = !DILocation(line: 414, column: 7, scope: !10095, inlinedAt: !10137)
!10139 = !DILocation(line: 712, column: 73, scope: !10128)
!10140 = !DILocation(line: 712, column: 3, scope: !10128)
!10141 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10142, file: !10142, line: 910, type: !10143, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10145)
!10142 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10143 = !DISubroutineType(types: !10144)
!10144 = !{null, !1219, !132}
!10145 = !{!10146, !10147}
!10146 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10141, file: !10142, line: 910, type: !1219)
!10147 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10141, file: !10142, line: 910, type: !132)
!10148 = !DILocation(line: 0, scope: !10141)
!10149 = !DILocation(line: 912, column: 3, scope: !10141)
!10150 = !DILocation(line: 913, column: 1, scope: !10141)
!10151 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10142, file: !10142, line: 823, type: !10152, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10154)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{!132, !1219}
!10154 = !{!10155}
!10155 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10151, file: !10142, line: 823, type: !1219)
!10156 = !DILocation(line: 0, scope: !10151)
!10157 = !DILocation(line: 825, column: 21, scope: !10151)
!10158 = !DILocation(line: 825, column: 3, scope: !10151)
!10159 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10142, file: !10142, line: 812, type: !10143, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10160)
!10160 = !{!10161, !10162}
!10161 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10159, file: !10142, line: 812, type: !1219)
!10162 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10159, file: !10142, line: 812, type: !132)
!10163 = !DILocation(line: 0, scope: !10159)
!10164 = !DILocation(line: 814, column: 3, scope: !10159)
!10165 = !DILocation(line: 815, column: 1, scope: !10159)
!10166 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10142, file: !10142, line: 771, type: !10152, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10167)
!10167 = !{!10168}
!10168 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10166, file: !10142, line: 771, type: !1219)
!10169 = !DILocation(line: 0, scope: !10166)
!10170 = !DILocation(line: 773, column: 21, scope: !10166)
!10171 = !DILocation(line: 773, column: 3, scope: !10166)
!10172 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1286, file: !1286, line: 47, type: !10173, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10175)
!10173 = !DISubroutineType(types: !10174)
!10174 = !{!103, !1162, !2600}
!10175 = !{!10176, !10177}
!10176 = !DILocalVariable(name: "flags", arg: 1, scope: !10172, file: !1286, line: 47, type: !1162)
!10177 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10172, file: !1286, line: 47, type: !2600)
!10178 = !DILocation(line: 0, scope: !10172)
!10179 = !DILocation(line: 50, column: 13, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10172, file: !1286, line: 50, column: 6)
!10181 = !DILocation(line: 50, column: 28, scope: !10180)
!10182 = !DILocation(line: 50, column: 6, scope: !10172)
!10183 = !DILocation(line: 53, column: 11, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10180, file: !1286, line: 50, column: 34)
!10185 = !DILocation(line: 55, column: 14, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10184, file: !1286, line: 55, column: 7)
!10187 = !DILocation(line: 55, column: 35, scope: !10186)
!10188 = !DILocation(line: 55, column: 7, scope: !10184)
!10189 = !DILocation(line: 56, column: 14, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10191, file: !1286, line: 56, column: 8)
!10191 = distinct !DILexicalBlock(scope: !10186, file: !1286, line: 55, column: 41)
!10192 = !DILocation(line: 56, column: 8, scope: !10191)
!10193 = !DILocation(line: 0, scope: !10186)
!10194 = !DILocation(line: 66, column: 14, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10184, file: !1286, line: 66, column: 7)
!10196 = !DILocation(line: 66, column: 30, scope: !10195)
!10197 = !DILocation(line: 66, column: 7, scope: !10184)
!10198 = !DILocation(line: 67, column: 12, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10195, file: !1286, line: 66, column: 36)
!10200 = !DILocation(line: 68, column: 3, scope: !10199)
!10201 = !DILocation(line: 68, column: 21, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10195, file: !1286, line: 68, column: 14)
!10203 = !DILocation(line: 68, column: 39, scope: !10202)
!10204 = !DILocation(line: 68, column: 14, scope: !10195)
!10205 = !DILocation(line: 69, column: 12, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10202, file: !1286, line: 68, column: 45)
!10207 = !DILocation(line: 70, column: 3, scope: !10206)
!10208 = !DILocation(line: 72, column: 21, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10180, file: !1286, line: 72, column: 14)
!10210 = !DILocation(line: 72, column: 35, scope: !10209)
!10211 = !DILocation(line: 72, column: 14, scope: !10180)
!10212 = !DILocation(line: 77, column: 14, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10214, file: !1286, line: 77, column: 7)
!10214 = distinct !DILexicalBlock(scope: !10209, file: !1286, line: 72, column: 41)
!10215 = !DILocation(line: 77, column: 30, scope: !10213)
!10216 = !DILocation(line: 77, column: 7, scope: !10214)
!10217 = !DILocation(line: 0, scope: !10180)
!10218 = !DILocation(line: 90, column: 1, scope: !10172)
!10219 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1286, file: !1286, line: 157, type: !10220, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10222)
!10220 = !DISubroutineType(types: !10221)
!10221 = !{null, !1146, !103, !103, !103}
!10222 = !{!10223, !10224, !10225, !10226, !10227, !10228, !10229, !10230, !10231, !10232, !10233}
!10223 = !DILocalVariable(name: "dev", arg: 1, scope: !10219, file: !1286, line: 157, type: !1146)
!10224 = !DILocalVariable(name: "pin", arg: 2, scope: !10219, file: !1286, line: 157, type: !103)
!10225 = !DILocalVariable(name: "conf", arg: 3, scope: !10219, file: !1286, line: 158, type: !103)
!10226 = !DILocalVariable(name: "func", arg: 4, scope: !10219, file: !1286, line: 158, type: !103)
!10227 = !DILocalVariable(name: "cfg", scope: !10219, file: !1286, line: 160, type: !9744)
!10228 = !DILocalVariable(name: "gpio", scope: !10219, file: !1286, line: 161, type: !1219)
!10229 = !DILocalVariable(name: "pin_ll", scope: !10219, file: !1286, line: 163, type: !103)
!10230 = !DILocalVariable(name: "mode", scope: !10219, file: !1286, line: 227, type: !32)
!10231 = !DILocalVariable(name: "otype", scope: !10219, file: !1286, line: 227, type: !32)
!10232 = !DILocalVariable(name: "ospeed", scope: !10219, file: !1286, line: 227, type: !32)
!10233 = !DILocalVariable(name: "pupd", scope: !10219, file: !1286, line: 227, type: !32)
!10234 = !DILocation(line: 0, scope: !10219)
!10235 = !DILocation(line: 160, column: 45, scope: !10219)
!10236 = !DILocation(line: 161, column: 44, scope: !10219)
!10237 = !DILocation(line: 163, column: 15, scope: !10219)
!10238 = !DILocation(line: 229, column: 14, scope: !10219)
!10239 = !DILocation(line: 246, column: 47, scope: !10219)
!10240 = !DILocation(line: 246, column: 2, scope: !10219)
!10241 = !DILocation(line: 248, column: 43, scope: !10219)
!10242 = !DILocation(line: 248, column: 2, scope: !10219)
!10243 = !DILocation(line: 250, column: 40, scope: !10219)
!10244 = !DILocation(line: 250, column: 2, scope: !10219)
!10245 = !DILocation(line: 252, column: 11, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10219, file: !1286, line: 252, column: 6)
!10247 = !DILocation(line: 252, column: 6, scope: !10219)
!10248 = !DILocation(line: 253, column: 11, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10250, file: !1286, line: 253, column: 7)
!10250 = distinct !DILexicalBlock(scope: !10246, file: !1286, line: 252, column: 36)
!10251 = !DILocation(line: 253, column: 7, scope: !10250)
!10252 = !DILocation(line: 254, column: 4, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10249, file: !1286, line: 253, column: 16)
!10254 = !DILocation(line: 255, column: 3, scope: !10253)
!10255 = !DILocation(line: 256, column: 4, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10249, file: !1286, line: 255, column: 10)
!10257 = !DILocation(line: 260, column: 40, scope: !10219)
!10258 = !DILocation(line: 260, column: 2, scope: !10219)
!10259 = !DILocation(line: 265, column: 1, scope: !10219)
!10260 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1286, file: !1286, line: 137, type: !10067, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10261)
!10261 = !{!10262, !10263}
!10262 = !DILocalVariable(name: "pin", arg: 1, scope: !10260, file: !1286, line: 137, type: !103)
!10263 = !DILocalVariable(name: "pinval", scope: !10260, file: !1286, line: 139, type: !132)
!10264 = !DILocation(line: 0, scope: !10260)
!10265 = !DILocation(line: 149, column: 13, scope: !10260)
!10266 = !DILocation(line: 151, column: 2, scope: !10260)
!10267 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10142, file: !10142, line: 342, type: !10268, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10270)
!10268 = !DISubroutineType(types: !10269)
!10269 = !{null, !1219, !132, !132}
!10270 = !{!10271, !10272, !10273}
!10271 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10267, file: !10142, line: 342, type: !1219)
!10272 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10267, file: !10142, line: 342, type: !132)
!10273 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10267, file: !10142, line: 342, type: !132)
!10274 = !DILocation(line: 0, scope: !10267)
!10275 = !DILocation(line: 344, column: 3, scope: !10267)
!10276 = !DILocation(line: 345, column: 1, scope: !10267)
!10277 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10142, file: !10142, line: 413, type: !10268, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10278)
!10278 = !{!10279, !10280, !10281}
!10279 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10277, file: !10142, line: 413, type: !1219)
!10280 = !DILocalVariable(name: "Pin", arg: 2, scope: !10277, file: !10142, line: 413, type: !132)
!10281 = !DILocalVariable(name: "Speed", arg: 3, scope: !10277, file: !10142, line: 413, type: !132)
!10282 = !DILocation(line: 0, scope: !10277)
!10283 = !DILocation(line: 415, column: 3, scope: !10277)
!10284 = !DILocation(line: 0, scope: !10087, inlinedAt: !10285)
!10285 = distinct !DILocation(line: 415, column: 3, scope: !10277)
!10286 = !DILocation(line: 380, column: 4, scope: !10087, inlinedAt: !10285)
!10287 = !DILocation(line: 0, scope: !10095, inlinedAt: !10288)
!10288 = distinct !DILocation(line: 415, column: 3, scope: !10277)
!10289 = !DILocation(line: 414, column: 7, scope: !10095, inlinedAt: !10288)
!10290 = !DILocation(line: 0, scope: !10087, inlinedAt: !10291)
!10291 = distinct !DILocation(line: 415, column: 3, scope: !10277)
!10292 = !DILocation(line: 0, scope: !10095, inlinedAt: !10293)
!10293 = distinct !DILocation(line: 415, column: 3, scope: !10277)
!10294 = !DILocation(line: 417, column: 1, scope: !10277)
!10295 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10142, file: !10142, line: 484, type: !10268, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10296)
!10296 = !{!10297, !10298, !10299}
!10297 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10295, file: !10142, line: 484, type: !1219)
!10298 = !DILocalVariable(name: "Pin", arg: 2, scope: !10295, file: !10142, line: 484, type: !132)
!10299 = !DILocalVariable(name: "Pull", arg: 3, scope: !10295, file: !10142, line: 484, type: !132)
!10300 = !DILocation(line: 0, scope: !10295)
!10301 = !DILocation(line: 486, column: 3, scope: !10295)
!10302 = !DILocation(line: 0, scope: !10087, inlinedAt: !10303)
!10303 = distinct !DILocation(line: 486, column: 3, scope: !10295)
!10304 = !DILocation(line: 380, column: 4, scope: !10087, inlinedAt: !10303)
!10305 = !DILocation(line: 0, scope: !10095, inlinedAt: !10306)
!10306 = distinct !DILocation(line: 486, column: 3, scope: !10295)
!10307 = !DILocation(line: 414, column: 7, scope: !10095, inlinedAt: !10306)
!10308 = !DILocation(line: 0, scope: !10087, inlinedAt: !10309)
!10309 = distinct !DILocation(line: 486, column: 3, scope: !10295)
!10310 = !DILocation(line: 0, scope: !10095, inlinedAt: !10311)
!10311 = distinct !DILocation(line: 486, column: 3, scope: !10295)
!10312 = !DILocation(line: 487, column: 1, scope: !10295)
!10313 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10142, file: !10142, line: 556, type: !10268, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10314)
!10314 = !{!10315, !10316, !10317}
!10315 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10313, file: !10142, line: 556, type: !1219)
!10316 = !DILocalVariable(name: "Pin", arg: 2, scope: !10313, file: !10142, line: 556, type: !132)
!10317 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10313, file: !10142, line: 556, type: !132)
!10318 = !DILocation(line: 0, scope: !10313)
!10319 = !DILocation(line: 558, column: 3, scope: !10313)
!10320 = !DILocation(line: 0, scope: !10087, inlinedAt: !10321)
!10321 = distinct !DILocation(line: 558, column: 3, scope: !10313)
!10322 = !DILocation(line: 380, column: 4, scope: !10087, inlinedAt: !10321)
!10323 = !DILocation(line: 0, scope: !10095, inlinedAt: !10324)
!10324 = distinct !DILocation(line: 558, column: 3, scope: !10313)
!10325 = !DILocation(line: 414, column: 7, scope: !10095, inlinedAt: !10324)
!10326 = !DILocation(line: 0, scope: !10087, inlinedAt: !10327)
!10327 = distinct !DILocation(line: 558, column: 3, scope: !10313)
!10328 = !DILocation(line: 0, scope: !10095, inlinedAt: !10329)
!10329 = distinct !DILocation(line: 558, column: 3, scope: !10313)
!10330 = !DILocation(line: 560, column: 1, scope: !10313)
!10331 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10142, file: !10142, line: 633, type: !10268, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10332)
!10332 = !{!10333, !10334, !10335}
!10333 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10331, file: !10142, line: 633, type: !1219)
!10334 = !DILocalVariable(name: "Pin", arg: 2, scope: !10331, file: !10142, line: 633, type: !132)
!10335 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10331, file: !10142, line: 633, type: !132)
!10336 = !DILocation(line: 0, scope: !10331)
!10337 = !DILocation(line: 635, column: 3, scope: !10331)
!10338 = !DILocation(line: 0, scope: !10087, inlinedAt: !10339)
!10339 = distinct !DILocation(line: 635, column: 3, scope: !10331)
!10340 = !DILocation(line: 380, column: 4, scope: !10087, inlinedAt: !10339)
!10341 = !DILocation(line: 0, scope: !10095, inlinedAt: !10342)
!10342 = distinct !DILocation(line: 635, column: 3, scope: !10331)
!10343 = !DILocation(line: 414, column: 7, scope: !10095, inlinedAt: !10342)
!10344 = !DILocation(line: 0, scope: !10087, inlinedAt: !10345)
!10345 = distinct !DILocation(line: 635, column: 3, scope: !10331)
!10346 = !DILocation(line: 0, scope: !10095, inlinedAt: !10347)
!10347 = distinct !DILocation(line: 635, column: 3, scope: !10331)
!10348 = !DILocation(line: 637, column: 1, scope: !10331)
!10349 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10142, file: !10142, line: 273, type: !10268, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10350)
!10350 = !{!10351, !10352, !10353}
!10351 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10349, file: !10142, line: 273, type: !1219)
!10352 = !DILocalVariable(name: "Pin", arg: 2, scope: !10349, file: !10142, line: 273, type: !132)
!10353 = !DILocalVariable(name: "Mode", arg: 3, scope: !10349, file: !10142, line: 273, type: !132)
!10354 = !DILocation(line: 0, scope: !10349)
!10355 = !DILocation(line: 275, column: 3, scope: !10349)
!10356 = !DILocation(line: 0, scope: !10087, inlinedAt: !10357)
!10357 = distinct !DILocation(line: 275, column: 3, scope: !10349)
!10358 = !DILocation(line: 380, column: 4, scope: !10087, inlinedAt: !10357)
!10359 = !DILocation(line: 0, scope: !10095, inlinedAt: !10360)
!10360 = distinct !DILocation(line: 275, column: 3, scope: !10349)
!10361 = !DILocation(line: 414, column: 7, scope: !10095, inlinedAt: !10360)
!10362 = !DILocation(line: 0, scope: !10087, inlinedAt: !10363)
!10363 = distinct !DILocation(line: 275, column: 3, scope: !10349)
!10364 = !DILocation(line: 0, scope: !10095, inlinedAt: !10365)
!10365 = distinct !DILocation(line: 275, column: 3, scope: !10349)
!10366 = !DILocation(line: 276, column: 1, scope: !10349)
!10367 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1286, file: !1286, line: 698, type: !1299, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10368)
!10368 = !{!10369, !10370, !10371}
!10369 = !DILocalVariable(name: "dev", arg: 1, scope: !10367, file: !1286, line: 698, type: !1146)
!10370 = !DILocalVariable(name: "data", scope: !10367, file: !1286, line: 700, type: !9811)
!10371 = !DILocalVariable(name: "ret", scope: !10367, file: !1286, line: 701, type: !103)
!10372 = !DILocation(line: 0, scope: !10367)
!10373 = !DILocation(line: 700, column: 38, scope: !10367)
!10374 = !DILocation(line: 703, column: 8, scope: !10367)
!10375 = !DILocation(line: 703, column: 12, scope: !10367)
!10376 = !DILocation(line: 705, column: 7, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10367, file: !1286, line: 705, column: 6)
!10378 = !DILocation(line: 705, column: 6, scope: !10367)
!10379 = !DILocation(line: 722, column: 8, scope: !10367)
!10380 = !DILocation(line: 723, column: 10, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10367, file: !1286, line: 723, column: 6)
!10382 = !DILocation(line: 723, column: 6, scope: !10367)
!10383 = !DILocation(line: 731, column: 1, scope: !10367)
!10384 = distinct !DISubprogram(name: "device_is_ready", scope: !6650, file: !6650, line: 47, type: !10385, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10387)
!10385 = !DISubroutineType(types: !10386)
!10386 = !{!166, !1146}
!10387 = !{!10388}
!10388 = !DILocalVariable(name: "dev", arg: 1, scope: !10384, file: !6650, line: 47, type: !1146)
!10389 = !DILocation(line: 0, scope: !10384)
!10390 = !DILocation(line: 55, column: 2, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10384, file: !6650, line: 55, column: 2)
!10392 = !{i64 2154257471}
!10393 = !DILocation(line: 56, column: 9, scope: !10384)
!10394 = !DILocation(line: 56, column: 2, scope: !10384)
!10395 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1286, file: !1286, line: 270, type: !10396, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10398)
!10396 = !DISubroutineType(types: !10397)
!10397 = !{!103, !1146, !166}
!10398 = !{!10399, !10400, !10401, !10402, !10403}
!10399 = !DILocalVariable(name: "dev", arg: 1, scope: !10395, file: !1286, line: 270, type: !1146)
!10400 = !DILocalVariable(name: "on", arg: 2, scope: !10395, file: !1286, line: 270, type: !166)
!10401 = !DILocalVariable(name: "cfg", scope: !10395, file: !1286, line: 272, type: !9744)
!10402 = !DILocalVariable(name: "ret", scope: !10395, file: !1286, line: 273, type: !103)
!10403 = !DILocalVariable(name: "clk", scope: !10395, file: !1286, line: 278, type: !10034)
!10404 = !DILocation(line: 0, scope: !10395)
!10405 = !DILocation(line: 272, column: 45, scope: !10395)
!10406 = !DILocation(line: 282, column: 38, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10408, file: !1286, line: 280, column: 10)
!10408 = distinct !DILexicalBlock(scope: !10395, file: !1286, line: 280, column: 6)
!10409 = !DILocation(line: 282, column: 6, scope: !10407)
!10410 = !DILocation(line: 281, column: 9, scope: !10407)
!10411 = !DILocation(line: 293, column: 1, scope: !10395)
!10412 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !10385, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10413)
!10413 = !{!10414}
!10414 = !DILocalVariable(name: "dev", arg: 1, scope: !10412, file: !152, line: 730, type: !1146)
!10415 = !DILocation(line: 0, scope: !10412)
!10416 = !DILocation(line: 732, column: 9, scope: !10412)
!10417 = !DILocation(line: 732, column: 2, scope: !10412)
!10418 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1286, file: !1286, line: 496, type: !10419, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1117, retainedNodes: !10421)
!10419 = !DISubroutineType(types: !10420)
!10420 = !{!103, !1146, !103, !103, !103}
!10421 = !{!10422, !10423, !10424, !10425, !10426, !10427}
!10422 = !DILocalVariable(name: "dev", arg: 1, scope: !10418, file: !1286, line: 496, type: !1146)
!10423 = !DILocalVariable(name: "pin", arg: 2, scope: !10418, file: !1286, line: 496, type: !103)
!10424 = !DILocalVariable(name: "conf", arg: 3, scope: !10418, file: !1286, line: 496, type: !103)
!10425 = !DILocalVariable(name: "func", arg: 4, scope: !10418, file: !1286, line: 496, type: !103)
!10426 = !DILocalVariable(name: "ret", scope: !10418, file: !1286, line: 498, type: !103)
!10427 = !DILocalVariable(name: "gpio_out", scope: !10428, file: !1286, line: 508, type: !132)
!10428 = distinct !DILexicalBlock(scope: !10429, file: !1286, line: 507, column: 27)
!10429 = distinct !DILexicalBlock(scope: !10418, file: !1286, line: 507, column: 6)
!10430 = !DILocation(line: 0, scope: !10418)
!10431 = !DILocation(line: 505, column: 2, scope: !10418)
!10432 = !DILocation(line: 507, column: 11, scope: !10429)
!10433 = !DILocation(line: 507, column: 6, scope: !10418)
!10434 = !DILocation(line: 508, column: 28, scope: !10428)
!10435 = !DILocation(line: 0, scope: !10428)
!10436 = !DILocation(line: 510, column: 16, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10428, file: !1286, line: 510, column: 7)
!10438 = !DILocation(line: 0, scope: !10437)
!10439 = !DILocation(line: 510, column: 7, scope: !10428)
!10440 = !DILocation(line: 511, column: 4, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10437, file: !1286, line: 510, column: 32)
!10442 = !DILocation(line: 512, column: 3, scope: !10441)
!10443 = !DILocation(line: 513, column: 4, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !1286, line: 512, column: 39)
!10445 = distinct !DILexicalBlock(scope: !10437, file: !1286, line: 512, column: 14)
!10446 = !DILocation(line: 514, column: 3, scope: !10444)
!10447 = !DILocation(line: 518, column: 1, scope: !10418)
!10448 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1591, file: !1591, line: 526, type: !1462, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10449)
!10449 = !{!10450, !10451, !10452}
!10450 = !DILocalVariable(name: "dev", arg: 1, scope: !10448, file: !1591, line: 526, type: !1464)
!10451 = !DILocalVariable(name: "c", arg: 2, scope: !10448, file: !1591, line: 526, type: !233)
!10452 = !DILocalVariable(name: "config", scope: !10448, file: !1591, line: 528, type: !10453)
!10453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 32)
!10454 = !DILocation(line: 0, scope: !10448)
!10455 = !DILocation(line: 528, column: 48, scope: !10448)
!10456 = !DILocation(line: 531, column: 40, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10448, file: !1591, line: 531, column: 6)
!10458 = !DILocation(line: 531, column: 6, scope: !10457)
!10459 = !DILocation(line: 531, column: 6, scope: !10448)
!10460 = !DILocation(line: 532, column: 34, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10457, file: !1591, line: 531, column: 48)
!10462 = !DILocation(line: 532, column: 3, scope: !10461)
!10463 = !DILocation(line: 533, column: 2, scope: !10461)
!10464 = !DILocation(line: 539, column: 42, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10448, file: !1591, line: 539, column: 6)
!10466 = !DILocation(line: 539, column: 7, scope: !10465)
!10467 = !DILocation(line: 539, column: 6, scope: !10448)
!10468 = !DILocation(line: 543, column: 52, scope: !10448)
!10469 = !DILocation(line: 543, column: 22, scope: !10448)
!10470 = !DILocation(line: 543, column: 5, scope: !10448)
!10471 = !DILocation(line: 545, column: 2, scope: !10448)
!10472 = !DILocation(line: 546, column: 1, scope: !10448)
!10473 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1591, file: !1591, line: 548, type: !1481, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10474)
!10474 = !{!10475, !10476, !10477, !10478}
!10475 = !DILocalVariable(name: "dev", arg: 1, scope: !10473, file: !1591, line: 548, type: !1464)
!10476 = !DILocalVariable(name: "c", arg: 2, scope: !10473, file: !1591, line: 549, type: !164)
!10477 = !DILocalVariable(name: "config", scope: !10473, file: !1591, line: 551, type: !10453)
!10478 = !DILocalVariable(name: "key", scope: !10473, file: !1591, line: 555, type: !32)
!10479 = !DILocation(line: 0, scope: !10473)
!10480 = !DILocation(line: 551, column: 48, scope: !10473)
!10481 = !DILocation(line: 562, column: 2, scope: !10473)
!10482 = !DILocation(line: 563, column: 41, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10484, file: !1591, line: 563, column: 7)
!10484 = distinct !DILexicalBlock(scope: !10473, file: !1591, line: 562, column: 12)
!10485 = !DILocation(line: 563, column: 7, scope: !10483)
!10486 = !DILocation(line: 563, column: 7, scope: !10484)
!10487 = !DILocation(line: 55, column: 2, scope: !10488, inlinedAt: !10492)
!10488 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5789, file: !5789, line: 42, type: !5790, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10489)
!10489 = !{!10490, !10491}
!10490 = !DILocalVariable(name: "key", scope: !10488, file: !5789, line: 44, type: !32)
!10491 = !DILocalVariable(name: "tmp", scope: !10488, file: !5789, line: 53, type: !32)
!10492 = distinct !DILocation(line: 564, column: 10, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10483, file: !1591, line: 563, column: 49)
!10494 = !{i64 1997421}
!10495 = !DILocation(line: 0, scope: !10488, inlinedAt: !10492)
!10496 = !DILocation(line: 565, column: 42, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10493, file: !1591, line: 565, column: 8)
!10498 = !DILocation(line: 565, column: 8, scope: !10497)
!10499 = !DILocation(line: 565, column: 8, scope: !10493)
!10500 = !DILocalVariable(name: "key", arg: 1, scope: !10501, file: !5789, line: 84, type: !32)
!10501 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5789, file: !5789, line: 84, type: !5800, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10502)
!10502 = !{!10500}
!10503 = !DILocation(line: 0, scope: !10501, inlinedAt: !10504)
!10504 = distinct !DILocation(line: 568, column: 4, scope: !10493)
!10505 = !DILocation(line: 95, column: 2, scope: !10501, inlinedAt: !10504)
!10506 = !{i64 1998238}
!10507 = !DILocation(line: 569, column: 3, scope: !10493)
!10508 = distinct !{!10508, !10481, !10509}
!10509 = !DILocation(line: 570, column: 2, scope: !10473)
!10510 = !DILocation(line: 592, column: 33, scope: !10473)
!10511 = !DILocation(line: 592, column: 2, scope: !10473)
!10512 = !DILocation(line: 0, scope: !10501, inlinedAt: !10513)
!10513 = distinct !DILocation(line: 593, column: 2, scope: !10473)
!10514 = !DILocation(line: 95, column: 2, scope: !10501, inlinedAt: !10513)
!10515 = !DILocation(line: 594, column: 1, scope: !10473)
!10516 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1591, file: !1591, line: 596, type: !1485, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10517)
!10517 = !{!10518, !10519, !10520}
!10518 = !DILocalVariable(name: "dev", arg: 1, scope: !10516, file: !1591, line: 596, type: !1464)
!10519 = !DILocalVariable(name: "config", scope: !10516, file: !1591, line: 598, type: !10453)
!10520 = !DILocalVariable(name: "err", scope: !10516, file: !1591, line: 599, type: !132)
!10521 = !DILocation(line: 0, scope: !10516)
!10522 = !DILocation(line: 598, column: 48, scope: !10516)
!10523 = !DILocation(line: 606, column: 40, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10516, file: !1591, line: 606, column: 6)
!10525 = !DILocation(line: 606, column: 6, scope: !10524)
!10526 = !DILocation(line: 606, column: 6, scope: !10516)
!10527 = !DILocation(line: 610, column: 39, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10516, file: !1591, line: 610, column: 6)
!10529 = !DILocation(line: 610, column: 6, scope: !10528)
!10530 = !DILocation(line: 610, column: 6, scope: !10516)
!10531 = !DILocation(line: 614, column: 39, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10516, file: !1591, line: 614, column: 6)
!10533 = !DILocation(line: 614, column: 6, scope: !10532)
!10534 = !DILocation(line: 614, column: 6, scope: !10516)
!10535 = !DILocation(line: 619, column: 40, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10516, file: !1591, line: 619, column: 6)
!10537 = !DILocation(line: 619, column: 6, scope: !10536)
!10538 = !DILocation(line: 619, column: 6, scope: !10516)
!10539 = !DILocation(line: 623, column: 10, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10516, file: !1591, line: 623, column: 6)
!10541 = !DILocation(line: 623, column: 6, scope: !10516)
!10542 = !DILocation(line: 624, column: 34, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10540, file: !1591, line: 623, column: 24)
!10544 = !DILocation(line: 624, column: 3, scope: !10543)
!10545 = !DILocation(line: 625, column: 2, scope: !10543)
!10546 = !DILocation(line: 632, column: 10, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10516, file: !1591, line: 632, column: 6)
!10548 = !DILocation(line: 632, column: 6, scope: !10516)
!10549 = !DILocation(line: 633, column: 34, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10547, file: !1591, line: 632, column: 32)
!10551 = !DILocation(line: 633, column: 3, scope: !10550)
!10552 = !DILocation(line: 634, column: 2, scope: !10550)
!10553 = !DILocation(line: 636, column: 10, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10516, file: !1591, line: 636, column: 6)
!10555 = !DILocation(line: 636, column: 6, scope: !10516)
!10556 = !DILocation(line: 637, column: 33, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10554, file: !1591, line: 636, column: 31)
!10558 = !DILocation(line: 637, column: 3, scope: !10557)
!10559 = !DILocation(line: 638, column: 2, scope: !10557)
!10560 = !DILocation(line: 640, column: 10, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10516, file: !1591, line: 640, column: 6)
!10562 = !DILocation(line: 640, column: 6, scope: !10516)
!10563 = !DILocation(line: 641, column: 33, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10561, file: !1591, line: 640, column: 32)
!10565 = !DILocation(line: 641, column: 3, scope: !10564)
!10566 = !DILocation(line: 642, column: 2, scope: !10564)
!10567 = !DILocation(line: 646, column: 32, scope: !10516)
!10568 = !DILocation(line: 646, column: 2, scope: !10516)
!10569 = !DILocation(line: 648, column: 2, scope: !10516)
!10570 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1591, file: !1591, line: 419, type: !1489, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10571)
!10571 = !{!10572, !10573, !10574, !10575, !10577, !10578, !10579, !10580}
!10572 = !DILocalVariable(name: "dev", arg: 1, scope: !10570, file: !1591, line: 419, type: !1464)
!10573 = !DILocalVariable(name: "cfg", arg: 2, scope: !10570, file: !1591, line: 420, type: !1491)
!10574 = !DILocalVariable(name: "config", scope: !10570, file: !1591, line: 422, type: !10453)
!10575 = !DILocalVariable(name: "data", scope: !10570, file: !1591, line: 423, type: !10576)
!10576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!10577 = !DILocalVariable(name: "parity", scope: !10570, file: !1591, line: 424, type: !7077)
!10578 = !DILocalVariable(name: "stopbits", scope: !10570, file: !1591, line: 425, type: !7077)
!10579 = !DILocalVariable(name: "databits", scope: !10570, file: !1591, line: 426, type: !7077)
!10580 = !DILocalVariable(name: "flowctrl", scope: !10570, file: !1591, line: 428, type: !7077)
!10581 = !DILocation(line: 0, scope: !10570)
!10582 = !DILocation(line: 422, column: 48, scope: !10570)
!10583 = !DILocation(line: 423, column: 38, scope: !10570)
!10584 = !DILocation(line: 424, column: 56, scope: !10570)
!10585 = !DILocation(line: 424, column: 51, scope: !10570)
!10586 = !DILocation(line: 424, column: 26, scope: !10570)
!10587 = !DILocation(line: 425, column: 60, scope: !10570)
!10588 = !DILocation(line: 425, column: 55, scope: !10570)
!10589 = !DILocation(line: 425, column: 28, scope: !10570)
!10590 = !DILocation(line: 426, column: 60, scope: !10570)
!10591 = !DILocation(line: 426, column: 55, scope: !10570)
!10592 = !DILocation(line: 426, column: 28, scope: !10570)
!10593 = !DILocation(line: 428, column: 58, scope: !10570)
!10594 = !DILocation(line: 428, column: 53, scope: !10570)
!10595 = !DILocation(line: 428, column: 28, scope: !10570)
!10596 = !DILocation(line: 431, column: 44, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10570, file: !1591, line: 431, column: 6)
!10598 = !DILocation(line: 438, column: 22, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10570, file: !1591, line: 437, column: 6)
!10600 = !DILocation(line: 437, column: 6, scope: !10570)
!10601 = !DILocation(line: 448, column: 6, scope: !10570)
!10602 = !DILocation(line: 465, column: 47, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10570, file: !1591, line: 465, column: 6)
!10604 = !DILocation(line: 475, column: 21, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10570, file: !1591, line: 475, column: 6)
!10606 = !DILocation(line: 475, column: 6, scope: !10570)
!10607 = !DILocation(line: 476, column: 8, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10609, file: !1591, line: 476, column: 7)
!10609 = distinct !DILexicalBlock(scope: !10605, file: !1591, line: 475, column: 49)
!10610 = !DILocation(line: 477, column: 34, scope: !10608)
!10611 = !DILocation(line: 476, column: 7, scope: !10609)
!10612 = !DILocation(line: 482, column: 27, scope: !10570)
!10613 = !DILocation(line: 482, column: 2, scope: !10570)
!10614 = !DILocation(line: 484, column: 16, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10570, file: !1591, line: 484, column: 6)
!10616 = !DILocation(line: 484, column: 13, scope: !10615)
!10617 = !DILocation(line: 484, column: 6, scope: !10570)
!10618 = !DILocation(line: 485, column: 3, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10615, file: !1591, line: 484, column: 44)
!10620 = !DILocation(line: 486, column: 2, scope: !10619)
!10621 = !DILocation(line: 488, column: 18, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10570, file: !1591, line: 488, column: 6)
!10623 = !DILocation(line: 488, column: 15, scope: !10622)
!10624 = !DILocation(line: 488, column: 6, scope: !10570)
!10625 = !DILocation(line: 489, column: 3, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10622, file: !1591, line: 488, column: 48)
!10627 = !DILocation(line: 490, column: 2, scope: !10626)
!10628 = !DILocation(line: 492, column: 18, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10570, file: !1591, line: 492, column: 6)
!10630 = !DILocation(line: 492, column: 15, scope: !10629)
!10631 = !DILocation(line: 492, column: 6, scope: !10570)
!10632 = !DILocation(line: 493, column: 3, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10629, file: !1591, line: 492, column: 48)
!10634 = !DILocation(line: 494, column: 2, scope: !10633)
!10635 = !DILocation(line: 496, column: 18, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10570, file: !1591, line: 496, column: 6)
!10637 = !DILocation(line: 496, column: 15, scope: !10636)
!10638 = !DILocation(line: 496, column: 6, scope: !10570)
!10639 = !DILocation(line: 497, column: 3, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10636, file: !1591, line: 496, column: 46)
!10641 = !DILocation(line: 498, column: 2, scope: !10640)
!10642 = !DILocation(line: 500, column: 11, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10570, file: !1591, line: 500, column: 6)
!10644 = !DILocation(line: 500, column: 29, scope: !10643)
!10645 = !DILocation(line: 500, column: 20, scope: !10643)
!10646 = !DILocation(line: 500, column: 6, scope: !10570)
!10647 = !DILocation(line: 501, column: 3, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10643, file: !1591, line: 500, column: 40)
!10649 = !DILocation(line: 502, column: 26, scope: !10648)
!10650 = !DILocation(line: 502, column: 19, scope: !10648)
!10651 = !DILocation(line: 503, column: 2, scope: !10648)
!10652 = !DILocation(line: 505, column: 26, scope: !10570)
!10653 = !DILocation(line: 505, column: 2, scope: !10570)
!10654 = !DILocation(line: 506, column: 2, scope: !10570)
!10655 = !DILocation(line: 507, column: 1, scope: !10570)
!10656 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1591, file: !1591, line: 509, type: !1502, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10657)
!10657 = !{!10658, !10659, !10660}
!10658 = !DILocalVariable(name: "dev", arg: 1, scope: !10656, file: !1591, line: 509, type: !1464)
!10659 = !DILocalVariable(name: "cfg", arg: 2, scope: !10656, file: !1591, line: 510, type: !1504)
!10660 = !DILocalVariable(name: "data", scope: !10656, file: !1591, line: 512, type: !10576)
!10661 = !DILocation(line: 0, scope: !10656)
!10662 = !DILocation(line: 512, column: 38, scope: !10656)
!10663 = !DILocation(line: 514, column: 24, scope: !10656)
!10664 = !DILocation(line: 514, column: 7, scope: !10656)
!10665 = !DILocation(line: 514, column: 16, scope: !10656)
!10666 = !DILocation(line: 515, column: 41, scope: !10656)
!10667 = !{i32 0, i32 1537}
!10668 = !DILocation(line: 515, column: 16, scope: !10656)
!10669 = !DILocation(line: 515, column: 7, scope: !10656)
!10670 = !DILocation(line: 515, column: 14, scope: !10656)
!10671 = !DILocation(line: 517, column: 3, scope: !10656)
!10672 = !{i32 0, i32 12289}
!10673 = !DILocation(line: 516, column: 19, scope: !10656)
!10674 = !DILocation(line: 516, column: 7, scope: !10656)
!10675 = !DILocation(line: 516, column: 17, scope: !10656)
!10676 = !DILocation(line: 519, column: 3, scope: !10656)
!10677 = !DILocation(line: 519, column: 33, scope: !10656)
!10678 = !DILocation(line: 518, column: 19, scope: !10656)
!10679 = !DILocation(line: 518, column: 7, scope: !10656)
!10680 = !DILocation(line: 518, column: 17, scope: !10656)
!10681 = !DILocation(line: 521, column: 3, scope: !10656)
!10682 = !{i32 0, i32 769}
!10683 = !DILocation(line: 520, column: 19, scope: !10656)
!10684 = !DILocation(line: 520, column: 7, scope: !10656)
!10685 = !DILocation(line: 520, column: 17, scope: !10656)
!10686 = !DILocation(line: 522, column: 2, scope: !10656)
!10687 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1591, file: !1591, line: 661, type: !1507, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10688)
!10688 = !{!10689, !10690, !10691, !10692, !10693, !10694}
!10689 = !DILocalVariable(name: "dev", arg: 1, scope: !10687, file: !1591, line: 661, type: !1464)
!10690 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10687, file: !1591, line: 662, type: !264)
!10691 = !DILocalVariable(name: "size", arg: 3, scope: !10687, file: !1591, line: 663, type: !103)
!10692 = !DILocalVariable(name: "config", scope: !10687, file: !1591, line: 665, type: !10453)
!10693 = !DILocalVariable(name: "num_tx", scope: !10687, file: !1591, line: 666, type: !163)
!10694 = !DILocalVariable(name: "key", scope: !10687, file: !1591, line: 667, type: !32)
!10695 = !DILocation(line: 0, scope: !10687)
!10696 = !DILocation(line: 665, column: 48, scope: !10687)
!10697 = !DILocation(line: 669, column: 41, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10687, file: !1591, line: 669, column: 6)
!10699 = !DILocation(line: 669, column: 7, scope: !10698)
!10700 = !DILocation(line: 669, column: 6, scope: !10687)
!10701 = !DILocation(line: 55, column: 2, scope: !10488, inlinedAt: !10702)
!10702 = distinct !DILocation(line: 674, column: 8, scope: !10687)
!10703 = !DILocation(line: 0, scope: !10488, inlinedAt: !10702)
!10704 = !DILocation(line: 676, column: 24, scope: !10687)
!10705 = !DILocation(line: 676, column: 29, scope: !10687)
!10706 = !DILocation(line: 677, column: 43, scope: !10687)
!10707 = !DILocation(line: 677, column: 9, scope: !10687)
!10708 = !DILocation(line: 676, column: 2, scope: !10687)
!10709 = !DILocation(line: 681, column: 34, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10687, file: !1591, line: 677, column: 51)
!10711 = !DILocation(line: 681, column: 55, scope: !10710)
!10712 = !DILocation(line: 681, column: 41, scope: !10710)
!10713 = !DILocation(line: 681, column: 3, scope: !10710)
!10714 = !DILocation(line: 676, column: 17, scope: !10687)
!10715 = distinct !{!10715, !10708, !10716}
!10716 = !DILocation(line: 682, column: 2, scope: !10687)
!10717 = !DILocation(line: 0, scope: !10501, inlinedAt: !10718)
!10718 = distinct !DILocation(line: 684, column: 2, scope: !10687)
!10719 = !DILocation(line: 95, column: 2, scope: !10501, inlinedAt: !10718)
!10720 = !DILocation(line: 686, column: 2, scope: !10687)
!10721 = !DILocation(line: 687, column: 1, scope: !10687)
!10722 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1591, file: !1591, line: 689, type: !1511, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10723)
!10723 = !{!10724, !10725, !10726, !10727, !10728}
!10724 = !DILocalVariable(name: "dev", arg: 1, scope: !10722, file: !1591, line: 689, type: !1464)
!10725 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10722, file: !1591, line: 689, type: !270)
!10726 = !DILocalVariable(name: "size", arg: 3, scope: !10722, file: !1591, line: 690, type: !271)
!10727 = !DILocalVariable(name: "config", scope: !10722, file: !1591, line: 692, type: !10453)
!10728 = !DILocalVariable(name: "num_rx", scope: !10722, file: !1591, line: 693, type: !163)
!10729 = !DILocation(line: 0, scope: !10722)
!10730 = !DILocation(line: 692, column: 48, scope: !10722)
!10731 = !DILocation(line: 696, column: 44, scope: !10722)
!10732 = !DILocation(line: 695, column: 24, scope: !10722)
!10733 = !DILocation(line: 695, column: 29, scope: !10722)
!10734 = !DILocation(line: 696, column: 9, scope: !10722)
!10735 = !DILocation(line: 695, column: 2, scope: !10722)
!10736 = !DILocation(line: 700, column: 53, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10722, file: !1591, line: 696, column: 52)
!10738 = !DILocation(line: 700, column: 23, scope: !10737)
!10739 = !DILocation(line: 700, column: 17, scope: !10737)
!10740 = !DILocation(line: 700, column: 3, scope: !10737)
!10741 = !DILocation(line: 700, column: 21, scope: !10737)
!10742 = !DILocation(line: 703, column: 41, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10737, file: !1591, line: 703, column: 7)
!10744 = !DILocation(line: 703, column: 7, scope: !10743)
!10745 = !DILocation(line: 703, column: 7, scope: !10737)
!10746 = !DILocation(line: 704, column: 35, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10743, file: !1591, line: 703, column: 49)
!10748 = !DILocation(line: 704, column: 4, scope: !10747)
!10749 = !DILocation(line: 709, column: 3, scope: !10747)
!10750 = !DILocation(line: 695, column: 17, scope: !10722)
!10751 = distinct !{!10751, !10735, !10752}
!10752 = !DILocation(line: 710, column: 2, scope: !10722)
!10753 = !DILocation(line: 712, column: 2, scope: !10722)
!10754 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1591, file: !1591, line: 715, type: !1515, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10755)
!10755 = !{!10756, !10757}
!10756 = !DILocalVariable(name: "dev", arg: 1, scope: !10754, file: !1591, line: 715, type: !1464)
!10757 = !DILocalVariable(name: "config", scope: !10754, file: !1591, line: 717, type: !10453)
!10758 = !DILocation(line: 0, scope: !10754)
!10759 = !DILocation(line: 717, column: 48, scope: !10754)
!10760 = !DILocation(line: 729, column: 31, scope: !10754)
!10761 = !DILocation(line: 729, column: 2, scope: !10754)
!10762 = !DILocation(line: 734, column: 1, scope: !10754)
!10763 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1591, file: !1591, line: 736, type: !1515, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10764)
!10764 = !{!10765, !10766}
!10765 = !DILocalVariable(name: "dev", arg: 1, scope: !10763, file: !1591, line: 736, type: !1464)
!10766 = !DILocalVariable(name: "config", scope: !10763, file: !1591, line: 738, type: !10453)
!10767 = !DILocation(line: 0, scope: !10763)
!10768 = !DILocation(line: 738, column: 48, scope: !10763)
!10769 = !DILocation(line: 746, column: 32, scope: !10763)
!10770 = !DILocation(line: 746, column: 2, scope: !10763)
!10771 = !DILocation(line: 756, column: 1, scope: !10763)
!10772 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1591, file: !1591, line: 758, type: !1485, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10773)
!10773 = !{!10774, !10775}
!10774 = !DILocalVariable(name: "dev", arg: 1, scope: !10772, file: !1591, line: 758, type: !1464)
!10775 = !DILocalVariable(name: "config", scope: !10772, file: !1591, line: 760, type: !10453)
!10776 = !DILocation(line: 0, scope: !10772)
!10777 = !DILocation(line: 760, column: 48, scope: !10772)
!10778 = !DILocation(line: 762, column: 43, scope: !10772)
!10779 = !DILocation(line: 762, column: 9, scope: !10772)
!10780 = !DILocation(line: 762, column: 50, scope: !10772)
!10781 = !DILocation(line: 763, column: 35, scope: !10772)
!10782 = !DILocation(line: 763, column: 3, scope: !10772)
!10783 = !DILocation(line: 762, column: 2, scope: !10772)
!10784 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1591, file: !1591, line: 773, type: !1515, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10785)
!10785 = !{!10786, !10787}
!10786 = !DILocalVariable(name: "dev", arg: 1, scope: !10784, file: !1591, line: 773, type: !1464)
!10787 = !DILocalVariable(name: "config", scope: !10784, file: !1591, line: 775, type: !10453)
!10788 = !DILocation(line: 0, scope: !10784)
!10789 = !DILocation(line: 775, column: 48, scope: !10784)
!10790 = !DILocation(line: 777, column: 33, scope: !10784)
!10791 = !DILocation(line: 777, column: 2, scope: !10784)
!10792 = !DILocation(line: 778, column: 1, scope: !10784)
!10793 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1591, file: !1591, line: 780, type: !1515, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10794)
!10794 = !{!10795, !10796}
!10795 = !DILocalVariable(name: "dev", arg: 1, scope: !10793, file: !1591, line: 780, type: !1464)
!10796 = !DILocalVariable(name: "config", scope: !10793, file: !1591, line: 782, type: !10453)
!10797 = !DILocation(line: 0, scope: !10793)
!10798 = !DILocation(line: 782, column: 48, scope: !10793)
!10799 = !DILocation(line: 784, column: 34, scope: !10793)
!10800 = !DILocation(line: 784, column: 2, scope: !10793)
!10801 = !DILocation(line: 785, column: 1, scope: !10793)
!10802 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1591, file: !1591, line: 766, type: !1485, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10803)
!10803 = !{!10804, !10805}
!10804 = !DILocalVariable(name: "dev", arg: 1, scope: !10802, file: !1591, line: 766, type: !1464)
!10805 = !DILocalVariable(name: "config", scope: !10802, file: !1591, line: 768, type: !10453)
!10806 = !DILocation(line: 0, scope: !10802)
!10807 = !DILocation(line: 768, column: 48, scope: !10802)
!10808 = !DILocation(line: 770, column: 42, scope: !10802)
!10809 = !DILocation(line: 770, column: 9, scope: !10802)
!10810 = !DILocation(line: 770, column: 2, scope: !10802)
!10811 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1591, file: !1591, line: 787, type: !1485, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10812)
!10812 = !{!10813, !10814}
!10813 = !DILocalVariable(name: "dev", arg: 1, scope: !10811, file: !1591, line: 787, type: !1464)
!10814 = !DILocalVariable(name: "config", scope: !10811, file: !1591, line: 789, type: !10453)
!10815 = !DILocation(line: 0, scope: !10811)
!10816 = !DILocation(line: 789, column: 48, scope: !10811)
!10817 = !DILocation(line: 794, column: 44, scope: !10811)
!10818 = !DILocation(line: 794, column: 9, scope: !10811)
!10819 = !DILocation(line: 794, column: 2, scope: !10811)
!10820 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1591, file: !1591, line: 797, type: !1515, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10821)
!10821 = !{!10822, !10823}
!10822 = !DILocalVariable(name: "dev", arg: 1, scope: !10820, file: !1591, line: 797, type: !1464)
!10823 = !DILocalVariable(name: "config", scope: !10820, file: !1591, line: 799, type: !10453)
!10824 = !DILocation(line: 0, scope: !10820)
!10825 = !DILocation(line: 799, column: 48, scope: !10820)
!10826 = !DILocation(line: 802, column: 34, scope: !10820)
!10827 = !DILocation(line: 802, column: 2, scope: !10820)
!10828 = !DILocation(line: 805, column: 6, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10820, file: !1591, line: 805, column: 6)
!10830 = !DILocation(line: 806, column: 3, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10829, file: !1591, line: 805, column: 43)
!10832 = !DILocation(line: 810, column: 31, scope: !10820)
!10833 = !DILocation(line: 807, column: 2, scope: !10831)
!10834 = !DILocation(line: 810, column: 2, scope: !10820)
!10835 = !DILocation(line: 811, column: 1, scope: !10820)
!10836 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1591, file: !1591, line: 813, type: !1515, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10837)
!10837 = !{!10838, !10839}
!10838 = !DILocalVariable(name: "dev", arg: 1, scope: !10836, file: !1591, line: 813, type: !1464)
!10839 = !DILocalVariable(name: "config", scope: !10836, file: !1591, line: 815, type: !10453)
!10840 = !DILocation(line: 0, scope: !10836)
!10841 = !DILocation(line: 815, column: 48, scope: !10836)
!10842 = !DILocation(line: 818, column: 35, scope: !10836)
!10843 = !DILocation(line: 818, column: 2, scope: !10836)
!10844 = !DILocation(line: 821, column: 6, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10836, file: !1591, line: 821, column: 6)
!10846 = !DILocation(line: 822, column: 3, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10845, file: !1591, line: 821, column: 43)
!10848 = !DILocation(line: 826, column: 32, scope: !10836)
!10849 = !DILocation(line: 823, column: 2, scope: !10847)
!10850 = !DILocation(line: 826, column: 2, scope: !10836)
!10851 = !DILocation(line: 827, column: 1, scope: !10836)
!10852 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1591, file: !1591, line: 829, type: !1485, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10853)
!10853 = !{!10854, !10855}
!10854 = !DILocalVariable(name: "dev", arg: 1, scope: !10852, file: !1591, line: 829, type: !1464)
!10855 = !DILocalVariable(name: "config", scope: !10852, file: !1591, line: 831, type: !10453)
!10856 = !DILocation(line: 0, scope: !10852)
!10857 = !DILocation(line: 831, column: 48, scope: !10852)
!10858 = !DILocation(line: 833, column: 46, scope: !10852)
!10859 = !DILocation(line: 833, column: 11, scope: !10852)
!10860 = !DILocation(line: 833, column: 53, scope: !10852)
!10861 = !DILocation(line: 834, column: 38, scope: !10852)
!10862 = !DILocation(line: 834, column: 4, scope: !10852)
!10863 = !DILocation(line: 834, column: 46, scope: !10852)
!10864 = !DILocation(line: 835, column: 37, scope: !10852)
!10865 = !DILocation(line: 835, column: 4, scope: !10852)
!10866 = !DILocation(line: 835, column: 44, scope: !10852)
!10867 = !DILocation(line: 836, column: 36, scope: !10852)
!10868 = !DILocation(line: 836, column: 4, scope: !10852)
!10869 = !DILocation(line: 833, column: 2, scope: !10852)
!10870 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1591, file: !1591, line: 839, type: !1485, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10871)
!10871 = !{!10872}
!10872 = !DILocalVariable(name: "dev", arg: 1, scope: !10870, file: !1591, line: 839, type: !1464)
!10873 = !DILocation(line: 0, scope: !10870)
!10874 = !DILocation(line: 841, column: 2, scope: !10870)
!10875 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1591, file: !1591, line: 844, type: !1529, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10876)
!10876 = !{!10877, !10878, !10879, !10880}
!10877 = !DILocalVariable(name: "dev", arg: 1, scope: !10875, file: !1591, line: 844, type: !1464)
!10878 = !DILocalVariable(name: "cb", arg: 2, scope: !10875, file: !1591, line: 845, type: !1531)
!10879 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10875, file: !1591, line: 846, type: !102)
!10880 = !DILocalVariable(name: "data", scope: !10875, file: !1591, line: 848, type: !10576)
!10881 = !DILocation(line: 0, scope: !10875)
!10882 = !DILocation(line: 848, column: 38, scope: !10875)
!10883 = !DILocation(line: 850, column: 8, scope: !10875)
!10884 = !DILocation(line: 850, column: 16, scope: !10875)
!10885 = !DILocation(line: 851, column: 8, scope: !10875)
!10886 = !DILocation(line: 851, column: 18, scope: !10875)
!10887 = !DILocation(line: 852, column: 1, scope: !10875)
!10888 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10889, file: !10889, line: 1792, type: !10890, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10892)
!10889 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10890 = !DISubroutineType(types: !10891)
!10891 = !{!132, !1535}
!10892 = !{!10893}
!10893 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10888, file: !10889, line: 1792, type: !1535)
!10894 = !DILocation(line: 0, scope: !10888)
!10895 = !DILocation(line: 1794, column: 11, scope: !10888)
!10896 = !DILocation(line: 1794, column: 47, scope: !10888)
!10897 = !DILocation(line: 1794, column: 3, scope: !10888)
!10898 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10889, file: !10889, line: 2227, type: !10890, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10899)
!10899 = !{!10900}
!10900 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10898, file: !10889, line: 2227, type: !1535)
!10901 = !DILocation(line: 0, scope: !10898)
!10902 = !DILocation(line: 2229, column: 11, scope: !10898)
!10903 = !DILocation(line: 2229, column: 51, scope: !10898)
!10904 = !DILocation(line: 2229, column: 3, scope: !10898)
!10905 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10889, file: !10889, line: 1803, type: !10890, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10906)
!10906 = !{!10907}
!10907 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10905, file: !10889, line: 1803, type: !1535)
!10908 = !DILocation(line: 0, scope: !10905)
!10909 = !DILocation(line: 1805, column: 11, scope: !10905)
!10910 = !DILocation(line: 1805, column: 45, scope: !10905)
!10911 = !DILocation(line: 1805, column: 3, scope: !10905)
!10912 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10889, file: !10889, line: 2238, type: !10890, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10913)
!10913 = !{!10914}
!10914 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10912, file: !10889, line: 2238, type: !1535)
!10915 = !DILocation(line: 0, scope: !10912)
!10916 = !DILocation(line: 2240, column: 11, scope: !10912)
!10917 = !DILocation(line: 2240, column: 49, scope: !10912)
!10918 = !DILocation(line: 2240, column: 3, scope: !10912)
!10919 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10889, file: !10889, line: 2192, type: !10920, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10922)
!10920 = !DISubroutineType(types: !10921)
!10921 = !{null, !1535}
!10922 = !{!10923, !10924}
!10923 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10919, file: !10889, line: 2192, type: !1535)
!10924 = !DILocalVariable(name: "val", scope: !10925, file: !10889, line: 2194, type: !132)
!10925 = distinct !DILexicalBlock(scope: !10919, file: !10889, line: 2194, column: 3)
!10926 = !DILocation(line: 0, scope: !10919)
!10927 = !DILocation(line: 2194, column: 3, scope: !10925)
!10928 = !DILocalVariable(name: "addr", arg: 1, scope: !10929, file: !6809, line: 476, type: !1587)
!10929 = distinct !DISubprogram(name: "__LDREXW", scope: !6809, file: !6809, line: 476, type: !10930, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10932)
!10930 = !DISubroutineType(types: !10931)
!10931 = !{!132, !1587}
!10932 = !{!10928, !10933}
!10933 = !DILocalVariable(name: "result", scope: !10929, file: !6809, line: 478, type: !132)
!10934 = !DILocation(line: 0, scope: !10929, inlinedAt: !10935)
!10935 = distinct !DILocation(line: 2194, column: 3, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10925, file: !10889, line: 2194, column: 3)
!10937 = !DILocation(line: 480, column: 4, scope: !10929, inlinedAt: !10935)
!10938 = !{i64 2859483}
!10939 = !DILocation(line: 2194, column: 3, scope: !10936)
!10940 = !DILocation(line: 0, scope: !10925)
!10941 = !DILocalVariable(name: "value", arg: 1, scope: !10942, file: !6809, line: 527, type: !132)
!10942 = distinct !DISubprogram(name: "__STREXW", scope: !6809, file: !6809, line: 527, type: !10943, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10945)
!10943 = !DISubroutineType(types: !10944)
!10944 = !{!132, !132, !1587}
!10945 = !{!10941, !10946, !10947}
!10946 = !DILocalVariable(name: "addr", arg: 2, scope: !10942, file: !6809, line: 527, type: !1587)
!10947 = !DILocalVariable(name: "result", scope: !10942, file: !6809, line: 529, type: !132)
!10948 = !DILocation(line: 0, scope: !10942, inlinedAt: !10949)
!10949 = distinct !DILocation(line: 2194, column: 3, scope: !10925)
!10950 = !DILocation(line: 531, column: 4, scope: !10942, inlinedAt: !10949)
!10951 = !{i64 2860919}
!10952 = distinct !{!10952, !10927, !10927}
!10953 = !DILocation(line: 2195, column: 1, scope: !10919)
!10954 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10889, file: !10889, line: 2177, type: !10920, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10955)
!10955 = !{!10956}
!10956 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10954, file: !10889, line: 2177, type: !1535)
!10957 = !DILocation(line: 0, scope: !10954)
!10958 = !DILocation(line: 2179, column: 3, scope: !10954)
!10959 = !DILocation(line: 2180, column: 1, scope: !10954)
!10960 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10889, file: !10889, line: 2164, type: !10920, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10961)
!10961 = !{!10962, !10963}
!10962 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10960, file: !10889, line: 2164, type: !1535)
!10963 = !DILocalVariable(name: "val", scope: !10964, file: !10889, line: 2166, type: !132)
!10964 = distinct !DILexicalBlock(scope: !10960, file: !10889, line: 2166, column: 3)
!10965 = !DILocation(line: 0, scope: !10960)
!10966 = !DILocation(line: 2166, column: 3, scope: !10964)
!10967 = !DILocation(line: 0, scope: !10929, inlinedAt: !10968)
!10968 = distinct !DILocation(line: 2166, column: 3, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10964, file: !10889, line: 2166, column: 3)
!10970 = !DILocation(line: 480, column: 4, scope: !10929, inlinedAt: !10968)
!10971 = !DILocation(line: 2166, column: 3, scope: !10969)
!10972 = !DILocation(line: 0, scope: !10964)
!10973 = !DILocation(line: 0, scope: !10942, inlinedAt: !10974)
!10974 = distinct !DILocation(line: 2166, column: 3, scope: !10964)
!10975 = !DILocation(line: 531, column: 4, scope: !10942, inlinedAt: !10974)
!10976 = distinct !{!10976, !10966, !10966}
!10977 = !DILocation(line: 2167, column: 1, scope: !10960)
!10978 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10889, file: !10889, line: 2096, type: !10920, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10979)
!10979 = !{!10980, !10981}
!10980 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10978, file: !10889, line: 2096, type: !1535)
!10981 = !DILocalVariable(name: "val", scope: !10982, file: !10889, line: 2098, type: !132)
!10982 = distinct !DILexicalBlock(scope: !10978, file: !10889, line: 2098, column: 3)
!10983 = !DILocation(line: 0, scope: !10978)
!10984 = !DILocation(line: 2098, column: 3, scope: !10982)
!10985 = !DILocation(line: 0, scope: !10929, inlinedAt: !10986)
!10986 = distinct !DILocation(line: 2098, column: 3, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10982, file: !10889, line: 2098, column: 3)
!10988 = !DILocation(line: 480, column: 4, scope: !10929, inlinedAt: !10986)
!10989 = !DILocation(line: 2098, column: 3, scope: !10987)
!10990 = !DILocation(line: 0, scope: !10982)
!10991 = !DILocation(line: 0, scope: !10942, inlinedAt: !10992)
!10992 = distinct !DILocation(line: 2098, column: 3, scope: !10982)
!10993 = !DILocation(line: 531, column: 4, scope: !10942, inlinedAt: !10992)
!10994 = distinct !{!10994, !10984, !10984}
!10995 = !DILocation(line: 2099, column: 1, scope: !10978)
!10996 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10889, file: !10889, line: 2081, type: !10920, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !10997)
!10997 = !{!10998}
!10998 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10996, file: !10889, line: 2081, type: !1535)
!10999 = !DILocation(line: 0, scope: !10996)
!11000 = !DILocation(line: 2083, column: 3, scope: !10996)
!11001 = !DILocation(line: 2084, column: 1, scope: !10996)
!11002 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10889, file: !10889, line: 2068, type: !10920, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11003)
!11003 = !{!11004, !11005}
!11004 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11002, file: !10889, line: 2068, type: !1535)
!11005 = !DILocalVariable(name: "val", scope: !11006, file: !10889, line: 2070, type: !132)
!11006 = distinct !DILexicalBlock(scope: !11002, file: !10889, line: 2070, column: 3)
!11007 = !DILocation(line: 0, scope: !11002)
!11008 = !DILocation(line: 2070, column: 3, scope: !11006)
!11009 = !DILocation(line: 0, scope: !10929, inlinedAt: !11010)
!11010 = distinct !DILocation(line: 2070, column: 3, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11006, file: !10889, line: 2070, column: 3)
!11012 = !DILocation(line: 480, column: 4, scope: !10929, inlinedAt: !11010)
!11013 = !DILocation(line: 2070, column: 3, scope: !11011)
!11014 = !DILocation(line: 0, scope: !11006)
!11015 = !DILocation(line: 0, scope: !10942, inlinedAt: !11016)
!11016 = distinct !DILocation(line: 2070, column: 3, scope: !11006)
!11017 = !DILocation(line: 531, column: 4, scope: !10942, inlinedAt: !11016)
!11018 = distinct !{!11018, !11008, !11008}
!11019 = !DILocation(line: 2071, column: 1, scope: !11002)
!11020 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10889, file: !10889, line: 2131, type: !10920, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11021)
!11021 = !{!11022, !11023}
!11022 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11020, file: !10889, line: 2131, type: !1535)
!11023 = !DILocalVariable(name: "val", scope: !11024, file: !10889, line: 2133, type: !132)
!11024 = distinct !DILexicalBlock(scope: !11020, file: !10889, line: 2133, column: 3)
!11025 = !DILocation(line: 0, scope: !11020)
!11026 = !DILocation(line: 2133, column: 3, scope: !11024)
!11027 = !DILocation(line: 0, scope: !10929, inlinedAt: !11028)
!11028 = distinct !DILocation(line: 2133, column: 3, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11024, file: !10889, line: 2133, column: 3)
!11030 = !DILocation(line: 480, column: 4, scope: !10929, inlinedAt: !11028)
!11031 = !DILocation(line: 2133, column: 3, scope: !11029)
!11032 = !DILocation(line: 0, scope: !11024)
!11033 = !DILocation(line: 0, scope: !10942, inlinedAt: !11034)
!11034 = distinct !DILocation(line: 2133, column: 3, scope: !11024)
!11035 = !DILocation(line: 531, column: 4, scope: !10942, inlinedAt: !11034)
!11036 = distinct !{!11036, !11026, !11026}
!11037 = !DILocation(line: 2134, column: 1, scope: !11020)
!11038 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10889, file: !10889, line: 2035, type: !10920, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11039)
!11039 = !{!11040, !11041}
!11040 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11038, file: !10889, line: 2035, type: !1535)
!11041 = !DILocalVariable(name: "val", scope: !11042, file: !10889, line: 2037, type: !132)
!11042 = distinct !DILexicalBlock(scope: !11038, file: !10889, line: 2037, column: 3)
!11043 = !DILocation(line: 0, scope: !11038)
!11044 = !DILocation(line: 2037, column: 3, scope: !11042)
!11045 = !DILocation(line: 0, scope: !10929, inlinedAt: !11046)
!11046 = distinct !DILocation(line: 2037, column: 3, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11042, file: !10889, line: 2037, column: 3)
!11048 = !DILocation(line: 480, column: 4, scope: !10929, inlinedAt: !11046)
!11049 = !DILocation(line: 2037, column: 3, scope: !11047)
!11050 = !DILocation(line: 0, scope: !11042)
!11051 = !DILocation(line: 0, scope: !10942, inlinedAt: !11052)
!11052 = distinct !DILocation(line: 2037, column: 3, scope: !11042)
!11053 = !DILocation(line: 531, column: 4, scope: !10942, inlinedAt: !11052)
!11054 = distinct !{!11054, !11044, !11044}
!11055 = !DILocation(line: 2038, column: 1, scope: !11038)
!11056 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10889, file: !10889, line: 1814, type: !10890, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11057)
!11057 = !{!11058}
!11058 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11056, file: !10889, line: 1814, type: !1535)
!11059 = !DILocation(line: 0, scope: !11056)
!11060 = !DILocation(line: 1816, column: 11, scope: !11056)
!11061 = !DILocation(line: 1816, column: 46, scope: !11056)
!11062 = !DILocation(line: 1816, column: 3, scope: !11056)
!11063 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10889, file: !10889, line: 2142, type: !10920, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11064)
!11064 = !{!11065, !11066}
!11065 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11063, file: !10889, line: 2142, type: !1535)
!11066 = !DILocalVariable(name: "val", scope: !11067, file: !10889, line: 2144, type: !132)
!11067 = distinct !DILexicalBlock(scope: !11063, file: !10889, line: 2144, column: 3)
!11068 = !DILocation(line: 0, scope: !11063)
!11069 = !DILocation(line: 2144, column: 3, scope: !11067)
!11070 = !DILocation(line: 0, scope: !10929, inlinedAt: !11071)
!11071 = distinct !DILocation(line: 2144, column: 3, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11067, file: !10889, line: 2144, column: 3)
!11073 = !DILocation(line: 480, column: 4, scope: !10929, inlinedAt: !11071)
!11074 = !DILocation(line: 2144, column: 3, scope: !11072)
!11075 = !DILocation(line: 0, scope: !11067)
!11076 = !DILocation(line: 0, scope: !10942, inlinedAt: !11077)
!11077 = distinct !DILocation(line: 2144, column: 3, scope: !11067)
!11078 = !DILocation(line: 531, column: 4, scope: !10942, inlinedAt: !11077)
!11079 = distinct !{!11079, !11069, !11069}
!11080 = !DILocation(line: 2145, column: 1, scope: !11063)
!11081 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10889, file: !10889, line: 2046, type: !10920, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11082)
!11082 = !{!11083, !11084}
!11083 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11081, file: !10889, line: 2046, type: !1535)
!11084 = !DILocalVariable(name: "val", scope: !11085, file: !10889, line: 2048, type: !132)
!11085 = distinct !DILexicalBlock(scope: !11081, file: !10889, line: 2048, column: 3)
!11086 = !DILocation(line: 0, scope: !11081)
!11087 = !DILocation(line: 2048, column: 3, scope: !11085)
!11088 = !DILocation(line: 0, scope: !10929, inlinedAt: !11089)
!11089 = distinct !DILocation(line: 2048, column: 3, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11085, file: !10889, line: 2048, column: 3)
!11091 = !DILocation(line: 480, column: 4, scope: !10929, inlinedAt: !11089)
!11092 = !DILocation(line: 2048, column: 3, scope: !11090)
!11093 = !DILocation(line: 0, scope: !11085)
!11094 = !DILocation(line: 0, scope: !10942, inlinedAt: !11095)
!11095 = distinct !DILocation(line: 2048, column: 3, scope: !11085)
!11096 = !DILocation(line: 531, column: 4, scope: !10942, inlinedAt: !11095)
!11097 = distinct !{!11097, !11087, !11087}
!11098 = !DILocation(line: 2049, column: 1, scope: !11081)
!11099 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10889, file: !10889, line: 2403, type: !11100, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11102)
!11100 = !DISubroutineType(types: !11101)
!11101 = !{!163, !1535}
!11102 = !{!11103}
!11103 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11099, file: !10889, line: 2403, type: !1535)
!11104 = !DILocation(line: 0, scope: !11099)
!11105 = !DILocation(line: 2405, column: 20, scope: !11099)
!11106 = !DILocation(line: 2405, column: 10, scope: !11099)
!11107 = !DILocation(line: 2405, column: 3, scope: !11099)
!11108 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10889, file: !10889, line: 1770, type: !10890, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11109)
!11109 = !{!11110}
!11110 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11108, file: !10889, line: 1770, type: !1535)
!11111 = !DILocation(line: 0, scope: !11108)
!11112 = !DILocation(line: 1772, column: 11, scope: !11108)
!11113 = !DILocation(line: 1772, column: 46, scope: !11108)
!11114 = !DILocation(line: 1772, column: 3, scope: !11108)
!11115 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10889, file: !10889, line: 1934, type: !10920, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11116)
!11116 = !{!11117, !11118}
!11117 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11115, file: !10889, line: 1934, type: !1535)
!11118 = !DILocalVariable(name: "tmpreg", scope: !11115, file: !10889, line: 1936, type: !131)
!11119 = !DILocation(line: 0, scope: !11115)
!11120 = !DILocation(line: 1936, column: 3, scope: !11115)
!11121 = !DILocation(line: 1936, column: 17, scope: !11115)
!11122 = !DILocation(line: 1937, column: 20, scope: !11115)
!11123 = !DILocation(line: 1937, column: 10, scope: !11115)
!11124 = !DILocation(line: 1938, column: 10, scope: !11115)
!11125 = !DILocation(line: 1939, column: 20, scope: !11115)
!11126 = !DILocation(line: 1939, column: 10, scope: !11115)
!11127 = !DILocation(line: 1940, column: 10, scope: !11115)
!11128 = !DILocation(line: 1941, column: 1, scope: !11115)
!11129 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10889, file: !10889, line: 2426, type: !11130, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11132)
!11130 = !DISubroutineType(types: !11131)
!11131 = !{null, !1535, !163}
!11132 = !{!11133, !11134}
!11133 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11129, file: !10889, line: 2426, type: !1535)
!11134 = !DILocalVariable(name: "Value", arg: 2, scope: !11129, file: !10889, line: 2426, type: !163)
!11135 = !DILocation(line: 0, scope: !11129)
!11136 = !DILocation(line: 2428, column: 16, scope: !11129)
!11137 = !DILocation(line: 2428, column: 11, scope: !11129)
!11138 = !DILocation(line: 2428, column: 14, scope: !11129)
!11139 = !DILocation(line: 2429, column: 1, scope: !11129)
!11140 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1591, file: !1591, line: 205, type: !11141, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11143)
!11141 = !DISubroutineType(types: !11142)
!11142 = !{!132, !1464}
!11143 = !{!11144, !11145}
!11144 = !DILocalVariable(name: "dev", arg: 1, scope: !11140, file: !1591, line: 205, type: !1464)
!11145 = !DILocalVariable(name: "config", scope: !11140, file: !1591, line: 207, type: !10453)
!11146 = !DILocation(line: 0, scope: !11140)
!11147 = !DILocation(line: 207, column: 48, scope: !11140)
!11148 = !DILocation(line: 209, column: 36, scope: !11140)
!11149 = !DILocation(line: 209, column: 9, scope: !11140)
!11150 = !DILocation(line: 209, column: 2, scope: !11140)
!11151 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1591, file: !1591, line: 270, type: !11152, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11154)
!11152 = !DISubroutineType(types: !11153)
!11153 = !{!1430, !132}
!11154 = !{!11155}
!11155 = !DILocalVariable(name: "parity", arg: 1, scope: !11151, file: !1591, line: 270, type: !132)
!11156 = !DILocation(line: 0, scope: !11151)
!11157 = !DILocation(line: 272, column: 2, scope: !11151)
!11158 = !DILocation(line: 281, column: 1, scope: !11151)
!11159 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1591, file: !1591, line: 220, type: !11141, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11160)
!11160 = !{!11161, !11162}
!11161 = !DILocalVariable(name: "dev", arg: 1, scope: !11159, file: !1591, line: 220, type: !1464)
!11162 = !DILocalVariable(name: "config", scope: !11159, file: !1591, line: 222, type: !10453)
!11163 = !DILocation(line: 0, scope: !11159)
!11164 = !DILocation(line: 222, column: 48, scope: !11159)
!11165 = !DILocation(line: 224, column: 44, scope: !11159)
!11166 = !DILocation(line: 224, column: 9, scope: !11159)
!11167 = !DILocation(line: 224, column: 2, scope: !11159)
!11168 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1591, file: !1591, line: 304, type: !11169, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11171)
!11169 = !DISubroutineType(types: !11170)
!11170 = !{!1444, !132}
!11171 = !{!11172}
!11172 = !DILocalVariable(name: "sb", arg: 1, scope: !11168, file: !1591, line: 304, type: !132)
!11173 = !DILocation(line: 0, scope: !11168)
!11174 = !DILocation(line: 306, column: 2, scope: !11168)
!11175 = !DILocation(line: 0, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11168, file: !1591, line: 306, column: 14)
!11177 = !DILocation(line: 323, column: 1, scope: !11168)
!11178 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1591, file: !1591, line: 235, type: !11141, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11179)
!11179 = !{!11180, !11181}
!11180 = !DILocalVariable(name: "dev", arg: 1, scope: !11178, file: !1591, line: 235, type: !1464)
!11181 = !DILocalVariable(name: "config", scope: !11178, file: !1591, line: 237, type: !10453)
!11182 = !DILocation(line: 0, scope: !11178)
!11183 = !DILocation(line: 237, column: 48, scope: !11178)
!11184 = !DILocation(line: 239, column: 39, scope: !11178)
!11185 = !DILocation(line: 239, column: 9, scope: !11178)
!11186 = !DILocation(line: 239, column: 2, scope: !11178)
!11187 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1591, file: !1591, line: 355, type: !11188, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11190)
!11188 = !DISubroutineType(types: !11189)
!11189 = !{!1437, !132, !132}
!11190 = !{!11191, !11192}
!11191 = !DILocalVariable(name: "db", arg: 1, scope: !11187, file: !1591, line: 355, type: !132)
!11192 = !DILocalVariable(name: "p", arg: 2, scope: !11187, file: !1591, line: 356, type: !132)
!11193 = !DILocation(line: 0, scope: !11187)
!11194 = !DILocation(line: 358, column: 2, scope: !11187)
!11195 = !DILocation(line: 384, column: 1, scope: !11187)
!11196 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1591, file: !1591, line: 250, type: !11141, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11197)
!11197 = !{!11198, !11199}
!11198 = !DILocalVariable(name: "dev", arg: 1, scope: !11196, file: !1591, line: 250, type: !1464)
!11199 = !DILocalVariable(name: "config", scope: !11196, file: !1591, line: 252, type: !10453)
!11200 = !DILocation(line: 0, scope: !11196)
!11201 = !DILocation(line: 252, column: 48, scope: !11196)
!11202 = !DILocation(line: 254, column: 40, scope: !11196)
!11203 = !DILocation(line: 254, column: 9, scope: !11196)
!11204 = !DILocation(line: 254, column: 2, scope: !11196)
!11205 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1591, file: !1591, line: 409, type: !11206, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11208)
!11206 = !DISubroutineType(types: !11207)
!11207 = !{!1450, !132}
!11208 = !{!11209}
!11209 = !DILocalVariable(name: "fc", arg: 1, scope: !11205, file: !1591, line: 409, type: !132)
!11210 = !DILocation(line: 0, scope: !11205)
!11211 = !DILocation(line: 411, column: 9, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11205, file: !1591, line: 411, column: 6)
!11213 = !DILocation(line: 416, column: 1, scope: !11205)
!11214 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10889, file: !10889, line: 967, type: !10890, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11215)
!11215 = !{!11216}
!11216 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11214, file: !10889, line: 967, type: !1535)
!11217 = !DILocation(line: 0, scope: !11214)
!11218 = !DILocation(line: 969, column: 21, scope: !11214)
!11219 = !DILocation(line: 969, column: 3, scope: !11214)
!11220 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10889, file: !10889, line: 601, type: !10890, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11221)
!11221 = !{!11222}
!11222 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11220, file: !10889, line: 601, type: !1535)
!11223 = !DILocation(line: 0, scope: !11220)
!11224 = !DILocation(line: 603, column: 21, scope: !11220)
!11225 = !DILocation(line: 603, column: 3, scope: !11220)
!11226 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10889, file: !10889, line: 820, type: !10890, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11227)
!11227 = !{!11228}
!11228 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11226, file: !10889, line: 820, type: !1535)
!11229 = !DILocation(line: 0, scope: !11226)
!11230 = !DILocation(line: 822, column: 21, scope: !11226)
!11231 = !DILocation(line: 822, column: 3, scope: !11226)
!11232 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10889, file: !10889, line: 547, type: !10890, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11233)
!11233 = !{!11234}
!11234 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11232, file: !10889, line: 547, type: !1535)
!11235 = !DILocation(line: 0, scope: !11232)
!11236 = !DILocation(line: 549, column: 21, scope: !11232)
!11237 = !DILocation(line: 549, column: 3, scope: !11232)
!11238 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1591, file: !1591, line: 257, type: !11239, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11241)
!11239 = !DISubroutineType(types: !11240)
!11240 = !{!132, !1430}
!11241 = !{!11242}
!11242 = !DILocalVariable(name: "parity", arg: 1, scope: !11238, file: !1591, line: 257, type: !1430)
!11243 = !DILocation(line: 0, scope: !11238)
!11244 = !DILocation(line: 259, column: 2, scope: !11238)
!11245 = !DILocation(line: 268, column: 1, scope: !11238)
!11246 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1591, file: !1591, line: 283, type: !11247, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11249)
!11247 = !DISubroutineType(types: !11248)
!11248 = !{!132, !1444}
!11249 = !{!11250}
!11250 = !DILocalVariable(name: "sb", arg: 1, scope: !11246, file: !1591, line: 283, type: !1444)
!11251 = !DILocation(line: 0, scope: !11246)
!11252 = !DILocation(line: 285, column: 2, scope: !11246)
!11253 = !DILocation(line: 0, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11246, file: !1591, line: 285, column: 14)
!11255 = !DILocation(line: 302, column: 1, scope: !11246)
!11256 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1591, file: !1591, line: 325, type: !11257, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11259)
!11257 = !DISubroutineType(types: !11258)
!11258 = !{!132, !1437, !1430}
!11259 = !{!11260, !11261}
!11260 = !DILocalVariable(name: "db", arg: 1, scope: !11256, file: !1591, line: 325, type: !1437)
!11261 = !DILocalVariable(name: "p", arg: 2, scope: !11256, file: !1591, line: 326, type: !1430)
!11262 = !DILocation(line: 0, scope: !11256)
!11263 = !DILocation(line: 328, column: 2, scope: !11256)
!11264 = !DILocation(line: 353, column: 1, scope: !11256)
!11265 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1591, file: !1591, line: 393, type: !11266, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11268)
!11266 = !DISubroutineType(types: !11267)
!11267 = !{!132, !1450}
!11268 = !{!11269}
!11269 = !DILocalVariable(name: "fc", arg: 1, scope: !11265, file: !1591, line: 393, type: !1450)
!11270 = !DILocation(line: 0, scope: !11265)
!11271 = !DILocation(line: 395, column: 9, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11265, file: !1591, line: 395, column: 6)
!11273 = !DILocation(line: 400, column: 1, scope: !11265)
!11274 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10889, file: !10889, line: 424, type: !10920, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11275)
!11275 = !{!11276}
!11276 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11274, file: !10889, line: 424, type: !1535)
!11277 = !DILocation(line: 0, scope: !11274)
!11278 = !DILocation(line: 426, column: 3, scope: !11274)
!11279 = !DILocation(line: 427, column: 1, scope: !11274)
!11280 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1591, file: !1591, line: 197, type: !11281, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11283)
!11281 = !DISubroutineType(types: !11282)
!11282 = !{null, !1464, !132}
!11283 = !{!11284, !11285, !11286}
!11284 = !DILocalVariable(name: "dev", arg: 1, scope: !11280, file: !1591, line: 197, type: !1464)
!11285 = !DILocalVariable(name: "parity", arg: 2, scope: !11280, file: !1591, line: 198, type: !132)
!11286 = !DILocalVariable(name: "config", scope: !11280, file: !1591, line: 200, type: !10453)
!11287 = !DILocation(line: 0, scope: !11280)
!11288 = !DILocation(line: 200, column: 48, scope: !11280)
!11289 = !DILocation(line: 202, column: 29, scope: !11280)
!11290 = !DILocation(line: 202, column: 2, scope: !11280)
!11291 = !DILocation(line: 203, column: 1, scope: !11280)
!11292 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1591, file: !1591, line: 212, type: !11281, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11293)
!11293 = !{!11294, !11295, !11296}
!11294 = !DILocalVariable(name: "dev", arg: 1, scope: !11292, file: !1591, line: 212, type: !1464)
!11295 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11292, file: !1591, line: 213, type: !132)
!11296 = !DILocalVariable(name: "config", scope: !11292, file: !1591, line: 215, type: !10453)
!11297 = !DILocation(line: 0, scope: !11292)
!11298 = !DILocation(line: 215, column: 48, scope: !11292)
!11299 = !DILocation(line: 217, column: 37, scope: !11292)
!11300 = !DILocation(line: 217, column: 2, scope: !11292)
!11301 = !DILocation(line: 218, column: 1, scope: !11292)
!11302 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1591, file: !1591, line: 227, type: !11281, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11303)
!11303 = !{!11304, !11305, !11306}
!11304 = !DILocalVariable(name: "dev", arg: 1, scope: !11302, file: !1591, line: 227, type: !1464)
!11305 = !DILocalVariable(name: "databits", arg: 2, scope: !11302, file: !1591, line: 228, type: !132)
!11306 = !DILocalVariable(name: "config", scope: !11302, file: !1591, line: 230, type: !10453)
!11307 = !DILocation(line: 0, scope: !11302)
!11308 = !DILocation(line: 230, column: 48, scope: !11302)
!11309 = !DILocation(line: 232, column: 32, scope: !11302)
!11310 = !DILocation(line: 232, column: 2, scope: !11302)
!11311 = !DILocation(line: 233, column: 1, scope: !11302)
!11312 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1591, file: !1591, line: 242, type: !11281, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11313)
!11313 = !{!11314, !11315, !11316}
!11314 = !DILocalVariable(name: "dev", arg: 1, scope: !11312, file: !1591, line: 242, type: !1464)
!11315 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11312, file: !1591, line: 243, type: !132)
!11316 = !DILocalVariable(name: "config", scope: !11312, file: !1591, line: 245, type: !10453)
!11317 = !DILocation(line: 0, scope: !11312)
!11318 = !DILocation(line: 245, column: 48, scope: !11312)
!11319 = !DILocation(line: 247, column: 33, scope: !11312)
!11320 = !DILocation(line: 247, column: 2, scope: !11312)
!11321 = !DILocation(line: 248, column: 1, scope: !11312)
!11322 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1591, file: !1591, line: 107, type: !11281, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11323)
!11323 = !{!11324, !11325, !11326, !11327, !11328}
!11324 = !DILocalVariable(name: "dev", arg: 1, scope: !11322, file: !1591, line: 107, type: !1464)
!11325 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11322, file: !1591, line: 107, type: !132)
!11326 = !DILocalVariable(name: "config", scope: !11322, file: !1591, line: 109, type: !10453)
!11327 = !DILocalVariable(name: "data", scope: !11322, file: !1591, line: 110, type: !10576)
!11328 = !DILocalVariable(name: "clock_rate", scope: !11322, file: !1591, line: 112, type: !132)
!11329 = !DILocation(line: 0, scope: !11322)
!11330 = !DILocation(line: 109, column: 48, scope: !11322)
!11331 = !DILocation(line: 110, column: 38, scope: !11322)
!11332 = !DILocation(line: 112, column: 2, scope: !11322)
!11333 = !DILocation(line: 123, column: 36, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !1591, line: 123, column: 7)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !1591, line: 122, column: 9)
!11336 = distinct !DILexicalBlock(scope: !11322, file: !1591, line: 115, column: 6)
!11337 = !DILocation(line: 124, column: 42, scope: !11334)
!11338 = !DILocation(line: 123, column: 7, scope: !11334)
!11339 = !DILocation(line: 125, column: 22, scope: !11334)
!11340 = !DILocation(line: 123, column: 7, scope: !11335)
!11341 = !DILocation(line: 176, column: 36, scope: !11322)
!11342 = !DILocation(line: 176, column: 3, scope: !11322)
!11343 = !DILocation(line: 179, column: 32, scope: !11322)
!11344 = !DILocation(line: 180, column: 10, scope: !11322)
!11345 = !DILocation(line: 179, column: 3, scope: !11322)
!11346 = !DILocation(line: 195, column: 1, scope: !11322)
!11347 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10889, file: !10889, line: 410, type: !10920, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11348)
!11348 = !{!11349}
!11349 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11347, file: !10889, line: 410, type: !1535)
!11350 = !DILocation(line: 0, scope: !11347)
!11351 = !DILocation(line: 412, column: 3, scope: !11347)
!11352 = !DILocation(line: 413, column: 1, scope: !11347)
!11353 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !786, file: !786, line: 216, type: !1568, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11354)
!11354 = !{!11355, !11356, !11357, !11358}
!11355 = !DILocalVariable(name: "dev", arg: 1, scope: !11353, file: !786, line: 216, type: !1464)
!11356 = !DILocalVariable(name: "sys", arg: 2, scope: !11353, file: !786, line: 217, type: !881)
!11357 = !DILocalVariable(name: "rate", arg: 3, scope: !11353, file: !786, line: 218, type: !837)
!11358 = !DILocalVariable(name: "api", scope: !11353, file: !786, line: 220, type: !1546)
!11359 = !DILocation(line: 0, scope: !11353)
!11360 = !DILocation(line: 221, column: 49, scope: !11353)
!11361 = !DILocation(line: 223, column: 11, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11353, file: !786, line: 223, column: 6)
!11363 = !DILocation(line: 223, column: 20, scope: !11362)
!11364 = !DILocation(line: 223, column: 6, scope: !11353)
!11365 = !DILocation(line: 227, column: 9, scope: !11353)
!11366 = !DILocation(line: 227, column: 2, scope: !11353)
!11367 = !DILocation(line: 228, column: 1, scope: !11353)
!11368 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10889, file: !10889, line: 615, type: !11369, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11371)
!11369 = !DISubroutineType(types: !11370)
!11370 = !{null, !1535, !132}
!11371 = !{!11372, !11373}
!11372 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11368, file: !10889, line: 615, type: !1535)
!11373 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11368, file: !10889, line: 615, type: !132)
!11374 = !DILocation(line: 0, scope: !11368)
!11375 = !DILocation(line: 617, column: 3, scope: !11368)
!11376 = !DILocation(line: 618, column: 1, scope: !11368)
!11377 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10889, file: !10889, line: 1020, type: !11378, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11380)
!11378 = !DISubroutineType(types: !11379)
!11379 = !{null, !1535, !132, !132, !132}
!11380 = !{!11381, !11382, !11383, !11384}
!11381 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11377, file: !10889, line: 1020, type: !1535)
!11382 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11377, file: !10889, line: 1020, type: !132)
!11383 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11377, file: !10889, line: 1020, type: !132)
!11384 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11377, file: !10889, line: 1021, type: !132)
!11385 = !DILocation(line: 0, scope: !11377)
!11386 = !DILocation(line: 1029, column: 30, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11388, file: !10889, line: 1028, column: 3)
!11388 = distinct !DILexicalBlock(scope: !11377, file: !10889, line: 1023, column: 7)
!11389 = !DILocation(line: 1029, column: 19, scope: !11387)
!11390 = !DILocation(line: 1029, column: 13, scope: !11387)
!11391 = !DILocation(line: 1029, column: 17, scope: !11387)
!11392 = !DILocation(line: 1031, column: 1, scope: !11377)
!11393 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10889, file: !10889, line: 949, type: !11369, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11394)
!11394 = !{!11395, !11396}
!11395 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11393, file: !10889, line: 949, type: !1535)
!11396 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11393, file: !10889, line: 949, type: !132)
!11397 = !DILocation(line: 0, scope: !11393)
!11398 = !DILocation(line: 951, column: 3, scope: !11393)
!11399 = !DILocation(line: 952, column: 1, scope: !11393)
!11400 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10889, file: !10889, line: 588, type: !11369, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11401)
!11401 = !{!11402, !11403}
!11402 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11400, file: !10889, line: 588, type: !1535)
!11403 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11400, file: !10889, line: 588, type: !132)
!11404 = !DILocation(line: 0, scope: !11400)
!11405 = !DILocation(line: 590, column: 3, scope: !11400)
!11406 = !DILocation(line: 591, column: 1, scope: !11400)
!11407 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10889, file: !10889, line: 805, type: !11369, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11408)
!11408 = !{!11409, !11410}
!11409 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11407, file: !10889, line: 805, type: !1535)
!11410 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11407, file: !10889, line: 805, type: !132)
!11411 = !DILocation(line: 0, scope: !11407)
!11412 = !DILocation(line: 807, column: 3, scope: !11407)
!11413 = !DILocation(line: 808, column: 1, scope: !11407)
!11414 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10889, file: !10889, line: 532, type: !11369, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11415)
!11415 = !{!11416, !11417}
!11416 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11414, file: !10889, line: 532, type: !1535)
!11417 = !DILocalVariable(name: "Parity", arg: 2, scope: !11414, file: !10889, line: 532, type: !132)
!11418 = !DILocation(line: 0, scope: !11414)
!11419 = !DILocation(line: 534, column: 3, scope: !11414)
!11420 = !DILocation(line: 535, column: 1, scope: !11414)
!11421 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10889, file: !10889, line: 1737, type: !10890, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11422)
!11422 = !{!11423}
!11423 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11421, file: !10889, line: 1737, type: !1535)
!11424 = !DILocation(line: 0, scope: !11421)
!11425 = !DILocation(line: 1739, column: 11, scope: !11421)
!11426 = !DILocation(line: 1739, column: 3, scope: !11421)
!11427 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10889, file: !10889, line: 1748, type: !10890, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11428)
!11428 = !{!11429}
!11429 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11427, file: !10889, line: 1748, type: !1535)
!11430 = !DILocation(line: 0, scope: !11427)
!11431 = !DILocation(line: 1750, column: 11, scope: !11427)
!11432 = !DILocation(line: 1750, column: 45, scope: !11427)
!11433 = !DILocation(line: 1750, column: 3, scope: !11427)
!11434 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10889, file: !10889, line: 1827, type: !10890, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11435)
!11435 = !{!11436}
!11436 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11434, file: !10889, line: 1827, type: !1535)
!11437 = !DILocation(line: 0, scope: !11434)
!11438 = !DILocation(line: 1829, column: 11, scope: !11434)
!11439 = !DILocation(line: 1829, column: 46, scope: !11434)
!11440 = !DILocation(line: 1829, column: 3, scope: !11434)
!11441 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10889, file: !10889, line: 1992, type: !10920, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11442)
!11442 = !{!11443}
!11443 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11441, file: !10889, line: 1992, type: !1535)
!11444 = !DILocation(line: 0, scope: !11441)
!11445 = !DILocation(line: 1994, column: 3, scope: !11441)
!11446 = !DILocation(line: 1995, column: 1, scope: !11441)
!11447 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10889, file: !10889, line: 1877, type: !10920, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11448)
!11448 = !{!11449, !11450}
!11449 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11447, file: !10889, line: 1877, type: !1535)
!11450 = !DILocalVariable(name: "tmpreg", scope: !11447, file: !10889, line: 1879, type: !131)
!11451 = !DILocation(line: 0, scope: !11447)
!11452 = !DILocation(line: 1879, column: 3, scope: !11447)
!11453 = !DILocation(line: 1879, column: 17, scope: !11447)
!11454 = !DILocation(line: 1880, column: 20, scope: !11447)
!11455 = !DILocation(line: 1880, column: 10, scope: !11447)
!11456 = !DILocation(line: 1881, column: 10, scope: !11447)
!11457 = !DILocation(line: 1882, column: 20, scope: !11447)
!11458 = !DILocation(line: 1882, column: 10, scope: !11447)
!11459 = !DILocation(line: 1883, column: 10, scope: !11447)
!11460 = !DILocation(line: 1884, column: 1, scope: !11447)
!11461 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10889, file: !10889, line: 1896, type: !10920, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11462)
!11462 = !{!11463, !11464}
!11463 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11461, file: !10889, line: 1896, type: !1535)
!11464 = !DILocalVariable(name: "tmpreg", scope: !11461, file: !10889, line: 1898, type: !131)
!11465 = !DILocation(line: 0, scope: !11461)
!11466 = !DILocation(line: 1898, column: 3, scope: !11461)
!11467 = !DILocation(line: 1898, column: 17, scope: !11461)
!11468 = !DILocation(line: 1899, column: 20, scope: !11461)
!11469 = !DILocation(line: 1899, column: 10, scope: !11461)
!11470 = !DILocation(line: 1900, column: 10, scope: !11461)
!11471 = !DILocation(line: 1901, column: 20, scope: !11461)
!11472 = !DILocation(line: 1901, column: 10, scope: !11461)
!11473 = !DILocation(line: 1902, column: 10, scope: !11461)
!11474 = !DILocation(line: 1903, column: 1, scope: !11461)
!11475 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10889, file: !10889, line: 1915, type: !10920, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11476)
!11476 = !{!11477, !11478}
!11477 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11475, file: !10889, line: 1915, type: !1535)
!11478 = !DILocalVariable(name: "tmpreg", scope: !11475, file: !10889, line: 1917, type: !131)
!11479 = !DILocation(line: 0, scope: !11475)
!11480 = !DILocation(line: 1917, column: 3, scope: !11475)
!11481 = !DILocation(line: 1917, column: 17, scope: !11475)
!11482 = !DILocation(line: 1918, column: 20, scope: !11475)
!11483 = !DILocation(line: 1918, column: 10, scope: !11475)
!11484 = !DILocation(line: 1919, column: 10, scope: !11475)
!11485 = !DILocation(line: 1920, column: 20, scope: !11475)
!11486 = !DILocation(line: 1920, column: 10, scope: !11475)
!11487 = !DILocation(line: 1921, column: 10, scope: !11475)
!11488 = !DILocation(line: 1922, column: 1, scope: !11475)
!11489 = !DILocation(line: 0, scope: !1645)
!11490 = !DILocation(line: 1914, column: 1, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !1645, file: !1591, line: 1914, column: 1)
!11492 = !DILocation(line: 1914, column: 1, scope: !1645)
!11493 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1591, file: !1591, line: 987, type: !1515, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11494)
!11494 = !{!11495, !11496}
!11495 = !DILocalVariable(name: "dev", arg: 1, scope: !11493, file: !1591, line: 987, type: !1464)
!11496 = !DILocalVariable(name: "data", scope: !11493, file: !1591, line: 989, type: !10576)
!11497 = !DILocation(line: 0, scope: !11493)
!11498 = !DILocation(line: 989, column: 38, scope: !11493)
!11499 = !DILocation(line: 1014, column: 12, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11493, file: !1591, line: 1014, column: 6)
!11501 = !DILocation(line: 1014, column: 6, scope: !11500)
!11502 = !DILocation(line: 1014, column: 6, scope: !11493)
!11503 = !DILocation(line: 1015, column: 28, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11500, file: !1591, line: 1014, column: 21)
!11505 = !DILocation(line: 1015, column: 3, scope: !11504)
!11506 = !DILocation(line: 1016, column: 2, scope: !11504)
!11507 = !DILocation(line: 1059, column: 1, scope: !11493)
!11508 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1591, file: !1591, line: 1583, type: !1485, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11509)
!11509 = !{!11510, !11511, !11512, !11513, !11514, !11515}
!11510 = !DILocalVariable(name: "dev", arg: 1, scope: !11508, file: !1591, line: 1583, type: !1464)
!11511 = !DILocalVariable(name: "config", scope: !11508, file: !1591, line: 1585, type: !10453)
!11512 = !DILocalVariable(name: "data", scope: !11508, file: !1591, line: 1586, type: !10576)
!11513 = !DILocalVariable(name: "ll_parity", scope: !11508, file: !1591, line: 1587, type: !132)
!11514 = !DILocalVariable(name: "ll_datawidth", scope: !11508, file: !1591, line: 1588, type: !132)
!11515 = !DILocalVariable(name: "err", scope: !11508, file: !1591, line: 1589, type: !103)
!11516 = !DILocation(line: 0, scope: !11508)
!11517 = !DILocation(line: 1585, column: 48, scope: !11508)
!11518 = !DILocation(line: 1586, column: 38, scope: !11508)
!11519 = !DILocation(line: 1591, column: 2, scope: !11508)
!11520 = !DILocation(line: 1593, column: 29, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11508, file: !1591, line: 1593, column: 6)
!11522 = !DILocation(line: 1593, column: 7, scope: !11521)
!11523 = !DILocation(line: 1593, column: 6, scope: !11508)
!11524 = !DILocation(line: 1599, column: 31, scope: !11508)
!11525 = !DILocation(line: 1599, column: 71, scope: !11508)
!11526 = !DILocation(line: 1599, column: 8, scope: !11508)
!11527 = !DILocation(line: 1600, column: 10, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11508, file: !1591, line: 1600, column: 6)
!11529 = !DILocation(line: 1600, column: 6, scope: !11508)
!11530 = !DILocation(line: 1616, column: 36, scope: !11508)
!11531 = !DILocation(line: 1616, column: 8, scope: !11508)
!11532 = !DILocation(line: 1617, column: 10, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11508, file: !1591, line: 1617, column: 6)
!11534 = !DILocation(line: 1617, column: 6, scope: !11508)
!11535 = !DILocation(line: 1621, column: 27, scope: !11508)
!11536 = !DILocation(line: 1621, column: 2, scope: !11508)
!11537 = !DILocation(line: 1624, column: 40, scope: !11508)
!11538 = !DILocation(line: 1624, column: 2, scope: !11508)
!11539 = !DILocation(line: 1630, column: 14, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11508, file: !1591, line: 1630, column: 6)
!11541 = !DILocation(line: 1630, column: 6, scope: !11508)
!11542 = !DILocation(line: 1638, column: 2, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !1591, line: 1634, column: 34)
!11544 = distinct !DILexicalBlock(scope: !11540, file: !1591, line: 1634, column: 13)
!11545 = !DILocation(line: 0, scope: !11540)
!11546 = !DILocation(line: 1649, column: 35, scope: !11508)
!11547 = !DILocation(line: 1649, column: 2, scope: !11508)
!11548 = !DILocation(line: 1654, column: 14, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11508, file: !1591, line: 1654, column: 6)
!11550 = !DILocation(line: 1654, column: 6, scope: !11508)
!11551 = !DILocation(line: 1655, column: 3, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11549, file: !1591, line: 1654, column: 31)
!11553 = !DILocation(line: 1656, column: 2, scope: !11552)
!11554 = !DILocation(line: 1659, column: 37, scope: !11508)
!11555 = !DILocation(line: 1659, column: 2, scope: !11508)
!11556 = !DILocation(line: 1662, column: 14, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11508, file: !1591, line: 1662, column: 6)
!11558 = !DILocation(line: 1662, column: 6, scope: !11508)
!11559 = !DILocation(line: 1663, column: 37, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11557, file: !1591, line: 1662, column: 27)
!11561 = !DILocation(line: 1663, column: 3, scope: !11560)
!11562 = !DILocation(line: 1664, column: 2, scope: !11560)
!11563 = !DILocation(line: 1684, column: 26, scope: !11508)
!11564 = !DILocation(line: 1684, column: 2, scope: !11508)
!11565 = !DILocation(line: 1701, column: 10, scope: !11508)
!11566 = !DILocation(line: 1701, column: 2, scope: !11508)
!11567 = !DILocation(line: 1722, column: 2, scope: !11508)
!11568 = !DILocation(line: 1724, column: 1, scope: !11508)
!11569 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1591, file: !1591, line: 651, type: !1515, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11570)
!11570 = !{!11571, !11572, !11573}
!11571 = !DILocalVariable(name: "dev", arg: 1, scope: !11569, file: !1591, line: 651, type: !1464)
!11572 = !DILocalVariable(name: "data", scope: !11569, file: !1591, line: 653, type: !10576)
!11573 = !DILocalVariable(name: "clk", scope: !11569, file: !1591, line: 654, type: !11574)
!11574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1464)
!11575 = !DILocation(line: 0, scope: !11569)
!11576 = !DILocation(line: 653, column: 38, scope: !11569)
!11577 = !DILocation(line: 656, column: 8, scope: !11569)
!11578 = !DILocation(line: 656, column: 14, scope: !11569)
!11579 = !DILocation(line: 657, column: 1, scope: !11569)
!11580 = distinct !DISubprogram(name: "device_is_ready", scope: !6650, file: !6650, line: 47, type: !11581, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11583)
!11581 = !DISubroutineType(types: !11582)
!11582 = !{!166, !1464}
!11583 = !{!11584}
!11584 = !DILocalVariable(name: "dev", arg: 1, scope: !11580, file: !6650, line: 47, type: !1464)
!11585 = !DILocation(line: 0, scope: !11580)
!11586 = !DILocation(line: 55, column: 2, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11580, file: !6650, line: 55, column: 2)
!11588 = !{i64 2154348634}
!11589 = !DILocation(line: 56, column: 9, scope: !11580)
!11590 = !DILocation(line: 56, column: 2, scope: !11580)
!11591 = distinct !DISubprogram(name: "clock_control_on", scope: !786, file: !786, line: 123, type: !1553, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11592)
!11592 = !{!11593, !11594, !11595}
!11593 = !DILocalVariable(name: "dev", arg: 1, scope: !11591, file: !786, line: 123, type: !1464)
!11594 = !DILocalVariable(name: "sys", arg: 2, scope: !11591, file: !786, line: 124, type: !881)
!11595 = !DILocalVariable(name: "api", scope: !11591, file: !786, line: 126, type: !1546)
!11596 = !DILocation(line: 0, scope: !11591)
!11597 = !DILocation(line: 127, column: 49, scope: !11591)
!11598 = !DILocation(line: 129, column: 14, scope: !11591)
!11599 = !DILocation(line: 129, column: 9, scope: !11591)
!11600 = !DILocation(line: 129, column: 2, scope: !11591)
!11601 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1618, file: !1618, line: 342, type: !11602, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11604)
!11602 = !DISubroutineType(types: !11603)
!11603 = !{!103, !1679, !163}
!11604 = !{!11605, !11606, !11607, !11608}
!11605 = !DILocalVariable(name: "config", arg: 1, scope: !11601, file: !1618, line: 342, type: !1679)
!11606 = !DILocalVariable(name: "id", arg: 2, scope: !11601, file: !1618, line: 343, type: !163)
!11607 = !DILocalVariable(name: "ret", scope: !11601, file: !1618, line: 345, type: !103)
!11608 = !DILocalVariable(name: "state", scope: !11601, file: !1618, line: 346, type: !1621)
!11609 = !DILocation(line: 0, scope: !11601)
!11610 = !DILocation(line: 346, column: 2, scope: !11601)
!11611 = !DILocation(line: 348, column: 8, scope: !11601)
!11612 = !DILocation(line: 349, column: 10, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11601, file: !1618, line: 349, column: 6)
!11614 = !DILocation(line: 349, column: 6, scope: !11601)
!11615 = !DILocation(line: 353, column: 44, scope: !11601)
!11616 = !DILocation(line: 353, column: 9, scope: !11601)
!11617 = !DILocation(line: 353, column: 2, scope: !11601)
!11618 = !DILocation(line: 354, column: 1, scope: !11601)
!11619 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10889, file: !10889, line: 497, type: !11369, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11620)
!11620 = !{!11621, !11622, !11623}
!11621 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11619, file: !10889, line: 497, type: !1535)
!11622 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11619, file: !10889, line: 497, type: !132)
!11623 = !DILocalVariable(name: "val", scope: !11624, file: !10889, line: 499, type: !132)
!11624 = distinct !DILexicalBlock(scope: !11619, file: !10889, line: 499, column: 3)
!11625 = !DILocation(line: 0, scope: !11619)
!11626 = !DILocation(line: 499, column: 3, scope: !11624)
!11627 = !DILocation(line: 0, scope: !10929, inlinedAt: !11628)
!11628 = distinct !DILocation(line: 499, column: 3, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11624, file: !10889, line: 499, column: 3)
!11630 = !DILocation(line: 480, column: 4, scope: !10929, inlinedAt: !11628)
!11631 = !DILocation(line: 499, column: 3, scope: !11629)
!11632 = !DILocation(line: 0, scope: !11624)
!11633 = !DILocation(line: 0, scope: !10942, inlinedAt: !11634)
!11634 = distinct !DILocation(line: 499, column: 3, scope: !11624)
!11635 = !DILocation(line: 531, column: 4, scope: !10942, inlinedAt: !11634)
!11636 = distinct !{!11636, !11626, !11626}
!11637 = !DILocation(line: 500, column: 1, scope: !11619)
!11638 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10889, file: !10889, line: 850, type: !11378, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11639)
!11639 = !{!11640, !11641, !11642, !11643}
!11640 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11638, file: !10889, line: 850, type: !1535)
!11641 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11638, file: !10889, line: 850, type: !132)
!11642 = !DILocalVariable(name: "Parity", arg: 3, scope: !11638, file: !10889, line: 850, type: !132)
!11643 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11638, file: !10889, line: 851, type: !132)
!11644 = !DILocation(line: 0, scope: !11638)
!11645 = !DILocation(line: 853, column: 3, scope: !11638)
!11646 = !DILocation(line: 854, column: 3, scope: !11638)
!11647 = !DILocation(line: 855, column: 1, scope: !11638)
!11648 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10889, file: !10889, line: 1337, type: !10920, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11649)
!11649 = !{!11650}
!11650 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11648, file: !10889, line: 1337, type: !1535)
!11651 = !DILocation(line: 0, scope: !11648)
!11652 = !DILocation(line: 1339, column: 3, scope: !11648)
!11653 = !DILocation(line: 1340, column: 1, scope: !11648)
!11654 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1618, file: !1618, line: 316, type: !11655, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11657)
!11655 = !DISubroutineType(types: !11656)
!11656 = !{!103, !1679, !1621}
!11657 = !{!11658, !11659, !11660}
!11658 = !DILocalVariable(name: "config", arg: 1, scope: !11654, file: !1618, line: 317, type: !1679)
!11659 = !DILocalVariable(name: "state", arg: 2, scope: !11654, file: !1618, line: 318, type: !1621)
!11660 = !DILocalVariable(name: "reg", scope: !11654, file: !1618, line: 320, type: !22)
!11661 = !DILocation(line: 0, scope: !11654)
!11662 = !DILocation(line: 329, column: 39, scope: !11654)
!11663 = !DILocation(line: 329, column: 52, scope: !11654)
!11664 = !DILocation(line: 329, column: 9, scope: !11654)
!11665 = !DILocation(line: 329, column: 2, scope: !11654)
!11666 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !11581, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1420, retainedNodes: !11667)
!11667 = !{!11668}
!11668 = !DILocalVariable(name: "dev", arg: 1, scope: !11666, file: !152, line: 730, type: !1464)
!11669 = !DILocation(line: 0, scope: !11666)
!11670 = !DILocation(line: 732, column: 9, scope: !11666)
!11671 = !DILocation(line: 732, column: 2, scope: !11666)
!11672 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1762, file: !1762, line: 270, type: !1768, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11673)
!11673 = !{!11674}
!11674 = !DILocalVariable(name: "dev", arg: 1, scope: !11672, file: !1762, line: 270, type: !1770)
!11675 = !DILocation(line: 0, scope: !11672)
!11676 = !DILocation(line: 274, column: 2, scope: !11672)
!11677 = !DILocation(line: 275, column: 12, scope: !11672)
!11678 = !DILocation(line: 276, column: 15, scope: !11672)
!11679 = !DILocation(line: 277, column: 16, scope: !11672)
!11680 = !DILocation(line: 278, column: 15, scope: !11672)
!11681 = !DILocation(line: 279, column: 16, scope: !11672)
!11682 = !DILocation(line: 282, column: 2, scope: !11672)
!11683 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6843, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11684)
!11684 = !{!11685, !11686}
!11685 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11683, file: !507, line: 1814, type: !742)
!11686 = !DILocalVariable(name: "priority", arg: 2, scope: !11683, file: !507, line: 1814, type: !132)
!11687 = !DILocation(line: 0, scope: !11683)
!11688 = !DILocation(line: 1822, column: 46, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11690, file: !507, line: 1821, column: 3)
!11690 = distinct !DILexicalBlock(scope: !11683, file: !507, line: 1816, column: 7)
!11691 = !DILocation(line: 1824, column: 1, scope: !11683)
!11692 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1762, file: !1762, line: 118, type: !6746, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11693)
!11693 = !{!11694, !11695}
!11694 = !DILocalVariable(name: "arg", arg: 1, scope: !11692, file: !1762, line: 118, type: !102)
!11695 = !DILocalVariable(name: "dticks", scope: !11692, file: !1762, line: 121, type: !132)
!11696 = !DILocation(line: 0, scope: !11692)
!11697 = !DILocation(line: 124, column: 2, scope: !11692)
!11698 = !DILocation(line: 129, column: 17, scope: !11692)
!11699 = !DILocation(line: 129, column: 14, scope: !11692)
!11700 = !DILocation(line: 130, column: 15, scope: !11692)
!11701 = !DILocation(line: 145, column: 27, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11703, file: !1762, line: 132, column: 16)
!11703 = distinct !DILexicalBlock(scope: !11692, file: !1762, line: 132, column: 6)
!11704 = !DILocation(line: 145, column: 25, scope: !11702)
!11705 = !DILocation(line: 145, column: 45, scope: !11702)
!11706 = !DILocation(line: 146, column: 30, scope: !11702)
!11707 = !DILocation(line: 146, column: 20, scope: !11702)
!11708 = !DILocation(line: 147, column: 3, scope: !11702)
!11709 = !DILocation(line: 151, column: 2, scope: !11692)
!11710 = !DILocation(line: 152, column: 1, scope: !11692)
!11711 = distinct !DISubprogram(name: "elapsed", scope: !1762, file: !1762, line: 85, type: !6890, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11712)
!11712 = !{!11713, !11714, !11715}
!11713 = !DILocalVariable(name: "val1", scope: !11711, file: !1762, line: 87, type: !132)
!11714 = !DILocalVariable(name: "ctrl", scope: !11711, file: !1762, line: 88, type: !132)
!11715 = !DILocalVariable(name: "val2", scope: !11711, file: !1762, line: 89, type: !132)
!11716 = !DILocation(line: 87, column: 27, scope: !11711)
!11717 = !DILocation(line: 0, scope: !11711)
!11718 = !DILocation(line: 88, column: 27, scope: !11711)
!11719 = !DILocation(line: 89, column: 27, scope: !11711)
!11720 = !DILocation(line: 105, column: 12, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11711, file: !1762, line: 105, column: 6)
!11722 = !DILocation(line: 106, column: 6, scope: !11721)
!11723 = !DILocation(line: 107, column: 16, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11721, file: !1762, line: 106, column: 24)
!11725 = !DILocation(line: 111, column: 18, scope: !11724)
!11726 = !DILocation(line: 112, column: 2, scope: !11724)
!11727 = !DILocation(line: 114, column: 20, scope: !11711)
!11728 = !DILocation(line: 114, column: 30, scope: !11711)
!11729 = !DILocation(line: 114, column: 28, scope: !11711)
!11730 = !DILocation(line: 114, column: 2, scope: !11711)
!11731 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1762, file: !1762, line: 154, type: !11732, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11734)
!11732 = !DISubroutineType(types: !11733)
!11733 = !{null, !344, !166}
!11734 = !{!11735, !11736, !11737, !11738, !11739, !11740, !11741, !11746, !11747}
!11735 = !DILocalVariable(name: "ticks", arg: 1, scope: !11731, file: !1762, line: 154, type: !344)
!11736 = !DILocalVariable(name: "idle", arg: 2, scope: !11731, file: !1762, line: 154, type: !166)
!11737 = !DILocalVariable(name: "delay", scope: !11731, file: !1762, line: 169, type: !132)
!11738 = !DILocalVariable(name: "val1", scope: !11731, file: !1762, line: 170, type: !132)
!11739 = !DILocalVariable(name: "val2", scope: !11731, file: !1762, line: 170, type: !132)
!11740 = !DILocalVariable(name: "last_load_", scope: !11731, file: !1762, line: 171, type: !132)
!11741 = !DILocalVariable(name: "key", scope: !11731, file: !1762, line: 176, type: !11742)
!11742 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !11743)
!11743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !11744)
!11744 = !{!11745}
!11745 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11743, file: !472, line: 33, baseType: !103, size: 32)
!11746 = !DILocalVariable(name: "pending", scope: !11731, file: !1762, line: 178, type: !132)
!11747 = !DILocalVariable(name: "unannounced", scope: !11731, file: !1762, line: 185, type: !132)
!11748 = !DILocation(line: 0, scope: !11731)
!11749 = !DILocation(line: 162, column: 49, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11731, file: !1762, line: 162, column: 6)
!11751 = !DILocation(line: 163, column: 17, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11750, file: !1762, line: 162, column: 78)
!11753 = !DILocation(line: 164, column: 13, scope: !11752)
!11754 = !DILocation(line: 165, column: 3, scope: !11752)
!11755 = !DILocation(line: 171, column: 24, scope: !11731)
!11756 = !DILocation(line: 173, column: 10, scope: !11731)
!11757 = !DILocation(line: 174, column: 10, scope: !11731)
!11758 = !DILocalVariable(name: "l", arg: 1, scope: !11759, file: !472, line: 136, type: !11762)
!11759 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !11760, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11763)
!11760 = !DISubroutineType(types: !11761)
!11761 = !{!11742, !11762}
!11762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 32)
!11763 = !{!11758, !11764}
!11764 = !DILocalVariable(name: "k", scope: !11759, file: !472, line: 139, type: !11742)
!11765 = !DILocation(line: 0, scope: !11759, inlinedAt: !11766)
!11766 = distinct !DILocation(line: 176, column: 25, scope: !11731)
!11767 = !DILocation(line: 55, column: 2, scope: !11768, inlinedAt: !11772)
!11768 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5789, file: !5789, line: 42, type: !5790, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11769)
!11769 = !{!11770, !11771}
!11770 = !DILocalVariable(name: "key", scope: !11768, file: !5789, line: 44, type: !32)
!11771 = !DILocalVariable(name: "tmp", scope: !11768, file: !5789, line: 53, type: !32)
!11772 = distinct !DILocation(line: 145, column: 10, scope: !11759, inlinedAt: !11766)
!11773 = !{i64 1921275}
!11774 = !DILocation(line: 0, scope: !11768, inlinedAt: !11772)
!11775 = !DILocation(line: 178, column: 21, scope: !11731)
!11776 = !DILocation(line: 180, column: 18, scope: !11731)
!11777 = !DILocation(line: 182, column: 14, scope: !11731)
!11778 = !DILocation(line: 183, column: 15, scope: !11731)
!11779 = !DILocation(line: 185, column: 39, scope: !11731)
!11780 = !DILocation(line: 185, column: 37, scope: !11731)
!11781 = !DILocation(line: 187, column: 27, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11731, file: !1762, line: 187, column: 6)
!11783 = !DILocation(line: 187, column: 6, scope: !11731)
!11784 = !DILocation(line: 202, column: 27, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11782, file: !1762, line: 195, column: 9)
!11786 = !DILocation(line: 202, column: 48, scope: !11785)
!11787 = !DILocation(line: 203, column: 9, scope: !11785)
!11788 = !DILocation(line: 204, column: 11, scope: !11785)
!11789 = !DILocation(line: 205, column: 13, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11785, file: !1762, line: 205, column: 7)
!11791 = !DILocation(line: 205, column: 7, scope: !11785)
!11792 = !DILocation(line: 0, scope: !11782)
!11793 = !DILocation(line: 212, column: 18, scope: !11731)
!11794 = !DILocation(line: 214, column: 28, scope: !11731)
!11795 = !DILocation(line: 214, column: 16, scope: !11731)
!11796 = !DILocation(line: 215, column: 15, scope: !11731)
!11797 = !DILocation(line: 227, column: 11, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11731, file: !1762, line: 227, column: 6)
!11799 = !DILocation(line: 227, column: 6, scope: !11731)
!11800 = !DILocation(line: 228, column: 15, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11798, file: !1762, line: 227, column: 19)
!11802 = !DILocation(line: 228, column: 38, scope: !11801)
!11803 = !DILocation(line: 228, column: 24, scope: !11801)
!11804 = !DILocation(line: 229, column: 2, scope: !11801)
!11805 = !DILocation(line: 230, column: 24, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11798, file: !1762, line: 229, column: 9)
!11807 = !DILocation(line: 230, column: 15, scope: !11806)
!11808 = !DILocation(line: 0, scope: !11798)
!11809 = !DILocalVariable(name: "key", arg: 2, scope: !11810, file: !472, line: 190, type: !11742)
!11810 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !11811, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11813)
!11811 = !DISubroutineType(types: !11812)
!11812 = !{null, !11762, !11742}
!11813 = !{!11814, !11809}
!11814 = !DILocalVariable(name: "l", arg: 1, scope: !11810, file: !472, line: 189, type: !11762)
!11815 = !DILocation(line: 0, scope: !11810, inlinedAt: !11816)
!11816 = distinct !DILocation(line: 232, column: 2, scope: !11731)
!11817 = !DILocalVariable(name: "key", arg: 1, scope: !11818, file: !5789, line: 84, type: !32)
!11818 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5789, file: !5789, line: 84, type: !5800, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11819)
!11819 = !{!11817}
!11820 = !DILocation(line: 0, scope: !11818, inlinedAt: !11821)
!11821 = distinct !DILocation(line: 215, column: 2, scope: !11810, inlinedAt: !11816)
!11822 = !DILocation(line: 95, column: 2, scope: !11818, inlinedAt: !11821)
!11823 = !{i64 1922092}
!11824 = !DILocation(line: 234, column: 1, scope: !11731)
!11825 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1762, file: !1762, line: 236, type: !6890, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11826)
!11826 = !{!11827, !11828}
!11827 = !DILocalVariable(name: "key", scope: !11825, file: !1762, line: 242, type: !11742)
!11828 = !DILocalVariable(name: "cyc", scope: !11825, file: !1762, line: 243, type: !132)
!11829 = !DILocation(line: 0, scope: !11759, inlinedAt: !11830)
!11830 = distinct !DILocation(line: 242, column: 25, scope: !11825)
!11831 = !DILocation(line: 55, column: 2, scope: !11768, inlinedAt: !11832)
!11832 = distinct !DILocation(line: 145, column: 10, scope: !11759, inlinedAt: !11830)
!11833 = !DILocation(line: 0, scope: !11768, inlinedAt: !11832)
!11834 = !DILocation(line: 0, scope: !11825)
!11835 = !DILocation(line: 243, column: 17, scope: !11825)
!11836 = !DILocation(line: 243, column: 29, scope: !11825)
!11837 = !DILocation(line: 243, column: 27, scope: !11825)
!11838 = !DILocation(line: 243, column: 43, scope: !11825)
!11839 = !DILocation(line: 243, column: 41, scope: !11825)
!11840 = !DILocation(line: 0, scope: !11810, inlinedAt: !11841)
!11841 = distinct !DILocation(line: 245, column: 2, scope: !11825)
!11842 = !DILocation(line: 0, scope: !11818, inlinedAt: !11843)
!11843 = distinct !DILocation(line: 215, column: 2, scope: !11810, inlinedAt: !11841)
!11844 = !DILocation(line: 95, column: 2, scope: !11818, inlinedAt: !11843)
!11845 = !DILocation(line: 246, column: 13, scope: !11825)
!11846 = !DILocation(line: 246, column: 2, scope: !11825)
!11847 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1762, file: !1762, line: 249, type: !6890, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11848)
!11848 = !{!11849, !11850}
!11849 = !DILocalVariable(name: "key", scope: !11847, file: !1762, line: 251, type: !11742)
!11850 = !DILocalVariable(name: "ret", scope: !11847, file: !1762, line: 252, type: !132)
!11851 = !DILocation(line: 0, scope: !11759, inlinedAt: !11852)
!11852 = distinct !DILocation(line: 251, column: 25, scope: !11847)
!11853 = !DILocation(line: 55, column: 2, scope: !11768, inlinedAt: !11854)
!11854 = distinct !DILocation(line: 145, column: 10, scope: !11759, inlinedAt: !11852)
!11855 = !DILocation(line: 0, scope: !11768, inlinedAt: !11854)
!11856 = !DILocation(line: 0, scope: !11847)
!11857 = !DILocation(line: 252, column: 17, scope: !11847)
!11858 = !DILocation(line: 252, column: 29, scope: !11847)
!11859 = !DILocation(line: 252, column: 27, scope: !11847)
!11860 = !DILocation(line: 0, scope: !11810, inlinedAt: !11861)
!11861 = distinct !DILocation(line: 254, column: 2, scope: !11847)
!11862 = !DILocation(line: 0, scope: !11818, inlinedAt: !11863)
!11863 = distinct !DILocation(line: 215, column: 2, scope: !11810, inlinedAt: !11861)
!11864 = !DILocation(line: 95, column: 2, scope: !11818, inlinedAt: !11863)
!11865 = !DILocation(line: 255, column: 2, scope: !11847)
!11866 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1762, file: !1762, line: 258, type: !3232, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !473)
!11867 = !DILocation(line: 260, column: 6, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11866, file: !1762, line: 260, column: 6)
!11869 = !DILocation(line: 260, column: 16, scope: !11868)
!11870 = !DILocation(line: 260, column: 6, scope: !11866)
!11871 = !DILocation(line: 261, column: 17, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11868, file: !1762, line: 260, column: 34)
!11873 = !DILocation(line: 262, column: 2, scope: !11872)
!11874 = !DILocation(line: 263, column: 1, scope: !11866)
!11875 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1762, file: !1762, line: 265, type: !3232, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !473)
!11876 = !DILocation(line: 267, column: 16, scope: !11875)
!11877 = !DILocation(line: 268, column: 1, scope: !11875)
!11878 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11879, file: !11879, line: 9, type: !11880, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !11903)
!11879 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11880 = !DISubroutineType(types: !11881)
!11881 = !{!103, !11882, !163, !11902}
!11882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11883, size: 32)
!11883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11884)
!11884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1618, line: 60, size: 64, elements: !11885)
!11885 = !{!11886, !11901}
!11886 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11884, file: !1618, line: 69, baseType: !11887, size: 32)
!11887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11888, size: 32)
!11888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11889)
!11889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1618, line: 50, size: 64, elements: !11890)
!11890 = !{!11891, !11899, !11900}
!11891 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11889, file: !1618, line: 52, baseType: !11892, size: 32)
!11892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11893, size: 32)
!11893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11894)
!11894 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1629, line: 37, baseType: !11895)
!11895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1629, line: 32, size: 64, elements: !11896)
!11896 = !{!11897, !11898}
!11897 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11895, file: !1629, line: 34, baseType: !132, size: 32)
!11898 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11895, file: !1629, line: 36, baseType: !132, size: 32, offset: 32)
!11899 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11889, file: !1618, line: 54, baseType: !163, size: 8, offset: 32)
!11900 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11889, file: !1618, line: 56, baseType: !163, size: 8, offset: 40)
!11901 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11884, file: !1618, line: 71, baseType: !163, size: 8, offset: 32)
!11902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11887, size: 32)
!11903 = !{!11904, !11905, !11906}
!11904 = !DILocalVariable(name: "config", arg: 1, scope: !11878, file: !11879, line: 9, type: !11882)
!11905 = !DILocalVariable(name: "id", arg: 2, scope: !11878, file: !11879, line: 9, type: !163)
!11906 = !DILocalVariable(name: "state", arg: 3, scope: !11878, file: !11879, line: 10, type: !11902)
!11907 = !DILocation(line: 0, scope: !11878)
!11908 = !DILocation(line: 12, column: 20, scope: !11878)
!11909 = !DILocation(line: 13, column: 27, scope: !11878)
!11910 = !DILocation(line: 13, column: 42, scope: !11878)
!11911 = !DILocation(line: 13, column: 19, scope: !11878)
!11912 = !DILocation(line: 13, column: 16, scope: !11878)
!11913 = !DILocation(line: 13, column: 2, scope: !11878)
!11914 = distinct !{!11914, !11913, !11915}
!11915 = !DILocation(line: 19, column: 2, scope: !11878)
!11916 = !DILocation(line: 14, column: 23, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11918, file: !11879, line: 14, column: 7)
!11918 = distinct !DILexicalBlock(scope: !11878, file: !11879, line: 13, column: 54)
!11919 = !DILocation(line: 14, column: 10, scope: !11917)
!11920 = !DILocation(line: 18, column: 11, scope: !11918)
!11921 = !DILocation(line: 14, column: 7, scope: !11918)
!11922 = !DILocation(line: 22, column: 1, scope: !11878)
!11923 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1879, file: !1879, line: 193, type: !11924, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !11933)
!11924 = !DISubroutineType(types: !11925)
!11925 = !{!103, !11926, !163, !22}
!11926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11927, size: 32)
!11927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11928)
!11928 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1629, line: 37, baseType: !11929)
!11929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1629, line: 32, size: 64, elements: !11930)
!11930 = !{!11931, !11932}
!11931 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11929, file: !1629, line: 34, baseType: !132, size: 32)
!11932 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11929, file: !1629, line: 36, baseType: !132, size: 32, offset: 32)
!11933 = !{!11934, !11935, !11936, !11937, !11938, !11939, !11940, !11941, !11943}
!11934 = !DILocalVariable(name: "pins", arg: 1, scope: !11923, file: !1879, line: 193, type: !11926)
!11935 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11923, file: !1879, line: 193, type: !163)
!11936 = !DILocalVariable(name: "reg", arg: 3, scope: !11923, file: !1879, line: 194, type: !22)
!11937 = !DILocalVariable(name: "pin", scope: !11923, file: !1879, line: 196, type: !132)
!11938 = !DILocalVariable(name: "mux", scope: !11923, file: !1879, line: 196, type: !132)
!11939 = !DILocalVariable(name: "pin_cgf", scope: !11923, file: !1879, line: 197, type: !132)
!11940 = !DILocalVariable(name: "ret", scope: !11923, file: !1879, line: 198, type: !103)
!11941 = !DILocalVariable(name: "i", scope: !11942, file: !1879, line: 209, type: !163)
!11942 = distinct !DILexicalBlock(scope: !11923, file: !1879, line: 209, column: 2)
!11943 = !DILocalVariable(name: "gpio_out", scope: !11944, file: !1879, line: 239, type: !132)
!11944 = distinct !DILexicalBlock(scope: !11945, file: !1879, line: 238, column: 55)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !1879, line: 238, column: 14)
!11946 = distinct !DILexicalBlock(scope: !11947, file: !1879, line: 236, column: 14)
!11947 = distinct !DILexicalBlock(scope: !11948, file: !1879, line: 234, column: 7)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !1879, line: 209, column: 41)
!11949 = distinct !DILexicalBlock(scope: !11942, file: !1879, line: 209, column: 2)
!11950 = !DILocation(line: 0, scope: !11923)
!11951 = !DILocation(line: 0, scope: !11942)
!11952 = !DILocation(line: 209, column: 25, scope: !11949)
!11953 = !DILocation(line: 209, column: 2, scope: !11942)
!11954 = distinct !{!11954, !11953, !11955}
!11955 = !DILocation(line: 259, column: 2, scope: !11942)
!11956 = !DILocation(line: 210, column: 17, scope: !11948)
!11957 = !DILocation(line: 234, column: 7, scope: !11947)
!11958 = !DILocation(line: 234, column: 33, scope: !11947)
!11959 = !DILocation(line: 234, column: 7, scope: !11948)
!11960 = !DILocation(line: 235, column: 22, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11947, file: !1879, line: 234, column: 49)
!11962 = !DILocation(line: 235, column: 29, scope: !11961)
!11963 = !DILocation(line: 236, column: 3, scope: !11961)
!11964 = !DILocation(line: 236, column: 14, scope: !11947)
!11965 = !DILocation(line: 239, column: 32, scope: !11944)
!11966 = !DILocation(line: 0, scope: !11944)
!11967 = !DILocation(line: 241, column: 8, scope: !11944)
!11968 = !DILocation(line: 246, column: 3, scope: !11944)
!11969 = !DILocation(line: 252, column: 9, scope: !11948)
!11970 = !DILocation(line: 255, column: 9, scope: !11948)
!11971 = !DILocation(line: 256, column: 11, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11948, file: !1879, line: 256, column: 7)
!11973 = !DILocation(line: 209, column: 37, scope: !11949)
!11974 = !DILocation(line: 256, column: 7, scope: !11948)
!11975 = !DILocation(line: 262, column: 1, scope: !11923)
!11976 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1879, file: !1879, line: 176, type: !11977, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !11979)
!11977 = !DISubroutineType(types: !11978)
!11978 = !{!103, !132, !132, !132}
!11979 = !{!11980, !11981, !11982, !11983}
!11980 = !DILocalVariable(name: "pin", arg: 1, scope: !11976, file: !1879, line: 176, type: !132)
!11981 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11976, file: !1879, line: 176, type: !132)
!11982 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11976, file: !1879, line: 176, type: !132)
!11983 = !DILocalVariable(name: "port_device", scope: !11976, file: !1879, line: 178, type: !1809)
!11984 = !DILocation(line: 0, scope: !11976)
!11985 = !DILocation(line: 180, column: 22, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11976, file: !1879, line: 180, column: 6)
!11987 = !DILocation(line: 180, column: 6, scope: !11976)
!11988 = !DILocation(line: 180, column: 6, scope: !11986)
!11989 = !DILocation(line: 184, column: 16, scope: !11976)
!11990 = !DILocation(line: 186, column: 19, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11976, file: !1879, line: 186, column: 6)
!11992 = !DILocation(line: 186, column: 28, scope: !11991)
!11993 = !DILocation(line: 186, column: 33, scope: !11991)
!11994 = !DILocation(line: 186, column: 6, scope: !11976)
!11995 = !DILocation(line: 190, column: 43, scope: !11976)
!11996 = !DILocation(line: 190, column: 9, scope: !11976)
!11997 = !DILocation(line: 190, column: 2, scope: !11976)
!11998 = !DILocation(line: 191, column: 1, scope: !11976)
!11999 = distinct !DISubprogram(name: "device_is_ready", scope: !6650, file: !6650, line: 47, type: !12000, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12002)
!12000 = !DISubroutineType(types: !12001)
!12001 = !{!166, !1809}
!12002 = !{!12003}
!12003 = !DILocalVariable(name: "dev", arg: 1, scope: !11999, file: !6650, line: 47, type: !1809)
!12004 = !DILocation(line: 0, scope: !11999)
!12005 = !DILocation(line: 55, column: 2, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !11999, file: !6650, line: 55, column: 2)
!12007 = !{i64 2149155284}
!12008 = !DILocation(line: 56, column: 9, scope: !11999)
!12009 = !DILocation(line: 56, column: 2, scope: !11999)
!12010 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !152, file: !152, line: 730, type: !12000, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1797, retainedNodes: !12011)
!12011 = !{!12012}
!12012 = !DILocalVariable(name: "dev", arg: 1, scope: !12010, file: !152, line: 730, type: !1809)
!12013 = !DILocation(line: 0, scope: !12010)
!12014 = !DILocation(line: 732, column: 9, scope: !12010)
!12015 = !DILocation(line: 732, column: 2, scope: !12010)
!12016 = distinct !DISubprogram(name: "SystemInit", scope: !1929, file: !1929, line: 167, type: !3232, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !473)
!12017 = !DILocation(line: 182, column: 1, scope: !12016)
!12018 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1929, file: !1929, line: 220, type: !3232, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !12019)
!12019 = !{!12020, !12021, !12022, !12023, !12024}
!12020 = !DILocalVariable(name: "tmp", scope: !12018, file: !1929, line: 222, type: !132)
!12021 = !DILocalVariable(name: "pllvco", scope: !12018, file: !1929, line: 222, type: !132)
!12022 = !DILocalVariable(name: "pllp", scope: !12018, file: !1929, line: 222, type: !132)
!12023 = !DILocalVariable(name: "pllsource", scope: !12018, file: !1929, line: 222, type: !132)
!12024 = !DILocalVariable(name: "pllm", scope: !12018, file: !1929, line: 222, type: !132)
!12025 = !DILocation(line: 0, scope: !12018)
!12026 = !DILocation(line: 225, column: 14, scope: !12018)
!12027 = !DILocation(line: 225, column: 19, scope: !12018)
!12028 = !DILocation(line: 227, column: 3, scope: !12018)
!12029 = !DILocation(line: 234, column: 7, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12018, file: !1929, line: 228, column: 3)
!12031 = !DILocation(line: 240, column: 25, scope: !12030)
!12032 = !DILocation(line: 241, column: 19, scope: !12030)
!12033 = !DILocation(line: 241, column: 27, scope: !12030)
!12034 = !DILocation(line: 243, column: 21, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12030, file: !1929, line: 243, column: 11)
!12036 = !DILocation(line: 0, scope: !12035)
!12037 = !DILocation(line: 254, column: 22, scope: !12030)
!12038 = !DILocation(line: 254, column: 62, scope: !12030)
!12039 = !DILocation(line: 255, column: 31, scope: !12030)
!12040 = !DILocation(line: 256, column: 7, scope: !12030)
!12041 = !DILocation(line: 0, scope: !12030)
!12042 = !DILocation(line: 263, column: 30, scope: !12018)
!12043 = !DILocation(line: 263, column: 52, scope: !12018)
!12044 = !DILocation(line: 263, column: 9, scope: !12018)
!12045 = !DILocation(line: 265, column: 19, scope: !12018)
!12046 = !DILocation(line: 266, column: 1, scope: !12018)
!12047 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12048, file: !12048, line: 200, type: !12049, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !473)
!12048 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12049 = !DISubroutineType(types: !12050)
!12050 = !{!12051}
!12051 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3045, line: 44, baseType: !3044)
!12052 = !DILocation(line: 202, column: 3, scope: !12047)
!12053 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12048, file: !12048, line: 219, type: !12054, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12078)
!12054 = !DISubroutineType(types: !12055)
!12055 = !{!12051, !12056}
!12056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12057, size: 32)
!12057 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12058, line: 70, baseType: !12059)
!12058 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12058, line: 49, size: 384, elements: !12060)
!12060 = !{!12061, !12062, !12063, !12064, !12065, !12066, !12067}
!12061 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12059, file: !12058, line: 51, baseType: !132, size: 32)
!12062 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12059, file: !12058, line: 54, baseType: !132, size: 32, offset: 32)
!12063 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12059, file: !12058, line: 57, baseType: !132, size: 32, offset: 64)
!12064 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12059, file: !12058, line: 60, baseType: !132, size: 32, offset: 96)
!12065 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12059, file: !12058, line: 63, baseType: !132, size: 32, offset: 128)
!12066 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12059, file: !12058, line: 66, baseType: !132, size: 32, offset: 160)
!12067 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12059, file: !12058, line: 69, baseType: !12068, size: 192, offset: 192)
!12068 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12069, line: 73, baseType: !12070)
!12069 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12070 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12069, line: 45, size: 192, elements: !12071)
!12071 = !{!12072, !12073, !12074, !12075, !12076, !12077}
!12072 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12070, file: !12069, line: 47, baseType: !132, size: 32)
!12073 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12070, file: !12069, line: 50, baseType: !132, size: 32, offset: 32)
!12074 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12070, file: !12069, line: 53, baseType: !132, size: 32, offset: 64)
!12075 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12070, file: !12069, line: 56, baseType: !132, size: 32, offset: 96)
!12076 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12070, file: !12069, line: 60, baseType: !132, size: 32, offset: 128)
!12077 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12070, file: !12069, line: 63, baseType: !132, size: 32, offset: 160)
!12078 = !{!12079, !12080, !12081, !12082, !12086}
!12079 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12053, file: !12048, line: 219, type: !12056)
!12080 = !DILocalVariable(name: "tickstart", scope: !12053, file: !12048, line: 221, type: !132)
!12081 = !DILocalVariable(name: "pll_config", scope: !12053, file: !12048, line: 221, type: !132)
!12082 = !DILocalVariable(name: "pwrclkchanged", scope: !12083, file: !12048, line: 391, type: !12085)
!12083 = distinct !DILexicalBlock(scope: !12084, file: !12048, line: 390, column: 3)
!12084 = distinct !DILexicalBlock(scope: !12053, file: !12048, line: 389, column: 6)
!12085 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !781, line: 188, baseType: !3051)
!12086 = !DILocalVariable(name: "tmpreg", scope: !12087, file: !12048, line: 400, type: !131)
!12087 = distinct !DILexicalBlock(scope: !12088, file: !12048, line: 400, column: 7)
!12088 = distinct !DILexicalBlock(scope: !12089, file: !12048, line: 399, column: 5)
!12089 = distinct !DILexicalBlock(scope: !12083, file: !12048, line: 398, column: 8)
!12090 = !DILocation(line: 0, scope: !12053)
!12091 = !DILocation(line: 224, column: 24, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12053, file: !12048, line: 224, column: 6)
!12093 = !DILocation(line: 224, column: 6, scope: !12053)
!12094 = !DILocation(line: 232, column: 27, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12053, file: !12048, line: 232, column: 6)
!12096 = !DILocation(line: 232, column: 43, scope: !12095)
!12097 = !DILocation(line: 232, column: 69, scope: !12095)
!12098 = !DILocation(line: 232, column: 6, scope: !12053)
!12099 = !DILocation(line: 237, column: 9, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12101, file: !12048, line: 237, column: 8)
!12101 = distinct !DILexicalBlock(scope: !12095, file: !12048, line: 233, column: 3)
!12102 = !DILocation(line: 237, column: 39, scope: !12100)
!12103 = !DILocation(line: 237, column: 60, scope: !12100)
!12104 = !DILocation(line: 238, column: 9, scope: !12100)
!12105 = !DILocation(line: 238, column: 39, scope: !12100)
!12106 = !DILocation(line: 238, column: 60, scope: !12100)
!12107 = !DILocation(line: 238, column: 70, scope: !12100)
!12108 = !DILocation(line: 238, column: 78, scope: !12100)
!12109 = !DILocation(line: 238, column: 100, scope: !12100)
!12110 = !DILocation(line: 237, column: 8, scope: !12101)
!12111 = !DILocation(line: 240, column: 11, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12113, file: !12048, line: 240, column: 10)
!12113 = distinct !DILexicalBlock(scope: !12100, file: !12048, line: 239, column: 5)
!12114 = !DILocation(line: 240, column: 57, scope: !12112)
!12115 = !DILocation(line: 240, column: 80, scope: !12112)
!12116 = !DILocation(line: 240, column: 89, scope: !12112)
!12117 = !DILocation(line: 240, column: 10, scope: !12113)
!12118 = !DILocation(line: 248, column: 7, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12120, file: !12048, line: 248, column: 7)
!12120 = distinct !DILexicalBlock(scope: !12121, file: !12048, line: 248, column: 7)
!12121 = distinct !DILexicalBlock(scope: !12100, file: !12048, line: 246, column: 5)
!12122 = !DILocation(line: 248, column: 7, scope: !12120)
!12123 = !DILocation(line: 248, column: 7, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12119, file: !12048, line: 248, column: 7)
!12125 = !DILocation(line: 248, column: 7, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12127, file: !12048, line: 248, column: 7)
!12127 = distinct !DILexicalBlock(scope: !12119, file: !12048, line: 248, column: 7)
!12128 = !DILocation(line: 248, column: 7, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12127, file: !12048, line: 248, column: 7)
!12130 = !DILocation(line: 0, scope: !12119)
!12131 = !DILocation(line: 251, column: 30, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12121, file: !12048, line: 251, column: 10)
!12133 = !DILocation(line: 251, column: 40, scope: !12132)
!12134 = !DILocation(line: 0, scope: !12132)
!12135 = !DILocation(line: 251, column: 10, scope: !12121)
!12136 = !DILocation(line: 257, column: 15, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12132, file: !12048, line: 252, column: 7)
!12138 = !DILocation(line: 257, column: 51, scope: !12137)
!12139 = !DILocation(line: 257, column: 9, scope: !12137)
!12140 = !DILocation(line: 259, column: 15, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12142, file: !12048, line: 259, column: 14)
!12142 = distinct !DILexicalBlock(scope: !12137, file: !12048, line: 258, column: 9)
!12143 = !DILocation(line: 259, column: 29, scope: !12141)
!12144 = !DILocation(line: 259, column: 43, scope: !12141)
!12145 = !DILocation(line: 259, column: 14, scope: !12142)
!12146 = distinct !{!12146, !12139, !12147}
!12147 = !DILocation(line: 263, column: 9, scope: !12137)
!12148 = !DILocation(line: 271, column: 15, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12132, file: !12048, line: 266, column: 7)
!12150 = !DILocation(line: 271, column: 9, scope: !12149)
!12151 = !DILocation(line: 273, column: 15, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12153, file: !12048, line: 273, column: 14)
!12153 = distinct !DILexicalBlock(scope: !12149, file: !12048, line: 272, column: 9)
!12154 = !DILocation(line: 273, column: 29, scope: !12152)
!12155 = !DILocation(line: 273, column: 43, scope: !12152)
!12156 = !DILocation(line: 273, column: 14, scope: !12153)
!12157 = distinct !{!12157, !12150, !12158}
!12158 = !DILocation(line: 277, column: 9, scope: !12149)
!12159 = !DILocation(line: 282, column: 27, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12053, file: !12048, line: 282, column: 6)
!12161 = !DILocation(line: 282, column: 43, scope: !12160)
!12162 = !DILocation(line: 282, column: 69, scope: !12160)
!12163 = !DILocation(line: 282, column: 6, scope: !12053)
!12164 = !DILocation(line: 289, column: 9, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12166, file: !12048, line: 289, column: 8)
!12166 = distinct !DILexicalBlock(scope: !12160, file: !12048, line: 283, column: 3)
!12167 = !DILocation(line: 289, column: 39, scope: !12165)
!12168 = !DILocation(line: 289, column: 60, scope: !12165)
!12169 = !DILocation(line: 290, column: 9, scope: !12165)
!12170 = !DILocation(line: 290, column: 39, scope: !12165)
!12171 = !DILocation(line: 290, column: 60, scope: !12165)
!12172 = !DILocation(line: 290, column: 70, scope: !12165)
!12173 = !DILocation(line: 290, column: 78, scope: !12165)
!12174 = !DILocation(line: 290, column: 100, scope: !12165)
!12175 = !DILocation(line: 289, column: 8, scope: !12166)
!12176 = !DILocation(line: 293, column: 11, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !12048, line: 293, column: 10)
!12178 = distinct !DILexicalBlock(scope: !12165, file: !12048, line: 291, column: 5)
!12179 = !DILocation(line: 293, column: 57, scope: !12177)
!12180 = !DILocation(line: 293, column: 80, scope: !12177)
!12181 = !DILocation(line: 293, column: 89, scope: !12177)
!12182 = !DILocation(line: 293, column: 10, scope: !12178)
!12183 = !DILocation(line: 307, column: 30, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12185, file: !12048, line: 307, column: 10)
!12185 = distinct !DILexicalBlock(scope: !12165, file: !12048, line: 305, column: 5)
!12186 = !DILocation(line: 307, column: 39, scope: !12184)
!12187 = !DILocation(line: 307, column: 10, scope: !12185)
!12188 = !DILocation(line: 310, column: 9, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12184, file: !12048, line: 308, column: 7)
!12190 = !DILocation(line: 313, column: 21, scope: !12189)
!12191 = !DILocation(line: 316, column: 9, scope: !12189)
!12192 = !DILocation(line: 316, column: 15, scope: !12189)
!12193 = !DILocation(line: 316, column: 51, scope: !12189)
!12194 = !DILocation(line: 318, column: 15, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12196, file: !12048, line: 318, column: 14)
!12196 = distinct !DILexicalBlock(scope: !12189, file: !12048, line: 317, column: 9)
!12197 = !DILocation(line: 318, column: 29, scope: !12195)
!12198 = !DILocation(line: 318, column: 43, scope: !12195)
!12199 = !DILocation(line: 318, column: 14, scope: !12196)
!12200 = distinct !{!12200, !12191, !12201}
!12201 = !DILocation(line: 322, column: 9, scope: !12189)
!12202 = !DILocation(line: 330, column: 9, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12184, file: !12048, line: 328, column: 7)
!12204 = !DILocation(line: 333, column: 21, scope: !12203)
!12205 = !DILocation(line: 336, column: 9, scope: !12203)
!12206 = !DILocation(line: 336, column: 15, scope: !12203)
!12207 = !DILocation(line: 338, column: 15, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12209, file: !12048, line: 338, column: 14)
!12209 = distinct !DILexicalBlock(scope: !12203, file: !12048, line: 337, column: 9)
!12210 = !DILocation(line: 338, column: 29, scope: !12208)
!12211 = !DILocation(line: 338, column: 43, scope: !12208)
!12212 = !DILocation(line: 338, column: 14, scope: !12209)
!12213 = distinct !{!12213, !12205, !12214}
!12214 = !DILocation(line: 342, column: 9, scope: !12203)
!12215 = !DILocation(line: 0, scope: !12165)
!12216 = !DILocation(line: 347, column: 27, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12053, file: !12048, line: 347, column: 6)
!12218 = !DILocation(line: 347, column: 43, scope: !12217)
!12219 = !DILocation(line: 347, column: 69, scope: !12217)
!12220 = !DILocation(line: 347, column: 6, scope: !12053)
!12221 = !DILocation(line: 353, column: 28, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12223, file: !12048, line: 353, column: 8)
!12223 = distinct !DILexicalBlock(scope: !12217, file: !12048, line: 348, column: 3)
!12224 = !DILocation(line: 353, column: 37, scope: !12222)
!12225 = !DILocation(line: 353, column: 8, scope: !12223)
!12226 = !DILocation(line: 356, column: 7, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !12222, file: !12048, line: 354, column: 5)
!12228 = !DILocation(line: 359, column: 19, scope: !12227)
!12229 = !DILocation(line: 362, column: 7, scope: !12227)
!12230 = !DILocation(line: 362, column: 13, scope: !12227)
!12231 = !DILocation(line: 362, column: 49, scope: !12227)
!12232 = !DILocation(line: 364, column: 13, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12234, file: !12048, line: 364, column: 12)
!12234 = distinct !DILexicalBlock(scope: !12227, file: !12048, line: 363, column: 7)
!12235 = !DILocation(line: 364, column: 27, scope: !12233)
!12236 = !DILocation(line: 364, column: 41, scope: !12233)
!12237 = !DILocation(line: 364, column: 12, scope: !12234)
!12238 = distinct !{!12238, !12229, !12239}
!12239 = !DILocation(line: 368, column: 7, scope: !12227)
!12240 = !DILocation(line: 373, column: 7, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12222, file: !12048, line: 371, column: 5)
!12242 = !DILocation(line: 376, column: 19, scope: !12241)
!12243 = !DILocation(line: 379, column: 7, scope: !12241)
!12244 = !DILocation(line: 379, column: 13, scope: !12241)
!12245 = !DILocation(line: 381, column: 13, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12247, file: !12048, line: 381, column: 12)
!12247 = distinct !DILexicalBlock(scope: !12241, file: !12048, line: 380, column: 7)
!12248 = !DILocation(line: 381, column: 27, scope: !12246)
!12249 = !DILocation(line: 381, column: 41, scope: !12246)
!12250 = !DILocation(line: 381, column: 12, scope: !12247)
!12251 = distinct !{!12251, !12243, !12252}
!12252 = !DILocation(line: 385, column: 7, scope: !12241)
!12253 = !DILocation(line: 389, column: 27, scope: !12084)
!12254 = !DILocation(line: 389, column: 43, scope: !12084)
!12255 = !DILocation(line: 389, column: 69, scope: !12084)
!12256 = !DILocation(line: 389, column: 6, scope: !12053)
!12257 = !DILocation(line: 0, scope: !12083)
!12258 = !DILocation(line: 398, column: 8, scope: !12089)
!12259 = !DILocation(line: 398, column: 8, scope: !12083)
!12260 = !DILocation(line: 400, column: 7, scope: !12087)
!12261 = !DILocation(line: 400, column: 7, scope: !12088)
!12262 = !DILocation(line: 402, column: 5, scope: !12088)
!12263 = !DILocation(line: 404, column: 8, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12083, file: !12048, line: 404, column: 8)
!12265 = !DILocation(line: 404, column: 8, scope: !12083)
!12266 = !DILocation(line: 407, column: 7, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12264, file: !12048, line: 405, column: 5)
!12268 = !DILocation(line: 410, column: 19, scope: !12267)
!12269 = !DILocation(line: 412, column: 7, scope: !12267)
!12270 = !DILocation(line: 412, column: 13, scope: !12267)
!12271 = !DILocation(line: 414, column: 13, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12273, file: !12048, line: 414, column: 12)
!12273 = distinct !DILexicalBlock(scope: !12267, file: !12048, line: 413, column: 7)
!12274 = !DILocation(line: 414, column: 27, scope: !12272)
!12275 = !DILocation(line: 414, column: 40, scope: !12272)
!12276 = !DILocation(line: 414, column: 12, scope: !12273)
!12277 = distinct !{!12277, !12269, !12278}
!12278 = !DILocation(line: 418, column: 7, scope: !12267)
!12279 = !DILocation(line: 422, column: 5, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12281, file: !12048, line: 422, column: 5)
!12281 = distinct !DILexicalBlock(scope: !12083, file: !12048, line: 422, column: 5)
!12282 = !DILocation(line: 422, column: 5, scope: !12281)
!12283 = !DILocation(line: 422, column: 5, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12280, file: !12048, line: 422, column: 5)
!12285 = !DILocation(line: 422, column: 5, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12287, file: !12048, line: 422, column: 5)
!12287 = distinct !DILexicalBlock(scope: !12280, file: !12048, line: 422, column: 5)
!12288 = !DILocation(line: 422, column: 5, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12287, file: !12048, line: 422, column: 5)
!12290 = !DILocation(line: 0, scope: !12280)
!12291 = !DILocation(line: 424, column: 28, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12083, file: !12048, line: 424, column: 8)
!12293 = !DILocation(line: 424, column: 38, scope: !12292)
!12294 = !DILocation(line: 0, scope: !12292)
!12295 = !DILocation(line: 424, column: 8, scope: !12083)
!12296 = !DILocation(line: 430, column: 13, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12292, file: !12048, line: 425, column: 5)
!12298 = !DILocation(line: 430, column: 49, scope: !12297)
!12299 = !DILocation(line: 430, column: 7, scope: !12297)
!12300 = !DILocation(line: 432, column: 13, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12302, file: !12048, line: 432, column: 12)
!12302 = distinct !DILexicalBlock(scope: !12297, file: !12048, line: 431, column: 7)
!12303 = !DILocation(line: 432, column: 27, scope: !12301)
!12304 = !DILocation(line: 432, column: 41, scope: !12301)
!12305 = !DILocation(line: 432, column: 12, scope: !12302)
!12306 = distinct !{!12306, !12299, !12307}
!12307 = !DILocation(line: 436, column: 7, scope: !12297)
!12308 = !DILocation(line: 444, column: 13, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12292, file: !12048, line: 439, column: 5)
!12310 = !DILocation(line: 444, column: 7, scope: !12309)
!12311 = !DILocation(line: 446, column: 13, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12313, file: !12048, line: 446, column: 12)
!12313 = distinct !DILexicalBlock(scope: !12309, file: !12048, line: 445, column: 7)
!12314 = !DILocation(line: 446, column: 27, scope: !12312)
!12315 = !DILocation(line: 446, column: 41, scope: !12312)
!12316 = !DILocation(line: 446, column: 12, scope: !12313)
!12317 = distinct !{!12317, !12310, !12318}
!12318 = !DILocation(line: 450, column: 7, scope: !12309)
!12319 = !DILocation(line: 454, column: 8, scope: !12083)
!12320 = !DILocation(line: 456, column: 7, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12322, file: !12048, line: 455, column: 5)
!12322 = distinct !DILexicalBlock(scope: !12083, file: !12048, line: 454, column: 8)
!12323 = !DILocation(line: 457, column: 5, scope: !12321)
!12324 = !DILocation(line: 462, column: 31, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12053, file: !12048, line: 462, column: 7)
!12326 = !DILocation(line: 462, column: 41, scope: !12325)
!12327 = !DILocation(line: 462, column: 7, scope: !12053)
!12328 = !DILocation(line: 465, column: 8, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !12048, line: 465, column: 8)
!12330 = distinct !DILexicalBlock(scope: !12325, file: !12048, line: 463, column: 3)
!12331 = !DILocation(line: 465, column: 38, scope: !12329)
!12332 = !DILocation(line: 465, column: 8, scope: !12330)
!12333 = !DILocation(line: 467, column: 44, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !12048, line: 467, column: 10)
!12335 = distinct !DILexicalBlock(scope: !12329, file: !12048, line: 466, column: 5)
!12336 = !DILocation(line: 0, scope: !12334)
!12337 = !DILocation(line: 467, column: 10, scope: !12335)
!12338 = !DILocation(line: 483, column: 15, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12334, file: !12048, line: 468, column: 7)
!12340 = !DILocation(line: 483, column: 9, scope: !12339)
!12341 = !DILocation(line: 485, column: 15, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12343, file: !12048, line: 485, column: 14)
!12343 = distinct !DILexicalBlock(scope: !12339, file: !12048, line: 484, column: 9)
!12344 = !DILocation(line: 485, column: 29, scope: !12342)
!12345 = !DILocation(line: 485, column: 43, scope: !12342)
!12346 = !DILocation(line: 485, column: 14, scope: !12343)
!12347 = distinct !{!12347, !12340, !12348}
!12348 = !DILocation(line: 489, column: 9, scope: !12339)
!12349 = !DILocation(line: 492, column: 9, scope: !12339)
!12350 = !DILocation(line: 498, column: 9, scope: !12339)
!12351 = !DILocation(line: 501, column: 21, scope: !12339)
!12352 = !DILocation(line: 504, column: 9, scope: !12339)
!12353 = !DILocation(line: 504, column: 15, scope: !12339)
!12354 = !DILocation(line: 504, column: 51, scope: !12339)
!12355 = !DILocation(line: 506, column: 15, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12357, file: !12048, line: 506, column: 14)
!12357 = distinct !DILexicalBlock(scope: !12339, file: !12048, line: 505, column: 9)
!12358 = !DILocation(line: 506, column: 29, scope: !12356)
!12359 = !DILocation(line: 506, column: 43, scope: !12356)
!12360 = !DILocation(line: 506, column: 14, scope: !12357)
!12361 = distinct !{!12361, !12352, !12362}
!12362 = !DILocation(line: 510, column: 9, scope: !12339)
!12363 = !DILocation(line: 521, column: 15, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12334, file: !12048, line: 513, column: 7)
!12365 = !DILocation(line: 521, column: 9, scope: !12364)
!12366 = !DILocation(line: 523, column: 15, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12368, file: !12048, line: 523, column: 14)
!12368 = distinct !DILexicalBlock(scope: !12364, file: !12048, line: 522, column: 9)
!12369 = !DILocation(line: 523, column: 29, scope: !12367)
!12370 = !DILocation(line: 523, column: 43, scope: !12367)
!12371 = !DILocation(line: 523, column: 14, scope: !12368)
!12372 = distinct !{!12372, !12365, !12373}
!12373 = !DILocation(line: 527, column: 9, scope: !12364)
!12374 = !DILocation(line: 533, column: 44, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12376, file: !12048, line: 533, column: 10)
!12376 = distinct !DILexicalBlock(scope: !12329, file: !12048, line: 531, column: 5)
!12377 = !DILocation(line: 533, column: 10, scope: !12376)
!12378 = !DILocation(line: 540, column: 27, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12375, file: !12048, line: 538, column: 7)
!12380 = !DILocation(line: 551, column: 14, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12379, file: !12048, line: 550, column: 13)
!12382 = !DILocation(line: 551, column: 81, scope: !12381)
!12383 = !DILocation(line: 551, column: 55, scope: !12381)
!12384 = !DILocation(line: 551, column: 92, scope: !12381)
!12385 = !DILocation(line: 552, column: 14, scope: !12381)
!12386 = !DILocation(line: 552, column: 80, scope: !12381)
!12387 = !DILocation(line: 552, column: 53, scope: !12381)
!12388 = !DILocation(line: 552, column: 111, scope: !12381)
!12389 = !DILocation(line: 553, column: 14, scope: !12381)
!12390 = !DILocation(line: 553, column: 80, scope: !12381)
!12391 = !DILocation(line: 553, column: 86, scope: !12381)
!12392 = !DILocation(line: 553, column: 53, scope: !12381)
!12393 = !DILocation(line: 553, column: 111, scope: !12381)
!12394 = !DILocation(line: 554, column: 14, scope: !12381)
!12395 = !DILocation(line: 554, column: 82, scope: !12381)
!12396 = !DILocation(line: 554, column: 101, scope: !12381)
!12397 = !DILocation(line: 554, column: 53, scope: !12381)
!12398 = !DILocation(line: 554, column: 126, scope: !12381)
!12399 = !DILocation(line: 555, column: 14, scope: !12381)
!12400 = !DILocation(line: 555, column: 80, scope: !12381)
!12401 = !DILocation(line: 555, column: 85, scope: !12381)
!12402 = !DILocation(line: 555, column: 53, scope: !12381)
!12403 = !DILocation(line: 550, column: 13, scope: !12379)
!12404 = !DILocation(line: 563, column: 3, scope: !12053)
!12405 = !DILocation(line: 564, column: 1, scope: !12053)
!12406 = !DISubprogram(name: "HAL_GetTick", scope: !12407, file: !12407, line: 234, type: !6890, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!12407 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12408 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12048, file: !12048, line: 591, type: !12409, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12420)
!12409 = !DISubroutineType(types: !12410)
!12410 = !{!12051, !12411, !132}
!12411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12412, size: 32)
!12412 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12058, line: 92, baseType: !12413)
!12413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12058, line: 75, size: 160, elements: !12414)
!12414 = !{!12415, !12416, !12417, !12418, !12419}
!12415 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12413, file: !12058, line: 77, baseType: !132, size: 32)
!12416 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12413, file: !12058, line: 80, baseType: !132, size: 32, offset: 32)
!12417 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12413, file: !12058, line: 83, baseType: !132, size: 32, offset: 64)
!12418 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12413, file: !12058, line: 86, baseType: !132, size: 32, offset: 96)
!12419 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12413, file: !12058, line: 89, baseType: !132, size: 32, offset: 128)
!12420 = !{!12421, !12422, !12423}
!12421 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12408, file: !12048, line: 591, type: !12411)
!12422 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12408, file: !12048, line: 591, type: !132)
!12423 = !DILocalVariable(name: "tickstart", scope: !12408, file: !12048, line: 593, type: !132)
!12424 = !DILocation(line: 0, scope: !12408)
!12425 = !DILocation(line: 596, column: 24, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12408, file: !12048, line: 596, column: 6)
!12427 = !DILocation(line: 596, column: 6, scope: !12408)
!12428 = !DILocation(line: 610, column: 17, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12408, file: !12048, line: 610, column: 6)
!12430 = !DILocation(line: 610, column: 15, scope: !12429)
!12431 = !DILocation(line: 610, column: 6, scope: !12408)
!12432 = !DILocation(line: 613, column: 5, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12429, file: !12048, line: 611, column: 3)
!12434 = !DILocation(line: 617, column: 8, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12433, file: !12048, line: 617, column: 8)
!12436 = !DILocation(line: 617, column: 34, scope: !12435)
!12437 = !DILocation(line: 617, column: 8, scope: !12433)
!12438 = !DILocation(line: 624, column: 27, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12408, file: !12048, line: 624, column: 6)
!12440 = !DILocation(line: 624, column: 38, scope: !12439)
!12441 = !DILocation(line: 624, column: 60, scope: !12439)
!12442 = !DILocation(line: 624, column: 6, scope: !12408)
!12443 = !DILocation(line: 628, column: 40, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12445, file: !12048, line: 628, column: 8)
!12445 = distinct !DILexicalBlock(scope: !12439, file: !12048, line: 625, column: 3)
!12446 = !DILocation(line: 628, column: 63, scope: !12444)
!12447 = !DILocation(line: 628, column: 8, scope: !12445)
!12448 = !DILocation(line: 630, column: 7, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12444, file: !12048, line: 629, column: 5)
!12450 = !DILocation(line: 633, column: 29, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12445, file: !12048, line: 633, column: 8)
!12452 = !DILocation(line: 631, column: 5, scope: !12449)
!12453 = !DILocation(line: 633, column: 40, scope: !12451)
!12454 = !DILocation(line: 633, column: 63, scope: !12451)
!12455 = !DILocation(line: 633, column: 8, scope: !12445)
!12456 = !DILocation(line: 635, column: 7, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12451, file: !12048, line: 634, column: 5)
!12458 = !DILocation(line: 636, column: 5, scope: !12457)
!12459 = !DILocation(line: 639, column: 5, scope: !12445)
!12460 = !DILocation(line: 643, column: 27, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12408, file: !12048, line: 643, column: 6)
!12462 = !DILocation(line: 640, column: 3, scope: !12445)
!12463 = !DILocation(line: 643, column: 38, scope: !12461)
!12464 = !DILocation(line: 643, column: 62, scope: !12461)
!12465 = !DILocation(line: 643, column: 6, scope: !12408)
!12466 = !DILocation(line: 648, column: 27, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12468, file: !12048, line: 648, column: 8)
!12468 = distinct !DILexicalBlock(scope: !12461, file: !12048, line: 644, column: 3)
!12469 = !DILocation(line: 648, column: 8, scope: !12468)
!12470 = !DILocation(line: 651, column: 10, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12472, file: !12048, line: 651, column: 10)
!12472 = distinct !DILexicalBlock(scope: !12467, file: !12048, line: 649, column: 5)
!12473 = !DILocation(line: 651, column: 46, scope: !12471)
!12474 = !DILocation(line: 651, column: 10, scope: !12472)
!12475 = !DILocation(line: 661, column: 10, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12477, file: !12048, line: 661, column: 10)
!12477 = distinct !DILexicalBlock(scope: !12478, file: !12048, line: 659, column: 5)
!12478 = distinct !DILexicalBlock(scope: !12467, file: !12048, line: 657, column: 13)
!12479 = !DILocation(line: 661, column: 46, scope: !12476)
!12480 = !DILocation(line: 661, column: 10, scope: !12477)
!12481 = !DILocation(line: 670, column: 10, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12483, file: !12048, line: 670, column: 10)
!12483 = distinct !DILexicalBlock(scope: !12478, file: !12048, line: 668, column: 5)
!12484 = !DILocation(line: 670, column: 46, scope: !12482)
!12485 = !DILocation(line: 670, column: 10, scope: !12483)
!12486 = !DILocation(line: 676, column: 5, scope: !12468)
!12487 = !DILocation(line: 679, column: 17, scope: !12468)
!12488 = !DILocation(line: 681, column: 5, scope: !12468)
!12489 = !DILocation(line: 681, column: 12, scope: !12468)
!12490 = !DILocation(line: 681, column: 65, scope: !12468)
!12491 = !DILocation(line: 681, column: 78, scope: !12468)
!12492 = !DILocation(line: 681, column: 42, scope: !12468)
!12493 = !DILocation(line: 683, column: 12, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12495, file: !12048, line: 683, column: 11)
!12495 = distinct !DILexicalBlock(scope: !12468, file: !12048, line: 682, column: 5)
!12496 = !DILocation(line: 683, column: 26, scope: !12494)
!12497 = !DILocation(line: 683, column: 39, scope: !12494)
!12498 = !DILocation(line: 683, column: 11, scope: !12495)
!12499 = distinct !{!12499, !12488, !12500}
!12500 = !DILocation(line: 687, column: 5, scope: !12468)
!12501 = !DILocation(line: 691, column: 17, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12408, file: !12048, line: 691, column: 6)
!12503 = !DILocation(line: 691, column: 15, scope: !12502)
!12504 = !DILocation(line: 691, column: 6, scope: !12408)
!12505 = !DILocation(line: 694, column: 5, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12502, file: !12048, line: 692, column: 3)
!12507 = !DILocation(line: 698, column: 8, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12506, file: !12048, line: 698, column: 8)
!12509 = !DILocation(line: 698, column: 34, scope: !12508)
!12510 = !DILocation(line: 698, column: 8, scope: !12506)
!12511 = !DILocation(line: 705, column: 27, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12408, file: !12048, line: 705, column: 6)
!12513 = !DILocation(line: 705, column: 38, scope: !12512)
!12514 = !DILocation(line: 705, column: 61, scope: !12512)
!12515 = !DILocation(line: 705, column: 6, scope: !12408)
!12516 = !DILocation(line: 708, column: 5, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12512, file: !12048, line: 706, column: 3)
!12518 = !DILocation(line: 712, column: 27, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12408, file: !12048, line: 712, column: 6)
!12520 = !DILocation(line: 709, column: 3, scope: !12517)
!12521 = !DILocation(line: 712, column: 38, scope: !12519)
!12522 = !DILocation(line: 712, column: 61, scope: !12519)
!12523 = !DILocation(line: 712, column: 6, scope: !12408)
!12524 = !DILocation(line: 715, column: 5, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12519, file: !12048, line: 713, column: 3)
!12526 = !DILocation(line: 716, column: 3, scope: !12525)
!12527 = !DILocation(line: 719, column: 21, scope: !12408)
!12528 = !DILocation(line: 719, column: 70, scope: !12408)
!12529 = !DILocation(line: 719, column: 91, scope: !12408)
!12530 = !DILocation(line: 719, column: 50, scope: !12408)
!12531 = !DILocation(line: 719, column: 47, scope: !12408)
!12532 = !DILocation(line: 719, column: 19, scope: !12408)
!12533 = !DILocation(line: 722, column: 17, scope: !12408)
!12534 = !DILocation(line: 722, column: 3, scope: !12408)
!12535 = !DILocation(line: 724, column: 3, scope: !12408)
!12536 = !DILocation(line: 725, column: 1, scope: !12408)
!12537 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12048, file: !12048, line: 885, type: !6890, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12538)
!12538 = !{!12539, !12540, !12541, !12542}
!12539 = !DILocalVariable(name: "pllm", scope: !12537, file: !12048, line: 887, type: !132)
!12540 = !DILocalVariable(name: "pllvco", scope: !12537, file: !12048, line: 887, type: !132)
!12541 = !DILocalVariable(name: "pllp", scope: !12537, file: !12048, line: 887, type: !132)
!12542 = !DILocalVariable(name: "sysclockfreq", scope: !12537, file: !12048, line: 888, type: !132)
!12543 = !DILocation(line: 0, scope: !12537)
!12544 = !DILocation(line: 891, column: 16, scope: !12537)
!12545 = !DILocation(line: 891, column: 21, scope: !12537)
!12546 = !DILocation(line: 891, column: 3, scope: !12537)
!12547 = !DILocation(line: 901, column: 7, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12549, file: !12048, line: 899, column: 5)
!12549 = distinct !DILexicalBlock(scope: !12537, file: !12048, line: 892, column: 3)
!12550 = !DILocation(line: 907, column: 19, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12549, file: !12048, line: 904, column: 5)
!12552 = !DILocation(line: 907, column: 27, scope: !12551)
!12553 = !DILocation(line: 908, column: 10, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12551, file: !12048, line: 908, column: 10)
!12555 = !DILocation(line: 908, column: 40, scope: !12554)
!12556 = !DILocation(line: 0, scope: !12554)
!12557 = !DILocation(line: 908, column: 10, scope: !12551)
!12558 = !DILocation(line: 911, column: 53, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12554, file: !12048, line: 909, column: 7)
!12560 = !DILocation(line: 911, column: 130, scope: !12559)
!12561 = !DILocation(line: 912, column: 7, scope: !12559)
!12562 = !DILocation(line: 916, column: 56, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12554, file: !12048, line: 914, column: 7)
!12564 = !DILocation(line: 916, column: 53, scope: !12563)
!12565 = !DILocation(line: 916, column: 132, scope: !12563)
!12566 = !DILocation(line: 916, column: 130, scope: !12563)
!12567 = !DILocation(line: 916, column: 18, scope: !12563)
!12568 = !DILocation(line: 918, column: 23, scope: !12551)
!12569 = !DILocation(line: 918, column: 82, scope: !12551)
!12570 = !DILocation(line: 920, column: 28, scope: !12551)
!12571 = !DILocation(line: 921, column: 7, scope: !12551)
!12572 = !DILocation(line: 0, scope: !12549)
!12573 = !DILocation(line: 929, column: 3, scope: !12537)
!12574 = !DISubprogram(name: "HAL_InitTick", scope: !12407, file: !12407, line: 223, type: !12575, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!12575 = !DISubroutineType(types: !12576)
!12576 = !{!12051, !132}
!12577 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12048, file: !12048, line: 775, type: !12578, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12580)
!12578 = !DISubroutineType(types: !12579)
!12579 = !{null, !132, !132, !132}
!12580 = !{!12581, !12582, !12583, !12584, !12594, !12598}
!12581 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12577, file: !12048, line: 775, type: !132)
!12582 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12577, file: !12048, line: 775, type: !132)
!12583 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12577, file: !12048, line: 775, type: !132)
!12584 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12577, file: !12048, line: 777, type: !12585)
!12585 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12586, line: 62, baseType: !12587)
!12586 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12586, line: 46, size: 160, elements: !12588)
!12588 = !{!12589, !12590, !12591, !12592, !12593}
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12587, file: !12586, line: 48, baseType: !132, size: 32)
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12587, file: !12586, line: 51, baseType: !132, size: 32, offset: 32)
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12587, file: !12586, line: 54, baseType: !132, size: 32, offset: 64)
!12592 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12587, file: !12586, line: 57, baseType: !132, size: 32, offset: 96)
!12593 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12587, file: !12586, line: 60, baseType: !132, size: 32, offset: 128)
!12594 = !DILocalVariable(name: "tmpreg", scope: !12595, file: !12048, line: 787, type: !131)
!12595 = distinct !DILexicalBlock(scope: !12596, file: !12048, line: 787, column: 5)
!12596 = distinct !DILexicalBlock(scope: !12597, file: !12048, line: 783, column: 3)
!12597 = distinct !DILexicalBlock(scope: !12577, file: !12048, line: 782, column: 6)
!12598 = !DILocalVariable(name: "tmpreg", scope: !12599, file: !12048, line: 811, type: !131)
!12599 = distinct !DILexicalBlock(scope: !12600, file: !12048, line: 811, column: 5)
!12600 = distinct !DILexicalBlock(scope: !12597, file: !12048, line: 807, column: 3)
!12601 = !DILocation(line: 0, scope: !12577)
!12602 = !DILocation(line: 777, column: 3, scope: !12577)
!12603 = !DILocation(line: 777, column: 20, scope: !12577)
!12604 = !DILocation(line: 782, column: 15, scope: !12597)
!12605 = !DILocation(line: 782, column: 6, scope: !12577)
!12606 = !DILocation(line: 787, column: 5, scope: !12595)
!12607 = !DILocation(line: 787, column: 5, scope: !12596)
!12608 = !DILocation(line: 790, column: 21, scope: !12596)
!12609 = !DILocation(line: 790, column: 25, scope: !12596)
!12610 = !DILocation(line: 791, column: 21, scope: !12596)
!12611 = !DILocation(line: 791, column: 26, scope: !12596)
!12612 = !DILocation(line: 792, column: 21, scope: !12596)
!12613 = !DILocation(line: 792, column: 27, scope: !12596)
!12614 = !DILocation(line: 793, column: 21, scope: !12596)
!12615 = !DILocation(line: 793, column: 26, scope: !12596)
!12616 = !DILocation(line: 794, column: 21, scope: !12596)
!12617 = !DILocation(line: 794, column: 31, scope: !12596)
!12618 = !DILocation(line: 795, column: 5, scope: !12596)
!12619 = !DILocation(line: 798, column: 5, scope: !12596)
!12620 = !DILocation(line: 804, column: 3, scope: !12596)
!12621 = !DILocation(line: 811, column: 5, scope: !12599)
!12622 = !DILocation(line: 811, column: 5, scope: !12600)
!12623 = !DILocation(line: 814, column: 21, scope: !12600)
!12624 = !DILocation(line: 814, column: 25, scope: !12600)
!12625 = !DILocation(line: 815, column: 21, scope: !12600)
!12626 = !DILocation(line: 815, column: 26, scope: !12600)
!12627 = !DILocation(line: 816, column: 21, scope: !12600)
!12628 = !DILocation(line: 816, column: 27, scope: !12600)
!12629 = !DILocation(line: 817, column: 21, scope: !12600)
!12630 = !DILocation(line: 817, column: 26, scope: !12600)
!12631 = !DILocation(line: 818, column: 21, scope: !12600)
!12632 = !DILocation(line: 818, column: 31, scope: !12600)
!12633 = !DILocation(line: 819, column: 5, scope: !12600)
!12634 = !DILocation(line: 822, column: 5, scope: !12600)
!12635 = !DILocation(line: 0, scope: !12597)
!12636 = !DILocation(line: 830, column: 1, scope: !12577)
!12637 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12586, file: !12586, line: 224, type: !12638, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!12638 = !DISubroutineType(types: !12639)
!12639 = !{null, !3114, !12640}
!12640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12585, size: 32)
!12641 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12048, file: !12048, line: 841, type: !3232, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !473)
!12642 = !DILocation(line: 843, column: 38, scope: !12641)
!12643 = !DILocation(line: 844, column: 1, scope: !12641)
!12644 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12048, file: !12048, line: 850, type: !3232, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !473)
!12645 = !DILocation(line: 852, column: 38, scope: !12644)
!12646 = !DILocation(line: 853, column: 1, scope: !12644)
!12647 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12048, file: !12048, line: 941, type: !6890, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !473)
!12648 = !DILocation(line: 943, column: 10, scope: !12647)
!12649 = !DILocation(line: 943, column: 3, scope: !12647)
!12650 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12048, file: !12048, line: 952, type: !6890, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !473)
!12651 = !DILocation(line: 955, column: 11, scope: !12650)
!12652 = !DILocation(line: 955, column: 56, scope: !12650)
!12653 = !DILocation(line: 955, column: 78, scope: !12650)
!12654 = !DILocation(line: 955, column: 36, scope: !12650)
!12655 = !DILocation(line: 955, column: 33, scope: !12650)
!12656 = !DILocation(line: 955, column: 3, scope: !12650)
!12657 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12048, file: !12048, line: 964, type: !6890, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !473)
!12658 = !DILocation(line: 967, column: 11, scope: !12657)
!12659 = !DILocation(line: 967, column: 55, scope: !12657)
!12660 = !DILocation(line: 967, column: 77, scope: !12657)
!12661 = !DILocation(line: 967, column: 35, scope: !12657)
!12662 = !DILocation(line: 967, column: 32, scope: !12657)
!12663 = !DILocation(line: 967, column: 3, scope: !12657)
!12664 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12048, file: !12048, line: 977, type: !12665, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12667)
!12665 = !DISubroutineType(types: !12666)
!12666 = !{null, !12056}
!12667 = !{!12668}
!12668 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12664, file: !12048, line: 977, type: !12056)
!12669 = !DILocation(line: 0, scope: !12664)
!12670 = !DILocation(line: 980, column: 22, scope: !12664)
!12671 = !DILocation(line: 980, column: 37, scope: !12664)
!12672 = !DILocation(line: 983, column: 12, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12664, file: !12048, line: 983, column: 6)
!12674 = !DILocation(line: 983, column: 15, scope: !12673)
!12675 = !DILocation(line: 983, column: 31, scope: !12673)
!12676 = !DILocation(line: 983, column: 6, scope: !12664)
!12677 = !DILocation(line: 985, column: 24, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12673, file: !12048, line: 984, column: 3)
!12679 = !DILocation(line: 985, column: 33, scope: !12678)
!12680 = !DILocation(line: 986, column: 3, scope: !12678)
!12681 = !DILocation(line: 987, column: 17, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12673, file: !12048, line: 987, column: 11)
!12683 = !DILocation(line: 987, column: 20, scope: !12682)
!12684 = !DILocation(line: 987, column: 35, scope: !12682)
!12685 = !DILocation(line: 0, scope: !12682)
!12686 = !DILocation(line: 987, column: 11, scope: !12673)
!12687 = !DILocation(line: 989, column: 33, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12682, file: !12048, line: 988, column: 3)
!12689 = !DILocation(line: 990, column: 3, scope: !12688)
!12690 = !DILocation(line: 993, column: 33, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12682, file: !12048, line: 992, column: 3)
!12692 = !DILocation(line: 997, column: 12, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12664, file: !12048, line: 997, column: 6)
!12694 = !DILocation(line: 997, column: 15, scope: !12693)
!12695 = !DILocation(line: 1003, column: 24, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12693, file: !12048, line: 1002, column: 3)
!12697 = !DILocation(line: 1003, column: 33, scope: !12696)
!12698 = !DILocation(line: 1006, column: 61, scope: !12664)
!12699 = !DILocation(line: 1006, column: 81, scope: !12664)
!12700 = !DILocation(line: 1006, column: 22, scope: !12664)
!12701 = !DILocation(line: 1006, column: 42, scope: !12664)
!12702 = !DILocation(line: 1009, column: 12, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12664, file: !12048, line: 1009, column: 6)
!12704 = !DILocation(line: 1009, column: 17, scope: !12703)
!12705 = !DILocation(line: 1009, column: 35, scope: !12703)
!12706 = !DILocation(line: 1009, column: 6, scope: !12664)
!12707 = !DILocation(line: 1011, column: 24, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12703, file: !12048, line: 1010, column: 3)
!12709 = !DILocation(line: 1011, column: 33, scope: !12708)
!12710 = !DILocation(line: 1012, column: 3, scope: !12708)
!12711 = !DILocation(line: 1013, column: 17, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12703, file: !12048, line: 1013, column: 11)
!12713 = !DILocation(line: 1013, column: 22, scope: !12712)
!12714 = !DILocation(line: 1013, column: 39, scope: !12712)
!12715 = !DILocation(line: 0, scope: !12712)
!12716 = !DILocation(line: 1013, column: 11, scope: !12703)
!12717 = !DILocation(line: 1015, column: 33, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12712, file: !12048, line: 1014, column: 3)
!12719 = !DILocation(line: 1016, column: 3, scope: !12718)
!12720 = !DILocation(line: 1019, column: 33, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12712, file: !12048, line: 1018, column: 3)
!12722 = !DILocation(line: 1023, column: 12, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12664, file: !12048, line: 1023, column: 6)
!12724 = !DILocation(line: 1023, column: 16, scope: !12723)
!12725 = !DILocation(line: 1029, column: 24, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12723, file: !12048, line: 1028, column: 3)
!12727 = !DILocation(line: 1029, column: 33, scope: !12726)
!12728 = !DILocation(line: 1033, column: 12, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12664, file: !12048, line: 1033, column: 6)
!12730 = !DILocation(line: 1033, column: 15, scope: !12729)
!12731 = !DILocation(line: 1033, column: 30, scope: !12729)
!12732 = !DILocation(line: 1033, column: 6, scope: !12664)
!12733 = !DILocation(line: 1039, column: 28, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12729, file: !12048, line: 1038, column: 3)
!12735 = !DILocation(line: 1039, column: 37, scope: !12734)
!12736 = !DILocation(line: 1041, column: 54, scope: !12664)
!12737 = !DILocation(line: 1041, column: 62, scope: !12664)
!12738 = !DILocation(line: 1041, column: 26, scope: !12664)
!12739 = !DILocation(line: 1041, column: 36, scope: !12664)
!12740 = !DILocation(line: 1042, column: 49, scope: !12664)
!12741 = !DILocation(line: 1042, column: 57, scope: !12664)
!12742 = !DILocation(line: 1042, column: 26, scope: !12664)
!12743 = !DILocation(line: 1042, column: 31, scope: !12664)
!12744 = !DILocation(line: 1043, column: 50, scope: !12664)
!12745 = !DILocation(line: 1043, column: 78, scope: !12664)
!12746 = !DILocation(line: 1043, column: 26, scope: !12664)
!12747 = !DILocation(line: 1043, column: 31, scope: !12664)
!12748 = !DILocation(line: 1044, column: 52, scope: !12664)
!12749 = !DILocation(line: 1044, column: 102, scope: !12664)
!12750 = !DILocation(line: 1044, column: 109, scope: !12664)
!12751 = !DILocation(line: 1044, column: 26, scope: !12664)
!12752 = !DILocation(line: 1044, column: 31, scope: !12664)
!12753 = !DILocation(line: 1045, column: 50, scope: !12664)
!12754 = !DILocation(line: 1045, column: 78, scope: !12664)
!12755 = !DILocation(line: 1045, column: 26, scope: !12664)
!12756 = !DILocation(line: 1045, column: 31, scope: !12664)
!12757 = !DILocation(line: 1046, column: 1, scope: !12664)
!12758 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12048, file: !12048, line: 1056, type: !12759, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !12761)
!12759 = !DISubroutineType(types: !12760)
!12760 = !{null, !12411, !837}
!12761 = !{!12762, !12763}
!12762 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12758, file: !12048, line: 1056, type: !12411)
!12763 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12758, file: !12048, line: 1056, type: !837)
!12764 = !DILocation(line: 0, scope: !12758)
!12765 = !DILocation(line: 1059, column: 22, scope: !12758)
!12766 = !DILocation(line: 1059, column: 32, scope: !12758)
!12767 = !DILocation(line: 1062, column: 53, scope: !12758)
!12768 = !DILocation(line: 1062, column: 58, scope: !12758)
!12769 = !DILocation(line: 1062, column: 22, scope: !12758)
!12770 = !DILocation(line: 1062, column: 35, scope: !12758)
!12771 = !DILocation(line: 1065, column: 54, scope: !12758)
!12772 = !DILocation(line: 1065, column: 59, scope: !12758)
!12773 = !DILocation(line: 1065, column: 22, scope: !12758)
!12774 = !DILocation(line: 1065, column: 36, scope: !12758)
!12775 = !DILocation(line: 1068, column: 55, scope: !12758)
!12776 = !DILocation(line: 1068, column: 60, scope: !12758)
!12777 = !DILocation(line: 1068, column: 22, scope: !12758)
!12778 = !DILocation(line: 1068, column: 37, scope: !12758)
!12779 = !DILocation(line: 1071, column: 56, scope: !12758)
!12780 = !DILocation(line: 1071, column: 79, scope: !12758)
!12781 = !DILocation(line: 1071, column: 22, scope: !12758)
!12782 = !DILocation(line: 1071, column: 37, scope: !12758)
!12783 = !DILocation(line: 1074, column: 34, scope: !12758)
!12784 = !DILocation(line: 1074, column: 38, scope: !12758)
!12785 = !DILocation(line: 1074, column: 14, scope: !12758)
!12786 = !DILocation(line: 1075, column: 1, scope: !12758)
!12787 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12048, file: !12048, line: 1082, type: !3232, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !473)
!12788 = !DILocation(line: 1085, column: 6, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12787, file: !12048, line: 1085, column: 6)
!12790 = !DILocation(line: 1085, column: 6, scope: !12787)
!12791 = !DILocation(line: 1088, column: 5, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12789, file: !12048, line: 1086, column: 3)
!12793 = !DILocation(line: 1091, column: 5, scope: !12792)
!12794 = !DILocation(line: 1092, column: 3, scope: !12792)
!12795 = !DILocation(line: 1093, column: 1, scope: !12787)
!12796 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12048, file: !12048, line: 1099, type: !3232, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !473)
!12797 = !DILocation(line: 1104, column: 1, scope: !12796)
!12798 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12799, file: !12799, line: 257, type: !6900, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12800)
!12799 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12800 = !{!12801}
!12801 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12798, file: !12799, line: 257, type: !132)
!12802 = !DILocation(line: 0, scope: !12798)
!12803 = !DILocation(line: 260, column: 3, scope: !12798)
!12804 = !DILocation(line: 261, column: 1, scope: !12798)
!12805 = distinct !DISubprogram(name: "LL_InitTick", scope: !12806, file: !12806, line: 260, type: !10079, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12807)
!12806 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12807 = !{!12808, !12809}
!12808 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12805, file: !12806, line: 260, type: !132)
!12809 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12805, file: !12806, line: 260, type: !132)
!12810 = !DILocation(line: 0, scope: !12805)
!12811 = !DILocation(line: 263, column: 46, scope: !12805)
!12812 = !DILocation(line: 263, column: 55, scope: !12805)
!12813 = !DILocation(line: 263, column: 18, scope: !12805)
!12814 = !DILocation(line: 264, column: 18, scope: !12805)
!12815 = !DILocation(line: 265, column: 18, scope: !12805)
!12816 = !DILocation(line: 267, column: 1, scope: !12805)
!12817 = distinct !DISubprogram(name: "LL_mDelay", scope: !12799, file: !12799, line: 273, type: !6900, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12818)
!12818 = !{!12819, !12820}
!12819 = !DILocalVariable(name: "Delay", arg: 1, scope: !12817, file: !12799, line: 273, type: !132)
!12820 = !DILocalVariable(name: "tmp", scope: !12817, file: !12799, line: 275, type: !131)
!12821 = !DILocation(line: 0, scope: !12817)
!12822 = !DILocation(line: 275, column: 3, scope: !12817)
!12823 = !DILocation(line: 275, column: 18, scope: !12817)
!12824 = !DILocation(line: 275, column: 33, scope: !12817)
!12825 = !DILocation(line: 277, column: 10, scope: !12817)
!12826 = !DILocation(line: 280, column: 12, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12817, file: !12799, line: 280, column: 6)
!12828 = !DILocation(line: 285, column: 3, scope: !12817)
!12829 = !DILocation(line: 287, column: 18, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12831, file: !12799, line: 287, column: 8)
!12831 = distinct !DILexicalBlock(scope: !12817, file: !12799, line: 286, column: 3)
!12832 = !DILocation(line: 292, column: 1, scope: !12817)
!12833 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12799, file: !12799, line: 323, type: !6900, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12834)
!12834 = !{!12835}
!12835 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12833, file: !12799, line: 323, type: !132)
!12836 = !DILocation(line: 0, scope: !12833)
!12837 = !DILocation(line: 326, column: 19, scope: !12833)
!12838 = !DILocation(line: 327, column: 1, scope: !12833)
!12839 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12799, file: !12799, line: 338, type: !12840, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12843)
!12840 = !DISubroutineType(types: !12841)
!12841 = !{!12842, !132}
!12842 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !781, line: 201, baseType: !780)
!12843 = !{!12844, !12845, !12846, !12847, !12848}
!12844 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12839, file: !12799, line: 338, type: !132)
!12845 = !DILocalVariable(name: "timeout", scope: !12839, file: !12799, line: 340, type: !132)
!12846 = !DILocalVariable(name: "getlatency", scope: !12839, file: !12799, line: 341, type: !132)
!12847 = !DILocalVariable(name: "latency", scope: !12839, file: !12799, line: 342, type: !132)
!12848 = !DILocalVariable(name: "status", scope: !12839, file: !12799, line: 343, type: !12842)
!12849 = !DILocation(line: 0, scope: !12839)
!12850 = !DILocation(line: 347, column: 21, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12839, file: !12799, line: 347, column: 6)
!12852 = !DILocation(line: 347, column: 6, scope: !12839)
!12853 = !DILocation(line: 353, column: 8, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12855, file: !12799, line: 353, column: 8)
!12855 = distinct !DILexicalBlock(scope: !12851, file: !12799, line: 352, column: 3)
!12856 = !DILocation(line: 353, column: 40, scope: !12854)
!12857 = !DILocation(line: 353, column: 8, scope: !12855)
!12858 = !DILocation(line: 374, column: 55, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12860, file: !12799, line: 374, column: 10)
!12860 = distinct !DILexicalBlock(scope: !12854, file: !12799, line: 354, column: 5)
!12861 = !DILocation(line: 368, column: 26, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12860, file: !12799, line: 368, column: 10)
!12863 = !DILocation(line: 368, column: 55, scope: !12862)
!12864 = !DILocation(line: 380, column: 57, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12866, file: !12799, line: 380, column: 12)
!12866 = distinct !DILexicalBlock(scope: !12859, file: !12799, line: 379, column: 7)
!12867 = !DILocation(line: 387, column: 8, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12855, file: !12799, line: 387, column: 8)
!12869 = !DILocation(line: 387, column: 40, scope: !12868)
!12870 = !DILocation(line: 387, column: 8, scope: !12855)
!12871 = !DILocation(line: 407, column: 26, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12873, file: !12799, line: 407, column: 10)
!12873 = distinct !DILexicalBlock(scope: !12868, file: !12799, line: 388, column: 5)
!12874 = !DILocation(line: 407, column: 55, scope: !12872)
!12875 = !DILocation(line: 413, column: 28, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12877, file: !12799, line: 413, column: 12)
!12877 = distinct !DILexicalBlock(scope: !12872, file: !12799, line: 412, column: 7)
!12878 = !DILocation(line: 413, column: 57, scope: !12876)
!12879 = !DILocation(line: 0, scope: !12855)
!12880 = !DILocation(line: 420, column: 8, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12855, file: !12799, line: 420, column: 8)
!12882 = !DILocation(line: 420, column: 40, scope: !12881)
!12883 = !DILocation(line: 420, column: 8, scope: !12855)
!12884 = !DILocation(line: 429, column: 26, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12886, file: !12799, line: 429, column: 10)
!12886 = distinct !DILexicalBlock(scope: !12881, file: !12799, line: 421, column: 5)
!12887 = !DILocation(line: 429, column: 55, scope: !12885)
!12888 = !DILocation(line: 435, column: 28, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12890, file: !12799, line: 435, column: 12)
!12890 = distinct !DILexicalBlock(scope: !12885, file: !12799, line: 434, column: 7)
!12891 = !DILocation(line: 435, column: 57, scope: !12889)
!12892 = !DILocation(line: 444, column: 5, scope: !12855)
!12893 = !DILocation(line: 448, column: 5, scope: !12855)
!12894 = !DILocation(line: 451, column: 18, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12855, file: !12799, line: 449, column: 5)
!12896 = !DILocation(line: 452, column: 12, scope: !12895)
!12897 = !DILocation(line: 453, column: 26, scope: !12855)
!12898 = !DILocation(line: 453, column: 38, scope: !12855)
!12899 = !DILocation(line: 453, column: 5, scope: !12895)
!12900 = distinct !{!12900, !12893, !12901}
!12901 = !DILocation(line: 453, column: 54, scope: !12855)
!12902 = !DILocation(line: 0, scope: !12851)
!12903 = !DILocation(line: 464, column: 3, scope: !12839)
!12904 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12905, file: !12905, line: 519, type: !6890, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!12905 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12906 = !DILocation(line: 521, column: 21, scope: !12904)
!12907 = !DILocation(line: 521, column: 3, scope: !12904)
!12908 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5810, file: !5810, line: 1543, type: !6900, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12909)
!12909 = !{!12910}
!12910 = !DILocalVariable(name: "Latency", arg: 1, scope: !12908, file: !5810, line: 1543, type: !132)
!12911 = !DILocation(line: 0, scope: !12908)
!12912 = !DILocation(line: 1545, column: 3, scope: !12908)
!12913 = !DILocation(line: 1546, column: 1, scope: !12908)
!12914 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5810, file: !5810, line: 1569, type: !6890, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!12915 = !DILocation(line: 1571, column: 21, scope: !12914)
!12916 = !DILocation(line: 1571, column: 3, scope: !12914)
!12917 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12799, file: !12799, line: 483, type: !12918, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12934)
!12918 = !DISubroutineType(types: !12919)
!12919 = !{!12842, !12920, !12927}
!12920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12921, size: 32)
!12921 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12806, line: 114, baseType: !12922)
!12922 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12806, line: 94, size: 96, elements: !12923)
!12923 = !{!12924, !12925, !12926}
!12924 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12922, file: !12806, line: 96, baseType: !132, size: 32)
!12925 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12922, file: !12806, line: 102, baseType: !132, size: 32, offset: 32)
!12926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12922, file: !12806, line: 109, baseType: !132, size: 32, offset: 64)
!12927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12928, size: 32)
!12928 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12806, line: 139, baseType: !12929)
!12929 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12806, line: 119, size: 96, elements: !12930)
!12930 = !{!12931, !12932, !12933}
!12931 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12929, file: !12806, line: 121, baseType: !132, size: 32)
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12929, file: !12806, line: 127, baseType: !132, size: 32, offset: 32)
!12933 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12929, file: !12806, line: 133, baseType: !132, size: 32, offset: 64)
!12934 = !{!12935, !12936, !12937, !12938}
!12935 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12917, file: !12799, line: 483, type: !12920)
!12936 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12917, file: !12799, line: 484, type: !12927)
!12937 = !DILocalVariable(name: "status", scope: !12917, file: !12799, line: 486, type: !12842)
!12938 = !DILocalVariable(name: "pllfreq", scope: !12917, file: !12799, line: 487, type: !132)
!12939 = !DILocation(line: 0, scope: !12917)
!12940 = !DILocation(line: 490, column: 6, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12917, file: !12799, line: 490, column: 6)
!12942 = !DILocation(line: 490, column: 25, scope: !12941)
!12943 = !DILocation(line: 490, column: 6, scope: !12917)
!12944 = !DILocation(line: 493, column: 15, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12941, file: !12799, line: 491, column: 3)
!12946 = !DILocation(line: 496, column: 8, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12945, file: !12799, line: 496, column: 8)
!12948 = !DILocation(line: 496, column: 29, scope: !12947)
!12949 = !DILocation(line: 496, column: 8, scope: !12945)
!12950 = !DILocation(line: 498, column: 7, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12947, file: !12799, line: 497, column: 5)
!12952 = !DILocation(line: 499, column: 7, scope: !12951)
!12953 = !DILocation(line: 499, column: 14, scope: !12951)
!12954 = !DILocation(line: 499, column: 35, scope: !12951)
!12955 = distinct !{!12955, !12952, !12956}
!12956 = !DILocation(line: 502, column: 7, scope: !12951)
!12957 = !DILocation(line: 506, column: 76, scope: !12945)
!12958 = !DILocation(line: 506, column: 103, scope: !12945)
!12959 = !DILocation(line: 507, column: 54, scope: !12945)
!12960 = !DILocation(line: 506, column: 5, scope: !12945)
!12961 = !DILocation(line: 510, column: 14, scope: !12945)
!12962 = !DILocation(line: 511, column: 3, scope: !12945)
!12963 = !DILocation(line: 0, scope: !12941)
!12964 = !DILocation(line: 518, column: 3, scope: !12917)
!12965 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12799, file: !12799, line: 642, type: !12966, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12968)
!12966 = !DISubroutineType(types: !12967)
!12967 = !{!12842}
!12968 = !{!12969}
!12969 = !DILocalVariable(name: "status", scope: !12965, file: !12799, line: 644, type: !12842)
!12970 = !DILocation(line: 0, scope: !12965)
!12971 = !DILocation(line: 647, column: 6, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12965, file: !12799, line: 647, column: 6)
!12973 = !DILocation(line: 647, column: 27, scope: !12972)
!12974 = !DILocation(line: 663, column: 6, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12965, file: !12799, line: 663, column: 6)
!12976 = !DILocation(line: 663, column: 30, scope: !12975)
!12977 = !DILocation(line: 663, column: 6, scope: !12965)
!12978 = !DILocation(line: 669, column: 3, scope: !12965)
!12979 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12799, file: !12799, line: 611, type: !12980, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !12982)
!12980 = !DISubroutineType(types: !12981)
!12981 = !{!132, !132, !12920}
!12982 = !{!12983, !12984, !12985}
!12983 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12979, file: !12799, line: 611, type: !132)
!12984 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12979, file: !12799, line: 611, type: !12920)
!12985 = !DILocalVariable(name: "pllfreq", scope: !12979, file: !12799, line: 613, type: !132)
!12986 = !DILocation(line: 0, scope: !12979)
!12987 = !DILocation(line: 622, column: 56, scope: !12979)
!12988 = !DILocation(line: 622, column: 61, scope: !12979)
!12989 = !DILocation(line: 622, column: 32, scope: !12979)
!12990 = !DILocation(line: 626, column: 45, scope: !12979)
!12991 = !DILocation(line: 626, column: 50, scope: !12979)
!12992 = !DILocation(line: 626, column: 21, scope: !12979)
!12993 = !DILocation(line: 630, column: 47, scope: !12979)
!12994 = !DILocation(line: 630, column: 82, scope: !12979)
!12995 = !DILocation(line: 630, column: 21, scope: !12979)
!12996 = !DILocation(line: 633, column: 3, scope: !12979)
!12997 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8839, file: !8839, line: 3007, type: !6890, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!12998 = !DILocation(line: 3009, column: 11, scope: !12997)
!12999 = !DILocation(line: 3009, column: 44, scope: !12997)
!13000 = !DILocation(line: 3009, column: 3, scope: !12997)
!13001 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8839, file: !8839, line: 2987, type: !3232, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!13002 = !DILocation(line: 2989, column: 3, scope: !13001)
!13003 = !DILocation(line: 2990, column: 1, scope: !13001)
!13004 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8839, file: !8839, line: 4304, type: !8963, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13005)
!13005 = !{!13006, !13007, !13008, !13009}
!13006 = !DILocalVariable(name: "Source", arg: 1, scope: !13004, file: !8839, line: 4304, type: !132)
!13007 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13004, file: !8839, line: 4304, type: !132)
!13008 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13004, file: !8839, line: 4304, type: !132)
!13009 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13004, file: !8839, line: 4304, type: !132)
!13010 = !DILocation(line: 0, scope: !13004)
!13011 = !DILocation(line: 4306, column: 3, scope: !13004)
!13012 = !DILocation(line: 4308, column: 3, scope: !13004)
!13013 = !DILocation(line: 4312, column: 1, scope: !13004)
!13014 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12799, file: !12799, line: 681, type: !13015, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13017)
!13015 = !DISubroutineType(types: !13016)
!13016 = !{!12842, !132, !12927}
!13017 = !{!13018, !13019, !13020, !13021}
!13018 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13014, file: !12799, line: 681, type: !132)
!13019 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13014, file: !12799, line: 681, type: !12927)
!13020 = !DILocalVariable(name: "status", scope: !13014, file: !12799, line: 683, type: !12842)
!13021 = !DILocalVariable(name: "hclk_frequency", scope: !13014, file: !12799, line: 684, type: !132)
!13022 = !DILocation(line: 0, scope: !13014)
!13023 = !DILocation(line: 691, column: 20, scope: !13014)
!13024 = !DILocation(line: 694, column: 6, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13014, file: !12799, line: 694, column: 6)
!13026 = !DILocation(line: 694, column: 22, scope: !13025)
!13027 = !DILocation(line: 694, column: 6, scope: !13014)
!13028 = !DILocation(line: 697, column: 14, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13025, file: !12799, line: 695, column: 3)
!13030 = !DILocation(line: 701, column: 13, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13014, file: !12799, line: 701, column: 6)
!13032 = !DILocation(line: 701, column: 6, scope: !13014)
!13033 = !DILocation(line: 704, column: 5, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13031, file: !12799, line: 702, column: 3)
!13035 = !DILocation(line: 705, column: 5, scope: !13034)
!13036 = !DILocation(line: 705, column: 12, scope: !13034)
!13037 = !DILocation(line: 705, column: 33, scope: !13034)
!13038 = distinct !{!13038, !13035, !13039}
!13039 = !DILocation(line: 708, column: 5, scope: !13034)
!13040 = !DILocation(line: 711, column: 49, scope: !13034)
!13041 = !DILocation(line: 711, column: 5, scope: !13034)
!13042 = !DILocation(line: 712, column: 5, scope: !13034)
!13043 = !DILocation(line: 713, column: 5, scope: !13034)
!13044 = !DILocation(line: 713, column: 12, scope: !13034)
!13045 = !DILocation(line: 713, column: 37, scope: !13034)
!13046 = distinct !{!13046, !13043, !13047}
!13047 = !DILocation(line: 716, column: 5, scope: !13034)
!13048 = !DILocation(line: 719, column: 50, scope: !13034)
!13049 = !DILocation(line: 719, column: 5, scope: !13034)
!13050 = !DILocation(line: 720, column: 50, scope: !13034)
!13051 = !DILocation(line: 720, column: 5, scope: !13034)
!13052 = !DILocation(line: 721, column: 3, scope: !13034)
!13053 = !DILocation(line: 724, column: 6, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13014, file: !12799, line: 724, column: 6)
!13055 = !DILocation(line: 724, column: 22, scope: !13054)
!13056 = !DILocation(line: 724, column: 6, scope: !13014)
!13057 = !DILocation(line: 727, column: 14, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13054, file: !12799, line: 725, column: 3)
!13059 = !DILocation(line: 728, column: 3, scope: !13058)
!13060 = !DILocation(line: 731, column: 13, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13014, file: !12799, line: 731, column: 6)
!13062 = !DILocation(line: 731, column: 6, scope: !13014)
!13063 = !DILocation(line: 733, column: 5, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13061, file: !12799, line: 732, column: 3)
!13065 = !DILocation(line: 734, column: 3, scope: !13064)
!13066 = !DILocation(line: 736, column: 3, scope: !13014)
!13067 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8839, file: !8839, line: 4184, type: !3232, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!13068 = !DILocation(line: 4186, column: 3, scope: !13067)
!13069 = !DILocation(line: 4187, column: 1, scope: !13067)
!13070 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8839, file: !8839, line: 4205, type: !6890, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!13071 = !DILocation(line: 4207, column: 11, scope: !13070)
!13072 = !DILocation(line: 4207, column: 44, scope: !13070)
!13073 = !DILocation(line: 4207, column: 3, scope: !13070)
!13074 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8839, file: !8839, line: 3224, type: !6900, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13075)
!13075 = !{!13076}
!13076 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13074, file: !8839, line: 3224, type: !132)
!13077 = !DILocation(line: 0, scope: !13074)
!13078 = !DILocation(line: 3226, column: 3, scope: !13074)
!13079 = !DILocation(line: 3227, column: 1, scope: !13074)
!13080 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8839, file: !8839, line: 3188, type: !6900, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13081)
!13081 = !{!13082}
!13082 = !DILocalVariable(name: "Source", arg: 1, scope: !13080, file: !8839, line: 3188, type: !132)
!13083 = !DILocation(line: 0, scope: !13080)
!13084 = !DILocation(line: 3190, column: 3, scope: !13080)
!13085 = !DILocation(line: 3191, column: 1, scope: !13080)
!13086 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8839, file: !8839, line: 3204, type: !6890, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!13087 = !DILocation(line: 3206, column: 21, scope: !13086)
!13088 = !DILocation(line: 3206, column: 3, scope: !13086)
!13089 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8839, file: !8839, line: 3240, type: !6900, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13090)
!13090 = !{!13091}
!13091 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13089, file: !8839, line: 3240, type: !132)
!13092 = !DILocation(line: 0, scope: !13089)
!13093 = !DILocation(line: 3242, column: 3, scope: !13089)
!13094 = !DILocation(line: 3243, column: 1, scope: !13089)
!13095 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8839, file: !8839, line: 3256, type: !6900, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13096)
!13096 = !{!13097}
!13097 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13095, file: !8839, line: 3256, type: !132)
!13098 = !DILocation(line: 0, scope: !13095)
!13099 = !DILocation(line: 3258, column: 3, scope: !13095)
!13100 = !DILocation(line: 3259, column: 1, scope: !13095)
!13101 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8839, file: !8839, line: 5153, type: !6890, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!13102 = !DILocation(line: 5155, column: 11, scope: !13101)
!13103 = !DILocation(line: 5155, column: 47, scope: !13101)
!13104 = !DILocation(line: 5155, column: 3, scope: !13101)
!13105 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12799, file: !12799, line: 540, type: !13106, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !13108)
!13106 = !DISubroutineType(types: !13107)
!13107 = !{!12842, !132, !132, !12920, !12927}
!13108 = !{!13109, !13110, !13111, !13112, !13113, !13114}
!13109 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13105, file: !12799, line: 540, type: !132)
!13110 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13105, file: !12799, line: 540, type: !132)
!13111 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13105, file: !12799, line: 541, type: !12920)
!13112 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13105, file: !12799, line: 541, type: !12927)
!13113 = !DILocalVariable(name: "status", scope: !13105, file: !12799, line: 543, type: !12842)
!13114 = !DILocalVariable(name: "pllfreq", scope: !13105, file: !12799, line: 544, type: !132)
!13115 = !DILocation(line: 0, scope: !13105)
!13116 = !DILocation(line: 551, column: 6, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13105, file: !12799, line: 551, column: 6)
!13118 = !DILocation(line: 551, column: 25, scope: !13117)
!13119 = !DILocation(line: 551, column: 6, scope: !13105)
!13120 = !DILocation(line: 554, column: 15, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13117, file: !12799, line: 552, column: 3)
!13122 = !DILocation(line: 557, column: 8, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13121, file: !12799, line: 557, column: 8)
!13124 = !DILocation(line: 557, column: 29, scope: !13123)
!13125 = !DILocation(line: 557, column: 8, scope: !13121)
!13126 = !DILocation(line: 560, column: 20, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13128, file: !12799, line: 560, column: 10)
!13128 = distinct !DILexicalBlock(scope: !13123, file: !12799, line: 558, column: 5)
!13129 = !DILocation(line: 560, column: 10, scope: !13128)
!13130 = !DILocation(line: 562, column: 9, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13127, file: !12799, line: 561, column: 7)
!13132 = !DILocation(line: 563, column: 7, scope: !13131)
!13133 = !DILocation(line: 566, column: 9, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13127, file: !12799, line: 565, column: 7)
!13135 = !DILocation(line: 570, column: 7, scope: !13128)
!13136 = !DILocation(line: 571, column: 7, scope: !13128)
!13137 = !DILocation(line: 571, column: 14, scope: !13128)
!13138 = !DILocation(line: 571, column: 35, scope: !13128)
!13139 = distinct !{!13139, !13136, !13140}
!13140 = !DILocation(line: 574, column: 7, scope: !13128)
!13141 = !DILocation(line: 578, column: 76, scope: !13121)
!13142 = !DILocation(line: 578, column: 103, scope: !13121)
!13143 = !DILocation(line: 579, column: 54, scope: !13121)
!13144 = !DILocation(line: 578, column: 5, scope: !13121)
!13145 = !DILocation(line: 582, column: 14, scope: !13121)
!13146 = !DILocation(line: 583, column: 3, scope: !13121)
!13147 = !DILocation(line: 0, scope: !13117)
!13148 = !DILocation(line: 590, column: 3, scope: !13105)
!13149 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8839, file: !8839, line: 2969, type: !6890, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!13150 = !DILocation(line: 2971, column: 11, scope: !13149)
!13151 = !DILocation(line: 2971, column: 44, scope: !13149)
!13152 = !DILocation(line: 2971, column: 3, scope: !13149)
!13153 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8839, file: !8839, line: 2929, type: !3232, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!13154 = !DILocation(line: 2931, column: 3, scope: !13153)
!13155 = !DILocation(line: 2932, column: 1, scope: !13153)
!13156 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8839, file: !8839, line: 2939, type: !3232, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!13157 = !DILocation(line: 2941, column: 3, scope: !13156)
!13158 = !DILocation(line: 2942, column: 1, scope: !13156)
!13159 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8839, file: !8839, line: 2949, type: !3232, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3127, retainedNodes: !473)
!13160 = !DILocation(line: 2951, column: 3, scope: !13159)
!13161 = !DILocation(line: 2952, column: 1, scope: !13159)
!13162 = distinct !DISubprogram(name: "z_device_state_init", scope: !13163, file: !13163, line: 23, type: !3232, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13164)
!13163 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13164 = !{!13165}
!13165 = !DILocalVariable(name: "dev", scope: !13162, file: !13163, line: 25, type: !13166)
!13166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13167, size: 32)
!13167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13168)
!13168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !152, line: 378, size: 192, elements: !13169)
!13169 = !{!13170, !13171, !13172, !13173, !13179, !13180}
!13170 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13168, file: !152, line: 380, baseType: !155, size: 32)
!13171 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13168, file: !152, line: 382, baseType: !13, size: 32, offset: 32)
!13172 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13168, file: !152, line: 384, baseType: !13, size: 32, offset: 64)
!13173 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13168, file: !152, line: 386, baseType: !13174, size: 32, offset: 96)
!13174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13175, size: 32)
!13175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !152, line: 351, size: 16, elements: !13176)
!13176 = !{!13177, !13178}
!13177 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13175, file: !152, line: 359, baseType: !163, size: 8)
!13178 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13175, file: !152, line: 364, baseType: !166, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13179 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13168, file: !152, line: 388, baseType: !102, size: 32, offset: 128)
!13180 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13168, file: !152, line: 396, baseType: !169, size: 32, offset: 160)
!13181 = !DILocation(line: 0, scope: !13162)
!13182 = !DILocation(line: 31, column: 1, scope: !13162)
!13183 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13163, file: !13163, line: 33, type: !13184, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13186)
!13184 = !DISubroutineType(types: !13185)
!13185 = !{!13166, !155}
!13186 = !{!13187, !13188}
!13187 = !DILocalVariable(name: "name", arg: 1, scope: !13183, file: !13163, line: 33, type: !155)
!13188 = !DILocalVariable(name: "dev", scope: !13183, file: !13163, line: 35, type: !13166)
!13189 = !DILocation(line: 0, scope: !13183)
!13190 = !DILocation(line: 40, column: 12, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13183, file: !13163, line: 40, column: 6)
!13192 = !DILocation(line: 40, column: 21, scope: !13191)
!13193 = !DILocation(line: 40, column: 25, scope: !13191)
!13194 = !DILocation(line: 40, column: 33, scope: !13191)
!13195 = !DILocation(line: 40, column: 6, scope: !13183)
!13196 = !DILocation(line: 55, column: 2, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13183, file: !13163, line: 55, column: 2)
!13198 = !DILocation(line: 50, column: 7, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13200, file: !13163, line: 50, column: 7)
!13200 = distinct !DILexicalBlock(scope: !13201, file: !13163, line: 49, column: 57)
!13201 = distinct !DILexicalBlock(scope: !13202, file: !13163, line: 49, column: 2)
!13202 = distinct !DILexicalBlock(scope: !13183, file: !13163, line: 49, column: 2)
!13203 = !DILocation(line: 50, column: 30, scope: !13199)
!13204 = !DILocation(line: 50, column: 39, scope: !13199)
!13205 = !DILocation(line: 50, column: 44, scope: !13199)
!13206 = !DILocation(line: 50, column: 7, scope: !13200)
!13207 = !DILocation(line: 49, column: 53, scope: !13201)
!13208 = !DILocation(line: 49, column: 33, scope: !13201)
!13209 = !DILocation(line: 49, column: 2, scope: !13202)
!13210 = distinct !{!13210, !13209, !13211}
!13211 = !DILocation(line: 53, column: 2, scope: !13202)
!13212 = !DILocation(line: 56, column: 7, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13214, file: !13163, line: 56, column: 7)
!13214 = distinct !DILexicalBlock(scope: !13215, file: !13163, line: 55, column: 57)
!13215 = distinct !DILexicalBlock(scope: !13197, file: !13163, line: 55, column: 2)
!13216 = !DILocation(line: 56, column: 30, scope: !13213)
!13217 = !DILocation(line: 56, column: 52, scope: !13213)
!13218 = !DILocation(line: 56, column: 34, scope: !13213)
!13219 = !DILocation(line: 56, column: 58, scope: !13213)
!13220 = !DILocation(line: 56, column: 7, scope: !13214)
!13221 = !DILocation(line: 55, column: 53, scope: !13215)
!13222 = !DILocation(line: 55, column: 33, scope: !13215)
!13223 = distinct !{!13223, !13196, !13224}
!13224 = !DILocation(line: 59, column: 2, scope: !13197)
!13225 = !DILocation(line: 62, column: 1, scope: !13183)
!13226 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13163, file: !13163, line: 93, type: !13227, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13229)
!13227 = !DISubroutineType(types: !13228)
!13228 = !{!166, !13166}
!13229 = !{!13230}
!13230 = !DILocalVariable(name: "dev", arg: 1, scope: !13226, file: !13163, line: 93, type: !13166)
!13231 = !DILocation(line: 0, scope: !13226)
!13232 = !DILocation(line: 99, column: 10, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13226, file: !13163, line: 99, column: 6)
!13234 = !DILocation(line: 99, column: 6, scope: !13226)
!13235 = !DILocation(line: 103, column: 14, scope: !13226)
!13236 = !DILocation(line: 103, column: 21, scope: !13226)
!13237 = !DILocation(line: 103, column: 33, scope: !13226)
!13238 = !DILocation(line: 103, column: 49, scope: !13226)
!13239 = !DILocation(line: 103, column: 58, scope: !13226)
!13240 = !DILocation(line: 104, column: 1, scope: !13226)
!13241 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13163, file: !13163, line: 87, type: !13242, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13245)
!13242 = !DISubroutineType(types: !13243)
!13243 = !{!356, !13244}
!13244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13166, size: 32)
!13245 = !{!13246}
!13246 = !DILocalVariable(name: "devices", arg: 1, scope: !13241, file: !13163, line: 87, type: !13244)
!13247 = !DILocation(line: 0, scope: !13241)
!13248 = !DILocation(line: 89, column: 11, scope: !13241)
!13249 = !DILocation(line: 90, column: 2, scope: !13241)
!13250 = distinct !DISubprogram(name: "device_required_foreach", scope: !13163, file: !13163, line: 125, type: !13251, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13257)
!13251 = !DISubroutineType(types: !13252)
!13252 = !{!103, !13166, !13253, !102}
!13253 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !152, line: 471, baseType: !13254)
!13254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13255, size: 32)
!13255 = !DISubroutineType(types: !13256)
!13256 = !{!103, !13166, !102}
!13257 = !{!13258, !13259, !13260, !13261, !13262}
!13258 = !DILocalVariable(name: "dev", arg: 1, scope: !13250, file: !13163, line: 125, type: !13166)
!13259 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13250, file: !13163, line: 126, type: !13253)
!13260 = !DILocalVariable(name: "context", arg: 3, scope: !13250, file: !13163, line: 127, type: !102)
!13261 = !DILocalVariable(name: "handle_count", scope: !13250, file: !13163, line: 129, type: !356)
!13262 = !DILocalVariable(name: "handles", scope: !13250, file: !13163, line: 130, type: !169)
!13263 = !DILocation(line: 0, scope: !13250)
!13264 = !DILocation(line: 129, column: 2, scope: !13250)
!13265 = !DILocation(line: 129, column: 9, scope: !13250)
!13266 = !DILocation(line: 130, column: 35, scope: !13250)
!13267 = !DILocation(line: 132, column: 33, scope: !13250)
!13268 = !DILocation(line: 132, column: 9, scope: !13250)
!13269 = !DILocation(line: 133, column: 1, scope: !13250)
!13270 = !DILocation(line: 132, column: 2, scope: !13250)
!13271 = distinct !DISubprogram(name: "device_required_handles_get", scope: !152, file: !152, line: 493, type: !13272, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13274)
!13272 = !DISubroutineType(types: !13273)
!13273 = !{!169, !13166, !2606}
!13274 = !{!13275, !13276, !13277, !13278}
!13275 = !DILocalVariable(name: "dev", arg: 1, scope: !13271, file: !152, line: 493, type: !13166)
!13276 = !DILocalVariable(name: "count", arg: 2, scope: !13271, file: !152, line: 493, type: !2606)
!13277 = !DILocalVariable(name: "rv", scope: !13271, file: !152, line: 495, type: !169)
!13278 = !DILocalVariable(name: "i", scope: !13279, file: !152, line: 498, type: !356)
!13279 = distinct !DILexicalBlock(scope: !13280, file: !152, line: 497, column: 18)
!13280 = distinct !DILexicalBlock(scope: !13271, file: !152, line: 497, column: 6)
!13281 = !DILocation(line: 0, scope: !13271)
!13282 = !DILocation(line: 495, column: 35, scope: !13271)
!13283 = !DILocation(line: 497, column: 9, scope: !13280)
!13284 = !DILocation(line: 497, column: 6, scope: !13271)
!13285 = !DILocation(line: 0, scope: !13279)
!13286 = !DILocation(line: 500, column: 11, scope: !13279)
!13287 = !DILocation(line: 500, column: 40, scope: !13279)
!13288 = !DILocation(line: 502, column: 4, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13279, file: !152, line: 501, column: 40)
!13290 = distinct !{!13290, !13291, !13292}
!13291 = !DILocation(line: 500, column: 3, scope: !13279)
!13292 = !DILocation(line: 503, column: 3, scope: !13279)
!13293 = !DILocation(line: 504, column: 10, scope: !13279)
!13294 = !DILocation(line: 505, column: 2, scope: !13279)
!13295 = !DILocation(line: 507, column: 2, scope: !13271)
!13296 = distinct !DISubprogram(name: "device_visitor", scope: !13163, file: !13163, line: 106, type: !13297, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13299)
!13297 = !DISubroutineType(types: !13298)
!13298 = !{!103, !169, !356, !13253, !102}
!13299 = !{!13300, !13301, !13302, !13303, !13304, !13306, !13309, !13310}
!13300 = !DILocalVariable(name: "handles", arg: 1, scope: !13296, file: !13163, line: 106, type: !169)
!13301 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13296, file: !13163, line: 107, type: !356)
!13302 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13296, file: !13163, line: 108, type: !13253)
!13303 = !DILocalVariable(name: "context", arg: 4, scope: !13296, file: !13163, line: 109, type: !102)
!13304 = !DILocalVariable(name: "i", scope: !13305, file: !13163, line: 112, type: !356)
!13305 = distinct !DILexicalBlock(scope: !13296, file: !13163, line: 112, column: 2)
!13306 = !DILocalVariable(name: "dh", scope: !13307, file: !13163, line: 113, type: !171)
!13307 = distinct !DILexicalBlock(scope: !13308, file: !13163, line: 112, column: 44)
!13308 = distinct !DILexicalBlock(scope: !13305, file: !13163, line: 112, column: 2)
!13309 = !DILocalVariable(name: "rdev", scope: !13307, file: !13163, line: 114, type: !13166)
!13310 = !DILocalVariable(name: "rc", scope: !13307, file: !13163, line: 115, type: !103)
!13311 = !DILocation(line: 0, scope: !13296)
!13312 = !DILocation(line: 0, scope: !13305)
!13313 = !DILocation(line: 112, column: 23, scope: !13308)
!13314 = !DILocation(line: 112, column: 2, scope: !13305)
!13315 = distinct !{!13315, !13314, !13316}
!13316 = !DILocation(line: 120, column: 2, scope: !13305)
!13317 = !DILocation(line: 113, column: 24, scope: !13307)
!13318 = !DILocation(line: 0, scope: !13307)
!13319 = !DILocation(line: 114, column: 31, scope: !13307)
!13320 = !DILocation(line: 115, column: 12, scope: !13307)
!13321 = !DILocation(line: 117, column: 10, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13307, file: !13163, line: 117, column: 7)
!13323 = !DILocation(line: 112, column: 39, scope: !13308)
!13324 = !DILocation(line: 123, column: 1, scope: !13296)
!13325 = distinct !DISubprogram(name: "device_from_handle", scope: !152, file: !152, line: 439, type: !13326, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13328)
!13326 = !DISubroutineType(types: !13327)
!13327 = !{!13166, !171}
!13328 = !{!13329, !13330, !13331}
!13329 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13325, file: !152, line: 439, type: !171)
!13330 = !DILocalVariable(name: "dev", scope: !13325, file: !152, line: 443, type: !13166)
!13331 = !DILocalVariable(name: "numdev", scope: !13325, file: !152, line: 444, type: !356)
!13332 = !DILocation(line: 0, scope: !13325)
!13333 = !DILocation(line: 446, column: 7, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13325, file: !152, line: 446, column: 6)
!13335 = !DILocation(line: 446, column: 18, scope: !13334)
!13336 = !DILocation(line: 446, column: 23, scope: !13334)
!13337 = !DILocation(line: 450, column: 2, scope: !13325)
!13338 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13163, file: !13163, line: 135, type: !13251, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13339)
!13339 = !{!13340, !13341, !13342, !13343, !13344}
!13340 = !DILocalVariable(name: "dev", arg: 1, scope: !13338, file: !13163, line: 135, type: !13166)
!13341 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13338, file: !13163, line: 136, type: !13253)
!13342 = !DILocalVariable(name: "context", arg: 3, scope: !13338, file: !13163, line: 137, type: !102)
!13343 = !DILocalVariable(name: "handle_count", scope: !13338, file: !13163, line: 139, type: !356)
!13344 = !DILocalVariable(name: "handles", scope: !13338, file: !13163, line: 140, type: !169)
!13345 = !DILocation(line: 0, scope: !13338)
!13346 = !DILocation(line: 139, column: 2, scope: !13338)
!13347 = !DILocation(line: 139, column: 9, scope: !13338)
!13348 = !DILocation(line: 140, column: 35, scope: !13338)
!13349 = !DILocation(line: 142, column: 33, scope: !13338)
!13350 = !DILocation(line: 142, column: 9, scope: !13338)
!13351 = !DILocation(line: 143, column: 1, scope: !13338)
!13352 = !DILocation(line: 142, column: 2, scope: !13338)
!13353 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !152, file: !152, line: 573, type: !13272, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3192, retainedNodes: !13354)
!13354 = !{!13355, !13356, !13357, !13358, !13359}
!13355 = !DILocalVariable(name: "dev", arg: 1, scope: !13353, file: !152, line: 573, type: !13166)
!13356 = !DILocalVariable(name: "count", arg: 2, scope: !13353, file: !152, line: 573, type: !2606)
!13357 = !DILocalVariable(name: "rv", scope: !13353, file: !152, line: 575, type: !169)
!13358 = !DILocalVariable(name: "region", scope: !13353, file: !152, line: 576, type: !356)
!13359 = !DILocalVariable(name: "i", scope: !13353, file: !152, line: 577, type: !356)
!13360 = !DILocation(line: 0, scope: !13353)
!13361 = !DILocation(line: 575, column: 35, scope: !13353)
!13362 = !DILocation(line: 579, column: 9, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13353, file: !152, line: 579, column: 6)
!13364 = !DILocation(line: 579, column: 6, scope: !13353)
!13365 = !DILocation(line: 582, column: 8, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13367, file: !152, line: 582, column: 8)
!13367 = distinct !DILexicalBlock(scope: !13368, file: !152, line: 581, column: 23)
!13368 = distinct !DILexicalBlock(scope: !13363, file: !152, line: 579, column: 18)
!13369 = !DILocation(line: 582, column: 12, scope: !13366)
!13370 = !DILocation(line: 585, column: 6, scope: !13367)
!13371 = !DILocation(line: 0, scope: !13368)
!13372 = !DILocation(line: 581, column: 17, scope: !13368)
!13373 = !DILocation(line: 581, column: 3, scope: !13368)
!13374 = !DILocation(line: 588, column: 10, scope: !13368)
!13375 = !DILocation(line: 588, column: 16, scope: !13368)
!13376 = !DILocation(line: 589, column: 4, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13368, file: !152, line: 588, column: 39)
!13378 = !DILocation(line: 588, column: 3, scope: !13368)
!13379 = distinct !{!13379, !13378, !13380}
!13380 = !DILocation(line: 590, column: 3, scope: !13368)
!13381 = !DILocation(line: 591, column: 10, scope: !13368)
!13382 = !DILocation(line: 592, column: 2, scope: !13368)
!13383 = !DILocation(line: 575, column: 25, scope: !13353)
!13384 = !DILocation(line: 594, column: 2, scope: !13353)
!13385 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1941, file: !1941, line: 49, type: !5981, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !473)
!13386 = !DILocation(line: 51, column: 10, scope: !13385)
!13387 = !DILocation(line: 51, column: 20, scope: !13385)
!13388 = !DILocation(line: 51, column: 2, scope: !13385)
!13389 = distinct !DISubprogram(name: "coredump", scope: !3199, file: !3199, line: 209, type: !13390, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13536)
!13390 = !DISubroutineType(types: !13391)
!13391 = !{null, !32, !13392, !13436}
!13392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13393, size: 32)
!13393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13394)
!13394 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2813, line: 141, baseType: !13395)
!13395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2813, line: 97, size: 256, elements: !13396)
!13396 = !{!13397}
!13397 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13395, file: !2813, line: 107, baseType: !13398, size: 256)
!13398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2813, line: 98, size: 256, elements: !13399)
!13399 = !{!13400, !13405, !13410, !13415, !13420, !13425, !13430, !13435}
!13400 = !DIDerivedType(tag: DW_TAG_member, scope: !13398, file: !2813, line: 99, baseType: !13401, size: 32)
!13401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13398, file: !2813, line: 99, size: 32, elements: !13402)
!13402 = !{!13403, !13404}
!13403 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13401, file: !2813, line: 99, baseType: !132, size: 32)
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13401, file: !2813, line: 99, baseType: !132, size: 32)
!13405 = !DIDerivedType(tag: DW_TAG_member, scope: !13398, file: !2813, line: 100, baseType: !13406, size: 32, offset: 32)
!13406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13398, file: !2813, line: 100, size: 32, elements: !13407)
!13407 = !{!13408, !13409}
!13408 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13406, file: !2813, line: 100, baseType: !132, size: 32)
!13409 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13406, file: !2813, line: 100, baseType: !132, size: 32)
!13410 = !DIDerivedType(tag: DW_TAG_member, scope: !13398, file: !2813, line: 101, baseType: !13411, size: 32, offset: 64)
!13411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13398, file: !2813, line: 101, size: 32, elements: !13412)
!13412 = !{!13413, !13414}
!13413 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13411, file: !2813, line: 101, baseType: !132, size: 32)
!13414 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13411, file: !2813, line: 101, baseType: !132, size: 32)
!13415 = !DIDerivedType(tag: DW_TAG_member, scope: !13398, file: !2813, line: 102, baseType: !13416, size: 32, offset: 96)
!13416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13398, file: !2813, line: 102, size: 32, elements: !13417)
!13417 = !{!13418, !13419}
!13418 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13416, file: !2813, line: 102, baseType: !132, size: 32)
!13419 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13416, file: !2813, line: 102, baseType: !132, size: 32)
!13420 = !DIDerivedType(tag: DW_TAG_member, scope: !13398, file: !2813, line: 103, baseType: !13421, size: 32, offset: 128)
!13421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13398, file: !2813, line: 103, size: 32, elements: !13422)
!13422 = !{!13423, !13424}
!13423 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13421, file: !2813, line: 103, baseType: !132, size: 32)
!13424 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13421, file: !2813, line: 103, baseType: !132, size: 32)
!13425 = !DIDerivedType(tag: DW_TAG_member, scope: !13398, file: !2813, line: 104, baseType: !13426, size: 32, offset: 160)
!13426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13398, file: !2813, line: 104, size: 32, elements: !13427)
!13427 = !{!13428, !13429}
!13428 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13426, file: !2813, line: 104, baseType: !132, size: 32)
!13429 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13426, file: !2813, line: 104, baseType: !132, size: 32)
!13430 = !DIDerivedType(tag: DW_TAG_member, scope: !13398, file: !2813, line: 105, baseType: !13431, size: 32, offset: 192)
!13431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13398, file: !2813, line: 105, size: 32, elements: !13432)
!13432 = !{!13433, !13434}
!13433 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13431, file: !2813, line: 105, baseType: !132, size: 32)
!13434 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13431, file: !2813, line: 105, baseType: !132, size: 32)
!13435 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13398, file: !2813, line: 106, baseType: !132, size: 32, offset: 224)
!13436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13437, size: 32)
!13437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !13438)
!13438 = !{!13439, !13497, !13509, !13510, !13511, !13512, !13518, !13531}
!13439 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13437, file: !367, line: 247, baseType: !13440, size: 384)
!13440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !13441)
!13441 = !{!13442, !13466, !13473, !13474, !13475, !13484, !13485, !13486}
!13442 = !DIDerivedType(tag: DW_TAG_member, scope: !13440, file: !367, line: 60, baseType: !13443, size: 64)
!13443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13440, file: !367, line: 60, size: 64, elements: !13444)
!13444 = !{!13445, !13460}
!13445 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13443, file: !367, line: 61, baseType: !13446, size: 64)
!13446 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !321, line: 49, baseType: !13447)
!13447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !321, line: 37, size: 64, elements: !13448)
!13448 = !{!13449, !13455}
!13449 = !DIDerivedType(tag: DW_TAG_member, scope: !13447, file: !321, line: 38, baseType: !13450, size: 32)
!13450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13447, file: !321, line: 38, size: 32, elements: !13451)
!13451 = !{!13452, !13454}
!13452 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13450, file: !321, line: 39, baseType: !13453, size: 32)
!13453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13447, size: 32)
!13454 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13450, file: !321, line: 40, baseType: !13453, size: 32)
!13455 = !DIDerivedType(tag: DW_TAG_member, scope: !13447, file: !321, line: 42, baseType: !13456, size: 32, offset: 32)
!13456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13447, file: !321, line: 42, size: 32, elements: !13457)
!13457 = !{!13458, !13459}
!13458 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13456, file: !321, line: 43, baseType: !13453, size: 32)
!13459 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13456, file: !321, line: 44, baseType: !13453, size: 32)
!13460 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13443, file: !367, line: 62, baseType: !13461, size: 64)
!13461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !13462)
!13462 = !{!13463}
!13463 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13461, file: !392, line: 50, baseType: !13464, size: 64)
!13464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13465, size: 64, elements: !397)
!13465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13461, size: 32)
!13466 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13440, file: !367, line: 68, baseType: !13467, size: 32, offset: 64)
!13467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13468, size: 32)
!13468 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !13469)
!13469 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !13470)
!13470 = !{!13471}
!13471 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13469, file: !316, line: 232, baseType: !13472, size: 64)
!13472 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !13447)
!13473 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13440, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!13474 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13440, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!13475 = !DIDerivedType(tag: DW_TAG_member, scope: !13440, file: !367, line: 90, baseType: !13476, size: 16, offset: 112)
!13476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13440, file: !367, line: 90, size: 16, elements: !13477)
!13477 = !{!13478, !13483}
!13478 = !DIDerivedType(tag: DW_TAG_member, scope: !13476, file: !367, line: 91, baseType: !13479, size: 16)
!13479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13476, file: !367, line: 91, size: 16, elements: !13480)
!13480 = !{!13481, !13482}
!13481 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13479, file: !367, line: 96, baseType: !415, size: 8)
!13482 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13479, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!13483 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13476, file: !367, line: 100, baseType: !340, size: 16)
!13484 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13440, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!13485 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13440, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13440, file: !367, line: 131, baseType: !13487, size: 192, offset: 192)
!13487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !13488)
!13488 = !{!13489, !13490, !13496}
!13489 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13487, file: !316, line: 245, baseType: !13446, size: 64)
!13490 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13487, file: !316, line: 246, baseType: !13491, size: 32, offset: 64)
!13491 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !13492)
!13492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13493, size: 32)
!13493 = !DISubroutineType(types: !13494)
!13494 = !{null, !13495}
!13495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13487, size: 32)
!13496 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13487, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!13497 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13437, file: !367, line: 250, baseType: !13498, size: 288, offset: 384)
!13498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !13499)
!13499 = !{!13500, !13501, !13502, !13503, !13504, !13505, !13506, !13507, !13508}
!13500 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13498, file: !436, line: 26, baseType: !132, size: 32)
!13501 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13498, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!13502 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13498, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13498, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!13504 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13498, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!13505 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13498, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!13506 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13498, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!13507 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13498, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!13508 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13498, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!13509 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13437, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!13510 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13437, file: !367, line: 256, baseType: !13468, size: 64, offset: 704)
!13511 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13437, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!13512 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13437, file: !367, line: 300, baseType: !13513, size: 96, offset: 800)
!13513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !13514)
!13514 = !{!13515, !13516, !13517}
!13515 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13513, file: !367, line: 153, baseType: !22, size: 32)
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13513, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13513, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!13518 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13437, file: !367, line: 325, baseType: !13519, size: 32, offset: 896)
!13519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13520, size: 32)
!13520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !13521)
!13521 = !{!13522, !13528, !13529}
!13522 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13520, file: !312, line: 5074, baseType: !13523, size: 96)
!13523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !13524)
!13524 = !{!13525, !13526, !13527}
!13525 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13523, file: !462, line: 57, baseType: !465, size: 32)
!13526 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13523, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!13527 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13523, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!13528 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13520, file: !312, line: 5075, baseType: !13468, size: 64, offset: 96)
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13520, file: !312, line: 5076, baseType: !13530, offset: 160)
!13530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!13531 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13437, file: !367, line: 343, baseType: !13532, size: 64, offset: 928)
!13532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !13533)
!13533 = !{!13534, !13535}
!13534 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13532, file: !436, line: 63, baseType: !132, size: 32)
!13535 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13532, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!13536 = !{!13537, !13538, !13539}
!13537 = !DILocalVariable(name: "reason", arg: 1, scope: !13389, file: !3199, line: 209, type: !32)
!13538 = !DILocalVariable(name: "esf", arg: 2, scope: !13389, file: !3199, line: 209, type: !13392)
!13539 = !DILocalVariable(name: "thread", arg: 3, scope: !13389, file: !3199, line: 210, type: !13436)
!13540 = !DILocation(line: 0, scope: !13389)
!13541 = !DILocation(line: 212, column: 1, scope: !13389)
!13542 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3199, file: !3199, line: 214, type: !13543, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13545)
!13543 = !DISubroutineType(types: !13544)
!13544 = !{null, !22, !22}
!13545 = !{!13546, !13547}
!13546 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13542, file: !3199, line: 214, type: !22)
!13547 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13542, file: !3199, line: 214, type: !22)
!13548 = !DILocation(line: 0, scope: !13542)
!13549 = !DILocation(line: 216, column: 1, scope: !13542)
!13550 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3199, file: !3199, line: 218, type: !13551, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13553)
!13551 = !DISubroutineType(types: !13552)
!13552 = !{null, !270, !356}
!13553 = !{!13554, !13555}
!13554 = !DILocalVariable(name: "buf", arg: 1, scope: !13550, file: !3199, line: 218, type: !270)
!13555 = !DILocalVariable(name: "buflen", arg: 2, scope: !13550, file: !3199, line: 218, type: !356)
!13556 = !DILocation(line: 0, scope: !13550)
!13557 = !DILocation(line: 220, column: 1, scope: !13550)
!13558 = distinct !DISubprogram(name: "coredump_query", scope: !3199, file: !3199, line: 222, type: !13559, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13561)
!13559 = !DISubroutineType(types: !13560)
!13560 = !{!103, !3198, !102}
!13561 = !{!13562, !13563}
!13562 = !DILocalVariable(name: "query_id", arg: 1, scope: !13558, file: !3199, line: 222, type: !3198)
!13563 = !DILocalVariable(name: "arg", arg: 2, scope: !13558, file: !3199, line: 222, type: !102)
!13564 = !DILocation(line: 0, scope: !13558)
!13565 = !DILocation(line: 224, column: 2, scope: !13558)
!13566 = distinct !DISubprogram(name: "coredump_cmd", scope: !3199, file: !3199, line: 227, type: !13567, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13569)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{!103, !3205, !102}
!13569 = !{!13570, !13571}
!13570 = !DILocalVariable(name: "query_id", arg: 1, scope: !13566, file: !3199, line: 227, type: !3205)
!13571 = !DILocalVariable(name: "arg", arg: 2, scope: !13566, file: !3199, line: 227, type: !102)
!13572 = !DILocation(line: 0, scope: !13566)
!13573 = !DILocation(line: 229, column: 2, scope: !13566)
!13574 = distinct !DISubprogram(name: "arch_system_halt", scope: !13575, file: !13575, line: 23, type: !5800, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13576)
!13575 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13576 = !{!13577}
!13577 = !DILocalVariable(name: "reason", arg: 1, scope: !13574, file: !13575, line: 23, type: !32)
!13578 = !DILocation(line: 0, scope: !13574)
!13579 = !DILocation(line: 55, column: 2, scope: !13580, inlinedAt: !13584)
!13580 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5789, file: !5789, line: 42, type: !5790, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13581)
!13581 = !{!13582, !13583}
!13582 = !DILocalVariable(name: "key", scope: !13580, file: !5789, line: 44, type: !32)
!13583 = !DILocalVariable(name: "tmp", scope: !13580, file: !5789, line: 53, type: !32)
!13584 = distinct !DILocation(line: 31, column: 8, scope: !13574)
!13585 = !{i64 1949981}
!13586 = !DILocation(line: 0, scope: !13580, inlinedAt: !13584)
!13587 = !DILocation(line: 32, column: 2, scope: !13574)
!13588 = !DILocation(line: 32, column: 2, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13590, file: !13575, line: 32, column: 2)
!13590 = distinct !DILexicalBlock(scope: !13574, file: !13575, line: 32, column: 2)
!13591 = distinct !{!13591, !13592, !13593}
!13592 = !DILocation(line: 32, column: 2, scope: !13590)
!13593 = !DILocation(line: 34, column: 2, scope: !13590)
!13594 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13575, file: !13575, line: 39, type: !13595, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13597)
!13595 = !DISubroutineType(types: !13596)
!13596 = !{null, !32, !13392}
!13597 = !{!13598, !13599}
!13598 = !DILocalVariable(name: "reason", arg: 1, scope: !13594, file: !13575, line: 39, type: !32)
!13599 = !DILocalVariable(name: "esf", arg: 2, scope: !13594, file: !13575, line: 40, type: !13392)
!13600 = !DILocation(line: 0, scope: !13594)
!13601 = !DILocation(line: 46, column: 2, scope: !13594)
!13602 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13575, file: !13575, line: 81, type: !5800, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13603)
!13603 = !{!13604}
!13604 = !DILocalVariable(name: "reason", arg: 1, scope: !13602, file: !13575, line: 81, type: !32)
!13605 = !DILocation(line: 0, scope: !13602)
!13606 = !DILocation(line: 83, column: 2, scope: !13602)
!13607 = distinct !DISubprogram(name: "z_fatal_error", scope: !13575, file: !13575, line: 96, type: !13595, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13608)
!13608 = !{!13609, !13610, !13611, !13612}
!13609 = !DILocalVariable(name: "reason", arg: 1, scope: !13607, file: !13575, line: 96, type: !32)
!13610 = !DILocalVariable(name: "esf", arg: 2, scope: !13607, file: !13575, line: 96, type: !13392)
!13611 = !DILocalVariable(name: "key", scope: !13607, file: !13575, line: 102, type: !32)
!13612 = !DILocalVariable(name: "thread", scope: !13607, file: !13575, line: 103, type: !13436)
!13613 = !DILocation(line: 0, scope: !13607)
!13614 = !DILocation(line: 55, column: 2, scope: !13580, inlinedAt: !13615)
!13615 = distinct !DILocation(line: 102, column: 21, scope: !13607)
!13616 = !DILocation(line: 0, scope: !13580, inlinedAt: !13615)
!13617 = !DILocation(line: 119, column: 11, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13607, file: !13575, line: 119, column: 6)
!13619 = !DILocation(line: 119, column: 20, scope: !13618)
!13620 = !DILocation(line: 131, column: 2, scope: !13607)
!13621 = !DILocation(line: 151, column: 7, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13623, file: !13575, line: 146, column: 32)
!13623 = distinct !DILexicalBlock(scope: !13607, file: !13575, line: 146, column: 6)
!13624 = !DILocation(line: 151, column: 21, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13622, file: !13575, line: 151, column: 7)
!13626 = !DILocation(line: 104, column: 4, scope: !13607)
!13627 = !DILocalVariable(name: "key", arg: 1, scope: !13628, file: !5789, line: 84, type: !32)
!13628 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5789, file: !5789, line: 84, type: !5800, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13629)
!13629 = !{!13627}
!13630 = !DILocation(line: 0, scope: !13628, inlinedAt: !13631)
!13631 = distinct !DILocation(line: 186, column: 2, scope: !13607)
!13632 = !DILocation(line: 95, column: 2, scope: !13628, inlinedAt: !13631)
!13633 = !{i64 1950798}
!13634 = !DILocation(line: 189, column: 3, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13636, file: !13575, line: 188, column: 41)
!13636 = distinct !DILexicalBlock(scope: !13607, file: !13575, line: 188, column: 6)
!13637 = !DILocation(line: 191, column: 1, scope: !13607)
!13638 = distinct !DISubprogram(name: "k_current_get", scope: !312, file: !312, line: 530, type: !13639, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !473)
!13639 = !DISubroutineType(types: !13640)
!13640 = !{!13641}
!13641 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !13436)
!13642 = !DILocation(line: 535, column: 9, scope: !13638)
!13643 = !DILocation(line: 535, column: 2, scope: !13638)
!13644 = distinct !DISubprogram(name: "k_thread_abort", scope: !3672, file: !3672, line: 188, type: !13645, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !13647)
!13645 = !DISubroutineType(types: !13646)
!13646 = !{null, !13641}
!13647 = !{!13648}
!13648 = !DILocalVariable(name: "thread", arg: 1, scope: !13644, file: !3672, line: 188, type: !13641)
!13649 = !DILocation(line: 0, scope: !13644)
!13650 = !DILocation(line: 197, column: 2, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13644, file: !3672, line: 197, column: 2)
!13652 = !{i64 2154065021}
!13653 = !DILocation(line: 198, column: 2, scope: !13644)
!13654 = !DILocation(line: 199, column: 1, scope: !13644)
!13655 = distinct !DISubprogram(name: "z_current_get", scope: !3672, file: !3672, line: 173, type: !13639, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !473)
!13656 = !DILocation(line: 180, column: 2, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13655, file: !3672, line: 180, column: 2)
!13658 = !{i64 2154064953}
!13659 = !DILocation(line: 181, column: 9, scope: !13655)
!13660 = !DILocation(line: 181, column: 2, scope: !13655)
!13661 = distinct !DISubprogram(name: "z_early_memset", scope: !1948, file: !1948, line: 108, type: !13662, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13664)
!13662 = !DISubroutineType(types: !13663)
!13663 = !{null, !102, !103, !356}
!13664 = !{!13665, !13666, !13667}
!13665 = !DILocalVariable(name: "dst", arg: 1, scope: !13661, file: !1948, line: 108, type: !102)
!13666 = !DILocalVariable(name: "c", arg: 2, scope: !13661, file: !1948, line: 108, type: !103)
!13667 = !DILocalVariable(name: "n", arg: 3, scope: !13661, file: !1948, line: 108, type: !356)
!13668 = !DILocation(line: 0, scope: !13661)
!13669 = !DILocation(line: 110, column: 9, scope: !13661)
!13670 = !DILocation(line: 111, column: 1, scope: !13661)
!13671 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1948, file: !1948, line: 121, type: !13672, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13674)
!13672 = !DISubroutineType(types: !13673)
!13673 = !{null, !102, !13, !356}
!13674 = !{!13675, !13676, !13677}
!13675 = !DILocalVariable(name: "dst", arg: 1, scope: !13671, file: !1948, line: 121, type: !102)
!13676 = !DILocalVariable(name: "src", arg: 2, scope: !13671, file: !1948, line: 121, type: !13)
!13677 = !DILocalVariable(name: "n", arg: 3, scope: !13671, file: !1948, line: 121, type: !356)
!13678 = !DILocation(line: 0, scope: !13671)
!13679 = !DILocation(line: 123, column: 9, scope: !13671)
!13680 = !DILocation(line: 124, column: 1, scope: !13671)
!13681 = distinct !DISubprogram(name: "z_bss_zero", scope: !1948, file: !1948, line: 132, type: !3232, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !473)
!13682 = !DILocation(line: 143, column: 2, scope: !13681)
!13683 = !DILocation(line: 168, column: 1, scope: !13681)
!13684 = distinct !DISubprogram(name: "z_init_cpu", scope: !1948, file: !1948, line: 372, type: !8451, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13685)
!13685 = !{!13686}
!13686 = !DILocalVariable(name: "id", arg: 1, scope: !13684, file: !1948, line: 372, type: !103)
!13687 = !DILocation(line: 0, scope: !13684)
!13688 = !DILocation(line: 374, column: 2, scope: !13684)
!13689 = !DILocation(line: 375, column: 34, scope: !13684)
!13690 = !DILocation(line: 375, column: 19, scope: !13684)
!13691 = !DILocation(line: 375, column: 31, scope: !13684)
!13692 = !DILocation(line: 376, column: 24, scope: !13684)
!13693 = !DILocation(line: 376, column: 19, scope: !13684)
!13694 = !DILocation(line: 376, column: 22, scope: !13684)
!13695 = !DILocation(line: 378, column: 26, scope: !13684)
!13696 = !DILocation(line: 378, column: 4, scope: !13684)
!13697 = !DILocation(line: 378, column: 50, scope: !13684)
!13698 = !DILocation(line: 377, column: 19, scope: !13684)
!13699 = !DILocation(line: 377, column: 29, scope: !13684)
!13700 = !DILocation(line: 384, column: 1, scope: !13684)
!13701 = distinct !DISubprogram(name: "init_idle_thread", scope: !1948, file: !1948, line: 343, type: !8451, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13702)
!13702 = !{!13703, !13704, !13705, !13708}
!13703 = !DILocalVariable(name: "i", arg: 1, scope: !13701, file: !1948, line: 343, type: !103)
!13704 = !DILocalVariable(name: "thread", scope: !13701, file: !1948, line: 345, type: !2040)
!13705 = !DILocalVariable(name: "stack", scope: !13701, file: !1948, line: 346, type: !13706)
!13706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13707, size: 32)
!13707 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3551, line: 44, baseType: !2154)
!13708 = !DILocalVariable(name: "tname", scope: !13701, file: !1948, line: 358, type: !1063)
!13709 = !DILocation(line: 0, scope: !13701)
!13710 = !DILocation(line: 345, column: 29, scope: !13701)
!13711 = !DILocation(line: 346, column: 28, scope: !13701)
!13712 = !DILocation(line: 362, column: 37, scope: !13701)
!13713 = !DILocation(line: 362, column: 36, scope: !13701)
!13714 = !DILocation(line: 361, column: 2, scope: !13701)
!13715 = !DILocation(line: 365, column: 2, scope: !13701)
!13716 = !DILocation(line: 370, column: 1, scope: !13701)
!13717 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2155, file: !2155, line: 331, type: !13718, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13720)
!13718 = !DISubroutineType(types: !13719)
!13719 = !{!1063, !13706}
!13720 = !{!13721}
!13721 = !DILocalVariable(name: "sym", arg: 1, scope: !13717, file: !2155, line: 331, type: !13706)
!13722 = !DILocation(line: 0, scope: !13717)
!13723 = !DILocation(line: 333, column: 21, scope: !13717)
!13724 = !DILocation(line: 333, column: 2, scope: !13717)
!13725 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13726, file: !13726, line: 155, type: !13727, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13729)
!13726 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13727 = !DISubroutineType(types: !13728)
!13728 = !{null, !2040}
!13729 = !{!13730}
!13730 = !DILocalVariable(name: "thread", arg: 1, scope: !13725, file: !13726, line: 155, type: !2040)
!13731 = !DILocation(line: 0, scope: !13725)
!13732 = !DILocation(line: 157, column: 15, scope: !13725)
!13733 = !DILocation(line: 157, column: 28, scope: !13725)
!13734 = !DILocation(line: 158, column: 1, scope: !13725)
!13735 = distinct !DISubprogram(name: "z_cstart", scope: !1948, file: !1948, line: 501, type: !3232, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13736)
!13736 = !{!13737}
!13737 = !DILocalVariable(name: "dummy_thread", scope: !13735, file: !1948, line: 518, type: !2041)
!13738 = !DILocation(line: 507, column: 2, scope: !13735)
!13739 = !DILocation(line: 43, column: 14, scope: !13740, inlinedAt: !13744)
!13740 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13741, file: !13741, line: 40, type: !3232, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13742)
!13741 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13742 = !{!13743}
!13743 = !DILocalVariable(name: "msp", scope: !13740, file: !13741, line: 42, type: !132)
!13744 = distinct !DILocation(line: 44, column: 2, scope: !13745, inlinedAt: !13747)
!13745 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13746, file: !13746, line: 42, type: !3232, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !473)
!13746 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13747 = distinct !DILocation(line: 510, column: 2, scope: !13735)
!13748 = !DILocation(line: 43, column: 3, scope: !13740, inlinedAt: !13744)
!13749 = !DILocation(line: 43, column: 60, scope: !13740, inlinedAt: !13744)
!13750 = !DILocation(line: 0, scope: !13740, inlinedAt: !13744)
!13751 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13752, file: !6809, line: 1153, type: !132)
!13752 = distinct !DISubprogram(name: "__set_MSP", scope: !6809, file: !6809, line: 1153, type: !6900, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13753)
!13753 = !{!13751}
!13754 = !DILocation(line: 0, scope: !13752, inlinedAt: !13755)
!13755 = distinct !DILocation(line: 46, column: 2, scope: !13740, inlinedAt: !13744)
!13756 = !DILocation(line: 1155, column: 3, scope: !13752, inlinedAt: !13755)
!13757 = !{i64 2847225}
!13758 = !DILocation(line: 62, column: 11, scope: !13740, inlinedAt: !13744)
!13759 = !DILocation(line: 102, column: 2, scope: !13760, inlinedAt: !13761)
!13760 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7603, file: !7603, line: 97, type: !3232, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !473)
!13761 = distinct !DILocation(line: 45, column: 2, scope: !13745, inlinedAt: !13747)
!13762 = !DILocation(line: 108, column: 2, scope: !13760, inlinedAt: !13761)
!13763 = !DILocation(line: 112, column: 2, scope: !13760, inlinedAt: !13761)
!13764 = !DILocation(line: 113, column: 2, scope: !13760, inlinedAt: !13761)
!13765 = !DILocation(line: 114, column: 2, scope: !13760, inlinedAt: !13761)
!13766 = !DILocation(line: 116, column: 2, scope: !13760, inlinedAt: !13761)
!13767 = !DILocation(line: 123, column: 13, scope: !13760, inlinedAt: !13761)
!13768 = !DILocation(line: 46, column: 2, scope: !13745, inlinedAt: !13747)
!13769 = !DILocation(line: 47, column: 2, scope: !13745, inlinedAt: !13747)
!13770 = !DILocation(line: 174, column: 12, scope: !13771, inlinedAt: !13772)
!13771 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7603, file: !7603, line: 169, type: !3232, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !473)
!13772 = distinct !DILocation(line: 48, column: 2, scope: !13745, inlinedAt: !13747)
!13773 = !DILocation(line: 179, column: 12, scope: !13771, inlinedAt: !13772)
!13774 = !DILocation(line: 50, column: 2, scope: !13745, inlinedAt: !13747)
!13775 = !DILocation(line: 57, column: 2, scope: !13745, inlinedAt: !13747)
!13776 = !DILocation(line: 518, column: 2, scope: !13735)
!13777 = !DILocation(line: 518, column: 18, scope: !13735)
!13778 = !DILocation(line: 520, column: 2, scope: !13735)
!13779 = !DILocation(line: 523, column: 2, scope: !13735)
!13780 = !DILocation(line: 526, column: 2, scope: !13735)
!13781 = !DILocation(line: 527, column: 2, scope: !13735)
!13782 = !DILocation(line: 543, column: 24, scope: !13735)
!13783 = !DILocation(line: 543, column: 2, scope: !13735)
!13784 = !DILocation(line: 0, scope: !2174)
!13785 = !DILocation(line: 246, column: 15, scope: !2192)
!13786 = !DILocation(line: 246, column: 36, scope: !2191)
!13787 = !DILocation(line: 246, column: 2, scope: !2192)
!13788 = !DILocation(line: 247, column: 37, scope: !2190)
!13789 = !DILocation(line: 0, scope: !2190)
!13790 = !DILocation(line: 248, column: 19, scope: !2190)
!13791 = !DILocation(line: 248, column: 12, scope: !2190)
!13792 = !DILocation(line: 250, column: 11, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !2190, file: !1948, line: 250, column: 7)
!13794 = !DILocation(line: 250, column: 7, scope: !2190)
!13795 = !DILocation(line: 254, column: 11, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13797, file: !1948, line: 254, column: 8)
!13797 = distinct !DILexicalBlock(scope: !13793, file: !1948, line: 250, column: 20)
!13798 = !DILocation(line: 254, column: 8, scope: !13797)
!13799 = !DILocation(line: 255, column: 9, scope: !13800)
!13800 = distinct !DILexicalBlock(scope: !13796, file: !1948, line: 254, column: 17)
!13801 = !DILocation(line: 258, column: 9, scope: !13800)
!13802 = !DILocation(line: 261, column: 28, scope: !13800)
!13803 = !DILocation(line: 261, column: 10, scope: !13800)
!13804 = !DILocation(line: 261, column: 17, scope: !13800)
!13805 = !DILocation(line: 261, column: 26, scope: !13800)
!13806 = !DILocation(line: 262, column: 4, scope: !13800)
!13807 = !DILocation(line: 263, column: 9, scope: !13797)
!13808 = !DILocation(line: 263, column: 16, scope: !13797)
!13809 = !DILocation(line: 263, column: 28, scope: !13797)
!13810 = !DILocation(line: 264, column: 3, scope: !13797)
!13811 = !DILocation(line: 246, column: 60, scope: !2191)
!13812 = distinct !{!13812, !13787, !13813}
!13813 = !DILocation(line: 265, column: 2, scope: !2192)
!13814 = !DILocation(line: 266, column: 1, scope: !2174)
!13815 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !507, file: !507, line: 1814, type: !6843, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13816)
!13816 = !{!13817, !13818}
!13817 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13815, file: !507, line: 1814, type: !742)
!13818 = !DILocalVariable(name: "priority", arg: 2, scope: !13815, file: !507, line: 1814, type: !132)
!13819 = !DILocation(line: 0, scope: !13815)
!13820 = !DILocation(line: 1822, column: 48, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13822, file: !507, line: 1821, column: 3)
!13822 = distinct !DILexicalBlock(scope: !13815, file: !507, line: 1816, column: 7)
!13823 = !DILocation(line: 1822, column: 32, scope: !13821)
!13824 = !DILocation(line: 1822, column: 40, scope: !13821)
!13825 = !DILocation(line: 1822, column: 5, scope: !13821)
!13826 = !DILocation(line: 1822, column: 46, scope: !13821)
!13827 = !DILocation(line: 1824, column: 1, scope: !13815)
!13828 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13746, file: !13746, line: 32, type: !3232, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!13829 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13830, file: !13830, line: 215, type: !13727, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13831)
!13830 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13831 = !{!13832}
!13832 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13829, file: !13830, line: 215, type: !2040)
!13833 = !DILocation(line: 0, scope: !13829)
!13834 = !DILocation(line: 217, column: 21, scope: !13829)
!13835 = !DILocation(line: 217, column: 34, scope: !13829)
!13836 = !DILocation(line: 221, column: 21, scope: !13829)
!13837 = !DILocation(line: 221, column: 34, scope: !13829)
!13838 = !DILocation(line: 223, column: 27, scope: !13829)
!13839 = !DILocation(line: 223, column: 33, scope: !13829)
!13840 = !DILocation(line: 224, column: 27, scope: !13829)
!13841 = !DILocation(line: 224, column: 32, scope: !13829)
!13842 = !DILocation(line: 232, column: 16, scope: !13829)
!13843 = !DILocation(line: 232, column: 30, scope: !13829)
!13844 = !DILocation(line: 239, column: 24, scope: !13829)
!13845 = !DILocation(line: 240, column: 1, scope: !13829)
!13846 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1948, file: !1948, line: 399, type: !13847, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13849)
!13847 = !DISubroutineType(types: !13848)
!13848 = !{!1063}
!13849 = !{!13850}
!13850 = !DILocalVariable(name: "stack_ptr", scope: !13846, file: !1948, line: 401, type: !1063)
!13851 = !DILocation(line: 404, column: 2, scope: !13846)
!13852 = !DILocation(line: 416, column: 24, scope: !13846)
!13853 = !DILocation(line: 418, column: 14, scope: !13846)
!13854 = !DILocation(line: 0, scope: !13846)
!13855 = !DILocation(line: 423, column: 2, scope: !13846)
!13856 = !DILocation(line: 424, column: 2, scope: !13846)
!13857 = !DILocation(line: 426, column: 2, scope: !13846)
!13858 = !DILocation(line: 428, column: 2, scope: !13846)
!13859 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1948, file: !1948, line: 432, type: !13860, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13862)
!13860 = !DISubroutineType(types: !13861)
!13861 = !{null, !1063}
!13862 = !{!13863}
!13863 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13859, file: !1948, line: 432, type: !1063)
!13864 = !DILocation(line: 0, scope: !13859)
!13865 = !DILocation(line: 435, column: 2, scope: !13859)
!13866 = !DILocation(line: 445, column: 2, scope: !13859)
!13867 = distinct !DISubprogram(name: "bg_thread_main", scope: !1948, file: !1948, line: 277, type: !3553, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !13868)
!13868 = !{!13869, !13870, !13871}
!13869 = !DILocalVariable(name: "unused1", arg: 1, scope: !13867, file: !1948, line: 277, type: !102)
!13870 = !DILocalVariable(name: "unused2", arg: 2, scope: !13867, file: !1948, line: 277, type: !102)
!13871 = !DILocalVariable(name: "unused3", arg: 3, scope: !13867, file: !1948, line: 277, type: !102)
!13872 = !DILocation(line: 0, scope: !13867)
!13873 = !DILocation(line: 291, column: 20, scope: !13867)
!13874 = !DILocation(line: 293, column: 2, scope: !13867)
!13875 = !DILocation(line: 297, column: 2, scope: !13867)
!13876 = !DILocation(line: 305, column: 2, scope: !13867)
!13877 = !DILocation(line: 307, column: 2, scope: !13867)
!13878 = !DILocation(line: 330, column: 8, scope: !13867)
!13879 = !DILocation(line: 333, column: 34, scope: !13867)
!13880 = !DILocation(line: 339, column: 1, scope: !13867)
!13881 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2203, file: !2203, line: 45, type: !13882, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !13890)
!13882 = !DISubroutineType(types: !13883)
!13883 = !{null, !13884, !102}
!13884 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !312, line: 103, baseType: !13885)
!13885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13886, size: 32)
!13886 = !DISubroutineType(types: !13887)
!13887 = !{null, !13888, !102}
!13888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13889, size: 32)
!13889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2208)
!13890 = !{!13891, !13892}
!13891 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13881, file: !2203, line: 45, type: !13884)
!13892 = !DILocalVariable(name: "user_data", arg: 2, scope: !13881, file: !2203, line: 45, type: !102)
!13893 = !DILocation(line: 0, scope: !13881)
!13894 = !DILocation(line: 71, column: 1, scope: !13881)
!13895 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2203, file: !2203, line: 73, type: !13882, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !13896)
!13896 = !{!13897, !13898}
!13897 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13895, file: !2203, line: 73, type: !13884)
!13898 = !DILocalVariable(name: "user_data", arg: 2, scope: !13895, file: !2203, line: 73, type: !102)
!13899 = !DILocation(line: 0, scope: !13895)
!13900 = !DILocation(line: 95, column: 1, scope: !13895)
!13901 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2203, file: !2203, line: 97, type: !7604, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !473)
!13902 = !DILocation(line: 1031, column: 3, scope: !13903, inlinedAt: !13906)
!13903 = distinct !DISubprogram(name: "__get_IPSR", scope: !6809, file: !6809, line: 1027, type: !6890, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !13904)
!13904 = !{!13905}
!13905 = !DILocalVariable(name: "result", scope: !13903, file: !6809, line: 1029, type: !132)
!13906 = distinct !DILocation(line: 48, column: 10, scope: !13907, inlinedAt: !13908)
!13907 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7603, file: !7603, line: 46, type: !7604, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !473)
!13908 = distinct !DILocation(line: 99, column: 9, scope: !13901)
!13909 = !{i64 2852876}
!13910 = !DILocation(line: 0, scope: !13903, inlinedAt: !13906)
!13911 = !DILocation(line: 48, column: 9, scope: !13907, inlinedAt: !13908)
!13912 = !DILocation(line: 99, column: 2, scope: !13901)
!13913 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2203, file: !2203, line: 106, type: !3232, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !473)
!13914 = !DILocation(line: 108, column: 2, scope: !13913)
!13915 = !DILocation(line: 108, column: 17, scope: !13913)
!13916 = !DILocation(line: 108, column: 30, scope: !13913)
!13917 = !DILocation(line: 109, column: 1, scope: !13913)
!13918 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2203, file: !2203, line: 116, type: !3232, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !473)
!13919 = !DILocation(line: 118, column: 2, scope: !13918)
!13920 = !DILocation(line: 118, column: 17, scope: !13918)
!13921 = !DILocation(line: 118, column: 30, scope: !13918)
!13922 = !DILocation(line: 119, column: 1, scope: !13918)
!13923 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2203, file: !2203, line: 126, type: !7604, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !473)
!13924 = !DILocation(line: 128, column: 10, scope: !13923)
!13925 = !DILocation(line: 128, column: 25, scope: !13923)
!13926 = !DILocation(line: 128, column: 38, scope: !13923)
!13927 = !DILocation(line: 128, column: 53, scope: !13923)
!13928 = !DILocation(line: 128, column: 2, scope: !13923)
!13929 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2203, file: !2203, line: 187, type: !13930, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !13932)
!13930 = !DISubroutineType(types: !13931)
!13931 = !{!103, !2207, !155}
!13932 = !{!13933, !13934}
!13933 = !DILocalVariable(name: "thread", arg: 1, scope: !13929, file: !2203, line: 187, type: !2207)
!13934 = !DILocalVariable(name: "value", arg: 2, scope: !13929, file: !2203, line: 187, type: !155)
!13935 = !DILocation(line: 0, scope: !13929)
!13936 = !DILocation(line: 206, column: 2, scope: !13929)
!13937 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2203, file: !2203, line: 238, type: !13938, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !13940)
!13938 = !DISubroutineType(types: !13939)
!13939 = !{!155, !2207}
!13940 = !{!13941}
!13941 = !DILocalVariable(name: "thread", arg: 1, scope: !13937, file: !2203, line: 238, type: !2207)
!13942 = !DILocation(line: 0, scope: !13937)
!13943 = !DILocation(line: 244, column: 2, scope: !13937)
!13944 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2203, file: !2203, line: 248, type: !13945, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !13947)
!13945 = !DISubroutineType(types: !13946)
!13946 = !{!103, !2206, !1063, !356}
!13947 = !{!13948, !13949, !13950}
!13948 = !DILocalVariable(name: "thread", arg: 1, scope: !13944, file: !2203, line: 248, type: !2206)
!13949 = !DILocalVariable(name: "buf", arg: 2, scope: !13944, file: !2203, line: 248, type: !1063)
!13950 = !DILocalVariable(name: "size", arg: 3, scope: !13944, file: !2203, line: 248, type: !356)
!13951 = !DILocation(line: 0, scope: !13944)
!13952 = !DILocation(line: 257, column: 2, scope: !13944)
!13953 = !DILocation(line: 0, scope: !2202)
!13954 = !DILocation(line: 281, column: 11, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !2202, file: !2203, line: 281, column: 6)
!13956 = !DILocation(line: 281, column: 20, scope: !13955)
!13957 = !DILocation(line: 275, column: 45, scope: !2202)
!13958 = !DILocation(line: 285, column: 10, scope: !2202)
!13959 = !DILocation(line: 0, scope: !2323)
!13960 = !DILocation(line: 293, column: 39, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !2323, file: !2203, line: 293, column: 2)
!13962 = !DILocation(line: 293, column: 2, scope: !2323)
!13963 = !DILocation(line: 273, column: 14, scope: !2202)
!13964 = !DILocation(line: 309, column: 2, scope: !2202)
!13965 = !DILocation(line: 309, column: 11, scope: !2202)
!13966 = !DILocation(line: 311, column: 2, scope: !2202)
!13967 = !DILocation(line: 293, column: 26, scope: !13961)
!13968 = !DILocation(line: 294, column: 9, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13961, file: !2203, line: 293, column: 54)
!13970 = !DILocation(line: 295, column: 21, scope: !13971)
!13971 = distinct !DILexicalBlock(scope: !13969, file: !2203, line: 295, column: 7)
!13972 = !DILocation(line: 295, column: 28, scope: !13971)
!13973 = !DILocation(line: 295, column: 7, scope: !13969)
!13974 = !DILocation(line: 299, column: 25, scope: !13969)
!13975 = !DILocation(line: 299, column: 41, scope: !13969)
!13976 = !DILocation(line: 300, column: 7, scope: !13969)
!13977 = !DILocation(line: 300, column: 26, scope: !13969)
!13978 = !DILocation(line: 299, column: 10, scope: !13969)
!13979 = !DILocation(line: 299, column: 7, scope: !13969)
!13980 = !DILocation(line: 302, column: 16, scope: !13969)
!13981 = !DILocation(line: 304, column: 20, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13969, file: !2203, line: 304, column: 7)
!13983 = !DILocation(line: 304, column: 7, scope: !13969)
!13984 = !DILocation(line: 305, column: 26, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13982, file: !2203, line: 304, column: 26)
!13986 = !DILocation(line: 305, column: 42, scope: !13985)
!13987 = !DILocation(line: 305, column: 11, scope: !13985)
!13988 = !DILocation(line: 305, column: 8, scope: !13985)
!13989 = !DILocation(line: 306, column: 3, scope: !13985)
!13990 = !DILocation(line: 293, column: 50, scope: !13961)
!13991 = !DILocation(line: 312, column: 1, scope: !2202)
!13992 = distinct !DISubprogram(name: "copy_bytes", scope: !2203, file: !2203, line: 261, type: !13993, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !13995)
!13993 = !DISubroutineType(types: !13994)
!13994 = !{!356, !1063, !356, !155, !356}
!13995 = !{!13996, !13997, !13998, !13999, !14000}
!13996 = !DILocalVariable(name: "dest", arg: 1, scope: !13992, file: !2203, line: 261, type: !1063)
!13997 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13992, file: !2203, line: 261, type: !356)
!13998 = !DILocalVariable(name: "src", arg: 3, scope: !13992, file: !2203, line: 261, type: !155)
!13999 = !DILocalVariable(name: "src_size", arg: 4, scope: !13992, file: !2203, line: 261, type: !356)
!14000 = !DILocalVariable(name: "bytes_to_copy", scope: !13992, file: !2203, line: 263, type: !356)
!14001 = !DILocation(line: 0, scope: !13992)
!14002 = !DILocation(line: 265, column: 18, scope: !13992)
!14003 = !DILocation(line: 266, column: 2, scope: !13992)
!14004 = !DILocation(line: 268, column: 2, scope: !13992)
!14005 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2203, file: !2203, line: 383, type: !14006, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14008)
!14006 = !DISubroutineType(types: !14007)
!14007 = !{null, !2207}
!14008 = !{!14009}
!14009 = !DILocalVariable(name: "thread", arg: 1, scope: !14005, file: !2203, line: 383, type: !2207)
!14010 = !DILocation(line: 0, scope: !14005)
!14011 = !DILocation(line: 387, column: 2, scope: !14005)
!14012 = !DILocation(line: 388, column: 1, scope: !14005)
!14013 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2203, file: !2203, line: 528, type: !14014, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14021)
!14014 = !DISubroutineType(types: !14015)
!14015 = !{!1063, !2207, !14016, !356, !3550, !102, !102, !102, !103, !132, !155}
!14016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14017, size: 32)
!14017 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3551, line: 44, baseType: !14018)
!14018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2155, line: 47, size: 8, elements: !14019)
!14019 = !{!14020}
!14020 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14018, file: !2155, line: 48, baseType: !108, size: 8)
!14021 = !{!14022, !14023, !14024, !14025, !14026, !14027, !14028, !14029, !14030, !14031, !14032}
!14022 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14013, file: !2203, line: 528, type: !2207)
!14023 = !DILocalVariable(name: "stack", arg: 2, scope: !14013, file: !2203, line: 529, type: !14016)
!14024 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14013, file: !2203, line: 529, type: !356)
!14025 = !DILocalVariable(name: "entry", arg: 4, scope: !14013, file: !2203, line: 530, type: !3550)
!14026 = !DILocalVariable(name: "p1", arg: 5, scope: !14013, file: !2203, line: 531, type: !102)
!14027 = !DILocalVariable(name: "p2", arg: 6, scope: !14013, file: !2203, line: 531, type: !102)
!14028 = !DILocalVariable(name: "p3", arg: 7, scope: !14013, file: !2203, line: 531, type: !102)
!14029 = !DILocalVariable(name: "prio", arg: 8, scope: !14013, file: !2203, line: 532, type: !103)
!14030 = !DILocalVariable(name: "options", arg: 9, scope: !14013, file: !2203, line: 532, type: !132)
!14031 = !DILocalVariable(name: "name", arg: 10, scope: !14013, file: !2203, line: 532, type: !155)
!14032 = !DILocalVariable(name: "stack_ptr", scope: !14013, file: !2203, line: 534, type: !1063)
!14033 = !DILocation(line: 0, scope: !14013)
!14034 = !DILocation(line: 550, column: 28, scope: !14013)
!14035 = !DILocation(line: 550, column: 2, scope: !14013)
!14036 = !DILocation(line: 553, column: 34, scope: !14013)
!14037 = !DILocation(line: 553, column: 2, scope: !14013)
!14038 = !DILocation(line: 554, column: 14, scope: !14013)
!14039 = !DILocation(line: 564, column: 2, scope: !14013)
!14040 = !DILocation(line: 567, column: 14, scope: !14013)
!14041 = !DILocation(line: 567, column: 24, scope: !14013)
!14042 = !DILocation(line: 612, column: 7, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14013, file: !2203, line: 612, column: 6)
!14044 = !DILocation(line: 612, column: 6, scope: !14013)
!14045 = !DILocation(line: 627, column: 40, scope: !14013)
!14046 = !DILocation(line: 637, column: 2, scope: !14013)
!14047 = !DILocation(line: 613, column: 15, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14043, file: !2203, line: 612, column: 17)
!14049 = !DILocation(line: 613, column: 29, scope: !14048)
!14050 = !DILocation(line: 638, column: 1, scope: !14013)
!14051 = distinct !DISubprogram(name: "z_waitq_init", scope: !14052, file: !14052, line: 47, type: !14053, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14055)
!14052 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14053 = !DISubroutineType(types: !14054)
!14054 = !{null, !2238}
!14055 = !{!14056}
!14056 = !DILocalVariable(name: "w", arg: 1, scope: !14051, file: !14052, line: 47, type: !2238)
!14057 = !DILocation(line: 0, scope: !14051)
!14058 = !DILocation(line: 49, column: 21, scope: !14051)
!14059 = !DILocation(line: 49, column: 2, scope: !14051)
!14060 = !DILocation(line: 50, column: 1, scope: !14051)
!14061 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2203, file: !2203, line: 791, type: !14062, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14065)
!14062 = !DISubroutineType(types: !14063)
!14063 = !{null, !14064, !103, !132, !32}
!14064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 32)
!14065 = !{!14066, !14067, !14068, !14069}
!14066 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14061, file: !2203, line: 791, type: !14064)
!14067 = !DILocalVariable(name: "priority", arg: 2, scope: !14061, file: !2203, line: 791, type: !103)
!14068 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14061, file: !2203, line: 792, type: !132)
!14069 = !DILocalVariable(name: "options", arg: 4, scope: !14061, file: !2203, line: 792, type: !32)
!14070 = !DILocation(line: 0, scope: !14061)
!14071 = !DILocation(line: 795, column: 15, scope: !14061)
!14072 = !DILocation(line: 795, column: 25, scope: !14061)
!14073 = !DILocation(line: 796, column: 30, scope: !14061)
!14074 = !DILocation(line: 796, column: 15, scope: !14061)
!14075 = !DILocation(line: 796, column: 28, scope: !14061)
!14076 = !DILocation(line: 797, column: 30, scope: !14061)
!14077 = !DILocation(line: 797, column: 15, scope: !14061)
!14078 = !DILocation(line: 797, column: 28, scope: !14061)
!14079 = !DILocation(line: 799, column: 22, scope: !14061)
!14080 = !DILocation(line: 799, column: 15, scope: !14061)
!14081 = !DILocation(line: 799, column: 20, scope: !14061)
!14082 = !DILocation(line: 801, column: 15, scope: !14061)
!14083 = !DILocation(line: 801, column: 28, scope: !14061)
!14084 = !DILocation(line: 814, column: 2, scope: !14061)
!14085 = !DILocation(line: 815, column: 1, scope: !14061)
!14086 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2203, file: !2203, line: 449, type: !14087, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14089)
!14087 = !DISubroutineType(types: !14088)
!14088 = !{!1063, !2207, !14016, !356}
!14089 = !{!14090, !14091, !14092, !14093, !14094, !14095, !14096, !14097}
!14090 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14086, file: !2203, line: 449, type: !2207)
!14091 = !DILocalVariable(name: "stack", arg: 2, scope: !14086, file: !2203, line: 450, type: !14016)
!14092 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14086, file: !2203, line: 450, type: !356)
!14093 = !DILocalVariable(name: "stack_obj_size", scope: !14086, file: !2203, line: 452, type: !356)
!14094 = !DILocalVariable(name: "stack_buf_size", scope: !14086, file: !2203, line: 452, type: !356)
!14095 = !DILocalVariable(name: "stack_ptr", scope: !14086, file: !2203, line: 453, type: !1063)
!14096 = !DILocalVariable(name: "stack_buf_start", scope: !14086, file: !2203, line: 453, type: !1063)
!14097 = !DILocalVariable(name: "delta", scope: !14086, file: !2203, line: 454, type: !356)
!14098 = !DILocation(line: 0, scope: !14086)
!14099 = !DILocation(line: 465, column: 20, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !14086, file: !2203, line: 463, column: 2)
!14101 = !DILocation(line: 466, column: 21, scope: !14100)
!14102 = !DILocation(line: 473, column: 28, scope: !14086)
!14103 = !DILocation(line: 514, column: 33, scope: !14086)
!14104 = !DILocation(line: 514, column: 25, scope: !14086)
!14105 = !DILocation(line: 514, column: 31, scope: !14086)
!14106 = !DILocation(line: 515, column: 25, scope: !14086)
!14107 = !DILocation(line: 515, column: 30, scope: !14086)
!14108 = !DILocation(line: 516, column: 25, scope: !14086)
!14109 = !DILocation(line: 516, column: 31, scope: !14086)
!14110 = !DILocation(line: 520, column: 2, scope: !14086)
!14111 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2155, file: !2155, line: 331, type: !14112, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14114)
!14112 = !DISubroutineType(types: !14113)
!14113 = !{!1063, !14016}
!14114 = !{!14115}
!14115 = !DILocalVariable(name: "sym", arg: 1, scope: !14111, file: !2155, line: 331, type: !14016)
!14116 = !DILocation(line: 0, scope: !14111)
!14117 = !DILocation(line: 333, column: 21, scope: !14111)
!14118 = !DILocation(line: 333, column: 2, scope: !14111)
!14119 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14120, file: !14120, line: 40, type: !14121, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14123)
!14120 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14121 = !DISubroutineType(types: !14122)
!14122 = !{null, !14064}
!14123 = !{!14124}
!14124 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14119, file: !14120, line: 40, type: !14064)
!14125 = !DILocation(line: 0, scope: !14119)
!14126 = !DILocation(line: 42, column: 31, scope: !14119)
!14127 = !DILocation(line: 42, column: 2, scope: !14119)
!14128 = !DILocation(line: 43, column: 1, scope: !14119)
!14129 = distinct !DISubprogram(name: "z_init_timeout", scope: !14120, file: !14120, line: 25, type: !2264, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14130)
!14130 = !{!14131}
!14131 = !DILocalVariable(name: "to", arg: 1, scope: !14129, file: !14120, line: 25, type: !2266)
!14132 = !DILocation(line: 0, scope: !14129)
!14133 = !DILocation(line: 27, column: 22, scope: !14129)
!14134 = !DILocation(line: 27, column: 2, scope: !14129)
!14135 = !DILocation(line: 28, column: 1, scope: !14129)
!14136 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !14137, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14139)
!14137 = !DISubroutineType(types: !14138)
!14138 = !{null, !2310}
!14139 = !{!14140}
!14140 = !DILocalVariable(name: "node", arg: 1, scope: !14136, file: !321, line: 211, type: !2310)
!14141 = !DILocation(line: 0, scope: !14136)
!14142 = !DILocation(line: 213, column: 8, scope: !14136)
!14143 = !DILocation(line: 213, column: 13, scope: !14136)
!14144 = !DILocation(line: 214, column: 8, scope: !14136)
!14145 = !DILocation(line: 214, column: 13, scope: !14136)
!14146 = !DILocation(line: 215, column: 1, scope: !14136)
!14147 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !14148, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14151)
!14148 = !DISubroutineType(types: !14149)
!14149 = !{null, !14150}
!14150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!14151 = !{!14152}
!14152 = !DILocalVariable(name: "list", arg: 1, scope: !14147, file: !321, line: 197, type: !14150)
!14153 = !DILocation(line: 0, scope: !14147)
!14154 = !DILocation(line: 199, column: 8, scope: !14147)
!14155 = !DILocation(line: 199, column: 13, scope: !14147)
!14156 = !DILocation(line: 200, column: 8, scope: !14147)
!14157 = !DILocation(line: 200, column: 13, scope: !14147)
!14158 = !DILocation(line: 201, column: 1, scope: !14147)
!14159 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2203, file: !2203, line: 641, type: !14160, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14166)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{!2206, !2207, !14016, !356, !3550, !102, !102, !102, !103, !132, !14162}
!14162 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1689, line: 67, baseType: !14163)
!14163 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1689, line: 65, size: 64, elements: !14164)
!14164 = !{!14165}
!14165 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14163, file: !1689, line: 66, baseType: !1688, size: 64)
!14166 = !{!14167, !14168, !14169, !14170, !14171, !14172, !14173, !14174, !14175, !14176}
!14167 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14159, file: !2203, line: 641, type: !2207)
!14168 = !DILocalVariable(name: "stack", arg: 2, scope: !14159, file: !2203, line: 642, type: !14016)
!14169 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14159, file: !2203, line: 643, type: !356)
!14170 = !DILocalVariable(name: "entry", arg: 4, scope: !14159, file: !2203, line: 643, type: !3550)
!14171 = !DILocalVariable(name: "p1", arg: 5, scope: !14159, file: !2203, line: 644, type: !102)
!14172 = !DILocalVariable(name: "p2", arg: 6, scope: !14159, file: !2203, line: 644, type: !102)
!14173 = !DILocalVariable(name: "p3", arg: 7, scope: !14159, file: !2203, line: 644, type: !102)
!14174 = !DILocalVariable(name: "prio", arg: 8, scope: !14159, file: !2203, line: 645, type: !103)
!14175 = !DILocalVariable(name: "options", arg: 9, scope: !14159, file: !2203, line: 645, type: !132)
!14176 = !DILocalVariable(name: "delay", arg: 10, scope: !14159, file: !2203, line: 645, type: !14162)
!14177 = !DILocation(line: 0, scope: !14159)
!14178 = !DILocation(line: 649, column: 2, scope: !14159)
!14179 = !DILocation(line: 652, column: 7, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14159, file: !2203, line: 652, column: 6)
!14181 = !DILocation(line: 652, column: 6, scope: !14159)
!14182 = !DILocation(line: 653, column: 3, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14180, file: !2203, line: 652, column: 39)
!14184 = !DILocation(line: 654, column: 2, scope: !14183)
!14185 = !DILocation(line: 656, column: 2, scope: !14159)
!14186 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2203, file: !2203, line: 401, type: !14187, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14189)
!14187 = !DISubroutineType(types: !14188)
!14188 = !{null, !2207, !14162}
!14189 = !{!14190, !14191}
!14190 = !DILocalVariable(name: "thread", arg: 1, scope: !14186, file: !2203, line: 401, type: !2207)
!14191 = !DILocalVariable(name: "delay", arg: 2, scope: !14186, file: !2203, line: 401, type: !14162)
!14192 = !DILocation(line: 0, scope: !14186)
!14193 = !DILocation(line: 404, column: 6, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14186, file: !2203, line: 404, column: 6)
!14195 = !DILocation(line: 404, column: 6, scope: !14186)
!14196 = !DILocation(line: 405, column: 3, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14194, file: !2203, line: 404, column: 38)
!14198 = !DILocation(line: 406, column: 2, scope: !14197)
!14199 = !DILocation(line: 407, column: 3, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14194, file: !2203, line: 406, column: 9)
!14201 = !DILocation(line: 413, column: 1, scope: !14186)
!14202 = distinct !DISubprogram(name: "k_thread_start", scope: !3672, file: !3672, line: 205, type: !14203, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14205)
!14203 = !DISubroutineType(types: !14204)
!14204 = !{null, !2206}
!14205 = !{!14206}
!14206 = !DILocalVariable(name: "thread", arg: 1, scope: !14202, file: !3672, line: 205, type: !2206)
!14207 = !DILocation(line: 0, scope: !14202)
!14208 = !DILocation(line: 214, column: 2, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14202, file: !3672, line: 214, column: 2)
!14210 = !{i64 2154090245}
!14211 = !DILocation(line: 215, column: 2, scope: !14202)
!14212 = !DILocation(line: 216, column: 1, scope: !14202)
!14213 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14120, file: !14120, line: 47, type: !14187, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14214)
!14214 = !{!14215, !14216}
!14215 = !DILocalVariable(name: "thread", arg: 1, scope: !14213, file: !14120, line: 47, type: !2207)
!14216 = !DILocalVariable(name: "ticks", arg: 2, scope: !14213, file: !14120, line: 47, type: !14162)
!14217 = !DILocation(line: 0, scope: !14213)
!14218 = !DILocation(line: 49, column: 30, scope: !14213)
!14219 = !DILocation(line: 49, column: 2, scope: !14213)
!14220 = !DILocation(line: 50, column: 1, scope: !14213)
!14221 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2203, file: !2203, line: 748, type: !3232, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14222)
!14222 = !{!14223, !14241}
!14223 = !DILocalVariable(name: "thread_data", scope: !14224, file: !2203, line: 750, type: !14225)
!14224 = distinct !DILexicalBlock(scope: !14221, file: !2203, line: 750, column: 2)
!14225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14226, size: 32)
!14226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !312, line: 620, size: 384, elements: !14227)
!14227 = !{!14228, !14229, !14230, !14231, !14232, !14233, !14234, !14235, !14236, !14237, !14238, !14240}
!14228 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14226, file: !312, line: 621, baseType: !2207, size: 32)
!14229 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14226, file: !312, line: 622, baseType: !14016, size: 32, offset: 32)
!14230 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14226, file: !312, line: 623, baseType: !32, size: 32, offset: 64)
!14231 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14226, file: !312, line: 624, baseType: !3550, size: 32, offset: 96)
!14232 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14226, file: !312, line: 625, baseType: !102, size: 32, offset: 128)
!14233 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14226, file: !312, line: 626, baseType: !102, size: 32, offset: 160)
!14234 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14226, file: !312, line: 627, baseType: !102, size: 32, offset: 192)
!14235 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14226, file: !312, line: 628, baseType: !103, size: 32, offset: 224)
!14236 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14226, file: !312, line: 629, baseType: !132, size: 32, offset: 256)
!14237 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14226, file: !312, line: 630, baseType: !344, size: 32, offset: 288)
!14238 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14226, file: !312, line: 631, baseType: !14239, size: 32, offset: 320)
!14239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 32)
!14240 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14226, file: !312, line: 632, baseType: !155, size: 32, offset: 352)
!14241 = !DILocalVariable(name: "thread_data", scope: !14242, file: !2203, line: 781, type: !14225)
!14242 = distinct !DILexicalBlock(scope: !14221, file: !2203, line: 781, column: 2)
!14243 = !DILocation(line: 0, scope: !14224)
!14244 = !DILocation(line: 750, column: 2, scope: !14224)
!14245 = !DILocation(line: 780, column: 2, scope: !14221)
!14246 = !DILocation(line: 0, scope: !14242)
!14247 = !DILocation(line: 781, column: 2, scope: !14242)
!14248 = !DILocation(line: 752, column: 17, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14250, file: !2203, line: 750, column: 38)
!14250 = distinct !DILexicalBlock(scope: !14224, file: !2203, line: 750, column: 2)
!14251 = !DILocation(line: 753, column: 17, scope: !14249)
!14252 = !DILocation(line: 754, column: 17, scope: !14249)
!14253 = !DILocation(line: 755, column: 17, scope: !14249)
!14254 = !DILocation(line: 756, column: 17, scope: !14249)
!14255 = !DILocation(line: 757, column: 17, scope: !14249)
!14256 = !DILocation(line: 758, column: 17, scope: !14249)
!14257 = !DILocation(line: 759, column: 17, scope: !14249)
!14258 = !DILocation(line: 760, column: 17, scope: !14249)
!14259 = !DILocation(line: 751, column: 3, scope: !14249)
!14260 = !DILocation(line: 763, column: 16, scope: !14249)
!14261 = !DILocation(line: 763, column: 29, scope: !14249)
!14262 = !DILocation(line: 763, column: 39, scope: !14249)
!14263 = !DILocation(line: 750, column: 2, scope: !14250)
!14264 = !DILocation(line: 750, column: 2, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14250, file: !2203, line: 750, column: 2)
!14266 = distinct !{!14266, !14244, !14267}
!14267 = !DILocation(line: 764, column: 2, scope: !14224)
!14268 = !DILocation(line: 787, column: 2, scope: !14221)
!14269 = !DILocation(line: 788, column: 1, scope: !14221)
!14270 = !DILocation(line: 782, column: 20, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14272, file: !2203, line: 782, column: 7)
!14272 = distinct !DILexicalBlock(scope: !14273, file: !2203, line: 781, column: 38)
!14273 = distinct !DILexicalBlock(scope: !14242, file: !2203, line: 781, column: 2)
!14274 = !DILocation(line: 782, column: 31, scope: !14271)
!14275 = !DILocation(line: 782, column: 7, scope: !14272)
!14276 = !DILocation(line: 783, column: 37, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14271, file: !2203, line: 782, column: 51)
!14278 = !DILocation(line: 784, column: 10, scope: !14277)
!14279 = !DILocation(line: 783, column: 4, scope: !14277)
!14280 = !DILocation(line: 785, column: 3, scope: !14277)
!14281 = !DILocation(line: 781, column: 2, scope: !14273)
!14282 = !DILocation(line: 781, column: 2, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14273, file: !2203, line: 781, column: 2)
!14284 = distinct !{!14284, !14247, !14285}
!14285 = !DILocation(line: 786, column: 2, scope: !14242)
!14286 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5989, file: !5989, line: 403, type: !5990, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14287)
!14287 = !{!14288}
!14288 = !DILocalVariable(name: "t", arg: 1, scope: !14286, file: !5989, line: 403, type: !1585)
!14289 = !DILocation(line: 0, scope: !14286)
!14290 = !DILocalVariable(name: "t", arg: 1, scope: !14291, file: !5989, line: 102, type: !1585)
!14291 = distinct !DISubprogram(name: "z_tmcvt", scope: !5989, file: !5989, line: 102, type: !5997, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14292)
!14292 = !{!14290, !14293, !14294, !14295, !14296, !14297, !14298, !14299, !14300, !14301, !14302}
!14293 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14291, file: !5989, line: 102, type: !132)
!14294 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14291, file: !5989, line: 103, type: !132)
!14295 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14291, file: !5989, line: 103, type: !166)
!14296 = !DILocalVariable(name: "result32", arg: 5, scope: !14291, file: !5989, line: 104, type: !166)
!14297 = !DILocalVariable(name: "round_up", arg: 6, scope: !14291, file: !5989, line: 104, type: !166)
!14298 = !DILocalVariable(name: "round_off", arg: 7, scope: !14291, file: !5989, line: 105, type: !166)
!14299 = !DILocalVariable(name: "mul_ratio", scope: !14291, file: !5989, line: 107, type: !166)
!14300 = !DILocalVariable(name: "div_ratio", scope: !14291, file: !5989, line: 109, type: !166)
!14301 = !DILocalVariable(name: "off", scope: !14291, file: !5989, line: 116, type: !1585)
!14302 = !DILocalVariable(name: "rdivisor", scope: !14303, file: !5989, line: 119, type: !132)
!14303 = distinct !DILexicalBlock(scope: !14304, file: !5989, line: 118, column: 18)
!14304 = distinct !DILexicalBlock(scope: !14291, file: !5989, line: 118, column: 6)
!14305 = !DILocation(line: 0, scope: !14291, inlinedAt: !14306)
!14306 = distinct !DILocation(line: 406, column: 9, scope: !14286)
!14307 = !DILocation(line: 145, column: 13, scope: !14308, inlinedAt: !14306)
!14308 = distinct !DILexicalBlock(scope: !14309, file: !5989, line: 144, column: 10)
!14309 = distinct !DILexicalBlock(scope: !14310, file: !5989, line: 142, column: 7)
!14310 = distinct !DILexicalBlock(scope: !14311, file: !5989, line: 141, column: 24)
!14311 = distinct !DILexicalBlock(scope: !14312, file: !5989, line: 141, column: 13)
!14312 = distinct !DILexicalBlock(scope: !14291, file: !5989, line: 134, column: 6)
!14313 = !DILocation(line: 406, column: 2, scope: !14286)
!14314 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2203, file: !2203, line: 817, type: !3548, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14315)
!14315 = !{!14316, !14317, !14318, !14319}
!14316 = !DILocalVariable(name: "entry", arg: 1, scope: !14314, file: !2203, line: 817, type: !3550)
!14317 = !DILocalVariable(name: "p1", arg: 2, scope: !14314, file: !2203, line: 818, type: !102)
!14318 = !DILocalVariable(name: "p2", arg: 3, scope: !14314, file: !2203, line: 818, type: !102)
!14319 = !DILocalVariable(name: "p3", arg: 4, scope: !14314, file: !2203, line: 818, type: !102)
!14320 = !DILocation(line: 0, scope: !14314)
!14321 = !DILocation(line: 822, column: 2, scope: !14314)
!14322 = !DILocation(line: 822, column: 17, scope: !14314)
!14323 = !DILocation(line: 822, column: 30, scope: !14314)
!14324 = !DILocation(line: 823, column: 2, scope: !14314)
!14325 = !DILocation(line: 845, column: 2, scope: !14314)
!14326 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2203, file: !2203, line: 888, type: !14327, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14329)
!14327 = !DISubroutineType(types: !14328)
!14328 = !{!103, !2207}
!14329 = !{!14330}
!14330 = !DILocalVariable(name: "thread", arg: 1, scope: !14326, file: !2203, line: 888, type: !2207)
!14331 = !DILocation(line: 0, scope: !14326)
!14332 = !DILocation(line: 893, column: 2, scope: !14326)
!14333 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2203, file: !2203, line: 897, type: !14334, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14336)
!14334 = !DISubroutineType(types: !14335)
!14335 = !{!103, !2207, !32}
!14336 = !{!14337, !14338}
!14337 = !DILocalVariable(name: "thread", arg: 1, scope: !14333, file: !2203, line: 897, type: !2207)
!14338 = !DILocalVariable(name: "options", arg: 2, scope: !14333, file: !2203, line: 897, type: !32)
!14339 = !DILocation(line: 0, scope: !14333)
!14340 = !DILocation(line: 902, column: 2, scope: !14333)
!14341 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2203, file: !2203, line: 1072, type: !14342, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14347)
!14342 = !DISubroutineType(types: !14343)
!14343 = !{!103, !2206, !14344}
!14344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14345, size: 32)
!14345 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !367, line: 234, baseType: !14346)
!14346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !367, line: 192, elements: !473)
!14347 = !{!14348, !14349}
!14348 = !DILocalVariable(name: "thread", arg: 1, scope: !14341, file: !2203, line: 1072, type: !2206)
!14349 = !DILocalVariable(name: "stats", arg: 2, scope: !14341, file: !2203, line: 1073, type: !14344)
!14350 = !DILocation(line: 0, scope: !14341)
!14351 = !DILocation(line: 1075, column: 14, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14341, file: !2203, line: 1075, column: 6)
!14353 = !DILocation(line: 1075, column: 23, scope: !14352)
!14354 = !DILocation(line: 1086, column: 1, scope: !14341)
!14355 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2203, file: !2203, line: 1088, type: !14356, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2307, retainedNodes: !14358)
!14356 = !DISubroutineType(types: !14357)
!14357 = !{!103, !14344}
!14358 = !{!14359}
!14359 = !DILocalVariable(name: "stats", arg: 1, scope: !14355, file: !2203, line: 1088, type: !14344)
!14360 = !DILocation(line: 0, scope: !14355)
!14361 = !DILocation(line: 1094, column: 12, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14355, file: !2203, line: 1094, column: 6)
!14363 = !DILocation(line: 1120, column: 1, scope: !14355)
!14364 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14365, file: !14365, line: 20, type: !3232, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3213, retainedNodes: !473)
!14365 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14366 = !DILocation(line: 30, column: 2, scope: !14364)
!14367 = !DILocation(line: 31, column: 1, scope: !14364)
!14368 = distinct !DISubprogram(name: "idle", scope: !14365, file: !14365, line: 33, type: !3553, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3213, retainedNodes: !14369)
!14369 = !{!14370, !14371, !14372}
!14370 = !DILocalVariable(name: "unused1", arg: 1, scope: !14368, file: !14365, line: 33, type: !102)
!14371 = !DILocalVariable(name: "unused2", arg: 2, scope: !14368, file: !14365, line: 33, type: !102)
!14372 = !DILocalVariable(name: "unused3", arg: 3, scope: !14368, file: !14365, line: 33, type: !102)
!14373 = !DILocation(line: 0, scope: !14368)
!14374 = !DILocation(line: 41, column: 2, scope: !14368)
!14375 = !DILocation(line: 55, column: 2, scope: !14376, inlinedAt: !14380)
!14376 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5789, file: !5789, line: 42, type: !5790, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3213, retainedNodes: !14377)
!14377 = !{!14378, !14379}
!14378 = !DILocalVariable(name: "key", scope: !14376, file: !5789, line: 44, type: !32)
!14379 = !DILocalVariable(name: "tmp", scope: !14376, file: !5789, line: 53, type: !32)
!14380 = distinct !DILocation(line: 62, column: 10, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14368, file: !14365, line: 41, column: 15)
!14382 = !{i64 1948323}
!14383 = !DILocation(line: 0, scope: !14376, inlinedAt: !14380)
!14384 = !DILocation(line: 86, column: 3, scope: !14381)
!14385 = distinct !{!14385, !14374, !14386}
!14386 = !DILocation(line: 105, column: 2, scope: !14368)
!14387 = distinct !DISubprogram(name: "k_cpu_idle", scope: !312, file: !312, line: 5627, type: !3232, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3213, retainedNodes: !473)
!14388 = !DILocation(line: 5629, column: 2, scope: !14387)
!14389 = !DILocation(line: 5630, column: 1, scope: !14387)
!14390 = !DISubprogram(name: "arch_cpu_idle", scope: !3551, file: !3551, line: 167, type: !3232, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!14391 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2346, file: !2346, line: 41, type: !14392, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14405)
!14392 = !DISubroutineType(types: !14393)
!14393 = !{!103, !14394, !32, !32}
!14394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14395, size: 32)
!14395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !312, line: 2909, size: 128, elements: !14396)
!14396 = !{!14397, !14403, !14404}
!14397 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14395, file: !312, line: 2910, baseType: !14398, size: 64)
!14398 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !14399)
!14399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !14400)
!14400 = !{!14401}
!14401 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14399, file: !316, line: 232, baseType: !14402, size: 64)
!14402 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2332)
!14403 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14395, file: !312, line: 2911, baseType: !32, size: 32, offset: 64)
!14404 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !14395, file: !312, line: 2912, baseType: !32, size: 32, offset: 96)
!14405 = !{!14406, !14407, !14408}
!14406 = !DILocalVariable(name: "sem", arg: 1, scope: !14391, file: !2346, line: 41, type: !14394)
!14407 = !DILocalVariable(name: "initial_count", arg: 2, scope: !14391, file: !2346, line: 41, type: !32)
!14408 = !DILocalVariable(name: "limit", arg: 3, scope: !14391, file: !2346, line: 42, type: !32)
!14409 = !DILocation(line: 0, scope: !14391)
!14410 = !DILocation(line: 47, column: 2, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14391, file: !2346, line: 47, column: 2)
!14412 = !DILocation(line: 53, column: 7, scope: !14391)
!14413 = !DILocation(line: 53, column: 13, scope: !14391)
!14414 = !DILocation(line: 54, column: 7, scope: !14391)
!14415 = !DILocation(line: 54, column: 13, scope: !14391)
!14416 = !DILocation(line: 58, column: 21, scope: !14391)
!14417 = !DILocation(line: 58, column: 2, scope: !14391)
!14418 = !DILocation(line: 64, column: 2, scope: !14391)
!14419 = !DILocation(line: 65, column: 1, scope: !14391)
!14420 = distinct !DISubprogram(name: "z_waitq_init", scope: !14052, file: !14052, line: 47, type: !14421, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14424)
!14421 = !DISubroutineType(types: !14422)
!14422 = !{null, !14423}
!14423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14398, size: 32)
!14424 = !{!14425}
!14425 = !DILocalVariable(name: "w", arg: 1, scope: !14420, file: !14052, line: 47, type: !14423)
!14426 = !DILocation(line: 0, scope: !14420)
!14427 = !DILocation(line: 49, column: 21, scope: !14420)
!14428 = !DILocation(line: 49, column: 2, scope: !14420)
!14429 = !DILocation(line: 50, column: 1, scope: !14420)
!14430 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !14431, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14434)
!14431 = !DISubroutineType(types: !14432)
!14432 = !{null, !14433}
!14433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14402, size: 32)
!14434 = !{!14435}
!14435 = !DILocalVariable(name: "list", arg: 1, scope: !14430, file: !321, line: 197, type: !14433)
!14436 = !DILocation(line: 0, scope: !14430)
!14437 = !DILocation(line: 199, column: 8, scope: !14430)
!14438 = !DILocation(line: 199, column: 13, scope: !14430)
!14439 = !DILocation(line: 200, column: 8, scope: !14430)
!14440 = !DILocation(line: 200, column: 13, scope: !14430)
!14441 = !DILocation(line: 201, column: 1, scope: !14430)
!14442 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2346, file: !2346, line: 86, type: !14443, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14445)
!14443 = !DISubroutineType(types: !14444)
!14444 = !{null, !14394}
!14445 = !{!14446, !14447, !14452}
!14446 = !DILocalVariable(name: "sem", arg: 1, scope: !14442, file: !2346, line: 86, type: !14394)
!14447 = !DILocalVariable(name: "key", scope: !14442, file: !2346, line: 88, type: !14448)
!14448 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !14449)
!14449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !14450)
!14450 = !{!14451}
!14451 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14449, file: !472, line: 33, baseType: !103, size: 32)
!14452 = !DILocalVariable(name: "thread", scope: !14442, file: !2346, line: 89, type: !14453)
!14453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14454, size: 32)
!14454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !367, line: 245, size: 1024, elements: !14455)
!14455 = !{!14456, !14494, !14506, !14507, !14508, !14509, !14515, !14527}
!14456 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14454, file: !367, line: 247, baseType: !14457, size: 384)
!14457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !367, line: 57, size: 384, elements: !14458)
!14458 = !{!14459, !14469, !14470, !14471, !14472, !14481, !14482, !14483}
!14459 = !DIDerivedType(tag: DW_TAG_member, scope: !14457, file: !367, line: 60, baseType: !14460, size: 64)
!14460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14457, file: !367, line: 60, size: 64, elements: !14461)
!14461 = !{!14462, !14463}
!14462 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14460, file: !367, line: 61, baseType: !2331, size: 64)
!14463 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14460, file: !367, line: 62, baseType: !14464, size: 64)
!14464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !392, line: 49, size: 64, elements: !14465)
!14465 = !{!14466}
!14466 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14464, file: !392, line: 50, baseType: !14467, size: 64)
!14467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14468, size: 64, elements: !397)
!14468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14464, size: 32)
!14469 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14457, file: !367, line: 68, baseType: !14423, size: 32, offset: 64)
!14470 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14457, file: !367, line: 71, baseType: !163, size: 8, offset: 96)
!14471 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14457, file: !367, line: 74, baseType: !163, size: 8, offset: 104)
!14472 = !DIDerivedType(tag: DW_TAG_member, scope: !14457, file: !367, line: 90, baseType: !14473, size: 16, offset: 112)
!14473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14457, file: !367, line: 90, size: 16, elements: !14474)
!14474 = !{!14475, !14480}
!14475 = !DIDerivedType(tag: DW_TAG_member, scope: !14473, file: !367, line: 91, baseType: !14476, size: 16)
!14476 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14473, file: !367, line: 91, size: 16, elements: !14477)
!14477 = !{!14478, !14479}
!14478 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14476, file: !367, line: 96, baseType: !415, size: 8)
!14479 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14476, file: !367, line: 97, baseType: !163, size: 8, offset: 8)
!14480 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14473, file: !367, line: 100, baseType: !340, size: 16)
!14481 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14457, file: !367, line: 107, baseType: !132, size: 32, offset: 128)
!14482 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14457, file: !367, line: 127, baseType: !102, size: 32, offset: 160)
!14483 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14457, file: !367, line: 131, baseType: !14484, size: 192, offset: 192)
!14484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !316, line: 244, size: 192, elements: !14485)
!14485 = !{!14486, !14487, !14493}
!14486 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14484, file: !316, line: 245, baseType: !2331, size: 64)
!14487 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14484, file: !316, line: 246, baseType: !14488, size: 32, offset: 64)
!14488 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !316, line: 242, baseType: !14489)
!14489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14490, size: 32)
!14490 = !DISubroutineType(types: !14491)
!14491 = !{null, !14492}
!14492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14484, size: 32)
!14493 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14484, file: !316, line: 249, baseType: !432, size: 64, offset: 128)
!14494 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14454, file: !367, line: 250, baseType: !14495, size: 288, offset: 384)
!14495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !436, line: 25, size: 288, elements: !14496)
!14496 = !{!14497, !14498, !14499, !14500, !14501, !14502, !14503, !14504, !14505}
!14497 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14495, file: !436, line: 26, baseType: !132, size: 32)
!14498 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14495, file: !436, line: 27, baseType: !132, size: 32, offset: 32)
!14499 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14495, file: !436, line: 28, baseType: !132, size: 32, offset: 64)
!14500 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14495, file: !436, line: 29, baseType: !132, size: 32, offset: 96)
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14495, file: !436, line: 30, baseType: !132, size: 32, offset: 128)
!14502 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14495, file: !436, line: 31, baseType: !132, size: 32, offset: 160)
!14503 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14495, file: !436, line: 32, baseType: !132, size: 32, offset: 192)
!14504 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14495, file: !436, line: 33, baseType: !132, size: 32, offset: 224)
!14505 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14495, file: !436, line: 34, baseType: !132, size: 32, offset: 256)
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14454, file: !367, line: 253, baseType: !102, size: 32, offset: 672)
!14507 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14454, file: !367, line: 256, baseType: !14398, size: 64, offset: 704)
!14508 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14454, file: !367, line: 294, baseType: !103, size: 32, offset: 768)
!14509 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14454, file: !367, line: 300, baseType: !14510, size: 96, offset: 800)
!14510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !367, line: 149, size: 96, elements: !14511)
!14511 = !{!14512, !14513, !14514}
!14512 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14510, file: !367, line: 153, baseType: !22, size: 32)
!14513 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14510, file: !367, line: 162, baseType: !356, size: 32, offset: 32)
!14514 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14510, file: !367, line: 168, baseType: !356, size: 32, offset: 64)
!14515 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14454, file: !367, line: 325, baseType: !14516, size: 32, offset: 896)
!14516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14517, size: 32)
!14517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !14518)
!14518 = !{!14519, !14525, !14526}
!14519 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14517, file: !312, line: 5074, baseType: !14520, size: 96)
!14520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !14521)
!14521 = !{!14522, !14523, !14524}
!14522 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14520, file: !462, line: 57, baseType: !465, size: 32)
!14523 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14520, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!14524 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14520, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!14525 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14517, file: !312, line: 5075, baseType: !14398, size: 64, offset: 96)
!14526 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14517, file: !312, line: 5076, baseType: !2347, offset: 160)
!14527 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14454, file: !367, line: 343, baseType: !14528, size: 64, offset: 928)
!14528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !436, line: 60, size: 64, elements: !14529)
!14529 = !{!14530, !14531}
!14530 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14528, file: !436, line: 63, baseType: !132, size: 32)
!14531 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14528, file: !436, line: 66, baseType: !132, size: 32, offset: 32)
!14532 = !DILocation(line: 0, scope: !14442)
!14533 = !DILocalVariable(name: "l", arg: 1, scope: !14534, file: !472, line: 136, type: !14537)
!14534 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !14535, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14538)
!14535 = !DISubroutineType(types: !14536)
!14536 = !{!14448, !14537}
!14537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!14538 = !{!14533, !14539}
!14539 = !DILocalVariable(name: "k", scope: !14534, file: !472, line: 139, type: !14448)
!14540 = !DILocation(line: 0, scope: !14534, inlinedAt: !14541)
!14541 = distinct !DILocation(line: 88, column: 25, scope: !14442)
!14542 = !DILocation(line: 55, column: 2, scope: !14543, inlinedAt: !14547)
!14543 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5789, file: !5789, line: 42, type: !5790, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14544)
!14544 = !{!14545, !14546}
!14545 = !DILocalVariable(name: "key", scope: !14543, file: !5789, line: 44, type: !32)
!14546 = !DILocalVariable(name: "tmp", scope: !14543, file: !5789, line: 53, type: !32)
!14547 = distinct !DILocation(line: 145, column: 10, scope: !14534, inlinedAt: !14541)
!14548 = !{i64 1949885}
!14549 = !DILocation(line: 0, scope: !14543, inlinedAt: !14547)
!14550 = !DILocation(line: 93, column: 39, scope: !14442)
!14551 = !DILocation(line: 93, column: 11, scope: !14442)
!14552 = !DILocation(line: 95, column: 13, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14442, file: !2346, line: 95, column: 6)
!14554 = !DILocation(line: 95, column: 6, scope: !14442)
!14555 = !DILocalVariable(name: "thread", arg: 1, scope: !14556, file: !13746, line: 65, type: !14453)
!14556 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13746, file: !13746, line: 65, type: !14557, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14559)
!14557 = !DISubroutineType(types: !14558)
!14558 = !{null, !14453, !32}
!14559 = !{!14555, !14560}
!14560 = !DILocalVariable(name: "value", arg: 2, scope: !14556, file: !13746, line: 65, type: !32)
!14561 = !DILocation(line: 0, scope: !14556, inlinedAt: !14562)
!14562 = distinct !DILocation(line: 96, column: 3, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14553, file: !2346, line: 95, column: 22)
!14564 = !DILocation(line: 67, column: 15, scope: !14556, inlinedAt: !14562)
!14565 = !DILocation(line: 67, column: 33, scope: !14556, inlinedAt: !14562)
!14566 = !DILocation(line: 97, column: 3, scope: !14563)
!14567 = !DILocation(line: 98, column: 2, scope: !14563)
!14568 = !DILocation(line: 99, column: 23, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14553, file: !2346, line: 98, column: 9)
!14570 = !DILocation(line: 99, column: 37, scope: !14569)
!14571 = !DILocation(line: 99, column: 29, scope: !14569)
!14572 = !DILocation(line: 99, column: 17, scope: !14569)
!14573 = !DILocation(line: 99, column: 14, scope: !14569)
!14574 = !DILocation(line: 103, column: 2, scope: !14442)
!14575 = !DILocation(line: 106, column: 1, scope: !14442)
!14576 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2346, file: !2346, line: 117, type: !14577, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14583)
!14577 = !DISubroutineType(types: !14578)
!14578 = !{!103, !14394, !14579}
!14579 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1689, line: 67, baseType: !14580)
!14580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1689, line: 65, size: 64, elements: !14581)
!14581 = !{!14582}
!14582 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14580, file: !1689, line: 66, baseType: !1688, size: 64)
!14583 = !{!14584, !14585, !14586, !14587, !14588}
!14584 = !DILocalVariable(name: "sem", arg: 1, scope: !14576, file: !2346, line: 117, type: !14394)
!14585 = !DILocalVariable(name: "timeout", arg: 2, scope: !14576, file: !2346, line: 117, type: !14579)
!14586 = !DILocalVariable(name: "ret", scope: !14576, file: !2346, line: 119, type: !103)
!14587 = !DILocalVariable(name: "key", scope: !14576, file: !2346, line: 124, type: !14448)
!14588 = !DILabel(scope: !14576, name: "out", file: !2346, line: 145)
!14589 = !DILocation(line: 0, scope: !14576)
!14590 = !DILocation(line: 0, scope: !14534, inlinedAt: !14591)
!14591 = distinct !DILocation(line: 124, column: 25, scope: !14576)
!14592 = !DILocation(line: 55, column: 2, scope: !14543, inlinedAt: !14593)
!14593 = distinct !DILocation(line: 145, column: 10, scope: !14534, inlinedAt: !14591)
!14594 = !DILocation(line: 0, scope: !14543, inlinedAt: !14593)
!14595 = !DILocation(line: 128, column: 6, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14576, file: !2346, line: 128, column: 6)
!14597 = !DILocation(line: 128, column: 6, scope: !14576)
!14598 = !{!"branch_weights", i32 1, i32 2000}
!14599 = !DILocation(line: 129, column: 13, scope: !14600)
!14600 = distinct !DILexicalBlock(scope: !14596, file: !2346, line: 128, column: 31)
!14601 = !DILocalVariable(name: "key", arg: 2, scope: !14602, file: !472, line: 190, type: !14448)
!14602 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !14603, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14605)
!14603 = !DISubroutineType(types: !14604)
!14604 = !{null, !14537, !14448}
!14605 = !{!14606, !14601}
!14606 = !DILocalVariable(name: "l", arg: 1, scope: !14602, file: !472, line: 189, type: !14537)
!14607 = !DILocation(line: 0, scope: !14602, inlinedAt: !14608)
!14608 = distinct !DILocation(line: 130, column: 3, scope: !14600)
!14609 = !DILocalVariable(name: "key", arg: 1, scope: !14610, file: !5789, line: 84, type: !32)
!14610 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5789, file: !5789, line: 84, type: !5800, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14611)
!14611 = !{!14609}
!14612 = !DILocation(line: 0, scope: !14610, inlinedAt: !14613)
!14613 = distinct !DILocation(line: 215, column: 2, scope: !14602, inlinedAt: !14608)
!14614 = !DILocation(line: 95, column: 2, scope: !14610, inlinedAt: !14613)
!14615 = !{i64 1950702}
!14616 = !DILocation(line: 132, column: 3, scope: !14600)
!14617 = !DILocation(line: 135, column: 6, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14576, file: !2346, line: 135, column: 6)
!14619 = !DILocation(line: 135, column: 6, scope: !14576)
!14620 = !DILocation(line: 0, scope: !14602, inlinedAt: !14621)
!14621 = distinct !DILocation(line: 136, column: 3, scope: !14622)
!14622 = distinct !DILexicalBlock(scope: !14618, file: !2346, line: 135, column: 40)
!14623 = !DILocation(line: 0, scope: !14610, inlinedAt: !14624)
!14624 = distinct !DILocation(line: 215, column: 2, scope: !14602, inlinedAt: !14621)
!14625 = !DILocation(line: 95, column: 2, scope: !14610, inlinedAt: !14624)
!14626 = !DILocation(line: 138, column: 3, scope: !14622)
!14627 = !DILocation(line: 143, column: 38, scope: !14576)
!14628 = !DILocation(line: 143, column: 8, scope: !14576)
!14629 = !DILocation(line: 143, column: 2, scope: !14576)
!14630 = !DILocation(line: 145, column: 1, scope: !14576)
!14631 = !DILocation(line: 148, column: 2, scope: !14576)
!14632 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2346, file: !2346, line: 151, type: !14443, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !14633)
!14633 = !{!14634, !14635, !14636}
!14634 = !DILocalVariable(name: "sem", arg: 1, scope: !14632, file: !2346, line: 151, type: !14394)
!14635 = !DILocalVariable(name: "thread", scope: !14632, file: !2346, line: 153, type: !14453)
!14636 = !DILocalVariable(name: "key", scope: !14632, file: !2346, line: 154, type: !14448)
!14637 = !DILocation(line: 0, scope: !14632)
!14638 = !DILocation(line: 0, scope: !14534, inlinedAt: !14639)
!14639 = distinct !DILocation(line: 154, column: 25, scope: !14632)
!14640 = !DILocation(line: 55, column: 2, scope: !14543, inlinedAt: !14641)
!14641 = distinct !DILocation(line: 145, column: 10, scope: !14534, inlinedAt: !14639)
!14642 = !DILocation(line: 0, scope: !14543, inlinedAt: !14641)
!14643 = !DILocation(line: 157, column: 12, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !14632, file: !2346, line: 156, column: 15)
!14645 = !DILocation(line: 158, column: 14, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14644, file: !2346, line: 158, column: 7)
!14647 = !DILocation(line: 158, column: 7, scope: !14644)
!14648 = !DILocation(line: 0, scope: !14556, inlinedAt: !14649)
!14649 = distinct !DILocation(line: 161, column: 3, scope: !14644)
!14650 = !DILocation(line: 67, column: 15, scope: !14556, inlinedAt: !14649)
!14651 = !DILocation(line: 67, column: 33, scope: !14556, inlinedAt: !14649)
!14652 = !DILocation(line: 162, column: 3, scope: !14644)
!14653 = distinct !{!14653, !14654, !14655}
!14654 = !DILocation(line: 156, column: 2, scope: !14632)
!14655 = !DILocation(line: 163, column: 2, scope: !14632)
!14656 = !DILocation(line: 164, column: 7, scope: !14632)
!14657 = !DILocation(line: 164, column: 13, scope: !14632)
!14658 = !DILocation(line: 170, column: 2, scope: !14632)
!14659 = !DILocation(line: 171, column: 1, scope: !14632)
!14660 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2458, file: !2458, line: 93, type: !14661, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14663)
!14661 = !DISubroutineType(types: !14662)
!14662 = !{!344, !2353, !2353}
!14663 = !{!14664, !14665, !14666, !14667}
!14664 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14660, file: !2458, line: 93, type: !2353)
!14665 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14660, file: !2458, line: 94, type: !2353)
!14666 = !DILocalVariable(name: "b1", scope: !14660, file: !2458, line: 97, type: !344)
!14667 = !DILocalVariable(name: "b2", scope: !14660, file: !2458, line: 98, type: !344)
!14668 = !DILocation(line: 0, scope: !14660)
!14669 = !DILocation(line: 97, column: 30, scope: !14660)
!14670 = !DILocation(line: 98, column: 30, scope: !14660)
!14671 = !DILocation(line: 100, column: 9, scope: !14672)
!14672 = distinct !DILexicalBlock(scope: !14660, file: !2458, line: 100, column: 6)
!14673 = !DILocation(line: 100, column: 6, scope: !14660)
!14674 = !DILocation(line: 125, column: 1, scope: !14660)
!14675 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2458, file: !2458, line: 428, type: !14676, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14678)
!14676 = !DISubroutineType(types: !14677)
!14677 = !{null, !2353}
!14678 = !{!14679}
!14679 = !DILocalVariable(name: "curr", arg: 1, scope: !14675, file: !2458, line: 428, type: !2353)
!14680 = !DILocation(line: 0, scope: !14675)
!14681 = !DILocation(line: 434, column: 6, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14675, file: !2458, line: 434, column: 6)
!14683 = !DILocation(line: 434, column: 23, scope: !14682)
!14684 = !DILocation(line: 434, column: 6, scope: !14675)
!14685 = !DILocation(line: 435, column: 50, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14682, file: !2458, line: 434, column: 29)
!14687 = !DILocation(line: 435, column: 48, scope: !14686)
!14688 = !DILocation(line: 435, column: 29, scope: !14686)
!14689 = !DILocation(line: 436, column: 24, scope: !14686)
!14690 = !DILocation(line: 436, column: 3, scope: !14686)
!14691 = !DILocation(line: 437, column: 2, scope: !14686)
!14692 = !DILocation(line: 438, column: 1, scope: !14675)
!14693 = distinct !DISubprogram(name: "slice_time", scope: !2458, file: !2458, line: 407, type: !14694, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14696)
!14694 = !DISubroutineType(types: !14695)
!14695 = !{!103, !2353}
!14696 = !{!14697, !14698}
!14697 = !DILocalVariable(name: "curr", arg: 1, scope: !14693, file: !2458, line: 407, type: !2353)
!14698 = !DILocalVariable(name: "ret", scope: !14693, file: !2458, line: 409, type: !103)
!14699 = !DILocation(line: 0, scope: !14693)
!14700 = !DILocation(line: 409, column: 12, scope: !14693)
!14701 = !DILocation(line: 416, column: 2, scope: !14693)
!14702 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2458, file: !2458, line: 440, type: !14703, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14705)
!14703 = !DISubroutineType(types: !14704)
!14704 = !{null, !344, !103}
!14705 = !{!14706, !14707, !14708, !14714}
!14706 = !DILocalVariable(name: "slice", arg: 1, scope: !14702, file: !2458, line: 440, type: !344)
!14707 = !DILocalVariable(name: "prio", arg: 2, scope: !14702, file: !2458, line: 440, type: !103)
!14708 = !DILocalVariable(name: "__i", scope: !14709, file: !2458, line: 442, type: !14710)
!14709 = distinct !DILexicalBlock(scope: !14702, file: !2458, line: 442, column: 2)
!14710 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !14711)
!14711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !14712)
!14712 = !{!14713}
!14713 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14711, file: !472, line: 33, baseType: !103, size: 32)
!14714 = !DILocalVariable(name: "__key", scope: !14709, file: !2458, line: 442, type: !14710)
!14715 = !DILocation(line: 0, scope: !14702)
!14716 = !DILocation(line: 0, scope: !14709)
!14717 = !DILocalVariable(name: "l", arg: 1, scope: !14718, file: !472, line: 136, type: !14721)
!14718 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !14719, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14722)
!14719 = !DISubroutineType(types: !14720)
!14720 = !{!14710, !14721}
!14721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!14722 = !{!14717, !14723}
!14723 = !DILocalVariable(name: "k", scope: !14718, file: !472, line: 139, type: !14710)
!14724 = !DILocation(line: 0, scope: !14718, inlinedAt: !14725)
!14725 = distinct !DILocation(line: 442, column: 2, scope: !14709)
!14726 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !14731)
!14727 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5789, file: !5789, line: 42, type: !5790, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14728)
!14728 = !{!14729, !14730}
!14729 = !DILocalVariable(name: "key", scope: !14727, file: !5789, line: 44, type: !32)
!14730 = !DILocalVariable(name: "tmp", scope: !14727, file: !5789, line: 53, type: !32)
!14731 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !14725)
!14732 = !{i64 1992294}
!14733 = !DILocation(line: 0, scope: !14727, inlinedAt: !14731)
!14734 = !DILocation(line: 443, column: 29, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14736, file: !2458, line: 442, column: 26)
!14736 = distinct !DILexicalBlock(scope: !14709, file: !2458, line: 442, column: 2)
!14737 = !DILocation(line: 444, column: 17, scope: !14735)
!14738 = !DILocation(line: 445, column: 51, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14735, file: !2458, line: 445, column: 7)
!14740 = !DILocation(line: 445, column: 7, scope: !14735)
!14741 = !DILocation(line: 0, scope: !14735)
!14742 = !DILocation(line: 451, column: 18, scope: !14735)
!14743 = !DILocation(line: 452, column: 3, scope: !14735)
!14744 = !DILocalVariable(name: "key", arg: 2, scope: !14745, file: !472, line: 190, type: !14710)
!14745 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !14746, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14748)
!14746 = !DISubroutineType(types: !14747)
!14747 = !{null, !14721, !14710}
!14748 = !{!14749, !14744}
!14749 = !DILocalVariable(name: "l", arg: 1, scope: !14745, file: !472, line: 189, type: !14721)
!14750 = !DILocation(line: 0, scope: !14745, inlinedAt: !14751)
!14751 = distinct !DILocation(line: 442, column: 2, scope: !14736)
!14752 = !DILocalVariable(name: "key", arg: 1, scope: !14753, file: !5789, line: 84, type: !32)
!14753 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5789, file: !5789, line: 84, type: !5800, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14754)
!14754 = !{!14752}
!14755 = !DILocation(line: 0, scope: !14753, inlinedAt: !14756)
!14756 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !14751)
!14757 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !14756)
!14758 = !{i64 1993111}
!14759 = !DILocation(line: 454, column: 1, scope: !14702)
!14760 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !5989, file: !5989, line: 389, type: !7816, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14761)
!14761 = !{!14762}
!14762 = !DILocalVariable(name: "t", arg: 1, scope: !14760, file: !5989, line: 389, type: !132)
!14763 = !DILocation(line: 0, scope: !14760)
!14764 = !DILocalVariable(name: "t", arg: 1, scope: !14765, file: !5989, line: 102, type: !1585)
!14765 = distinct !DISubprogram(name: "z_tmcvt", scope: !5989, file: !5989, line: 102, type: !5997, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14766)
!14766 = !{!14764, !14767, !14768, !14769, !14770, !14771, !14772, !14773, !14774, !14775, !14776}
!14767 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14765, file: !5989, line: 102, type: !132)
!14768 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14765, file: !5989, line: 103, type: !132)
!14769 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14765, file: !5989, line: 103, type: !166)
!14770 = !DILocalVariable(name: "result32", arg: 5, scope: !14765, file: !5989, line: 104, type: !166)
!14771 = !DILocalVariable(name: "round_up", arg: 6, scope: !14765, file: !5989, line: 104, type: !166)
!14772 = !DILocalVariable(name: "round_off", arg: 7, scope: !14765, file: !5989, line: 105, type: !166)
!14773 = !DILocalVariable(name: "mul_ratio", scope: !14765, file: !5989, line: 107, type: !166)
!14774 = !DILocalVariable(name: "div_ratio", scope: !14765, file: !5989, line: 109, type: !166)
!14775 = !DILocalVariable(name: "off", scope: !14765, file: !5989, line: 116, type: !1585)
!14776 = !DILocalVariable(name: "rdivisor", scope: !14777, file: !5989, line: 119, type: !132)
!14777 = distinct !DILexicalBlock(scope: !14778, file: !5989, line: 118, column: 18)
!14778 = distinct !DILexicalBlock(scope: !14765, file: !5989, line: 118, column: 6)
!14779 = !DILocation(line: 0, scope: !14765, inlinedAt: !14780)
!14780 = distinct !DILocation(line: 392, column: 9, scope: !14760)
!14781 = !DILocation(line: 143, column: 25, scope: !14782, inlinedAt: !14780)
!14782 = distinct !DILexicalBlock(scope: !14783, file: !5989, line: 142, column: 17)
!14783 = distinct !DILexicalBlock(scope: !14784, file: !5989, line: 142, column: 7)
!14784 = distinct !DILexicalBlock(scope: !14785, file: !5989, line: 141, column: 24)
!14785 = distinct !DILexicalBlock(scope: !14786, file: !5989, line: 141, column: 13)
!14786 = distinct !DILexicalBlock(scope: !14765, file: !5989, line: 134, column: 6)
!14787 = !DILocation(line: 392, column: 2, scope: !14760)
!14788 = distinct !DISubprogram(name: "z_time_slice", scope: !2458, file: !2458, line: 502, type: !8451, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14789)
!14789 = !{!14790, !14791}
!14790 = !DILocalVariable(name: "ticks", arg: 1, scope: !14788, file: !2458, line: 502, type: !103)
!14791 = !DILocalVariable(name: "key", scope: !14788, file: !2458, line: 511, type: !14710)
!14792 = !DILocation(line: 0, scope: !14788)
!14793 = !DILocation(line: 0, scope: !14718, inlinedAt: !14794)
!14794 = distinct !DILocation(line: 511, column: 25, scope: !14788)
!14795 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !14796)
!14796 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !14794)
!14797 = !DILocation(line: 0, scope: !14727, inlinedAt: !14796)
!14798 = !DILocation(line: 514, column: 6, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14788, file: !2458, line: 514, column: 6)
!14800 = !DILocation(line: 514, column: 25, scope: !14799)
!14801 = !DILocation(line: 514, column: 22, scope: !14799)
!14802 = !DILocation(line: 514, column: 6, scope: !14788)
!14803 = !DILocation(line: 515, column: 3, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14799, file: !2458, line: 514, column: 35)
!14805 = !DILocation(line: 0, scope: !14745, inlinedAt: !14806)
!14806 = distinct !DILocation(line: 516, column: 3, scope: !14804)
!14807 = !DILocation(line: 0, scope: !14753, inlinedAt: !14808)
!14808 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !14806)
!14809 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !14808)
!14810 = !DILocation(line: 517, column: 3, scope: !14804)
!14811 = !DILocation(line: 519, column: 18, scope: !14788)
!14812 = !DILocation(line: 522, column: 6, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14788, file: !2458, line: 522, column: 6)
!14814 = !DILocation(line: 522, column: 27, scope: !14813)
!14815 = !DILocation(line: 522, column: 30, scope: !14813)
!14816 = !DILocation(line: 522, column: 6, scope: !14788)
!14817 = !DILocation(line: 523, column: 30, scope: !14818)
!14818 = distinct !DILexicalBlock(scope: !14819, file: !2458, line: 523, column: 7)
!14819 = distinct !DILexicalBlock(scope: !14813, file: !2458, line: 522, column: 51)
!14820 = !DILocation(line: 523, column: 13, scope: !14818)
!14821 = !DILocation(line: 523, column: 7, scope: !14819)
!14822 = !DILocation(line: 530, column: 10, scope: !14823)
!14823 = distinct !DILexicalBlock(scope: !14818, file: !2458, line: 523, column: 43)
!14824 = !DILocation(line: 531, column: 3, scope: !14823)
!14825 = !DILocation(line: 532, column: 30, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14818, file: !2458, line: 531, column: 10)
!14827 = !DILocation(line: 535, column: 29, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14813, file: !2458, line: 534, column: 9)
!14829 = !DILocation(line: 0, scope: !14745, inlinedAt: !14830)
!14830 = distinct !DILocation(line: 537, column: 2, scope: !14788)
!14831 = !DILocation(line: 0, scope: !14753, inlinedAt: !14832)
!14832 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !14830)
!14833 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !14832)
!14834 = !DILocation(line: 538, column: 1, scope: !14788)
!14835 = distinct !DISubprogram(name: "sliceable", scope: !2458, file: !2458, line: 468, type: !14836, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14838)
!14836 = !DISubroutineType(types: !14837)
!14837 = !{!166, !2353}
!14838 = !{!14839, !14840}
!14839 = !DILocalVariable(name: "thread", arg: 1, scope: !14835, file: !2458, line: 468, type: !2353)
!14840 = !DILocalVariable(name: "ret", scope: !14835, file: !2458, line: 470, type: !166)
!14841 = !DILocation(line: 0, scope: !14835)
!14842 = !DILocation(line: 470, column: 13, scope: !14835)
!14843 = !DILocation(line: 471, column: 3, scope: !14835)
!14844 = !DILocation(line: 471, column: 7, scope: !14835)
!14845 = !DILocation(line: 472, column: 3, scope: !14835)
!14846 = !DILocation(line: 472, column: 37, scope: !14835)
!14847 = !DILocation(line: 472, column: 24, scope: !14835)
!14848 = !DILocation(line: 472, column: 43, scope: !14835)
!14849 = !DILocation(line: 472, column: 7, scope: !14835)
!14850 = !DILocation(line: 473, column: 3, scope: !14835)
!14851 = !DILocation(line: 473, column: 7, scope: !14835)
!14852 = !DILocation(line: 473, column: 6, scope: !14835)
!14853 = !DILocation(line: 479, column: 2, scope: !14835)
!14854 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2458, file: !2458, line: 482, type: !14855, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14857)
!14855 = !DISubroutineType(types: !14856)
!14856 = !{!14710, !14710}
!14857 = !{!14858, !14859}
!14858 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14854, file: !2458, line: 482, type: !14710)
!14859 = !DILocalVariable(name: "curr", scope: !14854, file: !2458, line: 484, type: !2353)
!14860 = !DILocation(line: 0, scope: !14854)
!14861 = !DILocation(line: 484, column: 26, scope: !14854)
!14862 = !DILocation(line: 493, column: 7, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14854, file: !2458, line: 493, column: 6)
!14864 = !DILocation(line: 493, column: 6, scope: !14854)
!14865 = !DILocation(line: 494, column: 3, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14863, file: !2458, line: 493, column: 49)
!14867 = !DILocation(line: 495, column: 2, scope: !14866)
!14868 = !DILocation(line: 496, column: 2, scope: !14854)
!14869 = !DILocation(line: 499, column: 1, scope: !14854)
!14870 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13726, file: !13726, line: 106, type: !14836, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14871)
!14871 = !{!14872, !14873}
!14872 = !DILocalVariable(name: "thread", arg: 1, scope: !14870, file: !13726, line: 106, type: !2353)
!14873 = !DILocalVariable(name: "state", scope: !14870, file: !13726, line: 108, type: !163)
!14874 = !DILocation(line: 0, scope: !14870)
!14875 = !DILocation(line: 108, column: 31, scope: !14870)
!14876 = !DILocation(line: 110, column: 16, scope: !14870)
!14877 = !DILocation(line: 111, column: 41, scope: !14870)
!14878 = !DILocation(line: 110, column: 2, scope: !14870)
!14879 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2458, file: !2458, line: 393, type: !14676, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14880)
!14880 = !{!14881}
!14881 = !DILocalVariable(name: "thread", arg: 1, scope: !14879, file: !2458, line: 393, type: !2353)
!14882 = !DILocation(line: 0, scope: !14879)
!14883 = !DILocation(line: 395, column: 6, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14879, file: !2458, line: 395, column: 6)
!14885 = !DILocation(line: 395, column: 6, scope: !14879)
!14886 = !DILocalVariable(name: "thread", arg: 1, scope: !14887, file: !2458, line: 264, type: !2353)
!14887 = distinct !DISubprogram(name: "dequeue_thread", scope: !2458, file: !2458, line: 264, type: !14676, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14888)
!14888 = !{!14886}
!14889 = !DILocation(line: 0, scope: !14887, inlinedAt: !14890)
!14890 = distinct !DILocation(line: 396, column: 3, scope: !14891)
!14891 = distinct !DILexicalBlock(scope: !14884, file: !2458, line: 395, column: 34)
!14892 = !DILocation(line: 266, column: 15, scope: !14887, inlinedAt: !14890)
!14893 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !14890)
!14894 = !DILocalVariable(name: "thread", arg: 1, scope: !14895, file: !2458, line: 232, type: !2353)
!14895 = distinct !DISubprogram(name: "runq_remove", scope: !2458, file: !2458, line: 232, type: !14676, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14896)
!14896 = !{!14894}
!14897 = !DILocation(line: 0, scope: !14895, inlinedAt: !14898)
!14898 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !14890)
!14899 = distinct !DILexicalBlock(scope: !14900, file: !2458, line: 267, column: 35)
!14900 = distinct !DILexicalBlock(scope: !14887, file: !2458, line: 267, column: 6)
!14901 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !14898)
!14902 = !DILocation(line: 397, column: 2, scope: !14891)
!14903 = !DILocalVariable(name: "thread", arg: 1, scope: !14904, file: !2458, line: 250, type: !2353)
!14904 = distinct !DISubprogram(name: "queue_thread", scope: !2458, file: !2458, line: 250, type: !14676, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14905)
!14905 = !{!14903}
!14906 = !DILocation(line: 0, scope: !14904, inlinedAt: !14907)
!14907 = distinct !DILocation(line: 398, column: 2, scope: !14879)
!14908 = !DILocation(line: 252, column: 15, scope: !14904, inlinedAt: !14907)
!14909 = !DILocation(line: 252, column: 28, scope: !14904, inlinedAt: !14907)
!14910 = !DILocalVariable(name: "thread", arg: 1, scope: !14911, file: !2458, line: 227, type: !2353)
!14911 = distinct !DISubprogram(name: "runq_add", scope: !2458, file: !2458, line: 227, type: !14676, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14912)
!14912 = !{!14910}
!14913 = !DILocation(line: 0, scope: !14911, inlinedAt: !14914)
!14914 = distinct !DILocation(line: 254, column: 3, scope: !14915, inlinedAt: !14907)
!14915 = distinct !DILexicalBlock(scope: !14916, file: !2458, line: 253, column: 35)
!14916 = distinct !DILexicalBlock(scope: !14904, file: !2458, line: 253, column: 6)
!14917 = !DILocalVariable(name: "pq", arg: 1, scope: !14918, file: !2458, line: 181, type: !14921)
!14918 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2458, file: !2458, line: 181, type: !14919, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14922)
!14919 = !DISubroutineType(types: !14920)
!14920 = !{null, !14921, !2353}
!14921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 32)
!14922 = !{!14917, !14923, !14924}
!14923 = !DILocalVariable(name: "thread", arg: 2, scope: !14918, file: !2458, line: 182, type: !2353)
!14924 = !DILocalVariable(name: "t", scope: !14918, file: !2458, line: 184, type: !2353)
!14925 = !DILocation(line: 0, scope: !14918, inlinedAt: !14926)
!14926 = distinct !DILocation(line: 229, column: 2, scope: !14911, inlinedAt: !14914)
!14927 = !DILocation(line: 188, column: 2, scope: !14928, inlinedAt: !14926)
!14928 = distinct !DILexicalBlock(scope: !14918, file: !2458, line: 188, column: 2)
!14929 = !DILocation(line: 188, column: 2, scope: !14930, inlinedAt: !14926)
!14930 = distinct !DILexicalBlock(scope: !14928, file: !2458, line: 188, column: 2)
!14931 = !DILocation(line: 0, scope: !14928, inlinedAt: !14926)
!14932 = !DILocation(line: 189, column: 7, scope: !14933, inlinedAt: !14926)
!14933 = distinct !DILexicalBlock(scope: !14934, file: !2458, line: 189, column: 7)
!14934 = distinct !DILexicalBlock(scope: !14930, file: !2458, line: 188, column: 56)
!14935 = !DILocation(line: 189, column: 35, scope: !14933, inlinedAt: !14926)
!14936 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !14926)
!14937 = !DILocation(line: 191, column: 21, scope: !14938, inlinedAt: !14926)
!14938 = distinct !DILexicalBlock(scope: !14933, file: !2458, line: 189, column: 40)
!14939 = !DILocation(line: 190, column: 4, scope: !14938, inlinedAt: !14926)
!14940 = !DILocation(line: 192, column: 4, scope: !14938, inlinedAt: !14926)
!14941 = distinct !{!14941, !14927, !14942}
!14942 = !DILocation(line: 194, column: 2, scope: !14928, inlinedAt: !14926)
!14943 = !DILocation(line: 196, column: 37, scope: !14918, inlinedAt: !14926)
!14944 = !DILocation(line: 196, column: 2, scope: !14918, inlinedAt: !14926)
!14945 = !DILocation(line: 197, column: 1, scope: !14918, inlinedAt: !14926)
!14946 = !DILocation(line: 399, column: 25, scope: !14879)
!14947 = !DILocation(line: 399, column: 22, scope: !14879)
!14948 = !DILocation(line: 399, column: 2, scope: !14879)
!14949 = !DILocation(line: 400, column: 1, scope: !14879)
!14950 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13726, file: !13726, line: 136, type: !14836, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14951)
!14951 = !{!14952}
!14952 = !DILocalVariable(name: "thread", arg: 1, scope: !14950, file: !13726, line: 136, type: !2353)
!14953 = !DILocation(line: 0, scope: !14950)
!14954 = !DILocation(line: 138, column: 9, scope: !14950)
!14955 = !DILocation(line: 138, column: 2, scope: !14950)
!14956 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2458, file: !2458, line: 1137, type: !14919, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14957)
!14957 = !{!14958, !14959}
!14958 = !DILocalVariable(name: "pq", arg: 1, scope: !14956, file: !2458, line: 1137, type: !14921)
!14959 = !DILocalVariable(name: "thread", arg: 2, scope: !14956, file: !2458, line: 1137, type: !2353)
!14960 = !DILocation(line: 0, scope: !14956)
!14961 = !DILocation(line: 1141, column: 33, scope: !14956)
!14962 = !DILocation(line: 1141, column: 2, scope: !14956)
!14963 = !DILocation(line: 1142, column: 1, scope: !14956)
!14964 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !321, file: !321, line: 294, type: !14965, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14967)
!14965 = !DISubroutineType(types: !14966)
!14966 = !{!2454, !14921}
!14967 = !{!14968}
!14968 = !DILocalVariable(name: "list", arg: 1, scope: !14964, file: !321, line: 294, type: !14921)
!14969 = !DILocation(line: 0, scope: !14964)
!14970 = !DILocation(line: 296, column: 9, scope: !14964)
!14971 = !DILocation(line: 296, column: 49, scope: !14964)
!14972 = !DILocation(line: 296, column: 2, scope: !14964)
!14973 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !321, file: !321, line: 443, type: !14974, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14976)
!14974 = !DISubroutineType(types: !14975)
!14975 = !{null, !2454, !2454}
!14976 = !{!14977, !14978, !14979}
!14977 = !DILocalVariable(name: "successor", arg: 1, scope: !14973, file: !321, line: 443, type: !2454)
!14978 = !DILocalVariable(name: "node", arg: 2, scope: !14973, file: !321, line: 443, type: !2454)
!14979 = !DILocalVariable(name: "prev", scope: !14973, file: !321, line: 445, type: !14980)
!14980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2454)
!14981 = !DILocation(line: 0, scope: !14973)
!14982 = !DILocation(line: 445, column: 39, scope: !14973)
!14983 = !DILocation(line: 447, column: 8, scope: !14973)
!14984 = !DILocation(line: 447, column: 13, scope: !14973)
!14985 = !DILocation(line: 448, column: 8, scope: !14973)
!14986 = !DILocation(line: 448, column: 13, scope: !14973)
!14987 = !DILocation(line: 449, column: 8, scope: !14973)
!14988 = !DILocation(line: 449, column: 13, scope: !14973)
!14989 = !DILocation(line: 450, column: 18, scope: !14973)
!14990 = !DILocation(line: 451, column: 1, scope: !14973)
!14991 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !321, file: !321, line: 341, type: !14992, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !14994)
!14992 = !DISubroutineType(types: !14993)
!14993 = !{!2454, !14921, !2454}
!14994 = !{!14995, !14996}
!14995 = !DILocalVariable(name: "list", arg: 1, scope: !14991, file: !321, line: 341, type: !14921)
!14996 = !DILocalVariable(name: "node", arg: 2, scope: !14991, file: !321, line: 342, type: !2454)
!14997 = !DILocation(line: 0, scope: !14991)
!14998 = !DILocation(line: 344, column: 15, scope: !14991)
!14999 = !DILocation(line: 344, column: 9, scope: !14991)
!15000 = !DILocation(line: 344, column: 26, scope: !14991)
!15001 = !DILocation(line: 344, column: 2, scope: !14991)
!15002 = distinct !DISubprogram(name: "sys_dlist_append", scope: !321, file: !321, line: 404, type: !15003, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15005)
!15003 = !DISubroutineType(types: !15004)
!15004 = !{null, !14921, !2454}
!15005 = !{!15006, !15007, !15008}
!15006 = !DILocalVariable(name: "list", arg: 1, scope: !15002, file: !321, line: 404, type: !14921)
!15007 = !DILocalVariable(name: "node", arg: 2, scope: !15002, file: !321, line: 404, type: !2454)
!15008 = !DILocalVariable(name: "tail", scope: !15002, file: !321, line: 406, type: !14980)
!15009 = !DILocation(line: 0, scope: !15002)
!15010 = !DILocation(line: 406, column: 34, scope: !15002)
!15011 = !DILocation(line: 408, column: 8, scope: !15002)
!15012 = !DILocation(line: 408, column: 13, scope: !15002)
!15013 = !DILocation(line: 409, column: 8, scope: !15002)
!15014 = !DILocation(line: 409, column: 13, scope: !15002)
!15015 = !DILocation(line: 411, column: 8, scope: !15002)
!15016 = !DILocation(line: 411, column: 13, scope: !15002)
!15017 = !DILocation(line: 412, column: 13, scope: !15002)
!15018 = !DILocation(line: 413, column: 1, scope: !15002)
!15019 = distinct !DISubprogram(name: "update_cache", scope: !2458, file: !2458, line: 559, type: !8451, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15020)
!15020 = !{!15021, !15022}
!15021 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15019, file: !2458, line: 559, type: !103)
!15022 = !DILocalVariable(name: "thread", scope: !15019, file: !2458, line: 562, type: !2353)
!15023 = !DILocation(line: 0, scope: !15019)
!15024 = !DILocation(line: 239, column: 9, scope: !15025, inlinedAt: !15028)
!15025 = distinct !DISubprogram(name: "runq_best", scope: !2458, file: !2458, line: 237, type: !15026, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !473)
!15026 = !DISubroutineType(types: !15027)
!15027 = !{!2353}
!15028 = distinct !DILocation(line: 314, column: 28, scope: !15029, inlinedAt: !15032)
!15029 = distinct !DISubprogram(name: "next_up", scope: !2458, file: !2458, line: 312, type: !15026, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15030)
!15030 = !{!15031}
!15031 = !DILocalVariable(name: "thread", scope: !15029, file: !2458, line: 314, type: !2353)
!15032 = distinct !DILocation(line: 562, column: 28, scope: !15019)
!15033 = !DILocation(line: 0, scope: !15029, inlinedAt: !15032)
!15034 = !DILocation(line: 340, column: 17, scope: !15029, inlinedAt: !15032)
!15035 = !DILocation(line: 340, column: 9, scope: !15029, inlinedAt: !15032)
!15036 = !DILocalVariable(name: "thread", arg: 1, scope: !15037, file: !2458, line: 127, type: !2353)
!15037 = distinct !DISubprogram(name: "should_preempt", scope: !2458, file: !2458, line: 127, type: !15038, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15040)
!15038 = !DISubroutineType(types: !15039)
!15039 = !{!166, !2353, !103}
!15040 = !{!15036, !15041}
!15041 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15037, file: !2458, line: 128, type: !103)
!15042 = !DILocation(line: 0, scope: !15037, inlinedAt: !15043)
!15043 = distinct !DILocation(line: 564, column: 6, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !15019, file: !2458, line: 564, column: 6)
!15045 = !DILocation(line: 133, column: 17, scope: !15046, inlinedAt: !15043)
!15046 = distinct !DILexicalBlock(scope: !15037, file: !2458, line: 133, column: 6)
!15047 = !DILocation(line: 0, scope: !15044)
!15048 = !DILocation(line: 133, column: 6, scope: !15037, inlinedAt: !15043)
!15049 = !DILocation(line: 140, column: 6, scope: !15050, inlinedAt: !15043)
!15050 = distinct !DILexicalBlock(scope: !15037, file: !2458, line: 140, column: 6)
!15051 = !DILocation(line: 140, column: 6, scope: !15037, inlinedAt: !15043)
!15052 = !DILocation(line: 150, column: 9, scope: !15053, inlinedAt: !15043)
!15053 = distinct !DILexicalBlock(scope: !15037, file: !2458, line: 149, column: 6)
!15054 = !DILocation(line: 149, column: 6, scope: !15037, inlinedAt: !15043)
!15055 = !DILocation(line: 157, column: 6, scope: !15056, inlinedAt: !15043)
!15056 = distinct !DILexicalBlock(scope: !15037, file: !2458, line: 157, column: 6)
!15057 = !DILocation(line: 564, column: 6, scope: !15019)
!15058 = !DILocation(line: 566, column: 14, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !15060, file: !2458, line: 566, column: 7)
!15060 = distinct !DILexicalBlock(scope: !15044, file: !2458, line: 564, column: 42)
!15061 = !DILocation(line: 566, column: 7, scope: !15060)
!15062 = !DILocation(line: 567, column: 4, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15059, file: !2458, line: 566, column: 27)
!15064 = !DILocation(line: 568, column: 3, scope: !15063)
!15065 = !DILocation(line: 585, column: 1, scope: !15019)
!15066 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2458, file: !2458, line: 1144, type: !15067, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15069)
!15067 = !DISubroutineType(types: !15068)
!15068 = !{!2353, !14921}
!15069 = !{!15070, !15071, !15072}
!15070 = !DILocalVariable(name: "pq", arg: 1, scope: !15066, file: !2458, line: 1144, type: !14921)
!15071 = !DILocalVariable(name: "thread", scope: !15066, file: !2458, line: 1146, type: !2353)
!15072 = !DILocalVariable(name: "n", scope: !15066, file: !2458, line: 1147, type: !2454)
!15073 = !DILocation(line: 0, scope: !15066)
!15074 = !DILocation(line: 1147, column: 19, scope: !15066)
!15075 = !DILocation(line: 1152, column: 2, scope: !15066)
!15076 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13726, file: !13726, line: 115, type: !14836, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15077)
!15077 = !{!15078}
!15078 = !DILocalVariable(name: "thread", arg: 1, scope: !15076, file: !13726, line: 115, type: !2353)
!15079 = !DILocation(line: 0, scope: !15076)
!15080 = !DILocation(line: 117, column: 46, scope: !15076)
!15081 = !DILocation(line: 117, column: 10, scope: !15076)
!15082 = !DILocation(line: 117, column: 9, scope: !15076)
!15083 = !DILocation(line: 117, column: 2, scope: !15076)
!15084 = distinct !DISubprogram(name: "is_preempt", scope: !2458, file: !2458, line: 62, type: !14694, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15085)
!15085 = !{!15086}
!15086 = !DILocalVariable(name: "thread", arg: 1, scope: !15084, file: !2458, line: 62, type: !2353)
!15087 = !DILocation(line: 0, scope: !15084)
!15088 = !DILocation(line: 65, column: 22, scope: !15084)
!15089 = !DILocation(line: 65, column: 30, scope: !15084)
!15090 = !DILocation(line: 65, column: 2, scope: !15084)
!15091 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14120, file: !14120, line: 35, type: !15092, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15096)
!15092 = !DISubroutineType(types: !15093)
!15093 = !{!166, !15094}
!15094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15095, size: 32)
!15095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2404)
!15096 = !{!15097}
!15097 = !DILocalVariable(name: "to", arg: 1, scope: !15091, file: !14120, line: 35, type: !15094)
!15098 = !DILocation(line: 0, scope: !15091)
!15099 = !DILocation(line: 37, column: 35, scope: !15091)
!15100 = !DILocation(line: 37, column: 10, scope: !15091)
!15101 = !DILocation(line: 37, column: 9, scope: !15091)
!15102 = !DILocation(line: 37, column: 2, scope: !15091)
!15103 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !321, file: !321, line: 225, type: !15104, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15108)
!15104 = !DISubroutineType(types: !15105)
!15105 = !{!166, !15106}
!15106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15107, size: 32)
!15107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2363)
!15108 = !{!15109}
!15109 = !DILocalVariable(name: "node", arg: 1, scope: !15103, file: !321, line: 225, type: !15106)
!15110 = !DILocation(line: 0, scope: !15103)
!15111 = !DILocation(line: 227, column: 15, scope: !15103)
!15112 = !DILocation(line: 227, column: 20, scope: !15103)
!15113 = !DILocation(line: 227, column: 2, scope: !15103)
!15114 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !321, file: !321, line: 325, type: !14992, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15115)
!15115 = !{!15116, !15117}
!15116 = !DILocalVariable(name: "list", arg: 1, scope: !15114, file: !321, line: 325, type: !14921)
!15117 = !DILocalVariable(name: "node", arg: 2, scope: !15114, file: !321, line: 326, type: !2454)
!15118 = !DILocation(line: 0, scope: !15114)
!15119 = !DILocation(line: 328, column: 24, scope: !15114)
!15120 = !DILocation(line: 328, column: 15, scope: !15114)
!15121 = !DILocation(line: 328, column: 9, scope: !15114)
!15122 = !DILocation(line: 328, column: 45, scope: !15114)
!15123 = !DILocation(line: 328, column: 2, scope: !15114)
!15124 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !321, file: !321, line: 266, type: !15125, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15127)
!15125 = !DISubroutineType(types: !15126)
!15126 = !{!166, !14921}
!15127 = !{!15128}
!15128 = !DILocalVariable(name: "list", arg: 1, scope: !15124, file: !321, line: 266, type: !14921)
!15129 = !DILocation(line: 0, scope: !15124)
!15130 = !DILocation(line: 268, column: 15, scope: !15124)
!15131 = !DILocation(line: 268, column: 20, scope: !15124)
!15132 = !DILocation(line: 268, column: 2, scope: !15124)
!15133 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !321, file: !321, line: 496, type: !15134, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15136)
!15134 = !DISubroutineType(types: !15135)
!15135 = !{null, !2454}
!15136 = !{!15137, !15138, !15139}
!15137 = !DILocalVariable(name: "node", arg: 1, scope: !15133, file: !321, line: 496, type: !2454)
!15138 = !DILocalVariable(name: "prev", scope: !15133, file: !321, line: 498, type: !14980)
!15139 = !DILocalVariable(name: "next", scope: !15133, file: !321, line: 499, type: !14980)
!15140 = !DILocation(line: 0, scope: !15133)
!15141 = !DILocation(line: 498, column: 34, scope: !15133)
!15142 = !DILocation(line: 499, column: 34, scope: !15133)
!15143 = !DILocation(line: 501, column: 8, scope: !15133)
!15144 = !DILocation(line: 501, column: 13, scope: !15133)
!15145 = !DILocation(line: 502, column: 8, scope: !15133)
!15146 = !DILocation(line: 502, column: 13, scope: !15133)
!15147 = !DILocation(line: 503, column: 2, scope: !15133)
!15148 = !DILocation(line: 504, column: 1, scope: !15133)
!15149 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !15134, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15150)
!15150 = !{!15151}
!15151 = !DILocalVariable(name: "node", arg: 1, scope: !15149, file: !321, line: 211, type: !2454)
!15152 = !DILocation(line: 0, scope: !15149)
!15153 = !DILocation(line: 213, column: 8, scope: !15149)
!15154 = !DILocation(line: 213, column: 13, scope: !15149)
!15155 = !DILocation(line: 214, column: 8, scope: !15149)
!15156 = !DILocation(line: 214, column: 13, scope: !15149)
!15157 = !DILocation(line: 215, column: 1, scope: !15149)
!15158 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13726, file: !13726, line: 131, type: !15159, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15161)
!15159 = !DISubroutineType(types: !15160)
!15160 = !{!166, !2353, !132}
!15161 = !{!15162, !15163}
!15162 = !DILocalVariable(name: "thread", arg: 1, scope: !15158, file: !13726, line: 131, type: !2353)
!15163 = !DILocalVariable(name: "state", arg: 2, scope: !15158, file: !13726, line: 131, type: !132)
!15164 = !DILocation(line: 0, scope: !15158)
!15165 = !DILocation(line: 133, column: 23, scope: !15158)
!15166 = !DILocation(line: 133, column: 45, scope: !15158)
!15167 = !DILocation(line: 133, column: 2, scope: !15158)
!15168 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13726, file: !13726, line: 211, type: !15169, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15171)
!15169 = !DISubroutineType(types: !15170)
!15170 = !{!166, !103, !103}
!15171 = !{!15172, !15173}
!15172 = !DILocalVariable(name: "prio", arg: 1, scope: !15168, file: !13726, line: 211, type: !103)
!15173 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15168, file: !13726, line: 211, type: !103)
!15174 = !DILocation(line: 0, scope: !15168)
!15175 = !DILocation(line: 213, column: 9, scope: !15168)
!15176 = !DILocation(line: 213, column: 2, scope: !15168)
!15177 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13726, file: !13726, line: 83, type: !14836, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15178)
!15178 = !{!15179}
!15179 = !DILocalVariable(name: "thread", arg: 1, scope: !15177, file: !13726, line: 83, type: !2353)
!15180 = !DILocation(line: 0, scope: !15177)
!15181 = !DILocation(line: 89, column: 16, scope: !15177)
!15182 = !DILocation(line: 89, column: 2, scope: !15177)
!15183 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13726, file: !13726, line: 206, type: !15169, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15184)
!15184 = !{!15185, !15186}
!15185 = !DILocalVariable(name: "prio1", arg: 1, scope: !15183, file: !13726, line: 206, type: !103)
!15186 = !DILocalVariable(name: "prio2", arg: 2, scope: !15183, file: !13726, line: 206, type: !103)
!15187 = !DILocation(line: 0, scope: !15183)
!15188 = !DILocation(line: 208, column: 15, scope: !15183)
!15189 = !DILocation(line: 208, column: 2, scope: !15183)
!15190 = distinct !DISubprogram(name: "z_ready_thread", scope: !2458, file: !2458, line: 635, type: !14676, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15191)
!15191 = !{!15192, !15193, !15195}
!15192 = !DILocalVariable(name: "thread", arg: 1, scope: !15190, file: !2458, line: 635, type: !2353)
!15193 = !DILocalVariable(name: "__i", scope: !15194, file: !2458, line: 637, type: !14710)
!15194 = distinct !DILexicalBlock(scope: !15190, file: !2458, line: 637, column: 2)
!15195 = !DILocalVariable(name: "__key", scope: !15194, file: !2458, line: 637, type: !14710)
!15196 = !DILocation(line: 0, scope: !15190)
!15197 = !DILocation(line: 0, scope: !15194)
!15198 = !DILocation(line: 0, scope: !14718, inlinedAt: !15199)
!15199 = distinct !DILocation(line: 637, column: 2, scope: !15194)
!15200 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15201)
!15201 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15199)
!15202 = !DILocation(line: 0, scope: !14727, inlinedAt: !15201)
!15203 = !DILocation(line: 639, column: 4, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15205, file: !2458, line: 638, column: 41)
!15205 = distinct !DILexicalBlock(scope: !15206, file: !2458, line: 638, column: 7)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !2458, line: 637, column: 26)
!15207 = distinct !DILexicalBlock(scope: !15194, file: !2458, line: 637, column: 2)
!15208 = !DILocation(line: 0, scope: !14745, inlinedAt: !15209)
!15209 = distinct !DILocation(line: 637, column: 2, scope: !15207)
!15210 = !DILocation(line: 0, scope: !14753, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15209)
!15212 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15211)
!15213 = !DILocation(line: 642, column: 1, scope: !15190)
!15214 = distinct !DISubprogram(name: "ready_thread", scope: !2458, file: !2458, line: 617, type: !14676, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15215)
!15215 = !{!15216}
!15216 = !DILocalVariable(name: "thread", arg: 1, scope: !15214, file: !2458, line: 617, type: !2353)
!15217 = !DILocation(line: 0, scope: !15214)
!15218 = !DILocation(line: 626, column: 7, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !15214, file: !2458, line: 626, column: 6)
!15220 = !DILocation(line: 626, column: 34, scope: !15219)
!15221 = !DILocation(line: 626, column: 37, scope: !15219)
!15222 = !DILocation(line: 626, column: 6, scope: !15214)
!15223 = !DILocation(line: 0, scope: !14904, inlinedAt: !15224)
!15224 = distinct !DILocation(line: 629, column: 3, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15219, file: !2458, line: 626, column: 64)
!15226 = !DILocation(line: 252, column: 15, scope: !14904, inlinedAt: !15224)
!15227 = !DILocation(line: 252, column: 28, scope: !14904, inlinedAt: !15224)
!15228 = !DILocation(line: 0, scope: !14911, inlinedAt: !15229)
!15229 = distinct !DILocation(line: 254, column: 3, scope: !14915, inlinedAt: !15224)
!15230 = !DILocation(line: 0, scope: !14918, inlinedAt: !15231)
!15231 = distinct !DILocation(line: 229, column: 2, scope: !14911, inlinedAt: !15229)
!15232 = !DILocation(line: 188, column: 2, scope: !14928, inlinedAt: !15231)
!15233 = !DILocation(line: 188, column: 2, scope: !14930, inlinedAt: !15231)
!15234 = !DILocation(line: 0, scope: !14928, inlinedAt: !15231)
!15235 = !DILocation(line: 189, column: 7, scope: !14933, inlinedAt: !15231)
!15236 = !DILocation(line: 189, column: 35, scope: !14933, inlinedAt: !15231)
!15237 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !15231)
!15238 = !DILocation(line: 191, column: 21, scope: !14938, inlinedAt: !15231)
!15239 = !DILocation(line: 190, column: 4, scope: !14938, inlinedAt: !15231)
!15240 = !DILocation(line: 192, column: 4, scope: !14938, inlinedAt: !15231)
!15241 = distinct !{!15241, !15232, !15242}
!15242 = !DILocation(line: 194, column: 2, scope: !14928, inlinedAt: !15231)
!15243 = !DILocation(line: 196, column: 37, scope: !14918, inlinedAt: !15231)
!15244 = !DILocation(line: 196, column: 2, scope: !14918, inlinedAt: !15231)
!15245 = !DILocation(line: 197, column: 1, scope: !14918, inlinedAt: !15231)
!15246 = !DILocation(line: 630, column: 3, scope: !15225)
!15247 = !DILocation(line: 632, column: 2, scope: !15225)
!15248 = !DILocation(line: 633, column: 1, scope: !15214)
!15249 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13726, file: !13726, line: 120, type: !14836, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15250)
!15250 = !{!15251}
!15251 = !DILocalVariable(name: "thread", arg: 1, scope: !15249, file: !13726, line: 120, type: !2353)
!15252 = !DILocation(line: 0, scope: !15249)
!15253 = !DILocation(line: 122, column: 12, scope: !15249)
!15254 = !DILocation(line: 122, column: 62, scope: !15249)
!15255 = !DILocation(line: 123, column: 4, scope: !15249)
!15256 = !DILocation(line: 122, column: 2, scope: !15249)
!15257 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2458, file: !2458, line: 644, type: !14676, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15258)
!15258 = !{!15259, !15260, !15262}
!15259 = !DILocalVariable(name: "thread", arg: 1, scope: !15257, file: !2458, line: 644, type: !2353)
!15260 = !DILocalVariable(name: "__i", scope: !15261, file: !2458, line: 646, type: !14710)
!15261 = distinct !DILexicalBlock(scope: !15257, file: !2458, line: 646, column: 2)
!15262 = !DILocalVariable(name: "__key", scope: !15261, file: !2458, line: 646, type: !14710)
!15263 = !DILocation(line: 0, scope: !15257)
!15264 = !DILocation(line: 0, scope: !15261)
!15265 = !DILocation(line: 0, scope: !14718, inlinedAt: !15266)
!15266 = distinct !DILocation(line: 646, column: 2, scope: !15261)
!15267 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15268)
!15268 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15266)
!15269 = !DILocation(line: 0, scope: !14727, inlinedAt: !15268)
!15270 = !DILocation(line: 647, column: 3, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15272, file: !2458, line: 646, column: 26)
!15272 = distinct !DILexicalBlock(scope: !15261, file: !2458, line: 646, column: 2)
!15273 = !DILocation(line: 0, scope: !14745, inlinedAt: !15274)
!15274 = distinct !DILocation(line: 646, column: 2, scope: !15272)
!15275 = !DILocation(line: 0, scope: !14753, inlinedAt: !15276)
!15276 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15274)
!15277 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15276)
!15278 = !DILocation(line: 649, column: 1, scope: !15257)
!15279 = distinct !DISubprogram(name: "z_sched_start", scope: !2458, file: !2458, line: 651, type: !14676, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15280)
!15280 = !{!15281, !15282}
!15281 = !DILocalVariable(name: "thread", arg: 1, scope: !15279, file: !2458, line: 651, type: !2353)
!15282 = !DILocalVariable(name: "key", scope: !15279, file: !2458, line: 653, type: !14710)
!15283 = !DILocation(line: 0, scope: !15279)
!15284 = !DILocation(line: 0, scope: !14718, inlinedAt: !15285)
!15285 = distinct !DILocation(line: 653, column: 25, scope: !15279)
!15286 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15287)
!15287 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15285)
!15288 = !DILocation(line: 0, scope: !14727, inlinedAt: !15287)
!15289 = !DILocation(line: 655, column: 6, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15279, file: !2458, line: 655, column: 6)
!15291 = !DILocation(line: 655, column: 6, scope: !15279)
!15292 = !DILocation(line: 0, scope: !14745, inlinedAt: !15293)
!15293 = distinct !DILocation(line: 656, column: 3, scope: !15294)
!15294 = distinct !DILexicalBlock(scope: !15290, file: !2458, line: 655, column: 36)
!15295 = !DILocation(line: 0, scope: !14753, inlinedAt: !15296)
!15296 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15293)
!15297 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15296)
!15298 = !DILocation(line: 657, column: 3, scope: !15294)
!15299 = !DILocation(line: 660, column: 2, scope: !15279)
!15300 = !DILocation(line: 661, column: 2, scope: !15279)
!15301 = !DILocation(line: 662, column: 2, scope: !15279)
!15302 = !DILocation(line: 663, column: 1, scope: !15279)
!15303 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13726, file: !13726, line: 126, type: !14836, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15304)
!15304 = !{!15305}
!15305 = !DILocalVariable(name: "thread", arg: 1, scope: !15303, file: !13726, line: 126, type: !2353)
!15306 = !DILocation(line: 0, scope: !15303)
!15307 = !DILocation(line: 128, column: 23, scope: !15303)
!15308 = !DILocation(line: 128, column: 36, scope: !15303)
!15309 = !DILocation(line: 128, column: 56, scope: !15303)
!15310 = !DILocation(line: 128, column: 2, scope: !15303)
!15311 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13726, file: !13726, line: 155, type: !14676, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15312)
!15312 = !{!15313}
!15313 = !DILocalVariable(name: "thread", arg: 1, scope: !15311, file: !13726, line: 155, type: !2353)
!15314 = !DILocation(line: 0, scope: !15311)
!15315 = !DILocation(line: 157, column: 15, scope: !15311)
!15316 = !DILocation(line: 157, column: 28, scope: !15311)
!15317 = !DILocation(line: 158, column: 1, scope: !15311)
!15318 = distinct !DISubprogram(name: "z_reschedule", scope: !2458, file: !2458, line: 967, type: !14746, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15319)
!15319 = !{!15320, !15321}
!15320 = !DILocalVariable(name: "lock", arg: 1, scope: !15318, file: !2458, line: 967, type: !14721)
!15321 = !DILocalVariable(name: "key", arg: 2, scope: !15318, file: !2458, line: 967, type: !14710)
!15322 = !DILocation(line: 0, scope: !15318)
!15323 = !DILocation(line: 969, column: 6, scope: !15324)
!15324 = distinct !DILexicalBlock(scope: !15318, file: !2458, line: 969, column: 6)
!15325 = !DILocation(line: 969, column: 23, scope: !15324)
!15326 = !DILocation(line: 969, column: 26, scope: !15324)
!15327 = !DILocation(line: 969, column: 6, scope: !15318)
!15328 = !DILocalVariable(name: "key", arg: 2, scope: !15329, file: !13830, line: 193, type: !14710)
!15329 = distinct !DISubprogram(name: "z_swap", scope: !13830, file: !13830, line: 193, type: !15330, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15332)
!15330 = !DISubroutineType(types: !15331)
!15331 = !{!103, !14721, !14710}
!15332 = !{!15333, !15328}
!15333 = !DILocalVariable(name: "lock", arg: 1, scope: !15329, file: !13830, line: 193, type: !14721)
!15334 = !DILocation(line: 0, scope: !15329, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 970, column: 3, scope: !15336)
!15336 = distinct !DILexicalBlock(scope: !15324, file: !2458, line: 969, column: 39)
!15337 = !DILocation(line: 196, column: 9, scope: !15329, inlinedAt: !15335)
!15338 = !DILocation(line: 971, column: 2, scope: !15336)
!15339 = !DILocation(line: 0, scope: !14745, inlinedAt: !15340)
!15340 = distinct !DILocation(line: 972, column: 3, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15324, file: !2458, line: 971, column: 9)
!15342 = !DILocation(line: 0, scope: !14753, inlinedAt: !15343)
!15343 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15340)
!15344 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15343)
!15345 = !DILocation(line: 975, column: 1, scope: !15318)
!15346 = distinct !DISubprogram(name: "resched", scope: !2458, file: !2458, line: 940, type: !15347, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15349)
!15347 = !DISubroutineType(types: !15348)
!15348 = !{!166, !132}
!15349 = !{!15350}
!15350 = !DILocalVariable(name: "key", arg: 1, scope: !15346, file: !2458, line: 940, type: !132)
!15351 = !DILocation(line: 0, scope: !15346)
!15352 = !DILocalVariable(name: "key", arg: 1, scope: !15353, file: !5789, line: 112, type: !32)
!15353 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5789, file: !5789, line: 112, type: !15354, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15356)
!15354 = !DISubroutineType(types: !15355)
!15355 = !{!166, !32}
!15356 = !{!15352}
!15357 = !DILocation(line: 0, scope: !15353, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 946, column: 9, scope: !15346)
!15359 = !DILocation(line: 115, column: 13, scope: !15353, inlinedAt: !15358)
!15360 = !DILocation(line: 946, column: 32, scope: !15346)
!15361 = !DILocation(line: 1031, column: 3, scope: !15362, inlinedAt: !15365)
!15362 = distinct !DISubprogram(name: "__get_IPSR", scope: !6809, file: !6809, line: 1027, type: !6890, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15363)
!15363 = !{!15364}
!15364 = !DILocalVariable(name: "result", scope: !15362, file: !6809, line: 1029, type: !132)
!15365 = distinct !DILocation(line: 48, column: 10, scope: !15366, inlinedAt: !15367)
!15366 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7603, file: !7603, line: 46, type: !7604, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !473)
!15367 = distinct !DILocation(line: 946, column: 36, scope: !15346)
!15368 = !{i64 2870033}
!15369 = !DILocation(line: 0, scope: !15362, inlinedAt: !15365)
!15370 = !DILocation(line: 48, column: 9, scope: !15366, inlinedAt: !15367)
!15371 = !DILocation(line: 946, column: 2, scope: !15346)
!15372 = distinct !DISubprogram(name: "need_swap", scope: !2458, file: !2458, line: 953, type: !7604, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15373)
!15373 = !{!15374}
!15374 = !DILocalVariable(name: "new_thread", scope: !15372, file: !2458, line: 959, type: !2353)
!15375 = !DILocation(line: 962, column: 31, scope: !15372)
!15376 = !DILocation(line: 0, scope: !15372)
!15377 = !DILocation(line: 963, column: 23, scope: !15372)
!15378 = !DILocation(line: 963, column: 20, scope: !15372)
!15379 = !DILocation(line: 963, column: 2, scope: !15372)
!15380 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13830, file: !13830, line: 181, type: !6819, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15381)
!15381 = !{!15382, !15383}
!15382 = !DILocalVariable(name: "key", arg: 1, scope: !15380, file: !13830, line: 181, type: !32)
!15383 = !DILocalVariable(name: "ret", scope: !15380, file: !13830, line: 183, type: !103)
!15384 = !DILocation(line: 0, scope: !15380)
!15385 = !DILocation(line: 185, column: 8, scope: !15380)
!15386 = !DILocation(line: 186, column: 2, scope: !15380)
!15387 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2458, file: !2458, line: 665, type: !14676, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15388)
!15388 = !{!15389, !15390, !15392}
!15389 = !DILocalVariable(name: "thread", arg: 1, scope: !15387, file: !2458, line: 665, type: !2353)
!15390 = !DILocalVariable(name: "__i", scope: !15391, file: !2458, line: 671, type: !14710)
!15391 = distinct !DILexicalBlock(scope: !15387, file: !2458, line: 671, column: 2)
!15392 = !DILocalVariable(name: "__key", scope: !15391, file: !2458, line: 671, type: !14710)
!15393 = !DILocation(line: 0, scope: !15387)
!15394 = !DILocation(line: 669, column: 8, scope: !15387)
!15395 = !DILocation(line: 0, scope: !15391)
!15396 = !DILocation(line: 0, scope: !14718, inlinedAt: !15397)
!15397 = distinct !DILocation(line: 671, column: 2, scope: !15391)
!15398 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15399)
!15399 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15397)
!15400 = !DILocation(line: 0, scope: !14727, inlinedAt: !15399)
!15401 = !DILocation(line: 672, column: 7, scope: !15402)
!15402 = distinct !DILexicalBlock(scope: !15403, file: !2458, line: 672, column: 7)
!15403 = distinct !DILexicalBlock(scope: !15404, file: !2458, line: 671, column: 26)
!15404 = distinct !DILexicalBlock(scope: !15391, file: !2458, line: 671, column: 2)
!15405 = !DILocation(line: 672, column: 7, scope: !15403)
!15406 = !DILocation(line: 0, scope: !14887, inlinedAt: !15407)
!15407 = distinct !DILocation(line: 673, column: 4, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15402, file: !2458, line: 672, column: 35)
!15409 = !DILocation(line: 266, column: 15, scope: !14887, inlinedAt: !15407)
!15410 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !15407)
!15411 = !DILocation(line: 0, scope: !14895, inlinedAt: !15412)
!15412 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !15407)
!15413 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !15412)
!15414 = !DILocation(line: 674, column: 3, scope: !15408)
!15415 = !DILocation(line: 675, column: 3, scope: !15403)
!15416 = !DILocation(line: 676, column: 26, scope: !15403)
!15417 = !DILocation(line: 676, column: 23, scope: !15403)
!15418 = !DILocation(line: 676, column: 3, scope: !15403)
!15419 = !DILocation(line: 0, scope: !14745, inlinedAt: !15420)
!15420 = distinct !DILocation(line: 671, column: 2, scope: !15404)
!15421 = !DILocation(line: 0, scope: !14753, inlinedAt: !15422)
!15422 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15420)
!15423 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15422)
!15424 = !DILocation(line: 679, column: 16, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !15387, file: !2458, line: 679, column: 6)
!15426 = !DILocation(line: 679, column: 13, scope: !15425)
!15427 = !DILocation(line: 679, column: 6, scope: !15387)
!15428 = !DILocation(line: 680, column: 3, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15425, file: !2458, line: 679, column: 26)
!15430 = !DILocation(line: 681, column: 2, scope: !15429)
!15431 = !DILocation(line: 684, column: 1, scope: !15387)
!15432 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14120, file: !14120, line: 52, type: !14694, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15433)
!15433 = !{!15434}
!15434 = !DILocalVariable(name: "thread", arg: 1, scope: !15432, file: !14120, line: 52, type: !2353)
!15435 = !DILocation(line: 0, scope: !15432)
!15436 = !DILocation(line: 54, column: 39, scope: !15432)
!15437 = !DILocation(line: 54, column: 9, scope: !15432)
!15438 = !DILocation(line: 54, column: 2, scope: !15432)
!15439 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13726, file: !13726, line: 141, type: !14676, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15440)
!15440 = !{!15441}
!15441 = !DILocalVariable(name: "thread", arg: 1, scope: !15439, file: !13726, line: 141, type: !2353)
!15442 = !DILocation(line: 0, scope: !15439)
!15443 = !DILocation(line: 143, column: 15, scope: !15439)
!15444 = !DILocation(line: 143, column: 28, scope: !15439)
!15445 = !DILocation(line: 146, column: 1, scope: !15439)
!15446 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13726, file: !13726, line: 73, type: !3232, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !473)
!15447 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15448)
!15448 = distinct !DILocation(line: 75, column: 30, scope: !15446)
!15449 = !DILocation(line: 0, scope: !14727, inlinedAt: !15448)
!15450 = !DILocation(line: 75, column: 9, scope: !15446)
!15451 = !DILocation(line: 76, column: 1, scope: !15446)
!15452 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2458, file: !2458, line: 977, type: !6900, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15453)
!15453 = !{!15454}
!15454 = !DILocalVariable(name: "key", arg: 1, scope: !15452, file: !2458, line: 977, type: !132)
!15455 = !DILocation(line: 0, scope: !15452)
!15456 = !DILocation(line: 979, column: 6, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15452, file: !2458, line: 979, column: 6)
!15458 = !DILocation(line: 979, column: 6, scope: !15452)
!15459 = !DILocation(line: 980, column: 3, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15457, file: !2458, line: 979, column: 20)
!15461 = !DILocation(line: 981, column: 2, scope: !15460)
!15462 = !DILocation(line: 0, scope: !14753, inlinedAt: !15463)
!15463 = distinct !DILocation(line: 982, column: 3, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15457, file: !2458, line: 981, column: 9)
!15465 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15463)
!15466 = !DILocation(line: 985, column: 1, scope: !15452)
!15467 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2458, file: !2458, line: 695, type: !14676, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15468)
!15468 = !{!15469, !15470}
!15469 = !DILocalVariable(name: "thread", arg: 1, scope: !15467, file: !2458, line: 695, type: !2353)
!15470 = !DILocalVariable(name: "key", scope: !15467, file: !2458, line: 699, type: !14710)
!15471 = !DILocation(line: 0, scope: !15467)
!15472 = !DILocation(line: 0, scope: !14718, inlinedAt: !15473)
!15473 = distinct !DILocation(line: 699, column: 25, scope: !15467)
!15474 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15475)
!15475 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15473)
!15476 = !DILocation(line: 0, scope: !14727, inlinedAt: !15475)
!15477 = !DILocation(line: 702, column: 7, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15467, file: !2458, line: 702, column: 6)
!15479 = !DILocation(line: 702, column: 6, scope: !15467)
!15480 = !DILocation(line: 0, scope: !14745, inlinedAt: !15481)
!15481 = distinct !DILocation(line: 703, column: 3, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15478, file: !2458, line: 702, column: 38)
!15483 = !DILocation(line: 0, scope: !14753, inlinedAt: !15484)
!15484 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15481)
!15485 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15484)
!15486 = !DILocation(line: 704, column: 3, scope: !15482)
!15487 = !DILocation(line: 707, column: 2, scope: !15467)
!15488 = !DILocation(line: 708, column: 2, scope: !15467)
!15489 = !DILocation(line: 710, column: 2, scope: !15467)
!15490 = !DILocation(line: 713, column: 1, scope: !15467)
!15491 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13726, file: !13726, line: 96, type: !14836, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15492)
!15492 = !{!15493}
!15493 = !DILocalVariable(name: "thread", arg: 1, scope: !15491, file: !13726, line: 96, type: !2353)
!15494 = !DILocation(line: 0, scope: !15491)
!15495 = !DILocation(line: 98, column: 23, scope: !15491)
!15496 = !DILocation(line: 98, column: 36, scope: !15491)
!15497 = !DILocation(line: 98, column: 57, scope: !15491)
!15498 = !DILocation(line: 98, column: 2, scope: !15491)
!15499 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13726, file: !13726, line: 148, type: !14676, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15500)
!15500 = !{!15501}
!15501 = !DILocalVariable(name: "thread", arg: 1, scope: !15499, file: !13726, line: 148, type: !2353)
!15502 = !DILocation(line: 0, scope: !15499)
!15503 = !DILocation(line: 150, column: 15, scope: !15499)
!15504 = !DILocation(line: 150, column: 28, scope: !15499)
!15505 = !DILocation(line: 153, column: 1, scope: !15499)
!15506 = distinct !DISubprogram(name: "z_pend_thread", scope: !2458, file: !2458, line: 770, type: !15507, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15513)
!15507 = !DISubroutineType(types: !15508)
!15508 = !{null, !2353, !2384, !15509}
!15509 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1689, line: 67, baseType: !15510)
!15510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1689, line: 65, size: 64, elements: !15511)
!15511 = !{!15512}
!15512 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15510, file: !1689, line: 66, baseType: !1688, size: 64)
!15513 = !{!15514, !15515, !15516, !15517, !15519}
!15514 = !DILocalVariable(name: "thread", arg: 1, scope: !15506, file: !2458, line: 770, type: !2353)
!15515 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15506, file: !2458, line: 770, type: !2384)
!15516 = !DILocalVariable(name: "timeout", arg: 3, scope: !15506, file: !2458, line: 771, type: !15509)
!15517 = !DILocalVariable(name: "__i", scope: !15518, file: !2458, line: 774, type: !14710)
!15518 = distinct !DILexicalBlock(scope: !15506, file: !2458, line: 774, column: 2)
!15519 = !DILocalVariable(name: "__key", scope: !15518, file: !2458, line: 774, type: !14710)
!15520 = !DILocation(line: 0, scope: !15506)
!15521 = !DILocation(line: 0, scope: !15518)
!15522 = !DILocation(line: 0, scope: !14718, inlinedAt: !15523)
!15523 = distinct !DILocation(line: 774, column: 2, scope: !15518)
!15524 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15523)
!15526 = !DILocation(line: 0, scope: !14727, inlinedAt: !15525)
!15527 = !DILocation(line: 775, column: 3, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15529, file: !2458, line: 774, column: 26)
!15529 = distinct !DILexicalBlock(scope: !15518, file: !2458, line: 774, column: 2)
!15530 = !DILocation(line: 0, scope: !14745, inlinedAt: !15531)
!15531 = distinct !DILocation(line: 774, column: 2, scope: !15529)
!15532 = !DILocation(line: 0, scope: !14753, inlinedAt: !15533)
!15533 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15531)
!15534 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15533)
!15535 = !DILocation(line: 777, column: 1, scope: !15506)
!15536 = distinct !DISubprogram(name: "pend_locked", scope: !2458, file: !2458, line: 760, type: !15507, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15537)
!15537 = !{!15538, !15539, !15540}
!15538 = !DILocalVariable(name: "thread", arg: 1, scope: !15536, file: !2458, line: 760, type: !2353)
!15539 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15536, file: !2458, line: 760, type: !2384)
!15540 = !DILocalVariable(name: "timeout", arg: 3, scope: !15536, file: !2458, line: 761, type: !15509)
!15541 = !DILocation(line: 0, scope: !15536)
!15542 = !DILocation(line: 766, column: 2, scope: !15536)
!15543 = !DILocation(line: 767, column: 2, scope: !15536)
!15544 = !DILocation(line: 768, column: 1, scope: !15536)
!15545 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2458, file: !2458, line: 740, type: !15546, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15548)
!15546 = !DISubroutineType(types: !15547)
!15547 = !{null, !2353, !2384}
!15548 = !{!15549, !15550}
!15549 = !DILocalVariable(name: "thread", arg: 1, scope: !15545, file: !2458, line: 740, type: !2353)
!15550 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15545, file: !2458, line: 740, type: !2384)
!15551 = !DILocation(line: 0, scope: !15545)
!15552 = !DILocation(line: 742, column: 2, scope: !15545)
!15553 = !DILocation(line: 743, column: 2, scope: !15545)
!15554 = !DILocation(line: 747, column: 13, scope: !15555)
!15555 = distinct !DILexicalBlock(scope: !15545, file: !2458, line: 747, column: 6)
!15556 = !DILocation(line: 747, column: 6, scope: !15545)
!15557 = !DILocation(line: 748, column: 16, scope: !15558)
!15558 = distinct !DILexicalBlock(scope: !15555, file: !2458, line: 747, column: 22)
!15559 = !DILocation(line: 748, column: 26, scope: !15558)
!15560 = !DILocation(line: 749, column: 28, scope: !15558)
!15561 = !DILocation(line: 0, scope: !14918, inlinedAt: !15562)
!15562 = distinct !DILocation(line: 749, column: 3, scope: !15558)
!15563 = !DILocation(line: 188, column: 2, scope: !14928, inlinedAt: !15562)
!15564 = !DILocation(line: 188, column: 2, scope: !14930, inlinedAt: !15562)
!15565 = !DILocation(line: 0, scope: !14928, inlinedAt: !15562)
!15566 = !DILocation(line: 189, column: 7, scope: !14933, inlinedAt: !15562)
!15567 = !DILocation(line: 189, column: 35, scope: !14933, inlinedAt: !15562)
!15568 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !15562)
!15569 = !DILocation(line: 191, column: 21, scope: !14938, inlinedAt: !15562)
!15570 = !DILocation(line: 190, column: 4, scope: !14938, inlinedAt: !15562)
!15571 = !DILocation(line: 192, column: 4, scope: !14938, inlinedAt: !15562)
!15572 = distinct !{!15572, !15563, !15573}
!15573 = !DILocation(line: 194, column: 2, scope: !14928, inlinedAt: !15562)
!15574 = !DILocation(line: 196, column: 37, scope: !14918, inlinedAt: !15562)
!15575 = !DILocation(line: 196, column: 2, scope: !14918, inlinedAt: !15562)
!15576 = !DILocation(line: 197, column: 1, scope: !14918, inlinedAt: !15562)
!15577 = !DILocation(line: 751, column: 1, scope: !15545)
!15578 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2458, file: !2458, line: 753, type: !15579, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15581)
!15579 = !DISubroutineType(types: !15580)
!15580 = !{null, !2353, !15509}
!15581 = !{!15582, !15583}
!15582 = !DILocalVariable(name: "thread", arg: 1, scope: !15578, file: !2458, line: 753, type: !2353)
!15583 = !DILocalVariable(name: "timeout", arg: 2, scope: !15578, file: !2458, line: 753, type: !15509)
!15584 = !DILocation(line: 0, scope: !15578)
!15585 = !DILocation(line: 755, column: 7, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15578, file: !2458, line: 755, column: 6)
!15587 = !DILocation(line: 755, column: 6, scope: !15578)
!15588 = !DILocation(line: 756, column: 3, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15586, file: !2458, line: 755, column: 41)
!15590 = !DILocation(line: 757, column: 2, scope: !15589)
!15591 = !DILocation(line: 758, column: 1, scope: !15578)
!15592 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14120, file: !14120, line: 47, type: !15579, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15593)
!15593 = !{!15594, !15595}
!15594 = !DILocalVariable(name: "thread", arg: 1, scope: !15592, file: !14120, line: 47, type: !2353)
!15595 = !DILocalVariable(name: "ticks", arg: 2, scope: !15592, file: !14120, line: 47, type: !15509)
!15596 = !DILocation(line: 0, scope: !15592)
!15597 = !DILocation(line: 49, column: 30, scope: !15592)
!15598 = !DILocation(line: 49, column: 2, scope: !15592)
!15599 = !DILocation(line: 50, column: 1, scope: !15592)
!15600 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2458, file: !2458, line: 795, type: !2410, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15601)
!15601 = !{!15602, !15603, !15604, !15606, !15607}
!15602 = !DILocalVariable(name: "timeout", arg: 1, scope: !15600, file: !2458, line: 795, type: !2412)
!15603 = !DILocalVariable(name: "thread", scope: !15600, file: !2458, line: 797, type: !2353)
!15604 = !DILocalVariable(name: "__i", scope: !15605, file: !2458, line: 800, type: !14710)
!15605 = distinct !DILexicalBlock(scope: !15600, file: !2458, line: 800, column: 2)
!15606 = !DILocalVariable(name: "__key", scope: !15605, file: !2458, line: 800, type: !14710)
!15607 = !DILocalVariable(name: "killed", scope: !15608, file: !2458, line: 801, type: !166)
!15608 = distinct !DILexicalBlock(scope: !15609, file: !2458, line: 800, column: 26)
!15609 = distinct !DILexicalBlock(scope: !15605, file: !2458, line: 800, column: 2)
!15610 = !DILocation(line: 0, scope: !15600)
!15611 = !DILocation(line: 797, column: 28, scope: !15600)
!15612 = !DILocation(line: 0, scope: !15605)
!15613 = !DILocation(line: 0, scope: !14718, inlinedAt: !15614)
!15614 = distinct !DILocation(line: 800, column: 2, scope: !15605)
!15615 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15616)
!15616 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15614)
!15617 = !DILocation(line: 0, scope: !14727, inlinedAt: !15616)
!15618 = !DILocation(line: 801, column: 27, scope: !15608)
!15619 = !DILocation(line: 801, column: 32, scope: !15608)
!15620 = !DILocation(line: 801, column: 61, scope: !15608)
!15621 = !DILocation(line: 0, scope: !15608)
!15622 = !DILocation(line: 804, column: 7, scope: !15608)
!15623 = !DILocation(line: 805, column: 21, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !15625, file: !2458, line: 805, column: 8)
!15625 = distinct !DILexicalBlock(scope: !15626, file: !2458, line: 804, column: 16)
!15626 = distinct !DILexicalBlock(scope: !15608, file: !2458, line: 804, column: 7)
!15627 = !DILocation(line: 805, column: 31, scope: !15624)
!15628 = !DILocation(line: 805, column: 8, scope: !15625)
!15629 = !DILocation(line: 806, column: 5, scope: !15630)
!15630 = distinct !DILexicalBlock(scope: !15624, file: !2458, line: 805, column: 40)
!15631 = !DILocation(line: 807, column: 4, scope: !15630)
!15632 = !DILocation(line: 808, column: 4, scope: !15625)
!15633 = !DILocation(line: 809, column: 4, scope: !15625)
!15634 = !DILocation(line: 810, column: 4, scope: !15625)
!15635 = !DILocation(line: 811, column: 3, scope: !15625)
!15636 = !DILocation(line: 0, scope: !14745, inlinedAt: !15637)
!15637 = distinct !DILocation(line: 800, column: 2, scope: !15609)
!15638 = !DILocation(line: 0, scope: !14753, inlinedAt: !15639)
!15639 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15637)
!15640 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15639)
!15641 = !DILocation(line: 813, column: 1, scope: !15600)
!15642 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2458, file: !2458, line: 779, type: !14676, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15643)
!15643 = !{!15644}
!15644 = !DILocalVariable(name: "thread", arg: 1, scope: !15642, file: !2458, line: 779, type: !2353)
!15645 = !DILocation(line: 0, scope: !15642)
!15646 = !DILocation(line: 781, column: 2, scope: !15642)
!15647 = !DILocation(line: 782, column: 2, scope: !15642)
!15648 = !DILocation(line: 783, column: 15, scope: !15642)
!15649 = !DILocation(line: 783, column: 25, scope: !15642)
!15650 = !DILocation(line: 784, column: 1, scope: !15642)
!15651 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13726, file: !13726, line: 165, type: !14676, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15652)
!15652 = !{!15653}
!15653 = !DILocalVariable(name: "thread", arg: 1, scope: !15651, file: !13726, line: 165, type: !2353)
!15654 = !DILocation(line: 0, scope: !15651)
!15655 = !DILocation(line: 167, column: 15, scope: !15651)
!15656 = !DILocation(line: 167, column: 28, scope: !15651)
!15657 = !DILocation(line: 168, column: 1, scope: !15651)
!15658 = distinct !DISubprogram(name: "unready_thread", scope: !2458, file: !2458, line: 731, type: !14676, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15659)
!15659 = !{!15660}
!15660 = !DILocalVariable(name: "thread", arg: 1, scope: !15658, file: !2458, line: 731, type: !2353)
!15661 = !DILocation(line: 0, scope: !15658)
!15662 = !DILocation(line: 733, column: 6, scope: !15663)
!15663 = distinct !DILexicalBlock(scope: !15658, file: !2458, line: 733, column: 6)
!15664 = !DILocation(line: 733, column: 6, scope: !15658)
!15665 = !DILocation(line: 0, scope: !14887, inlinedAt: !15666)
!15666 = distinct !DILocation(line: 734, column: 3, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15663, file: !2458, line: 733, column: 34)
!15668 = !DILocation(line: 266, column: 15, scope: !14887, inlinedAt: !15666)
!15669 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !15666)
!15670 = !DILocation(line: 0, scope: !14895, inlinedAt: !15671)
!15671 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !15666)
!15672 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !15671)
!15673 = !DILocation(line: 735, column: 2, scope: !15667)
!15674 = !DILocation(line: 736, column: 25, scope: !15658)
!15675 = !DILocation(line: 736, column: 22, scope: !15658)
!15676 = !DILocation(line: 736, column: 2, scope: !15658)
!15677 = !DILocation(line: 737, column: 1, scope: !15658)
!15678 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13726, file: !13726, line: 160, type: !14676, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15679)
!15679 = !{!15680}
!15680 = !DILocalVariable(name: "thread", arg: 1, scope: !15678, file: !13726, line: 160, type: !2353)
!15681 = !DILocation(line: 0, scope: !15678)
!15682 = !DILocation(line: 162, column: 15, scope: !15678)
!15683 = !DILocation(line: 162, column: 28, scope: !15678)
!15684 = !DILocation(line: 163, column: 1, scope: !15678)
!15685 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2458, file: !2458, line: 786, type: !14676, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15686)
!15686 = !{!15687, !15688, !15690}
!15687 = !DILocalVariable(name: "thread", arg: 1, scope: !15685, file: !2458, line: 786, type: !2353)
!15688 = !DILocalVariable(name: "__i", scope: !15689, file: !2458, line: 788, type: !14710)
!15689 = distinct !DILexicalBlock(scope: !15685, file: !2458, line: 788, column: 2)
!15690 = !DILocalVariable(name: "__key", scope: !15689, file: !2458, line: 788, type: !14710)
!15691 = !DILocation(line: 0, scope: !15685)
!15692 = !DILocation(line: 0, scope: !15689)
!15693 = !DILocation(line: 0, scope: !14718, inlinedAt: !15694)
!15694 = distinct !DILocation(line: 788, column: 2, scope: !15689)
!15695 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15696)
!15696 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15694)
!15697 = !DILocation(line: 0, scope: !14727, inlinedAt: !15696)
!15698 = !DILocation(line: 789, column: 3, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15700, file: !2458, line: 788, column: 26)
!15700 = distinct !DILexicalBlock(scope: !15689, file: !2458, line: 788, column: 2)
!15701 = !DILocation(line: 0, scope: !14745, inlinedAt: !15702)
!15702 = distinct !DILocation(line: 788, column: 2, scope: !15700)
!15703 = !DILocation(line: 0, scope: !14753, inlinedAt: !15704)
!15704 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15702)
!15705 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15704)
!15706 = !DILocation(line: 791, column: 1, scope: !15685)
!15707 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2458, file: !2458, line: 816, type: !15708, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15710)
!15708 = !DISubroutineType(types: !15709)
!15709 = !{!103, !132, !2384, !15509}
!15710 = !{!15711, !15712, !15713, !15714, !15715, !15717}
!15711 = !DILocalVariable(name: "key", arg: 1, scope: !15707, file: !2458, line: 816, type: !132)
!15712 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15707, file: !2458, line: 816, type: !2384)
!15713 = !DILocalVariable(name: "timeout", arg: 3, scope: !15707, file: !2458, line: 816, type: !15509)
!15714 = !DILocalVariable(name: "ret", scope: !15707, file: !2458, line: 828, type: !103)
!15715 = !DILocalVariable(name: "__i", scope: !15716, file: !2458, line: 829, type: !14710)
!15716 = distinct !DILexicalBlock(scope: !15707, file: !2458, line: 829, column: 2)
!15717 = !DILocalVariable(name: "__key", scope: !15716, file: !2458, line: 829, type: !14710)
!15718 = !DILocation(line: 0, scope: !15707)
!15719 = !DILocation(line: 823, column: 14, scope: !15707)
!15720 = !DILocation(line: 823, column: 2, scope: !15707)
!15721 = !DILocation(line: 826, column: 20, scope: !15707)
!15722 = !DILocation(line: 826, column: 18, scope: !15707)
!15723 = !DILocation(line: 828, column: 12, scope: !15707)
!15724 = !DILocation(line: 0, scope: !15716)
!15725 = !DILocation(line: 0, scope: !14718, inlinedAt: !15726)
!15726 = distinct !DILocation(line: 829, column: 2, scope: !15716)
!15727 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15728)
!15728 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15726)
!15729 = !DILocation(line: 0, scope: !14727, inlinedAt: !15728)
!15730 = !DILocation(line: 830, column: 7, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15732, file: !2458, line: 830, column: 7)
!15732 = distinct !DILexicalBlock(scope: !15733, file: !2458, line: 829, column: 26)
!15733 = distinct !DILexicalBlock(scope: !15716, file: !2458, line: 829, column: 2)
!15734 = !DILocation(line: 830, column: 26, scope: !15731)
!15735 = !DILocation(line: 830, column: 23, scope: !15731)
!15736 = !DILocation(line: 830, column: 7, scope: !15732)
!15737 = !DILocation(line: 831, column: 20, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15731, file: !2458, line: 830, column: 36)
!15739 = !DILocation(line: 832, column: 3, scope: !15738)
!15740 = !DILocation(line: 0, scope: !14745, inlinedAt: !15741)
!15741 = distinct !DILocation(line: 829, column: 2, scope: !15733)
!15742 = !DILocation(line: 0, scope: !14753, inlinedAt: !15743)
!15743 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15741)
!15744 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15743)
!15745 = !DILocation(line: 834, column: 2, scope: !15707)
!15746 = distinct !DISubprogram(name: "z_pend_curr", scope: !2458, file: !2458, line: 840, type: !15747, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15749)
!15747 = !DISubroutineType(types: !15748)
!15748 = !{!103, !14721, !14710, !2384, !15509}
!15749 = !{!15750, !15751, !15752, !15753}
!15750 = !DILocalVariable(name: "lock", arg: 1, scope: !15746, file: !2458, line: 840, type: !14721)
!15751 = !DILocalVariable(name: "key", arg: 2, scope: !15746, file: !2458, line: 840, type: !14710)
!15752 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15746, file: !2458, line: 841, type: !2384)
!15753 = !DILocalVariable(name: "timeout", arg: 4, scope: !15746, file: !2458, line: 841, type: !15509)
!15754 = !DILocation(line: 0, scope: !15746)
!15755 = !DILocation(line: 844, column: 20, scope: !15746)
!15756 = !DILocation(line: 844, column: 18, scope: !15746)
!15757 = !DILocation(line: 0, scope: !14718, inlinedAt: !15758)
!15758 = distinct !DILocation(line: 856, column: 9, scope: !15746)
!15759 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15760)
!15760 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15758)
!15761 = !DILocation(line: 0, scope: !14727, inlinedAt: !15760)
!15762 = !DILocation(line: 857, column: 14, scope: !15746)
!15763 = !DILocation(line: 857, column: 2, scope: !15746)
!15764 = !DILocation(line: 0, scope: !15329, inlinedAt: !15765)
!15765 = distinct !DILocation(line: 859, column: 9, scope: !15746)
!15766 = !DILocation(line: 196, column: 9, scope: !15329, inlinedAt: !15765)
!15767 = !DILocation(line: 859, column: 2, scope: !15746)
!15768 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2458, file: !2458, line: 862, type: !15769, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15771)
!15769 = !DISubroutineType(types: !15770)
!15770 = !{!2353, !2384}
!15771 = !{!15772, !15773, !15774, !15776}
!15772 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15768, file: !2458, line: 862, type: !2384)
!15773 = !DILocalVariable(name: "thread", scope: !15768, file: !2458, line: 864, type: !2353)
!15774 = !DILocalVariable(name: "__i", scope: !15775, file: !2458, line: 866, type: !14710)
!15775 = distinct !DILexicalBlock(scope: !15768, file: !2458, line: 866, column: 2)
!15776 = !DILocalVariable(name: "__key", scope: !15775, file: !2458, line: 866, type: !14710)
!15777 = !DILocation(line: 0, scope: !15768)
!15778 = !DILocation(line: 0, scope: !15775)
!15779 = !DILocation(line: 0, scope: !14718, inlinedAt: !15780)
!15780 = distinct !DILocation(line: 866, column: 2, scope: !15775)
!15781 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15782)
!15782 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15780)
!15783 = !DILocation(line: 0, scope: !14727, inlinedAt: !15782)
!15784 = !DILocation(line: 867, column: 12, scope: !15785)
!15785 = distinct !DILexicalBlock(scope: !15786, file: !2458, line: 866, column: 26)
!15786 = distinct !DILexicalBlock(scope: !15775, file: !2458, line: 866, column: 2)
!15787 = !DILocation(line: 869, column: 14, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15785, file: !2458, line: 869, column: 7)
!15789 = !DILocation(line: 869, column: 7, scope: !15785)
!15790 = !DILocation(line: 870, column: 4, scope: !15791)
!15791 = distinct !DILexicalBlock(scope: !15788, file: !2458, line: 869, column: 23)
!15792 = !DILocation(line: 871, column: 3, scope: !15791)
!15793 = !DILocation(line: 0, scope: !14745, inlinedAt: !15794)
!15794 = distinct !DILocation(line: 866, column: 2, scope: !15786)
!15795 = !DILocation(line: 0, scope: !14753, inlinedAt: !15796)
!15796 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15794)
!15797 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15796)
!15798 = !DILocation(line: 874, column: 2, scope: !15768)
!15799 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2458, file: !2458, line: 877, type: !15769, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15800)
!15800 = !{!15801, !15802, !15803, !15805}
!15801 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15799, file: !2458, line: 877, type: !2384)
!15802 = !DILocalVariable(name: "thread", scope: !15799, file: !2458, line: 879, type: !2353)
!15803 = !DILocalVariable(name: "__i", scope: !15804, file: !2458, line: 881, type: !14710)
!15804 = distinct !DILexicalBlock(scope: !15799, file: !2458, line: 881, column: 2)
!15805 = !DILocalVariable(name: "__key", scope: !15804, file: !2458, line: 881, type: !14710)
!15806 = !DILocation(line: 0, scope: !15799)
!15807 = !DILocation(line: 0, scope: !15804)
!15808 = !DILocation(line: 0, scope: !14718, inlinedAt: !15809)
!15809 = distinct !DILocation(line: 881, column: 2, scope: !15804)
!15810 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15811)
!15811 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15809)
!15812 = !DILocation(line: 0, scope: !14727, inlinedAt: !15811)
!15813 = !DILocation(line: 882, column: 12, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15815, file: !2458, line: 881, column: 26)
!15815 = distinct !DILexicalBlock(scope: !15804, file: !2458, line: 881, column: 2)
!15816 = !DILocation(line: 884, column: 14, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15814, file: !2458, line: 884, column: 7)
!15818 = !DILocation(line: 884, column: 7, scope: !15814)
!15819 = !DILocation(line: 885, column: 4, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15817, file: !2458, line: 884, column: 23)
!15821 = !DILocation(line: 886, column: 10, scope: !15820)
!15822 = !DILocation(line: 887, column: 3, scope: !15820)
!15823 = !DILocation(line: 0, scope: !14745, inlinedAt: !15824)
!15824 = distinct !DILocation(line: 881, column: 2, scope: !15815)
!15825 = !DILocation(line: 0, scope: !14753, inlinedAt: !15826)
!15826 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15824)
!15827 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15826)
!15828 = !DILocation(line: 890, column: 2, scope: !15799)
!15829 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2458, file: !2458, line: 893, type: !14676, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15830)
!15830 = !{!15831}
!15831 = !DILocalVariable(name: "thread", arg: 1, scope: !15829, file: !2458, line: 893, type: !2353)
!15832 = !DILocation(line: 0, scope: !15829)
!15833 = !DILocation(line: 0, scope: !15685, inlinedAt: !15834)
!15834 = distinct !DILocation(line: 895, column: 2, scope: !15829)
!15835 = !DILocation(line: 0, scope: !15689, inlinedAt: !15834)
!15836 = !DILocation(line: 0, scope: !14718, inlinedAt: !15837)
!15837 = distinct !DILocation(line: 788, column: 2, scope: !15689, inlinedAt: !15834)
!15838 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15839)
!15839 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15837)
!15840 = !DILocation(line: 0, scope: !14727, inlinedAt: !15839)
!15841 = !DILocation(line: 789, column: 3, scope: !15699, inlinedAt: !15834)
!15842 = !DILocation(line: 0, scope: !14745, inlinedAt: !15843)
!15843 = distinct !DILocation(line: 788, column: 2, scope: !15700, inlinedAt: !15834)
!15844 = !DILocation(line: 0, scope: !14753, inlinedAt: !15845)
!15845 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15843)
!15846 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15845)
!15847 = !DILocation(line: 896, column: 8, scope: !15829)
!15848 = !DILocation(line: 897, column: 1, scope: !15829)
!15849 = distinct !DISubprogram(name: "z_set_prio", scope: !2458, file: !2458, line: 902, type: !15038, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15850)
!15850 = !{!15851, !15852, !15853, !15854, !15856}
!15851 = !DILocalVariable(name: "thread", arg: 1, scope: !15849, file: !2458, line: 902, type: !2353)
!15852 = !DILocalVariable(name: "prio", arg: 2, scope: !15849, file: !2458, line: 902, type: !103)
!15853 = !DILocalVariable(name: "need_sched", scope: !15849, file: !2458, line: 904, type: !166)
!15854 = !DILocalVariable(name: "__i", scope: !15855, file: !2458, line: 906, type: !14710)
!15855 = distinct !DILexicalBlock(scope: !15849, file: !2458, line: 906, column: 2)
!15856 = !DILocalVariable(name: "__key", scope: !15855, file: !2458, line: 906, type: !14710)
!15857 = !DILocation(line: 0, scope: !15849)
!15858 = !DILocation(line: 0, scope: !15855)
!15859 = !DILocation(line: 0, scope: !14718, inlinedAt: !15860)
!15860 = distinct !DILocation(line: 906, column: 2, scope: !15855)
!15861 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15862)
!15862 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15860)
!15863 = !DILocation(line: 0, scope: !14727, inlinedAt: !15862)
!15864 = !DILocation(line: 907, column: 16, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15866, file: !2458, line: 906, column: 26)
!15866 = distinct !DILexicalBlock(scope: !15855, file: !2458, line: 906, column: 2)
!15867 = !DILocation(line: 909, column: 7, scope: !15865)
!15868 = !DILocation(line: 0, scope: !14887, inlinedAt: !15869)
!15869 = distinct !DILocation(line: 912, column: 5, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15871, file: !2458, line: 911, column: 63)
!15871 = distinct !DILexicalBlock(scope: !15872, file: !2458, line: 911, column: 8)
!15872 = distinct !DILexicalBlock(scope: !15873, file: !2458, line: 909, column: 19)
!15873 = distinct !DILexicalBlock(scope: !15865, file: !2458, line: 909, column: 7)
!15874 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !15869)
!15875 = !DILocation(line: 0, scope: !14895, inlinedAt: !15876)
!15876 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !15869)
!15877 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !15876)
!15878 = !DILocation(line: 913, column: 23, scope: !15870)
!15879 = !DILocation(line: 0, scope: !14904, inlinedAt: !15880)
!15880 = distinct !DILocation(line: 914, column: 5, scope: !15870)
!15881 = !DILocation(line: 252, column: 28, scope: !14904, inlinedAt: !15880)
!15882 = !DILocation(line: 0, scope: !14911, inlinedAt: !15883)
!15883 = distinct !DILocation(line: 254, column: 3, scope: !14915, inlinedAt: !15880)
!15884 = !DILocation(line: 0, scope: !14918, inlinedAt: !15885)
!15885 = distinct !DILocation(line: 229, column: 2, scope: !14911, inlinedAt: !15883)
!15886 = !DILocation(line: 188, column: 2, scope: !14928, inlinedAt: !15885)
!15887 = !DILocation(line: 188, column: 2, scope: !14930, inlinedAt: !15885)
!15888 = !DILocation(line: 0, scope: !14928, inlinedAt: !15885)
!15889 = !DILocation(line: 189, column: 7, scope: !14933, inlinedAt: !15885)
!15890 = !DILocation(line: 189, column: 35, scope: !14933, inlinedAt: !15885)
!15891 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !15885)
!15892 = !DILocation(line: 190, column: 4, scope: !14938, inlinedAt: !15885)
!15893 = !DILocation(line: 192, column: 4, scope: !14938, inlinedAt: !15885)
!15894 = distinct !{!15894, !15886, !15895}
!15895 = !DILocation(line: 194, column: 2, scope: !14928, inlinedAt: !15885)
!15896 = !DILocation(line: 196, column: 2, scope: !14918, inlinedAt: !15885)
!15897 = !DILocation(line: 197, column: 1, scope: !14918, inlinedAt: !15885)
!15898 = !DILocation(line: 918, column: 4, scope: !15872)
!15899 = !DILocation(line: 919, column: 3, scope: !15872)
!15900 = !DILocation(line: 920, column: 22, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15873, file: !2458, line: 919, column: 10)
!15902 = !DILocation(line: 0, scope: !14745, inlinedAt: !15903)
!15903 = distinct !DILocation(line: 906, column: 2, scope: !15866)
!15904 = !DILocation(line: 0, scope: !14753, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15903)
!15906 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15905)
!15907 = !DILocation(line: 926, column: 2, scope: !15849)
!15908 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2458, file: !2458, line: 929, type: !15909, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15911)
!15909 = !DISubroutineType(types: !15910)
!15910 = !{null, !2353, !103}
!15911 = !{!15912, !15913, !15914}
!15912 = !DILocalVariable(name: "thread", arg: 1, scope: !15908, file: !2458, line: 929, type: !2353)
!15913 = !DILocalVariable(name: "prio", arg: 2, scope: !15908, file: !2458, line: 929, type: !103)
!15914 = !DILocalVariable(name: "need_sched", scope: !15908, file: !2458, line: 931, type: !166)
!15915 = !DILocation(line: 0, scope: !15908)
!15916 = !DILocation(line: 931, column: 20, scope: !15908)
!15917 = !DILocation(line: 935, column: 17, scope: !15918)
!15918 = distinct !DILexicalBlock(scope: !15908, file: !2458, line: 935, column: 6)
!15919 = !DILocation(line: 935, column: 20, scope: !15918)
!15920 = !DILocation(line: 935, column: 35, scope: !15918)
!15921 = !DILocation(line: 935, column: 48, scope: !15918)
!15922 = !DILocation(line: 935, column: 6, scope: !15908)
!15923 = !DILocation(line: 936, column: 3, scope: !15924)
!15924 = distinct !DILexicalBlock(scope: !15918, file: !2458, line: 935, column: 55)
!15925 = !DILocation(line: 937, column: 2, scope: !15924)
!15926 = !DILocation(line: 938, column: 1, scope: !15908)
!15927 = distinct !DISubprogram(name: "k_sched_lock", scope: !2458, file: !2458, line: 987, type: !3232, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15928)
!15928 = !{!15929, !15931}
!15929 = !DILocalVariable(name: "__i", scope: !15930, file: !2458, line: 989, type: !14710)
!15930 = distinct !DILexicalBlock(scope: !15927, file: !2458, line: 989, column: 2)
!15931 = !DILocalVariable(name: "__key", scope: !15930, file: !2458, line: 989, type: !14710)
!15932 = !DILocation(line: 0, scope: !15930)
!15933 = !DILocation(line: 0, scope: !14718, inlinedAt: !15934)
!15934 = distinct !DILocation(line: 989, column: 2, scope: !15930)
!15935 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15936)
!15936 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15934)
!15937 = !DILocation(line: 0, scope: !14727, inlinedAt: !15936)
!15938 = !DILocation(line: 992, column: 3, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15940, file: !2458, line: 989, column: 26)
!15940 = distinct !DILexicalBlock(scope: !15930, file: !2458, line: 989, column: 2)
!15941 = !DILocation(line: 0, scope: !14745, inlinedAt: !15942)
!15942 = distinct !DILocation(line: 989, column: 2, scope: !15940)
!15943 = !DILocation(line: 0, scope: !14753, inlinedAt: !15944)
!15944 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15942)
!15945 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15944)
!15946 = !DILocation(line: 994, column: 1, scope: !15927)
!15947 = distinct !DISubprogram(name: "z_sched_lock", scope: !13726, file: !13726, line: 251, type: !3232, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !473)
!15948 = !DILocation(line: 256, column: 4, scope: !15947)
!15949 = !DILocation(line: 256, column: 19, scope: !15947)
!15950 = !DILocation(line: 256, column: 2, scope: !15947)
!15951 = !DILocation(line: 258, column: 2, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15947, file: !13726, line: 258, column: 2)
!15953 = !{i64 2154189421}
!15954 = !DILocation(line: 259, column: 1, scope: !15947)
!15955 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2458, file: !2458, line: 996, type: !3232, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15956)
!15956 = !{!15957, !15959}
!15957 = !DILocalVariable(name: "__i", scope: !15958, file: !2458, line: 998, type: !14710)
!15958 = distinct !DILexicalBlock(scope: !15955, file: !2458, line: 998, column: 2)
!15959 = !DILocalVariable(name: "__key", scope: !15958, file: !2458, line: 998, type: !14710)
!15960 = !DILocation(line: 0, scope: !15958)
!15961 = !DILocation(line: 0, scope: !14718, inlinedAt: !15962)
!15962 = distinct !DILocation(line: 998, column: 2, scope: !15958)
!15963 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !15964)
!15964 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !15962)
!15965 = !DILocation(line: 0, scope: !14727, inlinedAt: !15964)
!15966 = !DILocation(line: 1002, column: 5, scope: !15967)
!15967 = distinct !DILexicalBlock(scope: !15968, file: !2458, line: 998, column: 26)
!15968 = distinct !DILexicalBlock(scope: !15958, file: !2458, line: 998, column: 2)
!15969 = !DILocation(line: 1002, column: 20, scope: !15967)
!15970 = !DILocation(line: 1002, column: 3, scope: !15967)
!15971 = !DILocation(line: 1003, column: 3, scope: !15967)
!15972 = !DILocation(line: 0, scope: !14745, inlinedAt: !15973)
!15973 = distinct !DILocation(line: 998, column: 2, scope: !15968)
!15974 = !DILocation(line: 0, scope: !14753, inlinedAt: !15975)
!15975 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !15973)
!15976 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !15975)
!15977 = !DILocation(line: 1011, column: 2, scope: !15955)
!15978 = !DILocation(line: 1012, column: 1, scope: !15955)
!15979 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2458, file: !2458, line: 1014, type: !15026, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !473)
!15980 = !DILocation(line: 1028, column: 25, scope: !15979)
!15981 = !DILocation(line: 1028, column: 2, scope: !15979)
!15982 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2458, file: !2458, line: 1155, type: !15983, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !15985)
!15983 = !DISubroutineType(types: !15984)
!15984 = !{!166, !2382, !2382}
!15985 = !{!15986, !15987, !15988, !15989, !15990}
!15986 = !DILocalVariable(name: "a", arg: 1, scope: !15982, file: !2458, line: 1155, type: !2382)
!15987 = !DILocalVariable(name: "b", arg: 2, scope: !15982, file: !2458, line: 1155, type: !2382)
!15988 = !DILocalVariable(name: "thread_a", scope: !15982, file: !2458, line: 1157, type: !2353)
!15989 = !DILocalVariable(name: "thread_b", scope: !15982, file: !2458, line: 1157, type: !2353)
!15990 = !DILocalVariable(name: "cmp", scope: !15982, file: !2458, line: 1158, type: !344)
!15991 = !DILocation(line: 0, scope: !15982)
!15992 = !DILocation(line: 1160, column: 13, scope: !15982)
!15993 = !DILocation(line: 1161, column: 13, scope: !15982)
!15994 = !DILocation(line: 1163, column: 8, scope: !15982)
!15995 = !DILocation(line: 1165, column: 10, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15982, file: !2458, line: 1165, column: 6)
!15997 = !DILocation(line: 1165, column: 6, scope: !15982)
!15998 = !DILocation(line: 1167, column: 17, scope: !15999)
!15999 = distinct !DILexicalBlock(scope: !15996, file: !2458, line: 1167, column: 13)
!16000 = !DILocation(line: 1167, column: 13, scope: !15996)
!16001 = !DILocation(line: 1170, column: 25, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !15999, file: !2458, line: 1169, column: 9)
!16003 = !DILocation(line: 1170, column: 52, scope: !16002)
!16004 = !DILocation(line: 1170, column: 35, scope: !16002)
!16005 = !DILocation(line: 1170, column: 3, scope: !16002)
!16006 = !DILocation(line: 0, scope: !15996)
!16007 = !DILocation(line: 1173, column: 1, scope: !15982)
!16008 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2458, file: !2458, line: 1175, type: !16009, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16024)
!16009 = !DISubroutineType(types: !16010)
!16010 = !{null, !16011, !2353}
!16011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16012, size: 32)
!16012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16013, line: 37, size: 128, elements: !16014)
!16013 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16014 = !{!16015, !16023}
!16015 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16012, file: !16013, line: 38, baseType: !16016, size: 96)
!16016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !392, line: 83, size: 96, elements: !16017)
!16017 = !{!16018, !16019, !16022}
!16018 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16016, file: !392, line: 84, baseType: !2382, size: 32)
!16019 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16016, file: !392, line: 85, baseType: !16020, size: 32, offset: 32)
!16020 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !392, line: 81, baseType: !16021)
!16021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15983, size: 32)
!16022 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16016, file: !392, line: 86, baseType: !103, size: 32, offset: 64)
!16023 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16012, file: !16013, line: 39, baseType: !103, size: 32, offset: 96)
!16024 = !{!16025, !16026, !16027, !16028, !16037}
!16025 = !DILocalVariable(name: "pq", arg: 1, scope: !16008, file: !2458, line: 1175, type: !16011)
!16026 = !DILocalVariable(name: "thread", arg: 2, scope: !16008, file: !2458, line: 1175, type: !2353)
!16027 = !DILocalVariable(name: "t", scope: !16008, file: !2458, line: 1177, type: !2353)
!16028 = !DILocalVariable(name: "__f", scope: !16029, file: !2458, line: 1190, type: !16032)
!16029 = distinct !DILexicalBlock(scope: !16030, file: !2458, line: 1190, column: 3)
!16030 = distinct !DILexicalBlock(scope: !16031, file: !2458, line: 1189, column: 27)
!16031 = distinct !DILexicalBlock(scope: !16008, file: !2458, line: 1189, column: 6)
!16032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !392, line: 155, size: 96, elements: !16033)
!16033 = !{!16034, !16035, !16036}
!16034 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16032, file: !392, line: 156, baseType: !2453, size: 32)
!16035 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16032, file: !392, line: 157, baseType: !270, size: 32, offset: 32)
!16036 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16032, file: !392, line: 158, baseType: !344, size: 32, offset: 64)
!16037 = !DILocalVariable(name: "n", scope: !16038, file: !2458, line: 1190, type: !2382)
!16038 = distinct !DILexicalBlock(scope: !16039, file: !2458, line: 1190, column: 3)
!16039 = distinct !DILexicalBlock(scope: !16029, file: !2458, line: 1190, column: 3)
!16040 = !DILocation(line: 0, scope: !16008)
!16041 = !DILocation(line: 1181, column: 31, scope: !16008)
!16042 = !DILocation(line: 1181, column: 45, scope: !16008)
!16043 = !DILocation(line: 1181, column: 15, scope: !16008)
!16044 = !DILocation(line: 1181, column: 25, scope: !16008)
!16045 = !DILocation(line: 1189, column: 11, scope: !16031)
!16046 = !DILocation(line: 1189, column: 7, scope: !16031)
!16047 = !DILocation(line: 1189, column: 6, scope: !16008)
!16048 = !DILocation(line: 1190, column: 3, scope: !16029)
!16049 = !DILocation(line: 1190, column: 3, scope: !16038)
!16050 = !DILocation(line: 0, scope: !16038)
!16051 = !DILocation(line: 1190, column: 3, scope: !16039)
!16052 = !DILocation(line: 1193, column: 2, scope: !16030)
!16053 = !DILocation(line: 1191, column: 42, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16039, file: !2458, line: 1190, column: 54)
!16055 = !DILocation(line: 1191, column: 12, scope: !16054)
!16056 = !DILocation(line: 1191, column: 22, scope: !16054)
!16057 = distinct !{!16057, !16048, !16058}
!16058 = !DILocation(line: 1192, column: 3, scope: !16029)
!16059 = !DILocation(line: 1195, column: 17, scope: !16008)
!16060 = !DILocation(line: 1195, column: 37, scope: !16008)
!16061 = !DILocation(line: 1195, column: 2, scope: !16008)
!16062 = !DILocation(line: 1196, column: 1, scope: !16008)
!16063 = !DISubprogram(name: "z_rb_foreach_next", scope: !392, file: !392, line: 176, type: !16064, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16064 = !DISubroutineType(types: !16065)
!16065 = !{!2382, !16066, !16067}
!16066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16016, size: 32)
!16067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16032, size: 32)
!16068 = !DISubprogram(name: "rb_insert", scope: !392, file: !392, line: 105, type: !16069, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16069 = !DISubroutineType(types: !16070)
!16070 = !{null, !16066, !2382}
!16071 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2458, file: !2458, line: 1198, type: !16009, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16072)
!16072 = !{!16073, !16074}
!16073 = !DILocalVariable(name: "pq", arg: 1, scope: !16071, file: !2458, line: 1198, type: !16011)
!16074 = !DILocalVariable(name: "thread", arg: 2, scope: !16071, file: !2458, line: 1198, type: !2353)
!16075 = !DILocation(line: 0, scope: !16071)
!16076 = !DILocation(line: 1202, column: 17, scope: !16071)
!16077 = !DILocation(line: 1202, column: 37, scope: !16071)
!16078 = !DILocation(line: 1202, column: 2, scope: !16071)
!16079 = !DILocation(line: 1204, column: 16, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16071, file: !2458, line: 1204, column: 6)
!16081 = !DILocation(line: 1204, column: 7, scope: !16080)
!16082 = !DILocation(line: 1204, column: 6, scope: !16071)
!16083 = !DILocation(line: 1205, column: 7, scope: !16084)
!16084 = distinct !DILexicalBlock(scope: !16080, file: !2458, line: 1204, column: 22)
!16085 = !DILocation(line: 1205, column: 22, scope: !16084)
!16086 = !DILocation(line: 1206, column: 2, scope: !16084)
!16087 = !DILocation(line: 1207, column: 1, scope: !16071)
!16088 = !DISubprogram(name: "rb_remove", scope: !392, file: !392, line: 110, type: !16069, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16089 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2458, file: !2458, line: 1209, type: !16090, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16092)
!16090 = !DISubroutineType(types: !16091)
!16091 = !{!2353, !16011}
!16092 = !{!16093, !16094, !16095}
!16093 = !DILocalVariable(name: "pq", arg: 1, scope: !16089, file: !2458, line: 1209, type: !16011)
!16094 = !DILocalVariable(name: "thread", scope: !16089, file: !2458, line: 1211, type: !2353)
!16095 = !DILocalVariable(name: "n", scope: !16089, file: !2458, line: 1212, type: !2382)
!16096 = !DILocation(line: 0, scope: !16089)
!16097 = !DILocation(line: 1212, column: 37, scope: !16089)
!16098 = !DILocation(line: 1212, column: 21, scope: !16089)
!16099 = !DILocation(line: 1217, column: 2, scope: !16089)
!16100 = distinct !DISubprogram(name: "rb_get_min", scope: !392, file: !392, line: 115, type: !16101, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16103)
!16101 = !DISubroutineType(types: !16102)
!16102 = !{!2382, !16066}
!16103 = !{!16104}
!16104 = !DILocalVariable(name: "tree", arg: 1, scope: !16100, file: !392, line: 115, type: !16066)
!16105 = !DILocation(line: 0, scope: !16100)
!16106 = !DILocation(line: 117, column: 9, scope: !16100)
!16107 = !DILocation(line: 117, column: 2, scope: !16100)
!16108 = !DISubprogram(name: "z_rb_get_minmax", scope: !392, file: !392, line: 100, type: !16109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !473)
!16109 = !DISubroutineType(types: !16110)
!16110 = !{!2382, !16066, !163}
!16111 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2458, file: !2458, line: 1246, type: !16112, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16122)
!16112 = !DISubroutineType(types: !16113)
!16113 = !{!2353, !16114}
!16114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16115, size: 32)
!16115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16013, line: 53, size: 2080, elements: !16116)
!16116 = !{!16117, !16121}
!16117 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16115, file: !16013, line: 54, baseType: !16118, size: 2048)
!16118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2389, size: 2048, elements: !16119)
!16119 = !{!16120}
!16120 = !DISubrange(count: 32)
!16121 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16115, file: !16013, line: 55, baseType: !32, size: 32, offset: 2048)
!16122 = !{!16123, !16124, !16125, !16126}
!16123 = !DILocalVariable(name: "pq", arg: 1, scope: !16111, file: !2458, line: 1246, type: !16114)
!16124 = !DILocalVariable(name: "thread", scope: !16111, file: !2458, line: 1252, type: !2353)
!16125 = !DILocalVariable(name: "l", scope: !16111, file: !2458, line: 1253, type: !14921)
!16126 = !DILocalVariable(name: "n", scope: !16111, file: !2458, line: 1254, type: !2454)
!16127 = !DILocation(line: 0, scope: !16111)
!16128 = !DILocation(line: 1248, column: 11, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16111, file: !2458, line: 1248, column: 6)
!16130 = !DILocation(line: 1248, column: 7, scope: !16129)
!16131 = !DILocation(line: 1248, column: 6, scope: !16111)
!16132 = !DILocation(line: 1253, column: 31, scope: !16111)
!16133 = !DILocation(line: 1253, column: 20, scope: !16111)
!16134 = !DILocation(line: 1254, column: 19, scope: !16111)
!16135 = !DILocation(line: 1260, column: 1, scope: !16111)
!16136 = distinct !DISubprogram(name: "z_unpend_all", scope: !2458, file: !2458, line: 1262, type: !16137, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16139)
!16137 = !DISubroutineType(types: !16138)
!16138 = !{!103, !2384}
!16139 = !{!16140, !16141, !16142}
!16140 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16136, file: !2458, line: 1262, type: !2384)
!16141 = !DILocalVariable(name: "need_sched", scope: !16136, file: !2458, line: 1264, type: !103)
!16142 = !DILocalVariable(name: "thread", scope: !16136, file: !2458, line: 1265, type: !2353)
!16143 = !DILocation(line: 0, scope: !16136)
!16144 = !DILocation(line: 1267, column: 19, scope: !16136)
!16145 = !DILocation(line: 1267, column: 41, scope: !16136)
!16146 = !DILocation(line: 1267, column: 2, scope: !16136)
!16147 = !DILocation(line: 1268, column: 3, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16136, file: !2458, line: 1267, column: 50)
!16149 = !DILocation(line: 1269, column: 3, scope: !16148)
!16150 = distinct !{!16150, !16146, !16151}
!16151 = !DILocation(line: 1271, column: 2, scope: !16136)
!16152 = !DILocation(line: 1273, column: 2, scope: !16136)
!16153 = distinct !DISubprogram(name: "z_waitq_head", scope: !14052, file: !14052, line: 52, type: !15769, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16154)
!16154 = !{!16155}
!16155 = !DILocalVariable(name: "w", arg: 1, scope: !16153, file: !14052, line: 52, type: !2384)
!16156 = !DILocation(line: 0, scope: !16153)
!16157 = !DILocation(line: 54, column: 52, scope: !16153)
!16158 = !DILocation(line: 54, column: 28, scope: !16153)
!16159 = !DILocation(line: 54, column: 9, scope: !16153)
!16160 = !DILocation(line: 54, column: 2, scope: !16153)
!16161 = distinct !DISubprogram(name: "init_ready_q", scope: !2458, file: !2458, line: 1276, type: !16162, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16169)
!16162 = !DISubroutineType(types: !16163)
!16163 = !{null, !16164}
!16164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16165, size: 32)
!16165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !316, line: 83, size: 96, elements: !16166)
!16166 = !{!16167, !16168}
!16167 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16165, file: !316, line: 86, baseType: !2353, size: 32)
!16168 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16165, file: !316, line: 90, baseType: !2389, size: 64, offset: 32)
!16169 = !{!16170}
!16170 = !DILocalVariable(name: "rq", arg: 1, scope: !16161, file: !2458, line: 1276, type: !16164)
!16171 = !DILocation(line: 0, scope: !16161)
!16172 = !DILocation(line: 1289, column: 22, scope: !16161)
!16173 = !DILocation(line: 1289, column: 2, scope: !16161)
!16174 = !DILocation(line: 1291, column: 1, scope: !16161)
!16175 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !16176, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16178)
!16176 = !DISubroutineType(types: !16177)
!16177 = !{null, !14921}
!16178 = !{!16179}
!16179 = !DILocalVariable(name: "list", arg: 1, scope: !16175, file: !321, line: 197, type: !14921)
!16180 = !DILocation(line: 0, scope: !16175)
!16181 = !DILocation(line: 199, column: 8, scope: !16175)
!16182 = !DILocation(line: 199, column: 13, scope: !16175)
!16183 = !DILocation(line: 200, column: 8, scope: !16175)
!16184 = !DILocation(line: 200, column: 13, scope: !16175)
!16185 = !DILocation(line: 201, column: 1, scope: !16175)
!16186 = distinct !DISubprogram(name: "z_sched_init", scope: !2458, file: !2458, line: 1293, type: !3232, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !473)
!16187 = !DILocation(line: 1302, column: 2, scope: !16186)
!16188 = !DILocation(line: 1306, column: 2, scope: !16186)
!16189 = !DILocation(line: 1309, column: 1, scope: !16186)
!16190 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2458, file: !2458, line: 1311, type: !16191, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16194)
!16191 = !DISubroutineType(types: !16192)
!16192 = !{!103, !16193}
!16193 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !367, line: 347, baseType: !2353)
!16194 = !{!16195}
!16195 = !DILocalVariable(name: "thread", arg: 1, scope: !16190, file: !2458, line: 1311, type: !16193)
!16196 = !DILocation(line: 0, scope: !16190)
!16197 = !DILocation(line: 1313, column: 22, scope: !16190)
!16198 = !DILocation(line: 1313, column: 9, scope: !16190)
!16199 = !DILocation(line: 1313, column: 2, scope: !16190)
!16200 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2458, file: !2458, line: 1325, type: !16201, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16203)
!16201 = !DISubroutineType(types: !16202)
!16202 = !{null, !16193, !103}
!16203 = !{!16204, !16205, !16206}
!16204 = !DILocalVariable(name: "thread", arg: 1, scope: !16200, file: !2458, line: 1325, type: !16193)
!16205 = !DILocalVariable(name: "prio", arg: 2, scope: !16200, file: !2458, line: 1325, type: !103)
!16206 = !DILocalVariable(name: "th", scope: !16200, file: !2458, line: 1334, type: !2353)
!16207 = !DILocation(line: 0, scope: !16200)
!16208 = !DILocation(line: 1336, column: 2, scope: !16200)
!16209 = !DILocation(line: 1337, column: 1, scope: !16200)
!16210 = distinct !DISubprogram(name: "k_can_yield", scope: !2458, file: !2458, line: 1384, type: !7604, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !473)
!16211 = !DILocation(line: 1386, column: 11, scope: !16210)
!16212 = !DILocation(line: 1386, column: 29, scope: !16210)
!16213 = !DILocation(line: 1386, column: 32, scope: !16210)
!16214 = !DILocation(line: 1386, column: 46, scope: !16210)
!16215 = !DILocation(line: 1387, column: 28, scope: !16210)
!16216 = !DILocation(line: 1387, column: 4, scope: !16210)
!16217 = !DILocation(line: 1386, column: 2, scope: !16210)
!16218 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !312, file: !312, line: 989, type: !7604, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !473)
!16219 = !DILocation(line: 993, column: 10, scope: !16218)
!16220 = !DILocation(line: 993, column: 2, scope: !16218)
!16221 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2458, file: !2458, line: 1390, type: !3232, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16222)
!16222 = !{!16223}
!16223 = !DILocalVariable(name: "key", scope: !16221, file: !2458, line: 1396, type: !14710)
!16224 = !DILocation(line: 0, scope: !14718, inlinedAt: !16225)
!16225 = distinct !DILocation(line: 1396, column: 25, scope: !16221)
!16226 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !16227)
!16227 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !16225)
!16228 = !DILocation(line: 0, scope: !14727, inlinedAt: !16227)
!16229 = !DILocation(line: 0, scope: !16221)
!16230 = !DILocation(line: 1400, column: 18, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16232, file: !2458, line: 1399, column: 36)
!16232 = distinct !DILexicalBlock(scope: !16221, file: !2458, line: 1398, column: 6)
!16233 = !DILocation(line: 0, scope: !14887, inlinedAt: !16234)
!16234 = distinct !DILocation(line: 1400, column: 3, scope: !16231)
!16235 = !DILocation(line: 266, column: 15, scope: !14887, inlinedAt: !16234)
!16236 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !16234)
!16237 = !DILocation(line: 0, scope: !14895, inlinedAt: !16238)
!16238 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !16234)
!16239 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !16238)
!16240 = !DILocation(line: 1402, column: 15, scope: !16221)
!16241 = !DILocation(line: 0, scope: !14904, inlinedAt: !16242)
!16242 = distinct !DILocation(line: 1402, column: 2, scope: !16221)
!16243 = !DILocation(line: 252, column: 15, scope: !14904, inlinedAt: !16242)
!16244 = !DILocation(line: 252, column: 28, scope: !14904, inlinedAt: !16242)
!16245 = !DILocation(line: 0, scope: !14911, inlinedAt: !16246)
!16246 = distinct !DILocation(line: 254, column: 3, scope: !14915, inlinedAt: !16242)
!16247 = !DILocation(line: 0, scope: !14918, inlinedAt: !16248)
!16248 = distinct !DILocation(line: 229, column: 2, scope: !14911, inlinedAt: !16246)
!16249 = !DILocation(line: 188, column: 2, scope: !14928, inlinedAt: !16248)
!16250 = !DILocation(line: 188, column: 2, scope: !14930, inlinedAt: !16248)
!16251 = !DILocation(line: 0, scope: !14928, inlinedAt: !16248)
!16252 = !DILocation(line: 189, column: 7, scope: !14933, inlinedAt: !16248)
!16253 = !DILocation(line: 189, column: 35, scope: !14933, inlinedAt: !16248)
!16254 = !DILocation(line: 189, column: 7, scope: !14934, inlinedAt: !16248)
!16255 = !DILocation(line: 191, column: 21, scope: !14938, inlinedAt: !16248)
!16256 = !DILocation(line: 190, column: 4, scope: !14938, inlinedAt: !16248)
!16257 = !DILocation(line: 192, column: 4, scope: !14938, inlinedAt: !16248)
!16258 = distinct !{!16258, !16249, !16259}
!16259 = !DILocation(line: 194, column: 2, scope: !14928, inlinedAt: !16248)
!16260 = !DILocation(line: 196, column: 37, scope: !14918, inlinedAt: !16248)
!16261 = !DILocation(line: 196, column: 2, scope: !14918, inlinedAt: !16248)
!16262 = !DILocation(line: 197, column: 1, scope: !14918, inlinedAt: !16248)
!16263 = !DILocation(line: 1403, column: 2, scope: !16221)
!16264 = !DILocation(line: 0, scope: !15329, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 1404, column: 2, scope: !16221)
!16266 = !DILocation(line: 196, column: 9, scope: !15329, inlinedAt: !16265)
!16267 = !DILocation(line: 1405, column: 1, scope: !16221)
!16268 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2458, file: !2458, line: 1459, type: !16269, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16271)
!16269 = !DISubroutineType(types: !16270)
!16270 = !{!344, !15509}
!16271 = !{!16272, !16273, !16274}
!16272 = !DILocalVariable(name: "timeout", arg: 1, scope: !16268, file: !2458, line: 1459, type: !15509)
!16273 = !DILocalVariable(name: "ticks", scope: !16268, file: !2458, line: 1461, type: !1688)
!16274 = !DILocalVariable(name: "ret", scope: !16268, file: !2458, line: 1480, type: !344)
!16275 = !DILocation(line: 0, scope: !16268)
!16276 = !DILocation(line: 1468, column: 6, scope: !16277)
!16277 = distinct !DILexicalBlock(scope: !16268, file: !2458, line: 1468, column: 6)
!16278 = !DILocation(line: 1468, column: 6, scope: !16268)
!16279 = !DILocation(line: 1469, column: 20, scope: !16280)
!16280 = distinct !DILexicalBlock(scope: !16277, file: !2458, line: 1468, column: 40)
!16281 = !DILocation(line: 1469, column: 3, scope: !16280)
!16282 = !DILocation(line: 1473, column: 3, scope: !16280)
!16283 = !DILocation(line: 1478, column: 10, scope: !16268)
!16284 = !DILocation(line: 1480, column: 16, scope: !16268)
!16285 = !DILocation(line: 1485, column: 1, scope: !16268)
!16286 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3672, file: !3672, line: 310, type: !16287, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16289)
!16287 = !DISubroutineType(types: !16288)
!16288 = !{null, !16193}
!16289 = !{!16290}
!16290 = !DILocalVariable(name: "thread", arg: 1, scope: !16286, file: !3672, line: 310, type: !16193)
!16291 = !DILocation(line: 0, scope: !16286)
!16292 = !DILocation(line: 319, column: 2, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !16286, file: !3672, line: 319, column: 2)
!16294 = !{i64 2154107810}
!16295 = !DILocation(line: 320, column: 2, scope: !16286)
!16296 = !DILocation(line: 321, column: 1, scope: !16286)
!16297 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2458, file: !2458, line: 1415, type: !16298, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16300)
!16298 = !DISubroutineType(types: !16299)
!16299 = !{!344, !1688}
!16300 = !{!16301, !16302, !16303, !16304}
!16301 = !DILocalVariable(name: "ticks", arg: 1, scope: !16297, file: !2458, line: 1415, type: !1688)
!16302 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16297, file: !2458, line: 1418, type: !132)
!16303 = !DILocalVariable(name: "timeout", scope: !16297, file: !2458, line: 1430, type: !15509)
!16304 = !DILocalVariable(name: "key", scope: !16297, file: !2458, line: 1437, type: !14710)
!16305 = !DILocation(line: 0, scope: !16297)
!16306 = !DILocation(line: 1425, column: 12, scope: !16307)
!16307 = distinct !DILexicalBlock(scope: !16297, file: !2458, line: 1425, column: 6)
!16308 = !DILocation(line: 1425, column: 6, scope: !16297)
!16309 = !DILocation(line: 1426, column: 3, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16307, file: !2458, line: 1425, column: 18)
!16311 = !DILocation(line: 1427, column: 3, scope: !16310)
!16312 = !DILocation(line: 1431, column: 24, scope: !16313)
!16313 = distinct !DILexicalBlock(scope: !16297, file: !2458, line: 1431, column: 6)
!16314 = !DILocation(line: 1431, column: 6, scope: !16297)
!16315 = !DILocation(line: 1432, column: 35, scope: !16316)
!16316 = distinct !DILexicalBlock(scope: !16313, file: !2458, line: 1431, column: 30)
!16317 = !DILocation(line: 1432, column: 27, scope: !16316)
!16318 = !DILocation(line: 1433, column: 2, scope: !16316)
!16319 = !DILocation(line: 1434, column: 27, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16313, file: !2458, line: 1433, column: 9)
!16321 = !DILocation(line: 0, scope: !16313)
!16322 = !DILocation(line: 0, scope: !14718, inlinedAt: !16323)
!16323 = distinct !DILocation(line: 1437, column: 25, scope: !16297)
!16324 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !16325)
!16325 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !16323)
!16326 = !DILocation(line: 0, scope: !14727, inlinedAt: !16325)
!16327 = !DILocation(line: 1440, column: 20, scope: !16297)
!16328 = !DILocation(line: 1440, column: 18, scope: !16297)
!16329 = !DILocation(line: 1442, column: 2, scope: !16297)
!16330 = !DILocation(line: 1443, column: 23, scope: !16297)
!16331 = !DILocation(line: 1443, column: 2, scope: !16297)
!16332 = !DILocation(line: 1444, column: 29, scope: !16297)
!16333 = !DILocation(line: 1444, column: 2, scope: !16297)
!16334 = !DILocation(line: 0, scope: !15329, inlinedAt: !16335)
!16335 = distinct !DILocation(line: 1446, column: 8, scope: !16297)
!16336 = !DILocation(line: 196, column: 9, scope: !15329, inlinedAt: !16335)
!16337 = !DILocation(line: 1450, column: 10, scope: !16297)
!16338 = !DILocation(line: 1450, column: 45, scope: !16297)
!16339 = !DILocation(line: 1450, column: 43, scope: !16297)
!16340 = !DILocation(line: 1451, column: 6, scope: !16297)
!16341 = !DILocation(line: 1457, column: 1, scope: !16297)
!16342 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !5989, file: !5989, line: 1103, type: !5990, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16343)
!16343 = !{!16344}
!16344 = !DILocalVariable(name: "t", arg: 1, scope: !16342, file: !5989, line: 1103, type: !1585)
!16345 = !DILocation(line: 0, scope: !16342)
!16346 = !DILocation(line: 0, scope: !14765, inlinedAt: !16347)
!16347 = distinct !DILocation(line: 1106, column: 9, scope: !16342)
!16348 = !DILocation(line: 139, column: 13, scope: !16349, inlinedAt: !16347)
!16349 = distinct !DILexicalBlock(scope: !16350, file: !5989, line: 138, column: 10)
!16350 = distinct !DILexicalBlock(scope: !16351, file: !5989, line: 136, column: 7)
!16351 = distinct !DILexicalBlock(scope: !14786, file: !5989, line: 134, column: 17)
!16352 = !DILocation(line: 1106, column: 2, scope: !16342)
!16353 = distinct !DISubprogram(name: "k_yield", scope: !3672, file: !3672, line: 140, type: !3232, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !473)
!16354 = !DILocation(line: 148, column: 2, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16353, file: !3672, line: 148, column: 2)
!16356 = !{i64 2154107130}
!16357 = !DILocation(line: 149, column: 2, scope: !16353)
!16358 = !DILocation(line: 150, column: 1, scope: !16353)
!16359 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2458, file: !2458, line: 1495, type: !16360, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16362)
!16360 = !DISubroutineType(types: !16361)
!16361 = !{!344, !103}
!16362 = !{!16363, !16364}
!16363 = !DILocalVariable(name: "us", arg: 1, scope: !16359, file: !2458, line: 1495, type: !103)
!16364 = !DILocalVariable(name: "ticks", scope: !16359, file: !2458, line: 1497, type: !344)
!16365 = !DILocation(line: 0, scope: !16359)
!16366 = !DILocation(line: 1501, column: 31, scope: !16359)
!16367 = !DILocation(line: 1501, column: 10, scope: !16359)
!16368 = !DILocation(line: 1502, column: 23, scope: !16359)
!16369 = !DILocation(line: 1502, column: 10, scope: !16359)
!16370 = !DILocation(line: 1506, column: 31, scope: !16359)
!16371 = !DILocation(line: 1506, column: 9, scope: !16359)
!16372 = !DILocation(line: 1506, column: 2, scope: !16359)
!16373 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !5989, file: !5989, line: 571, type: !5990, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16374)
!16374 = !{!16375}
!16375 = !DILocalVariable(name: "t", arg: 1, scope: !16373, file: !5989, line: 571, type: !1585)
!16376 = !DILocation(line: 0, scope: !16373)
!16377 = !DILocation(line: 0, scope: !14765, inlinedAt: !16378)
!16378 = distinct !DILocation(line: 574, column: 9, scope: !16373)
!16379 = !DILocation(line: 135, column: 5, scope: !16351, inlinedAt: !16378)
!16380 = !DILocation(line: 139, column: 13, scope: !16349, inlinedAt: !16378)
!16381 = !DILocation(line: 574, column: 2, scope: !16373)
!16382 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !5989, file: !5989, line: 1187, type: !5990, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16383)
!16383 = !{!16384}
!16384 = !DILocalVariable(name: "t", arg: 1, scope: !16382, file: !5989, line: 1187, type: !1585)
!16385 = !DILocation(line: 0, scope: !16382)
!16386 = !DILocation(line: 0, scope: !14765, inlinedAt: !16387)
!16387 = distinct !DILocation(line: 1190, column: 9, scope: !16382)
!16388 = !DILocation(line: 145, column: 13, scope: !16389, inlinedAt: !16387)
!16389 = distinct !DILexicalBlock(scope: !14783, file: !5989, line: 144, column: 10)
!16390 = !DILocation(line: 1190, column: 2, scope: !16382)
!16391 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2458, file: !2458, line: 1517, type: !16287, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16392)
!16392 = !{!16393}
!16393 = !DILocalVariable(name: "thread", arg: 1, scope: !16391, file: !2458, line: 1517, type: !16193)
!16394 = !DILocation(line: 0, scope: !16391)
!16395 = !DILocation(line: 1521, column: 6, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16391, file: !2458, line: 1521, column: 6)
!16397 = !DILocation(line: 1521, column: 6, scope: !16391)
!16398 = !DILocation(line: 1525, column: 6, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16391, file: !2458, line: 1525, column: 6)
!16400 = !DILocation(line: 1525, column: 37, scope: !16399)
!16401 = !DILocation(line: 1525, column: 6, scope: !16391)
!16402 = !DILocation(line: 1527, column: 20, scope: !16403)
!16403 = distinct !DILexicalBlock(scope: !16404, file: !2458, line: 1527, column: 7)
!16404 = distinct !DILexicalBlock(scope: !16399, file: !2458, line: 1525, column: 42)
!16405 = !DILocation(line: 1527, column: 33, scope: !16403)
!16406 = !DILocation(line: 1527, column: 7, scope: !16404)
!16407 = !DILocation(line: 1532, column: 2, scope: !16391)
!16408 = !DILocation(line: 1533, column: 2, scope: !16391)
!16409 = !DILocation(line: 1031, column: 3, scope: !15362, inlinedAt: !16410)
!16410 = distinct !DILocation(line: 48, column: 10, scope: !15366, inlinedAt: !16411)
!16411 = distinct !DILocation(line: 1537, column: 7, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16391, file: !2458, line: 1537, column: 6)
!16413 = !DILocation(line: 0, scope: !15362, inlinedAt: !16410)
!16414 = !DILocation(line: 48, column: 9, scope: !15366, inlinedAt: !16411)
!16415 = !DILocation(line: 1537, column: 6, scope: !16391)
!16416 = !DILocation(line: 1538, column: 3, scope: !16417)
!16417 = distinct !DILexicalBlock(scope: !16412, file: !2458, line: 1537, column: 25)
!16418 = !DILocation(line: 1539, column: 2, scope: !16417)
!16419 = !DILocation(line: 1540, column: 1, scope: !16391)
!16420 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13726, file: !13726, line: 101, type: !14836, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16421)
!16421 = !{!16422}
!16422 = !DILocalVariable(name: "thread", arg: 1, scope: !16420, file: !13726, line: 101, type: !2353)
!16423 = !DILocation(line: 0, scope: !16420)
!16424 = !DILocation(line: 103, column: 23, scope: !16420)
!16425 = !DILocation(line: 103, column: 36, scope: !16420)
!16426 = !DILocation(line: 103, column: 55, scope: !16420)
!16427 = !DILocation(line: 103, column: 2, scope: !16420)
!16428 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2458, file: !2458, line: 1567, type: !16429, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16431)
!16429 = !DISubroutineType(types: !16430)
!16430 = !{!16193}
!16431 = !{!16432}
!16432 = !DILocalVariable(name: "ret", scope: !16428, file: !2458, line: 1577, type: !16193)
!16433 = !DILocation(line: 1577, column: 30, scope: !16428)
!16434 = !DILocation(line: 0, scope: !16428)
!16435 = !DILocation(line: 1582, column: 2, scope: !16428)
!16436 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2458, file: !2458, line: 1593, type: !6613, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !473)
!16437 = !DILocation(line: 1031, column: 3, scope: !15362, inlinedAt: !16438)
!16438 = distinct !DILocation(line: 48, column: 10, scope: !15366, inlinedAt: !16439)
!16439 = distinct !DILocation(line: 1595, column: 10, scope: !16436)
!16440 = !DILocation(line: 0, scope: !15362, inlinedAt: !16438)
!16441 = !DILocation(line: 48, column: 9, scope: !15366, inlinedAt: !16439)
!16442 = !DILocation(line: 1595, column: 27, scope: !16436)
!16443 = !DILocation(line: 1595, column: 41, scope: !16436)
!16444 = !DILocation(line: 1595, column: 30, scope: !16436)
!16445 = !DILocation(line: 1595, column: 2, scope: !16436)
!16446 = distinct !DISubprogram(name: "z_thread_abort", scope: !2458, file: !2458, line: 1725, type: !14676, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16447)
!16447 = !{!16448, !16449}
!16448 = !DILocalVariable(name: "thread", arg: 1, scope: !16446, file: !2458, line: 1725, type: !2353)
!16449 = !DILocalVariable(name: "key", scope: !16446, file: !2458, line: 1727, type: !14710)
!16450 = !DILocation(line: 0, scope: !16446)
!16451 = !DILocation(line: 0, scope: !14718, inlinedAt: !16452)
!16452 = distinct !DILocation(line: 1727, column: 25, scope: !16446)
!16453 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !16454)
!16454 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !16452)
!16455 = !DILocation(line: 0, scope: !14727, inlinedAt: !16454)
!16456 = !DILocation(line: 1729, column: 20, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16446, file: !2458, line: 1729, column: 6)
!16458 = !DILocation(line: 1729, column: 33, scope: !16457)
!16459 = !DILocation(line: 1729, column: 48, scope: !16457)
!16460 = !DILocation(line: 1729, column: 6, scope: !16446)
!16461 = !DILocation(line: 0, scope: !14745, inlinedAt: !16462)
!16462 = distinct !DILocation(line: 1730, column: 3, scope: !16463)
!16463 = distinct !DILexicalBlock(scope: !16457, file: !2458, line: 1729, column: 54)
!16464 = !DILocation(line: 0, scope: !14753, inlinedAt: !16465)
!16465 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !16462)
!16466 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !16465)
!16467 = !DILocation(line: 1732, column: 3, scope: !16468)
!16468 = distinct !DILexicalBlock(scope: !16463, file: !2458, line: 1732, column: 3)
!16469 = !{i64 2154844540, i64 2154844556, i64 2154844582, i64 2154844610, i64 2154844630}
!16470 = !DILocation(line: 1733, column: 3, scope: !16463)
!16471 = !DILocation(line: 1736, column: 20, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !16446, file: !2458, line: 1736, column: 6)
!16473 = !DILocation(line: 1736, column: 33, scope: !16472)
!16474 = !DILocation(line: 1736, column: 49, scope: !16472)
!16475 = !DILocation(line: 1736, column: 6, scope: !16446)
!16476 = !DILocation(line: 0, scope: !14745, inlinedAt: !16477)
!16477 = distinct !DILocation(line: 1737, column: 3, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !16472, file: !2458, line: 1736, column: 56)
!16479 = !DILocation(line: 0, scope: !14753, inlinedAt: !16480)
!16480 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !16477)
!16481 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !16480)
!16482 = !DILocation(line: 1738, column: 3, scope: !16478)
!16483 = !DILocation(line: 1775, column: 2, scope: !16446)
!16484 = !DILocation(line: 1776, column: 16, scope: !16485)
!16485 = distinct !DILexicalBlock(scope: !16446, file: !2458, line: 1776, column: 6)
!16486 = !DILocation(line: 1776, column: 13, scope: !16485)
!16487 = !DILocation(line: 1776, column: 25, scope: !16485)
!16488 = !DILocation(line: 1031, column: 3, scope: !15362, inlinedAt: !16489)
!16489 = distinct !DILocation(line: 48, column: 10, scope: !15366, inlinedAt: !16490)
!16490 = distinct !DILocation(line: 1776, column: 29, scope: !16485)
!16491 = !DILocation(line: 0, scope: !15362, inlinedAt: !16489)
!16492 = !DILocation(line: 48, column: 9, scope: !15366, inlinedAt: !16490)
!16493 = !DILocation(line: 1776, column: 6, scope: !16446)
!16494 = !DILocation(line: 0, scope: !15329, inlinedAt: !16495)
!16495 = distinct !DILocation(line: 1777, column: 3, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16485, file: !2458, line: 1776, column: 47)
!16497 = !DILocation(line: 196, column: 9, scope: !15329, inlinedAt: !16495)
!16498 = !DILocation(line: 1779, column: 2, scope: !16496)
!16499 = !DILocation(line: 0, scope: !14745, inlinedAt: !16500)
!16500 = distinct !DILocation(line: 1780, column: 2, scope: !16446)
!16501 = !DILocation(line: 0, scope: !14753, inlinedAt: !16502)
!16502 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !16500)
!16503 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !16502)
!16504 = !DILocation(line: 1781, column: 1, scope: !16446)
!16505 = distinct !DISubprogram(name: "end_thread", scope: !2458, file: !2458, line: 1690, type: !14676, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16506)
!16506 = !{!16507}
!16507 = !DILocalVariable(name: "thread", arg: 1, scope: !16505, file: !2458, line: 1690, type: !2353)
!16508 = !DILocation(line: 0, scope: !16505)
!16509 = !DILocation(line: 1695, column: 20, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16505, file: !2458, line: 1695, column: 6)
!16511 = !DILocation(line: 1695, column: 33, scope: !16510)
!16512 = !DILocation(line: 1695, column: 49, scope: !16510)
!16513 = !DILocation(line: 1695, column: 6, scope: !16505)
!16514 = !DILocation(line: 1697, column: 29, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16510, file: !2458, line: 1695, column: 56)
!16516 = !DILocation(line: 1698, column: 7, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16515, file: !2458, line: 1698, column: 7)
!16518 = !DILocation(line: 1698, column: 7, scope: !16515)
!16519 = !DILocation(line: 0, scope: !14887, inlinedAt: !16520)
!16520 = distinct !DILocation(line: 1699, column: 4, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16517, file: !2458, line: 1698, column: 35)
!16522 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !16520)
!16523 = !DILocation(line: 0, scope: !14895, inlinedAt: !16524)
!16524 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !16520)
!16525 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !16524)
!16526 = !DILocation(line: 1700, column: 3, scope: !16521)
!16527 = !DILocation(line: 1701, column: 20, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16515, file: !2458, line: 1701, column: 7)
!16529 = !DILocation(line: 1701, column: 30, scope: !16528)
!16530 = !DILocation(line: 1701, column: 7, scope: !16515)
!16531 = !DILocation(line: 1702, column: 4, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16528, file: !2458, line: 1701, column: 39)
!16533 = !DILocation(line: 1703, column: 3, scope: !16532)
!16534 = !DILocation(line: 1704, column: 9, scope: !16515)
!16535 = !DILocation(line: 1705, column: 23, scope: !16515)
!16536 = !DILocation(line: 1705, column: 3, scope: !16515)
!16537 = !DILocation(line: 1706, column: 3, scope: !16515)
!16538 = !DILocation(line: 1722, column: 2, scope: !16515)
!16539 = !DILocation(line: 1723, column: 1, scope: !16505)
!16540 = distinct !DISubprogram(name: "unpend_all", scope: !2458, file: !2458, line: 1674, type: !16541, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16543)
!16541 = !DISubroutineType(types: !16542)
!16542 = !{null, !2384}
!16543 = !{!16544, !16545}
!16544 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16540, file: !2458, line: 1674, type: !2384)
!16545 = !DILocalVariable(name: "thread", scope: !16540, file: !2458, line: 1676, type: !2353)
!16546 = !DILocation(line: 0, scope: !16540)
!16547 = !DILocation(line: 1678, column: 19, scope: !16540)
!16548 = !DILocation(line: 1678, column: 41, scope: !16540)
!16549 = !DILocation(line: 1678, column: 2, scope: !16540)
!16550 = !DILocation(line: 1679, column: 3, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16540, file: !2458, line: 1678, column: 50)
!16552 = !DILocation(line: 1680, column: 9, scope: !16551)
!16553 = !DILocalVariable(name: "thread", arg: 1, scope: !16554, file: !13746, line: 65, type: !2353)
!16554 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13746, file: !13746, line: 65, type: !16555, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16557)
!16555 = !DISubroutineType(types: !16556)
!16556 = !{null, !2353, !32}
!16557 = !{!16553, !16558}
!16558 = !DILocalVariable(name: "value", arg: 2, scope: !16554, file: !13746, line: 65, type: !32)
!16559 = !DILocation(line: 0, scope: !16554, inlinedAt: !16560)
!16560 = distinct !DILocation(line: 1681, column: 3, scope: !16551)
!16561 = !DILocation(line: 67, column: 15, scope: !16554, inlinedAt: !16560)
!16562 = !DILocation(line: 67, column: 33, scope: !16554, inlinedAt: !16560)
!16563 = !DILocation(line: 1682, column: 3, scope: !16551)
!16564 = distinct !{!16564, !16549, !16565}
!16565 = !DILocation(line: 1683, column: 2, scope: !16540)
!16566 = !DILocation(line: 1684, column: 1, scope: !16540)
!16567 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2458, file: !2458, line: 1794, type: !16568, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16570)
!16568 = !DISubroutineType(types: !16569)
!16569 = !{!103, !2353, !15509}
!16570 = !{!16571, !16572, !16573, !16574}
!16571 = !DILocalVariable(name: "thread", arg: 1, scope: !16567, file: !2458, line: 1794, type: !2353)
!16572 = !DILocalVariable(name: "timeout", arg: 2, scope: !16567, file: !2458, line: 1794, type: !15509)
!16573 = !DILocalVariable(name: "key", scope: !16567, file: !2458, line: 1796, type: !14710)
!16574 = !DILocalVariable(name: "ret", scope: !16567, file: !2458, line: 1797, type: !103)
!16575 = !DILocation(line: 0, scope: !16567)
!16576 = !DILocation(line: 0, scope: !14718, inlinedAt: !16577)
!16577 = distinct !DILocation(line: 1796, column: 25, scope: !16567)
!16578 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !16577)
!16580 = !DILocation(line: 0, scope: !14727, inlinedAt: !16579)
!16581 = !DILocation(line: 1801, column: 20, scope: !16582)
!16582 = distinct !DILexicalBlock(scope: !16567, file: !2458, line: 1801, column: 6)
!16583 = !DILocation(line: 1801, column: 33, scope: !16582)
!16584 = !DILocation(line: 1801, column: 49, scope: !16582)
!16585 = !DILocation(line: 1801, column: 6, scope: !16567)
!16586 = !DILocation(line: 1803, column: 13, scope: !16587)
!16587 = distinct !DILexicalBlock(scope: !16582, file: !2458, line: 1803, column: 13)
!16588 = !DILocation(line: 1803, column: 13, scope: !16582)
!16589 = !DILocation(line: 1805, column: 24, scope: !16590)
!16590 = distinct !DILexicalBlock(scope: !16587, file: !2458, line: 1805, column: 13)
!16591 = !DILocation(line: 1805, column: 21, scope: !16590)
!16592 = !DILocation(line: 1805, column: 34, scope: !16590)
!16593 = !DILocation(line: 1806, column: 20, scope: !16590)
!16594 = !DILocation(line: 1806, column: 44, scope: !16590)
!16595 = !DILocation(line: 1806, column: 30, scope: !16590)
!16596 = !DILocation(line: 1805, column: 13, scope: !16587)
!16597 = !DILocation(line: 1810, column: 42, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16590, file: !2458, line: 1808, column: 9)
!16599 = !DILocation(line: 1810, column: 3, scope: !16598)
!16600 = !DILocation(line: 1811, column: 22, scope: !16598)
!16601 = !DILocation(line: 1811, column: 3, scope: !16598)
!16602 = !DILocation(line: 0, scope: !15329, inlinedAt: !16603)
!16603 = distinct !DILocation(line: 1814, column: 9, scope: !16598)
!16604 = !DILocation(line: 196, column: 9, scope: !15329, inlinedAt: !16603)
!16605 = !DILocation(line: 1817, column: 3, scope: !16598)
!16606 = !DILocation(line: 0, scope: !16582)
!16607 = !DILocation(line: 0, scope: !14745, inlinedAt: !16608)
!16608 = distinct !DILocation(line: 1822, column: 2, scope: !16567)
!16609 = !DILocation(line: 0, scope: !14753, inlinedAt: !16610)
!16610 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !16608)
!16611 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !16610)
!16612 = !DILocation(line: 1823, column: 2, scope: !16567)
!16613 = !DILocation(line: 1824, column: 1, scope: !16567)
!16614 = distinct !DISubprogram(name: "z_sched_wake", scope: !2458, file: !2458, line: 1882, type: !16615, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16617)
!16615 = !DISubroutineType(types: !16616)
!16616 = !{!166, !2384, !103, !102}
!16617 = !{!16618, !16619, !16620, !16621, !16622, !16623, !16625}
!16618 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16614, file: !2458, line: 1882, type: !2384)
!16619 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16614, file: !2458, line: 1882, type: !103)
!16620 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16614, file: !2458, line: 1882, type: !102)
!16621 = !DILocalVariable(name: "thread", scope: !16614, file: !2458, line: 1884, type: !2353)
!16622 = !DILocalVariable(name: "ret", scope: !16614, file: !2458, line: 1885, type: !166)
!16623 = !DILocalVariable(name: "__i", scope: !16624, file: !2458, line: 1887, type: !14710)
!16624 = distinct !DILexicalBlock(scope: !16614, file: !2458, line: 1887, column: 2)
!16625 = !DILocalVariable(name: "__key", scope: !16624, file: !2458, line: 1887, type: !14710)
!16626 = !DILocation(line: 0, scope: !16614)
!16627 = !DILocation(line: 0, scope: !16624)
!16628 = !DILocation(line: 0, scope: !14718, inlinedAt: !16629)
!16629 = distinct !DILocation(line: 1887, column: 2, scope: !16624)
!16630 = !DILocation(line: 55, column: 2, scope: !14727, inlinedAt: !16631)
!16631 = distinct !DILocation(line: 145, column: 10, scope: !14718, inlinedAt: !16629)
!16632 = !DILocation(line: 0, scope: !14727, inlinedAt: !16631)
!16633 = !DILocation(line: 1888, column: 12, scope: !16634)
!16634 = distinct !DILexicalBlock(scope: !16635, file: !2458, line: 1887, column: 26)
!16635 = distinct !DILexicalBlock(scope: !16624, file: !2458, line: 1887, column: 2)
!16636 = !DILocation(line: 1890, column: 14, scope: !16637)
!16637 = distinct !DILexicalBlock(scope: !16634, file: !2458, line: 1890, column: 7)
!16638 = !DILocation(line: 1890, column: 7, scope: !16634)
!16639 = !DILocalVariable(name: "thread", arg: 1, scope: !16640, file: !16641, line: 134, type: !2353)
!16640 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16641, file: !16641, line: 134, type: !16642, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16644)
!16641 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16642 = !DISubroutineType(types: !16643)
!16643 = !{null, !2353, !32, !102}
!16644 = !{!16639, !16645, !16646}
!16645 = !DILocalVariable(name: "value", arg: 2, scope: !16640, file: !16641, line: 135, type: !32)
!16646 = !DILocalVariable(name: "data", arg: 3, scope: !16640, file: !16641, line: 136, type: !102)
!16647 = !DILocation(line: 0, scope: !16640, inlinedAt: !16648)
!16648 = distinct !DILocation(line: 1891, column: 4, scope: !16649)
!16649 = distinct !DILexicalBlock(scope: !16637, file: !2458, line: 1890, column: 23)
!16650 = !DILocation(line: 0, scope: !16554, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 138, column: 2, scope: !16640, inlinedAt: !16648)
!16652 = !DILocation(line: 67, column: 15, scope: !16554, inlinedAt: !16651)
!16653 = !DILocation(line: 67, column: 33, scope: !16554, inlinedAt: !16651)
!16654 = !DILocation(line: 139, column: 15, scope: !16640, inlinedAt: !16648)
!16655 = !DILocation(line: 139, column: 25, scope: !16640, inlinedAt: !16648)
!16656 = !DILocation(line: 1894, column: 4, scope: !16649)
!16657 = !DILocation(line: 1895, column: 10, scope: !16649)
!16658 = !DILocation(line: 1896, column: 4, scope: !16649)
!16659 = !DILocation(line: 1898, column: 3, scope: !16649)
!16660 = !DILocation(line: 0, scope: !14745, inlinedAt: !16661)
!16661 = distinct !DILocation(line: 1887, column: 2, scope: !16635)
!16662 = !DILocation(line: 0, scope: !14753, inlinedAt: !16663)
!16663 = distinct !DILocation(line: 215, column: 2, scope: !14745, inlinedAt: !16661)
!16664 = !DILocation(line: 95, column: 2, scope: !14753, inlinedAt: !16663)
!16665 = !DILocation(line: 1901, column: 2, scope: !16614)
!16666 = distinct !DISubprogram(name: "z_sched_wait", scope: !2458, file: !2458, line: 1904, type: !16667, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2350, retainedNodes: !16670)
!16667 = !DISubroutineType(types: !16668)
!16668 = !{!103, !14721, !14710, !2384, !15509, !16669}
!16669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16670 = !{!16671, !16672, !16673, !16674, !16675, !16676}
!16671 = !DILocalVariable(name: "lock", arg: 1, scope: !16666, file: !2458, line: 1904, type: !14721)
!16672 = !DILocalVariable(name: "key", arg: 2, scope: !16666, file: !2458, line: 1904, type: !14710)
!16673 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16666, file: !2458, line: 1905, type: !2384)
!16674 = !DILocalVariable(name: "timeout", arg: 4, scope: !16666, file: !2458, line: 1905, type: !15509)
!16675 = !DILocalVariable(name: "data", arg: 5, scope: !16666, file: !2458, line: 1905, type: !16669)
!16676 = !DILocalVariable(name: "ret", scope: !16666, file: !2458, line: 1907, type: !103)
!16677 = !DILocation(line: 0, scope: !16666)
!16678 = !DILocation(line: 1907, column: 12, scope: !16666)
!16679 = !DILocation(line: 1909, column: 11, scope: !16680)
!16680 = distinct !DILexicalBlock(scope: !16666, file: !2458, line: 1909, column: 6)
!16681 = !DILocation(line: 1909, column: 6, scope: !16666)
!16682 = !DILocation(line: 1910, column: 11, scope: !16683)
!16683 = distinct !DILexicalBlock(scope: !16680, file: !2458, line: 1909, column: 20)
!16684 = !DILocation(line: 1910, column: 26, scope: !16683)
!16685 = !DILocation(line: 1910, column: 9, scope: !16683)
!16686 = !DILocation(line: 1911, column: 2, scope: !16683)
!16687 = !DILocation(line: 1912, column: 2, scope: !16666)
!16688 = distinct !DISubprogram(name: "z_data_copy", scope: !16689, file: !16689, line: 22, type: !3232, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !473)
!16689 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16690 = !DILocation(line: 24, column: 2, scope: !16688)
!16691 = !DILocation(line: 27, column: 2, scope: !16688)
!16692 = !DILocation(line: 71, column: 1, scope: !16688)
!16693 = distinct !DISubprogram(name: "z_add_timeout", scope: !2495, file: !2495, line: 88, type: !16694, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16700)
!16694 = !DISubroutineType(types: !16695)
!16695 = !{null, !2468, !2487, !16696}
!16696 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1689, line: 67, baseType: !16697)
!16697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1689, line: 65, size: 64, elements: !16698)
!16698 = !{!16699}
!16699 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16697, file: !1689, line: 66, baseType: !1688, size: 64)
!16700 = !{!16701, !16702, !16703, !16704, !16710, !16711, !16714, !16717}
!16701 = !DILocalVariable(name: "to", arg: 1, scope: !16693, file: !2495, line: 88, type: !2468)
!16702 = !DILocalVariable(name: "fn", arg: 2, scope: !16693, file: !2495, line: 88, type: !2487)
!16703 = !DILocalVariable(name: "timeout", arg: 3, scope: !16693, file: !2495, line: 89, type: !16696)
!16704 = !DILocalVariable(name: "__i", scope: !16705, file: !2495, line: 102, type: !16706)
!16705 = distinct !DILexicalBlock(scope: !16693, file: !2495, line: 102, column: 2)
!16706 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !16707)
!16707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !16708)
!16708 = !{!16709}
!16709 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16707, file: !472, line: 33, baseType: !103, size: 32)
!16710 = !DILocalVariable(name: "__key", scope: !16705, file: !2495, line: 102, type: !16706)
!16711 = !DILocalVariable(name: "t", scope: !16712, file: !2495, line: 103, type: !2468)
!16712 = distinct !DILexicalBlock(scope: !16713, file: !2495, line: 102, column: 24)
!16713 = distinct !DILexicalBlock(scope: !16705, file: !2495, line: 102, column: 2)
!16714 = !DILocalVariable(name: "ticks", scope: !16715, file: !2495, line: 107, type: !1688)
!16715 = distinct !DILexicalBlock(scope: !16716, file: !2495, line: 106, column: 39)
!16716 = distinct !DILexicalBlock(scope: !16712, file: !2495, line: 105, column: 7)
!16717 = !DILocalVariable(name: "next_time", scope: !16718, file: !2495, line: 137, type: !344)
!16718 = distinct !DILexicalBlock(scope: !16719, file: !2495, line: 127, column: 22)
!16719 = distinct !DILexicalBlock(scope: !16712, file: !2495, line: 127, column: 7)
!16720 = !DILocation(line: 0, scope: !16693)
!16721 = !DILocation(line: 91, column: 6, scope: !16722)
!16722 = distinct !DILexicalBlock(scope: !16693, file: !2495, line: 91, column: 6)
!16723 = !DILocation(line: 91, column: 6, scope: !16693)
!16724 = !DILocation(line: 100, column: 6, scope: !16693)
!16725 = !DILocation(line: 100, column: 9, scope: !16693)
!16726 = !DILocation(line: 0, scope: !16705)
!16727 = !DILocalVariable(name: "l", arg: 1, scope: !16728, file: !472, line: 136, type: !16731)
!16728 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !16729, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16732)
!16729 = !DISubroutineType(types: !16730)
!16730 = !{!16706, !16731}
!16731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!16732 = !{!16727, !16733}
!16733 = !DILocalVariable(name: "k", scope: !16728, file: !472, line: 139, type: !16706)
!16734 = !DILocation(line: 0, scope: !16728, inlinedAt: !16735)
!16735 = distinct !DILocation(line: 102, column: 2, scope: !16705)
!16736 = !DILocation(line: 55, column: 2, scope: !16737, inlinedAt: !16741)
!16737 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5789, file: !5789, line: 42, type: !5790, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16738)
!16738 = !{!16739, !16740}
!16739 = !DILocalVariable(name: "key", scope: !16737, file: !5789, line: 44, type: !32)
!16740 = !DILocalVariable(name: "tmp", scope: !16737, file: !5789, line: 53, type: !32)
!16741 = distinct !DILocation(line: 145, column: 10, scope: !16728, inlinedAt: !16735)
!16742 = !{i64 1953836}
!16743 = !DILocation(line: 0, scope: !16737, inlinedAt: !16741)
!16744 = !DILocation(line: 106, column: 33, scope: !16716)
!16745 = !DILocation(line: 105, column: 7, scope: !16712)
!16746 = !DILocation(line: 107, column: 50, scope: !16715)
!16747 = !DILocation(line: 107, column: 48, scope: !16715)
!16748 = !DILocation(line: 0, scope: !16715)
!16749 = !DILocation(line: 109, column: 17, scope: !16715)
!16750 = !DILocation(line: 110, column: 3, scope: !16715)
!16751 = !DILocation(line: 111, column: 31, scope: !16752)
!16752 = distinct !DILexicalBlock(scope: !16716, file: !2495, line: 110, column: 10)
!16753 = !DILocation(line: 111, column: 37, scope: !16752)
!16754 = !DILocation(line: 111, column: 35, scope: !16752)
!16755 = !DILocation(line: 0, scope: !16716)
!16756 = !DILocation(line: 109, column: 8, scope: !16715)
!16757 = !DILocation(line: 109, column: 15, scope: !16715)
!16758 = !DILocation(line: 114, column: 12, scope: !16759)
!16759 = distinct !DILexicalBlock(scope: !16712, file: !2495, line: 114, column: 3)
!16760 = !DILocation(line: 0, scope: !16712)
!16761 = !DILocation(line: 114, column: 3, scope: !16759)
!16762 = !DILocation(line: 115, column: 24, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16764, file: !2495, line: 115, column: 8)
!16764 = distinct !DILexicalBlock(scope: !16765, file: !2495, line: 114, column: 45)
!16765 = distinct !DILexicalBlock(scope: !16759, file: !2495, line: 114, column: 3)
!16766 = !DILocation(line: 115, column: 11, scope: !16763)
!16767 = !DILocation(line: 115, column: 18, scope: !16763)
!16768 = !DILocation(line: 115, column: 8, scope: !16764)
!16769 = !DILocation(line: 116, column: 15, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16763, file: !2495, line: 115, column: 32)
!16771 = !DILocation(line: 117, column: 26, scope: !16770)
!16772 = !DILocation(line: 117, column: 37, scope: !16770)
!16773 = !DILocation(line: 117, column: 5, scope: !16770)
!16774 = !DILocation(line: 123, column: 7, scope: !16712)
!16775 = !DILocation(line: 120, column: 15, scope: !16764)
!16776 = !DILocation(line: 114, column: 36, scope: !16765)
!16777 = distinct !{!16777, !16761, !16778}
!16778 = !DILocation(line: 121, column: 3, scope: !16759)
!16779 = !DILocation(line: 124, column: 41, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16781, file: !2495, line: 123, column: 18)
!16781 = distinct !DILexicalBlock(scope: !16712, file: !2495, line: 123, column: 7)
!16782 = !DILocation(line: 124, column: 4, scope: !16780)
!16783 = !DILocation(line: 125, column: 3, scope: !16780)
!16784 = !DILocation(line: 127, column: 13, scope: !16719)
!16785 = !DILocation(line: 127, column: 10, scope: !16719)
!16786 = !DILocation(line: 127, column: 7, scope: !16712)
!16787 = !DILocation(line: 137, column: 24, scope: !16718)
!16788 = !DILocation(line: 0, scope: !16718)
!16789 = !DILocation(line: 139, column: 18, scope: !16790)
!16790 = distinct !DILexicalBlock(scope: !16718, file: !2495, line: 139, column: 8)
!16791 = !DILocation(line: 139, column: 23, scope: !16790)
!16792 = !DILocation(line: 141, column: 5, scope: !16793)
!16793 = distinct !DILexicalBlock(scope: !16790, file: !2495, line: 140, column: 48)
!16794 = !DILocation(line: 142, column: 4, scope: !16793)
!16795 = !DILocalVariable(name: "key", arg: 2, scope: !16796, file: !472, line: 190, type: !16706)
!16796 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !16797, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16799)
!16797 = !DISubroutineType(types: !16798)
!16798 = !{null, !16731, !16706}
!16799 = !{!16800, !16795}
!16800 = !DILocalVariable(name: "l", arg: 1, scope: !16796, file: !472, line: 189, type: !16731)
!16801 = !DILocation(line: 0, scope: !16796, inlinedAt: !16802)
!16802 = distinct !DILocation(line: 102, column: 2, scope: !16713)
!16803 = !DILocalVariable(name: "key", arg: 1, scope: !16804, file: !5789, line: 84, type: !32)
!16804 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5789, file: !5789, line: 84, type: !5800, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16805)
!16805 = !{!16803}
!16806 = !DILocation(line: 0, scope: !16804, inlinedAt: !16807)
!16807 = distinct !DILocation(line: 215, column: 2, scope: !16796, inlinedAt: !16802)
!16808 = !DILocation(line: 95, column: 2, scope: !16804, inlinedAt: !16807)
!16809 = !{i64 1954653}
!16810 = !DILocation(line: 148, column: 1, scope: !16693)
!16811 = distinct !DISubprogram(name: "elapsed", scope: !2495, file: !2495, line: 62, type: !16812, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!16812 = !DISubroutineType(types: !16813)
!16813 = !{!344}
!16814 = !DILocation(line: 64, column: 9, scope: !16811)
!16815 = !DILocation(line: 64, column: 28, scope: !16811)
!16816 = !DILocation(line: 64, column: 35, scope: !16811)
!16817 = !DILocation(line: 64, column: 2, scope: !16811)
!16818 = distinct !DISubprogram(name: "first", scope: !2495, file: !2495, line: 39, type: !16819, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16821)
!16819 = !DISubroutineType(types: !16820)
!16820 = !{!2468}
!16821 = !{!16822}
!16822 = !DILocalVariable(name: "t", scope: !16818, file: !2495, line: 41, type: !16823)
!16823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!16824 = !DILocation(line: 41, column: 19, scope: !16818)
!16825 = !DILocation(line: 0, scope: !16818)
!16826 = !DILocation(line: 43, column: 9, scope: !16818)
!16827 = !DILocation(line: 43, column: 2, scope: !16818)
!16828 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !321, file: !321, line: 443, type: !16829, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16831)
!16829 = !DISubroutineType(types: !16830)
!16830 = !{null, !16823, !16823}
!16831 = !{!16832, !16833, !16834}
!16832 = !DILocalVariable(name: "successor", arg: 1, scope: !16828, file: !321, line: 443, type: !16823)
!16833 = !DILocalVariable(name: "node", arg: 2, scope: !16828, file: !321, line: 443, type: !16823)
!16834 = !DILocalVariable(name: "prev", scope: !16828, file: !321, line: 445, type: !16835)
!16835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16823)
!16836 = !DILocation(line: 0, scope: !16828)
!16837 = !DILocation(line: 445, column: 39, scope: !16828)
!16838 = !DILocation(line: 447, column: 8, scope: !16828)
!16839 = !DILocation(line: 447, column: 13, scope: !16828)
!16840 = !DILocation(line: 448, column: 8, scope: !16828)
!16841 = !DILocation(line: 448, column: 13, scope: !16828)
!16842 = !DILocation(line: 449, column: 8, scope: !16828)
!16843 = !DILocation(line: 449, column: 13, scope: !16828)
!16844 = !DILocation(line: 450, column: 18, scope: !16828)
!16845 = !DILocation(line: 451, column: 1, scope: !16828)
!16846 = distinct !DISubprogram(name: "next", scope: !2495, file: !2495, line: 46, type: !16847, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16849)
!16847 = !DISubroutineType(types: !16848)
!16848 = !{!2468, !2468}
!16849 = !{!16850, !16851}
!16850 = !DILocalVariable(name: "t", arg: 1, scope: !16846, file: !2495, line: 46, type: !2468)
!16851 = !DILocalVariable(name: "n", scope: !16846, file: !2495, line: 48, type: !16823)
!16852 = !DILocation(line: 0, scope: !16846)
!16853 = !DILocation(line: 48, column: 58, scope: !16846)
!16854 = !DILocation(line: 48, column: 19, scope: !16846)
!16855 = !DILocation(line: 50, column: 9, scope: !16846)
!16856 = !DILocation(line: 50, column: 2, scope: !16846)
!16857 = distinct !DISubprogram(name: "sys_dlist_append", scope: !321, file: !321, line: 404, type: !16858, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16861)
!16858 = !DISubroutineType(types: !16859)
!16859 = !{null, !16860, !16823}
!16860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 32)
!16861 = !{!16862, !16863, !16864}
!16862 = !DILocalVariable(name: "list", arg: 1, scope: !16857, file: !321, line: 404, type: !16860)
!16863 = !DILocalVariable(name: "node", arg: 2, scope: !16857, file: !321, line: 404, type: !16823)
!16864 = !DILocalVariable(name: "tail", scope: !16857, file: !321, line: 406, type: !16835)
!16865 = !DILocation(line: 0, scope: !16857)
!16866 = !DILocation(line: 406, column: 34, scope: !16857)
!16867 = !DILocation(line: 408, column: 8, scope: !16857)
!16868 = !DILocation(line: 408, column: 13, scope: !16857)
!16869 = !DILocation(line: 409, column: 8, scope: !16857)
!16870 = !DILocation(line: 409, column: 13, scope: !16857)
!16871 = !DILocation(line: 411, column: 8, scope: !16857)
!16872 = !DILocation(line: 411, column: 13, scope: !16857)
!16873 = !DILocation(line: 412, column: 13, scope: !16857)
!16874 = !DILocation(line: 413, column: 1, scope: !16857)
!16875 = distinct !DISubprogram(name: "next_timeout", scope: !2495, file: !2495, line: 67, type: !16812, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16876)
!16876 = !{!16877, !16878, !16879}
!16877 = !DILocalVariable(name: "to", scope: !16875, file: !2495, line: 69, type: !2468)
!16878 = !DILocalVariable(name: "ticks_elapsed", scope: !16875, file: !2495, line: 70, type: !344)
!16879 = !DILocalVariable(name: "ret", scope: !16875, file: !2495, line: 71, type: !344)
!16880 = !DILocation(line: 69, column: 24, scope: !16875)
!16881 = !DILocation(line: 0, scope: !16875)
!16882 = !DILocation(line: 70, column: 26, scope: !16875)
!16883 = !DILocation(line: 73, column: 10, scope: !16884)
!16884 = distinct !DILexicalBlock(scope: !16875, file: !2495, line: 73, column: 6)
!16885 = !DILocation(line: 73, column: 19, scope: !16884)
!16886 = !DILocation(line: 74, column: 21, scope: !16884)
!16887 = !DILocation(line: 74, column: 30, scope: !16884)
!16888 = !DILocation(line: 74, column: 28, scope: !16884)
!16889 = !DILocation(line: 74, column: 45, scope: !16884)
!16890 = !DILocation(line: 73, column: 6, scope: !16875)
!16891 = !DILocation(line: 77, column: 9, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16884, file: !2495, line: 76, column: 9)
!16893 = !DILocation(line: 0, scope: !16884)
!16894 = !DILocation(line: 81, column: 20, scope: !16895)
!16895 = distinct !DILexicalBlock(scope: !16875, file: !2495, line: 81, column: 6)
!16896 = !DILocation(line: 81, column: 6, scope: !16895)
!16897 = !DILocation(line: 81, column: 32, scope: !16895)
!16898 = !DILocation(line: 85, column: 2, scope: !16875)
!16899 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !321, file: !321, line: 341, type: !16900, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16902)
!16900 = !DISubroutineType(types: !16901)
!16901 = !{!16823, !16860, !16823}
!16902 = !{!16903, !16904}
!16903 = !DILocalVariable(name: "list", arg: 1, scope: !16899, file: !321, line: 341, type: !16860)
!16904 = !DILocalVariable(name: "node", arg: 2, scope: !16899, file: !321, line: 342, type: !16823)
!16905 = !DILocation(line: 0, scope: !16899)
!16906 = !DILocation(line: 344, column: 15, scope: !16899)
!16907 = !DILocation(line: 344, column: 9, scope: !16899)
!16908 = !DILocation(line: 344, column: 26, scope: !16899)
!16909 = !DILocation(line: 344, column: 2, scope: !16899)
!16910 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !321, file: !321, line: 325, type: !16900, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16911)
!16911 = !{!16912, !16913}
!16912 = !DILocalVariable(name: "list", arg: 1, scope: !16910, file: !321, line: 325, type: !16860)
!16913 = !DILocalVariable(name: "node", arg: 2, scope: !16910, file: !321, line: 326, type: !16823)
!16914 = !DILocation(line: 0, scope: !16910)
!16915 = !DILocation(line: 328, column: 24, scope: !16910)
!16916 = !DILocation(line: 328, column: 15, scope: !16910)
!16917 = !DILocation(line: 328, column: 9, scope: !16910)
!16918 = !DILocation(line: 328, column: 45, scope: !16910)
!16919 = !DILocation(line: 328, column: 2, scope: !16910)
!16920 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !321, file: !321, line: 294, type: !16921, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16923)
!16921 = !DISubroutineType(types: !16922)
!16922 = !{!16823, !16860}
!16923 = !{!16924}
!16924 = !DILocalVariable(name: "list", arg: 1, scope: !16920, file: !321, line: 294, type: !16860)
!16925 = !DILocation(line: 0, scope: !16920)
!16926 = !DILocation(line: 296, column: 9, scope: !16920)
!16927 = !DILocation(line: 296, column: 2, scope: !16920)
!16928 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !321, file: !321, line: 266, type: !16929, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16931)
!16929 = !DISubroutineType(types: !16930)
!16930 = !{!166, !16860}
!16931 = !{!16932}
!16932 = !DILocalVariable(name: "list", arg: 1, scope: !16928, file: !321, line: 266, type: !16860)
!16933 = !DILocation(line: 0, scope: !16928)
!16934 = !DILocation(line: 268, column: 15, scope: !16928)
!16935 = !DILocation(line: 268, column: 20, scope: !16928)
!16936 = !DILocation(line: 268, column: 2, scope: !16928)
!16937 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2495, file: !2495, line: 150, type: !16938, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16940)
!16938 = !DISubroutineType(types: !16939)
!16939 = !{!103, !2468}
!16940 = !{!16941, !16942, !16943, !16945}
!16941 = !DILocalVariable(name: "to", arg: 1, scope: !16937, file: !2495, line: 150, type: !2468)
!16942 = !DILocalVariable(name: "ret", scope: !16937, file: !2495, line: 152, type: !103)
!16943 = !DILocalVariable(name: "__i", scope: !16944, file: !2495, line: 154, type: !16706)
!16944 = distinct !DILexicalBlock(scope: !16937, file: !2495, line: 154, column: 2)
!16945 = !DILocalVariable(name: "__key", scope: !16944, file: !2495, line: 154, type: !16706)
!16946 = !DILocation(line: 0, scope: !16937)
!16947 = !DILocation(line: 0, scope: !16944)
!16948 = !DILocation(line: 0, scope: !16728, inlinedAt: !16949)
!16949 = distinct !DILocation(line: 154, column: 2, scope: !16944)
!16950 = !DILocation(line: 55, column: 2, scope: !16737, inlinedAt: !16951)
!16951 = distinct !DILocation(line: 145, column: 10, scope: !16728, inlinedAt: !16949)
!16952 = !DILocation(line: 0, scope: !16737, inlinedAt: !16951)
!16953 = !DILocation(line: 155, column: 7, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16955, file: !2495, line: 155, column: 7)
!16955 = distinct !DILexicalBlock(scope: !16956, file: !2495, line: 154, column: 24)
!16956 = distinct !DILexicalBlock(scope: !16944, file: !2495, line: 154, column: 2)
!16957 = !DILocation(line: 155, column: 7, scope: !16955)
!16958 = !DILocation(line: 156, column: 4, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16954, file: !2495, line: 155, column: 39)
!16960 = !DILocation(line: 158, column: 3, scope: !16959)
!16961 = !DILocation(line: 0, scope: !16796, inlinedAt: !16962)
!16962 = distinct !DILocation(line: 154, column: 2, scope: !16956)
!16963 = !DILocation(line: 0, scope: !16804, inlinedAt: !16964)
!16964 = distinct !DILocation(line: 215, column: 2, scope: !16796, inlinedAt: !16962)
!16965 = !DILocation(line: 95, column: 2, scope: !16804, inlinedAt: !16964)
!16966 = !DILocation(line: 161, column: 2, scope: !16937)
!16967 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !321, file: !321, line: 225, type: !16968, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16972)
!16968 = !DISubroutineType(types: !16969)
!16969 = !{!166, !16970}
!16970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16971, size: 32)
!16971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2472)
!16972 = !{!16973}
!16973 = !DILocalVariable(name: "node", arg: 1, scope: !16967, file: !321, line: 225, type: !16970)
!16974 = !DILocation(line: 0, scope: !16967)
!16975 = !DILocation(line: 227, column: 15, scope: !16967)
!16976 = !DILocation(line: 227, column: 20, scope: !16967)
!16977 = !DILocation(line: 227, column: 2, scope: !16967)
!16978 = distinct !DISubprogram(name: "remove_timeout", scope: !2495, file: !2495, line: 53, type: !2489, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16979)
!16979 = !{!16980}
!16980 = !DILocalVariable(name: "t", arg: 1, scope: !16978, file: !2495, line: 53, type: !2468)
!16981 = !DILocation(line: 0, scope: !16978)
!16982 = !DILocation(line: 55, column: 6, scope: !16983)
!16983 = distinct !DILexicalBlock(scope: !16978, file: !2495, line: 55, column: 6)
!16984 = !DILocation(line: 55, column: 14, scope: !16983)
!16985 = !DILocation(line: 55, column: 6, scope: !16978)
!16986 = !DILocation(line: 56, column: 25, scope: !16987)
!16987 = distinct !DILexicalBlock(scope: !16983, file: !2495, line: 55, column: 23)
!16988 = !DILocation(line: 56, column: 12, scope: !16987)
!16989 = !DILocation(line: 56, column: 19, scope: !16987)
!16990 = !DILocation(line: 57, column: 2, scope: !16987)
!16991 = !DILocation(line: 59, column: 23, scope: !16978)
!16992 = !DILocation(line: 59, column: 2, scope: !16978)
!16993 = !DILocation(line: 60, column: 1, scope: !16978)
!16994 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !321, file: !321, line: 496, type: !16995, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !16997)
!16995 = !DISubroutineType(types: !16996)
!16996 = !{null, !16823}
!16997 = !{!16998, !16999, !17000}
!16998 = !DILocalVariable(name: "node", arg: 1, scope: !16994, file: !321, line: 496, type: !16823)
!16999 = !DILocalVariable(name: "prev", scope: !16994, file: !321, line: 498, type: !16835)
!17000 = !DILocalVariable(name: "next", scope: !16994, file: !321, line: 499, type: !16835)
!17001 = !DILocation(line: 0, scope: !16994)
!17002 = !DILocation(line: 498, column: 34, scope: !16994)
!17003 = !DILocation(line: 499, column: 34, scope: !16994)
!17004 = !DILocation(line: 501, column: 8, scope: !16994)
!17005 = !DILocation(line: 501, column: 13, scope: !16994)
!17006 = !DILocation(line: 502, column: 8, scope: !16994)
!17007 = !DILocation(line: 502, column: 13, scope: !16994)
!17008 = !DILocation(line: 503, column: 2, scope: !16994)
!17009 = !DILocation(line: 504, column: 1, scope: !16994)
!17010 = distinct !DISubprogram(name: "sys_dnode_init", scope: !321, file: !321, line: 211, type: !16995, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17011)
!17011 = !{!17012}
!17012 = !DILocalVariable(name: "node", arg: 1, scope: !17010, file: !321, line: 211, type: !16823)
!17013 = !DILocation(line: 0, scope: !17010)
!17014 = !DILocation(line: 213, column: 8, scope: !17010)
!17015 = !DILocation(line: 213, column: 13, scope: !17010)
!17016 = !DILocation(line: 214, column: 8, scope: !17010)
!17017 = !DILocation(line: 214, column: 13, scope: !17010)
!17018 = !DILocation(line: 215, column: 1, scope: !17010)
!17019 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2495, file: !2495, line: 183, type: !17020, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17024)
!17020 = !DISubroutineType(types: !17021)
!17021 = !{!1688, !17022}
!17022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17023, size: 32)
!17023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2469)
!17024 = !{!17025, !17026, !17027, !17029}
!17025 = !DILocalVariable(name: "timeout", arg: 1, scope: !17019, file: !2495, line: 183, type: !17022)
!17026 = !DILocalVariable(name: "ticks", scope: !17019, file: !2495, line: 185, type: !1688)
!17027 = !DILocalVariable(name: "__i", scope: !17028, file: !2495, line: 187, type: !16706)
!17028 = distinct !DILexicalBlock(scope: !17019, file: !2495, line: 187, column: 2)
!17029 = !DILocalVariable(name: "__key", scope: !17028, file: !2495, line: 187, type: !16706)
!17030 = !DILocation(line: 0, scope: !17019)
!17031 = !DILocation(line: 0, scope: !17028)
!17032 = !DILocation(line: 0, scope: !16728, inlinedAt: !17033)
!17033 = distinct !DILocation(line: 187, column: 2, scope: !17028)
!17034 = !DILocation(line: 55, column: 2, scope: !16737, inlinedAt: !17035)
!17035 = distinct !DILocation(line: 145, column: 10, scope: !16728, inlinedAt: !17033)
!17036 = !DILocation(line: 0, scope: !16737, inlinedAt: !17035)
!17037 = !DILocation(line: 188, column: 11, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17039, file: !2495, line: 187, column: 24)
!17039 = distinct !DILexicalBlock(scope: !17028, file: !2495, line: 187, column: 2)
!17040 = !DILocation(line: 0, scope: !16796, inlinedAt: !17041)
!17041 = distinct !DILocation(line: 187, column: 2, scope: !17039)
!17042 = !DILocation(line: 0, scope: !16804, inlinedAt: !17043)
!17043 = distinct !DILocation(line: 215, column: 2, scope: !16796, inlinedAt: !17041)
!17044 = !DILocation(line: 95, column: 2, scope: !16804, inlinedAt: !17043)
!17045 = !DILocation(line: 191, column: 2, scope: !17019)
!17046 = distinct !DISubprogram(name: "timeout_rem", scope: !2495, file: !2495, line: 165, type: !17020, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17047)
!17047 = !{!17048, !17049, !17050}
!17048 = !DILocalVariable(name: "timeout", arg: 1, scope: !17046, file: !2495, line: 165, type: !17022)
!17049 = !DILocalVariable(name: "ticks", scope: !17046, file: !2495, line: 167, type: !1688)
!17050 = !DILocalVariable(name: "t", scope: !17051, file: !2495, line: 173, type: !2468)
!17051 = distinct !DILexicalBlock(scope: !17046, file: !2495, line: 173, column: 2)
!17052 = !DILocation(line: 0, scope: !17046)
!17053 = !DILocation(line: 169, column: 6, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !17046, file: !2495, line: 169, column: 6)
!17055 = !DILocation(line: 169, column: 6, scope: !17046)
!17056 = !DILocation(line: 173, column: 28, scope: !17051)
!17057 = !DILocation(line: 0, scope: !17051)
!17058 = !DILocation(line: 173, column: 39, scope: !17059)
!17059 = distinct !DILexicalBlock(scope: !17051, file: !2495, line: 173, column: 2)
!17060 = !DILocation(line: 173, column: 2, scope: !17051)
!17061 = !DILocation(line: 174, column: 15, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17059, file: !2495, line: 173, column: 61)
!17063 = !DILocation(line: 174, column: 9, scope: !17062)
!17064 = !DILocation(line: 175, column: 15, scope: !17065)
!17065 = distinct !DILexicalBlock(scope: !17062, file: !2495, line: 175, column: 7)
!17066 = !DILocation(line: 175, column: 7, scope: !17062)
!17067 = !DILocation(line: 173, column: 52, scope: !17059)
!17068 = distinct !{!17068, !17060, !17069}
!17069 = !DILocation(line: 178, column: 2, scope: !17051)
!17070 = !DILocation(line: 180, column: 17, scope: !17046)
!17071 = !DILocation(line: 180, column: 15, scope: !17046)
!17072 = !DILocation(line: 180, column: 2, scope: !17046)
!17073 = !DILocation(line: 181, column: 1, scope: !17046)
!17074 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14120, file: !14120, line: 35, type: !17075, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17077)
!17075 = !DISubroutineType(types: !17076)
!17076 = !{!166, !17022}
!17077 = !{!17078}
!17078 = !DILocalVariable(name: "to", arg: 1, scope: !17074, file: !14120, line: 35, type: !17022)
!17079 = !DILocation(line: 0, scope: !17074)
!17080 = !DILocation(line: 37, column: 35, scope: !17074)
!17081 = !DILocation(line: 37, column: 10, scope: !17074)
!17082 = !DILocation(line: 37, column: 9, scope: !17074)
!17083 = !DILocation(line: 37, column: 2, scope: !17074)
!17084 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2495, file: !2495, line: 194, type: !17020, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17085)
!17085 = !{!17086, !17087, !17088, !17090}
!17086 = !DILocalVariable(name: "timeout", arg: 1, scope: !17084, file: !2495, line: 194, type: !17022)
!17087 = !DILocalVariable(name: "ticks", scope: !17084, file: !2495, line: 196, type: !1688)
!17088 = !DILocalVariable(name: "__i", scope: !17089, file: !2495, line: 198, type: !16706)
!17089 = distinct !DILexicalBlock(scope: !17084, file: !2495, line: 198, column: 2)
!17090 = !DILocalVariable(name: "__key", scope: !17089, file: !2495, line: 198, type: !16706)
!17091 = !DILocation(line: 0, scope: !17084)
!17092 = !DILocation(line: 0, scope: !17089)
!17093 = !DILocation(line: 0, scope: !16728, inlinedAt: !17094)
!17094 = distinct !DILocation(line: 198, column: 2, scope: !17089)
!17095 = !DILocation(line: 55, column: 2, scope: !16737, inlinedAt: !17096)
!17096 = distinct !DILocation(line: 145, column: 10, scope: !16728, inlinedAt: !17094)
!17097 = !DILocation(line: 0, scope: !16737, inlinedAt: !17096)
!17098 = !DILocation(line: 199, column: 11, scope: !17099)
!17099 = distinct !DILexicalBlock(scope: !17100, file: !2495, line: 198, column: 24)
!17100 = distinct !DILexicalBlock(scope: !17089, file: !2495, line: 198, column: 2)
!17101 = !DILocation(line: 199, column: 23, scope: !17099)
!17102 = !DILocation(line: 0, scope: !16796, inlinedAt: !17103)
!17103 = distinct !DILocation(line: 198, column: 2, scope: !17100)
!17104 = !DILocation(line: 0, scope: !16804, inlinedAt: !17105)
!17105 = distinct !DILocation(line: 215, column: 2, scope: !16796, inlinedAt: !17103)
!17106 = !DILocation(line: 95, column: 2, scope: !16804, inlinedAt: !17105)
!17107 = !DILocation(line: 199, column: 21, scope: !17099)
!17108 = !DILocation(line: 202, column: 2, scope: !17084)
!17109 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2495, file: !2495, line: 205, type: !16812, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17110)
!17110 = !{!17111, !17112, !17114}
!17111 = !DILocalVariable(name: "ret", scope: !17109, file: !2495, line: 207, type: !344)
!17112 = !DILocalVariable(name: "__i", scope: !17113, file: !2495, line: 209, type: !16706)
!17113 = distinct !DILexicalBlock(scope: !17109, file: !2495, line: 209, column: 2)
!17114 = !DILocalVariable(name: "__key", scope: !17113, file: !2495, line: 209, type: !16706)
!17115 = !DILocation(line: 0, scope: !17109)
!17116 = !DILocation(line: 0, scope: !17113)
!17117 = !DILocation(line: 0, scope: !16728, inlinedAt: !17118)
!17118 = distinct !DILocation(line: 209, column: 2, scope: !17113)
!17119 = !DILocation(line: 55, column: 2, scope: !16737, inlinedAt: !17120)
!17120 = distinct !DILocation(line: 145, column: 10, scope: !16728, inlinedAt: !17118)
!17121 = !DILocation(line: 0, scope: !16737, inlinedAt: !17120)
!17122 = !DILocation(line: 210, column: 9, scope: !17123)
!17123 = distinct !DILexicalBlock(scope: !17124, file: !2495, line: 209, column: 24)
!17124 = distinct !DILexicalBlock(scope: !17113, file: !2495, line: 209, column: 2)
!17125 = !DILocation(line: 0, scope: !16796, inlinedAt: !17126)
!17126 = distinct !DILocation(line: 209, column: 2, scope: !17124)
!17127 = !DILocation(line: 0, scope: !16804, inlinedAt: !17128)
!17128 = distinct !DILocation(line: 215, column: 2, scope: !16796, inlinedAt: !17126)
!17129 = !DILocation(line: 95, column: 2, scope: !16804, inlinedAt: !17128)
!17130 = !DILocation(line: 212, column: 2, scope: !17109)
!17131 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2495, file: !2495, line: 215, type: !11732, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17132)
!17132 = !{!17133, !17134, !17135, !17137, !17138, !17141, !17142}
!17133 = !DILocalVariable(name: "ticks", arg: 1, scope: !17131, file: !2495, line: 215, type: !344)
!17134 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17131, file: !2495, line: 215, type: !166)
!17135 = !DILocalVariable(name: "__i", scope: !17136, file: !2495, line: 217, type: !16706)
!17136 = distinct !DILexicalBlock(scope: !17131, file: !2495, line: 217, column: 2)
!17137 = !DILocalVariable(name: "__key", scope: !17136, file: !2495, line: 217, type: !16706)
!17138 = !DILocalVariable(name: "next_to", scope: !17139, file: !2495, line: 218, type: !103)
!17139 = distinct !DILexicalBlock(scope: !17140, file: !2495, line: 217, column: 24)
!17140 = distinct !DILexicalBlock(scope: !17136, file: !2495, line: 217, column: 2)
!17141 = !DILocalVariable(name: "sooner", scope: !17139, file: !2495, line: 219, type: !166)
!17142 = !DILocalVariable(name: "imminent", scope: !17139, file: !2495, line: 221, type: !166)
!17143 = !DILocation(line: 0, scope: !17131)
!17144 = !DILocation(line: 0, scope: !17136)
!17145 = !DILocation(line: 0, scope: !16728, inlinedAt: !17146)
!17146 = distinct !DILocation(line: 217, column: 2, scope: !17136)
!17147 = !DILocation(line: 55, column: 2, scope: !16737, inlinedAt: !17148)
!17148 = distinct !DILocation(line: 145, column: 10, scope: !16728, inlinedAt: !17146)
!17149 = !DILocation(line: 0, scope: !16737, inlinedAt: !17148)
!17150 = !DILocation(line: 218, column: 17, scope: !17139)
!17151 = !DILocation(line: 0, scope: !17139)
!17152 = !DILocation(line: 221, column: 27, scope: !17139)
!17153 = !DILocation(line: 233, column: 17, scope: !17154)
!17154 = distinct !DILexicalBlock(scope: !17139, file: !2495, line: 233, column: 7)
!17155 = !DILocation(line: 234, column: 26, scope: !17156)
!17156 = distinct !DILexicalBlock(scope: !17154, file: !2495, line: 233, column: 56)
!17157 = !DILocation(line: 234, column: 4, scope: !17156)
!17158 = !DILocation(line: 235, column: 3, scope: !17156)
!17159 = !DILocation(line: 0, scope: !16796, inlinedAt: !17160)
!17160 = distinct !DILocation(line: 217, column: 2, scope: !17140)
!17161 = !DILocation(line: 0, scope: !16804, inlinedAt: !17162)
!17162 = distinct !DILocation(line: 215, column: 2, scope: !16796, inlinedAt: !17160)
!17163 = !DILocation(line: 95, column: 2, scope: !16804, inlinedAt: !17162)
!17164 = !DILocation(line: 237, column: 1, scope: !17131)
!17165 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2495, file: !2495, line: 239, type: !17166, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17168)
!17166 = !DISubroutineType(types: !17167)
!17167 = !{null, !344}
!17168 = !{!17169, !17170, !17171, !17173}
!17169 = !DILocalVariable(name: "ticks", arg: 1, scope: !17165, file: !2495, line: 239, type: !344)
!17170 = !DILocalVariable(name: "key", scope: !17165, file: !2495, line: 245, type: !16706)
!17171 = !DILocalVariable(name: "t", scope: !17172, file: !2495, line: 262, type: !2468)
!17172 = distinct !DILexicalBlock(scope: !17165, file: !2495, line: 261, column: 67)
!17173 = !DILocalVariable(name: "dt", scope: !17172, file: !2495, line: 263, type: !103)
!17174 = !DILocation(line: 0, scope: !17165)
!17175 = !DILocation(line: 242, column: 2, scope: !17165)
!17176 = !DILocation(line: 0, scope: !16728, inlinedAt: !17177)
!17177 = distinct !DILocation(line: 245, column: 25, scope: !17165)
!17178 = !DILocation(line: 55, column: 2, scope: !16737, inlinedAt: !17179)
!17179 = distinct !DILocation(line: 145, column: 10, scope: !16728, inlinedAt: !17177)
!17180 = !DILocation(line: 0, scope: !16737, inlinedAt: !17179)
!17181 = !DILocation(line: 261, column: 9, scope: !17165)
!17182 = !DILocation(line: 261, column: 17, scope: !17165)
!17183 = !DILocation(line: 261, column: 25, scope: !17165)
!17184 = !DILocation(line: 261, column: 37, scope: !17165)
!17185 = !DILocation(line: 261, column: 47, scope: !17165)
!17186 = !DILocation(line: 261, column: 44, scope: !17165)
!17187 = !DILocation(line: 261, column: 2, scope: !17165)
!17188 = !DILocation(line: 0, scope: !17172)
!17189 = !DILocation(line: 263, column: 12, scope: !17172)
!17190 = !DILocation(line: 265, column: 16, scope: !17172)
!17191 = !DILocation(line: 265, column: 13, scope: !17172)
!17192 = !DILocation(line: 266, column: 13, scope: !17172)
!17193 = !DILocation(line: 267, column: 3, scope: !17172)
!17194 = !DILocation(line: 0, scope: !16796, inlinedAt: !17195)
!17195 = distinct !DILocation(line: 269, column: 3, scope: !17172)
!17196 = !DILocation(line: 0, scope: !16804, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 215, column: 2, scope: !16796, inlinedAt: !17195)
!17198 = !DILocation(line: 95, column: 2, scope: !16804, inlinedAt: !17197)
!17199 = !DILocation(line: 270, column: 6, scope: !17172)
!17200 = !DILocation(line: 270, column: 3, scope: !17172)
!17201 = !DILocation(line: 0, scope: !16728, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 271, column: 9, scope: !17172)
!17203 = !DILocation(line: 55, column: 2, scope: !16737, inlinedAt: !17204)
!17204 = distinct !DILocation(line: 145, column: 10, scope: !16728, inlinedAt: !17202)
!17205 = !DILocation(line: 0, scope: !16737, inlinedAt: !17204)
!17206 = !DILocation(line: 272, column: 22, scope: !17172)
!17207 = distinct !{!17207, !17187, !17208}
!17208 = !DILocation(line: 273, column: 2, scope: !17165)
!17209 = !DILocation(line: 276, column: 19, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17211, file: !2495, line: 275, column: 23)
!17211 = distinct !DILexicalBlock(scope: !17165, file: !2495, line: 275, column: 6)
!17212 = !DILocation(line: 277, column: 2, scope: !17210)
!17213 = !DILocation(line: 279, column: 15, scope: !17165)
!17214 = !DILocation(line: 279, column: 12, scope: !17165)
!17215 = !DILocation(line: 280, column: 21, scope: !17165)
!17216 = !DILocation(line: 282, column: 24, scope: !17165)
!17217 = !DILocation(line: 282, column: 2, scope: !17165)
!17218 = !DILocation(line: 0, scope: !16796, inlinedAt: !17219)
!17219 = distinct !DILocation(line: 284, column: 2, scope: !17165)
!17220 = !DILocation(line: 0, scope: !16804, inlinedAt: !17221)
!17221 = distinct !DILocation(line: 215, column: 2, scope: !16796, inlinedAt: !17219)
!17222 = !DILocation(line: 95, column: 2, scope: !16804, inlinedAt: !17221)
!17223 = !DILocation(line: 285, column: 1, scope: !17165)
!17224 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2495, file: !2495, line: 287, type: !17225, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17227)
!17225 = !DISubroutineType(types: !17226)
!17226 = !{!432}
!17227 = !{!17228, !17229, !17231}
!17228 = !DILocalVariable(name: "t", scope: !17224, file: !2495, line: 289, type: !1585)
!17229 = !DILocalVariable(name: "__i", scope: !17230, file: !2495, line: 291, type: !16706)
!17230 = distinct !DILexicalBlock(scope: !17224, file: !2495, line: 291, column: 2)
!17231 = !DILocalVariable(name: "__key", scope: !17230, file: !2495, line: 291, type: !16706)
!17232 = !DILocation(line: 0, scope: !17224)
!17233 = !DILocation(line: 0, scope: !17230)
!17234 = !DILocation(line: 0, scope: !16728, inlinedAt: !17235)
!17235 = distinct !DILocation(line: 291, column: 2, scope: !17230)
!17236 = !DILocation(line: 55, column: 2, scope: !16737, inlinedAt: !17237)
!17237 = distinct !DILocation(line: 145, column: 10, scope: !16728, inlinedAt: !17235)
!17238 = !DILocation(line: 0, scope: !16737, inlinedAt: !17237)
!17239 = !DILocation(line: 292, column: 7, scope: !17240)
!17240 = distinct !DILexicalBlock(scope: !17241, file: !2495, line: 291, column: 24)
!17241 = distinct !DILexicalBlock(scope: !17230, file: !2495, line: 291, column: 2)
!17242 = !DILocation(line: 292, column: 19, scope: !17240)
!17243 = !DILocation(line: 0, scope: !16796, inlinedAt: !17244)
!17244 = distinct !DILocation(line: 291, column: 2, scope: !17241)
!17245 = !DILocation(line: 0, scope: !16804, inlinedAt: !17246)
!17246 = distinct !DILocation(line: 215, column: 2, scope: !16796, inlinedAt: !17244)
!17247 = !DILocation(line: 95, column: 2, scope: !16804, inlinedAt: !17246)
!17248 = !DILocation(line: 292, column: 17, scope: !17240)
!17249 = !DILocation(line: 294, column: 2, scope: !17224)
!17250 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2495, file: !2495, line: 297, type: !6890, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!17251 = !DILocation(line: 300, column: 19, scope: !17250)
!17252 = !DILocation(line: 300, column: 9, scope: !17250)
!17253 = !DILocation(line: 300, column: 2, scope: !17250)
!17254 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2495, file: !2495, line: 306, type: !17225, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!17255 = !DILocation(line: 308, column: 9, scope: !17254)
!17256 = !DILocation(line: 308, column: 2, scope: !17254)
!17257 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2495, file: !2495, line: 319, type: !6900, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17258)
!17258 = !{!17259, !17260, !17261, !17262}
!17259 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17257, file: !2495, line: 319, type: !132)
!17260 = !DILocalVariable(name: "start_cycles", scope: !17257, file: !2495, line: 328, type: !132)
!17261 = !DILocalVariable(name: "cycles_to_wait", scope: !17257, file: !2495, line: 331, type: !132)
!17262 = !DILocalVariable(name: "current_cycles", scope: !17263, file: !2495, line: 338, type: !132)
!17263 = distinct !DILexicalBlock(scope: !17264, file: !2495, line: 337, column: 11)
!17264 = distinct !DILexicalBlock(scope: !17265, file: !2495, line: 337, column: 2)
!17265 = distinct !DILexicalBlock(scope: !17257, file: !2495, line: 337, column: 2)
!17266 = !DILocation(line: 0, scope: !17257)
!17267 = !DILocation(line: 322, column: 19, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17257, file: !2495, line: 322, column: 6)
!17269 = !DILocation(line: 322, column: 6, scope: !17257)
!17270 = !DILocation(line: 328, column: 26, scope: !17257)
!17271 = !DILocation(line: 333, column: 43, scope: !17257)
!17272 = !DILocation(line: 337, column: 2, scope: !17257)
!17273 = !DILocation(line: 338, column: 29, scope: !17263)
!17274 = !DILocation(line: 0, scope: !17263)
!17275 = !DILocation(line: 341, column: 23, scope: !17276)
!17276 = distinct !DILexicalBlock(scope: !17263, file: !2495, line: 341, column: 7)
!17277 = !DILocation(line: 341, column: 39, scope: !17276)
!17278 = !DILocation(line: 349, column: 1, scope: !17257)
!17279 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !312, file: !312, line: 1675, type: !6890, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!17280 = !DILocation(line: 1677, column: 9, scope: !17279)
!17281 = !DILocation(line: 1677, column: 2, scope: !17279)
!17282 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17283, file: !17283, line: 24, type: !6890, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !473)
!17283 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17284 = !DILocation(line: 26, column: 9, scope: !17282)
!17285 = !DILocation(line: 26, column: 2, scope: !17282)
!17286 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2495, file: !2495, line: 364, type: !17287, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !17289)
!17287 = !DISubroutineType(types: !17288)
!17288 = !{!1585, !16696}
!17289 = !{!17290, !17291}
!17290 = !DILocalVariable(name: "timeout", arg: 1, scope: !17286, file: !2495, line: 364, type: !16696)
!17291 = !DILocalVariable(name: "dt", scope: !17286, file: !2495, line: 366, type: !1688)
!17292 = !DILocation(line: 0, scope: !17286)
!17293 = !DILocation(line: 368, column: 6, scope: !17286)
!17294 = !DILocation(line: 371, column: 10, scope: !17295)
!17295 = distinct !DILexicalBlock(scope: !17296, file: !2495, line: 370, column: 47)
!17296 = distinct !DILexicalBlock(scope: !17297, file: !2495, line: 370, column: 13)
!17297 = distinct !DILexicalBlock(scope: !17286, file: !2495, line: 368, column: 6)
!17298 = !DILocation(line: 371, column: 3, scope: !17295)
!17299 = !DILocation(line: 376, column: 58, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17301, file: !2495, line: 376, column: 7)
!17301 = distinct !DILexicalBlock(scope: !17296, file: !2495, line: 372, column: 9)
!17302 = !DILocation(line: 376, column: 7, scope: !17301)
!17303 = !DILocation(line: 376, column: 43, scope: !17300)
!17304 = !DILocation(line: 377, column: 4, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17300, file: !2495, line: 376, column: 64)
!17306 = !DILocation(line: 379, column: 10, scope: !17301)
!17307 = !DILocation(line: 379, column: 33, scope: !17301)
!17308 = !DILocation(line: 379, column: 31, scope: !17301)
!17309 = !DILocation(line: 379, column: 3, scope: !17301)
!17310 = !DILocation(line: 0, scope: !17297)
!17311 = !DILocation(line: 381, column: 1, scope: !17286)
!17312 = distinct !DISubprogram(name: "boot_banner", scope: !17313, file: !17313, line: 26, type: !3232, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3218, retainedNodes: !473)
!17313 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17314 = !DILocation(line: 34, column: 2, scope: !17312)
!17315 = !DILocation(line: 36, column: 1, scope: !17312)
!17316 = distinct !DISubprogram(name: "statics_init", scope: !2523, file: !2523, line: 21, type: !2529, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !17317)
!17317 = !{!17318, !17319}
!17318 = !DILocalVariable(name: "unused", arg: 1, scope: !17316, file: !2523, line: 21, type: !2531)
!17319 = !DILocalVariable(name: "h", scope: !17320, file: !2523, line: 24, type: !17321)
!17320 = distinct !DILexicalBlock(scope: !17316, file: !2523, line: 24, column: 2)
!17321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17322, size: 32)
!17322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !312, line: 5073, size: 160, elements: !17323)
!17323 = !{!17324, !17330, !17336}
!17324 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17322, file: !312, line: 5074, baseType: !17325, size: 96)
!17325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !462, line: 56, size: 96, elements: !17326)
!17326 = !{!17327, !17328, !17329}
!17327 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17325, file: !462, line: 57, baseType: !465, size: 32)
!17328 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17325, file: !462, line: 58, baseType: !102, size: 32, offset: 32)
!17329 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17325, file: !462, line: 59, baseType: !356, size: 32, offset: 64)
!17330 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17322, file: !312, line: 5075, baseType: !17331, size: 64, offset: 96)
!17331 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !316, line: 233, baseType: !17332)
!17332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !316, line: 231, size: 64, elements: !17333)
!17333 = !{!17334}
!17334 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17332, file: !316, line: 232, baseType: !17335, size: 64)
!17335 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !321, line: 48, baseType: !2509)
!17336 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17322, file: !312, line: 5076, baseType: !17337, offset: 160)
!17337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !472, line: 43, elements: !473)
!17338 = !DILocation(line: 0, scope: !17316)
!17339 = !DILocation(line: 0, scope: !17320)
!17340 = !DILocation(line: 24, column: 2, scope: !17320)
!17341 = !DILocation(line: 52, column: 2, scope: !17316)
!17342 = !DILocation(line: 49, column: 27, scope: !17343)
!17343 = distinct !DILexicalBlock(scope: !17344, file: !2523, line: 48, column: 3)
!17344 = distinct !DILexicalBlock(scope: !17345, file: !2523, line: 24, column: 36)
!17345 = distinct !DILexicalBlock(scope: !17320, file: !2523, line: 24, column: 2)
!17346 = !DILocation(line: 49, column: 45, scope: !17343)
!17347 = !DILocation(line: 49, column: 4, scope: !17343)
!17348 = !DILocation(line: 24, column: 2, scope: !17345)
!17349 = !DILocation(line: 24, column: 2, scope: !17350)
!17350 = distinct !DILexicalBlock(scope: !17345, file: !2523, line: 24, column: 2)
!17351 = distinct !{!17351, !17340, !17352}
!17352 = !DILocation(line: 51, column: 2, scope: !17320)
!17353 = distinct !DISubprogram(name: "k_heap_init", scope: !2523, file: !2523, line: 13, type: !17354, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !17356)
!17354 = !DISubroutineType(types: !17355)
!17355 = !{null, !17321, !102, !356}
!17356 = !{!17357, !17358, !17359}
!17357 = !DILocalVariable(name: "h", arg: 1, scope: !17353, file: !2523, line: 13, type: !17321)
!17358 = !DILocalVariable(name: "mem", arg: 2, scope: !17353, file: !2523, line: 13, type: !102)
!17359 = !DILocalVariable(name: "bytes", arg: 3, scope: !17353, file: !2523, line: 13, type: !356)
!17360 = !DILocation(line: 0, scope: !17353)
!17361 = !DILocation(line: 15, column: 19, scope: !17353)
!17362 = !DILocation(line: 15, column: 2, scope: !17353)
!17363 = !DILocation(line: 16, column: 20, scope: !17353)
!17364 = !DILocation(line: 16, column: 2, scope: !17353)
!17365 = !DILocation(line: 19, column: 1, scope: !17353)
!17366 = distinct !DISubprogram(name: "z_waitq_init", scope: !14052, file: !14052, line: 47, type: !17367, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !17370)
!17367 = !DISubroutineType(types: !17368)
!17368 = !{null, !17369}
!17369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17331, size: 32)
!17370 = !{!17371}
!17371 = !DILocalVariable(name: "w", arg: 1, scope: !17366, file: !14052, line: 47, type: !17369)
!17372 = !DILocation(line: 0, scope: !17366)
!17373 = !DILocation(line: 49, column: 21, scope: !17366)
!17374 = !DILocation(line: 49, column: 2, scope: !17366)
!17375 = !DILocation(line: 50, column: 1, scope: !17366)
!17376 = distinct !DISubprogram(name: "sys_dlist_init", scope: !321, file: !321, line: 197, type: !17377, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !17380)
!17377 = !DISubroutineType(types: !17378)
!17378 = !{null, !17379}
!17379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17335, size: 32)
!17380 = !{!17381}
!17381 = !DILocalVariable(name: "list", arg: 1, scope: !17376, file: !321, line: 197, type: !17379)
!17382 = !DILocation(line: 0, scope: !17376)
!17383 = !DILocation(line: 199, column: 8, scope: !17376)
!17384 = !DILocation(line: 199, column: 13, scope: !17376)
!17385 = !DILocation(line: 200, column: 8, scope: !17376)
!17386 = !DILocation(line: 200, column: 13, scope: !17376)
!17387 = !DILocation(line: 201, column: 1, scope: !17376)
!17388 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2523, file: !2523, line: 64, type: !17389, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !17395)
!17389 = !DISubroutineType(types: !17390)
!17390 = !{!102, !17321, !356, !356, !17391}
!17391 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1689, line: 67, baseType: !17392)
!17392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1689, line: 65, size: 64, elements: !17393)
!17393 = !{!17394}
!17394 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17392, file: !1689, line: 66, baseType: !1688, size: 64)
!17395 = !{!17396, !17397, !17398, !17399, !17400, !17401, !17402, !17403, !17408}
!17396 = !DILocalVariable(name: "h", arg: 1, scope: !17388, file: !2523, line: 64, type: !17321)
!17397 = !DILocalVariable(name: "align", arg: 2, scope: !17388, file: !2523, line: 64, type: !356)
!17398 = !DILocalVariable(name: "bytes", arg: 3, scope: !17388, file: !2523, line: 64, type: !356)
!17399 = !DILocalVariable(name: "timeout", arg: 4, scope: !17388, file: !2523, line: 65, type: !17391)
!17400 = !DILocalVariable(name: "now", scope: !17388, file: !2523, line: 67, type: !432)
!17401 = !DILocalVariable(name: "end", scope: !17388, file: !2523, line: 67, type: !432)
!17402 = !DILocalVariable(name: "ret", scope: !17388, file: !2523, line: 68, type: !102)
!17403 = !DILocalVariable(name: "key", scope: !17388, file: !2523, line: 72, type: !17404)
!17404 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !472, line: 106, baseType: !17405)
!17405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !472, line: 32, size: 32, elements: !17406)
!17406 = !{!17407}
!17407 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17405, file: !472, line: 33, baseType: !103, size: 32)
!17408 = !DILocalVariable(name: "blocked_alloc", scope: !17388, file: !2523, line: 78, type: !166)
!17409 = !DILocation(line: 0, scope: !17388)
!17410 = !DILocation(line: 67, column: 21, scope: !17388)
!17411 = !DILocation(line: 70, column: 8, scope: !17388)
!17412 = !DILocation(line: 72, column: 41, scope: !17388)
!17413 = !DILocalVariable(name: "l", arg: 1, scope: !17414, file: !472, line: 136, type: !17417)
!17414 = distinct !DISubprogram(name: "k_spin_lock", scope: !472, file: !472, line: 136, type: !17415, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !17418)
!17415 = !DISubroutineType(types: !17416)
!17416 = !{!17404, !17417}
!17417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17337, size: 32)
!17418 = !{!17413, !17419}
!17419 = !DILocalVariable(name: "k", scope: !17414, file: !472, line: 139, type: !17404)
!17420 = !DILocation(line: 0, scope: !17414, inlinedAt: !17421)
!17421 = distinct !DILocation(line: 72, column: 25, scope: !17388)
!17422 = !DILocation(line: 55, column: 2, scope: !17423, inlinedAt: !17427)
!17423 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5789, file: !5789, line: 42, type: !5790, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !17424)
!17424 = !{!17425, !17426}
!17425 = !DILocalVariable(name: "key", scope: !17423, file: !5789, line: 44, type: !32)
!17426 = !DILocalVariable(name: "tmp", scope: !17423, file: !5789, line: 53, type: !32)
!17427 = distinct !DILocation(line: 145, column: 10, scope: !17414, inlinedAt: !17421)
!17428 = !{i64 1948890}
!17429 = !DILocation(line: 0, scope: !17423, inlinedAt: !17427)
!17430 = !DILocation(line: 81, column: 9, scope: !17431)
!17431 = distinct !DILexicalBlock(scope: !17388, file: !2523, line: 80, column: 22)
!17432 = !DILocation(line: 83, column: 9, scope: !17431)
!17433 = !DILocation(line: 85, column: 12, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17431, file: !2523, line: 84, column: 7)
!17435 = !DILocation(line: 85, column: 21, scope: !17434)
!17436 = !DILocation(line: 85, column: 30, scope: !17434)
!17437 = !DILocation(line: 85, column: 37, scope: !17434)
!17438 = !DILocation(line: 84, column: 7, scope: !17431)
!17439 = !DILocation(line: 99, column: 10, scope: !17431)
!17440 = !DILocation(line: 0, scope: !17414, inlinedAt: !17441)
!17441 = distinct !DILocation(line: 101, column: 9, scope: !17431)
!17442 = !DILocation(line: 55, column: 2, scope: !17423, inlinedAt: !17443)
!17443 = distinct !DILocation(line: 145, column: 10, scope: !17414, inlinedAt: !17441)
!17444 = !DILocation(line: 0, scope: !17423, inlinedAt: !17443)
!17445 = distinct !{!17445, !17446, !17447}
!17446 = !DILocation(line: 80, column: 2, scope: !17388)
!17447 = !DILocation(line: 102, column: 2, scope: !17388)
!17448 = !DILocalVariable(name: "key", arg: 2, scope: !17449, file: !472, line: 190, type: !17404)
!17449 = distinct !DISubprogram(name: "k_spin_unlock", scope: !472, file: !472, line: 189, type: !17450, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !17452)
!17450 = !DISubroutineType(types: !17451)
!17451 = !{null, !17417, !17404}
!17452 = !{!17453, !17448}
!17453 = !DILocalVariable(name: "l", arg: 1, scope: !17449, file: !472, line: 189, type: !17417)
!17454 = !DILocation(line: 0, scope: !17449, inlinedAt: !17455)
!17455 = distinct !DILocation(line: 106, column: 2, scope: !17388)
!17456 = !DILocalVariable(name: "key", arg: 1, scope: !17457, file: !5789, line: 84, type: !32)
!17457 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5789, file: !5789, line: 84, type: !5800, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !17458)
!17458 = !{!17456}
!17459 = !DILocation(line: 0, scope: !17457, inlinedAt: !17460)
!17460 = distinct !DILocation(line: 215, column: 2, scope: !17449, inlinedAt: !17455)
!17461 = !DILocation(line: 95, column: 2, scope: !17457, inlinedAt: !17460)
!17462 = !{i64 1949707}
!17463 = !DILocation(line: 107, column: 2, scope: !17388)
!17464 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2523, file: !2523, line: 110, type: !17465, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !17467)
!17465 = !DISubroutineType(types: !17466)
!17466 = !{!102, !17321, !356, !17391}
!17467 = !{!17468, !17469, !17470, !17471}
!17468 = !DILocalVariable(name: "h", arg: 1, scope: !17464, file: !2523, line: 110, type: !17321)
!17469 = !DILocalVariable(name: "bytes", arg: 2, scope: !17464, file: !2523, line: 110, type: !356)
!17470 = !DILocalVariable(name: "timeout", arg: 3, scope: !17464, file: !2523, line: 110, type: !17391)
!17471 = !DILocalVariable(name: "ret", scope: !17464, file: !2523, line: 114, type: !102)
!17472 = !DILocation(line: 0, scope: !17464)
!17473 = !DILocation(line: 114, column: 14, scope: !17464)
!17474 = !DILocation(line: 118, column: 2, scope: !17464)
!17475 = distinct !DISubprogram(name: "k_heap_free", scope: !2523, file: !2523, line: 121, type: !17476, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2504, retainedNodes: !17478)
!17476 = !DISubroutineType(types: !17477)
!17477 = !{null, !17321, !102}
!17478 = !{!17479, !17480, !17481}
!17479 = !DILocalVariable(name: "h", arg: 1, scope: !17475, file: !2523, line: 121, type: !17321)
!17480 = !DILocalVariable(name: "mem", arg: 2, scope: !17475, file: !2523, line: 121, type: !102)
!17481 = !DILocalVariable(name: "key", scope: !17475, file: !2523, line: 123, type: !17404)
!17482 = !DILocation(line: 0, scope: !17475)
!17483 = !DILocation(line: 0, scope: !17414, inlinedAt: !17484)
!17484 = distinct !DILocation(line: 123, column: 25, scope: !17475)
!17485 = !DILocation(line: 55, column: 2, scope: !17423, inlinedAt: !17486)
!17486 = distinct !DILocation(line: 145, column: 10, scope: !17414, inlinedAt: !17484)
!17487 = !DILocation(line: 0, scope: !17423, inlinedAt: !17486)
!17488 = !DILocation(line: 125, column: 20, scope: !17475)
!17489 = !DILocation(line: 125, column: 2, scope: !17475)
!17490 = !DILocation(line: 128, column: 60, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17475, file: !2523, line: 128, column: 6)
!17492 = !DILocation(line: 128, column: 43, scope: !17491)
!17493 = !DILocation(line: 128, column: 68, scope: !17491)
!17494 = !DILocation(line: 128, column: 6, scope: !17475)
!17495 = !DILocation(line: 123, column: 41, scope: !17475)
!17496 = !DILocation(line: 129, column: 3, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17491, file: !2523, line: 128, column: 74)
!17498 = !DILocation(line: 130, column: 2, scope: !17497)
!17499 = !DILocation(line: 0, scope: !17449, inlinedAt: !17500)
!17500 = distinct !DILocation(line: 131, column: 3, scope: !17501)
!17501 = distinct !DILexicalBlock(scope: !17491, file: !2523, line: 130, column: 9)
!17502 = !DILocation(line: 0, scope: !17457, inlinedAt: !17503)
!17503 = distinct !DILocation(line: 215, column: 2, scope: !17449, inlinedAt: !17500)
!17504 = !DILocation(line: 95, column: 2, scope: !17457, inlinedAt: !17503)
!17505 = !DILocation(line: 133, column: 1, scope: !17475)
